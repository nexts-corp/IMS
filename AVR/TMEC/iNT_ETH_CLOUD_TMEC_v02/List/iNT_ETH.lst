
AVRASM ver. 2.1.30  D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm Wed May 27 15:01:47 2015

D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1110): warning: Register r5 already defined by the .DEF directive
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1111): warning: Register r4 already defined by the .DEF directive
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1112): warning: Register r7 already defined by the .DEF directive
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1113): warning: Register r8 already defined by the .DEF directive
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1114): warning: Register r10 already defined by the .DEF directive
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1115): warning: Register r12 already defined by the .DEF directive
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1116): warning: Register r6 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V2.05.3 Standard
                 ;(C) Copyright 1998-2011 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Chip type                : ATmega2560
                 ;Program type             : Application
                 ;Clock frequency          : 8.000000 MHz
                 ;Memory model             : Large
                 ;Optimize for             : Size
                 ;(s)printf features       : float, width, precision
                 ;(s)scanf features        : long, width
                 ;External RAM size        : 0
                 ;Data Stack size          : 2800 byte(s)
                 ;Heap size                : 1142 byte(s)
                 ;Promote 'char' to 'int'  : Yes
                 ;'char' is unsigned       : Yes
                 ;8 bit enums              : Yes
                 ;Global 'const' stored in FLASH     : Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions         : On
                 ;Smart register allocation          : On
                 ;Automatic register allocation      : On
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega2560
                 	#pragma AVRPART MEMORY PROG_FLASH 262144
                 	#pragma AVRPART MEMORY EEPROM 4096
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 8703
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x200
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU EECR=0x1F
                 	.EQU EEDR=0x20
                 	.EQU EEARL=0x21
                 	.EQU EEARH=0x22
                 	.EQU SPSR=0x2D
                 	.EQU SPDR=0x2E
                 	.EQU SMCR=0x33
                 	.EQU MCUSR=0x34
                 	.EQU MCUCR=0x35
                 	.EQU WDTCSR=0x60
                 	.EQU UCSR0A=0xC0
                 	.EQU UDR0=0xC6
                 	.EQU RAMPZ=0x3B
                 	.EQU EIND=0x3C
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 	.EQU XMCRA=0x74
                 	.EQU XMCRB=0x75
                 	.EQU GPIOR0=0x1E
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0200
                 	.EQU __SRAM_END=0x21FF
                 	.EQU __DSTACK_SIZE=0x0AF0
                 	.EQU __HEAP_SIZE=0x0476
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __GETBRPF
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETBRPF_INC
                 	OUT  RAMPZ,R22
                 	ELPM R@0,Z+
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FX
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	CALL __GETD1PF
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	OUT  EIND,R22
                 	EICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R26,SPL
                 	IN   R27,SPH
                 	ADIW R26,@0+1
                 	LD   R30,X+
                 	LD   R31,X+
                 	LD   R22,X
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _rxPackageIndex3=R5
                 	.DEF _rxPackageIndexCount3=R4
                 	.DEF _ETH_waitQCount=R7
                 	.DEF _last_sess_id=R8
                 	.DEF _last_wr_dataQ=R10
                 	.DEF _last_rd_dataQ=R12
                 	.DEF _muteAlarm=R6
                 
                 ;GPIOR0 INITIALIZATION VALUE
                 	.EQU __GPIOR0_INIT=0x00
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 3468 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0000 	JMP  0x00
000018 940c 40b6 	JMP  _wdt_timeout_isr
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 40c7 	JMP  _timer2_ovf_isr
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 40c3 	JMP  _timer1_ovf_isr
00002a 940c 0000 	JMP  0x00
00002c 940c 0000 	JMP  0x00
00002e 940c 40bf 	JMP  _timer0_ovf_isr
000030 940c 0000 	JMP  0x00
000032 940c 3e62 	JMP  _usart0_rx_isr
000034 940c 0000 	JMP  0x00
000036 940c 0000 	JMP  0x00
000038 940c 0000 	JMP  0x00
00003a 940c 0000 	JMP  0x00
00003c 940c 0000 	JMP  0x00
00003e 940c 0000 	JMP  0x00
000040 940c 0000 	JMP  0x00
000042 940c 0000 	JMP  0x00
000044 940c 0000 	JMP  0x00
000046 940c 40e0 	JMP  _timer3_ovf_isr
000048 940c 3f84 	JMP  _usart1_rx_isr
00004a 940c 0000 	JMP  0x00
00004c 940c 0000 	JMP  0x00
00004e 940c 0000 	JMP  0x00
000050 940c 0000 	JMP  0x00
000052 940c 0000 	JMP  0x00
000054 940c 0000 	JMP  0x00
000056 940c 0000 	JMP  0x00
000058 940c 0000 	JMP  0x00
00005a 940c 40fc 	JMP  _timer4_ovf_isr
00005c 940c 0000 	JMP  0x00
00005e 940c 0000 	JMP  0x00
000060 940c 0000 	JMP  0x00
000062 940c 0000 	JMP  0x00
000064 940c 0000 	JMP  0x00
000066 940c 3f90 	JMP  _usart2_rx_isr
000068 940c 0000 	JMP  0x00
00006a 940c 0000 	JMP  0x00
00006c 940c 3fae 	JMP  _usart3_rx_isr
00006e 940c 0000 	JMP  0x00
000070 940c 0000 	JMP  0x00
                 
                 _FIRMWARE_VERSION:
000072 4e69
000073 2d54
000074 5445
000075 2d48      	.DB  0x69,0x4E,0x54,0x2D,0x45,0x54,0x48,0x2D
000076 2e30
000077 3432
000078 0062      	.DB  0x30,0x2E,0x32,0x34,0x62,0x0
                 _tempTable:
000079 0000
00007a c2a0
00007b 0000
00007c c28c      	.DB  0x0,0x0,0xA0,0xC2,0x0,0x0,0x8C,0xC2
00007d 0000
00007e c270
00007f 0000
000080 c248      	.DB  0x0,0x0,0x70,0xC2,0x0,0x0,0x48,0xC2
000081 0000
000082 c220
000083 0000
000084 c1f0      	.DB  0x0,0x0,0x20,0xC2,0x0,0x0,0xF0,0xC1
000085 0000
000086 c1a0
000087 0000
000088 c120      	.DB  0x0,0x0,0xA0,0xC1,0x0,0x0,0x20,0xC1
000089 0000
00008a 0000
00008b 0000
00008c 4120      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x20,0x41
00008d 0000
00008e 41a0
00008f 0000
000090 41f0      	.DB  0x0,0x0,0xA0,0x41,0x0,0x0,0xF0,0x41
000091 0000
000092 4220
000093 0000
000094 4248      	.DB  0x0,0x0,0x20,0x42,0x0,0x0,0x48,0x42
000095 0000
000096 4270      	.DB  0x0,0x0,0x70,0x42
                 _adcTable:
000097 6333
000098 4391
000099 85fa
00009a 439a      	.DB  0x33,0x63,0x91,0x43,0xFA,0x85,0x9A,0x43
00009b 5c05
00009c 43a3
00009d e979
00009e 43ab      	.DB  0x5,0x5C,0xA3,0x43,0x79,0xE9,0xAB,0x43
00009f 3237
0000a0 43b4
0000a1 39a0
0000a2 43bc      	.DB  0x37,0x32,0xB4,0x43,0xA0,0x39,0xBC,0x43
0000a3 030f
0000a4 43c4
0000a5 917f
0000a6 43cb      	.DB  0xF,0x3,0xC4,0x43,0x7F,0x91,0xCB,0x43
0000a7 e7ab
0000a8 43d2
0000a9 0810
0000aa 43da      	.DB  0xAB,0xE7,0xD2,0x43,0x10,0x8,0xDA,0x43
0000ab f4fb
0000ac 43e0
0000ad b08d
0000ae 43e7      	.DB  0xFB,0xF4,0xE0,0x43,0x8D,0xB0,0xE7,0x43
0000af 3cc6
0000b0 43ee
0000b1 9b99
0000b2 43f4      	.DB  0xC6,0x3C,0xEE,0x43,0x99,0x9B,0xF4,0x43
0000b3 ceb5
0000b4 43fa      	.DB  0xB5,0xCE,0xFA,0x43
                 _error_msg:
0000b5 4ce6
0000b6 0000
0000b7 4ce7
0000b8 0000      	.DB  LOW(_0x260000*2),HIGH(_0x260000*2),BYTE3(_0x260000*2),BYTE4(_0x260000*2),LOW(_0x260000*2+1),HIGH(_0x260000*2+1),BYTE3(_0x260000*2+1),BYTE4(_0x260000*2+1)
0000b9 4cf3
0000ba 0000
0000bb 4cfe
0000bc 0000      	.DB  LOW(_0x260000*2+13),HIGH(_0x260000*2+13),BYTE3(_0x260000*2+13),BYTE4(_0x260000*2+13),LOW(_0x260000*2+24),HIGH(_0x260000*2+24),BYTE3(_0x260000*2+24),BYTE4(_0x260000*2+24)
0000bd 4d0b
0000be 0000
0000bf 4d16
0000c0 0000      	.DB  LOW(_0x260000*2+37),HIGH(_0x260000*2+37),BYTE3(_0x260000*2+37),BYTE4(_0x260000*2+37),LOW(_0x260000*2+48),HIGH(_0x260000*2+48),BYTE3(_0x260000*2+48),BYTE4(_0x260000*2+48)
0000c1 4d21
0000c2 0000
0000c3 4d31
0000c4 0000      	.DB  LOW(_0x260000*2+59),HIGH(_0x260000*2+59),BYTE3(_0x260000*2+59),BYTE4(_0x260000*2+59),LOW(_0x260000*2+75),HIGH(_0x260000*2+75),BYTE3(_0x260000*2+75),BYTE4(_0x260000*2+75)
0000c5 4d3b
0000c6 0000
0000c7 4d44
0000c8 0000      	.DB  LOW(_0x260000*2+85),HIGH(_0x260000*2+85),BYTE3(_0x260000*2+85),BYTE4(_0x260000*2+85),LOW(_0x260000*2+94),HIGH(_0x260000*2+94),BYTE3(_0x260000*2+94),BYTE4(_0x260000*2+94)
0000c9 4d56
0000ca 0000
0000cb 4d69
0000cc 0000      	.DB  LOW(_0x260000*2+112),HIGH(_0x260000*2+112),BYTE3(_0x260000*2+112),BYTE4(_0x260000*2+112),LOW(_0x260000*2+131),HIGH(_0x260000*2+131),BYTE3(_0x260000*2+131),BYTE4(_0x260000*2+131)
0000cd 4d7a
0000ce 0000
0000cf 4d89
0000d0 0000      	.DB  LOW(_0x260000*2+148),HIGH(_0x260000*2+148),BYTE3(_0x260000*2+148),BYTE4(_0x260000*2+148),LOW(_0x260000*2+163),HIGH(_0x260000*2+163),BYTE3(_0x260000*2+163),BYTE4(_0x260000*2+163)
0000d1 4d9a
0000d2 0000
0000d3 4daa
0000d4 0000      	.DB  LOW(_0x260000*2+180),HIGH(_0x260000*2+180),BYTE3(_0x260000*2+180),BYTE4(_0x260000*2+180),LOW(_0x260000*2+196),HIGH(_0x260000*2+196),BYTE3(_0x260000*2+196),BYTE4(_0x260000*2+196)
                 _cmdSetRTCDateTime:
0000d5 4324
0000d6 444d
0000d7 4453
0000d8 0054      	.DB  0x24,0x43,0x4D,0x44,0x53,0x44,0x54,0x0
                 _cmdResetAlarmStatus:
0000d9 4324
0000da 444d
0000db 4152
0000dc 0053      	.DB  0x24,0x43,0x4D,0x44,0x52,0x41,0x53,0x0
                 _cmdClearLogFile:
0000dd 4324
0000de 444d
0000df 4c43
0000e0 0046      	.DB  0x24,0x43,0x4D,0x44,0x43,0x4C,0x46,0x0
                 _cmdSetVref:
0000e1 4324
0000e2 444d
0000e3 5653
0000e4 0052      	.DB  0x24,0x43,0x4D,0x44,0x53,0x56,0x52,0x0
                 _cmdSensorSelect:
0000e5 4324
0000e6 444d
0000e7 4e53
0000e8 0053      	.DB  0x24,0x43,0x4D,0x44,0x53,0x4E,0x53,0x0
                 _cmdDeviceEnable:
0000e9 4324
0000ea 444d
0000eb 4544
0000ec 004e      	.DB  0x24,0x43,0x4D,0x44,0x44,0x45,0x4E,0x0
                 _cmdDeviceDisable:
0000ed 4324
0000ee 444d
0000ef 4444
0000f0 0053      	.DB  0x24,0x43,0x4D,0x44,0x44,0x44,0x53,0x0
                 _cmdSetSerialNumber:
0000f1 4324
0000f2 444d
0000f3 5353
0000f4 004e      	.DB  0x24,0x43,0x4D,0x44,0x53,0x53,0x4E,0x0
                 _cmdReadSerialNumber:
0000f5 4324
0000f6 444d
0000f7 5352
0000f8 004e      	.DB  0x24,0x43,0x4D,0x44,0x52,0x53,0x4E,0x0
                 _k1:
0000f9 2220
0000fa 2b2a
0000fb 5b2c
0000fc 5d3d      	.DB  0x20,0x22,0x2A,0x2B,0x2C,0x5B,0x3D,0x5D
0000fd 7f7c
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1236): warning: .cseg .db misalignment - padding zero byte
0000fe 0000      	.DB  0x7C,0x7F,0x0
                 
                 ;HEAP START MARKER INITIALIZATION
                 __HEAP_START_MARKER:
0000ff 0000
000100 0000      	.DW  0,0
                 
                 _0x3:
000101 0000
000102 0000
000103 0000
000104 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000105 0000
000106 0000
000107 0000
000108 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
000109 0000
00010a 0000
00010b 0000
00010c 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1246): warning: .cseg .db misalignment - padding zero byte
00010d 0000      	.DB  0x0
                 _0xA5:
00010e ffff
00010f ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x0:
000110 0a0d
000111 2d2d
000112 2d2d
000113 2d2d      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000114 4920
000115 696e
000116 6974
000117 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
000118 4320
000119 6d6f
00011a 6c70
00011b 7465      	.DB  0x20,0x43,0x6F,0x6D,0x70,0x6C,0x65,0x74
00011c 2065
00011d 2d2d
00011e 2d2d
00011f 2d2d      	.DB  0x65,0x20,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
000120 0a0d
000121 4300
000122 6e6f
000123 6174      	.DB  0xD,0xA,0x0,0x43,0x6F,0x6E,0x74,0x61
000124 7463
000125 3a20
000126 6320
000127 6e6f      	.DB  0x63,0x74,0x20,0x3A,0x20,0x63,0x6F,0x6E
000128 6174
000129 7463
00012a 742e
00012b 7761      	.DB  0x74,0x61,0x63,0x74,0x2E,0x74,0x61,0x77
00012c 6e61
00012d 6740
00012e 616d
00012f 6c69      	.DB  0x61,0x6E,0x40,0x67,0x6D,0x61,0x69,0x6C
000130 632e
000131 6d6f
000132 0a0d
000133 3c00      	.DB  0x2E,0x63,0x6F,0x6D,0xD,0xA,0x0,0x3C
000134 616d
000135 6e69
000136 203e
000137 6567      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x67,0x65
000138 5374
000139 6e65
00013a 6f73
00013b 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
00013c 6e6f
00013d 6966
00013e 2867
00013f 6425      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x25,0x64
000140 2029
000141 7265
000142 6f72
000143 0d72      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0xD
000144 000a
000145 6d3c
000146 6961
000147 3e6e      	.DB  0xA,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
000148 6120
000149 6464
00014a 6553
00014b 736e      	.DB  0x20,0x61,0x64,0x64,0x53,0x65,0x6E,0x73
00014c 726f
00014d 6144
00014e 6174
00014f 7551      	.DB  0x6F,0x72,0x44,0x61,0x74,0x61,0x51,0x75
000150 7565
000151 2865
000152 6425
000153 252c      	.DB  0x65,0x75,0x65,0x28,0x25,0x64,0x2C,0x25
000154 312e
000155 2966
000156 6620
000157 6961      	.DB  0x2E,0x31,0x66,0x29,0x20,0x66,0x61,0x69
000158 656c
000159 0d64
00015a 000a
00015b 6d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x6D
00015c 6961
00015d 3e6e
00015e 7520
00015f 6470      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x75,0x70,0x64
000160 7461
000161 5365
000162 6174
000163 7574      	.DB  0x61,0x74,0x65,0x53,0x74,0x61,0x74,0x75
000164 2873
000165 2029
000166 6166
000167 6c69      	.DB  0x73,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000168 6465
000169 0a0d
00016a 3c00
00016b 616d      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x6D,0x61
00016c 6e69
00016d 203e
00016e 706f
00016f 7265      	.DB  0x69,0x6E,0x3E,0x20,0x6F,0x70,0x65,0x72
000170 7461
000171 6e69
000172 2067
000173 6f6d      	.DB  0x61,0x74,0x69,0x6E,0x67,0x20,0x6D,0x6F
000174 6564
000175 6520
000176 7272
000177 726f      	.DB  0x64,0x65,0x20,0x65,0x72,0x72,0x6F,0x72
000178 2121
000179 5b20
00017a 7830
00017b 3025      	.DB  0x21,0x21,0x20,0x5B,0x30,0x78,0x25,0x30
00017c 5832
00017d 0d5d
00017e 000a
00017f 6d3c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x6D
000180 6961
000181 3e6e
000182 5320
000183 5f44      	.DB  0x61,0x69,0x6E,0x3E,0x20,0x53,0x44,0x5F
000184 6572
000185 6461
000186 654d
000187 6f6d      	.DB  0x72,0x65,0x61,0x64,0x4D,0x65,0x6D,0x6F
000188 7972
000189 6552
00018a 616d
00018b 6e69      	.DB  0x72,0x79,0x52,0x65,0x6D,0x61,0x69,0x6E
00018c 2928
00018d 6620
00018e 6961
00018f 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000190 0d64
000191 000a
000192 6d3c
000193 6961      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6D,0x61,0x69
000194 3e6e
000195 5b20
000196 6544
000197 6976      	.DB  0x6E,0x3E,0x20,0x5B,0x44,0x65,0x76,0x69
000198 6563
000199 6420
00019a 7369
00019b 6261      	.DB  0x63,0x65,0x20,0x64,0x69,0x73,0x61,0x62
00019c 656c
00019d 205d
00019e 545b
00019f 5059      	.DB  0x6C,0x65,0x5D,0x20,0x5B,0x54,0x59,0x50
0001a0 2d45
0001a1 5d4b
0001a2 2420
0001a3 4d43      	.DB  0x45,0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D
0001a4 5344
0001a5 534e
0001a6 4e20
0001a7 3a20      	.DB  0x44,0x53,0x4E,0x53,0x20,0x4E,0x20,0x3A
0001a8 5820
0001a9 582e
0001aa 2058
0001ab 2020      	.DB  0x20,0x58,0x2E,0x58,0x58,0x20,0x20,0x20
0001ac 2020
0001ad 2020
0001ae 2020
0001af 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001b0 2020
0001b1 2020
0001b2 2020
0001b3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001b4 0d20
0001b5 3c00
0001b6 616d
0001b7 6e69      	.DB  0x20,0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E
0001b8 203e
0001b9 445b
0001ba 7665
0001bb 6369      	.DB  0x3E,0x20,0x5B,0x44,0x65,0x76,0x69,0x63
0001bc 2065
0001bd 6964
0001be 6173
0001bf 6c62      	.DB  0x65,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
0001c0 5d65
0001c1 5b20
0001c2 5954
0001c3 4550      	.DB  0x65,0x5D,0x20,0x5B,0x54,0x59,0x50,0x45
0001c4 4b2d
0001c5 205d
0001c6 4324
0001c7 444d      	.DB  0x2D,0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44
0001c8 4e53
0001c9 2053
0001ca 6425
0001cb 3a20      	.DB  0x53,0x4E,0x53,0x20,0x25,0x64,0x20,0x3A
0001cc 2520
0001cd 2066
0001ce 2020
0001cf 2020      	.DB  0x20,0x25,0x66,0x20,0x20,0x20,0x20,0x20
0001d0 2020
0001d1 2020
0001d2 2020
0001d3 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001d4 2020
0001d5 2020
0001d6 2020
0001d7 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0001d8 000d
0001d9 6d3c
0001da 6961
0001db 3e6e      	.DB  0xD,0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E
0001dc 5b20
0001dd 6544
0001de 6976
0001df 6563      	.DB  0x20,0x5B,0x44,0x65,0x76,0x69,0x63,0x65
0001e0 6420
0001e1 7369
0001e2 6261
0001e3 656c      	.DB  0x20,0x64,0x69,0x73,0x61,0x62,0x6C,0x65
0001e4 205d
0001e5 545b
0001e6 5059
0001e7 2d45      	.DB  0x5D,0x20,0x5B,0x54,0x59,0x50,0x45,0x2D
0001e8 5d4b
0001e9 2420
0001ea 4d43
0001eb 5344      	.DB  0x4B,0x5D,0x20,0x24,0x43,0x4D,0x44,0x53
0001ec 534e
0001ed 2520
0001ee 2064
0001ef 203a      	.DB  0x4E,0x53,0x20,0x25,0x64,0x20,0x3A,0x20
0001f0 6964
0001f1 6373
0001f2 6e6f
0001f3 656e      	.DB  0x64,0x69,0x73,0x63,0x6F,0x6E,0x6E,0x65
0001f4 7463
0001f5 6465
0001f6 2020
0001f7 2020      	.DB  0x63,0x74,0x65,0x64,0x20,0x20,0x20,0x20
0001f8 2020
0001f9 2020
0001fa 2020
0001fb 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
0001fc 3c00
0001fd 616d
0001fe 6e69
0001ff 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000200 445b
000201 7665
000202 6369
000203 2065      	.DB  0x5B,0x44,0x65,0x76,0x69,0x63,0x65,0x20
000204 6964
000205 6173
000206 6c62
000207 5d65      	.DB  0x64,0x69,0x73,0x61,0x62,0x6C,0x65,0x5D
000208 5b20
000209 4d54
00020a 4345
00020b 205d      	.DB  0x20,0x5B,0x54,0x4D,0x45,0x43,0x5D,0x20
00020c 2020
00020d 2020
00020e 2020
00020f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000210 2020
000211 2020
000212 2020
000213 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000214 2020
000215 2020
000216 2020
000217 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000218 2020
000219 2020
00021a 2020
00021b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00021c 2020
00021d 2020
00021e 2020
00021f 000d      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0xD,0x0
000220 6d3c
000221 6961
000222 3e6e
000223 5b20      	.DB  0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B
000224 6544
000225 6976
000226 6563
000227 6420      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x20,0x64
000228 7369
000229 6261
00022a 656c
00022b 205d      	.DB  0x69,0x73,0x61,0x62,0x6C,0x65,0x5D,0x20
00022c 505b
00022d 3154
00022e 3030
00022f 205d      	.DB  0x5B,0x50,0x54,0x31,0x30,0x30,0x5D,0x20
000230 2020
000231 2020
000232 2020
000233 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000234 2020
000235 2020
000236 2020
000237 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000238 2020
000239 2020
00023a 2020
00023b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00023c 2020
00023d 2020
00023e 2020
00023f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000240 2020
000241 2020
000242 0d20
000243 3c00      	.DB  0x20,0x20,0x20,0x20,0x20,0xD,0x0,0x3C
000244 616d
000245 6e69
000246 203e
000247 445b      	.DB  0x6D,0x61,0x69,0x6E,0x3E,0x20,0x5B,0x44
000248 7665
000249 6369
00024a 2065
00024b 6964      	.DB  0x65,0x76,0x69,0x63,0x65,0x20,0x64,0x69
00024c 6173
00024d 6c62
00024e 5d65
00024f 5b20      	.DB  0x73,0x61,0x62,0x6C,0x65,0x5D,0x20,0x5B
000250 4552
000251 4553
000252 5652
000253 4445      	.DB  0x52,0x45,0x53,0x45,0x52,0x56,0x45,0x44
000254 205d
000255 2020
000256 2020
000257 2020      	.DB  0x5D,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000258 2020
000259 2020
00025a 2020
00025b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00025c 2020
00025d 2020
00025e 2020
00025f 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000260 2020
000261 2020
000262 2020
000263 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000264 2020
000265 2020
000266 000d
000267 753c      	.DB  0x20,0x20,0x20,0x20,0xD,0x0,0x3C,0x75
000268 6470
000269 7461
00026a 5365
00026b 6174      	.DB  0x70,0x64,0x61,0x74,0x65,0x53,0x74,0x61
00026c 7574
00026d 3e73
00026e 4520
00026f 4854      	.DB  0x74,0x75,0x73,0x3E,0x20,0x45,0x54,0x48
000270 725f
000271 7473
000272 745f
000273 6d69      	.DB  0x5F,0x72,0x73,0x74,0x5F,0x74,0x69,0x6D
000274 7265
000275 7420
000276 6d69
000277 2065      	.DB  0x65,0x72,0x20,0x74,0x69,0x6D,0x65,0x20
000278 656c
000279 7466
00027a 3d20
00027b 2520      	.DB  0x6C,0x65,0x66,0x74,0x20,0x3D,0x20,0x25
00027c 646c
00027d 2528
00027e 586c
00027f 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
000280 000a
000281 0a0d
000282 653c
000283 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000284 746e
000285 6143
000286 7470
000287 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000288 3e65
000289 2120
00028a 2121
00028b 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00028c 2121
00028d 2121
00028e 2121
00028f 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000290 6e6f
000291 7469
000292 726f
000293 4d20      	.DB  0x6F,0x6E,0x69,0x74,0x6F,0x72,0x20,0x4D
000294 646f
000295 2065
000296 2121
000297 2121      	.DB  0x6F,0x64,0x65,0x20,0x21,0x21,0x21,0x21
000298 0d21
000299 000a
00029a 0a0d
00029b 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
00029c 6576
00029d 746e
00029e 6143
00029f 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
0002a0 7275
0002a1 3e65
0002a2 2120
0002a3 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
0002a4 2121
0002a5 2121
0002a6 2121
0002a7 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002a8 4d20
0002a9 6961
0002aa 746e
0002ab 6e65      	.DB  0x20,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
0002ac 6e61
0002ad 6563
0002ae 4920
0002af 206e      	.DB  0x61,0x6E,0x63,0x65,0x20,0x49,0x6E,0x20
0002b0 7250
0002b1 676f
0002b2 6572
0002b3 7373      	.DB  0x50,0x72,0x6F,0x67,0x72,0x65,0x73,0x73
0002b4 2120
0002b5 2121
0002b6 2121
0002b7 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0002b8 3c00
0002b9 7665
0002ba 6e65
0002bb 4374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x43
0002bc 7061
0002bd 7574
0002be 6572
0002bf 203e      	.DB  0x61,0x70,0x74,0x75,0x72,0x65,0x3E,0x20
0002c0 6461
0002c1 4564
0002c2 6576
0002c3 746e      	.DB  0x61,0x64,0x64,0x45,0x76,0x65,0x6E,0x74
0002c4 7551
0002c5 7565
0002c6 2865
0002c7 2029      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x29,0x20
0002c8 6166
0002c9 6c69
0002ca 6465
0002cb 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0002cc 0d00
0002cd 3c0a
0002ce 7665
0002cf 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0002d0 4374
0002d1 7061
0002d2 7574
0002d3 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0002d4 203e
0002d5 2121
0002d6 2121
0002d7 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0002d8 2121
0002d9 2121
0002da 2021
0002db 614d      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x4D,0x61
0002dc 6e69
0002dd 5020
0002de 776f
0002df 7265      	.DB  0x69,0x6E,0x20,0x50,0x6F,0x77,0x65,0x72
0002e0 4420
0002e1 776f
0002e2 206e
0002e3 2121      	.DB  0x20,0x44,0x6F,0x77,0x6E,0x20,0x21,0x21
0002e4 2121
0002e5 0d21
0002e6 000a
0002e7 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
0002e8 653c
0002e9 6576
0002ea 746e
0002eb 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
0002ec 7470
0002ed 7275
0002ee 3e65
0002ef 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
0002f0 2121
0002f1 2121
0002f2 2121
0002f3 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0002f4 2121
0002f5 4d20
0002f6 6961
0002f7 206e      	.DB  0x21,0x21,0x20,0x4D,0x61,0x69,0x6E,0x20
0002f8 6f50
0002f9 6577
0002fa 2072
0002fb 7055      	.DB  0x50,0x6F,0x77,0x65,0x72,0x20,0x55,0x70
0002fc 2120
0002fd 2121
0002fe 2121
0002ff 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
000300 0d00
000301 3c0a
000302 7665
000303 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000304 4374
000305 7061
000306 7574
000307 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
000308 203e
000309 2121
00030a 2121
00030b 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
00030c 2121
00030d 2121
00030e 2021
00030f 6142      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x42,0x61
000310 7474
000311 7265
000312 2079
000313 6f4c      	.DB  0x74,0x74,0x65,0x72,0x79,0x20,0x4C,0x6F
000314 2077
000315 2121
000316 2121
000317 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000318 000a
000319 0a0d
00031a 653c
00031b 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00031c 746e
00031d 6143
00031e 7470
00031f 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000320 3e65
000321 2120
000322 2121
000323 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000324 2121
000325 2121
000326 2121
000327 4220      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x42
000328 7461
000329 6574
00032a 7972
00032b 4f20      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x20,0x4F
00032c 204b
00032d 2121
00032e 2121
00032f 0d21      	.DB  0x4B,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000330 000a
000331 0a0d
000332 653c
000333 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000334 746e
000335 6143
000336 7470
000337 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000338 3e65
000339 2120
00033a 2121
00033b 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
00033c 2121
00033d 2121
00033e 2121
00033f 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000340 6d65
000341 726f
000342 2079
000343 6f4c      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x4C,0x6F
000344 2077
000345 2121
000346 2121
000347 0d21      	.DB  0x77,0x20,0x21,0x21,0x21,0x21,0x21,0xD
000348 000a
000349 0a0d
00034a 653c
00034b 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
00034c 746e
00034d 6143
00034e 7470
00034f 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
000350 3e65
000351 2120
000352 2121
000353 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
000354 2121
000355 2121
000356 2121
000357 4d20      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x4D
000358 6d65
000359 726f
00035a 2079
00035b 7245      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x20,0x45,0x72
00035c 6f72
00035d 2072
00035e 2121
00035f 2121      	.DB  0x72,0x6F,0x72,0x20,0x21,0x21,0x21,0x21
000360 0d21
000361 000a
000362 0a0d
000363 653c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x65
000364 6576
000365 746e
000366 6143
000367 7470      	.DB  0x76,0x65,0x6E,0x74,0x43,0x61,0x70,0x74
000368 7275
000369 3e65
00036a 2120
00036b 2121      	.DB  0x75,0x72,0x65,0x3E,0x20,0x21,0x21,0x21
00036c 2121
00036d 2121
00036e 2121
00036f 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000370 4d20
000371 6d65
000372 726f
000373 2079      	.DB  0x20,0x4D,0x65,0x6D,0x6F,0x72,0x79,0x20
000374 4b4f
000375 2120
000376 2121
000377 2121      	.DB  0x4F,0x4B,0x20,0x21,0x21,0x21,0x21,0x21
000378 0a0d
000379 0d00
00037a 3c0a
00037b 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
00037c 6e65
00037d 4374
00037e 7061
00037f 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
000380 6572
000381 203e
000382 2121
000383 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
000384 2121
000385 2121
000386 2121
000387 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
000388 6944
000389 206e
00038a 6425
00038b 5220      	.DB  0x44,0x69,0x6E,0x20,0x25,0x64,0x20,0x52
00038c 7369
00038d 6e69
00038e 2067
00038f 2121      	.DB  0x69,0x73,0x69,0x6E,0x67,0x20,0x21,0x21
000390 2121
000391 0d21
000392 000a
000393 0a0d      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0xD,0xA
000394 653c
000395 6576
000396 746e
000397 6143      	.DB  0x3C,0x65,0x76,0x65,0x6E,0x74,0x43,0x61
000398 7470
000399 7275
00039a 3e65
00039b 2120      	.DB  0x70,0x74,0x75,0x72,0x65,0x3E,0x20,0x21
00039c 2121
00039d 2121
00039e 2121
00039f 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
0003a0 2121
0003a1 4420
0003a2 6e69
0003a3 2520      	.DB  0x21,0x21,0x20,0x44,0x69,0x6E,0x20,0x25
0003a4 2064
0003a5 6146
0003a6 6c6c
0003a7 6e69      	.DB  0x64,0x20,0x46,0x61,0x6C,0x6C,0x69,0x6E
0003a8 2067
0003a9 2121
0003aa 2121
0003ab 0d21      	.DB  0x67,0x20,0x21,0x21,0x21,0x21,0x21,0xD
0003ac 000a
0003ad 0a0d
0003ae 653c
0003af 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
0003b0 746e
0003b1 6143
0003b2 7470
0003b3 7275      	.DB  0x6E,0x74,0x43,0x61,0x70,0x74,0x75,0x72
0003b4 3e65
0003b5 2120
0003b6 2121
0003b7 2121      	.DB  0x65,0x3E,0x20,0x21,0x21,0x21,0x21,0x21
0003b8 2121
0003b9 2121
0003ba 2121
0003bb 5020      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x20,0x50
0003bc 4f52
0003bd 4542
0003be 2520
0003bf 2064      	.DB  0x52,0x4F,0x42,0x45,0x20,0x25,0x64,0x20
0003c0 4944
0003c1 4353
0003c2 4e4f
0003c3 454e      	.DB  0x44,0x49,0x53,0x43,0x4F,0x4E,0x4E,0x45
0003c4 5443
0003c5 2120
0003c6 2121
0003c7 2121      	.DB  0x43,0x54,0x20,0x21,0x21,0x21,0x21,0x21
0003c8 0a0d
0003c9 4100
0003ca 314c
0003cb 2532      	.DB  0xD,0xA,0x0,0x41,0x4C,0x31,0x32,0x25
0003cc 6431
0003cd 0d00
0003ce 3c0a
0003cf 7665      	.DB  0x31,0x64,0x0,0xD,0xA,0x3C,0x65,0x76
0003d0 6e65
0003d1 4374
0003d2 7061
0003d3 7574      	.DB  0x65,0x6E,0x74,0x43,0x61,0x70,0x74,0x75
0003d4 6572
0003d5 203e
0003d6 2121
0003d7 2121      	.DB  0x72,0x65,0x3E,0x20,0x21,0x21,0x21,0x21
0003d8 2121
0003d9 2121
0003da 2121
0003db 2021      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x20
0003dc 5250
0003dd 424f
0003de 2045
0003df 6425      	.DB  0x50,0x52,0x4F,0x42,0x45,0x20,0x25,0x64
0003e0 4320
0003e1 4e4f
0003e2 454e
0003e3 5443      	.DB  0x20,0x43,0x4F,0x4E,0x4E,0x45,0x43,0x54
0003e4 2120
0003e5 2121
0003e6 2121
0003e7 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
0003e8 4100
0003e9 304c
0003ea 2532
0003eb 6431      	.DB  0x0,0x41,0x4C,0x30,0x32,0x25,0x31,0x64
0003ec 0d00
0003ed 3c0a
0003ee 7665
0003ef 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
0003f0 4374
0003f1 7061
0003f2 7574
0003f3 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
0003f4 203e
0003f5 2121
0003f6 2121
0003f7 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
0003f8 2121
0003f9 2121
0003fa 2021
0003fb 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
0003fc 424f
0003fd 2045
0003fe 6425
0003ff 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000400 6d65
000401 6570
000402 6172
000403 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
000404 6572
000405 4520
000406 5252
000407 524f      	.DB  0x72,0x65,0x20,0x45,0x52,0x52,0x4F,0x52
000408 2120
000409 2121
00040a 2121
00040b 0a0d      	.DB  0x20,0x21,0x21,0x21,0x21,0x21,0xD,0xA
00040c 0d00
00040d 3c0a
00040e 7665
00040f 6e65      	.DB  0x0,0xD,0xA,0x3C,0x65,0x76,0x65,0x6E
000410 4374
000411 7061
000412 7574
000413 6572      	.DB  0x74,0x43,0x61,0x70,0x74,0x75,0x72,0x65
000414 203e
000415 2121
000416 2121
000417 2121      	.DB  0x3E,0x20,0x21,0x21,0x21,0x21,0x21,0x21
000418 2121
000419 2121
00041a 2021
00041b 5250      	.DB  0x21,0x21,0x21,0x21,0x21,0x20,0x50,0x52
00041c 424f
00041d 2045
00041e 6425
00041f 5420      	.DB  0x4F,0x42,0x45,0x20,0x25,0x64,0x20,0x54
000420 6d65
000421 6570
000422 6172
000423 7574      	.DB  0x65,0x6D,0x70,0x65,0x72,0x61,0x74,0x75
000424 6572
000425 4f20
000426 204b
000427 2121      	.DB  0x72,0x65,0x20,0x4F,0x4B,0x20,0x21,0x21
000428 2121
000429 0d21
00042a 000a
00042b 733c      	.DB  0x21,0x21,0x21,0xD,0xA,0x0,0x3C,0x73
00042c 6174
00042d 7574
00042e 5273
00042f 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000430 726f
000431 3e74
000432 5220
000433 5045      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x52,0x45,0x50
000434 524f
000435 5f54
000436 4953
000437 474e      	.DB  0x4F,0x52,0x54,0x5F,0x53,0x49,0x4E,0x47
000438 454c
000439 6d20
00043a 646f
00043b 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
00043c 6f6e
00043d 2074
00043e 7573
00043f 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
000440 726f
000441 6574
000442 2064
000443 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000444 0d74
000445 000a
000446 733c
000447 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
000448 7574
000449 5273
00044a 7065
00044b 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
00044c 3e74
00044d 5220
00044e 5045
00044f 524f      	.DB  0x74,0x3E,0x20,0x52,0x45,0x50,0x4F,0x52
000450 5f54
000451 554d
000452 544c
000453 5049      	.DB  0x54,0x5F,0x4D,0x55,0x4C,0x54,0x49,0x50
000454 454c
000455 6d20
000456 646f
000457 2065      	.DB  0x4C,0x45,0x20,0x6D,0x6F,0x64,0x65,0x20
000458 6f6e
000459 2074
00045a 7573
00045b 7070      	.DB  0x6E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
00045c 726f
00045d 6574
00045e 2064
00045f 6579      	.DB  0x6F,0x72,0x74,0x65,0x64,0x20,0x79,0x65
000460 0d74
000461 000a
000462 733c
000463 6174      	.DB  0x74,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
000464 7574
000465 5273
000466 7065
000467 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
000468 3e74
000469 6d20
00046a 6c61
00046b 6f6c      	.DB  0x74,0x3E,0x20,0x6D,0x61,0x6C,0x6C,0x6F
00046c 2063
00046d 6166
00046e 6c69
00046f 6465      	.DB  0x63,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000470 2820
000471 6425
000472 6220
000473 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
000474 7365
000475 0d29
000476 000a
000477 733c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x73
000478 6174
000479 7574
00047a 5273
00047b 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
00047c 726f
00047d 3e74
00047e 6720
00047f 7465      	.DB  0x6F,0x72,0x74,0x3E,0x20,0x67,0x65,0x74
000480 6544
000481 6976
000482 6563
000483 7453      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x53,0x74
000484 7461
000485 2865
000486 2029
000487 6166      	.DB  0x61,0x74,0x65,0x28,0x29,0x20,0x66,0x61
000488 6c69
000489 6465
00048a 0a0d
00048b 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00048c 7473
00048d 7461
00048e 7375
00048f 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
000490 6f70
000491 7472
000492 203e
000493 7473      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x73,0x74
000494 7461
000495 7375
000496 7220
000497 7065      	.DB  0x61,0x74,0x75,0x73,0x20,0x72,0x65,0x70
000498 726f
000499 2074
00049a 6361
00049b 6d63      	.DB  0x6F,0x72,0x74,0x20,0x61,0x63,0x63,0x6D
00049c 7520
00049d 6b6e
00049e 6f6e
00049f 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0004a0 5b20
0004a1 7830
0004a2 3025
0004a3 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0004a4 0d5d
0004a5 000a
0004a6 733c
0004a7 6174      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x74,0x61
0004a8 7574
0004a9 5273
0004aa 7065
0004ab 726f      	.DB  0x74,0x75,0x73,0x52,0x65,0x70,0x6F,0x72
0004ac 3e74
0004ad 4520
0004ae 4854
0004af 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0004b0 6e65
0004b1 5364
0004b2 6174
0004b3 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
0004b4 5273
0004b5 7065
0004b6 726f
0004b7 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0004b8 646d
0004b9 2928
0004ba 6620
0004bb 6961      	.DB  0x6D,0x64,0x28,0x29,0x20,0x66,0x61,0x69
0004bc 656c
0004bd 0d64
0004be 000a
0004bf 733c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x73
0004c0 6e65
0004c1 6f73
0004c2 4472
0004c3 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
0004c4 5261
0004c5 7065
0004c6 726f
0004c7 3e74      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
0004c8 5b20
0004c9 6c25
0004ca 5d64
0004cb 255b      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0x5B,0x25
0004cc 5d64
0004cd 255b
0004ce 322e
0004cf 5d66      	.DB  0x64,0x5D,0x5B,0x25,0x2E,0x32,0x66,0x5D
0004d0 0a0d
0004d1 0d00
0004d2 3c0a
0004d3 6573      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x73,0x65
0004d4 736e
0004d5 726f
0004d6 6144
0004d7 6174      	.DB  0x6E,0x73,0x6F,0x72,0x44,0x61,0x74,0x61
0004d8 6552
0004d9 6f70
0004da 7472
0004db 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
0004dc 3d3d
0004dd 203d
0004de 5245
0004df 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
0004e0 2052
0004e1 4e49
0004e2 4f46
0004e3 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
0004e4 4954
0004e5 4e4f
0004e6 4920
0004e7 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
0004e8 4554
0004e9 504d
0004ea 5120
0004eb 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
0004ec 4555
0004ed 3d20
0004ee 3d3d
0004ef 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
0004f0 3c00
0004f1 6573
0004f2 736e
0004f3 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0004f4 6144
0004f5 6174
0004f6 6552
0004f7 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0004f8 7472
0004f9 203e
0004fa 5445
0004fb 5f48      	.DB  0x72,0x74,0x3E,0x20,0x45,0x54,0x48,0x5F
0004fc 6573
0004fd 646e
0004fe 6144
0004ff 6174      	.DB  0x73,0x65,0x6E,0x64,0x44,0x61,0x74,0x61
000500 6552
000501 6f70
000502 7472
000503 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
000504 2864
000505 2029
000506 6166
000507 6c69      	.DB  0x64,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000508 6465
000509 0a0d
00050a 3c00
00050b 7665      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x65,0x76
00050c 6e65
00050d 5274
00050e 7065
00050f 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000510 3e74
000511 5b20
000512 6c25
000513 5d64      	.DB  0x74,0x3E,0x20,0x5B,0x25,0x6C,0x64,0x5D
000514 305b
000515 2578
000516 3230
000517 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000518 305b
000519 2578
00051a 3230
00051b 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00051c 0a0d
00051d 0d00
00051e 3c0a
00051f 7665      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x65,0x76
000520 6e65
000521 5274
000522 7065
000523 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000524 3e74
000525 3d20
000526 3d3d
000527 4520      	.DB  0x74,0x3E,0x20,0x3D,0x3D,0x3D,0x20,0x45
000528 5252
000529 524f
00052a 4920
00052b 464e      	.DB  0x52,0x52,0x4F,0x52,0x20,0x49,0x4E,0x46
00052c 4d4f
00052d 5441
00052e 4f49
00052f 204e      	.DB  0x4F,0x4D,0x41,0x54,0x49,0x4F,0x4E,0x20
000530 4e49
000531 5420
000532 4d45
000533 2050      	.DB  0x49,0x4E,0x20,0x54,0x45,0x4D,0x50,0x20
000534 5551
000535 5545
000536 2045
000537 3d3d      	.DB  0x51,0x55,0x45,0x55,0x45,0x20,0x3D,0x3D
000538 0d3d
000539 000a
00053a 653c
00053b 6576      	.DB  0x3D,0xD,0xA,0x0,0x3C,0x65,0x76,0x65
00053c 746e
00053d 6552
00053e 6f70
00053f 7472      	.DB  0x6E,0x74,0x52,0x65,0x70,0x6F,0x72,0x74
000540 203e
000541 5445
000542 5f48
000543 6573      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
000544 646e
000545 7645
000546 6e65
000547 5274      	.DB  0x6E,0x64,0x45,0x76,0x65,0x6E,0x74,0x52
000548 7065
000549 726f
00054a 4374
00054b 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
00054c 2928
00054d 6620
00054e 6961
00054f 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000550 0d64
000551 000a
000552 733c
000553 6e65      	.DB  0x64,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
000554 6f73
000555 4472
000556 7461
000557 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000558 7661
000559 3e65
00055a 7420
00055b 6d69      	.DB  0x61,0x76,0x65,0x3E,0x20,0x74,0x69,0x6D
00055c 5b65
00055d 6c25
00055e 5d64
00055f 632c      	.DB  0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C,0x63
000560 5b68
000561 6425
000562 2c5d
000563 6176      	.DB  0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76,0x61
000564 5b6c
000565 2e25
000566 6632
000567 0d5d      	.DB  0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D,0xD
000568 000a
000569 0a0d
00056a 733c
00056b 6e65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x73,0x65,0x6E
00056c 6f73
00056d 4472
00056e 7461
00056f 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
000570 7661
000571 3e65
000572 3d20
000573 3d3d      	.DB  0x61,0x76,0x65,0x3E,0x20,0x3D,0x3D,0x3D
000574 4520
000575 5252
000576 524f
000577 4920      	.DB  0x20,0x45,0x52,0x52,0x4F,0x52,0x20,0x49
000578 464e
000579 4d4f
00057a 5441
00057b 4f49      	.DB  0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49,0x4F
00057c 204e
00057d 4e49
00057e 5420
00057f 4d45      	.DB  0x4E,0x20,0x49,0x4E,0x20,0x54,0x45,0x4D
000580 2050
000581 5551
000582 5545
000583 2045      	.DB  0x50,0x20,0x51,0x55,0x45,0x55,0x45,0x20
000584 3d3d
000585 0d3d
000586 000a
000587 733c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x73
000588 6e65
000589 6f73
00058a 4472
00058b 7461      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x44,0x61,0x74
00058c 5361
00058d 7661
00058e 3e65
00058f 4c20      	.DB  0x61,0x53,0x61,0x76,0x65,0x3E,0x20,0x4C
000590 474f
000591 6f5f
000592 6570
000593 466e      	.DB  0x4F,0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46
000594 6c69
000595 2865
000596 7325
000597 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
000598 6166
000599 6c69
00059a 6465
00059b 202c      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x2C,0x20
00059c 6f63
00059d 6c75
00059e 6e64
00059f 7427      	.DB  0x63,0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74
0005a0 7320
0005a1 7661
0005a2 2065
0005a3 6f6c      	.DB  0x20,0x73,0x61,0x76,0x65,0x20,0x6C,0x6F
0005a4 0d67
0005a5 000a
0005a6 733c
0005a7 6e65      	.DB  0x67,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
0005a8 6f73
0005a9 4472
0005aa 7461
0005ab 5361      	.DB  0x73,0x6F,0x72,0x44,0x61,0x74,0x61,0x53
0005ac 7661
0005ad 3e65
0005ae 4c20
0005af 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
0005b0 695f
0005b1 736e
0005b2 7265
0005b3 4474      	.DB  0x5F,0x69,0x6E,0x73,0x65,0x72,0x74,0x44
0005b4 7461
0005b5 2861
0005b6 2029
0005b7 6166      	.DB  0x61,0x74,0x61,0x28,0x29,0x20,0x66,0x61
0005b8 6c69
0005b9 6465
0005ba 0a0d
0005bb 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
0005bc 6573
0005bd 736e
0005be 726f
0005bf 6144      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x44,0x61
0005c0 6174
0005c1 6153
0005c2 6576
0005c3 203e      	.DB  0x74,0x61,0x53,0x61,0x76,0x65,0x3E,0x20
0005c4 4f4c
0005c5 5f47
0005c6 6c63
0005c7 736f      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F,0x73
0005c8 4665
0005c9 6c69
0005ca 2865
0005cb 2029      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x29,0x20
0005cc 6166
0005cd 6c69
0005ce 6465
0005cf 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0005d0 3c00
0005d1 6573
0005d2 736e
0005d3 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0005d4 6144
0005d5 6174
0005d6 6153
0005d7 6576      	.DB  0x44,0x61,0x74,0x61,0x53,0x61,0x76,0x65
0005d8 203e
0005d9 6144
0005da 6174
0005db 4c20      	.DB  0x3E,0x20,0x44,0x61,0x74,0x61,0x20,0x4C
0005dc 676f
0005dd 6920
0005de 2073
0005df 6f6e      	.DB  0x6F,0x67,0x20,0x69,0x73,0x20,0x6E,0x6F
0005e0 2074
0005e1 6d65
0005e2 7470
0005e3 0d79      	.DB  0x74,0x20,0x65,0x6D,0x70,0x74,0x79,0xD
0005e4 000a
0005e5 653c
0005e6 6576
0005e7 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
0005e8 6153
0005e9 6576
0005ea 203e
0005eb 6974      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x74,0x69
0005ec 656d
0005ed 255b
0005ee 646c
0005ef 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
0005f0 6469
0005f1 305b
0005f2 2578
0005f3 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
0005f4 5d58
0005f5 732c
0005f6 6174
0005f7 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
0005f8 7830
0005f9 3025
0005fa 5832
0005fb 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0005fc 000a
0005fd 0a0d
0005fe 653c
0005ff 6576      	.DB  0xA,0x0,0xD,0xA,0x3C,0x65,0x76,0x65
000600 746e
000601 6153
000602 6576
000603 203e      	.DB  0x6E,0x74,0x53,0x61,0x76,0x65,0x3E,0x20
000604 3d3d
000605 203d
000606 5245
000607 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
000608 2052
000609 4e49
00060a 4f46
00060b 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
00060c 4954
00060d 4e4f
00060e 4920
00060f 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
000610 4554
000611 504d
000612 5120
000613 4555      	.DB  0x54,0x45,0x4D,0x50,0x20,0x51,0x55,0x45
000614 4555
000615 3d20
000616 3d3d
000617 0a0d      	.DB  0x55,0x45,0x20,0x3D,0x3D,0x3D,0xD,0xA
000618 3c00
000619 7665
00061a 6e65
00061b 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
00061c 7661
00061d 3e65
00061e 4c20
00061f 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000620 6f5f
000621 6570
000622 466e
000623 6c69      	.DB  0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69,0x6C
000624 2865
000625 7325
000626 2029
000627 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
000628 6c69
000629 6465
00062a 202c
00062b 6f63      	.DB  0x69,0x6C,0x65,0x64,0x2C,0x20,0x63,0x6F
00062c 6c75
00062d 6e64
00062e 7427
00062f 7320      	.DB  0x75,0x6C,0x64,0x6E,0x27,0x74,0x20,0x73
000630 7661
000631 2065
000632 6f6c
000633 0d67      	.DB  0x61,0x76,0x65,0x20,0x6C,0x6F,0x67,0xD
000634 000a
000635 653c
000636 6576
000637 746e      	.DB  0xA,0x0,0x3C,0x65,0x76,0x65,0x6E,0x74
000638 6153
000639 6576
00063a 203e
00063b 4f4c      	.DB  0x53,0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F
00063c 5f47
00063d 6e69
00063e 6573
00063f 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
000640 7645
000641 6e65
000642 2874
000643 2029      	.DB  0x45,0x76,0x65,0x6E,0x74,0x28,0x29,0x20
000644 6166
000645 6c69
000646 6465
000647 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000648 3c00
000649 7665
00064a 6e65
00064b 5374      	.DB  0x0,0x3C,0x65,0x76,0x65,0x6E,0x74,0x53
00064c 7661
00064d 3e65
00064e 4c20
00064f 474f      	.DB  0x61,0x76,0x65,0x3E,0x20,0x4C,0x4F,0x47
000650 635f
000651 6f6c
000652 6573
000653 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
000654 656c
000655 2928
000656 6620
000657 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
000658 656c
000659 0d64
00065a 000a
00065b 653c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x65
00065c 6576
00065d 746e
00065e 6153
00065f 6576      	.DB  0x76,0x65,0x6E,0x74,0x53,0x61,0x76,0x65
000660 203e
000661 7645
000662 6e65
000663 2074      	.DB  0x3E,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
000664 6f4c
000665 2067
000666 7369
000667 6e20      	.DB  0x4C,0x6F,0x67,0x20,0x69,0x73,0x20,0x6E
000668 746f
000669 6520
00066a 706d
00066b 7974      	.DB  0x6F,0x74,0x20,0x65,0x6D,0x70,0x74,0x79
00066c 0a0d
00066d 3c00
00066e 6f6c
00066f 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000670 7065
000671 726f
000672 3e74
000673 4320      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x43
000674 6568
000675 6b63
000676 4420
000677 7461      	.DB  0x68,0x65,0x63,0x6B,0x20,0x44,0x61,0x74
000678 2061
000679 6f4c
00067a 2067
00067b 7845      	.DB  0x61,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
00067c 7369
00067d 0d74
00067e 000a
00067f 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000680 676f
000681 6552
000682 6f70
000683 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
000684 203e
000685 4f4c
000686 5f47
000687 706f      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F,0x70
000688 6e65
000689 6946
00068a 656c
00068b 2528      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x28,0x25
00068c 2973
00068d 6620
00068e 6961
00068f 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000690 0d64
000691 000a
000692 6c3c
000693 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
000694 6552
000695 6f70
000696 7472
000697 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
000698 4f4c
000699 5f47
00069a 6572
00069b 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
00069c 6144
00069d 6174
00069e 2528
00069f 2973      	.DB  0x44,0x61,0x74,0x61,0x28,0x25,0x73,0x29
0006a0 6620
0006a1 6961
0006a2 656c
0006a3 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0006a4 000a
0006a5 6c3c
0006a6 676f
0006a7 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0006a8 6f70
0006a9 7472
0006aa 203e
0006ab 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0006ac 5f47
0006ad 6572
0006ae 6461
0006af 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0006b0 6174
0006b1 2928
0006b2 4c20
0006b3 676f      	.DB  0x74,0x61,0x28,0x29,0x20,0x4C,0x6F,0x67
0006b4 6520
0006b5 706d
0006b6 7974
0006b7 0a0d      	.DB  0x20,0x65,0x6D,0x70,0x74,0x79,0xD,0xA
0006b8 0d00
0006b9 3c0a
0006ba 6f6c
0006bb 5267      	.DB  0x0,0xD,0xA,0x3C,0x6C,0x6F,0x67,0x52
0006bc 7065
0006bd 726f
0006be 3e74
0006bf 3d20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x3D
0006c0 3d3d
0006c1 4520
0006c2 5252
0006c3 524f      	.DB  0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F,0x52
0006c4 4920
0006c5 464e
0006c6 4d4f
0006c7 5441      	.DB  0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54
0006c8 4f49
0006c9 204e
0006ca 4e49
0006cb 2520      	.DB  0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20,0x25
0006cc 2073
0006cd 3d3d
0006ce 0d3d
0006cf 000a      	.DB  0x73,0x20,0x3D,0x3D,0x3D,0xD,0xA,0x0
0006d0 6c3c
0006d1 676f
0006d2 6552
0006d3 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0006d4 7472
0006d5 203e
0006d6 6144
0006d7 6174      	.DB  0x72,0x74,0x3E,0x20,0x44,0x61,0x74,0x61
0006d8 6f4c
0006d9 2067
0006da 6f66
0006db 6e75      	.DB  0x4C,0x6F,0x67,0x20,0x66,0x6F,0x75,0x6E
0006dc 2064
0006dd 6974
0006de 656d
0006df 255b      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
0006e0 646c
0006e1 2c5d
0006e2 6863
0006e3 255b      	.DB  0x6C,0x64,0x5D,0x2C,0x63,0x68,0x5B,0x25
0006e4 5d64
0006e5 762c
0006e6 6c61
0006e7 255b      	.DB  0x64,0x5D,0x2C,0x76,0x61,0x6C,0x5B,0x25
0006e8 322e
0006e9 5d66
0006ea 0a0d
0006eb 3c00      	.DB  0x2E,0x32,0x66,0x5D,0xD,0xA,0x0,0x3C
0006ec 6f6c
0006ed 5267
0006ee 7065
0006ef 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
0006f0 3e74
0006f1 4520
0006f2 4854
0006f3 735f      	.DB  0x74,0x3E,0x20,0x45,0x54,0x48,0x5F,0x73
0006f4 6e65
0006f5 4464
0006f6 7461
0006f7 5261      	.DB  0x65,0x6E,0x64,0x44,0x61,0x74,0x61,0x52
0006f8 7065
0006f9 726f
0006fa 4374
0006fb 646d      	.DB  0x65,0x70,0x6F,0x72,0x74,0x43,0x6D,0x64
0006fc 2928
0006fd 6620
0006fe 6961
0006ff 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
000700 0d64
000701 000a
000702 6c3c
000703 676f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67
000704 6552
000705 6f70
000706 7472
000707 203e      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x3E,0x20
000708 6144
000709 6174
00070a 6f4c
00070b 2067      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x20
00070c 6573
00070d 746e
00070e 6620
00070f 6172      	.DB  0x73,0x65,0x6E,0x74,0x20,0x66,0x72,0x61
000710 656d
000711 4449
000712 305b
000713 2578      	.DB  0x6D,0x65,0x49,0x44,0x5B,0x30,0x78,0x25
000714 3230
000715 5d58
000716 6c20
000717 676f      	.DB  0x30,0x32,0x58,0x5D,0x20,0x6C,0x6F,0x67
000718 4449
000719 305b
00071a 2578
00071b 3230      	.DB  0x49,0x44,0x5B,0x30,0x78,0x25,0x30,0x32
00071c 5d58
00071d 0a0d
00071e 3c00
00071f 6f6c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x6C,0x6F
000720 5267
000721 7065
000722 726f
000723 3e74      	.DB  0x67,0x52,0x65,0x70,0x6F,0x72,0x74,0x3E
000724 4c20
000725 474f
000726 635f
000727 6f6c      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x6C,0x6F
000728 6573
000729 6946
00072a 656c
00072b 2928      	.DB  0x73,0x65,0x46,0x69,0x6C,0x65,0x28,0x29
00072c 6620
00072d 6961
00072e 656c
00072f 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
000730 000a
000731 6c3c
000732 676f
000733 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
000734 6f70
000735 7472
000736 203e
000737 6843      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x43,0x68
000738 6365
000739 206b
00073a 7645
00073b 6e65      	.DB  0x65,0x63,0x6B,0x20,0x45,0x76,0x65,0x6E
00073c 2074
00073d 6f4c
00073e 2067
00073f 7845      	.DB  0x74,0x20,0x4C,0x6F,0x67,0x20,0x45,0x78
000740 7369
000741 0d74
000742 000a
000743 6c3c      	.DB  0x69,0x73,0x74,0xD,0xA,0x0,0x3C,0x6C
000744 676f
000745 6552
000746 6f70
000747 7472      	.DB  0x6F,0x67,0x52,0x65,0x70,0x6F,0x72,0x74
000748 203e
000749 4f4c
00074a 5f47
00074b 6572      	.DB  0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x72,0x65
00074c 6461
00074d 7645
00074e 6e65
00074f 2874      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x28
000750 2029
000751 6166
000752 6c69
000753 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
000754 0a0d
000755 3c00
000756 6f6c
000757 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
000758 7065
000759 726f
00075a 3e74
00075b 4c20      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C
00075c 474f
00075d 725f
00075e 6165
00075f 4564      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x45
000760 6576
000761 746e
000762 2928
000763 4c20      	.DB  0x76,0x65,0x6E,0x74,0x28,0x29,0x20,0x4C
000764 676f
000765 6520
000766 706d
000767 7974      	.DB  0x6F,0x67,0x20,0x65,0x6D,0x70,0x74,0x79
000768 0a0d
000769 3c00
00076a 6f6c
00076b 5267      	.DB  0xD,0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52
00076c 7065
00076d 726f
00076e 3e74
00076f 4520      	.DB  0x65,0x70,0x6F,0x72,0x74,0x3E,0x20,0x45
000770 6576
000771 746e
000772 6f4c
000773 2067      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x20
000774 6f66
000775 6e75
000776 2064
000777 6974      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x20,0x74,0x69
000778 656d
000779 255b
00077a 646c
00077b 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
00077c 6469
00077d 305b
00077e 2578
00077f 3230      	.DB  0x69,0x64,0x5B,0x30,0x78,0x25,0x30,0x32
000780 5d58
000781 732c
000782 6174
000783 5b74      	.DB  0x58,0x5D,0x2C,0x73,0x74,0x61,0x74,0x5B
000784 7830
000785 3025
000786 5832
000787 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000788 000a
000789 6c3c
00078a 676f
00078b 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
00078c 6f70
00078d 7472
00078e 203e
00078f 5445      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x45,0x54
000790 5f48
000791 6573
000792 646e
000793 7645      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x45,0x76
000794 6e65
000795 5274
000796 7065
000797 726f      	.DB  0x65,0x6E,0x74,0x52,0x65,0x70,0x6F,0x72
000798 4374
000799 646d
00079a 2928
00079b 6620      	.DB  0x74,0x43,0x6D,0x64,0x28,0x29,0x20,0x66
00079c 6961
00079d 656c
00079e 0d64
00079f 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0007a0 6c3c
0007a1 676f
0007a2 6552
0007a3 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
0007a4 7472
0007a5 203e
0007a6 7645
0007a7 6e65      	.DB  0x72,0x74,0x3E,0x20,0x45,0x76,0x65,0x6E
0007a8 4c74
0007a9 676f
0007aa 7320
0007ab 6e65      	.DB  0x74,0x4C,0x6F,0x67,0x20,0x73,0x65,0x6E
0007ac 2074
0007ad 7266
0007ae 6d61
0007af 4965      	.DB  0x74,0x20,0x66,0x72,0x61,0x6D,0x65,0x49
0007b0 5b44
0007b1 7830
0007b2 3025
0007b3 5832      	.DB  0x44,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
0007b4 205d
0007b5 6f6c
0007b6 4967
0007b7 5b44      	.DB  0x5D,0x20,0x6C,0x6F,0x67,0x49,0x44,0x5B
0007b8 7830
0007b9 3025
0007ba 5832
0007bb 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0007bc 000a
0007bd 6c3c
0007be 676f
0007bf 6552      	.DB  0xA,0x0,0x3C,0x6C,0x6F,0x67,0x52,0x65
0007c0 6f70
0007c1 7472
0007c2 203e
0007c3 4f4c      	.DB  0x70,0x6F,0x72,0x74,0x3E,0x20,0x4C,0x4F
0007c4 5f47
0007c5 6c63
0007c6 736f
0007c7 4665      	.DB  0x47,0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46
0007c8 6c69
0007c9 2865
0007ca 7325
0007cb 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
0007cc 6166
0007cd 6c69
0007ce 6465
0007cf 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1682): warning: .cseg .db misalignment - padding zero byte
0007d0 0000      	.DB  0x0
                 _0x20000:
0007d1 0a0d
0007d2 6f50
0007d3 6577
0007d4 2d72      	.DB  0xD,0xA,0x50,0x6F,0x77,0x65,0x72,0x2D
0007d5 6e6f
0007d6 5220
0007d7 7365
0007d8 7465      	.DB  0x6F,0x6E,0x20,0x52,0x65,0x73,0x65,0x74
0007d9 0a0d
0007da 0d00
0007db 450a
0007dc 7478      	.DB  0xD,0xA,0x0,0xD,0xA,0x45,0x78,0x74
0007dd 7265
0007de 616e
0007df 206c
0007e0 6552      	.DB  0x65,0x72,0x6E,0x61,0x6C,0x20,0x52,0x65
0007e1 6573
0007e2 0d74
0007e3 000a
0007e4 0a0d      	.DB  0x73,0x65,0x74,0xD,0xA,0x0,0xD,0xA
0007e5 7242
0007e6 776f
0007e7 2d6e
0007e8 756f      	.DB  0x42,0x72,0x6F,0x77,0x6E,0x2D,0x6F,0x75
0007e9 2074
0007ea 6552
0007eb 6573
0007ec 0d74      	.DB  0x74,0x20,0x52,0x65,0x73,0x65,0x74,0xD
0007ed 000a
0007ee 0a0d
0007ef 6157
0007f0 6374      	.DB  0xA,0x0,0xD,0xA,0x57,0x61,0x74,0x63
0007f1 6468
0007f2 676f
0007f3 5220
0007f4 7365      	.DB  0x68,0x64,0x6F,0x67,0x20,0x52,0x65,0x73
0007f5 7465
0007f6 0a0d
0007f7 0d00
0007f8 4a0a      	.DB  0x65,0x74,0xD,0xA,0x0,0xD,0xA,0x4A
0007f9 4154
0007fa 2047
0007fb 6552
0007fc 6573      	.DB  0x54,0x41,0x47,0x20,0x52,0x65,0x73,0x65
0007fd 0d74
0007fe 000a
0007ff 693c
000800 696e      	.DB  0x74,0xD,0xA,0x0,0x3C,0x69,0x6E,0x69
000801 6974
000802 6c61
000803 735f
000804 7379      	.DB  0x74,0x69,0x61,0x6C,0x5F,0x73,0x79,0x73
000805 6574
000806 3e6d
000807 4c20
000808 474f      	.DB  0x74,0x65,0x6D,0x3E,0x20,0x4C,0x4F,0x47
000809 695f
00080a 696e
00080b 2874
00080c 2029      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x28,0x29,0x20
00080d 6166
00080e 6c69
00080f 6465
000810 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
000811 3c00
000812 6e69
000813 7469
000814 6169      	.DB  0x0,0x3C,0x69,0x6E,0x69,0x74,0x69,0x61
000815 5f6c
000816 7973
000817 7473
000818 6d65      	.DB  0x6C,0x5F,0x73,0x79,0x73,0x74,0x65,0x6D
000819 203e
00081a 4453
00081b 695f
00081c 696e      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x69,0x6E,0x69
00081d 2874
00081e 2029
00081f 6166
000820 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
000821 6465
000822 0a0d
000823 4900
000824 696e      	.DB  0x65,0x64,0xD,0xA,0x0,0x49,0x6E,0x69
000825 6974
000826 6c61
000827 4420
000828 7665      	.DB  0x74,0x69,0x61,0x6C,0x20,0x44,0x65,0x76
000829 6369
00082a 2065
00082b 6f43
00082c 706d      	.DB  0x69,0x63,0x65,0x20,0x43,0x6F,0x6D,0x70
00082d 656c
00082e 6574
00082f 2064
000830 7461      	.DB  0x6C,0x65,0x74,0x65,0x64,0x20,0x61,0x74
000831 2d20
000832 0020
000833 3025
000834 6434      	.DB  0x20,0x2D,0x20,0x0,0x25,0x30,0x34,0x64
000835 252d
000836 3230
000837 2d64
000838 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
000839 6432
00083a 2520
00083b 3230
00083c 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
00083d 3025
00083e 6432
00083f 253a
000840 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000841 0d64
000842 000a      	.DB  0x64,0xD,0xA,0x0
                 _0x40000:
000843 0a0d
000844 2121
000845 2121
000846 2121      	.DB  0xD,0xA,0x21,0x21,0x21,0x21,0x21,0x21
000847 2121
000848 2121
000849 2121
00084a 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00084b 2121
00084c 2121
00084d 2121
00084e 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
00084f 2121
000850 2121
000851 2121
000852 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000853 2121
000854 2121
000855 2121
000856 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
000857 0a0d
000858 2100
000859 2121
00085a 2121      	.DB  0xD,0xA,0x0,0x21,0x21,0x21,0x21,0x21
00085b 2121
00085c 4520
00085d 6874
00085e 4220      	.DB  0x21,0x21,0x20,0x45,0x74,0x68,0x20,0x42
00085f 6675
000860 6566
000861 2072
000862 764f      	.DB  0x75,0x66,0x66,0x65,0x72,0x20,0x4F,0x76
000863 7265
000864 6c66
000865 776f
000866 2120      	.DB  0x65,0x72,0x66,0x6C,0x6F,0x77,0x20,0x21
000867 2121
000868 2121
000869 2121
00086a 2121      	.DB  0x21,0x21,0x21,0x21,0x21,0x21,0x21,0x21
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1724): warning: .cseg .db misalignment - padding zero byte
00086b 0000      	.DB  0x0
                 _0x60000:
00086c 543c
00086d 4d49
00086e 5245
00086f 735f      	.DB  0x3C,0x54,0x49,0x4D,0x45,0x52,0x5F,0x73
000870 7465
000871 6954
000872 656d
000873 3e72      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x72,0x3E
000874 4520
000875 5252
000876 203a
000877 6570      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x70,0x65
000878 6972
000879 646f
00087a 3d20
00087b 3020      	.DB  0x72,0x69,0x6F,0x64,0x20,0x3D,0x20,0x30
00087c 0a0d
00087d 3c00
00087e 4954
00087f 454d      	.DB  0xD,0xA,0x0,0x3C,0x54,0x49,0x4D,0x45
000880 5f52
000881 6573
000882 5474
000883 6d69      	.DB  0x52,0x5F,0x73,0x65,0x74,0x54,0x69,0x6D
000884 7265
000885 203e
000886 6162
000887 6573      	.DB  0x65,0x72,0x3E,0x20,0x62,0x61,0x73,0x65
000888 6f43
000889 6e75
00088a 6574
00088b 5b72      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x65,0x72,0x5B
00088c 6c25
00088d 5d64
00088e 2b20
00088f 7020      	.DB  0x25,0x6C,0x64,0x5D,0x20,0x2B,0x20,0x70
000890 7265
000891 6f69
000892 5b64
000893 6c25      	.DB  0x65,0x72,0x69,0x6F,0x64,0x5B,0x25,0x6C
000894 5d64
000895 3d20
000896 2520
000897 646c      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x6C,0x64
000898 4f20
000899 4556
00089a 4652
00089b 4f4c      	.DB  0x20,0x4F,0x56,0x45,0x52,0x46,0x4C,0x4F
00089c 2157
00089d 0d21
00089e 000a
00089f 573c      	.DB  0x57,0x21,0x21,0xD,0xA,0x0,0x3C,0x57
0008a0 5444
0008a1 203e
0008a2 6157
0008a3 6374      	.DB  0x44,0x54,0x3E,0x20,0x57,0x61,0x74,0x63
0008a4 4468
0008a5 676f
0008a6 5420
0008a7 6d69      	.DB  0x68,0x44,0x6F,0x67,0x20,0x54,0x69,0x6D
0008a8 7265
0008a9 5220
0008aa 7365
0008ab 7465      	.DB  0x65,0x72,0x20,0x52,0x65,0x73,0x65,0x74
0008ac 2121
0008ad 0a0d
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1742): warning: .cseg .db misalignment - padding zero byte
0008ae 0000      	.DB  0x21,0x21,0xD,0xA,0x0
                 _0x80003:
0008af ffff      	.DB  0xFF,0xFF
                 _0x80000:
0008b0 493c
0008b1 5f4f
0008b2 656b
0008b3 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008b4 6568
0008b5 6b63
0008b6 203e
0008b7 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008b8 2079
0008b9 4f4d
0008ba 4544
0008bb 0a0d      	.DB  0x79,0x20,0x4D,0x4F,0x44,0x45,0xD,0xA
0008bc 3c00
0008bd 4f49
0008be 6b5f
0008bf 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008c0 6843
0008c1 6365
0008c2 3e6b
0008c3 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008c4 7965
0008c5 5520
0008c6 0d50
0008c7 000a      	.DB  0x65,0x79,0x20,0x55,0x50,0xD,0xA,0x0
0008c8 493c
0008c9 5f4f
0008ca 656b
0008cb 4379      	.DB  0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79,0x43
0008cc 6568
0008cd 6b63
0008ce 203e
0008cf 656b      	.DB  0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B,0x65
0008d0 2079
0008d1 4f44
0008d2 4e57
0008d3 0a0d      	.DB  0x79,0x20,0x44,0x4F,0x57,0x4E,0xD,0xA
0008d4 3c00
0008d5 4f49
0008d6 6b5f
0008d7 7965      	.DB  0x0,0x3C,0x49,0x4F,0x5F,0x6B,0x65,0x79
0008d8 6843
0008d9 6365
0008da 3e6b
0008db 6b20      	.DB  0x43,0x68,0x65,0x63,0x6B,0x3E,0x20,0x6B
0008dc 7965
0008dd 4f20
0008de 0d4b
0008df 000a      	.DB  0x65,0x79,0x20,0x4F,0x4B,0xD,0xA,0x0
                 _0xA0000:
0008e0 6e49
0008e1 7469
0008e2 6169
0008e3 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
0008e4 697a
0008e5 676e
0008e6 4120
0008e7 4344      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x41,0x44,0x43
0008e8 2e2e
0008e9 0020
0008ea 4b4f
0008eb 0a0d      	.DB  0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD,0xA
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1762): warning: .cseg .db misalignment - padding zero byte
0008ec 0000      	.DB  0x0
                 _0xC0003:
0008ed 0063
0008ee 0000
0008ef 0063
0008f0 0000      	.DB  0x63,0x0,0x0,0x0,0x63,0x0,0x0,0x0
0008f1 0063
0008f2 0000      	.DB  0x63,0x0,0x0,0x0
                 _0xC0000:
0008f3 5f63
0008f4 6974
0008f5 656d
0008f6 255b      	.DB  0x63,0x5F,0x74,0x69,0x6D,0x65,0x5B,0x25
0008f7 646c
0008f8 205d
0008f9 2026
0008fa 5f73      	.DB  0x6C,0x64,0x5D,0x20,0x26,0x20,0x73,0x5F
0008fb 6974
0008fc 656d
0008fd 255b
0008fe 646c      	.DB  0x74,0x69,0x6D,0x65,0x5B,0x25,0x6C,0x64
0008ff 205d
000900 3e3d
000901 6420
000902 6669      	.DB  0x5D,0x20,0x3D,0x3E,0x20,0x64,0x69,0x66
000903 5b66
000904 6c25
000905 5d64
000906 0a0d      	.DB  0x66,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
000907 3e00
000908 203e
000909 5452
00090a 5f43      	.DB  0x0,0x3E,0x3E,0x20,0x52,0x54,0x43,0x5F
00090b 6573
00090c 4274
00090d 6e69
00090e 7261      	.DB  0x73,0x65,0x74,0x42,0x69,0x6E,0x61,0x72
00090f 2079
000910 5452
000911 2043
000912 7953      	.DB  0x79,0x20,0x52,0x54,0x43,0x20,0x53,0x79
000913 636e
000914 0d2e
000915 000a
000916 523c      	.DB  0x6E,0x63,0x2E,0xD,0xA,0x0,0x3C,0x52
000917 4354
000918 735f
000919 7465
00091a 6144      	.DB  0x54,0x43,0x5F,0x73,0x65,0x74,0x44,0x61
00091b 6574
00091c 6954
00091d 656d
00091e 203e      	.DB  0x74,0x65,0x54,0x69,0x6D,0x65,0x3E,0x20
00091f 6954
000920 656d
000921 6f7a
000922 656e      	.DB  0x54,0x69,0x6D,0x65,0x7A,0x6F,0x6E,0x65
000923 6f20
000924 7475
000925 6f20
000926 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000927 6172
000928 676e
000929 2065
00092a 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
00092b 642b
00092c 0d29
00092d 000a
00092e 6f4d      	.DB  0x2B,0x64,0x29,0xD,0xA,0x0,0x4D,0x6F
00092f 2e6e
000930 0020
000931 7554
000932 2e65      	.DB  0x6E,0x2E,0x20,0x0,0x54,0x75,0x65,0x2E
000933 0020
000934 6557
000935 2e64
000936 0020      	.DB  0x20,0x0,0x57,0x65,0x64,0x2E,0x20,0x0
000937 6854
000938 2e75
000939 0020
00093a 7246      	.DB  0x54,0x68,0x75,0x2E,0x20,0x0,0x46,0x72
00093b 2e69
00093c 0020
00093d 6153
00093e 2e74      	.DB  0x69,0x2E,0x20,0x0,0x53,0x61,0x74,0x2E
00093f 0020
000940 7553
000941 2e6e
000942 0020      	.DB  0x20,0x0,0x53,0x75,0x6E,0x2E,0x20,0x0
000943 255b
000944 5d64
000945 3025
000946 6434      	.DB  0x5B,0x25,0x64,0x5D,0x25,0x30,0x34,0x64
000947 252d
000948 3230
000949 2d64
00094a 3025      	.DB  0x2D,0x25,0x30,0x32,0x64,0x2D,0x25,0x30
00094b 6432
00094c 2520
00094d 3230
00094e 3a64      	.DB  0x32,0x64,0x20,0x25,0x30,0x32,0x64,0x3A
00094f 3025
000950 6432
000951 253a
000952 3230      	.DB  0x25,0x30,0x32,0x64,0x3A,0x25,0x30,0x32
000953 0d64
000954 000a
000955 7552
000956 6e6e      	.DB  0x64,0xD,0xA,0x0,0x52,0x75,0x6E,0x6E
000957 6e69
000958 2067
000959 6977
00095a 6874      	.DB  0x69,0x6E,0x67,0x20,0x77,0x69,0x74,0x68
00095b 5320
00095c 7379
00095d 6574
00095e 206d      	.DB  0x20,0x53,0x79,0x73,0x74,0x65,0x6D,0x20
00095f 6c43
000960 636f
000961 206b
000962 2040      	.DB  0x43,0x6C,0x6F,0x63,0x6B,0x20,0x40,0x20
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1795): warning: .cseg .db misalignment - padding zero byte
000963 0000      	.DB  0x0
                 _0xE0003:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1797): warning: .cseg .db misalignment - padding zero byte
000964 0001      	.DB  0x1
                 _0xE0004:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1799): warning: .cseg .db misalignment - padding zero byte
000965 0001      	.DB  0x1
                 _0xE0005:
000966 0101
000967 0101
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1801): warning: .cseg .db misalignment - padding zero byte
000968 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0006:
000969 0101
00096a 0101
00096b 0101
00096c 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
00096d 0101
00096e 0101
00096f 0101
000970 0101      	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
                 _0xE0007:
000971 0101
000972 0101
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1806): warning: .cseg .db misalignment - padding zero byte
000973 0001      	.DB  0x1,0x1,0x1,0x1,0x1
                 _0xE0008:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1808): warning: .cseg .db misalignment - padding zero byte
000974 0001      	.DB  0x1
                 _0xE0009:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1810): warning: .cseg .db misalignment - padding zero byte
000975 0001      	.DB  0x1
                 _0xE000A:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(1812): warning: .cseg .db misalignment - padding zero byte
000976 0001      	.DB  0x1
                 _0xE0000:
000977 673c
000978 7465
000979 7250
00097a 706f      	.DB  0x3C,0x67,0x65,0x74,0x50,0x72,0x6F,0x70
00097b 7265
00097c 6974
00097d 7365
00097e 6f43      	.DB  0x65,0x72,0x74,0x69,0x65,0x73,0x43,0x6F
00097f 666e
000980 6769
000981 203e
000982 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000983 6320
000984 6e6f
000985 6966
000986 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000987 6172
000988 6974
000989 6e6f
00098a 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
00098b 7375
00098c 2065
00098d 6564
00098e 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
00098f 6c75
000990 0d74
000991 000a
000992 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000993 7465
000994 704f
000995 7265
000996 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
000997 6e69
000998 4367
000999 6e6f
00099a 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
00099b 3e67
00099c 6e20
00099d 206f
00099e 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
00099f 666e
0009a0 6769
0009a1 7275
0009a2 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
0009a3 6f69
0009a4 2c6e
0009a5 7520
0009a6 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
0009a7 6420
0009a8 6665
0009a9 7561
0009aa 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
0009ab 0a0d
0009ac 3c00
0009ad 6567
0009ae 4f74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4F
0009af 6570
0009b0 6172
0009b1 6974
0009b2 676e      	.DB  0x70,0x65,0x72,0x61,0x74,0x69,0x6E,0x67
0009b3 6f43
0009b4 666e
0009b5 6769
0009b6 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0009b7 6f6d
0009b8 6564
0009b9 2020
0009ba 2020      	.DB  0x6D,0x6F,0x64,0x65,0x20,0x20,0x20,0x20
0009bb 2020
0009bc 2020
0009bd 2020
0009be 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0009bf 3e3e
0009c0 3020
0009c1 2578
0009c2 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
0009c3 0d58
0009c4 000a
0009c5 673c
0009c6 7465      	.DB  0x58,0xD,0xA,0x0,0x3C,0x67,0x65,0x74
0009c7 704f
0009c8 7265
0009c9 7461
0009ca 6e69      	.DB  0x4F,0x70,0x65,0x72,0x61,0x74,0x69,0x6E
0009cb 4367
0009cc 6e6f
0009cd 6966
0009ce 3e67      	.DB  0x67,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
0009cf 6420
0009d0 7665
0009d1 6369
0009d2 4565      	.DB  0x20,0x64,0x65,0x76,0x69,0x63,0x65,0x45
0009d3 616e
0009d4 6c62
0009d5 2065
0009d6 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009d7 3e20
0009d8 203e
0009d9 7830
0009da 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
0009db 5832
0009dc 0a0d
0009dd 3c00
0009de 6567      	.DB  0x32,0x58,0xD,0xA,0x0,0x3C,0x67,0x65
0009df 4f74
0009e0 6570
0009e1 6172
0009e2 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
0009e3 676e
0009e4 6f43
0009e5 666e
0009e6 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
0009e7 203e
0009e8 6c61
0009e9 7261
0009ea 456d      	.DB  0x3E,0x20,0x61,0x6C,0x61,0x72,0x6D,0x45
0009eb 616e
0009ec 6c62
0009ed 2065
0009ee 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
0009ef 2020
0009f0 3e3e
0009f1 3020
0009f2 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
0009f3 3230
0009f4 0d58
0009f5 000a
0009f6 673c      	.DB  0x30,0x32,0x58,0xD,0xA,0x0,0x3C,0x67
0009f7 7465
0009f8 704f
0009f9 7265
0009fa 7461      	.DB  0x65,0x74,0x4F,0x70,0x65,0x72,0x61,0x74
0009fb 6e69
0009fc 4367
0009fd 6e6f
0009fe 6966      	.DB  0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69
0009ff 3e67
000a00 7320
000a01 6e65
000a02 6f73      	.DB  0x67,0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F
000a03 4572
000a04 616e
000a05 6c62
000a06 2065      	.DB  0x72,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000a07 2020
000a08 3e20
000a09 203e
000a0a 5b00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0x5B
000a0b 7830
000a0c 3025
000a0d 5832
000a0e 005d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x0
000a0f 673c
000a10 7465
000a11 6553
000a12 736e      	.DB  0x3C,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
000a13 726f
000a14 6f43
000a15 666e
000a16 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000a17 203e
000a18 6573
000a19 736e
000a1a 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
000a1b 6320
000a1c 6168
000a1d 6e6e
000a1e 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000a1f 6f20
000a20 7475
000a21 6f20
000a22 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000a23 6172
000a24 676e
000a25 2065
000a26 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000a27 2964
000a28 0a0d
000a29 3c00
000a2a 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000a2b 5374
000a2c 6e65
000a2d 6f73
000a2e 4372      	.DB  0x74,0x53,0x65,0x6E,0x73,0x6F,0x72,0x43
000a2f 6e6f
000a30 6966
000a31 3e67
000a32 6e20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E
000a33 206f
000a34 6f63
000a35 666e
000a36 6769      	.DB  0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
000a37 7275
000a38 7461
000a39 6f69
000a3a 2c6e      	.DB  0x75,0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C
000a3b 7520
000a3c 6573
000a3d 6420
000a3e 6665      	.DB  0x20,0x75,0x73,0x65,0x20,0x64,0x65,0x66
000a3f 7561
000a40 746c
000a41 0a0d
000a42 3c00      	.DB  0x61,0x75,0x6C,0x74,0xD,0xA,0x0,0x3C
000a43 6567
000a44 4174
000a45 7875
000a46 6944      	.DB  0x67,0x65,0x74,0x41,0x75,0x78,0x44,0x69
000a47 436e
000a48 6e6f
000a49 6966
000a4a 3e67      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000a4b 6420
000a4c 6769
000a4d 7469
000a4e 6c61      	.DB  0x20,0x64,0x69,0x67,0x69,0x74,0x61,0x6C
000a4f 6920
000a50 706e
000a51 7475
000a52 6320      	.DB  0x20,0x69,0x6E,0x70,0x75,0x74,0x20,0x63
000a53 6168
000a54 6e6e
000a55 6c65
000a56 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a57 7475
000a58 6f20
000a59 2066
000a5a 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a5b 676e
000a5c 2065
000a5d 2528
000a5e 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a5f 0a0d
000a60 3c00
000a61 6567
000a62 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a63 7875
000a64 6944
000a65 436e
000a66 6e6f      	.DB  0x75,0x78,0x44,0x69,0x6E,0x43,0x6F,0x6E
000a67 6966
000a68 3e67
000a69 6e20
000a6a 206f      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F,0x20
000a6b 6f63
000a6c 666e
000a6d 6769
000a6e 7275      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x75,0x72
000a6f 7461
000a70 6f69
000a71 2c6e
000a72 7520      	.DB  0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20,0x75
000a73 6573
000a74 6420
000a75 6665
000a76 7561      	.DB  0x73,0x65,0x20,0x64,0x65,0x66,0x61,0x75
000a77 746c
000a78 0a0d
000a79 3c00
000a7a 6567      	.DB  0x6C,0x74,0xD,0xA,0x0,0x3C,0x67,0x65
000a7b 4174
000a7c 7875
000a7d 6f44
000a7e 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000a7f 6f43
000a80 666e
000a81 6769
000a82 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000a83 6964
000a84 6967
000a85 6174
000a86 206c      	.DB  0x64,0x69,0x67,0x69,0x74,0x61,0x6C,0x20
000a87 756f
000a88 7074
000a89 7475
000a8a 6320      	.DB  0x6F,0x75,0x74,0x70,0x75,0x74,0x20,0x63
000a8b 6168
000a8c 6e6e
000a8d 6c65
000a8e 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
000a8f 7475
000a90 6f20
000a91 2066
000a92 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
000a93 676e
000a94 2065
000a95 2528
000a96 2964      	.DB  0x6E,0x67,0x65,0x20,0x28,0x25,0x64,0x29
000a97 0a0d
000a98 3c00
000a99 6567
000a9a 4174      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x41
000a9b 7875
000a9c 6f44
000a9d 7475
000a9e 6f43      	.DB  0x75,0x78,0x44,0x6F,0x75,0x74,0x43,0x6F
000a9f 666e
000aa0 6769
000aa1 203e
000aa2 6f6e      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6E,0x6F
000aa3 6320
000aa4 6e6f
000aa5 6966
000aa6 7567      	.DB  0x20,0x63,0x6F,0x6E,0x66,0x69,0x67,0x75
000aa7 6172
000aa8 6974
000aa9 6e6f
000aaa 202c      	.DB  0x72,0x61,0x74,0x69,0x6F,0x6E,0x2C,0x20
000aab 7375
000aac 2065
000aad 6564
000aae 6166      	.DB  0x75,0x73,0x65,0x20,0x64,0x65,0x66,0x61
000aaf 6c75
000ab0 0d74
000ab1 000a
000ab2 673c      	.DB  0x75,0x6C,0x74,0xD,0xA,0x0,0x3C,0x67
000ab3 7465
000ab4 7541
000ab5 4478
000ab6 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000ab7 4374
000ab8 6e6f
000ab9 6966
000aba 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000abb 2d20
000abc 202d
000abd 4843
000abe 2520      	.DB  0x20,0x2D,0x2D,0x20,0x43,0x48,0x20,0x25
000abf 2064
000ac0 2d2d
000ac1 0d20
000ac2 000a      	.DB  0x64,0x20,0x2D,0x2D,0x20,0xD,0xA,0x0
000ac3 673c
000ac4 7465
000ac5 7541
000ac6 4478      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x44
000ac7 756f
000ac8 4374
000ac9 6e6f
000aca 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000acb 3e67
000acc 6520
000acd 616e
000ace 6c62      	.DB  0x67,0x3E,0x20,0x65,0x6E,0x61,0x62,0x6C
000acf 2065
000ad0 2020
000ad1 2020
000ad2 2020      	.DB  0x65,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000ad3 2020
000ad4 305b
000ad5 2578
000ad6 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
000ad7 5d58
000ad8 0a0d
000ad9 3c00
000ada 6567      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x67,0x65
000adb 4174
000adc 7875
000add 6f44
000ade 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
000adf 6f43
000ae0 666e
000ae1 6769
000ae2 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000ae3 7473
000ae4 7461
000ae5 4f65
000ae6 456e      	.DB  0x73,0x74,0x61,0x74,0x65,0x4F,0x6E,0x45
000ae7 6576
000ae8 746e
000ae9 2020
000aea 5b20      	.DB  0x76,0x65,0x6E,0x74,0x20,0x20,0x20,0x5B
000aeb 7830
000aec 3025
000aed 5832
000aee 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000aef 000a
000af0 673c
000af1 7465
000af2 7541      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x41,0x75
000af3 4478
000af4 756f
000af5 4374
000af6 6e6f      	.DB  0x78,0x44,0x6F,0x75,0x74,0x43,0x6F,0x6E
000af7 6966
000af8 3e67
000af9 6e20
000afa 6d75      	.DB  0x66,0x69,0x67,0x3E,0x20,0x6E,0x75,0x6D
000afb 6562
000afc 4572
000afd 5376
000afe 6372      	.DB  0x62,0x65,0x72,0x45,0x76,0x53,0x72,0x63
000aff 2020
000b00 2020
000b01 255b
000b02 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000b03 3e2d
000b04 3c00
000b05 6567
000b06 4174      	.DB  0x2D,0x3E,0x0,0x3C,0x67,0x65,0x74,0x41
000b07 7875
000b08 6941
000b09 436e
000b0a 6e6f      	.DB  0x75,0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E
000b0b 6966
000b0c 3e67
000b0d 6120
000b0e 616e      	.DB  0x66,0x69,0x67,0x3E,0x20,0x61,0x6E,0x61
000b0f 6f6c
000b10 2067
000b11 6e69
000b12 7570      	.DB  0x6C,0x6F,0x67,0x20,0x69,0x6E,0x70,0x75
000b13 2074
000b14 6863
000b15 6e61
000b16 656e      	.DB  0x74,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000b17 206c
000b18 756f
000b19 2074
000b1a 666f      	.DB  0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
000b1b 7220
000b1c 6e61
000b1d 6567
000b1e 2820      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0x20,0x28
000b1f 6425
000b20 0d29
000b21 000a
000b22 673c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x67
000b23 7465
000b24 7541
000b25 4178
000b26 6e69      	.DB  0x65,0x74,0x41,0x75,0x78,0x41,0x69,0x6E
000b27 6f43
000b28 666e
000b29 6769
000b2a 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b2b 6f6e
000b2c 6320
000b2d 6e6f
000b2e 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b2f 7567
000b30 6172
000b31 6974
000b32 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b33 202c
000b34 7375
000b35 2065
000b36 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b37 6166
000b38 6c75
000b39 0d74
000b3a 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b3b 673c
000b3c 7465
000b3d 7541
000b3e 4178      	.DB  0x3C,0x67,0x65,0x74,0x41,0x75,0x78,0x41
000b3f 756f
000b40 4374
000b41 6e6f
000b42 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
000b43 3e67
000b44 6120
000b45 616e
000b46 6f6c      	.DB  0x67,0x3E,0x20,0x61,0x6E,0x61,0x6C,0x6F
000b47 2067
000b48 756f
000b49 7074
000b4a 7475      	.DB  0x67,0x20,0x6F,0x75,0x74,0x70,0x75,0x74
000b4b 6320
000b4c 6168
000b4d 6e6e
000b4e 6c65      	.DB  0x20,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
000b4f 6f20
000b50 7475
000b51 6f20
000b52 2066      	.DB  0x20,0x6F,0x75,0x74,0x20,0x6F,0x66,0x20
000b53 6172
000b54 676e
000b55 2065
000b56 2528      	.DB  0x72,0x61,0x6E,0x67,0x65,0x20,0x28,0x25
000b57 2964
000b58 0a0d
000b59 3c00
000b5a 6567      	.DB  0x64,0x29,0xD,0xA,0x0,0x3C,0x67,0x65
000b5b 4174
000b5c 7875
000b5d 6f41
000b5e 7475      	.DB  0x74,0x41,0x75,0x78,0x41,0x6F,0x75,0x74
000b5f 6f43
000b60 666e
000b61 6769
000b62 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
000b63 6f6e
000b64 6320
000b65 6e6f
000b66 6966      	.DB  0x6E,0x6F,0x20,0x63,0x6F,0x6E,0x66,0x69
000b67 7567
000b68 6172
000b69 6974
000b6a 6e6f      	.DB  0x67,0x75,0x72,0x61,0x74,0x69,0x6F,0x6E
000b6b 202c
000b6c 7375
000b6d 2065
000b6e 6564      	.DB  0x2C,0x20,0x75,0x73,0x65,0x20,0x64,0x65
000b6f 6166
000b70 6c75
000b71 0d74
000b72 000a      	.DB  0x66,0x61,0x75,0x6C,0x74,0xD,0xA,0x0
000b73 673c
000b74 7465
000b75 7542
000b76 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000b77 7265
000b78 6f43
000b79 666e
000b7a 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000b7b 203e
000b7c 6f6e
000b7d 6320
000b7e 6e6f      	.DB  0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F,0x6E
000b7f 6966
000b80 7567
000b81 6172
000b82 6974      	.DB  0x66,0x69,0x67,0x75,0x72,0x61,0x74,0x69
000b83 6e6f
000b84 202c
000b85 7375
000b86 2065      	.DB  0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65,0x20
000b87 6564
000b88 6166
000b89 6c75
000b8a 0d74      	.DB  0x64,0x65,0x66,0x61,0x75,0x6C,0x74,0xD
000b8b 000a
000b8c 673c
000b8d 7465
000b8e 7542      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x42,0x75
000b8f 7a7a
000b90 7265
000b91 6f43
000b92 666e      	.DB  0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66
000b93 6769
000b94 203e
000b95 6e65
000b96 6261      	.DB  0x69,0x67,0x3E,0x20,0x65,0x6E,0x61,0x62
000b97 656c
000b98 2020
000b99 2020
000b9a 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000b9b 2020
000b9c 2020
000b9d 2020
000b9e 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000b9f 305b
000ba0 2578
000ba1 3230
000ba2 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000ba3 0a0d
000ba4 3c00
000ba5 6567
000ba6 4274      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x42
000ba7 7a75
000ba8 657a
000ba9 4372
000baa 6e6f      	.DB  0x75,0x7A,0x7A,0x65,0x72,0x43,0x6F,0x6E
000bab 6966
000bac 3e67
000bad 6520
000bae 6576      	.DB  0x66,0x69,0x67,0x3E,0x20,0x65,0x76,0x65
000baf 746e
000bb0 6f53
000bb1 7275
000bb2 6563      	.DB  0x6E,0x74,0x53,0x6F,0x75,0x72,0x63,0x65
000bb3 754e
000bb4 626d
000bb5 7265
000bb6 3e20      	.DB  0x4E,0x75,0x6D,0x62,0x65,0x72,0x20,0x3E
000bb7 5b3e
000bb8 6425
000bb9 0d5d
000bba 000a      	.DB  0x3E,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
000bbb 673c
000bbc 7465
000bbd 7542
000bbe 7a7a      	.DB  0x3C,0x67,0x65,0x74,0x42,0x75,0x7A,0x7A
000bbf 7265
000bc0 6f43
000bc1 666e
000bc2 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000bc3 203e
000bc4 7665
000bc5 6e65
000bc6 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000bc7 756f
000bc8 6372
000bc9 2065
000bca 2020      	.DB  0x6F,0x75,0x72,0x63,0x65,0x20,0x20,0x20
000bcb 2020
000bcc 2020
000bcd 3e3e
000bce 3c00      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x0,0x3C
000bcf 6567
000bd0 4574
000bd1 766e
000bd2 6c41      	.DB  0x67,0x65,0x74,0x45,0x6E,0x76,0x41,0x6C
000bd3 7261
000bd4 436d
000bd5 6e6f
000bd6 6966      	.DB  0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66,0x69
000bd7 3e67
000bd8 6e20
000bd9 206f
000bda 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000bdb 666e
000bdc 6769
000bdd 7275
000bde 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000bdf 6f69
000be0 2c6e
000be1 7520
000be2 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000be3 6420
000be4 6665
000be5 7561
000be6 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000be7 0a0d
000be8 3c00
000be9 6567
000bea 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000beb 766e
000bec 6c41
000bed 7261
000bee 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000bef 6e6f
000bf0 6966
000bf1 3e67
000bf2 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000bf3 6d73
000bf4 5352
000bf5 4953
000bf6 654c      	.DB  0x73,0x6D,0x52,0x53,0x53,0x49,0x4C,0x65
000bf7 6576
000bf8 206c
000bf9 2020
000bfa 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000bfb 2020
000bfc 2020
000bfd 255b
000bfe 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000bff 0a0d
000c00 3c00
000c01 6567
000c02 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c03 766e
000c04 6c41
000c05 7261
000c06 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c07 6e6f
000c08 6966
000c09 3e67
000c0a 6720      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x67
000c0b 6d73
000c0c 7243
000c0d 6465
000c0e 7469      	.DB  0x73,0x6D,0x43,0x72,0x65,0x64,0x69,0x74
000c0f 6142
000c10 616c
000c11 636e
000c12 2065      	.DB  0x42,0x61,0x6C,0x61,0x6E,0x63,0x65,0x20
000c13 2020
000c14 2020
000c15 255b
000c16 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c17 0a0d
000c18 3c00
000c19 6567
000c1a 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c1b 766e
000c1c 6c41
000c1d 7261
000c1e 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c1f 6e6f
000c20 6966
000c21 3e67
000c22 6220      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x62
000c23 7461
000c24 6574
000c25 7972
000c26 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000c27 6576
000c28 206c
000c29 2020
000c2a 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000c2b 2020
000c2c 2020
000c2d 255b
000c2e 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c2f 0a0d
000c30 3c00
000c31 6567
000c32 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c33 766e
000c34 6c41
000c35 7261
000c36 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c37 6e6f
000c38 6966
000c39 3e67
000c3a 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c3b 6d6f
000c3c 536d
000c3d 6769
000c3e 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000c3f 4c6c
000c40 7665
000c41 6c65
000c42 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000c43 2020
000c44 2020
000c45 255b
000c46 5d66      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x66,0x5D
000c47 0a0d
000c48 3c00
000c49 6567
000c4a 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c4b 766e
000c4c 6c41
000c4d 7261
000c4e 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c4f 6e6f
000c50 6966
000c51 3e67
000c52 6320      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x63
000c53 6d6f
000c54 4c6d
000c55 736f
000c56 4474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x44
000c57 6c65
000c58 7961
000c59 2020
000c5a 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
000c5b 2020
000c5c 2020
000c5d 255b
000c5e 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
000c5f 0a0d
000c60 3c00
000c61 6567
000c62 4574      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x45
000c63 766e
000c64 6c41
000c65 7261
000c66 436d      	.DB  0x6E,0x76,0x41,0x6C,0x61,0x72,0x6D,0x43
000c67 6e6f
000c68 6966
000c69 3e67
000c6a 6d20      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D
000c6b 6d65
000c6c 726f
000c6d 4d79
000c6e 6e69      	.DB  0x65,0x6D,0x6F,0x72,0x79,0x4D,0x69,0x6E
000c6f 2020
000c70 2020
000c71 2020
000c72 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
000c73 2020
000c74 2020
000c75 255b
000c76 5d75      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x75,0x5D
000c77 0a0d
000c78 3c00
000c79 6567
000c7a 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c7b 6174
000c7c 7574
000c7d 5273
000c7e 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c7f 726f
000c80 4374
000c81 6e6f
000c82 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c83 3e67
000c84 6e20
000c85 206f
000c86 6f63      	.DB  0x67,0x3E,0x20,0x6E,0x6F,0x20,0x63,0x6F
000c87 666e
000c88 6769
000c89 7275
000c8a 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
000c8b 6f69
000c8c 2c6e
000c8d 7520
000c8e 6573      	.DB  0x69,0x6F,0x6E,0x2C,0x20,0x75,0x73,0x65
000c8f 6420
000c90 6665
000c91 7561
000c92 746c      	.DB  0x20,0x64,0x65,0x66,0x61,0x75,0x6C,0x74
000c93 0a0d
000c94 3c00
000c95 6567
000c96 5374      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x53
000c97 6174
000c98 7574
000c99 5273
000c9a 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
000c9b 726f
000c9c 4374
000c9d 6e6f
000c9e 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
000c9f 3e67
000ca0 6120
000ca1 6363
000ca2 206d      	.DB  0x67,0x3E,0x20,0x61,0x63,0x63,0x6D,0x20
000ca3 2020
000ca4 2020
000ca5 2020
000ca6 5b20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
000ca7 7830
000ca8 3025
000ca9 5832
000caa 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
000cab 000a
000cac 673c
000cad 7465
000cae 7453      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x53,0x74
000caf 7461
000cb0 7375
000cb1 6552
000cb2 6f70      	.DB  0x61,0x74,0x75,0x73,0x52,0x65,0x70,0x6F
000cb3 7472
000cb4 6f43
000cb5 666e
000cb6 6769      	.DB  0x72,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000cb7 203e
000cb8 6e69
000cb9 7674
000cba 2020      	.DB  0x3E,0x20,0x69,0x6E,0x74,0x76,0x20,0x20
000cbb 2020
000cbc 2020
000cbd 2020
000cbe 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
000cbf 5d64
000cc0 0a0d
000cc1 3c00
000cc2 6573      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
000cc3 4f74
000cc4 6570
000cc5 6172
000cc6 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
000cc7 676e
000cc8 6f43
000cc9 666e
000cca 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
000ccb 203e
000ccc 7245
000ccd 6f72
000cce 3a72      	.DB  0x3E,0x20,0x45,0x72,0x72,0x6F,0x72,0x3A
000ccf 6f20
000cd0 6570
000cd1 6172
000cd2 6974      	.DB  0x20,0x6F,0x70,0x65,0x72,0x61,0x74,0x69
000cd3 676e
000cd4 6d20
000cd5 646f
000cd6 2065      	.DB  0x6E,0x67,0x20,0x6D,0x6F,0x64,0x65,0x20
000cd7 6e69
000cd8 6176
000cd9 696c
000cda 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
000cdb 305b
000cdc 2578
000cdd 3230
000cde 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
000cdf 0a0d
000ce0 0d00
000ce1 200a
000ce2 6f6d      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6D,0x6F
000ce3 6564
000ce4 2020
000ce5 2020
000ce6 2020      	.DB  0x64,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000ce7 2020
000ce8 2020
000ce9 2020
000cea 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000ceb 3020
000cec 2578
000ced 3230
000cee 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000cef 0a0d
000cf0 6420
000cf1 7665
000cf2 6369      	.DB  0xD,0xA,0x20,0x64,0x65,0x76,0x69,0x63
000cf3 4565
000cf4 616e
000cf5 6c62
000cf6 2065      	.DB  0x65,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000cf7 2020
000cf8 3e20
000cf9 203e
000cfa 7830      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x30,0x78
000cfb 3025
000cfc 5832
000cfd 0d00
000cfe 200a      	.DB  0x25,0x30,0x32,0x58,0x0,0xD,0xA,0x20
000cff 6c61
000d00 7261
000d01 456d
000d02 616e      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x45,0x6E,0x61
000d03 6c62
000d04 2065
000d05 2020
000d06 2020      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x20
000d07 3e3e
000d08 3020
000d09 2578
000d0a 3230      	.DB  0x3E,0x3E,0x20,0x30,0x78,0x25,0x30,0x32
000d0b 0058
000d0c 0a0d
000d0d 7320
000d0e 6e65      	.DB  0x58,0x0,0xD,0xA,0x20,0x73,0x65,0x6E
000d0f 6f73
000d10 4572
000d11 616e
000d12 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
000d13 2065
000d14 2020
000d15 3e20
000d16 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d17 3c00
000d18 6573
000d19 5374
000d1a 6e65      	.DB  0x0,0x3C,0x73,0x65,0x74,0x53,0x65,0x6E
000d1b 6f73
000d1c 4372
000d1d 6e6f
000d1e 6966      	.DB  0x73,0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69
000d1f 3e67
000d20 4520
000d21 5252
000d22 203a      	.DB  0x67,0x3E,0x20,0x45,0x52,0x52,0x3A,0x20
000d23 6863
000d24 6e61
000d25 656e
000d26 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
000d27 756f
000d28 2074
000d29 666f
000d2a 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
000d2b 6e61
000d2c 6567
000d2d 0a0d
000d2e 3c00      	.DB  0x61,0x6E,0x67,0x65,0xD,0xA,0x0,0x3C
000d2f 6573
000d30 5374
000d31 6e65
000d32 6f73      	.DB  0x73,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000d33 4372
000d34 6e6f
000d35 6966
000d36 3e67      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000d37 4520
000d38 5252
000d39 203a
000d3a 6173      	.DB  0x20,0x45,0x52,0x52,0x3A,0x20,0x73,0x61
000d3b 706d
000d3c 696c
000d3d 676e
000d3e 6152      	.DB  0x6D,0x70,0x6C,0x69,0x6E,0x67,0x52,0x61
000d3f 6574
000d40 6320
000d41 756f
000d42 646c      	.DB  0x74,0x65,0x20,0x63,0x6F,0x75,0x6C,0x64
000d43 276e
000d44 2074
000d45 6562
000d46 7320      	.DB  0x6E,0x27,0x74,0x20,0x62,0x65,0x20,0x73
000d47 7465
000d48 7420
000d49 206f
000d4a 0d30      	.DB  0x65,0x74,0x20,0x74,0x6F,0x20,0x30,0xD
000d4b 000a
000d4c 0a0d
000d4d 7320
000d4e 6d61      	.DB  0xA,0x0,0xD,0xA,0x20,0x73,0x61,0x6D
000d4f 6c70
000d50 6e69
000d51 5267
000d52 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
000d53 2065
000d54 2020
000d55 3e20
000d56 203e      	.DB  0x65,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000d57 7830
000d58 3025
000d59 5834
000d5a 0d00      	.DB  0x30,0x78,0x25,0x30,0x34,0x58,0x0,0xD
000d5b 200a
000d5c 6572
000d5d 634f
000d5e 7563      	.DB  0xA,0x20,0x72,0x65,0x4F,0x63,0x63,0x75
000d5f 7272
000d60 6e65
000d61 6563
000d62 2020      	.DB  0x72,0x72,0x65,0x6E,0x63,0x65,0x20,0x20
000d63 2020
000d64 3e3e
000d65 3020
000d66 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000d67 3430
000d68 0058
000d69 0a0d
000d6a 7420      	.DB  0x30,0x34,0x58,0x0,0xD,0xA,0x20,0x74
000d6b 6d69
000d6c 5365
000d6d 6174
000d6e 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
000d6f 6f48
000d70 7275
000d71 2020
000d72 3e20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x3E
000d73 203e
000d74 7830
000d75 3025
000d76 5832      	.DB  0x3E,0x20,0x30,0x78,0x25,0x30,0x32,0x58
000d77 0d00
000d78 200a
000d79 6974
000d7a 656d      	.DB  0x0,0xD,0xA,0x20,0x74,0x69,0x6D,0x65
000d7b 7453
000d7c 7261
000d7d 4d74
000d7e 6e69      	.DB  0x53,0x74,0x61,0x72,0x74,0x4D,0x69,0x6E
000d7f 2020
000d80 2020
000d81 3e3e
000d82 3020      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x30
000d83 2578
000d84 3230
000d85 0058
000d86 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x0,0xD,0xA
000d87 7420
000d88 6d69
000d89 5365
000d8a 6f74      	.DB  0x20,0x74,0x69,0x6D,0x65,0x53,0x74,0x6F
000d8b 4870
000d8c 756f
000d8d 2072
000d8e 2020      	.DB  0x70,0x48,0x6F,0x75,0x72,0x20,0x20,0x20
000d8f 3e20
000d90 203e
000d91 7830
000d92 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000d93 5832
000d94 0d00
000d95 200a
000d96 6974      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x74,0x69
000d97 656d
000d98 7453
000d99 706f
000d9a 694d      	.DB  0x6D,0x65,0x53,0x74,0x6F,0x70,0x4D,0x69
000d9b 206e
000d9c 2020
000d9d 2020
000d9e 3e3e      	.DB  0x6E,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000d9f 3020
000da0 2578
000da1 3230
000da2 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000da3 0a0d
000da4 6c20
000da5 776f
000da6 7265      	.DB  0xD,0xA,0x20,0x6C,0x6F,0x77,0x65,0x72
000da7 694c
000da8 696d
000da9 2074
000daa 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
000dab 2020
000dac 3e20
000dad 203e
000dae 6625      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x66
000daf 5b20
000db0 3025
000db1 6c34
000db2 5d58      	.DB  0x20,0x5B,0x25,0x30,0x34,0x6C,0x58,0x5D
000db3 0d00
000db4 200a
000db5 6f6c
000db6 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000db7 4472
000db8 6c65
000db9 7961
000dba 2020      	.DB  0x72,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
000dbb 2020
000dbc 2020
000dbd 3e3e
000dbe 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000dbf 2064
000dc0 255b
000dc1 3230
000dc2 5d58      	.DB  0x64,0x20,0x5B,0x25,0x30,0x32,0x58,0x5D
000dc3 0d00
000dc4 200a
000dc5 6f6c
000dc6 6577      	.DB  0x0,0xD,0xA,0x20,0x6C,0x6F,0x77,0x65
000dc7 4572
000dc8 7478
000dc9 6572
000dca 656d      	.DB  0x72,0x45,0x78,0x74,0x72,0x65,0x6D,0x65
000dcb 2020
000dcc 2020
000dcd 3e3e
000dce 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000dcf 2066
000dd0 255b
000dd1 3430
000dd2 586c      	.DB  0x66,0x20,0x5B,0x25,0x30,0x34,0x6C,0x58
000dd3 005d
000dd4 0a0d
000dd5 7520
000dd6 7070      	.DB  0x5D,0x0,0xD,0xA,0x20,0x75,0x70,0x70
000dd7 7265
000dd8 694c
000dd9 696d
000dda 2074      	.DB  0x65,0x72,0x4C,0x69,0x6D,0x69,0x74,0x20
000ddb 2020
000ddc 2020
000ddd 3e20
000dde 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000ddf 6625
000de0 5b20
000de1 3025
000de2 6c34      	.DB  0x25,0x66,0x20,0x5B,0x25,0x30,0x34,0x6C
000de3 5d58
000de4 0d00
000de5 200a
000de6 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000de7 6570
000de8 4472
000de9 6c65
000dea 7961      	.DB  0x70,0x65,0x72,0x44,0x65,0x6C,0x61,0x79
000deb 2020
000dec 2020
000ded 2020
000dee 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000def 2520
000df0 2064
000df1 255b
000df2 3230      	.DB  0x20,0x25,0x64,0x20,0x5B,0x25,0x30,0x32
000df3 5d58
000df4 0d00
000df5 200a
000df6 7075      	.DB  0x58,0x5D,0x0,0xD,0xA,0x20,0x75,0x70
000df7 6570
000df8 4572
000df9 7478
000dfa 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
000dfb 656d
000dfc 2020
000dfd 2020
000dfe 3e3e      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x3E,0x3E
000dff 2520
000e00 2066
000e01 255b
000e02 3430      	.DB  0x20,0x25,0x66,0x20,0x5B,0x25,0x30,0x34
000e03 586c
000e04 005d
000e05 0a0d
000e06 6320      	.DB  0x6C,0x58,0x5D,0x0,0xD,0xA,0x20,0x63
000e07 6168
000e08 6e6e
000e09 6c65
000e0a 2020      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x20
000e0b 2020
000e0c 2020
000e0d 2020
000e0e 3e20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e0f 203e
000e10 255b
000e11 5d64
000e12 0d00      	.DB  0x3E,0x20,0x5B,0x25,0x64,0x5D,0x0,0xD
000e13 200a
000e14 6863
000e15 6e61
000e16 656e      	.DB  0xA,0x20,0x63,0x68,0x61,0x6E,0x6E,0x65
000e17 456c
000e18 616e
000e19 6c62
000e1a 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
000e1b 2020
000e1c 3e3e
000e1d 3020
000e1e 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e1f 3230
000e20 0058
000e21 0a0d
000e22 6120      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x61
000e23 616c
000e24 6d72
000e25 6544
000e26 616c      	.DB  0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C,0x61
000e27 2079
000e28 2020
000e29 2020
000e2a 3e20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x3E
000e2b 203e
000e2c 6425
000e2d 0d00
000e2e 3c0a      	.DB  0x3E,0x20,0x25,0x64,0x0,0xD,0xA,0x3C
000e2f 6573
000e30 4174
000e31 7875
000e32 6f44      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x6F
000e33 7475
000e34 6f43
000e35 666e
000e36 6769      	.DB  0x75,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
000e37 203e
000e38 6843
000e39 6e61
000e3a 656e      	.DB  0x3E,0x20,0x43,0x68,0x61,0x6E,0x6E,0x65
000e3b 206c
000e3c 7245
000e3d 6f72
000e3e 2172      	.DB  0x6C,0x20,0x45,0x72,0x72,0x6F,0x72,0x21
000e3f 0d21
000e40 000a
000e41 0a0d
000e42 733c      	.DB  0x21,0xD,0xA,0x0,0xD,0xA,0x3C,0x73
000e43 7465
000e44 7541
000e45 4478
000e46 756f      	.DB  0x65,0x74,0x41,0x75,0x78,0x44,0x6F,0x75
000e47 4374
000e48 6e6f
000e49 6966
000e4a 3e67      	.DB  0x74,0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E
000e4b 6520
000e4c 6576
000e4d 746e
000e4e 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e4f 7275
000e50 6563
000e51 754e
000e52 626d      	.DB  0x75,0x72,0x63,0x65,0x4E,0x75,0x6D,0x62
000e53 7265
000e54 6920
000e55 2073
000e56 6f74      	.DB  0x65,0x72,0x20,0x69,0x73,0x20,0x74,0x6F
000e57 206f
000e58 6f6c
000e59 676e
000e5a 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
000e5b 6425
000e5c 2129
000e5d 0d21
000e5e 000a      	.DB  0x25,0x64,0x29,0x21,0x21,0xD,0xA,0x0
000e5f 0a0d
000e60 6320
000e61 6168
000e62 6e6e      	.DB  0xD,0xA,0x20,0x63,0x68,0x61,0x6E,0x6E
000e63 6c65
000e64 2020
000e65 2020
000e66 2020      	.DB  0x65,0x6C,0x20,0x20,0x20,0x20,0x20,0x20
000e67 2020
000e68 2020
000e69 3e20
000e6a 203e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000e6b 255b
000e6c 5d64
000e6d 0d00
000e6e 200a      	.DB  0x5B,0x25,0x64,0x5D,0x0,0xD,0xA,0x20
000e6f 6863
000e70 6e61
000e71 656e
000e72 456c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x45
000e73 616e
000e74 6c62
000e75 2065
000e76 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
000e77 2020
000e78 3e3e
000e79 3020
000e7a 2578      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x30,0x78,0x25
000e7b 3230
000e7c 0058
000e7d 0a0d
000e7e 7320      	.DB  0x30,0x32,0x58,0x0,0xD,0xA,0x20,0x73
000e7f 6174
000e80 6574
000e81 6e4f
000e82 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
000e83 6e65
000e84 2074
000e85 2020
000e86 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
000e87 3e20
000e88 203e
000e89 7830
000e8a 3025      	.DB  0x20,0x3E,0x3E,0x20,0x30,0x78,0x25,0x30
000e8b 5832
000e8c 0d00
000e8d 200a
000e8e 7665      	.DB  0x32,0x58,0x0,0xD,0xA,0x20,0x65,0x76
000e8f 6e65
000e90 5374
000e91 756f
000e92 6372      	.DB  0x65,0x6E,0x74,0x53,0x6F,0x75,0x72,0x63
000e93 4e65
000e94 6d75
000e95 6562
000e96 2072      	.DB  0x65,0x4E,0x75,0x6D,0x62,0x65,0x72,0x20
000e97 3e3e
000e98 2520
000e99 0064
000e9a 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x64,0x0,0xD,0xA
000e9b 6520
000e9c 6576
000e9d 746e
000e9e 6f53      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
000e9f 7275
000ea0 6563
000ea1 2020
000ea2 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
000ea3 2020
000ea4 3e20
000ea5 203e
000ea6 0d00      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x0,0xD
000ea7 200a
000ea8 6c61
000ea9 7261
000eaa 4c6d      	.DB  0xA,0x20,0x61,0x6C,0x61,0x72,0x6D,0x4C
000eab 7665
000eac 6c65
000ead 2020
000eae 2020      	.DB  0x65,0x76,0x65,0x6C,0x20,0x20,0x20,0x20
000eaf 2020
000eb0 3e3e
000eb1 2520
000eb2 0064      	.DB  0x20,0x20,0x3E,0x3E,0x20,0x25,0x64,0x0
000eb3 0a0d
000eb4 733c
000eb5 7465
000eb6 7541      	.DB  0xD,0xA,0x3C,0x73,0x65,0x74,0x41,0x75
000eb7 4178
000eb8 756f
000eb9 4374
000eba 6e6f      	.DB  0x78,0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E
000ebb 6966
000ebc 3e67
000ebd 4320
000ebe 6168      	.DB  0x66,0x69,0x67,0x3E,0x20,0x43,0x68,0x61
000ebf 6e6e
000ec0 6c65
000ec1 4520
000ec2 7272      	.DB  0x6E,0x6E,0x65,0x6C,0x20,0x45,0x72,0x72
000ec3 726f
000ec4 2121
000ec5 0a0d
000ec6 0d00      	.DB  0x6F,0x72,0x21,0x21,0xD,0xA,0x0,0xD
000ec7 3c0a
000ec8 6573
000ec9 4174
000eca 7875      	.DB  0xA,0x3C,0x73,0x65,0x74,0x41,0x75,0x78
000ecb 6f41
000ecc 7475
000ecd 6f43
000ece 666e      	.DB  0x41,0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66
000ecf 6769
000ed0 203e
000ed1 7665
000ed2 6e65      	.DB  0x69,0x67,0x3E,0x20,0x65,0x76,0x65,0x6E
000ed3 5374
000ed4 756f
000ed5 6372
000ed6 4e65      	.DB  0x74,0x53,0x6F,0x75,0x72,0x63,0x65,0x4E
000ed7 6d75
000ed8 6562
000ed9 2072
000eda 7369      	.DB  0x75,0x6D,0x62,0x65,0x72,0x20,0x69,0x73
000edb 7420
000edc 6f6f
000edd 6c20
000ede 6e6f      	.DB  0x20,0x74,0x6F,0x6F,0x20,0x6C,0x6F,0x6E
000edf 2067
000ee0 2528
000ee1 2964
000ee2 2121      	.DB  0x67,0x20,0x28,0x25,0x64,0x29,0x21,0x21
000ee3 0a0d
000ee4 0d00
000ee5 200a
000ee6 656c      	.DB  0xD,0xA,0x0,0xD,0xA,0x20,0x6C,0x65
000ee7 6576
000ee8 4f6c
000ee9 456e
000eea 6576      	.DB  0x76,0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65
000eeb 746e
000eec 2020
000eed 2020
000eee 2020      	.DB  0x6E,0x74,0x20,0x20,0x20,0x20,0x20,0x20
000eef 3e3e
000ef0 2520
000ef1 0066
000ef2 0a0d      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x0,0xD,0xA
000ef3 733c
000ef4 7465
000ef5 7542
000ef6 7a7a      	.DB  0x3C,0x73,0x65,0x74,0x42,0x75,0x7A,0x7A
000ef7 7265
000ef8 6f43
000ef9 666e
000efa 6769      	.DB  0x65,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
000efb 203e
000efc 7665
000efd 6e65
000efe 5374      	.DB  0x3E,0x20,0x65,0x76,0x65,0x6E,0x74,0x53
000eff 756f
000f00 6372
000f01 4e65
000f02 6d75      	.DB  0x6F,0x75,0x72,0x63,0x65,0x4E,0x75,0x6D
000f03 6562
000f04 2072
000f05 7369
000f06 7420      	.DB  0x62,0x65,0x72,0x20,0x69,0x73,0x20,0x74
000f07 6f6f
000f08 6c20
000f09 6e6f
000f0a 2067      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20
000f0b 2528
000f0c 2964
000f0d 2121
000f0e 0a0d      	.DB  0x28,0x25,0x64,0x29,0x21,0x21,0xD,0xA
000f0f 0d00
000f10 200a
000f11 6e65
000f12 6261      	.DB  0x0,0xD,0xA,0x20,0x65,0x6E,0x61,0x62
000f13 656c
000f14 2020
000f15 2020
000f16 2020      	.DB  0x6C,0x65,0x20,0x20,0x20,0x20,0x20,0x20
000f17 2020
000f18 2020
000f19 2020
000f1a 3e3e      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f1b 3020
000f1c 2578
000f1d 3230
000f1e 0058      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0x0
000f1f 0a0d
000f20 6520
000f21 6576
000f22 746e      	.DB  0xD,0xA,0x20,0x65,0x76,0x65,0x6E,0x74
000f23 6f53
000f24 7275
000f25 6563
000f26 2020      	.DB  0x53,0x6F,0x75,0x72,0x63,0x65,0x20,0x20
000f27 2020
000f28 2020
000f29 3e20
000f2a 003e      	.DB  0x20,0x20,0x20,0x20,0x20,0x3E,0x3E,0x0
000f2b 0a0d
000f2c 6720
000f2d 6d73
000f2e 5352      	.DB  0xD,0xA,0x20,0x67,0x73,0x6D,0x52,0x53
000f2f 4953
000f30 654c
000f31 6576
000f32 206c      	.DB  0x53,0x49,0x4C,0x65,0x76,0x65,0x6C,0x20
000f33 2020
000f34 2020
000f35 3e3e
000f36 2520      	.DB  0x20,0x20,0x20,0x20,0x3E,0x3E,0x20,0x25
000f37 2066
000f38 4264
000f39 0d00
000f3a 200a      	.DB  0x66,0x20,0x64,0x42,0x0,0xD,0xA,0x20
000f3b 7367
000f3c 436d
000f3d 6572
000f3e 6964      	.DB  0x67,0x73,0x6D,0x43,0x72,0x65,0x64,0x69
000f3f 4274
000f40 6c61
000f41 6e61
000f42 6563      	.DB  0x74,0x42,0x61,0x6C,0x61,0x6E,0x63,0x65
000f43 3e20
000f44 203e
000f45 6425
000f46 4220      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x64,0x20,0x42
000f47 6861
000f48 0074
000f49 0a0d
000f4a 6220      	.DB  0x61,0x68,0x74,0x0,0xD,0xA,0x20,0x62
000f4b 7461
000f4c 6574
000f4d 7972
000f4e 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
000f4f 6576
000f50 206c
000f51 2020
000f52 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
000f53 3e3e
000f54 2520
000f55 2066
000f56 6f56      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x56,0x6F
000f57 746c
000f58 0073
000f59 0a0d
000f5a 6320      	.DB  0x6C,0x74,0x73,0x0,0xD,0xA,0x20,0x63
000f5b 6d6f
000f5c 536d
000f5d 6769
000f5e 616e      	.DB  0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E,0x61
000f5f 4c6c
000f60 7665
000f61 6c65
000f62 2020      	.DB  0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20,0x20
000f63 3e3e
000f64 2520
000f65 2066
000f66 4264      	.DB  0x3E,0x3E,0x20,0x25,0x66,0x20,0x64,0x42
000f67 0d00
000f68 200a
000f69 6f63
000f6a 6d6d      	.DB  0x0,0xD,0xA,0x20,0x63,0x6F,0x6D,0x6D
000f6b 6f4c
000f6c 7473
000f6d 6544
000f6e 616c      	.DB  0x4C,0x6F,0x73,0x74,0x44,0x65,0x6C,0x61
000f6f 2079
000f70 2020
000f71 3e20
000f72 203e      	.DB  0x79,0x20,0x20,0x20,0x20,0x3E,0x3E,0x20
000f73 6425
000f74 7320
000f75 6365
000f76 0d00      	.DB  0x25,0x64,0x20,0x73,0x65,0x63,0x0,0xD
000f77 200a
000f78 656d
000f79 6f6d
000f7a 7972      	.DB  0xA,0x20,0x6D,0x65,0x6D,0x6F,0x72,0x79
000f7b 694d
000f7c 206e
000f7d 2020
000f7e 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
000f7f 2020
000f80 3e20
000f81 203e
000f82 6425      	.DB  0x20,0x20,0x20,0x3E,0x3E,0x20,0x25,0x64
000f83 4d20
000f84 2e42
000f85 0d00
000f86 200a      	.DB  0x20,0x4D,0x42,0x2E,0x0,0xD,0xA,0x20
000f87 6361
000f88 6d63
000f89 2020
000f8a 2020      	.DB  0x61,0x63,0x63,0x6D,0x20,0x20,0x20,0x20
000f8b 3e20
000f8c 203e
000f8d 6625
000f8e 6420      	.DB  0x20,0x3E,0x3E,0x20,0x25,0x66,0x20,0x64
000f8f 0042
000f90 0a0d
000f91 6920
000f92 746e      	.DB  0x42,0x0,0xD,0xA,0x20,0x69,0x6E,0x74
000f93 2076
000f94 2020
000f95 2020
000f96 3e3e      	.DB  0x76,0x20,0x20,0x20,0x20,0x20,0x3E,0x3E
000f97 2520
000f98 2064
000f99 6142
000f9a 7468      	.DB  0x20,0x25,0x64,0x20,0x42,0x61,0x68,0x74
000f9b 3c00
000f9c 616d
000f9d 6e69
000f9e 203e      	.DB  0x0,0x3C,0x6D,0x61,0x69,0x6E,0x3E,0x20
000f9f 6567
000fa0 5374
000fa1 6e65
000fa2 6f73      	.DB  0x67,0x65,0x74,0x53,0x65,0x6E,0x73,0x6F
000fa3 4372
000fa4 6e6f
000fa5 6966
000fa6 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
000fa7 6425
000fa8 2029
000fa9 7265
000faa 6f72      	.DB  0x25,0x64,0x29,0x20,0x65,0x72,0x72,0x6F
000fab 0d72
000fac 000a      	.DB  0x72,0xD,0xA,0x0
                 _0x120000:
000fad 453c
000fae 4854
000faf 735f
000fb0 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
000fb1 4e64
000fb2 6361
000fb3 3e6b
000fb4 7320      	.DB  0x64,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
000fb5 6e65
000fb6 6964
000fb7 676e
000fb8 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
000fb9 0a0d
000fba 3c00
000fbb 5445
000fbc 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fbd 6573
000fbe 646e
000fbf 7453
000fc0 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000fc1 7375
000fc2 6552
000fc3 7571
000fc4 7365      	.DB  0x75,0x73,0x52,0x65,0x71,0x75,0x65,0x73
000fc5 4174
000fc6 6b63
000fc7 203e
000fc8 6573      	.DB  0x74,0x41,0x63,0x6B,0x3E,0x20,0x73,0x65
000fc9 646e
000fca 6e69
000fcb 2e67
000fcc 0d2e      	.DB  0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD
000fcd 000a
000fce 453c
000fcf 4854
000fd0 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
000fd1 6e65
000fd2 5364
000fd3 6174
000fd4 7574      	.DB  0x65,0x6E,0x64,0x53,0x74,0x61,0x74,0x75
000fd5 5273
000fd6 7065
000fd7 726f
000fd8 4374      	.DB  0x73,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
000fd9 646d
000fda 203e
000fdb 7266
000fdc 6d61      	.DB  0x6D,0x64,0x3E,0x20,0x66,0x72,0x61,0x6D
000fdd 4c65
000fde 6e65
000fdf 7420
000fe0 6f6f      	.DB  0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F,0x6F
000fe1 6c20
000fe2 6e6f
000fe3 2067
000fe4 2528      	.DB  0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28,0x25
000fe5 2064
000fe6 7962
000fe7 6574
000fe8 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
000fe9 0a0d
000fea 3c00
000feb 5445
000fec 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
000fed 6573
000fee 646e
000fef 7453
000ff0 7461      	.DB  0x73,0x65,0x6E,0x64,0x53,0x74,0x61,0x74
000ff1 7375
000ff2 6552
000ff3 6f70
000ff4 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
000ff5 6d43
000ff6 3e64
000ff7 6d20
000ff8 6c61      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x6D,0x61,0x6C
000ff9 6f6c
000ffa 2063
000ffb 6166
000ffc 6c69      	.DB  0x6C,0x6F,0x63,0x20,0x66,0x61,0x69,0x6C
000ffd 6465
000ffe 2820
000fff 6425
001000 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001001 7479
001002 7365
001003 0d29
001004 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001005 453c
001006 4854
001007 735f
001008 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001009 4564
00100a 6576
00100b 746e
00100c 6552      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x52,0x65
00100d 6f70
00100e 7472
00100f 6d43
001010 3e64      	.DB  0x70,0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E
001011 5720
001012 6f72
001013 676e
001014 6520      	.DB  0x20,0x57,0x72,0x6F,0x6E,0x67,0x20,0x65
001015 6576
001016 746e
001017 7954
001018 6570      	.DB  0x76,0x65,0x6E,0x74,0x54,0x79,0x70,0x65
001019 3020
00101a 2578
00101b 3230
00101c 0d58      	.DB  0x20,0x30,0x78,0x25,0x30,0x32,0x58,0xD
00101d 000a
00101e 453c
00101f 4854
001020 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001021 6e65
001022 4564
001023 6576
001024 746e      	.DB  0x65,0x6E,0x64,0x45,0x76,0x65,0x6E,0x74
001025 6552
001026 6f70
001027 7472
001028 6d43      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x43,0x6D
001029 3e64
00102a 6120
00102b 6464
00102c 7645      	.DB  0x64,0x3E,0x20,0x61,0x64,0x64,0x45,0x76
00102d 6e65
00102e 4c74
00102f 676f
001030 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
001031 7565
001032 2865
001033 7830
001034 3025      	.DB  0x65,0x75,0x65,0x28,0x30,0x78,0x25,0x30
001035 5832
001036 252c
001037 646c
001038 302c      	.DB  0x32,0x58,0x2C,0x25,0x6C,0x64,0x2C,0x30
001039 2578
00103a 3230
00103b 2c58
00103c 7830      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x30,0x78
00103d 3025
00103e 5832
00103f 2029
001040 6166      	.DB  0x25,0x30,0x32,0x58,0x29,0x20,0x66,0x61
001041 6c69
001042 6465
001043 0a0d
001044 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001045 5445
001046 5f48
001047 6573
001048 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
001049 7645
00104a 6e65
00104b 5274
00104c 7065      	.DB  0x45,0x76,0x65,0x6E,0x74,0x52,0x65,0x70
00104d 726f
00104e 4374
00104f 646d
001050 203e      	.DB  0x6F,0x72,0x74,0x43,0x6D,0x64,0x3E,0x20
001051 6573
001052 646e
001053 6e69
001054 2e67      	.DB  0x73,0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E
001055 0d2e
001056 000a
001057 453c
001058 4854      	.DB  0x2E,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001059 735f
00105a 6e65
00105b 4364
00105c 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
00105d 6966
00105e 4d67
00105f 6e61
001060 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001061 4e65
001062 6361
001063 3e6b
001064 7320      	.DB  0x65,0x4E,0x61,0x63,0x6B,0x3E,0x20,0x73
001065 6e65
001066 6964
001067 676e
001068 2e2e      	.DB  0x65,0x6E,0x64,0x69,0x6E,0x67,0x2E,0x2E
001069 0a0d
00106a 3c00
00106b 5445
00106c 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00106d 6573
00106e 646e
00106f 6f43
001070 666e      	.DB  0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E,0x66
001071 6769
001072 614d
001073 616e
001074 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001075 6341
001076 3e6b
001077 6620
001078 6172      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x66,0x72,0x61
001079 656d
00107a 654c
00107b 206e
00107c 6f74      	.DB  0x6D,0x65,0x4C,0x65,0x6E,0x20,0x74,0x6F
00107d 206f
00107e 6f6c
00107f 676e
001080 2820      	.DB  0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x20,0x28
001081 6425
001082 6220
001083 7479
001084 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001085 0d29
001086 000a
001087 453c
001088 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001089 735f
00108a 6e65
00108b 4364
00108c 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
00108d 6966
00108e 4d67
00108f 6e61
001090 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001091 4165
001092 6b63
001093 203e
001094 616d      	.DB  0x65,0x41,0x63,0x6B,0x3E,0x20,0x6D,0x61
001095 6c6c
001096 636f
001097 6620
001098 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001099 656c
00109a 2064
00109b 2528
00109c 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
00109d 7962
00109e 6574
00109f 2973
0010a0 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
0010a1 3c00
0010a2 5445
0010a3 5f48
0010a4 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
0010a5 646e
0010a6 6f43
0010a7 666e
0010a8 6769      	.DB  0x6E,0x64,0x43,0x6F,0x6E,0x66,0x69,0x67
0010a9 614d
0010aa 616e
0010ab 6567
0010ac 6341      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x41,0x63
0010ad 3e6b
0010ae 7320
0010af 6e65
0010b0 6964      	.DB  0x6B,0x3E,0x20,0x73,0x65,0x6E,0x64,0x69
0010b1 676e
0010b2 2e2e
0010b3 0a0d
0010b4 3c00      	.DB  0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C
0010b5 5445
0010b6 5f48
0010b7 6573
0010b8 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010b9 6144
0010ba 6174
0010bb 6552
0010bc 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010bd 7472
0010be 6d43
0010bf 3e64
0010c0 5720      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x57
0010c1 6f72
0010c2 676e
0010c3 6420
0010c4 7461      	.DB  0x72,0x6F,0x6E,0x67,0x20,0x64,0x61,0x74
0010c5 5461
0010c6 7079
0010c7 2065
0010c8 7830      	.DB  0x61,0x54,0x79,0x70,0x65,0x20,0x30,0x78
0010c9 3025
0010ca 5832
0010cb 0a0d
0010cc 3c00      	.DB  0x25,0x30,0x32,0x58,0xD,0xA,0x0,0x3C
0010cd 5445
0010ce 5f48
0010cf 6573
0010d0 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
0010d1 6144
0010d2 6174
0010d3 6552
0010d4 6f70      	.DB  0x44,0x61,0x74,0x61,0x52,0x65,0x70,0x6F
0010d5 7472
0010d6 6d43
0010d7 3e64
0010d8 6120      	.DB  0x72,0x74,0x43,0x6D,0x64,0x3E,0x20,0x61
0010d9 6464
0010da 6144
0010db 6174
0010dc 6f4c      	.DB  0x64,0x64,0x44,0x61,0x74,0x61,0x4C,0x6F
0010dd 5167
0010de 6575
0010df 6575
0010e0 3028      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x28,0x30
0010e1 2578
0010e2 3230
0010e3 2c58
0010e4 6c25      	.DB  0x78,0x25,0x30,0x32,0x58,0x2C,0x25,0x6C
0010e5 2c64
0010e6 7525
0010e7 252c
0010e8 322e      	.DB  0x64,0x2C,0x25,0x75,0x2C,0x25,0x2E,0x32
0010e9 2966
0010ea 6620
0010eb 6961
0010ec 656c      	.DB  0x66,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0010ed 0d64
0010ee 000a
0010ef 453c
0010f0 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0010f1 735f
0010f2 6e65
0010f3 4464
0010f4 7461      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x44,0x61,0x74
0010f5 5261
0010f6 7065
0010f7 726f
0010f8 4374      	.DB  0x61,0x52,0x65,0x70,0x6F,0x72,0x74,0x43
0010f9 646d
0010fa 203e
0010fb 6573
0010fc 646e      	.DB  0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E,0x64
0010fd 6e69
0010fe 2e67
0010ff 0d2e
001100 000a      	.DB  0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA,0x0
001101 453c
001102 4854
001103 735f
001104 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001105 4c64
001106 676f
001107 614d
001108 696e      	.DB  0x64,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
001109 7570
00110a 616c
00110b 6974
00110c 6e6f      	.DB  0x70,0x75,0x6C,0x61,0x74,0x69,0x6F,0x6E
00110d 6341
00110e 3e6b
00110f 7320
001110 6e65      	.DB  0x41,0x63,0x6B,0x3E,0x20,0x73,0x65,0x6E
001111 6964
001112 676e
001113 2e2e
001114 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
001115 3c00
001116 5445
001117 5f48
001118 6573      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x73,0x65
001119 646e
00111a 654e
00111b 7774
00111c 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
00111d 4d6b
00111e 6961
00111f 746e
001120 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001121 6e61
001122 6563
001123 6341
001124 3e6b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x3E
001125 7320
001126 6e65
001127 6964
001128 676e      	.DB  0x20,0x73,0x65,0x6E,0x64,0x69,0x6E,0x67
001129 2e2e
00112a 0a0d
00112b 3c00
00112c 5445      	.DB  0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45,0x54
00112d 5f48
00112e 6572
00112f 6f6d
001130 6574      	.DB  0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74,0x65
001131 6544
001132 6976
001133 6563
001134 6f43      	.DB  0x44,0x65,0x76,0x69,0x63,0x65,0x43,0x6F
001135 746e
001136 6f72
001137 416c
001138 6b63      	.DB  0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63,0x6B
001139 203e
00113a 6573
00113b 646e
00113c 6e69      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x64,0x69,0x6E
00113d 2e67
00113e 0d2e
00113f 000a
001140 453c      	.DB  0x67,0x2E,0x2E,0xD,0xA,0x0,0x3C,0x45
001141 4854
001142 635f
001143 656c
001144 7261      	.DB  0x54,0x48,0x5F,0x63,0x6C,0x65,0x61,0x72
001145 7544
001146 6c70
001147 6369
001148 7461      	.DB  0x44,0x75,0x70,0x6C,0x69,0x63,0x61,0x74
001149 5265
00114a 7165
00114b 6575
00114c 7473      	.DB  0x65,0x52,0x65,0x71,0x75,0x65,0x73,0x74
00114d 6d43
00114e 3e64
00114f 7320
001150 6e65      	.DB  0x43,0x6D,0x64,0x3E,0x20,0x73,0x65,0x6E
001151 6964
001152 676e
001153 2e2e
001154 0a0d      	.DB  0x64,0x69,0x6E,0x67,0x2E,0x2E,0xD,0xA
001155 0d00
001156 3c0a
001157 5445
001158 5f48      	.DB  0x0,0xD,0xA,0x3C,0x45,0x54,0x48,0x5F
001159 6863
00115a 6365
00115b 506b
00115c 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
00115d 4c68
00115e 676f
00115f 203e
001160 3d3d      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x3D,0x3D
001161 203d
001162 5245
001163 4f52
001164 2052      	.DB  0x3D,0x20,0x45,0x52,0x52,0x4F,0x52,0x20
001165 4e49
001166 4f46
001167 414d
001168 4954      	.DB  0x49,0x4E,0x46,0x4F,0x4D,0x41,0x54,0x49
001169 4e4f
00116a 4920
00116b 204e
00116c 4144      	.DB  0x4F,0x4E,0x20,0x49,0x4E,0x20,0x44,0x41
00116d 4154
00116e 4c20
00116f 474f
001170 5120      	.DB  0x54,0x41,0x20,0x4C,0x4F,0x47,0x20,0x51
001171 4555
001172 4555
001173 3d20
001174 3d3d      	.DB  0x55,0x45,0x55,0x45,0x20,0x3D,0x3D,0x3D
001175 0a0d
001176 3c00
001177 5445
001178 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001179 6863
00117a 6365
00117b 506b
00117c 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
00117d 4c68
00117e 676f
00117f 203e
001180 6144      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x44,0x61
001181 6174
001182 6f4c
001183 2067
001184 6974      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x20,0x74,0x69
001185 656d
001186 255b
001187 646c
001188 2c5d      	.DB  0x6D,0x65,0x5B,0x25,0x6C,0x64,0x5D,0x2C
001189 6863
00118a 255b
00118b 5d64
00118c 762c      	.DB  0x63,0x68,0x5B,0x25,0x64,0x5D,0x2C,0x76
00118d 6c61
00118e 255b
00118f 322e
001190 5d66      	.DB  0x61,0x6C,0x5B,0x25,0x2E,0x32,0x66,0x5D
001191 0a0d
001192 3c00
001193 5445
001194 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001195 6863
001196 6365
001197 506b
001198 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
001199 4c68
00119a 676f
00119b 203e
00119c 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
00119d 5f47
00119e 706f
00119f 6e65
0011a0 6946      	.DB  0x47,0x5F,0x6F,0x70,0x65,0x6E,0x46,0x69
0011a1 656c
0011a2 2528
0011a3 2973
0011a4 6620      	.DB  0x6C,0x65,0x28,0x25,0x73,0x29,0x20,0x66
0011a5 6961
0011a6 656c
0011a7 2c64
0011a8 6320      	.DB  0x61,0x69,0x6C,0x65,0x64,0x2C,0x20,0x63
0011a9 756f
0011aa 646c
0011ab 276e
0011ac 2074      	.DB  0x6F,0x75,0x6C,0x64,0x6E,0x27,0x74,0x20
0011ad 6173
0011ae 6576
0011af 6c20
0011b0 676f      	.DB  0x73,0x61,0x76,0x65,0x20,0x6C,0x6F,0x67
0011b1 0a0d
0011b2 3c00
0011b3 5445
0011b4 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0011b5 6863
0011b6 6365
0011b7 506b
0011b8 7375      	.DB  0x63,0x68,0x65,0x63,0x6B,0x50,0x75,0x73
0011b9 4c68
0011ba 676f
0011bb 203e
0011bc 4f4c      	.DB  0x68,0x4C,0x6F,0x67,0x3E,0x20,0x4C,0x4F
0011bd 5f47
0011be 6e69
0011bf 6573
0011c0 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
0011c1 6144
0011c2 6174
0011c3 2928
0011c4 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
0011c5 6961
0011c6 656c
0011c7 0d64
0011c8 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0011c9 453c
0011ca 4854
0011cb 635f
0011cc 6568      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x63,0x68,0x65
0011cd 6b63
0011ce 7550
0011cf 6873
0011d0 6f4c      	.DB  0x63,0x6B,0x50,0x75,0x73,0x68,0x4C,0x6F
0011d1 3e67
0011d2 4c20
0011d3 474f
0011d4 635f      	.DB  0x67,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x63
0011d5 6f6c
0011d6 6573
0011d7 6946
0011d8 656c      	.DB  0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C,0x65
0011d9 2928
0011da 6620
0011db 6961
0011dc 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0011dd 0d64
0011de 000a
0011df 453c
0011e0 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0011e1 635f
0011e2 6568
0011e3 6b63
0011e4 7550      	.DB  0x5F,0x63,0x68,0x65,0x63,0x6B,0x50,0x75
0011e5 6873
0011e6 6f4c
0011e7 3e67
0011e8 4920      	.DB  0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20,0x49
0011e9 736e
0011ea 7265
0011eb 6574
0011ec 2064      	.DB  0x6E,0x73,0x65,0x72,0x74,0x65,0x64,0x20
0011ed 6144
0011ee 6174
0011ef 4c20
0011f0 676f      	.DB  0x44,0x61,0x74,0x61,0x20,0x4C,0x6F,0x67
0011f1 0a0d
0011f2 0d00
0011f3 3c0a
0011f4 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
0011f5 5f48
0011f6 6863
0011f7 6365
0011f8 506b      	.DB  0x48,0x5F,0x63,0x68,0x65,0x63,0x6B,0x50
0011f9 7375
0011fa 4c68
0011fb 676f
0011fc 203e      	.DB  0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E,0x20
0011fd 3d3d
0011fe 203d
0011ff 5245
001200 4f52      	.DB  0x3D,0x3D,0x3D,0x20,0x45,0x52,0x52,0x4F
001201 2052
001202 4e49
001203 4f46
001204 414d      	.DB  0x52,0x20,0x49,0x4E,0x46,0x4F,0x4D,0x41
001205 4954
001206 4e4f
001207 4920
001208 204e      	.DB  0x54,0x49,0x4F,0x4E,0x20,0x49,0x4E,0x20
001209 5645
00120a 4e45
00120b 2054
00120c 4f4c      	.DB  0x45,0x56,0x45,0x4E,0x54,0x20,0x4C,0x4F
00120d 2047
00120e 5551
00120f 5545
001210 2045      	.DB  0x47,0x20,0x51,0x55,0x45,0x55,0x45,0x20
001211 3d3d
001212 0d3d
001213 000a
001214 453c      	.DB  0x3D,0x3D,0x3D,0xD,0xA,0x0,0x3C,0x45
001215 4854
001216 635f
001217 6568
001218 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
001219 7550
00121a 6873
00121b 6f4c
00121c 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
00121d 4520
00121e 6576
00121f 746e
001220 6f4c      	.DB  0x20,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
001221 2067
001222 6974
001223 656d
001224 255b      	.DB  0x67,0x20,0x74,0x69,0x6D,0x65,0x5B,0x25
001225 646c
001226 2c5d
001227 6469
001228 305b      	.DB  0x6C,0x64,0x5D,0x2C,0x69,0x64,0x5B,0x30
001229 2578
00122a 3230
00122b 5d58
00122c 732c      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x2C,0x73
00122d 6174
00122e 5b74
00122f 7830
001230 3025      	.DB  0x74,0x61,0x74,0x5B,0x30,0x78,0x25,0x30
001231 5832
001232 0d5d
001233 000a
001234 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
001235 4854
001236 635f
001237 6568
001238 6b63      	.DB  0x54,0x48,0x5F,0x63,0x68,0x65,0x63,0x6B
001239 7550
00123a 6873
00123b 6f4c
00123c 3e67      	.DB  0x50,0x75,0x73,0x68,0x4C,0x6F,0x67,0x3E
00123d 4920
00123e 736e
00123f 7265
001240 6574      	.DB  0x20,0x49,0x6E,0x73,0x65,0x72,0x74,0x65
001241 2064
001242 7645
001243 6e65
001244 2074      	.DB  0x64,0x20,0x45,0x76,0x65,0x6E,0x74,0x20
001245 6f4c
001246 0d67
001247 000a
001248 453c      	.DB  0x4C,0x6F,0x67,0xD,0xA,0x0,0x3C,0x45
001249 4854
00124a 725f
00124b 7465
00124c 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
00124d 736e
00124e 696d
00124f 3e74
001250 7020      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x70
001251 6361
001252 656b
001253 2074
001254 305b      	.DB  0x61,0x63,0x6B,0x65,0x74,0x20,0x5B,0x30
001255 2578
001256 3230
001257 5d58
001258 4520      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x45
001259 7078
00125a 7269
00125b 6465
00125c 0a0d      	.DB  0x78,0x70,0x69,0x72,0x65,0x64,0xD,0xA
00125d 3c00
00125e 5445
00125f 5f48
001260 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001261 7274
001262 6e61
001263 6d73
001264 7469      	.DB  0x74,0x72,0x61,0x6E,0x73,0x6D,0x69,0x74
001265 203e
001266 7075
001267 6164
001268 6574      	.DB  0x3E,0x20,0x75,0x70,0x64,0x61,0x74,0x65
001269 6c20
00126a 676f
00126b 6144
00126c 6174      	.DB  0x20,0x6C,0x6F,0x67,0x44,0x61,0x74,0x61
00126d 7420
00126e 6d69
00126f 6f65
001270 7475      	.DB  0x20,0x74,0x69,0x6D,0x65,0x6F,0x75,0x74
001271 0a0d
001272 3c00
001273 5445
001274 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001275 6572
001276 7274
001277 6e61
001278 6d73      	.DB  0x72,0x65,0x74,0x72,0x61,0x6E,0x73,0x6D
001279 7469
00127a 203e
00127b 7075
00127c 6164      	.DB  0x69,0x74,0x3E,0x20,0x75,0x70,0x64,0x61
00127d 6574
00127e 6c20
00127f 676f
001280 7645      	.DB  0x74,0x65,0x20,0x6C,0x6F,0x67,0x45,0x76
001281 6e65
001282 2074
001283 6974
001284 656d      	.DB  0x65,0x6E,0x74,0x20,0x74,0x69,0x6D,0x65
001285 756f
001286 0d74
001287 000a
001288 453c      	.DB  0x6F,0x75,0x74,0xD,0xA,0x0,0x3C,0x45
001289 4854
00128a 725f
00128b 7465
00128c 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
00128d 736e
00128e 696d
00128f 3e74
001290 6320      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x63
001291 6d6f
001292 4c6d
001293 736f
001294 5474      	.DB  0x6F,0x6D,0x6D,0x4C,0x6F,0x73,0x74,0x54
001295 6d69
001296 7265
001297 3d20
001298 2520      	.DB  0x69,0x6D,0x65,0x72,0x20,0x3D,0x20,0x25
001299 646c
00129a 2528
00129b 586c
00129c 0d29      	.DB  0x6C,0x64,0x28,0x25,0x6C,0x58,0x29,0xD
00129d 000a
00129e 453c
00129f 4854
0012a0 725f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x72
0012a1 7465
0012a2 6172
0012a3 736e
0012a4 696d      	.DB  0x65,0x74,0x72,0x61,0x6E,0x73,0x6D,0x69
0012a5 3e74
0012a6 4c20
0012a7 736f
0012a8 5474      	.DB  0x74,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
0012a9 6d69
0012aa 7265
0012ab 7420
0012ac 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
0012ad 2065
0012ae 656c
0012af 7466
0012b0 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
0012b1 2520
0012b2 646c
0012b3 2528
0012b4 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
0012b5 0d29
0012b6 000a
0012b7 0a0d
0012b8 453c      	.DB  0x29,0xD,0xA,0x0,0xD,0xA,0x3C,0x45
0012b9 4854
0012ba 725f
0012bb 7465
0012bc 6172      	.DB  0x54,0x48,0x5F,0x72,0x65,0x74,0x72,0x61
0012bd 736e
0012be 696d
0012bf 3e74
0012c0 2d20      	.DB  0x6E,0x73,0x6D,0x69,0x74,0x3E,0x20,0x2D
0012c1 522d
0012c2 7465
0012c3 6172
0012c4 736e      	.DB  0x2D,0x52,0x65,0x74,0x72,0x61,0x6E,0x73
0012c5 696d
0012c6 7474
0012c7 6e69
0012c8 2d67      	.DB  0x6D,0x69,0x74,0x74,0x69,0x6E,0x67,0x2D
0012c9 202d
0012ca 305b
0012cb 2578
0012cc 3230      	.DB  0x2D,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
0012cd 5d58
0012ce 0a0d
0012cf 3c00
0012d0 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
0012d1 5f48
0012d2 7270
0012d3 636f
0012d4 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0012d5 5073
0012d6 6361
0012d7 656b
0012d8 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0012d9 7320
0012da 6174
0012db 7574
0012dc 2073      	.DB  0x20,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0012dd 6572
0012de 7571
0012df 7365
0012e0 2074      	.DB  0x72,0x65,0x71,0x75,0x65,0x73,0x74,0x20
0012e1 6e69
0012e2 6176
0012e3 696c
0012e4 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
0012e5 656c
0012e6 676e
0012e7 6874
0012e8 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
0012e9 6425
0012ea 0d29
0012eb 000a
0012ec 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
0012ed 4854
0012ee 705f
0012ef 6f72
0012f0 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0012f1 7373
0012f2 6150
0012f3 6b63
0012f4 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0012f5 203e
0012f6 6170
0012f7 6c79
0012f8 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
0012f9 2064
0012fa 616d
0012fb 6c6c
0012fc 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
0012fd 2928
0012fe 6620
0012ff 6961
001300 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001301 0d64
001302 000a
001303 453c
001304 4854      	.DB  0x64,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001305 705f
001306 6f72
001307 6563
001308 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
001309 6150
00130a 6b63
00130b 7465
00130c 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
00130d 7473
00130e 7461
00130f 7375
001310 6552      	.DB  0x73,0x74,0x61,0x74,0x75,0x73,0x52,0x65
001311 7571
001312 7365
001313 5074
001314 7261      	.DB  0x71,0x75,0x65,0x73,0x74,0x50,0x61,0x72
001315 6573
001316 2872
001317 2029
001318 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
001319 6c69
00131a 6465
00131b 0a0d
00131c 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
00131d 2d0a
00131e 732d
00131f 6174
001320 7574      	.DB  0xA,0x2D,0x2D,0x73,0x74,0x61,0x74,0x75
001321 5273
001322 7165
001323 6575
001324 7473      	.DB  0x73,0x52,0x65,0x71,0x75,0x65,0x73,0x74
001325 6150
001326 7372
001327 7265
001328 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
001329 4320
00132a 444d
00132b 5b20
00132c 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
00132d 3025
00132e 5832
00132f 0d5d
001330 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001331 6361
001332 6563
001333 7373
001334 654d      	.DB  0x61,0x63,0x63,0x65,0x73,0x73,0x4D,0x65
001335 6874
001336 646f
001337 2020
001338 2020      	.DB  0x74,0x68,0x6F,0x64,0x20,0x20,0x20,0x20
001339 305b
00133a 2578
00133b 3230
00133c 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00133d 0a0d
00133e 6900
00133f 746e
001340 7265      	.DB  0xD,0xA,0x0,0x69,0x6E,0x74,0x65,0x72
001341 6176
001342 206c
001343 2020
001344 2020      	.DB  0x76,0x61,0x6C,0x20,0x20,0x20,0x20,0x20
001345 2020
001346 5b20
001347 7830
001348 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
001349 5834
00134a 205d
00134b 203d
00134c 6425      	.DB  0x34,0x58,0x5D,0x20,0x3D,0x20,0x25,0x64
00134d 0a0d
00134e 7300
00134f 6174
001350 7574      	.DB  0xD,0xA,0x0,0x73,0x74,0x61,0x74,0x75
001351 4c73
001352 7369
001353 2074
001354 2020      	.DB  0x73,0x4C,0x69,0x73,0x74,0x20,0x20,0x20
001355 2020
001356 7c20
001357 2500
001358 3230      	.DB  0x20,0x20,0x20,0x7C,0x0,0x25,0x30,0x32
001359 7c58
00135a 0d00
00135b 2d0a
00135c 202d      	.DB  0x58,0x7C,0x0,0xD,0xA,0x2D,0x2D,0x20
00135d 2e2e
00135e 6f44
00135f 656e
001360 2e2e      	.DB  0x2E,0x2E,0x44,0x6F,0x6E,0x65,0x2E,0x2E
001361 2d20
001362 0d2d
001363 000a
001364 453c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45
001365 4854
001366 705f
001367 6f72
001368 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001369 7373
00136a 6150
00136b 6b63
00136c 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00136d 203e
00136e 7473
00136f 7461
001370 7375      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x75,0x73
001371 7220
001372 7065
001373 726f
001374 2074      	.DB  0x20,0x72,0x65,0x70,0x6F,0x72,0x74,0x20
001375 6e69
001376 6176
001377 696c
001378 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001379 656c
00137a 676e
00137b 6874
00137c 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
00137d 6425
00137e 0d29
00137f 000a
001380 0a0d      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0xD,0xA
001381 2d2d
001382 7473
001383 7461
001384 7375      	.DB  0x2D,0x2D,0x73,0x74,0x61,0x74,0x75,0x73
001385 6552
001386 6f70
001387 7472
001388 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
001389 7372
00138a 7265
00138b 2d2d
00138c 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
00138d 4b43
00138e 5b20
00138f 7830
001390 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
001391 5832
001392 0d5d
001393 000a
001394 6e75      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x75,0x6E
001395 7869
001396 6954
001397 656d
001398 2020      	.DB  0x69,0x78,0x54,0x69,0x6D,0x65,0x20,0x20
001399 2020
00139a 2020
00139b 2020
00139c 305b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x30
00139d 2578
00139e 3230
00139f 5d58
0013a0 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013a1 2578
0013a2 3230
0013a3 5d58
0013a4 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013a5 2578
0013a6 3230
0013a7 5d58
0013a8 305b      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x5B,0x30
0013a9 2578
0013aa 3230
0013ab 5d58
0013ac 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0013ad 3c00
0013ae 5445
0013af 5f48
0013b0 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0013b1 636f
0013b2 7365
0013b3 5073
0013b4 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0013b5 656b
0013b6 3e74
0013b7 6520
0013b8 6576      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x65,0x76,0x65
0013b9 746e
0013ba 7220
0013bb 7065
0013bc 726f      	.DB  0x6E,0x74,0x20,0x72,0x65,0x70,0x6F,0x72
0013bd 2074
0013be 6e69
0013bf 6176
0013c0 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0013c1 2064
0013c2 656c
0013c3 676e
0013c4 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0013c5 2820
0013c6 6425
0013c7 0d29
0013c8 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0013c9 0a0d
0013ca 2d2d
0013cb 7665
0013cc 6e65      	.DB  0xD,0xA,0x2D,0x2D,0x65,0x76,0x65,0x6E
0013cd 5274
0013ce 7065
0013cf 726f
0013d0 5074      	.DB  0x74,0x52,0x65,0x70,0x6F,0x72,0x74,0x50
0013d1 7261
0013d2 6573
0013d3 2d72
0013d4 202d      	.DB  0x61,0x72,0x73,0x65,0x72,0x2D,0x2D,0x20
0013d5 4341
0013d6 204b
0013d7 305b
0013d8 2578      	.DB  0x41,0x43,0x4B,0x20,0x5B,0x30,0x78,0x25
0013d9 3230
0013da 5d58
0013db 0a0d
0013dc 3c00      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x3C
0013dd 5445
0013de 5f48
0013df 7270
0013e0 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0013e1 7365
0013e2 5073
0013e3 6361
0013e4 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0013e5 3e74
0013e6 6720
0013e7 746f
0013e8 6520      	.DB  0x74,0x3E,0x20,0x67,0x6F,0x74,0x20,0x65
0013e9 6576
0013ea 746e
0013eb 6c20
0013ec 676f      	.DB  0x76,0x65,0x6E,0x74,0x20,0x6C,0x6F,0x67
0013ed 6120
0013ee 6b63
0013ef 0a0d
0013f0 3c00      	.DB  0x20,0x61,0x63,0x6B,0xD,0xA,0x0,0x3C
0013f1 6f6c
0013f2 5267
0013f3 7065
0013f4 726f      	.DB  0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F,0x72
0013f5 3e74
0013f6 4c20
0013f7 474f
0013f8 6f5f      	.DB  0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x6F
0013f9 6570
0013fa 466e
0013fb 6c69
0013fc 2865      	.DB  0x70,0x65,0x6E,0x46,0x69,0x6C,0x65,0x28
0013fd 7325
0013fe 2029
0013ff 6166
001400 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
001401 6465
001402 0a0d
001403 3c00
001404 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
001405 5f47
001406 6572
001407 6461
001408 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
001409 6174
00140a 203e
00140b 4f4c
00140c 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
00140d 6573
00140e 4c74
00140f 7361
001410 5374      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
001411 6e65
001412 2864
001413 2029
001414 6166      	.DB  0x65,0x6E,0x64,0x28,0x29,0x20,0x66,0x61
001415 6c69
001416 6465
001417 0a0d
001418 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001419 4f4c
00141a 5f47
00141b 6572
00141c 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
00141d 6144
00141e 6174
00141f 203e
001420 4f4c      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x4C,0x4F
001421 5f47
001422 6573
001423 4c74
001424 7361      	.DB  0x47,0x5F,0x73,0x65,0x74,0x4C,0x61,0x73
001425 5374
001426 6e65
001427 2864
001428 7325      	.DB  0x74,0x53,0x65,0x6E,0x64,0x28,0x25,0x73
001429 252c
00142a 646c
00142b 0d29
00142c 000a      	.DB  0x2C,0x25,0x6C,0x64,0x29,0xD,0xA,0x0
00142d 6c3c
00142e 676f
00142f 6552
001430 6f70      	.DB  0x3C,0x6C,0x6F,0x67,0x52,0x65,0x70,0x6F
001431 7472
001432 203e
001433 4f4c
001434 5f47      	.DB  0x72,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
001435 6c63
001436 736f
001437 4665
001438 6c69      	.DB  0x63,0x6C,0x6F,0x73,0x65,0x46,0x69,0x6C
001439 2865
00143a 7325
00143b 2029
00143c 6166      	.DB  0x65,0x28,0x25,0x73,0x29,0x20,0x66,0x61
00143d 6c69
00143e 6465
00143f 0a0d
001440 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001441 5445
001442 5f48
001443 7270
001444 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
001445 7365
001446 5073
001447 6361
001448 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001449 3e74
00144a 4320
00144b 6e6f
00144c 6966      	.DB  0x74,0x3E,0x20,0x43,0x6F,0x6E,0x66,0x69
00144d 2067
00144e 614d
00144f 616e
001450 6567      	.DB  0x67,0x20,0x4D,0x61,0x6E,0x61,0x67,0x65
001451 0a0d
001452 3c00
001453 5445
001454 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001455 7270
001456 636f
001457 7365
001458 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001459 6361
00145a 656b
00145b 3e74
00145c 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
00145d 6e6f
00145e 6966
00145f 7567
001460 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001461 6974
001462 6e6f
001463 6d20
001464 6e61      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x6D,0x61,0x6E
001465 6761
001466 6d65
001467 6e65
001468 2074      	.DB  0x61,0x67,0x65,0x6D,0x65,0x6E,0x74,0x20
001469 6e69
00146a 6176
00146b 696c
00146c 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00146d 656c
00146e 676e
00146f 6874
001470 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001471 6425
001472 0d29
001473 000a
001474 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001475 4854
001476 705f
001477 6f72
001478 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001479 7373
00147a 6150
00147b 6b63
00147c 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00147d 203e
00147e 6170
00147f 6c79
001480 616f      	.DB  0x3E,0x20,0x70,0x61,0x79,0x6C,0x6F,0x61
001481 2064
001482 616d
001483 6c6c
001484 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001485 2528
001486 2964
001487 6620
001488 6961      	.DB  0x28,0x25,0x64,0x29,0x20,0x66,0x61,0x69
001489 656c
00148a 0d64
00148b 000a
00148c 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
00148d 4854
00148e 705f
00148f 6f72
001490 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001491 7373
001492 6150
001493 6b63
001494 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001495 203e
001496 6f63
001497 666e
001498 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001499 614d
00149a 616e
00149b 6567
00149c 6150      	.DB  0x4D,0x61,0x6E,0x61,0x67,0x65,0x50,0x61
00149d 7372
00149e 7265
00149f 2928
0014a0 6620      	.DB  0x72,0x73,0x65,0x72,0x28,0x29,0x20,0x66
0014a1 6961
0014a2 656c
0014a3 0d64
0014a4 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0014a5 0a0d
0014a6 2d2d
0014a7 6f63
0014a8 666e      	.DB  0xD,0xA,0x2D,0x2D,0x63,0x6F,0x6E,0x66
0014a9 6769
0014aa 614d
0014ab 616e
0014ac 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
0014ad 6150
0014ae 7372
0014af 7265
0014b0 2d2d      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x2D,0x2D
0014b1 4320
0014b2 444d
0014b3 5b20
0014b4 7830      	.DB  0x20,0x43,0x4D,0x44,0x20,0x5B,0x30,0x78
0014b5 3025
0014b6 5832
0014b7 0d5d
0014b8 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0014b9 6361
0014ba 6463
0014bb 2020
0014bc 2020      	.DB  0x61,0x63,0x63,0x64,0x20,0x20,0x20,0x20
0014bd 2020
0014be 2020
0014bf 2020
0014c0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014c1 305b
0014c2 2578
0014c3 3230
0014c4 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0014c5 0a0d
0014c6 6300
0014c7 666e
0014c8 2067      	.DB  0xD,0xA,0x0,0x63,0x6E,0x66,0x67,0x20
0014c9 2020
0014ca 2020
0014cb 2020
0014cc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0014cd 2020
0014ce 5b20
0014cf 7830
0014d0 3025      	.DB  0x20,0x20,0x20,0x5B,0x30,0x78,0x25,0x30
0014d1 5832
0014d2 0d5d
0014d3 000a
0014d4 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0014d5 4854
0014d6 705f
0014d7 6f72
0014d8 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0014d9 7373
0014da 6150
0014db 6b63
0014dc 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0014dd 203e
0014de 6567
0014df 4374
0014e0 6e6f      	.DB  0x3E,0x20,0x67,0x65,0x74,0x43,0x6F,0x6E
0014e1 6966
0014e2 4c67
0014e3 6e65
0014e4 2928      	.DB  0x66,0x69,0x67,0x4C,0x65,0x6E,0x28,0x29
0014e5 6620
0014e6 6961
0014e7 656c
0014e8 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0014e9 000a
0014ea 453c
0014eb 4854
0014ec 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0014ed 6f72
0014ee 6563
0014ef 7373
0014f0 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0014f1 6b63
0014f2 7465
0014f3 203e
0014f4 6e63      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E
0014f5 6766
0014f6 6452
0014f7 6d20
0014f8 6c61      	.DB  0x66,0x67,0x52,0x64,0x20,0x6D,0x61,0x6C
0014f9 6f6c
0014fa 2863
0014fb 2029
0014fc 6166      	.DB  0x6C,0x6F,0x63,0x28,0x29,0x20,0x66,0x61
0014fd 6c69
0014fe 6465
0014ff 0a0d
001500 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
001501 5445
001502 5f48
001503 7270
001504 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
001505 7365
001506 5073
001507 6361
001508 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
001509 3e74
00150a 6320
00150b 6e6f
00150c 6966      	.DB  0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69
00150d 5267
00150e 6165
00150f 2864
001510 2029      	.DB  0x67,0x52,0x65,0x61,0x64,0x28,0x29,0x20
001511 6166
001512 6c69
001513 6465
001514 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001515 3c00
001516 5445
001517 5f48
001518 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001519 636f
00151a 7365
00151b 5073
00151c 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
00151d 656b
00151e 3e74
00151f 5220
001520 5f44      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x52,0x44,0x5F
001521 4d43
001522 2044
001523 203a
001524 5445      	.DB  0x43,0x4D,0x44,0x20,0x3A,0x20,0x45,0x54
001525 5f48
001526 6573
001527 646e
001528 6f43      	.DB  0x48,0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F
001529 666e
00152a 6769
00152b 614d
00152c 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
00152d 6567
00152e 6341
00152f 286b
001530 2029      	.DB  0x67,0x65,0x41,0x63,0x6B,0x28,0x29,0x20
001531 6166
001532 6c69
001533 6465
001534 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001535 3c00
001536 5445
001537 5f48
001538 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
001539 636f
00153a 7365
00153b 5073
00153c 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
00153d 656b
00153e 3e74
00153f 6320
001540 666e      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x63,0x6E,0x66
001541 5767
001542 2072
001543 616d
001544 6c6c      	.DB  0x67,0x57,0x72,0x20,0x6D,0x61,0x6C,0x6C
001545 636f
001546 2928
001547 6620
001548 6961      	.DB  0x6F,0x63,0x28,0x29,0x20,0x66,0x61,0x69
001549 656c
00154a 0d64
00154b 000a
00154c 453c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x45
00154d 4854
00154e 705f
00154f 6f72
001550 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001551 7373
001552 6150
001553 6b63
001554 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001555 203e
001556 6f63
001557 666e
001558 6769      	.DB  0x3E,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
001559 7257
00155a 7469
00155b 2865
00155c 2029      	.DB  0x57,0x72,0x69,0x74,0x65,0x28,0x29,0x20
00155d 6166
00155e 6c69
00155f 6465
001560 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001561 5700
001562 5241
001563 204e
001564 203a      	.DB  0x0,0x57,0x41,0x52,0x4E,0x20,0x3A,0x20
001565 453c
001566 4854
001567 705f
001568 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001569 6563
00156a 7373
00156b 6150
00156c 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
00156d 7465
00156e 203e
00156f 5257
001570 435f      	.DB  0x65,0x74,0x3E,0x20,0x57,0x52,0x5F,0x43
001571 444d
001572 3a20
001573 4520
001574 4854      	.DB  0x4D,0x44,0x20,0x3A,0x20,0x45,0x54,0x48
001575 735f
001576 6e65
001577 4364
001578 6e6f      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x43,0x6F,0x6E
001579 6966
00157a 4d67
00157b 6e61
00157c 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
00157d 4165
00157e 6b63
00157f 2928
001580 6620      	.DB  0x65,0x41,0x63,0x6B,0x28,0x29,0x20,0x66
001581 6961
001582 656c
001583 0d64
001584 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001585 453c
001586 4854
001587 705f
001588 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
001589 6563
00158a 7373
00158b 6150
00158c 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
00158d 7465
00158e 203e
00158f 6f63
001590 666e      	.DB  0x65,0x74,0x3E,0x20,0x63,0x6F,0x6E,0x66
001591 6769
001592 6f43
001593 666e
001594 7269      	.DB  0x69,0x67,0x43,0x6F,0x6E,0x66,0x69,0x72
001595 286d
001596 2029
001597 6166
001598 6c69      	.DB  0x6D,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001599 6465
00159a 0a0d
00159b 3c00
00159c 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
00159d 5f48
00159e 7270
00159f 636f
0015a0 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
0015a1 5073
0015a2 6361
0015a3 656b
0015a4 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
0015a5 7520
0015a6 6b6e
0015a7 6f6e
0015a8 6e77      	.DB  0x20,0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
0015a9 7420
0015aa 7079
0015ab 2065
0015ac 6f66      	.DB  0x20,0x74,0x79,0x70,0x65,0x20,0x66,0x6F
0015ad 2072
0015ae 6f63
0015af 666e
0015b0 6769      	.DB  0x72,0x20,0x63,0x6F,0x6E,0x66,0x69,0x67
0015b1 3e2d
0015b2 6361
0015b3 6463
0015b4 5b20      	.DB  0x2D,0x3E,0x61,0x63,0x63,0x64,0x20,0x5B
0015b5 7830
0015b6 3025
0015b7 5832
0015b8 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
0015b9 000a
0015ba 453c
0015bb 4854
0015bc 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
0015bd 6f72
0015be 6563
0015bf 7373
0015c0 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
0015c1 6b63
0015c2 7465
0015c3 203e
0015c4 6144      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x44,0x61
0015c5 6174
0015c6 7220
0015c7 7065
0015c8 726f      	.DB  0x74,0x61,0x20,0x72,0x65,0x70,0x6F,0x72
0015c9 2074
0015ca 6e69
0015cb 6176
0015cc 696c      	.DB  0x74,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0015cd 2064
0015ce 656c
0015cf 676e
0015d0 6874      	.DB  0x64,0x20,0x6C,0x65,0x6E,0x67,0x74,0x68
0015d1 2820
0015d2 6425
0015d3 0d29
0015d4 000a      	.DB  0x20,0x28,0x25,0x64,0x29,0xD,0xA,0x0
0015d5 0a0d
0015d6 2d2d
0015d7 6164
0015d8 6174      	.DB  0xD,0xA,0x2D,0x2D,0x64,0x61,0x74,0x61
0015d9 6552
0015da 6f70
0015db 7472
0015dc 6150      	.DB  0x52,0x65,0x70,0x6F,0x72,0x74,0x50,0x61
0015dd 7372
0015de 7265
0015df 2d2d
0015e0 4120      	.DB  0x72,0x73,0x65,0x72,0x2D,0x2D,0x20,0x41
0015e1 4b43
0015e2 5b20
0015e3 7830
0015e4 3025      	.DB  0x43,0x4B,0x20,0x5B,0x30,0x78,0x25,0x30
0015e5 5832
0015e6 0d5d
0015e7 000a
0015e8 453c      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x3C,0x45
0015e9 4854
0015ea 705f
0015eb 6f72
0015ec 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
0015ed 7373
0015ee 6150
0015ef 6b63
0015f0 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
0015f1 203e
0015f2 6f67
0015f3 2074
0015f4 6164      	.DB  0x3E,0x20,0x67,0x6F,0x74,0x20,0x64,0x61
0015f5 6174
0015f6 6c20
0015f7 676f
0015f8 6120      	.DB  0x74,0x61,0x20,0x6C,0x6F,0x67,0x20,0x61
0015f9 6b63
0015fa 0a0d
0015fb 3c00
0015fc 5445      	.DB  0x63,0x6B,0xD,0xA,0x0,0x3C,0x45,0x54
0015fd 5f48
0015fe 7270
0015ff 636f
001600 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001601 5073
001602 6361
001603 656b
001604 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001605 6c20
001606 676f
001607 6d20
001608 6e61      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x6D,0x61,0x6E
001609 7069
00160a 6c75
00160b 7461
00160c 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
00160d 206e
00160e 4328
00160f 444d
001610 2029      	.DB  0x6E,0x20,0x28,0x43,0x4D,0x44,0x29,0x20
001611 6e69
001612 6176
001613 696c
001614 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
001615 656c
001616 676e
001617 6874
001618 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001619 6425
00161a 0d29
00161b 000a
00161c 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
00161d 4854
00161e 705f
00161f 6f72
001620 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001621 7373
001622 6150
001623 6b63
001624 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001625 203e
001626 6f6c
001627 4d67
001628 6e61      	.DB  0x3E,0x20,0x6C,0x6F,0x67,0x4D,0x61,0x6E
001629 7069
00162a 6c75
00162b 7461
00162c 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
00162d 436e
00162e 646d
00162f 6150
001630 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
001631 7265
001632 2928
001633 6620
001634 6961      	.DB  0x65,0x72,0x28,0x29,0x20,0x66,0x61,0x69
001635 656c
001636 0d64
001637 000a
001638 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001639 2d2d
00163a 6f6c
00163b 4d67
00163c 6e61      	.DB  0x2D,0x2D,0x6C,0x6F,0x67,0x4D,0x61,0x6E
00163d 7069
00163e 6c75
00163f 7461
001640 6f69      	.DB  0x69,0x70,0x75,0x6C,0x61,0x74,0x69,0x6F
001641 436e
001642 646d
001643 6150
001644 7372      	.DB  0x6E,0x43,0x6D,0x64,0x50,0x61,0x72,0x73
001645 7265
001646 2d2d
001647 4320
001648 444d      	.DB  0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44
001649 5b20
00164a 7830
00164b 3025
00164c 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
00164d 0d5d
00164e 000a
00164f 5374
001650 6174      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x61
001651 7472
001652 2020
001653 2020
001654 2020      	.DB  0x72,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001655 2020
001656 2020
001657 255b
001658 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
001659 0d5d
00165a 000a
00165b 5374
00165c 6f74      	.DB  0x5D,0xD,0xA,0x0,0x74,0x53,0x74,0x6F
00165d 2070
00165e 2020
00165f 2020
001660 2020      	.DB  0x70,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001661 2020
001662 2020
001663 255b
001664 646c      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x6C,0x64
001665 0d5d
001666 000a
001667 453c
001668 4854      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001669 705f
00166a 6f72
00166b 6563
00166c 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
00166d 6150
00166e 6b63
00166f 7465
001670 203e      	.DB  0x50,0x61,0x63,0x6B,0x65,0x74,0x3E,0x20
001671 6573
001672 4c74
001673 676f
001674 614d      	.DB  0x73,0x65,0x74,0x4C,0x6F,0x67,0x4D,0x61
001675 696e
001676 7570
001677 616c
001678 6574      	.DB  0x6E,0x69,0x70,0x75,0x6C,0x61,0x74,0x65
001679 6353
00167a 6568
00167b 616d
00167c 2928      	.DB  0x53,0x63,0x68,0x65,0x6D,0x61,0x28,0x29
00167d 6620
00167e 6961
00167f 656c
001680 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001681 000a
001682 453c
001683 4854
001684 705f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x70
001685 6f72
001686 6563
001687 7373
001688 6150      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x50,0x61
001689 6b63
00168a 7465
00168b 203e
00168c 6f6c      	.DB  0x63,0x6B,0x65,0x74,0x3E,0x20,0x6C,0x6F
00168d 2067
00168e 616d
00168f 696e
001690 7570      	.DB  0x67,0x20,0x6D,0x61,0x6E,0x69,0x70,0x75
001691 616c
001692 6974
001693 6e6f
001694 2820      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x20,0x28
001695 4341
001696 294b
001697 6920
001698 766e      	.DB  0x41,0x43,0x4B,0x29,0x20,0x69,0x6E,0x76
001699 6c61
00169a 6469
00169b 6c20
00169c 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
00169d 7467
00169e 2068
00169f 2528
0016a0 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0016a1 0a0d
0016a2 0d00
0016a3 2d0a
0016a4 6c2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x6C
0016a5 676f
0016a6 614d
0016a7 696e
0016a8 7570      	.DB  0x6F,0x67,0x4D,0x61,0x6E,0x69,0x70,0x75
0016a9 616c
0016aa 6974
0016ab 6e6f
0016ac 6341      	.DB  0x6C,0x61,0x74,0x69,0x6F,0x6E,0x41,0x63
0016ad 506b
0016ae 7261
0016af 6573
0016b0 2d72      	.DB  0x6B,0x50,0x61,0x72,0x73,0x65,0x72,0x2D
0016b1 202d
0016b2 4341
0016b3 204b
0016b4 305b      	.DB  0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B,0x30
0016b5 2578
0016b6 3230
0016b7 5d58
0016b8 0a0d      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0xD,0xA
0016b9 7300
0016ba 6174
0016bb 7574
0016bc 2073      	.DB  0x0,0x73,0x74,0x61,0x74,0x75,0x73,0x20
0016bd 2020
0016be 2020
0016bf 2020
0016c0 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0016c1 5b20
0016c2 6c25
0016c3 5d64
0016c4 0a0d      	.DB  0x20,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0016c5 3c00
0016c6 5445
0016c7 5f48
0016c8 7270      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x70,0x72
0016c9 636f
0016ca 7365
0016cb 5073
0016cc 6361      	.DB  0x6F,0x63,0x65,0x73,0x73,0x50,0x61,0x63
0016cd 656b
0016ce 3e74
0016cf 6e20
0016d0 7465      	.DB  0x6B,0x65,0x74,0x3E,0x20,0x6E,0x65,0x74
0016d1 6f77
0016d2 6b72
0016d3 6d20
0016d4 6961      	.DB  0x77,0x6F,0x72,0x6B,0x20,0x6D,0x61,0x69
0016d5 746e
0016d6 6e65
0016d7 6e61
0016d8 6563      	.DB  0x6E,0x74,0x65,0x6E,0x61,0x6E,0x63,0x65
0016d9 6920
0016da 766e
0016db 6c61
0016dc 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
0016dd 6c20
0016de 6e65
0016df 7467
0016e0 2068      	.DB  0x20,0x6C,0x65,0x6E,0x67,0x74,0x68,0x20
0016e1 2528
0016e2 2964
0016e3 0a0d
0016e4 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0016e5 5445
0016e6 5f48
0016e7 7270
0016e8 636f      	.DB  0x45,0x54,0x48,0x5F,0x70,0x72,0x6F,0x63
0016e9 7365
0016ea 5073
0016eb 6361
0016ec 656b      	.DB  0x65,0x73,0x73,0x50,0x61,0x63,0x6B,0x65
0016ed 3e74
0016ee 6e20
0016ef 7465
0016f0 6f77      	.DB  0x74,0x3E,0x20,0x6E,0x65,0x74,0x77,0x6F
0016f1 6b72
0016f2 614d
0016f3 6e69
0016f4 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
0016f5 616e
0016f6 636e
0016f7 5065
0016f8 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
0016f9 6573
0016fa 2872
0016fb 2029
0016fc 6166      	.DB  0x73,0x65,0x72,0x28,0x29,0x20,0x66,0x61
0016fd 6c69
0016fe 6465
0016ff 0a0d
001700 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001701 2d0a
001702 6e2d
001703 7465
001704 6f77      	.DB  0xA,0x2D,0x2D,0x6E,0x65,0x74,0x77,0x6F
001705 6b72
001706 614d
001707 6e69
001708 6574      	.DB  0x72,0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65
001709 616e
00170a 636e
00170b 5065
00170c 7261      	.DB  0x6E,0x61,0x6E,0x63,0x65,0x50,0x61,0x72
00170d 6573
00170e 2d72
00170f 202d
001710 4d43      	.DB  0x73,0x65,0x72,0x2D,0x2D,0x20,0x43,0x4D
001711 2044
001712 305b
001713 2578
001714 3230      	.DB  0x44,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001715 5d58
001716 0a0d
001717 6300
001718 646d      	.DB  0x58,0x5D,0xD,0xA,0x0,0x63,0x6D,0x64
001719 2020
00171a 2020
00171b 2020
00171c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00171d 2020
00171e 2020
00171f 5b20
001720 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001721 3025
001722 5832
001723 0d5d
001724 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001725 6164
001726 6174
001727 654c
001728 206e      	.DB  0x64,0x61,0x74,0x61,0x4C,0x65,0x6E,0x20
001729 2020
00172a 2020
00172b 2020
00172c 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00172d 255b
00172e 5d64
00172f 0a0d
001730 6400      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x64
001731 7461
001732 2061
001733 2d2d
001734 202d      	.DB  0x61,0x74,0x61,0x20,0x2D,0x2D,0x2D,0x20
001735 2020
001736 2020
001737 2020
001738 0d20      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0xD
001739 000a
00173a 2d2d
00173b 2d2d
00173c 2d2d      	.DB  0xA,0x0,0x2D,0x2D,0x2D,0x2D,0x2D,0x2D
00173d 2d2d
00173e 0a0d
00173f 3c00
001740 5445      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x3C,0x45,0x54
001741 5f48
001742 7270
001743 636f
001744 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001745 5073
001746 6361
001747 656b
001748 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001749 7320
00174a 7465
00174b 6954
00174c 656d      	.DB  0x20,0x73,0x65,0x74,0x54,0x69,0x6D,0x65
00174d 7953
00174e 636e
00174f 6353
001750 6568      	.DB  0x53,0x79,0x6E,0x63,0x53,0x63,0x68,0x65
001751 616d
001752 2928
001753 6620
001754 6961      	.DB  0x6D,0x61,0x28,0x29,0x20,0x66,0x61,0x69
001755 656c
001756 0d64
001757 000a
001758 4157      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x57,0x41
001759 4e52
00175a 3a20
00175b 3c20
00175c 5445      	.DB  0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45,0x54
00175d 5f48
00175e 7270
00175f 636f
001760 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001761 5073
001762 6361
001763 656b
001764 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001765 4e20
001766 5445
001767 5f57
001768 4954      	.DB  0x20,0x4E,0x45,0x54,0x57,0x5F,0x54,0x49
001769 454d
00176a 535f
00176b 4e59
00176c 2043      	.DB  0x4D,0x45,0x5F,0x53,0x59,0x4E,0x43,0x20
00176d 203a
00176e 5445
00176f 5f48
001770 6573      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x73,0x65
001771 646e
001772 654e
001773 7774
001774 726f      	.DB  0x6E,0x64,0x4E,0x65,0x74,0x77,0x6F,0x72
001775 4d6b
001776 6961
001777 746e
001778 6e65      	.DB  0x6B,0x4D,0x61,0x69,0x6E,0x74,0x65,0x6E
001779 6e61
00177a 6563
00177b 6341
00177c 286b      	.DB  0x61,0x6E,0x63,0x65,0x41,0x63,0x6B,0x28
00177d 2029
00177e 6166
00177f 6c69
001780 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001781 0a0d
001782 3c00
001783 5445
001784 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
001785 7270
001786 636f
001787 7365
001788 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
001789 6361
00178a 656b
00178b 3e74
00178c 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
00178d 6d65
00178e 746f
00178f 2065
001790 6564      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x20,0x64,0x65
001791 6976
001792 6563
001793 6320
001794 6e6f      	.DB  0x76,0x69,0x63,0x65,0x20,0x63,0x6F,0x6E
001795 7274
001796 6c6f
001797 6920
001798 766e      	.DB  0x74,0x72,0x6F,0x6C,0x20,0x69,0x6E,0x76
001799 6c61
00179a 6469
00179b 6c20
00179c 6e65      	.DB  0x61,0x6C,0x69,0x64,0x20,0x6C,0x65,0x6E
00179d 7467
00179e 2068
00179f 2528
0017a0 2964      	.DB  0x67,0x74,0x68,0x20,0x28,0x25,0x64,0x29
0017a1 0a0d
0017a2 3c00
0017a3 5445
0017a4 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017a5 7270
0017a6 636f
0017a7 7365
0017a8 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017a9 6361
0017aa 656b
0017ab 3e74
0017ac 7220      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x72
0017ad 6d65
0017ae 746f
0017af 4465
0017b0 7665      	.DB  0x65,0x6D,0x6F,0x74,0x65,0x44,0x65,0x76
0017b1 6369
0017b2 4365
0017b3 6e6f
0017b4 7274      	.DB  0x69,0x63,0x65,0x43,0x6F,0x6E,0x74,0x72
0017b5 6c6f
0017b6 6150
0017b7 7372
0017b8 7265      	.DB  0x6F,0x6C,0x50,0x61,0x72,0x73,0x65,0x72
0017b9 2928
0017ba 6620
0017bb 6961
0017bc 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
0017bd 0d64
0017be 000a
0017bf 0a0d
0017c0 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
0017c1 6572
0017c2 6f6d
0017c3 6574
0017c4 6544      	.DB  0x72,0x65,0x6D,0x6F,0x74,0x65,0x44,0x65
0017c5 6976
0017c6 6563
0017c7 6f43
0017c8 746e      	.DB  0x76,0x69,0x63,0x65,0x43,0x6F,0x6E,0x74
0017c9 6f72
0017ca 506c
0017cb 7261
0017cc 6573      	.DB  0x72,0x6F,0x6C,0x50,0x61,0x72,0x73,0x65
0017cd 2d72
0017ce 202d
0017cf 4d43
0017d0 2044      	.DB  0x72,0x2D,0x2D,0x20,0x43,0x4D,0x44,0x20
0017d1 305b
0017d2 2578
0017d3 3230
0017d4 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
0017d5 0a0d
0017d6 7600
0017d7 6c61
0017d8 6575      	.DB  0xD,0xA,0x0,0x76,0x61,0x6C,0x75,0x65
0017d9 2020
0017da 2020
0017db 2020
0017dc 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0017dd 2020
0017de 5b20
0017df 6c25
0017e0 5d64      	.DB  0x20,0x20,0x20,0x5B,0x25,0x6C,0x64,0x5D
0017e1 0a0d
0017e2 3c00
0017e3 5445
0017e4 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0017e5 7270
0017e6 636f
0017e7 7365
0017e8 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0017e9 6361
0017ea 656b
0017eb 3e74
0017ec 7320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x73
0017ed 7465
0017ee 6954
0017ef 656d
0017f0 7953      	.DB  0x65,0x74,0x54,0x69,0x6D,0x65,0x53,0x79
0017f1 636e
0017f2 6353
0017f3 6568
0017f4 616d      	.DB  0x6E,0x63,0x53,0x63,0x68,0x65,0x6D,0x61
0017f5 2528
0017f6 646c
0017f7 2029
0017f8 6166      	.DB  0x28,0x25,0x6C,0x64,0x29,0x20,0x66,0x61
0017f9 6c69
0017fa 6465
0017fb 0a0d
0017fc 5700      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x57
0017fd 5241
0017fe 204e
0017ff 203a
001800 453c      	.DB  0x41,0x52,0x4E,0x20,0x3A,0x20,0x3C,0x45
001801 4854
001802 705f
001803 6f72
001804 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001805 7373
001806 6150
001807 6b63
001808 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
001809 203e
00180a 4544
00180b 4356
00180c 5254      	.DB  0x3E,0x20,0x44,0x45,0x56,0x43,0x54,0x52
00180d 5f4c
00180e 554d
00180f 4554
001810 415f      	.DB  0x4C,0x5F,0x4D,0x55,0x54,0x45,0x5F,0x41
001811 414c
001812 4d52
001813 3a20
001814 4520      	.DB  0x4C,0x41,0x52,0x4D,0x20,0x3A,0x20,0x45
001815 4854
001816 725f
001817 6d65
001818 746f      	.DB  0x54,0x48,0x5F,0x72,0x65,0x6D,0x6F,0x74
001819 4465
00181a 7665
00181b 6369
00181c 4365      	.DB  0x65,0x44,0x65,0x76,0x69,0x63,0x65,0x43
00181d 6e6f
00181e 7274
00181f 6c6f
001820 6341      	.DB  0x6F,0x6E,0x74,0x72,0x6F,0x6C,0x41,0x63
001821 286b
001822 2029
001823 6166
001824 6c69      	.DB  0x6B,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001825 6465
001826 0a0d
001827 3c00
001828 5445      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x45,0x54
001829 5f48
00182a 7270
00182b 636f
00182c 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
00182d 5073
00182e 6361
00182f 656b
001830 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001831 6320
001832 656c
001833 7261
001834 6c20      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x6C
001835 7369
001836 2074
001837 4341
001838 204b      	.DB  0x69,0x73,0x74,0x20,0x41,0x43,0x4B,0x20
001839 6e69
00183a 6176
00183b 696c
00183c 2064      	.DB  0x69,0x6E,0x76,0x61,0x6C,0x69,0x64,0x20
00183d 656c
00183e 676e
00183f 6874
001840 2820      	.DB  0x6C,0x65,0x6E,0x67,0x74,0x68,0x20,0x28
001841 6425
001842 0d29
001843 000a
001844 453c      	.DB  0x25,0x64,0x29,0xD,0xA,0x0,0x3C,0x45
001845 4854
001846 705f
001847 6f72
001848 6563      	.DB  0x54,0x48,0x5F,0x70,0x72,0x6F,0x63,0x65
001849 7373
00184a 6150
00184b 6b63
00184c 7465      	.DB  0x73,0x73,0x50,0x61,0x63,0x6B,0x65,0x74
00184d 203e
00184e 6c63
00184f 6165
001850 4c72      	.DB  0x3E,0x20,0x63,0x6C,0x65,0x61,0x72,0x4C
001851 7369
001852 5074
001853 7261
001854 6573      	.DB  0x69,0x73,0x74,0x50,0x61,0x72,0x73,0x65
001855 2872
001856 2029
001857 6166
001858 6c69      	.DB  0x72,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001859 6465
00185a 0a0d
00185b 0d00
00185c 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
00185d 632d
00185e 656c
00185f 7261
001860 694c      	.DB  0x2D,0x63,0x6C,0x65,0x61,0x72,0x4C,0x69
001861 7473
001862 6150
001863 7372
001864 7265      	.DB  0x73,0x74,0x50,0x61,0x72,0x73,0x65,0x72
001865 2d2d
001866 4120
001867 4b43
001868 5b20      	.DB  0x2D,0x2D,0x20,0x41,0x43,0x4B,0x20,0x5B
001869 7830
00186a 3025
00186b 5832
00186c 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00186d 000a
00186e 7473
00186f 7461
001870 7375      	.DB  0xA,0x0,0x73,0x74,0x61,0x74,0x75,0x73
001871 2020
001872 2020
001873 2020
001874 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001875 2020
001876 305b
001877 2578
001878 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001879 5d58
00187a 0a0d
00187b 3c00
00187c 5445      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x45,0x54
00187d 5f48
00187e 7270
00187f 636f
001880 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001881 5073
001882 6361
001883 656b
001884 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001885 6320
001886 656c
001887 7261
001888 6420      	.DB  0x20,0x63,0x6C,0x65,0x61,0x72,0x20,0x64
001889 7075
00188a 696c
00188b 6163
00188c 6574      	.DB  0x75,0x70,0x6C,0x69,0x63,0x61,0x74,0x65
00188d 7220
00188e 7165
00188f 6575
001890 7473      	.DB  0x20,0x72,0x65,0x71,0x75,0x65,0x73,0x74
001891 2820
001892 4341
001893 294b
001894 5320      	.DB  0x20,0x28,0x41,0x43,0x4B,0x29,0x20,0x53
001895 4355
001896 4543
001897 5353
001898 2121      	.DB  0x55,0x43,0x43,0x45,0x53,0x53,0x21,0x21
001899 0a0d
00189a 3c00
00189b 5445
00189c 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
00189d 7270
00189e 636f
00189f 7365
0018a0 5073      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x50
0018a1 6361
0018a2 656b
0018a3 3e74
0018a4 6320      	.DB  0x61,0x63,0x6B,0x65,0x74,0x3E,0x20,0x63
0018a5 656c
0018a6 7261
0018a7 6420
0018a8 7075      	.DB  0x6C,0x65,0x61,0x72,0x20,0x64,0x75,0x70
0018a9 696c
0018aa 6163
0018ab 6574
0018ac 7220      	.DB  0x6C,0x69,0x63,0x61,0x74,0x65,0x20,0x72
0018ad 7165
0018ae 6575
0018af 7473
0018b0 2820      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x20,0x28
0018b1 4341
0018b2 294b
0018b3 4620
0018b4 4941      	.DB  0x41,0x43,0x4B,0x29,0x20,0x46,0x41,0x49
0018b5 454c
0018b6 5b44
0018b7 7830
0018b8 3025      	.DB  0x4C,0x45,0x44,0x5B,0x30,0x78,0x25,0x30
0018b9 5832
0018ba 215d
0018bb 0d21
0018bc 000a      	.DB  0x32,0x58,0x5D,0x21,0x21,0xD,0xA,0x0
0018bd 453c
0018be 4854
0018bf 705f
0018c0 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018c1 6563
0018c2 7373
0018c3 6150
0018c4 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018c5 7465
0018c6 203e
0018c7 6e75
0018c8 6e6b      	.DB  0x65,0x74,0x3E,0x20,0x75,0x6E,0x6B,0x6E
0018c9 776f
0018ca 206e
0018cb 7974
0018cc 6570      	.DB  0x6F,0x77,0x6E,0x20,0x74,0x79,0x70,0x65
0018cd 6620
0018ce 726f
0018cf 6320
0018d0 726c      	.DB  0x20,0x66,0x6F,0x72,0x20,0x63,0x6C,0x72
0018d1 6c5f
0018d2 7473
0018d3 735f
0018d4 2d74      	.DB  0x5F,0x6C,0x73,0x74,0x5F,0x73,0x74,0x2D
0018d5 633e
0018d6 646d
0018d7 5b20
0018d8 7830      	.DB  0x3E,0x63,0x6D,0x64,0x20,0x5B,0x30,0x78
0018d9 3025
0018da 5832
0018db 0d5d
0018dc 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
0018dd 453c
0018de 4854
0018df 705f
0018e0 6f72      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x70,0x72,0x6F
0018e1 6563
0018e2 7373
0018e3 6150
0018e4 6b63      	.DB  0x63,0x65,0x73,0x73,0x50,0x61,0x63,0x6B
0018e5 7465
0018e6 203e
0018e7 6966
0018e8 6d72      	.DB  0x65,0x74,0x3E,0x20,0x66,0x69,0x72,0x6D
0018e9 6177
0018ea 6572
0018eb 7520
0018ec 6c70      	.DB  0x77,0x61,0x72,0x65,0x20,0x75,0x70,0x6C
0018ed 616f
0018ee 2064
0018ef 6168
0018f0 6e73      	.DB  0x6F,0x61,0x64,0x20,0x68,0x61,0x73,0x6E
0018f1 7427
0018f2 7320
0018f3 7075
0018f4 6f70      	.DB  0x27,0x74,0x20,0x73,0x75,0x70,0x70,0x6F
0018f5 7472
0018f6 6465
0018f7 7920
0018f8 7465      	.DB  0x72,0x74,0x65,0x64,0x20,0x79,0x65,0x74
0018f9 0a0d
0018fa 0d00
0018fb 3c0a
0018fc 5445      	.DB  0xD,0xA,0x0,0xD,0xA,0x3C,0x45,0x54
0018fd 5f48
0018fe 7270
0018ff 636f
001900 7365      	.DB  0x48,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
001901 5073
001902 6361
001903 656b
001904 3e74      	.DB  0x73,0x50,0x61,0x63,0x6B,0x65,0x74,0x3E
001905 6920
001906 766e
001907 6c61
001908 6469      	.DB  0x20,0x69,0x6E,0x76,0x61,0x6C,0x69,0x64
001909 6620
00190a 6172
00190b 656d
00190c 7420      	.DB  0x20,0x66,0x72,0x61,0x6D,0x65,0x20,0x74
00190d 7079
00190e 2065
00190f 2028
001910 3025      	.DB  0x79,0x70,0x65,0x20,0x28,0x20,0x25,0x30
001911 5832
001912 2920
001913 2121
001914 0a0d      	.DB  0x32,0x58,0x20,0x29,0x21,0x21,0xD,0xA
001915 3c00
001916 5445
001917 5f48
001918 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001919 6563
00191a 7669
00191b 3e65
00191c 6d20      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x6D
00191d 6c61
00191e 6f6c
00191f 2e63
001920 462e      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x2E,0x2E,0x46
001921 4941
001922 454c
001923 2e44
001924 0d2e      	.DB  0x41,0x49,0x4C,0x45,0x44,0x2E,0x2E,0xD
001925 000a
001926 007e
001927 0a0d
001928 6e69      	.DB  0xA,0x0,0x7E,0x0,0xD,0xA,0x69,0x6E
001929 6176
00192a 696c
00192b 2064
00192c 656c      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6C,0x65
00192d 676e
00192e 6874
00192f 2121
001930 0a0d      	.DB  0x6E,0x67,0x74,0x68,0x21,0x21,0xD,0xA
001931 3c00
001932 5445
001933 5f48
001934 6572      	.DB  0x0,0x3C,0x45,0x54,0x48,0x5F,0x72,0x65
001935 6563
001936 7669
001937 3e65
001938 6320      	.DB  0x63,0x65,0x69,0x76,0x65,0x3E,0x20,0x63
001939 6568
00193a 6b63
00193b 7573
00193c 206d      	.DB  0x68,0x65,0x63,0x6B,0x73,0x75,0x6D,0x20
00193d 7265
00193e 6f72
00193f 0d72
001940 000a      	.DB  0x65,0x72,0x72,0x6F,0x72,0xD,0xA,0x0
001941 453c
001942 4854
001943 735f
001944 6e65      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001945 3e64
001946 5720
001947 5241
001948 494e      	.DB  0x64,0x3E,0x20,0x57,0x41,0x52,0x4E,0x49
001949 474e
00194a 3a20
00194b 5020
00194c 6361      	.DB  0x4E,0x47,0x20,0x3A,0x20,0x50,0x61,0x63
00194d 656b
00194e 2074
00194f 7369
001950 7420      	.DB  0x6B,0x65,0x74,0x20,0x69,0x73,0x20,0x74
001951 6f6f
001952 6c20
001953 6e6f
001954 2867      	.DB  0x6F,0x6F,0x20,0x6C,0x6F,0x6E,0x67,0x28
001955 6425
001956 6220
001957 7479
001958 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001959 0d29
00195a 000a
00195b 453c
00195c 4854      	.DB  0x29,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
00195d 735f
00195e 6e65
00195f 3e64
001960 5720      	.DB  0x5F,0x73,0x65,0x6E,0x64,0x3E,0x20,0x57
001961 5241
001962 494e
001963 474e
001964 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
001965 4520
001966 4854
001967 735f
001968 6e65      	.DB  0x20,0x45,0x54,0x48,0x5F,0x73,0x65,0x6E
001969 2064
00196a 616d
00196b 6c6c
00196c 636f      	.DB  0x64,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
00196d 6620
00196e 6961
00196f 656c
001970 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
001971 2528
001972 2964
001973 0a0d
001974 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
001975 5445
001976 5f48
001977 6573
001978 646e      	.DB  0x45,0x54,0x48,0x5F,0x73,0x65,0x6E,0x64
001979 203e
00197a 5445
00197b 5f48
00197c 6461      	.DB  0x3E,0x20,0x45,0x54,0x48,0x5F,0x61,0x64
00197d 5764
00197e 6961
00197f 5174
001980 6575      	.DB  0x64,0x57,0x61,0x69,0x74,0x51,0x75,0x65
001981 6575
001982 2928
001983 6620
001984 6961      	.DB  0x75,0x65,0x28,0x29,0x20,0x66,0x61,0x69
001985 656c
001986 2064
001987 695b
001988 3a64      	.DB  0x6C,0x65,0x64,0x20,0x5B,0x69,0x64,0x3A
001989 7830
00198a 3025
00198b 5832
00198c 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
00198d 000a
00198e 453c
00198f 4854
001990 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001991 6977
001992 6374
001993 4d68
001994 646f      	.DB  0x77,0x69,0x74,0x63,0x68,0x4D,0x6F,0x64
001995 3e65
001996 7320
001997 6977
001998 6374      	.DB  0x65,0x3E,0x20,0x73,0x77,0x69,0x74,0x63
001999 2068
00199a 6f74
00199b 4320
00199c 6e6f      	.DB  0x68,0x20,0x74,0x6F,0x20,0x43,0x6F,0x6E
00199d 6966
00199e 2067
00199f 6f6d
0019a0 6564      	.DB  0x66,0x69,0x67,0x20,0x6D,0x6F,0x64,0x65
0019a1 0a0d
0019a2 3c00
0019a3 5445
0019a4 5f48      	.DB  0xD,0xA,0x0,0x3C,0x45,0x54,0x48,0x5F
0019a5 7773
0019a6 7469
0019a7 6863
0019a8 6f4d      	.DB  0x73,0x77,0x69,0x74,0x63,0x68,0x4D,0x6F
0019a9 6564
0019aa 203e
0019ab 7773
0019ac 7469      	.DB  0x64,0x65,0x3E,0x20,0x73,0x77,0x69,0x74
0019ad 6863
0019ae 7420
0019af 206f
0019b0 6f4e      	.DB  0x63,0x68,0x20,0x74,0x6F,0x20,0x4E,0x6F
0019b1 6d72
0019b2 6c61
0019b3 6d20
0019b4 646f      	.DB  0x72,0x6D,0x61,0x6C,0x20,0x6D,0x6F,0x64
0019b5 0d65
0019b6 000a
0019b7 453c
0019b8 4854      	.DB  0x65,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
0019b9 675f
0019ba 7465
0019bb 6f43
0019bc 666e      	.DB  0x5F,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
0019bd 6769
0019be 203e
0019bf 7257
0019c0 7469      	.DB  0x69,0x67,0x3E,0x20,0x57,0x72,0x69,0x74
0019c1 2065
0019c2 6f74
0019c3 7520
0019c4 7261      	.DB  0x65,0x20,0x74,0x6F,0x20,0x75,0x61,0x72
0019c5 2074
0019c6 2030
0019c7 003a
0019c8 453c      	.DB  0x74,0x20,0x30,0x20,0x3A,0x0,0x3C,0x45
0019c9 4854
0019ca 735f
0019cb 7465
0019cc 6f43      	.DB  0x54,0x48,0x5F,0x73,0x65,0x74,0x43,0x6F
0019cd 666e
0019ce 6769
0019cf 203e
0019d0 616d      	.DB  0x6E,0x66,0x69,0x67,0x3E,0x20,0x6D,0x61
0019d1 6c6c
0019d2 636f
0019d3 4328
0019d4 4e4f      	.DB  0x6C,0x6C,0x6F,0x63,0x28,0x43,0x4F,0x4E
0019d5 5f46
0019d6 4552
0019d7 4441
0019d8 425f      	.DB  0x46,0x5F,0x52,0x45,0x41,0x44,0x5F,0x42
0019d9 4655
0019da 4546
0019db 2952
0019dc 6620      	.DB  0x55,0x46,0x46,0x45,0x52,0x29,0x20,0x66
0019dd 6961
0019de 656c
0019df 0d64
0019e0 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0019e1 453c
0019e2 4854
0019e3 735f
0019e4 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
0019e5 6f43
0019e6 666e
0019e7 6769
0019e8 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
0019e9 7257
0019ea 7469
0019eb 2065
0019ec 6f74      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x74,0x6F
0019ed 7520
0019ee 7261
0019ef 2074
0019f0 2030      	.DB  0x20,0x75,0x61,0x72,0x74,0x20,0x30,0x20
0019f1 003a
0019f2 453c
0019f3 4854
0019f4 735f      	.DB  0x3A,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
0019f5 7465
0019f6 6f43
0019f7 666e
0019f8 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
0019f9 203e
0019fa 6572
0019fb 6461
0019fc 6320      	.DB  0x3E,0x20,0x72,0x65,0x61,0x64,0x20,0x63
0019fd 6e6f
0019fe 6966
0019ff 2067
001a00 7266      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x20,0x66,0x72
001a01 6d6f
001a02 4520
001a03 4854
001a04 6d20      	.DB  0x6F,0x6D,0x20,0x45,0x54,0x48,0x20,0x6D
001a05 646f
001a06 6c75
001a07 2065
001a08 6166      	.DB  0x6F,0x64,0x75,0x6C,0x65,0x20,0x66,0x61
001a09 6c69
001a0a 6465
001a0b 0a0d
001a0c 2500      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x25
001a0d 3230
001a0e 2558
001a0f 3230
001a10 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a11 3230
001a12 2558
001a13 3230
001a14 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a15 3230
001a16 2558
001a17 3230
001a18 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a19 3230
001a1a 2558
001a1b 3230
001a1c 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a1d 3230
001a1e 2558
001a1f 3230
001a20 2558      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x25
001a21 3230
001a22 2558
001a23 3230
001a24 0058      	.DB  0x30,0x32,0x58,0x25,0x30,0x32,0x58,0x0
001a25 453c
001a26 4854
001a27 735f
001a28 7465      	.DB  0x3C,0x45,0x54,0x48,0x5F,0x73,0x65,0x74
001a29 6f43
001a2a 666e
001a2b 6769
001a2c 203e      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x3E,0x20
001a2d 6553
001a2e 2074
001a2f 7453
001a30 6972      	.DB  0x53,0x65,0x74,0x20,0x53,0x74,0x72,0x69
001a31 676e
001a32 5b20
001a33 7325
001a34 0d5d      	.DB  0x6E,0x67,0x20,0x5B,0x25,0x73,0x5D,0xD
001a35 000a
001a36 453c
001a37 4854
001a38 735f      	.DB  0xA,0x0,0x3C,0x45,0x54,0x48,0x5F,0x73
001a39 7465
001a3a 6f43
001a3b 666e
001a3c 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
001a3d 203e
001a3e 6553
001a3f 7474
001a40 6e69      	.DB  0x3E,0x20,0x53,0x65,0x74,0x74,0x69,0x6E
001a41 2067
001a42 736d
001a43 2067
001a44 2d2d      	.DB  0x67,0x20,0x6D,0x73,0x67,0x20,0x2D,0x2D
001a45 0d2d
001a46 000a
001a47 0a0d
001a48 2d2d      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001a49 0d2d
001a4a 000a
001a4b 453c
001a4c 4854      	.DB  0x2D,0xD,0xA,0x0,0x3C,0x45,0x54,0x48
001a4d 725f
001a4e 7365
001a4f 7465
001a50 203e      	.DB  0x5F,0x72,0x65,0x73,0x65,0x74,0x3E,0x20
001a51 6552
001a52 6573
001a53 7474
001a54 6e69      	.DB  0x52,0x65,0x73,0x65,0x74,0x74,0x69,0x6E
001a55 2067
001a56 7445
001a57 6568
001a58 6e72      	.DB  0x67,0x20,0x45,0x74,0x68,0x65,0x72,0x6E
001a59 7465
001a5a 4d20
001a5b 646f
001a5c 6c75      	.DB  0x65,0x74,0x20,0x4D,0x6F,0x64,0x75,0x6C
001a5d 2c65
001a5e 7020
001a5f 656c
001a60 7361      	.DB  0x65,0x2C,0x20,0x70,0x6C,0x65,0x61,0x73
001a61 2065
001a62 6177
001a63 7469
001a64 002e      	.DB  0x65,0x20,0x77,0x61,0x69,0x74,0x2E,0x0
001a65 2e2e
001a66 442e
001a67 6e6f
001a68 0d65      	.DB  0x2E,0x2E,0x2E,0x44,0x6F,0x6E,0x65,0xD
001a69 000a      	.DB  0xA,0x0
                 _0x140000:
001a6a 733c
001a6b 6174
001a6c 7574
001a6d 5273      	.DB  0x3C,0x73,0x74,0x61,0x74,0x75,0x73,0x52
001a6e 7165
001a6f 6575
001a70 7473
001a71 6150      	.DB  0x65,0x71,0x75,0x65,0x73,0x74,0x50,0x61
001a72 7372
001a73 7265
001a74 203e
001a75 616d      	.DB  0x72,0x73,0x65,0x72,0x3E,0x20,0x6D,0x61
001a76 6c6c
001a77 636f
001a78 6620
001a79 6961      	.DB  0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61,0x69
001a7a 656c
001a7b 0d64
001a7c 000a
001a7d 633c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x63
001a7e 6e6f
001a7f 6966
001a80 4d67
001a81 6e61      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E
001a82 6761
001a83 5065
001a84 7261
001a85 6573      	.DB  0x61,0x67,0x65,0x50,0x61,0x72,0x73,0x65
001a86 3e72
001a87 0a0d
001a88 3c00
001a89 6f63      	.DB  0x72,0x3E,0xD,0xA,0x0,0x3C,0x63,0x6F
001a8a 666e
001a8b 6769
001a8c 614d
001a8d 616e      	.DB  0x6E,0x66,0x69,0x67,0x4D,0x61,0x6E,0x61
001a8e 6567
001a8f 6150
001a90 7372
001a91 7265      	.DB  0x67,0x65,0x50,0x61,0x72,0x73,0x65,0x72
001a92 203e
001a93 4552
001a94 4441
001a95 4e49      	.DB  0x3E,0x20,0x52,0x45,0x41,0x44,0x49,0x4E
001a96 0d47
001a97 000a
001a98 633c
001a99 6e6f      	.DB  0x47,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001a9a 6966
001a9b 4d67
001a9c 6e61
001a9d 6761      	.DB  0x66,0x69,0x67,0x4D,0x61,0x6E,0x61,0x67
001a9e 5065
001a9f 7261
001aa0 6573
001aa1 3e72      	.DB  0x65,0x50,0x61,0x72,0x73,0x65,0x72,0x3E
001aa2 5720
001aa3 4952
001aa4 4954
001aa5 474e      	.DB  0x20,0x57,0x52,0x49,0x54,0x49,0x4E,0x47
001aa6 0a0d
001aa7 3c00
001aa8 6f63
001aa9 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001aaa 6769
001aab 614d
001aac 616e
001aad 6567      	.DB  0x69,0x67,0x4D,0x61,0x6E,0x61,0x67,0x65
001aae 6150
001aaf 7372
001ab0 7265
001ab1 203e      	.DB  0x50,0x61,0x72,0x73,0x65,0x72,0x3E,0x20
001ab2 6f63
001ab3 666e
001ab4 654c
001ab5 206e      	.DB  0x63,0x6F,0x6E,0x66,0x4C,0x65,0x6E,0x20
001ab6 203d
001ab7 6425
001ab8 0a0d
001ab9 3c00      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x3C
001aba 6f63
001abb 666e
001abc 6769
001abd 614d      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x4D,0x61
001abe 616e
001abf 6567
001ac0 6150
001ac1 7372      	.DB  0x6E,0x61,0x67,0x65,0x50,0x61,0x72,0x73
001ac2 7265
001ac3 203e
001ac4 616d
001ac5 6c6c      	.DB  0x65,0x72,0x3E,0x20,0x6D,0x61,0x6C,0x6C
001ac6 636f
001ac7 6620
001ac8 6961
001ac9 656c      	.DB  0x6F,0x63,0x20,0x66,0x61,0x69,0x6C,0x65
001aca 0d64
001acb 000a
001acc 6e3c
001acd 7465      	.DB  0x64,0xD,0xA,0x0,0x3C,0x6E,0x65,0x74
001ace 6f77
001acf 6b72
001ad0 614d
001ad1 6e69      	.DB  0x77,0x6F,0x72,0x6B,0x4D,0x61,0x69,0x6E
001ad2 6574
001ad3 616e
001ad4 636e
001ad5 5065      	.DB  0x74,0x65,0x6E,0x61,0x6E,0x63,0x65,0x50
001ad6 7261
001ad7 6573
001ad8 3e72
001ad9 6d20      	.DB  0x61,0x72,0x73,0x65,0x72,0x3E,0x20,0x6D
001ada 6c61
001adb 6f6c
001adc 2063
001add 6166      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x20,0x66,0x61
001ade 6c69
001adf 6465
001ae0 2820
001ae1 6425      	.DB  0x69,0x6C,0x65,0x64,0x20,0x28,0x25,0x64
001ae2 0d29
001ae3 000a      	.DB  0x29,0xD,0xA,0x0
                 _0x160000:
001ae4 673c
001ae5 7465
001ae6 6f43
001ae7 666e      	.DB  0x3C,0x67,0x65,0x74,0x43,0x6F,0x6E,0x66
001ae8 6769
001ae9 654c
001aea 3e6e
001aeb 7520      	.DB  0x69,0x67,0x4C,0x65,0x6E,0x3E,0x20,0x75
001aec 6b6e
001aed 6f6e
001aee 6e77
001aef 6320      	.DB  0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63
001af0 6e6f
001af1 6966
001af2 7567
001af3 6172      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x75,0x72,0x61
001af4 6974
001af5 6e6f
001af6 7420
001af7 7079      	.DB  0x74,0x69,0x6F,0x6E,0x20,0x74,0x79,0x70
001af8 2065
001af9 305b
001afa 2578
001afb 3230      	.DB  0x65,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001afc 5d58
001afd 0a0d
001afe 3c00
001aff 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001b00 666e
001b01 6769
001b02 6552
001b03 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b04 203e
001b05 4f43
001b06 464e
001b07 505f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x50
001b08 4f52
001b09 4550
001b0a 5452
001b0b 4549      	.DB  0x52,0x4F,0x50,0x45,0x52,0x54,0x49,0x45
001b0c 2053
001b0d 616d
001b0e 6c6c
001b0f 636f      	.DB  0x53,0x20,0x6D,0x61,0x6C,0x6C,0x6F,0x63
001b10 2031
001b11 6166
001b12 6c69
001b13 6465      	.DB  0x31,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001b14 2820
001b15 6425
001b16 6220
001b17 7479      	.DB  0x20,0x28,0x25,0x64,0x20,0x62,0x79,0x74
001b18 7365
001b19 0d29
001b1a 000a
001b1b 633c      	.DB  0x65,0x73,0x29,0xD,0xA,0x0,0x3C,0x63
001b1c 6e6f
001b1d 6966
001b1e 5267
001b1f 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001b20 3e64
001b21 6720
001b22 7465
001b23 7250      	.DB  0x64,0x3E,0x20,0x67,0x65,0x74,0x50,0x72
001b24 706f
001b25 7265
001b26 6974
001b27 7365      	.DB  0x6F,0x70,0x65,0x72,0x74,0x69,0x65,0x73
001b28 6f43
001b29 666e
001b2a 6769
001b2b 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001b2c 6620
001b2d 6961
001b2e 656c
001b2f 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001b30 000a
001b31 0a0d
001b32 2d2d
001b33 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001b34 4552
001b35 4441
001b36 4320
001b37 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001b38 5f46
001b39 5250
001b3a 504f
001b3b 5245      	.DB  0x46,0x5F,0x50,0x52,0x4F,0x50,0x45,0x52
001b3c 4954
001b3d 5345
001b3e 2d20
001b3f 2d2d      	.DB  0x54,0x49,0x45,0x53,0x20,0x2D,0x2D,0x2D
001b40 0a0d
001b41 2500
001b42 0d73
001b43 000a      	.DB  0xD,0xA,0x0,0x25,0x73,0xD,0xA,0x0
001b44 6425
001b45 0a0d
001b46 3c00
001b47 6f63      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x63,0x6F
001b48 666e
001b49 6769
001b4a 6552
001b4b 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001b4c 203e
001b4d 4f43
001b4e 464e
001b4f 4f5f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F
001b50 4550
001b51 4152
001b52 4554
001b53 6d20      	.DB  0x50,0x45,0x52,0x41,0x54,0x45,0x20,0x6D
001b54 6c61
001b55 6f6c
001b56 3163
001b57 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001b58 6961
001b59 656c
001b5a 2064
001b5b 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001b5c 2064
001b5d 7962
001b5e 6574
001b5f 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001b60 0a0d
001b61 3c00
001b62 6f63
001b63 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001b64 6769
001b65 6552
001b66 6461
001b67 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001b68 6567
001b69 4f74
001b6a 6570
001b6b 6172      	.DB  0x67,0x65,0x74,0x4F,0x70,0x65,0x72,0x61
001b6c 6974
001b6d 676e
001b6e 6f43
001b6f 666e      	.DB  0x74,0x69,0x6E,0x67,0x43,0x6F,0x6E,0x66
001b70 6769
001b71 2928
001b72 6620
001b73 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001b74 656c
001b75 0d64
001b76 000a
001b77 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001b78 2d2d
001b79 202d
001b7a 4552
001b7b 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001b7c 4320
001b7d 4e4f
001b7e 5f46
001b7f 504f      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x4F,0x50
001b80 5245
001b81 5441
001b82 2045
001b83 2d2d      	.DB  0x45,0x52,0x41,0x54,0x45,0x20,0x2D,0x2D
001b84 0d2d
001b85 000a
001b86 6f6d
001b87 6564      	.DB  0x2D,0xD,0xA,0x0,0x6D,0x6F,0x64,0x65
001b88 2020
001b89 2020
001b8a 2020
001b8b 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001b8c 2020
001b8d 2020
001b8e 305b
001b8f 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001b90 3230
001b91 5d58
001b92 0a0d
001b93 6400      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x64
001b94 7665
001b95 6369
001b96 4565
001b97 616e      	.DB  0x65,0x76,0x69,0x63,0x65,0x45,0x6E,0x61
001b98 6c62
001b99 2065
001b9a 2020
001b9b 5b20      	.DB  0x62,0x6C,0x65,0x20,0x20,0x20,0x20,0x5B
001b9c 7830
001b9d 3025
001b9e 5832
001b9f 0d5d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0xD
001ba0 000a
001ba1 6c61
001ba2 7261
001ba3 456d      	.DB  0xA,0x0,0x61,0x6C,0x61,0x72,0x6D,0x45
001ba4 616e
001ba5 6c62
001ba6 2065
001ba7 2020      	.DB  0x6E,0x61,0x62,0x6C,0x65,0x20,0x20,0x20
001ba8 2020
001ba9 305b
001baa 2578
001bab 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001bac 5d58
001bad 0a0d
001bae 7300
001baf 6e65      	.DB  0x58,0x5D,0xD,0xA,0x0,0x73,0x65,0x6E
001bb0 6f73
001bb1 4572
001bb2 616e
001bb3 6c62      	.DB  0x73,0x6F,0x72,0x45,0x6E,0x61,0x62,0x6C
001bb4 2065
001bb5 2020
001bb6 0020
001bb7 305b      	.DB  0x65,0x20,0x20,0x20,0x20,0x0,0x5B,0x30
001bb8 2578
001bb9 3230
001bba 5d58
001bbb 3c00      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x0,0x3C
001bbc 6f63
001bbd 666e
001bbe 6769
001bbf 6552      	.DB  0x63,0x6F,0x6E,0x66,0x69,0x67,0x52,0x65
001bc0 6461
001bc1 203e
001bc2 4f43
001bc3 464e      	.DB  0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46
001bc4 535f
001bc5 4e45
001bc6 4f53
001bc7 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001bc8 616d
001bc9 6c6c
001bca 636f
001bcb 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001bcc 6166
001bcd 6c69
001bce 6465
001bcf 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001bd0 6425
001bd1 6220
001bd2 7479
001bd3 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001bd4 0d29
001bd5 000a
001bd6 633c
001bd7 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001bd8 6966
001bd9 5267
001bda 6165
001bdb 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001bdc 6720
001bdd 7465
001bde 6553
001bdf 736e      	.DB  0x20,0x67,0x65,0x74,0x53,0x65,0x6E,0x73
001be0 726f
001be1 6f43
001be2 666e
001be3 6769      	.DB  0x6F,0x72,0x43,0x6F,0x6E,0x66,0x69,0x67
001be4 2928
001be5 6620
001be6 6961
001be7 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
001be8 0d64
001be9 000a
001bea 0a0d
001beb 2d2d      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x2D,0x2D
001bec 202d
001bed 4552
001bee 4441
001bef 4320      	.DB  0x2D,0x20,0x52,0x45,0x41,0x44,0x20,0x43
001bf0 4e4f
001bf1 5f46
001bf2 4553
001bf3 534e      	.DB  0x4F,0x4E,0x46,0x5F,0x53,0x45,0x4E,0x53
001bf4 524f
001bf5 5b20
001bf6 6425
001bf7 2d5d      	.DB  0x4F,0x52,0x20,0x5B,0x25,0x64,0x5D,0x2D
001bf8 2d2d
001bf9 0a0d
001bfa 7300
001bfb 6d61      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x73,0x61,0x6D
001bfc 6c70
001bfd 6e69
001bfe 5267
001bff 7461      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x52,0x61,0x74
001c00 2065
001c01 2020
001c02 5b20
001c03 6425      	.DB  0x65,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c04 0d5d
001c05 000a
001c06 6572
001c07 634f      	.DB  0x5D,0xD,0xA,0x0,0x72,0x65,0x4F,0x63
001c08 7563
001c09 7272
001c0a 6e65
001c0b 6563      	.DB  0x63,0x75,0x72,0x72,0x65,0x6E,0x63,0x65
001c0c 2020
001c0d 2020
001c0e 305b
001c0f 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001c10 3430
001c11 5d58
001c12 0a0d
001c13 7400      	.DB  0x30,0x34,0x58,0x5D,0xD,0xA,0x0,0x74
001c14 6d69
001c15 5365
001c16 6174
001c17 7472      	.DB  0x69,0x6D,0x65,0x53,0x74,0x61,0x72,0x74
001c18 6f48
001c19 7275
001c1a 2020
001c1b 5b20      	.DB  0x48,0x6F,0x75,0x72,0x20,0x20,0x20,0x5B
001c1c 6425
001c1d 0d5d
001c1e 000a
001c1f 6974      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x74,0x69
001c20 656d
001c21 7453
001c22 7261
001c23 4d74      	.DB  0x6D,0x65,0x53,0x74,0x61,0x72,0x74,0x4D
001c24 6e69
001c25 2020
001c26 2020
001c27 255b      	.DB  0x69,0x6E,0x20,0x20,0x20,0x20,0x5B,0x25
001c28 5d64
001c29 0a0d
001c2a 7400
001c2b 6d69      	.DB  0x64,0x5D,0xD,0xA,0x0,0x74,0x69,0x6D
001c2c 5365
001c2d 6f74
001c2e 4870
001c2f 756f      	.DB  0x65,0x53,0x74,0x6F,0x70,0x48,0x6F,0x75
001c30 2072
001c31 2020
001c32 5b20
001c33 6425      	.DB  0x72,0x20,0x20,0x20,0x20,0x5B,0x25,0x64
001c34 0d5d
001c35 000a
001c36 6974
001c37 656d      	.DB  0x5D,0xD,0xA,0x0,0x74,0x69,0x6D,0x65
001c38 7453
001c39 706f
001c3a 694d
001c3b 206e      	.DB  0x53,0x74,0x6F,0x70,0x4D,0x69,0x6E,0x20
001c3c 2020
001c3d 2020
001c3e 255b
001c3f 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001c40 0a0d
001c41 6c00
001c42 776f
001c43 7265      	.DB  0xD,0xA,0x0,0x6C,0x6F,0x77,0x65,0x72
001c44 694c
001c45 696d
001c46 2074
001c47 2020      	.DB  0x4C,0x69,0x6D,0x69,0x74,0x20,0x20,0x20
001c48 2020
001c49 5b20
001c4a 6625
001c4b 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x66,0x5D,0xD
001c4c 000a
001c4d 6f6c
001c4e 6577
001c4f 4472      	.DB  0xA,0x0,0x6C,0x6F,0x77,0x65,0x72,0x44
001c50 6c65
001c51 7961
001c52 2020
001c53 2020      	.DB  0x65,0x6C,0x61,0x79,0x20,0x20,0x20,0x20
001c54 2020
001c55 255b
001c56 5d64
001c57 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001c58 6c00
001c59 776f
001c5a 7265
001c5b 7845      	.DB  0x0,0x6C,0x6F,0x77,0x65,0x72,0x45,0x78
001c5c 7274
001c5d 6d65
001c5e 2065
001c5f 2020      	.DB  0x74,0x72,0x65,0x6D,0x65,0x20,0x20,0x20
001c60 5b20
001c61 6625
001c62 0d5d
001c63 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001c64 7075
001c65 6570
001c66 4c72
001c67 6d69      	.DB  0x75,0x70,0x70,0x65,0x72,0x4C,0x69,0x6D
001c68 7469
001c69 2020
001c6a 2020
001c6b 2020      	.DB  0x69,0x74,0x20,0x20,0x20,0x20,0x20,0x20
001c6c 255b
001c6d 5d66
001c6e 0a0d
001c6f 7500      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x75
001c70 7070
001c71 7265
001c72 6544
001c73 616c      	.DB  0x70,0x70,0x65,0x72,0x44,0x65,0x6C,0x61
001c74 2079
001c75 2020
001c76 2020
001c77 5b20      	.DB  0x79,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001c78 6425
001c79 0d5d
001c7a 000a
001c7b 7075      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x75,0x70
001c7c 6570
001c7d 4572
001c7e 7478
001c7f 6572      	.DB  0x70,0x65,0x72,0x45,0x78,0x74,0x72,0x65
001c80 656d
001c81 2020
001c82 2020
001c83 255b      	.DB  0x6D,0x65,0x20,0x20,0x20,0x20,0x5B,0x25
001c84 5d66
001c85 0a0d
001c86 3c00
001c87 6f63      	.DB  0x66,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001c88 666e
001c89 6769
001c8a 6552
001c8b 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001c8c 203e
001c8d 4f43
001c8e 464e
001c8f 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001c90 5855
001c91 4944
001c92 6d20
001c93 6c61      	.DB  0x55,0x58,0x44,0x49,0x20,0x6D,0x61,0x6C
001c94 6f6c
001c95 3163
001c96 6620
001c97 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001c98 656c
001c99 2064
001c9a 2528
001c9b 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001c9c 7962
001c9d 6574
001c9e 2973
001c9f 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001ca0 3c00
001ca1 6f63
001ca2 666e
001ca3 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001ca4 6552
001ca5 6461
001ca6 203e
001ca7 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001ca8 4174
001ca9 7875
001caa 6944
001cab 436e      	.DB  0x74,0x41,0x75,0x78,0x44,0x69,0x6E,0x43
001cac 6e6f
001cad 6966
001cae 2867
001caf 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
001cb0 6166
001cb1 6c69
001cb2 6465
001cb3 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
001cb4 0d00
001cb5 2d0a
001cb6 2d2d
001cb7 5220      	.DB  0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52
001cb8 4145
001cb9 2044
001cba 4f43
001cbb 464e      	.DB  0x45,0x41,0x44,0x20,0x43,0x4F,0x4E,0x46
001cbc 415f
001cbd 5855
001cbe 4944
001cbf 5b20      	.DB  0x5F,0x41,0x55,0x58,0x44,0x49,0x20,0x5B
001cc0 6425
001cc1 2d5d
001cc2 2d2d
001cc3 0a0d      	.DB  0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA
001cc4 6300
001cc5 6168
001cc6 6e6e
001cc7 6c65      	.DB  0x0,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
001cc8 6e45
001cc9 6261
001cca 656c
001ccb 2020      	.DB  0x45,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001ccc 2020
001ccd 305b
001cce 2578
001ccf 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001cd0 5d58
001cd1 0a0d
001cd2 6100
001cd3 616c      	.DB  0x58,0x5D,0xD,0xA,0x0,0x61,0x6C,0x61
001cd4 6d72
001cd5 6544
001cd6 616c
001cd7 2079      	.DB  0x72,0x6D,0x44,0x65,0x6C,0x61,0x79,0x20
001cd8 2020
001cd9 2020
001cda 2020
001cdb 255b      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x5B,0x25
001cdc 5d64
001cdd 0a0d
001cde 3c00
001cdf 6f63      	.DB  0x64,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001ce0 666e
001ce1 6769
001ce2 6552
001ce3 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001ce4 203e
001ce5 4f43
001ce6 464e
001ce7 415f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
001ce8 5855
001ce9 4f44
001cea 6d20
001ceb 6c61      	.DB  0x55,0x58,0x44,0x4F,0x20,0x6D,0x61,0x6C
001cec 6f6c
001ced 3163
001cee 6620
001cef 6961      	.DB  0x6C,0x6F,0x63,0x31,0x20,0x66,0x61,0x69
001cf0 656c
001cf1 2064
001cf2 2528
001cf3 2064      	.DB  0x6C,0x65,0x64,0x20,0x28,0x25,0x64,0x20
001cf4 7962
001cf5 6574
001cf6 2973
001cf7 0a0d      	.DB  0x62,0x79,0x74,0x65,0x73,0x29,0xD,0xA
001cf8 3c00
001cf9 6f63
001cfa 666e
001cfb 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001cfc 6552
001cfd 6461
001cfe 203e
001cff 6567      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x67,0x65
001d00 4174
001d01 7875
001d02 6f44
001d03 7475      	.DB  0x74,0x41,0x75,0x78,0x44,0x6F,0x75,0x74
001d04 6f43
001d05 666e
001d06 6769
001d07 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001d08 6620
001d09 6961
001d0a 656c
001d0b 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001d0c 000a
001d0d 0a0d
001d0e 2d2d
001d0f 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001d10 4552
001d11 4441
001d12 4320
001d13 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001d14 5f46
001d15 5541
001d16 4458
001d17 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x44,0x4F,0x20
001d18 255b
001d19 5d64
001d1a 2d2d
001d1b 0d2d      	.DB  0x5B,0x25,0x64,0x5D,0x2D,0x2D,0x2D,0xD
001d1c 000a
001d1d 6863
001d1e 6e61
001d1f 656e      	.DB  0xA,0x0,0x63,0x68,0x61,0x6E,0x6E,0x65
001d20 456c
001d21 616e
001d22 6c62
001d23 2065      	.DB  0x6C,0x45,0x6E,0x61,0x62,0x6C,0x65,0x20
001d24 2020
001d25 2020
001d26 305b
001d27 2578      	.DB  0x20,0x20,0x20,0x20,0x5B,0x30,0x78,0x25
001d28 3230
001d29 5d58
001d2a 0a0d
001d2b 7300      	.DB  0x30,0x32,0x58,0x5D,0xD,0xA,0x0,0x73
001d2c 6174
001d2d 6574
001d2e 6e4f
001d2f 7645      	.DB  0x74,0x61,0x74,0x65,0x4F,0x6E,0x45,0x76
001d30 6e65
001d31 2074
001d32 2020
001d33 2020      	.DB  0x65,0x6E,0x74,0x20,0x20,0x20,0x20,0x20
001d34 5b20
001d35 6425
001d36 0d5d
001d37 000a      	.DB  0x20,0x5B,0x25,0x64,0x5D,0xD,0xA,0x0
001d38 7665
001d39 6e65
001d3a 5374
001d3b 756f      	.DB  0x65,0x76,0x65,0x6E,0x74,0x53,0x6F,0x75
001d3c 6372
001d3d 4e65
001d3e 6d75
001d3f 6562      	.DB  0x72,0x63,0x65,0x4E,0x75,0x6D,0x62,0x65
001d40 2072
001d41 255b
001d42 5d64
001d43 0a0d      	.DB  0x72,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001d44 6500
001d45 6576
001d46 746e
001d47 6f53      	.DB  0x0,0x65,0x76,0x65,0x6E,0x74,0x53,0x6F
001d48 7275
001d49 6563
001d4a 2020
001d4b 2020      	.DB  0x75,0x72,0x63,0x65,0x20,0x20,0x20,0x20
001d4c 2020
001d4d 0020
001d4e 633c
001d4f 6e6f      	.DB  0x20,0x20,0x20,0x0,0x3C,0x63,0x6F,0x6E
001d50 6966
001d51 5267
001d52 6165
001d53 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001d54 4320
001d55 4e4f
001d56 5f46
001d57 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
001d58 4158
001d59 2049
001d5a 616d
001d5b 6c6c      	.DB  0x58,0x41,0x49,0x20,0x6D,0x61,0x6C,0x6C
001d5c 636f
001d5d 2031
001d5e 6166
001d5f 6c69      	.DB  0x6F,0x63,0x31,0x20,0x66,0x61,0x69,0x6C
001d60 6465
001d61 2820
001d62 6425
001d63 6220      	.DB  0x65,0x64,0x20,0x28,0x25,0x64,0x20,0x62
001d64 7479
001d65 7365
001d66 0d29
001d67 000a      	.DB  0x79,0x74,0x65,0x73,0x29,0xD,0xA,0x0
001d68 633c
001d69 6e6f
001d6a 6966
001d6b 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d6c 6165
001d6d 3e64
001d6e 6720
001d6f 7465      	.DB  0x65,0x61,0x64,0x3E,0x20,0x67,0x65,0x74
001d70 7541
001d71 4178
001d72 6e69
001d73 6f43      	.DB  0x41,0x75,0x78,0x41,0x69,0x6E,0x43,0x6F
001d74 666e
001d75 6769
001d76 2928
001d77 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001d78 6961
001d79 656c
001d7a 0d64
001d7b 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001d7c 0a0d
001d7d 2d2d
001d7e 202d
001d7f 4552      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x52,0x45
001d80 4441
001d81 4320
001d82 4e4f
001d83 5f46      	.DB  0x41,0x44,0x20,0x43,0x4F,0x4E,0x46,0x5F
001d84 5541
001d85 4158
001d86 2049
001d87 255b      	.DB  0x41,0x55,0x58,0x41,0x49,0x20,0x5B,0x25
001d88 5d64
001d89 2d2d
001d8a 0d2d
001d8b 000a      	.DB  0x64,0x5D,0x2D,0x2D,0x2D,0xD,0xA,0x0
001d8c 6c61
001d8d 7261
001d8e 446d
001d8f 6c65      	.DB  0x61,0x6C,0x61,0x72,0x6D,0x44,0x65,0x6C
001d90 7961
001d91 2020
001d92 2020
001d93 2020      	.DB  0x61,0x79,0x20,0x20,0x20,0x20,0x20,0x20
001d94 5b20
001d95 6625
001d96 0d5d
001d97 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001d98 633c
001d99 6e6f
001d9a 6966
001d9b 5267      	.DB  0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67,0x52
001d9c 6165
001d9d 3e64
001d9e 4320
001d9f 4e4f      	.DB  0x65,0x61,0x64,0x3E,0x20,0x43,0x4F,0x4E
001da0 5f46
001da1 5541
001da2 4158
001da3 204f      	.DB  0x46,0x5F,0x41,0x55,0x58,0x41,0x4F,0x20
001da4 616d
001da5 6c6c
001da6 636f
001da7 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001da8 6166
001da9 6c69
001daa 6465
001dab 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001dac 6425
001dad 6220
001dae 7479
001daf 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001db0 0d29
001db1 000a
001db2 633c
001db3 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001db4 6966
001db5 5267
001db6 6165
001db7 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001db8 6720
001db9 7465
001dba 7541
001dbb 4178      	.DB  0x20,0x67,0x65,0x74,0x41,0x75,0x78,0x41
001dbc 756f
001dbd 4374
001dbe 6e6f
001dbf 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001dc0 2867
001dc1 2029
001dc2 6166
001dc3 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001dc4 6465
001dc5 0a0d
001dc6 0d00
001dc7 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001dc8 2d2d
001dc9 5220
001dca 4145
001dcb 2044      	.DB  0x2D,0x2D,0x20,0x52,0x45,0x41,0x44,0x20
001dcc 4f43
001dcd 464e
001dce 415f
001dcf 5855      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58
001dd0 4f41
001dd1 5b20
001dd2 6425
001dd3 2d5d      	.DB  0x41,0x4F,0x20,0x5B,0x25,0x64,0x5D,0x2D
001dd4 2d2d
001dd5 0a0d
001dd6 6c00
001dd7 7665      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x6C,0x65,0x76
001dd8 6c65
001dd9 6e4f
001dda 7645
001ddb 6e65      	.DB  0x65,0x6C,0x4F,0x6E,0x45,0x76,0x65,0x6E
001ddc 2074
001ddd 2020
001dde 2020
001ddf 5b20      	.DB  0x74,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001de0 6625
001de1 0d5d
001de2 000a
001de3 633c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x63
001de4 6e6f
001de5 6966
001de6 5267
001de7 6165      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x52,0x65,0x61
001de8 3e64
001de9 4320
001dea 4e4f
001deb 5f46      	.DB  0x64,0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F
001dec 5542
001ded 5a5a
001dee 5245
001def 6d20      	.DB  0x42,0x55,0x5A,0x5A,0x45,0x52,0x20,0x6D
001df0 6c61
001df1 6f6c
001df2 3163
001df3 6620      	.DB  0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20,0x66
001df4 6961
001df5 656c
001df6 2064
001df7 2528      	.DB  0x61,0x69,0x6C,0x65,0x64,0x20,0x28,0x25
001df8 2064
001df9 7962
001dfa 6574
001dfb 2973      	.DB  0x64,0x20,0x62,0x79,0x74,0x65,0x73,0x29
001dfc 0a0d
001dfd 3c00
001dfe 6f63
001dff 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001e00 6769
001e01 6552
001e02 6461
001e03 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001e04 6567
001e05 4274
001e06 7a75
001e07 657a      	.DB  0x67,0x65,0x74,0x42,0x75,0x7A,0x7A,0x65
001e08 4372
001e09 6e6f
001e0a 6966
001e0b 2867      	.DB  0x72,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001e0c 2029
001e0d 6166
001e0e 6c69
001e0f 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001e10 0a0d
001e11 0d00
001e12 2d0a
001e13 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001e14 5220
001e15 4145
001e16 2044
001e17 4f43      	.DB  0x20,0x52,0x45,0x41,0x44,0x20,0x43,0x4F
001e18 464e
001e19 425f
001e1a 5a55
001e1b 455a      	.DB  0x4E,0x46,0x5F,0x42,0x55,0x5A,0x5A,0x45
001e1c 2052
001e1d 2d2d
001e1e 0d2d
001e1f 000a      	.DB  0x52,0x20,0x2D,0x2D,0x2D,0xD,0xA,0x0
001e20 6e65
001e21 6261
001e22 656c
001e23 2020      	.DB  0x65,0x6E,0x61,0x62,0x6C,0x65,0x20,0x20
001e24 2020
001e25 2020
001e26 2020
001e27 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
001e28 2020
001e29 305b
001e2a 2578
001e2b 3230      	.DB  0x20,0x20,0x5B,0x30,0x78,0x25,0x30,0x32
001e2c 5d58
001e2d 0a0d
001e2e 3c00
001e2f 6f63      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x63,0x6F
001e30 666e
001e31 6769
001e32 6552
001e33 6461      	.DB  0x6E,0x66,0x69,0x67,0x52,0x65,0x61,0x64
001e34 203e
001e35 4f43
001e36 464e
001e37 455f      	.DB  0x3E,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45
001e38 564e
001e39 4c41
001e3a 5241
001e3b 204d      	.DB  0x4E,0x56,0x41,0x4C,0x41,0x52,0x4D,0x20
001e3c 616d
001e3d 6c6c
001e3e 636f
001e3f 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001e40 6166
001e41 6c69
001e42 6465
001e43 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001e44 6425
001e45 6220
001e46 7479
001e47 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001e48 0d29
001e49 000a
001e4a 633c
001e4b 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001e4c 6966
001e4d 5267
001e4e 6165
001e4f 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001e50 6720
001e51 7465
001e52 6e45
001e53 4176      	.DB  0x20,0x67,0x65,0x74,0x45,0x6E,0x76,0x41
001e54 616c
001e55 6d72
001e56 6f43
001e57 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
001e58 6769
001e59 2928
001e5a 6620
001e5b 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
001e5c 656c
001e5d 0d64
001e5e 000a
001e5f 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
001e60 2d2d
001e61 202d
001e62 4552
001e63 4441      	.DB  0x2D,0x2D,0x2D,0x20,0x52,0x45,0x41,0x44
001e64 4320
001e65 4e4f
001e66 5f46
001e67 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
001e68 4156
001e69 414c
001e6a 4d52
001e6b 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
001e6c 2d2d
001e6d 0a0d
001e6e 6700
001e6f 6d73      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x67,0x73,0x6D
001e70 5352
001e71 4953
001e72 654c
001e73 6576      	.DB  0x52,0x53,0x53,0x49,0x4C,0x65,0x76,0x65
001e74 206c
001e75 2020
001e76 2020
001e77 5b20      	.DB  0x6C,0x20,0x20,0x20,0x20,0x20,0x20,0x5B
001e78 6625
001e79 0d5d
001e7a 000a
001e7b 7367      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x67,0x73
001e7c 436d
001e7d 6572
001e7e 6964
001e7f 4274      	.DB  0x6D,0x43,0x72,0x65,0x64,0x69,0x74,0x42
001e80 6c61
001e81 6e61
001e82 6563
001e83 2020      	.DB  0x61,0x6C,0x61,0x6E,0x63,0x65,0x20,0x20
001e84 255b
001e85 5d64
001e86 0a0d
001e87 6200      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x62
001e88 7461
001e89 6574
001e8a 7972
001e8b 654c      	.DB  0x61,0x74,0x74,0x65,0x72,0x79,0x4C,0x65
001e8c 6576
001e8d 206c
001e8e 2020
001e8f 2020      	.DB  0x76,0x65,0x6C,0x20,0x20,0x20,0x20,0x20
001e90 5b20
001e91 6625
001e92 0d5d
001e93 000a      	.DB  0x20,0x5B,0x25,0x66,0x5D,0xD,0xA,0x0
001e94 6f63
001e95 6d6d
001e96 6953
001e97 6e67      	.DB  0x63,0x6F,0x6D,0x6D,0x53,0x69,0x67,0x6E
001e98 6c61
001e99 654c
001e9a 6576
001e9b 206c      	.DB  0x61,0x6C,0x4C,0x65,0x76,0x65,0x6C,0x20
001e9c 2020
001e9d 255b
001e9e 5d66
001e9f 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x66,0x5D,0xD,0xA
001ea0 6300
001ea1 6d6f
001ea2 4c6d
001ea3 736f      	.DB  0x0,0x63,0x6F,0x6D,0x6D,0x4C,0x6F,0x73
001ea4 4474
001ea5 6c65
001ea6 7961
001ea7 2020      	.DB  0x74,0x44,0x65,0x6C,0x61,0x79,0x20,0x20
001ea8 2020
001ea9 5b20
001eaa 6425
001eab 0d5d      	.DB  0x20,0x20,0x20,0x5B,0x25,0x64,0x5D,0xD
001eac 000a
001ead 656d
001eae 6f6d
001eaf 7972      	.DB  0xA,0x0,0x6D,0x65,0x6D,0x6F,0x72,0x79
001eb0 694d
001eb1 206e
001eb2 2020
001eb3 2020      	.DB  0x4D,0x69,0x6E,0x20,0x20,0x20,0x20,0x20
001eb4 2020
001eb5 2020
001eb6 255b
001eb7 5d64      	.DB  0x20,0x20,0x20,0x20,0x5B,0x25,0x64,0x5D
001eb8 0a0d
001eb9 3c00
001eba 6f63
001ebb 666e      	.DB  0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E,0x66
001ebc 6769
001ebd 6552
001ebe 6461
001ebf 203e      	.DB  0x69,0x67,0x52,0x65,0x61,0x64,0x3E,0x20
001ec0 4f43
001ec1 464e
001ec2 535f
001ec3 4154      	.DB  0x43,0x4F,0x4E,0x46,0x5F,0x53,0x54,0x41
001ec4 5254
001ec5 5045
001ec6 524f
001ec7 2054      	.DB  0x54,0x52,0x45,0x50,0x4F,0x52,0x54,0x20
001ec8 616d
001ec9 6c6c
001eca 636f
001ecb 2031      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x31,0x20
001ecc 6166
001ecd 6c69
001ece 6465
001ecf 2820      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0x20,0x28
001ed0 6425
001ed1 6220
001ed2 7479
001ed3 7365      	.DB  0x25,0x64,0x20,0x62,0x79,0x74,0x65,0x73
001ed4 0d29
001ed5 000a
001ed6 633c
001ed7 6e6f      	.DB  0x29,0xD,0xA,0x0,0x3C,0x63,0x6F,0x6E
001ed8 6966
001ed9 5267
001eda 6165
001edb 3e64      	.DB  0x66,0x69,0x67,0x52,0x65,0x61,0x64,0x3E
001edc 6720
001edd 7465
001ede 7453
001edf 7461      	.DB  0x20,0x67,0x65,0x74,0x53,0x74,0x61,0x74
001ee0 7375
001ee1 6552
001ee2 6f70
001ee3 7472      	.DB  0x75,0x73,0x52,0x65,0x70,0x6F,0x72,0x74
001ee4 6f43
001ee5 666e
001ee6 6769
001ee7 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001ee8 6620
001ee9 6961
001eea 656c
001eeb 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001eec 000a
001eed 0a0d
001eee 2d2d
001eef 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001ef0 4552
001ef1 4441
001ef2 4320
001ef3 4e4f      	.DB  0x52,0x45,0x41,0x44,0x20,0x43,0x4F,0x4E
001ef4 5f46
001ef5 5453
001ef6 5441
001ef7 4552      	.DB  0x46,0x5F,0x53,0x54,0x41,0x54,0x52,0x45
001ef8 4f50
001ef9 5452
001efa 2d20
001efb 2d2d      	.DB  0x50,0x4F,0x52,0x54,0x20,0x2D,0x2D,0x2D
001efc 0a0d
001efd 6100
001efe 6363
001eff 206d      	.DB  0xD,0xA,0x0,0x61,0x63,0x63,0x6D,0x20
001f00 2020
001f01 2020
001f02 5b20
001f03 7830      	.DB  0x20,0x20,0x20,0x20,0x20,0x5B,0x30,0x78
001f04 3025
001f05 5832
001f06 0d5d
001f07 000a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0x0
001f08 6e69
001f09 7674
001f0a 2020
001f0b 2020      	.DB  0x69,0x6E,0x74,0x76,0x20,0x20,0x20,0x20
001f0c 2020
001f0d 255b
001f0e 5d64
001f0f 0a0d      	.DB  0x20,0x20,0x5B,0x25,0x64,0x5D,0xD,0xA
001f10 3c00
001f11 6f63
001f12 666e
001f13 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f14 6552
001f15 6461
001f16 203e
001f17 6e75      	.DB  0x52,0x65,0x61,0x64,0x3E,0x20,0x75,0x6E
001f18 6e6b
001f19 776f
001f1a 206e
001f1b 6f63      	.DB  0x6B,0x6E,0x6F,0x77,0x6E,0x20,0x63,0x6F
001f1c 666e
001f1d 6769
001f1e 7275
001f1f 7461      	.DB  0x6E,0x66,0x69,0x67,0x75,0x72,0x61,0x74
001f20 6f69
001f21 206e
001f22 7974
001f23 6570      	.DB  0x69,0x6F,0x6E,0x20,0x74,0x79,0x70,0x65
001f24 5b20
001f25 7830
001f26 3025
001f27 5832      	.DB  0x20,0x5B,0x30,0x78,0x25,0x30,0x32,0x58
001f28 0d5d
001f29 000a
001f2a 0a0d
001f2b 2d20      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0x20,0x2D
001f2c 2d2d
001f2d 5720
001f2e 4952
001f2f 4554      	.DB  0x2D,0x2D,0x20,0x57,0x52,0x49,0x54,0x45
001f30 4320
001f31 4e4f
001f32 4946
001f33 2047      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x49,0x47,0x20
001f34 6170
001f35 6b63
001f36 7465
001f37 2820      	.DB  0x70,0x61,0x63,0x6B,0x65,0x74,0x20,0x28
001f38 6425
001f39 2d29
001f3a 2d2d
001f3b 0d20      	.DB  0x25,0x64,0x29,0x2D,0x2D,0x2D,0x20,0xD
001f3c 000a
001f3d 0a0d
001f3e 2d2d
001f3f 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001f40 7257
001f41 7469
001f42 2065
001f43 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001f44 464e
001f45 505f
001f46 4f52
001f47 4550      	.DB  0x4E,0x46,0x5F,0x50,0x52,0x4F,0x50,0x45
001f48 5452
001f49 4549
001f4a 2053
001f4b 2d2d      	.DB  0x52,0x54,0x49,0x45,0x53,0x20,0x2D,0x2D
001f4c 002d
001f4d 633c
001f4e 6e6f
001f4f 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001f50 5767
001f51 6972
001f52 6574
001f53 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001f54 6573
001f55 5074
001f56 6f72
001f57 6570      	.DB  0x73,0x65,0x74,0x50,0x72,0x6F,0x70,0x65
001f58 7472
001f59 6569
001f5a 4373
001f5b 6e6f      	.DB  0x72,0x74,0x69,0x65,0x73,0x43,0x6F,0x6E
001f5c 6966
001f5d 2867
001f5e 2029
001f5f 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
001f60 6c69
001f61 6465
001f62 0a0d
001f63 0d00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0xD
001f64 2d0a
001f65 2d2d
001f66 5720
001f67 6972      	.DB  0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69
001f68 6574
001f69 4320
001f6a 4e4f
001f6b 5f46      	.DB  0x74,0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F
001f6c 504f
001f6d 5245
001f6e 5441
001f6f 2045      	.DB  0x4F,0x50,0x45,0x52,0x41,0x54,0x45,0x20
001f70 2d2d
001f71 002d
001f72 633c
001f73 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
001f74 6966
001f75 5767
001f76 6972
001f77 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
001f78 203e
001f79 6573
001f7a 4f74
001f7b 6570      	.DB  0x3E,0x20,0x73,0x65,0x74,0x4F,0x70,0x65
001f7c 6172
001f7d 6974
001f7e 676e
001f7f 6f43      	.DB  0x72,0x61,0x74,0x69,0x6E,0x67,0x43,0x6F
001f80 666e
001f81 6769
001f82 2928
001f83 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
001f84 6961
001f85 656c
001f86 0d64
001f87 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
001f88 0a0d
001f89 2d2d
001f8a 202d
001f8b 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
001f8c 7469
001f8d 2065
001f8e 4f43
001f8f 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
001f90 535f
001f91 4e45
001f92 4f53
001f93 2052      	.DB  0x5F,0x53,0x45,0x4E,0x53,0x4F,0x52,0x20
001f94 2528
001f95 2964
001f96 2d20
001f97 2d2d      	.DB  0x28,0x25,0x64,0x29,0x20,0x2D,0x2D,0x2D
001f98 3c00
001f99 6f63
001f9a 666e
001f9b 6769      	.DB  0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69,0x67
001f9c 7257
001f9d 7469
001f9e 3e65
001f9f 7320      	.DB  0x57,0x72,0x69,0x74,0x65,0x3E,0x20,0x73
001fa0 7465
001fa1 6553
001fa2 736e
001fa3 726f      	.DB  0x65,0x74,0x53,0x65,0x6E,0x73,0x6F,0x72
001fa4 6f43
001fa5 666e
001fa6 6769
001fa7 2928      	.DB  0x43,0x6F,0x6E,0x66,0x69,0x67,0x28,0x29
001fa8 6620
001fa9 6961
001faa 656c
001fab 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
001fac 000a
001fad 0a0d
001fae 2d2d
001faf 202d      	.DB  0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D,0x20
001fb0 7257
001fb1 7469
001fb2 2065
001fb3 4f43      	.DB  0x57,0x72,0x69,0x74,0x65,0x20,0x43,0x4F
001fb4 464e
001fb5 415f
001fb6 5855
001fb7 4944      	.DB  0x4E,0x46,0x5F,0x41,0x55,0x58,0x44,0x49
001fb8 2820
001fb9 6425
001fba 2029
001fbb 2d2d      	.DB  0x20,0x28,0x25,0x64,0x29,0x20,0x2D,0x2D
001fbc 002d
001fbd 633c
001fbe 6e6f
001fbf 6966      	.DB  0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66,0x69
001fc0 5767
001fc1 6972
001fc2 6574
001fc3 203e      	.DB  0x67,0x57,0x72,0x69,0x74,0x65,0x3E,0x20
001fc4 6573
001fc5 4174
001fc6 7875
001fc7 6944      	.DB  0x73,0x65,0x74,0x41,0x75,0x78,0x44,0x69
001fc8 436e
001fc9 6e6f
001fca 6966
001fcb 2867      	.DB  0x6E,0x43,0x6F,0x6E,0x66,0x69,0x67,0x28
001fcc 2029
001fcd 6166
001fce 6c69
001fcf 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
001fd0 0a0d
001fd1 0d00
001fd2 2d0a
001fd3 2d2d      	.DB  0xD,0xA,0x0,0xD,0xA,0x2D,0x2D,0x2D
001fd4 5720
001fd5 6972
001fd6 6574
001fd7 4320      	.DB  0x20,0x57,0x72,0x69,0x74,0x65,0x20,0x43
001fd8 4e4f
001fd9 5f46
001fda 5541
001fdb 4458      	.DB  0x4F,0x4E,0x46,0x5F,0x41,0x55,0x58,0x44
001fdc 204f
001fdd 2528
001fde 2964
001fdf 2d20      	.DB  0x4F,0x20,0x28,0x25,0x64,0x29,0x20,0x2D
001fe0 2d2d
001fe1 3c00
001fe2 6f63
001fe3 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
001fe4 6769
001fe5 7257
001fe6 7469
001fe7 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
001fe8 7320
001fe9 7465
001fea 7541
001feb 4478      	.DB  0x20,0x73,0x65,0x74,0x41,0x75,0x78,0x44
001fec 756f
001fed 4374
001fee 6e6f
001fef 6966      	.DB  0x6F,0x75,0x74,0x43,0x6F,0x6E,0x66,0x69
001ff0 2867
001ff1 2029
001ff2 6166
001ff3 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
001ff4 6465
001ff5 0a0d
001ff6 0d00
001ff7 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
001ff8 2d2d
001ff9 5720
001ffa 6972
001ffb 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
001ffc 4320
001ffd 4e4f
001ffe 5f46
001fff 5541      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41,0x55
002000 4158
002001 2049
002002 2528
002003 2964      	.DB  0x58,0x41,0x49,0x20,0x28,0x25,0x64,0x29
002004 2d20
002005 2d2d
002006 3c00
002007 6f63      	.DB  0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F
002008 666e
002009 6769
00200a 7257
00200b 7469      	.DB  0x6E,0x66,0x69,0x67,0x57,0x72,0x69,0x74
00200c 3e65
00200d 7320
00200e 7465
00200f 7541      	.DB  0x65,0x3E,0x20,0x73,0x65,0x74,0x41,0x75
002010 4178
002011 6e69
002012 6f43
002013 666e      	.DB  0x78,0x41,0x69,0x6E,0x43,0x6F,0x6E,0x66
002014 6769
002015 2928
002016 6620
002017 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
002018 656c
002019 0d64
00201a 000a
00201b 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
00201c 2d2d
00201d 202d
00201e 7257
00201f 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
002020 2065
002021 4f43
002022 464e
002023 415f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x41
002024 5855
002025 4f41
002026 2820
002027 6425      	.DB  0x55,0x58,0x41,0x4F,0x20,0x28,0x25,0x64
002028 2029
002029 2d2d
00202a 002d
00202b 633c      	.DB  0x29,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
00202c 6e6f
00202d 6966
00202e 5767
00202f 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
002030 6574
002031 203e
002032 6573
002033 4174      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x41
002034 7875
002035 6f41
002036 7475
002037 6f43      	.DB  0x75,0x78,0x41,0x6F,0x75,0x74,0x43,0x6F
002038 666e
002039 6769
00203a 2928
00203b 6620      	.DB  0x6E,0x66,0x69,0x67,0x28,0x29,0x20,0x66
00203c 6961
00203d 656c
00203e 0d64
00203f 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002040 0a0d
002041 2d2d
002042 202d
002043 7257      	.DB  0xD,0xA,0x2D,0x2D,0x2D,0x20,0x57,0x72
002044 7469
002045 2065
002046 4f43
002047 464e      	.DB  0x69,0x74,0x65,0x20,0x43,0x4F,0x4E,0x46
002048 425f
002049 5a55
00204a 455a
00204b 2052      	.DB  0x5F,0x42,0x55,0x5A,0x5A,0x45,0x52,0x20
00204c 2d2d
00204d 002d
00204e 633c
00204f 6e6f      	.DB  0x2D,0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E
002050 6966
002051 5767
002052 6972
002053 6574      	.DB  0x66,0x69,0x67,0x57,0x72,0x69,0x74,0x65
002054 203e
002055 6573
002056 4274
002057 7a75      	.DB  0x3E,0x20,0x73,0x65,0x74,0x42,0x75,0x7A
002058 657a
002059 4372
00205a 6e6f
00205b 6966      	.DB  0x7A,0x65,0x72,0x43,0x6F,0x6E,0x66,0x69
00205c 2867
00205d 2029
00205e 6166
00205f 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002060 6465
002061 0a0d
002062 0d00
002063 2d0a      	.DB  0x65,0x64,0xD,0xA,0x0,0xD,0xA,0x2D
002064 2d2d
002065 5720
002066 6972
002067 6574      	.DB  0x2D,0x2D,0x20,0x57,0x72,0x69,0x74,0x65
002068 4320
002069 4e4f
00206a 5f46
00206b 4e45      	.DB  0x20,0x43,0x4F,0x4E,0x46,0x5F,0x45,0x4E
00206c 4156
00206d 414c
00206e 4d52
00206f 2d20      	.DB  0x56,0x41,0x4C,0x41,0x52,0x4D,0x20,0x2D
002070 2d2d
002071 3c00
002072 6f63
002073 666e      	.DB  0x2D,0x2D,0x0,0x3C,0x63,0x6F,0x6E,0x66
002074 6769
002075 7257
002076 7469
002077 3e65      	.DB  0x69,0x67,0x57,0x72,0x69,0x74,0x65,0x3E
002078 7320
002079 7465
00207a 6e45
00207b 4176      	.DB  0x20,0x73,0x65,0x74,0x45,0x6E,0x76,0x41
00207c 616c
00207d 6d72
00207e 6f43
00207f 666e      	.DB  0x6C,0x61,0x72,0x6D,0x43,0x6F,0x6E,0x66
002080 6769
002081 2928
002082 6620
002083 6961      	.DB  0x69,0x67,0x28,0x29,0x20,0x66,0x61,0x69
002084 656c
002085 0d64
002086 000a
002087 0a0d      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0xD,0xA
002088 2d2d
002089 202d
00208a 7257
00208b 7469      	.DB  0x2D,0x2D,0x2D,0x20,0x57,0x72,0x69,0x74
00208c 2065
00208d 4f43
00208e 464e
00208f 535f      	.DB  0x65,0x20,0x43,0x4F,0x4E,0x46,0x5F,0x53
002090 4154
002091 5254
002092 5045
002093 524f      	.DB  0x54,0x41,0x54,0x52,0x45,0x50,0x4F,0x52
002094 2054
002095 2d2d
002096 002d
002097 633c      	.DB  0x54,0x20,0x2D,0x2D,0x2D,0x0,0x3C,0x63
002098 6e6f
002099 6966
00209a 5767
00209b 6972      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x57,0x72,0x69
00209c 6574
00209d 203e
00209e 6573
00209f 5374      	.DB  0x74,0x65,0x3E,0x20,0x73,0x65,0x74,0x53
0020a0 6174
0020a1 7574
0020a2 5273
0020a3 7065      	.DB  0x74,0x61,0x74,0x75,0x73,0x52,0x65,0x70
0020a4 726f
0020a5 4374
0020a6 6e6f
0020a7 6966      	.DB  0x6F,0x72,0x74,0x43,0x6F,0x6E,0x66,0x69
0020a8 2867
0020a9 2029
0020aa 6166
0020ab 6c69      	.DB  0x67,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
0020ac 6465
0020ad 0a0d
0020ae 3c00
0020af 6573      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x73,0x65
0020b0 4c74
0020b1 676f
0020b2 614d
0020b3 696e      	.DB  0x74,0x4C,0x6F,0x67,0x4D,0x61,0x6E,0x69
0020b4 7570
0020b5 616c
0020b6 6574
0020b7 6353      	.DB  0x70,0x75,0x6C,0x61,0x74,0x65,0x53,0x63
0020b8 6568
0020b9 616d
0020ba 203e
0020bb 6974      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x74,0x69
0020bc 656d
0020bd 7020
0020be 7265
0020bf 6f69      	.DB  0x6D,0x65,0x20,0x70,0x65,0x72,0x69,0x6F
0020c0 2064
0020c1 7265
0020c2 6f72
0020c3 2072      	.DB  0x64,0x20,0x65,0x72,0x72,0x6F,0x72,0x20
0020c4 7473
0020c5 7261
0020c6 5b74
0020c7 6c25      	.DB  0x73,0x74,0x61,0x72,0x74,0x5B,0x25,0x6C
0020c8 5d64
0020c9 2d20
0020ca 7320
0020cb 6f74      	.DB  0x64,0x5D,0x20,0x2D,0x20,0x73,0x74,0x6F
0020cc 5b70
0020cd 6c25
0020ce 5d64
0020cf 0a0d      	.DB  0x70,0x5B,0x25,0x6C,0x64,0x5D,0xD,0xA
0020d0 3c00
0020d1 6573
0020d2 5474
0020d3 6d69      	.DB  0x0,0x3C,0x73,0x65,0x74,0x54,0x69,0x6D
0020d4 5365
0020d5 6e79
0020d6 5363
0020d7 6863      	.DB  0x65,0x53,0x79,0x6E,0x63,0x53,0x63,0x68
0020d8 6d65
0020d9 3e61
0020da 4720
0020db 746f      	.DB  0x65,0x6D,0x61,0x3E,0x20,0x47,0x6F,0x74
0020dc 3020
0020dd 5520
0020de 696e
0020df 2078      	.DB  0x20,0x30,0x20,0x55,0x6E,0x69,0x78,0x20
0020e0 6974
0020e1 656d
0020e2 7320
0020e3 6174      	.DB  0x74,0x69,0x6D,0x65,0x20,0x73,0x74,0x61
0020e4 706d
0020e5 0a0d
0020e6 3c00
0020e7 6573      	.DB  0x6D,0x70,0xD,0xA,0x0,0x3C,0x73,0x65
0020e8 5474
0020e9 6d69
0020ea 5365
0020eb 6e79      	.DB  0x74,0x54,0x69,0x6D,0x65,0x53,0x79,0x6E
0020ec 5363
0020ed 6863
0020ee 6d65
0020ef 3e61      	.DB  0x63,0x53,0x63,0x68,0x65,0x6D,0x61,0x3E
0020f0 5220
0020f1 6365
0020f2 6965
0020f3 6576      	.DB  0x20,0x52,0x65,0x63,0x65,0x69,0x76,0x65
0020f4 2064
0020f5 6974
0020f6 656d
0020f7 7320      	.DB  0x64,0x20,0x74,0x69,0x6D,0x65,0x20,0x73
0020f8 6e79
0020f9 2e63
0020fa 7020
0020fb 6361      	.DB  0x79,0x6E,0x63,0x2E,0x20,0x70,0x61,0x63
0020fc 656b
0020fd 2074
0020fe 6c25
0020ff 0d64      	.DB  0x6B,0x65,0x74,0x20,0x25,0x6C,0x64,0xD
002100 000a
002101 733c
002102 7465
002103 6954      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x54,0x69
002104 656d
002105 7953
002106 636e
002107 6353      	.DB  0x6D,0x65,0x53,0x79,0x6E,0x63,0x53,0x63
002108 6568
002109 616d
00210a 203e
00210b 5452      	.DB  0x68,0x65,0x6D,0x61,0x3E,0x20,0x52,0x54
00210c 5f43
00210d 6573
00210e 4274
00210f 6e69      	.DB  0x43,0x5F,0x73,0x65,0x74,0x42,0x69,0x6E
002110 7261
002111 2879
002112 6c25
002113 2964      	.DB  0x61,0x72,0x79,0x28,0x25,0x6C,0x64,0x29
002114 6620
002115 6961
002116 656c
002117 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002118 000a
002119 733c
00211a 7465
00211b 754d      	.DB  0xA,0x0,0x3C,0x73,0x65,0x74,0x4D,0x75
00211c 6574
00211d 6c41
00211e 7261
00211f 3e6d      	.DB  0x74,0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E
002120 7020
002121 7265
002122 616d
002123 656e      	.DB  0x20,0x70,0x65,0x72,0x6D,0x61,0x6E,0x65
002124 746e
002125 6d20
002126 7475
002127 2065      	.DB  0x6E,0x74,0x20,0x6D,0x75,0x74,0x65,0x20
002128 6c61
002129 7261
00212a 0d6d
00212b 000a      	.DB  0x61,0x6C,0x61,0x72,0x6D,0xD,0xA,0x0
00212c 733c
00212d 7465
00212e 754d
00212f 6574      	.DB  0x3C,0x73,0x65,0x74,0x4D,0x75,0x74,0x65
002130 6c41
002131 7261
002132 3e6d
002133 6920      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x69
002134 766e
002135 6c61
002136 6469
002137 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
002138 7265
002139 6f69
00213a 2064
00213b 2528      	.DB  0x65,0x72,0x69,0x6F,0x64,0x20,0x28,0x25
00213c 646c
00213d 0d29
00213e 000a
00213f 733c      	.DB  0x6C,0x64,0x29,0xD,0xA,0x0,0x3C,0x73
002140 7465
002141 754d
002142 6574
002143 6c41      	.DB  0x65,0x74,0x4D,0x75,0x74,0x65,0x41,0x6C
002144 7261
002145 3e6d
002146 6d20
002147 7475      	.DB  0x61,0x72,0x6D,0x3E,0x20,0x6D,0x75,0x74
002148 2065
002149 6c61
00214a 7261
00214b 206d      	.DB  0x65,0x20,0x61,0x6C,0x61,0x72,0x6D,0x20
00214c 6f66
00214d 2072
00214e 6c25
00214f 2064      	.DB  0x66,0x6F,0x72,0x20,0x25,0x6C,0x64,0x20
002150 6573
002151 6f63
002152 646e
002153 0a0d      	.DB  0x73,0x65,0x63,0x6F,0x6E,0x64,0xD,0xA
002154 3c00
002155 6573
002156 4d74
002157 7475      	.DB  0x0,0x3C,0x73,0x65,0x74,0x4D,0x75,0x74
002158 4165
002159 616c
00215a 6d72
00215b 203e      	.DB  0x65,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
00215c 4c41
00215d 5241
00215e 5f4d
00215f 756d      	.DB  0x41,0x4C,0x41,0x52,0x4D,0x5F,0x6D,0x75
002160 6574
002161 2528
002162 646c
002163 2029      	.DB  0x74,0x65,0x28,0x25,0x6C,0x64,0x29,0x20
002164 6166
002165 6c69
002166 6465
002167 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3351): warning: .cseg .db misalignment - padding zero byte
002168 0000      	.DB  0x0
                 _0x18001D:
002169 0000
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3353): warning: .cseg .db misalignment - padding zero byte
00216a 0000      	.DB  0x0,0x0,0x0
                 _0x180000:
00216b 0a0d
00216c 0a0d
00216d 453c
00216e 4854      	.DB  0xD,0xA,0xD,0xA,0x3C,0x45,0x54,0x48
00216f 615f
002170 6464
002171 6157
002172 7469      	.DB  0x5F,0x61,0x64,0x64,0x57,0x61,0x69,0x74
002173 7551
002174 7565
002175 3e65
002176 5720      	.DB  0x51,0x75,0x65,0x75,0x65,0x3E,0x20,0x57
002177 5241
002178 494e
002179 474e
00217a 3a20      	.DB  0x41,0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A
00217b 5720
00217c 6961
00217d 2074
00217e 7571      	.DB  0x20,0x57,0x61,0x69,0x74,0x20,0x71,0x75
00217f 7565
002180 2065
002181 5546
002182 4c4c      	.DB  0x65,0x75,0x65,0x20,0x46,0x55,0x4C,0x4C
002183 0a0d
002184 0a0d
002185 3c00
002186 5445      	.DB  0xD,0xA,0xD,0xA,0x0,0x3C,0x45,0x54
002187 5f48
002188 6461
002189 5764
00218a 6961      	.DB  0x48,0x5F,0x61,0x64,0x64,0x57,0x61,0x69
00218b 5174
00218c 6575
00218d 6575
00218e 203e      	.DB  0x74,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
00218f 616d
002190 6c6c
002191 636f
002192 2528      	.DB  0x6D,0x61,0x6C,0x6C,0x6F,0x63,0x28,0x25
002193 2964
002194 6620
002195 6961
002196 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002197 0d64
002198 000a
002199 0a0d
00219a 2020      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x20,0x20
00219b 2020
00219c 2020
00219d 2020
00219e 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
00219f 2020
0021a0 2020
0021a1 2020
0021a2 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021a3 2020
0021a4 2020
0021a5 2020
0021a6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021a7 2020
0021a8 2020
0021a9 2020
0021aa 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021ab 2020
0021ac 4120
0021ad 6464
0021ae 6465      	.DB  0x20,0x20,0x20,0x41,0x64,0x64,0x65,0x64
0021af 2820
0021b0 3025
0021b1 5832
0021b2 2029      	.DB  0x20,0x28,0x25,0x30,0x32,0x58,0x29,0x20
0021b3 6f74
0021b4 6520
0021b5 6874
0021b6 775f      	.DB  0x74,0x6F,0x20,0x65,0x74,0x68,0x5F,0x77
0021b7 6961
0021b8 5174
0021b9 6575
0021ba 6575      	.DB  0x61,0x69,0x74,0x51,0x75,0x65,0x75,0x65
0021bb 255b
0021bc 5d64
0021bd 0a0d
0021be 0d00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0xD
0021bf 200a
0021c0 2020
0021c1 2020
0021c2 2020      	.DB  0xA,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021c3 2020
0021c4 2020
0021c5 2020
0021c6 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021c7 2020
0021c8 2020
0021c9 2020
0021ca 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021cb 2020
0021cc 2020
0021cd 2020
0021ce 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
0021cf 2020
0021d0 2020
0021d1 2020
0021d2 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
0021d3 6f6d
0021d4 6576
0021d5 2064
0021d6 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
0021d7 3230
0021d8 2958
0021d9 7420
0021da 206f      	.DB  0x30,0x32,0x58,0x29,0x20,0x74,0x6F,0x20
0021db 7465
0021dc 5f68
0021dd 6177
0021de 7469      	.DB  0x65,0x74,0x68,0x5F,0x77,0x61,0x69,0x74
0021df 7551
0021e0 7565
0021e1 5b65
0021e2 6425      	.DB  0x51,0x75,0x65,0x75,0x65,0x5B,0x25,0x64
0021e3 0d5d
0021e4 000a
0021e5 0a0d
0021e6 0a0d      	.DB  0x5D,0xD,0xA,0x0,0xD,0xA,0xD,0xA
0021e7 4157
0021e8 4e52
0021e9 4e49
0021ea 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
0021eb 203a
0021ec 5445
0021ed 5f48
0021ee 6572      	.DB  0x3A,0x20,0x45,0x54,0x48,0x5F,0x72,0x65
0021ef 6f6d
0021f0 6576
0021f1 6157
0021f2 7469      	.DB  0x6D,0x6F,0x76,0x65,0x57,0x61,0x69,0x74
0021f3 7551
0021f4 7565
0021f5 2865
0021f6 3025      	.DB  0x51,0x75,0x65,0x75,0x65,0x28,0x25,0x30
0021f7 5832
0021f8 2029
0021f9 6f6e
0021fa 2074      	.DB  0x32,0x58,0x29,0x20,0x6E,0x6F,0x74,0x20
0021fb 6f66
0021fc 6e75
0021fd 2164
0021fe 0d21      	.DB  0x66,0x6F,0x75,0x6E,0x64,0x21,0x21,0xD
0021ff 0d0a
002200 000a      	.DB  0xA,0xD,0xA,0x0
                 _0x1A0012:
002201 ffff
002202 ffff
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3394): warning: .cseg .db misalignment - padding zero byte
002203 00ff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x1A0013:
002204 0000
002205 0000
002206 0000
002207 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002208 0000
002209 0000
00220a 0000
00220b 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
                 _0x1A0000:
00220c 733c
00220d 6e65
00220e 6f73
00220f 5272      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x52
002210 6165
002211 3e64
002212 4520
002213 5252      	.DB  0x65,0x61,0x64,0x3E,0x20,0x45,0x52,0x52
002214 203a
002215 6863
002216 7620
002217 6c61      	.DB  0x3A,0x20,0x63,0x68,0x20,0x76,0x61,0x6C
002218 6575
002219 6f20
00221a 7475
00221b 6f20      	.DB  0x75,0x65,0x20,0x6F,0x75,0x74,0x20,0x6F
00221c 2066
00221d 6172
00221e 676e
00221f 0d65      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0xD
002220 000a
002221 733c
002222 6e65
002223 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
002224 4372
002225 6c61
002226 6269
002227 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
002228 6574
002229 3e31
00222a 4120
00222b 4f42      	.DB  0x74,0x65,0x31,0x3E,0x20,0x41,0x42,0x4F
00222c 5452
00222d 203a
00222e 6573
00222f 736e      	.DB  0x52,0x54,0x3A,0x20,0x73,0x65,0x6E,0x73
002230 726f
002231 6320
002232 2068
002233 6425      	.DB  0x6F,0x72,0x20,0x63,0x68,0x20,0x25,0x64
002234 6920
002235 2073
002236 6964
002237 6173      	.DB  0x20,0x69,0x73,0x20,0x64,0x69,0x73,0x61
002238 6c62
002239 0d65
00223a 000a
00223b 733c      	.DB  0x62,0x6C,0x65,0xD,0xA,0x0,0x3C,0x73
00223c 6e65
00223d 6f73
00223e 4372
00223f 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
002240 6269
002241 6172
002242 6574
002243 3e31      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x31,0x3E
002244 4120
002245 4f42
002246 5452
002247 203a      	.DB  0x20,0x41,0x42,0x4F,0x52,0x54,0x3A,0x20
002248 6573
002249 736e
00224a 726f
00224b 6320      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x20,0x63
00224c 2068
00224d 6425
00224e 6520
00224f 7272      	.DB  0x68,0x20,0x25,0x64,0x20,0x65,0x72,0x72
002250 726f
002251 3028
002252 2578
002253 3230      	.DB  0x6F,0x72,0x28,0x30,0x78,0x25,0x30,0x32
002254 2958
002255 0a0d
002256 3c00
002257 6573      	.DB  0x58,0x29,0xD,0xA,0x0,0x3C,0x73,0x65
002258 736e
002259 726f
00225a 6143
00225b 696c      	.DB  0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C,0x69
00225c 7262
00225d 7461
00225e 3265
00225f 203e      	.DB  0x62,0x72,0x61,0x74,0x65,0x32,0x3E,0x20
002260 4241
002261 524f
002262 3a54
002263 7320      	.DB  0x41,0x42,0x4F,0x52,0x54,0x3A,0x20,0x73
002264 6e65
002265 6f73
002266 2072
002267 6863      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x20,0x63,0x68
002268 2520
002269 2064
00226a 6f4e
00226b 7320      	.DB  0x20,0x25,0x64,0x20,0x4E,0x6F,0x20,0x73
00226c 7465
00226d 7020
00226e 696f
00226f 746e      	.DB  0x65,0x74,0x20,0x70,0x6F,0x69,0x6E,0x74
002270 6620
002271 756f
002272 646e
002273 0a0d      	.DB  0x20,0x66,0x6F,0x75,0x6E,0x64,0xD,0xA
002274 3c00
002275 6573
002276 736e
002277 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
002278 6143
002279 696c
00227a 7262
00227b 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
00227c 3265
00227d 203e
00227e 2d2d
00227f 4320      	.DB  0x65,0x32,0x3E,0x20,0x2D,0x2D,0x20,0x43
002280 4c41
002281 455f
002282 5458
002283 464f      	.DB  0x41,0x4C,0x5F,0x45,0x58,0x54,0x4F,0x46
002284 5346
002285 5445
002286 2d20
002287 0d2d      	.DB  0x46,0x53,0x45,0x54,0x20,0x2D,0x2D,0xD
002288 000a
002289 733c
00228a 6e65
00228b 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
00228c 4372
00228d 6c61
00228e 6269
00228f 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
002290 6574
002291 3e32
002292 2d20
002293 432d      	.DB  0x74,0x65,0x32,0x3E,0x20,0x2D,0x2D,0x43
002294 2d2d
002295 203e
002296 6625
002297 0a0d      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x66,0xD,0xA
002298 3c00
002299 6573
00229a 736e
00229b 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
00229c 6143
00229d 696c
00229e 7262
00229f 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
0022a0 3265
0022a1 203e
0022a2 2d2d
0022a3 4320      	.DB  0x65,0x32,0x3E,0x20,0x2D,0x2D,0x20,0x43
0022a4 4c41
0022a5 455f
0022a6 5458
0022a7 494c      	.DB  0x41,0x4C,0x5F,0x45,0x58,0x54,0x4C,0x49
0022a8 454e
0022a9 5241
0022aa 2d20
0022ab 0d2d      	.DB  0x4E,0x45,0x41,0x52,0x20,0x2D,0x2D,0xD
0022ac 000a
0022ad 733c
0022ae 6e65
0022af 6f73      	.DB  0xA,0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F
0022b0 4372
0022b1 6c61
0022b2 6269
0022b3 6172      	.DB  0x72,0x43,0x61,0x6C,0x69,0x62,0x72,0x61
0022b4 6574
0022b5 3e32
0022b6 2d20
0022b7 422d      	.DB  0x74,0x65,0x32,0x3E,0x20,0x2D,0x2D,0x42
0022b8 2d2d
0022b9 203e
0022ba 6625
0022bb 0a0d      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x66,0xD,0xA
0022bc 3c00
0022bd 6573
0022be 736e
0022bf 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
0022c0 6143
0022c1 696c
0022c2 7262
0022c3 7461      	.DB  0x43,0x61,0x6C,0x69,0x62,0x72,0x61,0x74
0022c4 3265
0022c5 203e
0022c6 2d2d
0022c7 4320      	.DB  0x65,0x32,0x3E,0x20,0x2D,0x2D,0x20,0x43
0022c8 4c41
0022c9 455f
0022ca 5458
0022cb 4f50      	.DB  0x41,0x4C,0x5F,0x45,0x58,0x54,0x50,0x4F
0022cc 594c
0022cd 4f4e
0022ce 494d
0022cf 4c41      	.DB  0x4C,0x59,0x4E,0x4F,0x4D,0x49,0x41,0x4C
0022d0 2d20
0022d1 0d2d
0022d2 000a
0022d3 733c      	.DB  0x20,0x2D,0x2D,0xD,0xA,0x0,0x3C,0x73
0022d4 6e65
0022d5 6f73
0022d6 4372
0022d7 6c61      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x43,0x61,0x6C
0022d8 6269
0022d9 6172
0022da 6574
0022db 3e32      	.DB  0x69,0x62,0x72,0x61,0x74,0x65,0x32,0x3E
0022dc 2d20
0022dd 412d
0022de 2d2d
0022df 203e      	.DB  0x20,0x2D,0x2D,0x41,0x2D,0x2D,0x3E,0x20
0022e0 6625
0022e1 0a0d
0022e2 3c00
0022e3 6573      	.DB  0x25,0x66,0xD,0xA,0x0,0x3C,0x73,0x65
0022e4 736e
0022e5 726f
0022e6 6547
0022e7 4374      	.DB  0x6E,0x73,0x6F,0x72,0x47,0x65,0x74,0x43
0022e8 7275
0022e9 6572
0022ea 746e
0022eb 6553      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x53,0x65
0022ec 5074
0022ed 696f
0022ee 746e
0022ef 203e      	.DB  0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20
0022f0 6574
0022f1 706d
0022f2 6552
0022f3 3166      	.DB  0x74,0x65,0x6D,0x70,0x52,0x65,0x66,0x31
0022f4 3d20
0022f5 5b20
0022f6 6625
0022f7 5b5d      	.DB  0x20,0x3D,0x20,0x5B,0x25,0x66,0x5D,0x5B
0022f8 6625
0022f9 0d5d
0022fa 000a
0022fb 733c      	.DB  0x25,0x66,0x5D,0xD,0xA,0x0,0x3C,0x73
0022fc 6e65
0022fd 6f73
0022fe 4772
0022ff 7465      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x47,0x65,0x74
002300 7543
002301 7272
002302 6e65
002303 5374      	.DB  0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x53
002304 7465
002305 6f50
002306 6e69
002307 3e74      	.DB  0x65,0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E
002308 7420
002309 6d65
00230a 5270
00230b 6665      	.DB  0x20,0x74,0x65,0x6D,0x70,0x52,0x65,0x66
00230c 2031
00230d 6f6e
00230e 2074
00230f 6573      	.DB  0x31,0x20,0x6E,0x6F,0x74,0x20,0x73,0x65
002310 2074
002311 305b
002312 302e
002313 5d30      	.DB  0x74,0x20,0x5B,0x30,0x2E,0x30,0x30,0x5D
002314 0a0d
002315 3000
002316 302e
002317 0030      	.DB  0xD,0xA,0x0,0x30,0x2E,0x30,0x30,0x0
002318 733c
002319 6e65
00231a 6f73
00231b 4772      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x47
00231c 7465
00231d 7543
00231e 7272
00231f 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
002320 5374
002321 7465
002322 6f50
002323 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
002324 3e74
002325 7420
002326 6d65
002327 5270      	.DB  0x74,0x3E,0x20,0x74,0x65,0x6D,0x70,0x52
002328 6665
002329 2032
00232a 203d
00232b 255b      	.DB  0x65,0x66,0x32,0x20,0x3D,0x20,0x5B,0x25
00232c 5d66
00232d 255b
00232e 5d66
00232f 0a0d      	.DB  0x66,0x5D,0x5B,0x25,0x66,0x5D,0xD,0xA
002330 3c00
002331 6573
002332 736e
002333 726f      	.DB  0x0,0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72
002334 6547
002335 4374
002336 7275
002337 6572      	.DB  0x47,0x65,0x74,0x43,0x75,0x72,0x72,0x65
002338 746e
002339 6553
00233a 5074
00233b 696f      	.DB  0x6E,0x74,0x53,0x65,0x74,0x50,0x6F,0x69
00233c 746e
00233d 203e
00233e 6574
00233f 706d      	.DB  0x6E,0x74,0x3E,0x20,0x74,0x65,0x6D,0x70
002340 6552
002341 3266
002342 6e20
002343 746f      	.DB  0x52,0x65,0x66,0x32,0x20,0x6E,0x6F,0x74
002344 7320
002345 7465
002346 5b20
002347 2e30      	.DB  0x20,0x73,0x65,0x74,0x20,0x5B,0x30,0x2E
002348 3030
002349 0d5d
00234a 000a
00234b 733c      	.DB  0x30,0x30,0x5D,0xD,0xA,0x0,0x3C,0x73
00234c 6e65
00234d 6f73
00234e 4772
00234f 7465      	.DB  0x65,0x6E,0x73,0x6F,0x72,0x47,0x65,0x74
002350 7543
002351 7272
002352 6e65
002353 5374      	.DB  0x43,0x75,0x72,0x72,0x65,0x6E,0x74,0x53
002354 7465
002355 6f50
002356 6e69
002357 3e74      	.DB  0x65,0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E
002358 7420
002359 6d65
00235a 5270
00235b 6665      	.DB  0x20,0x74,0x65,0x6D,0x70,0x52,0x65,0x66
00235c 2033
00235d 203d
00235e 255b
00235f 5d66      	.DB  0x33,0x20,0x3D,0x20,0x5B,0x25,0x66,0x5D
002360 255b
002361 5d66
002362 0a0d
002363 3c00      	.DB  0x5B,0x25,0x66,0x5D,0xD,0xA,0x0,0x3C
002364 6573
002365 736e
002366 726f
002367 6547      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x47,0x65
002368 4374
002369 7275
00236a 6572
00236b 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
00236c 6553
00236d 5074
00236e 696f
00236f 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
002370 203e
002371 6574
002372 706d
002373 6552      	.DB  0x3E,0x20,0x74,0x65,0x6D,0x70,0x52,0x65
002374 3366
002375 6e20
002376 746f
002377 7320      	.DB  0x66,0x33,0x20,0x6E,0x6F,0x74,0x20,0x73
002378 7465
002379 5b20
00237a 2e30
00237b 3030      	.DB  0x65,0x74,0x20,0x5B,0x30,0x2E,0x30,0x30
00237c 0d5d
00237d 000a
00237e 733c
00237f 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002380 6f73
002381 4772
002382 7465
002383 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
002384 7272
002385 6e65
002386 5374
002387 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
002388 6f50
002389 6e69
00238a 3e74
00238b 6920      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x69
00238c 766e
00238d 6c61
00238e 6469
00238f 7020      	.DB  0x6E,0x76,0x61,0x6C,0x69,0x64,0x20,0x70
002390 7261
002391 6d61
002392 6574
002393 2072      	.DB  0x61,0x72,0x61,0x6D,0x74,0x65,0x72,0x20
002394 6e70
002395 2d74
002396 5b3e
002397 6425      	.DB  0x70,0x6E,0x74,0x2D,0x3E,0x5B,0x25,0x64
002398 0d5d
002399 000a
00239a 733c
00239b 6e65      	.DB  0x5D,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
00239c 6f73
00239d 4772
00239e 7465
00239f 7543      	.DB  0x73,0x6F,0x72,0x47,0x65,0x74,0x43,0x75
0023a0 7272
0023a1 6e65
0023a2 5374
0023a3 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
0023a4 6f50
0023a5 6e69
0023a6 3e74
0023a7 7220      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x72
0023a8 6165
0023a9 2064
0023aa 6176
0023ab 286c      	.DB  0x65,0x61,0x64,0x20,0x76,0x61,0x6C,0x28
0023ac 6425
0023ad 2029
0023ae 203d
0023af 255b      	.DB  0x25,0x64,0x29,0x20,0x3D,0x20,0x5B,0x25
0023b0 5d73
0023b1 0a0d
0023b2 3c00
0023b3 6573      	.DB  0x73,0x5D,0xD,0xA,0x0,0x3C,0x73,0x65
0023b4 736e
0023b5 726f
0023b6 6547
0023b7 4374      	.DB  0x6E,0x73,0x6F,0x72,0x47,0x65,0x74,0x43
0023b8 7275
0023b9 6572
0023ba 746e
0023bb 6553      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x53,0x65
0023bc 5074
0023bd 696f
0023be 746e
0023bf 203e      	.DB  0x74,0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20
0023c0 756f
0023c1 2074
0023c2 666f
0023c3 6320      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x63
0023c4 6e6f
0023c5 6964
0023c6 6974
0023c7 6e6f      	.DB  0x6F,0x6E,0x64,0x69,0x74,0x69,0x6F,0x6E
0023c8 7620
0023c9 6c61
0023ca 7453
0023cb 2072      	.DB  0x20,0x76,0x61,0x6C,0x53,0x74,0x72,0x20
0023cc 203d
0023cd 2527
0023ce 2773
0023cf 3c00      	.DB  0x3D,0x20,0x27,0x25,0x73,0x27,0x0,0x3C
0023d0 6573
0023d1 736e
0023d2 726f
0023d3 6547      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x47,0x65
0023d4 4374
0023d5 7275
0023d6 6572
0023d7 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
0023d8 6553
0023d9 5074
0023da 696f
0023db 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
0023dc 203e
0023dd 7562
0023de 2066
0023df 6572      	.DB  0x3E,0x20,0x62,0x75,0x66,0x20,0x72,0x65
0023e0 6461
0023e1 5b00
0023e2 6425
0023e3 005d      	.DB  0x61,0x64,0x0,0x5B,0x25,0x64,0x5D,0x0
0023e4 733c
0023e5 6e65
0023e6 6f73
0023e7 5372      	.DB  0x3C,0x73,0x65,0x6E,0x73,0x6F,0x72,0x53
0023e8 7465
0023e9 7543
0023ea 7272
0023eb 6e65      	.DB  0x65,0x74,0x43,0x75,0x72,0x72,0x65,0x6E
0023ec 5374
0023ed 7465
0023ee 6f50
0023ef 6e69      	.DB  0x74,0x53,0x65,0x74,0x50,0x6F,0x69,0x6E
0023f0 3e74
0023f1 4120
0023f2 4f42
0023f3 5452      	.DB  0x74,0x3E,0x20,0x41,0x42,0x4F,0x52,0x54
0023f4 203a
0023f5 6573
0023f6 736e
0023f7 726f      	.DB  0x3A,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
0023f8 6320
0023f9 2068
0023fa 6425
0023fb 6920      	.DB  0x20,0x63,0x68,0x20,0x25,0x64,0x20,0x69
0023fc 2073
0023fd 6964
0023fe 6173
0023ff 6c62      	.DB  0x73,0x20,0x64,0x69,0x73,0x61,0x62,0x6C
002400 0d65
002401 000a
002402 733c
002403 6e65      	.DB  0x65,0xD,0xA,0x0,0x3C,0x73,0x65,0x6E
002404 6f73
002405 5372
002406 7465
002407 7543      	.DB  0x73,0x6F,0x72,0x53,0x65,0x74,0x43,0x75
002408 7272
002409 6e65
00240a 5374
00240b 7465      	.DB  0x72,0x72,0x65,0x6E,0x74,0x53,0x65,0x74
00240c 6f50
00240d 6e69
00240e 3e74
00240f 4120      	.DB  0x50,0x6F,0x69,0x6E,0x74,0x3E,0x20,0x41
002410 4f42
002411 5452
002412 203a
002413 6573      	.DB  0x42,0x4F,0x52,0x54,0x3A,0x20,0x73,0x65
002414 736e
002415 726f
002416 6320
002417 2068      	.DB  0x6E,0x73,0x6F,0x72,0x20,0x63,0x68,0x20
002418 6425
002419 6520
00241a 7272
00241b 726f      	.DB  0x25,0x64,0x20,0x65,0x72,0x72,0x6F,0x72
00241c 3028
00241d 2578
00241e 3230
00241f 2958      	.DB  0x28,0x30,0x78,0x25,0x30,0x32,0x58,0x29
002420 0a0d
002421 3c00
002422 6573
002423 736e      	.DB  0xD,0xA,0x0,0x3C,0x73,0x65,0x6E,0x73
002424 726f
002425 6553
002426 4374
002427 7275      	.DB  0x6F,0x72,0x53,0x65,0x74,0x43,0x75,0x72
002428 6572
002429 746e
00242a 6553
00242b 5074      	.DB  0x72,0x65,0x6E,0x74,0x53,0x65,0x74,0x50
00242c 696f
00242d 746e
00242e 203e
00242f 7562      	.DB  0x6F,0x69,0x6E,0x74,0x3E,0x20,0x62,0x75
002430 3a66
002431 5b20
002432 6425
002433 2f5d      	.DB  0x66,0x3A,0x20,0x5B,0x25,0x64,0x5D,0x2F
002434 255b
002435 5d64
002436 255b
002437 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
002438 255b
002439 5d64
00243a 255b
00243b 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
00243c 255b
00243d 5d64
00243e 0a0d
00243f 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002440 6573
002441 736e
002442 726f
002443 6553      	.DB  0x73,0x65,0x6E,0x73,0x6F,0x72,0x53,0x65
002444 4374
002445 7275
002446 6572
002447 746e      	.DB  0x74,0x43,0x75,0x72,0x72,0x65,0x6E,0x74
002448 6553
002449 5074
00244a 696f
00244b 746e      	.DB  0x53,0x65,0x74,0x50,0x6F,0x69,0x6E,0x74
00244c 203e
00244d 6573
00244e 736e
00244f 726f      	.DB  0x3E,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
002450 2520
002451 6431
002452 202c
002453 6f70      	.DB  0x20,0x25,0x31,0x64,0x2C,0x20,0x70,0x6F
002454 6e69
002455 2074
002456 3125
002457 2c64      	.DB  0x69,0x6E,0x74,0x20,0x25,0x31,0x64,0x2C
002458 7320
002459 7465
00245a 7420
00245b 206f      	.DB  0x20,0x73,0x65,0x74,0x20,0x74,0x6F,0x20
00245c 255b
00245d 5d66
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3547): warning: .cseg .db misalignment - padding zero byte
00245e 0000      	.DB  0x5B,0x25,0x66,0x5D,0x0
                 _0x1C0005:
00245f 0000
002460 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x1E0003:
002461 ffff      	.DB  0xFF,0xFF
                 _0x1E0004:
002462 ffff      	.DB  0xFF,0xFF
                 _0x1E0005:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3555): warning: .cseg .db misalignment - padding zero byte
002463 00ff      	.DB  0xFF
                 _0x1E003A:
002464 ffff      	.DB  0xFF,0xFF
                 _0x1E0000:
002465 753c
002466 6470
002467 7461
002468 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002469 6d6f
00246a 536d
00246b 6174
00246c 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
00246d 3e73
00246e 4c20
00246f 736f
002470 5474      	.DB  0x73,0x3E,0x20,0x4C,0x6F,0x73,0x74,0x54
002471 6d69
002472 7265
002473 7420
002474 6d69      	.DB  0x69,0x6D,0x65,0x72,0x20,0x74,0x69,0x6D
002475 2065
002476 656c
002477 7466
002478 3d20      	.DB  0x65,0x20,0x6C,0x65,0x66,0x74,0x20,0x3D
002479 2520
00247a 646c
00247b 2528
00247c 586c      	.DB  0x20,0x25,0x6C,0x64,0x28,0x25,0x6C,0x58
00247d 0d29
00247e 000a
00247f 753c
002480 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
002481 7461
002482 4365
002483 6d6f
002484 536d      	.DB  0x61,0x74,0x65,0x43,0x6F,0x6D,0x6D,0x53
002485 6174
002486 7574
002487 3e73
002488 5320      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x53
002489 7265
00248a 6576
00248b 2072
00248c 6f44      	.DB  0x65,0x72,0x76,0x65,0x72,0x20,0x44,0x6F
00248d 6e77
00248e 2121
00248f 0d21
002490 000a      	.DB  0x77,0x6E,0x21,0x21,0x21,0xD,0xA,0x0
002491 753c
002492 6470
002493 7461
002494 4365      	.DB  0x3C,0x75,0x70,0x64,0x61,0x74,0x65,0x43
002495 6d6f
002496 536d
002497 6174
002498 7574      	.DB  0x6F,0x6D,0x6D,0x53,0x74,0x61,0x74,0x75
002499 3e73
00249a 5320
00249b 7265
00249c 6576      	.DB  0x73,0x3E,0x20,0x53,0x65,0x72,0x76,0x65
00249d 2072
00249e 7055
00249f 2121
0024a0 0d21      	.DB  0x72,0x20,0x55,0x70,0x21,0x21,0x21,0xD
0024a1 000a
0024a2 633c
0024a3 6568
0024a4 6b63      	.DB  0xA,0x0,0x3C,0x63,0x68,0x65,0x63,0x6B
0024a5 7250
0024a6 626f
0024a7 4165
0024a8 616c      	.DB  0x50,0x72,0x6F,0x62,0x65,0x41,0x6C,0x61
0024a9 6d72
0024aa 203e
0024ab 6573
0024ac 736e      	.DB  0x72,0x6D,0x3E,0x20,0x73,0x65,0x6E,0x73
0024ad 726f
0024ae 6320
0024af 6168
0024b0 6e6e      	.DB  0x6F,0x72,0x20,0x63,0x68,0x61,0x6E,0x6E
0024b1 6c65
0024b2 6f20
0024b3 7475
0024b4 6f20      	.DB  0x65,0x6C,0x20,0x6F,0x75,0x74,0x20,0x6F
0024b5 2066
0024b6 6172
0024b7 676e
0024b8 2065      	.DB  0x66,0x20,0x72,0x61,0x6E,0x67,0x65,0x20
0024b9 2528
0024ba 2964
0024bb 0a0d
0024bc 3c00      	.DB  0x28,0x25,0x64,0x29,0xD,0xA,0x0,0x3C
0024bd 7075
0024be 6164
0024bf 6574
0024c0 6144      	.DB  0x75,0x70,0x64,0x61,0x74,0x65,0x44,0x61
0024c1 6174
0024c2 7453
0024c3 7461
0024c4 7375      	.DB  0x74,0x61,0x53,0x74,0x61,0x74,0x75,0x73
0024c5 203e
0024c6 4241
0024c7 524f
0024c8 3a54      	.DB  0x3E,0x20,0x41,0x42,0x4F,0x52,0x54,0x3A
0024c9 7320
0024ca 6e65
0024cb 6f73
0024cc 2072      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x20
0024cd 6863
0024ce 6e61
0024cf 656e
0024d0 206c      	.DB  0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20
0024d1 756f
0024d2 2074
0024d3 666f
0024d4 7220      	.DB  0x6F,0x75,0x74,0x20,0x6F,0x66,0x20,0x72
0024d5 6e61
0024d6 6567
0024d7 2820
0024d8 6425      	.DB  0x61,0x6E,0x67,0x65,0x20,0x28,0x25,0x64
0024d9 0d29
0024da 000a
0024db 753c
0024dc 6470      	.DB  0x29,0xD,0xA,0x0,0x3C,0x75,0x70,0x64
0024dd 7461
0024de 4465
0024df 6e69
0024e0 7453      	.DB  0x61,0x74,0x65,0x44,0x69,0x6E,0x53,0x74
0024e1 7461
0024e2 7375
0024e3 203e
0024e4 6863      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x63,0x68
0024e5 6e61
0024e6 656e
0024e7 5b6c
0024e8 6425      	.DB  0x61,0x6E,0x6E,0x65,0x6C,0x5B,0x25,0x64
0024e9 205d
0024ea 756f
0024eb 2074
0024ec 666f      	.DB  0x5D,0x20,0x6F,0x75,0x74,0x20,0x6F,0x66
0024ed 7220
0024ee 6e61
0024ef 6567
0024f0 0a0d      	.DB  0x20,0x72,0x61,0x6E,0x67,0x65,0xD,0xA
0024f1 3c00
0024f2 6567
0024f3 4474
0024f4 7665      	.DB  0x0,0x3C,0x67,0x65,0x74,0x44,0x65,0x76
0024f5 6369
0024f6 5365
0024f7 6174
0024f8 6574      	.DB  0x69,0x63,0x65,0x53,0x74,0x61,0x74,0x65
0024f9 203e
0024fa 7473
0024fb 7461
0024fc 2065      	.DB  0x3E,0x20,0x73,0x74,0x61,0x74,0x65,0x20
0024fd 203d
0024fe 305b
0024ff 2578
002500 3430      	.DB  0x3D,0x20,0x5B,0x30,0x78,0x25,0x30,0x34
002501 5d58
002502 0a0d
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3598): warning: .cseg .db misalignment - padding zero byte
002503 0000      	.DB  0x58,0x5D,0xD,0xA,0x0
                 _0x220003:
002504 ffff
002505 ffff
002506 ffff
002507 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
002508 ffff
002509 ffff
00250a ffff
00250b ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x220004:
00250c ffff
00250d ffff
00250e ffff
00250f ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
002510 ffff
002511 ffff
002512 ffff
002513 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x2200A8:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3606): warning: .cseg .db misalignment - padding zero byte
002514 0069      	.DB  0x69
                 _0x2200B1:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3608): warning: .cseg .db misalignment - padding zero byte
002515 0069      	.DB  0x69
                 _0x2200C5:
002516 6969      	.DB  0x69,0x69
                 _0x2200CF:
002517 6969
002518 6969
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3612): warning: .cseg .db misalignment - padding zero byte
002519 0069      	.DB  0x69,0x69,0x69,0x69,0x69
                 _0x2200DD:
00251a ffff
00251b ffff      	.DB  0xFF,0xFF,0xFF,0xFF
                 _0x2200F6:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3616): warning: .cseg .db misalignment - padding zero byte
00251c 00ff      	.DB  0xFF
                 _0x220000:
00251d 633c
00251e 6568
00251f 6b63
002520 6c41      	.DB  0x3C,0x63,0x68,0x65,0x63,0x6B,0x41,0x6C
002521 7261
002522 466d
002523 6f72
002524 536d      	.DB  0x61,0x72,0x6D,0x46,0x72,0x6F,0x6D,0x53
002525 6372
002526 203e
002527 5347
002528 204d      	.DB  0x72,0x63,0x3E,0x20,0x47,0x53,0x4D,0x20
002529 6f4e
00252a 2074
00252b 7573
00252c 7070      	.DB  0x4E,0x6F,0x74,0x20,0x73,0x75,0x70,0x70
00252d 726f
00252e 2074
00252f 6579
002530 2074      	.DB  0x6F,0x72,0x74,0x20,0x79,0x65,0x74,0x20
002531 305b
002532 2578
002533 3230
002534 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
002535 0a0d
002536 3c00
002537 6863
002538 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002539 416b
00253a 616c
00253b 6d72
00253c 7246      	.DB  0x6B,0x41,0x6C,0x61,0x72,0x6D,0x46,0x72
00253d 6d6f
00253e 7253
00253f 3e63
002540 6120      	.DB  0x6F,0x6D,0x53,0x72,0x63,0x3E,0x20,0x61
002541 616c
002542 6d72
002543 7253
002544 2063      	.DB  0x6C,0x61,0x72,0x6D,0x53,0x72,0x63,0x20
002545 6e75
002546 6e6b
002547 776f
002548 206e      	.DB  0x75,0x6E,0x6B,0x6E,0x6F,0x77,0x6E,0x20
002549 305b
00254a 2578
00254b 3230
00254c 5d58      	.DB  0x5B,0x30,0x78,0x25,0x30,0x32,0x58,0x5D
00254d 0a0d
00254e 3c00
00254f 6863
002550 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002551 536b
002552 6e65
002553 4464
002554 6e69      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x69,0x6E
002555 6c41
002556 7261
002557 3e6d
002558 6320      	.DB  0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20,0x63
002559 6168
00255a 6e6e
00255b 6c65
00255c 6f20      	.DB  0x68,0x61,0x6E,0x6E,0x65,0x6C,0x20,0x6F
00255d 7475
00255e 6f20
00255f 2066
002560 6172      	.DB  0x75,0x74,0x20,0x6F,0x66,0x20,0x72,0x61
002561 676e
002562 2065
002563 255b
002564 5d64      	.DB  0x6E,0x67,0x65,0x20,0x5B,0x25,0x64,0x5D
002565 0a0d
002566 3c00
002567 6863
002568 6365      	.DB  0xD,0xA,0x0,0x3C,0x63,0x68,0x65,0x63
002569 536b
00256a 6e65
00256b 4464
00256c 7461      	.DB  0x6B,0x53,0x65,0x6E,0x64,0x44,0x61,0x74
00256d 4161
00256e 616c
00256f 6d72
002570 203e      	.DB  0x61,0x41,0x6C,0x61,0x72,0x6D,0x3E,0x20
002571 7250
002572 626f
002573 2065
002574 6425      	.DB  0x50,0x72,0x6F,0x62,0x65,0x20,0x25,0x64
002575 6420
002576 7461
002577 4161
002578 616c      	.DB  0x20,0x64,0x61,0x74,0x61,0x41,0x6C,0x61
002579 6d72
00257a 305b
00257b 2578
00257c 3230      	.DB  0x72,0x6D,0x5B,0x30,0x78,0x25,0x30,0x32
00257d 5d58
00257e 0a0d
00257f 3c00
002580 4c41      	.DB  0x58,0x5D,0xD,0xA,0x0,0x3C,0x41,0x4C
002581 5241
002582 5f4d
002583 6863
002584 6365      	.DB  0x41,0x52,0x4D,0x5F,0x63,0x68,0x65,0x63
002585 4d6b
002586 7475
002587 4565
002588 7078      	.DB  0x6B,0x4D,0x75,0x74,0x65,0x45,0x78,0x70
002589 7269
00258a 6465
00258b 203e
00258c 6e69      	.DB  0x69,0x72,0x65,0x64,0x3E,0x20,0x69,0x6E
00258d 6176
00258e 696c
00258f 2064
002590 756d      	.DB  0x76,0x61,0x6C,0x69,0x64,0x20,0x6D,0x75
002591 6574
002592 6f4d
002593 6564
002594 2820      	.DB  0x74,0x65,0x4D,0x6F,0x64,0x65,0x20,0x28
002595 6425
002596 0d29
002597 000a      	.DB  0x25,0x64,0x29,0xD,0xA,0x0
                 _0x240000:
002598 5444
002599 3025
00259a 6432
00259b 252d      	.DB  0x44,0x54,0x25,0x30,0x32,0x64,0x2D,0x25
00259c 3230
00259d 2d64
00259e 3025
00259f 6434      	.DB  0x30,0x32,0x64,0x2D,0x25,0x30,0x34,0x64
0025a0 5400
0025a1 254d
0025a2 3230
0025a3 3a64      	.DB  0x0,0x54,0x4D,0x25,0x30,0x32,0x64,0x3A
0025a4 3025
0025a5 6432
0025a6 4400
0025a7 2556      	.DB  0x25,0x30,0x32,0x64,0x0,0x44,0x56,0x25
0025a8 6431
0025a9 2e25
0025aa 6631
0025ab 4400      	.DB  0x31,0x64,0x25,0x2E,0x31,0x66,0x0,0x44
0025ac 2556
0025ad 6431
0025ae 5245
0025af 4c52      	.DB  0x56,0x25,0x31,0x64,0x45,0x52,0x52,0x4C
0025b0 0042
0025b1 5644
0025b2 3125
0025b3 4564      	.DB  0x42,0x0,0x44,0x56,0x25,0x31,0x64,0x45
0025b4 5252
0025b5 4255
0025b6 4400
0025b7 2556      	.DB  0x52,0x52,0x55,0x42,0x0,0x44,0x56,0x25
0025b8 6431
0025b9 5245
0025ba 4e52
0025bb 0043      	.DB  0x31,0x64,0x45,0x52,0x52,0x4E,0x43,0x0
0025bc 5644
0025bd 3125
0025be 4564
0025bf 5252      	.DB  0x44,0x56,0x25,0x31,0x64,0x45,0x52,0x52
0025c0 4853
0025c1 4400
0025c2 2556
0025c3 6431      	.DB  0x53,0x48,0x0,0x44,0x56,0x25,0x31,0x64
0025c4 4544
0025c5 4554
0025c6 5443
0025c7 4e49      	.DB  0x44,0x45,0x54,0x45,0x43,0x54,0x49,0x4E
0025c8 0047
0025c9 4f3c
0025ca 454c
0025cb 5f44      	.DB  0x47,0x0,0x3C,0x4F,0x4C,0x45,0x44,0x5F
0025cc 6873
0025cd 776f
0025ce 6553
0025cf 736e      	.DB  0x73,0x68,0x6F,0x77,0x53,0x65,0x6E,0x73
0025d0 726f
0025d1 6156
0025d2 756c
0025d3 3e65      	.DB  0x6F,0x72,0x56,0x61,0x6C,0x75,0x65,0x3E
0025d4 7320
0025d5 6e65
0025d6 6f73
0025d7 5b72      	.DB  0x20,0x73,0x65,0x6E,0x73,0x6F,0x72,0x5B
0025d8 6425
0025d9 2e5d
0025da 7473
0025db 7461      	.DB  0x25,0x64,0x5D,0x2E,0x73,0x74,0x61,0x74
0025dc 7375
0025dd 7520
0025de 6b6e
0025df 6f6e      	.DB  0x75,0x73,0x20,0x75,0x6E,0x6B,0x6E,0x6F
0025e0 6e77
0025e1 5b20
0025e2 7830
0025e3 3025      	.DB  0x77,0x6E,0x20,0x5B,0x30,0x78,0x25,0x30
0025e4 5832
0025e5 0d5d
0025e6 000a
0025e7 5644      	.DB  0x32,0x58,0x5D,0xD,0xA,0x0,0x44,0x56
0025e8 3125
0025e9 4e64
0025ea 412f
0025eb 4300      	.DB  0x25,0x31,0x64,0x4E,0x2F,0x41,0x0,0x43
0025ec 3147
0025ed 4200
0025ee 304c
0025ef 4200      	.DB  0x47,0x31,0x0,0x42,0x4C,0x30,0x0,0x42
0025f0 314c
0025f1 4200
0025f2 324c
0025f3 4200      	.DB  0x4C,0x31,0x0,0x42,0x4C,0x32,0x0,0x42
0025f4 334c
0025f5 4200
0025f6 344c
0025f7 3c00      	.DB  0x4C,0x33,0x0,0x42,0x4C,0x34,0x0,0x3C
0025f8 4c4f
0025f9 4445
0025fa 735f
0025fb 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
0025fc 4977
0025fd 706e
0025fe 7475
0025ff 7453      	.DB  0x77,0x49,0x6E,0x70,0x75,0x74,0x53,0x74
002600 7461
002601 7375
002602 203e
002603 5245      	.DB  0x61,0x74,0x75,0x73,0x3E,0x20,0x45,0x52
002604 3a52
002605 6320
002606 2068
002607 6176      	.DB  0x52,0x3A,0x20,0x63,0x68,0x20,0x76,0x61
002608 756c
002609 2065
00260a 756f
00260b 2074      	.DB  0x6C,0x75,0x65,0x20,0x6F,0x75,0x74,0x20
00260c 666f
00260d 7220
00260e 6e61
00260f 6567      	.DB  0x6F,0x66,0x20,0x72,0x61,0x6E,0x67,0x65
002610 212e
002611 0d21
002612 000a
002613 5049      	.DB  0x2E,0x21,0x21,0xD,0xA,0x0,0x49,0x50
002614 3125
002615 2564
002616 6431
002617 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
002618 4c4f
002619 4445
00261a 735f
00261b 6f68      	.DB  0x4F,0x4C,0x45,0x44,0x5F,0x73,0x68,0x6F
00261c 4f77
00261d 7475
00261e 7570
00261f 5374      	.DB  0x77,0x4F,0x75,0x74,0x70,0x75,0x74,0x53
002620 6174
002621 7574
002622 3e73
002623 4520      	.DB  0x74,0x61,0x74,0x75,0x73,0x3E,0x20,0x45
002624 5252
002625 203a
002626 6863
002627 7620      	.DB  0x52,0x52,0x3A,0x20,0x63,0x68,0x20,0x76
002628 6c61
002629 6575
00262a 6f20
00262b 7475      	.DB  0x61,0x6C,0x75,0x65,0x20,0x6F,0x75,0x74
00262c 6f20
00262d 2066
00262e 6172
00262f 676e      	.DB  0x20,0x6F,0x66,0x20,0x72,0x61,0x6E,0x67
002630 2e65
002631 2121
002632 0a0d
002633 4f00      	.DB  0x65,0x2E,0x21,0x21,0xD,0xA,0x0,0x4F
002634 2550
002635 6431
002636 3125
002637 0064      	.DB  0x50,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002638 4353
002639 3125
00263a 0064
00263b 434c      	.DB  0x53,0x43,0x25,0x31,0x64,0x0,0x4C,0x43
00263c 3125
00263d 0064
00263e 5a42
00263f 3125      	.DB  0x25,0x31,0x64,0x0,0x42,0x5A,0x25,0x31
002640 0064
002641 534d
002642 3125
002643 0064      	.DB  0x64,0x0,0x4D,0x53,0x25,0x31,0x64,0x0
002644 4c41
002645 3125
002646 2564
002647 6431      	.DB  0x41,0x4C,0x25,0x31,0x64,0x25,0x31,0x64
002648 3125
002649 2564
00264a 6431
00264b 3125      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x25,0x31
00264c 2564
00264d 6431
00264e 3125
00264f 2564      	.DB  0x64,0x25,0x31,0x64,0x25,0x31,0x64,0x25
002650 6431
002651 3125
002652 2564
002653 6431      	.DB  0x31,0x64,0x25,0x31,0x64,0x25,0x31,0x64
002654 3125
002655 2564
002656 6431
002657 0d00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0xD
002658 210a
002659 2121
00265a 2021
00265b 4c4f      	.DB  0xA,0x21,0x21,0x21,0x21,0x20,0x4F,0x4C
00265c 4445
00265d 4520
00265e 7272
00265f 726f      	.DB  0x45,0x44,0x20,0x45,0x72,0x72,0x6F,0x72
002660 2120
002661 2121
002662 0d21
002663 000a      	.DB  0x20,0x21,0x21,0x21,0x21,0xD,0xA,0x0
002664 6e49
002665 7469
002666 6169
002667 696c      	.DB  0x49,0x6E,0x69,0x74,0x69,0x61,0x6C,0x69
002668 697a
002669 676e
00266a 4f20
00266b 454c      	.DB  0x7A,0x69,0x6E,0x67,0x20,0x4F,0x4C,0x45
00266c 2e44
00266d 202e
00266e 4f00
00266f 0d4b      	.DB  0x44,0x2E,0x2E,0x20,0x0,0x4F,0x4B,0xD
002670 000a      	.DB  0xA,0x0
                 _0x260003:
002671 3a30
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3706): warning: .cseg .db misalignment - padding zero byte
002672 002f      	.DB  0x30,0x3A,0x2F
                 _0x260000:
002673 4600
002674 5f52
002675 4944
002676 4b53      	.DB  0x0,0x46,0x52,0x5F,0x44,0x49,0x53,0x4B
002677 455f
002678 5252
002679 4600
00267a 5f52      	.DB  0x5F,0x45,0x52,0x52,0x0,0x46,0x52,0x5F
00267b 4e49
00267c 5f54
00267d 5245
00267e 0052      	.DB  0x49,0x4E,0x54,0x5F,0x45,0x52,0x52,0x0
00267f 5246
002680 4e5f
002681 544f
002682 525f      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x54,0x5F,0x52
002683 4145
002684 5944
002685 4600
002686 5f52      	.DB  0x45,0x41,0x44,0x59,0x0,0x46,0x52,0x5F
002687 4f4e
002688 465f
002689 4c49
00268a 0045      	.DB  0x4E,0x4F,0x5F,0x46,0x49,0x4C,0x45,0x0
00268b 5246
00268c 4e5f
00268d 5f4f
00268e 4150      	.DB  0x46,0x52,0x5F,0x4E,0x4F,0x5F,0x50,0x41
00268f 4854
002690 4600
002691 5f52
002692 4e49      	.DB  0x54,0x48,0x0,0x46,0x52,0x5F,0x49,0x4E
002693 4156
002694 494c
002695 5f44
002696 414e      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x4E,0x41
002697 454d
002698 4600
002699 5f52
00269a 4544      	.DB  0x4D,0x45,0x0,0x46,0x52,0x5F,0x44,0x45
00269b 494e
00269c 4445
00269d 4600
00269e 5f52      	.DB  0x4E,0x49,0x45,0x44,0x0,0x46,0x52,0x5F
00269f 5845
0026a0 5349
0026a1 0054
0026a2 5246      	.DB  0x45,0x58,0x49,0x53,0x54,0x0,0x46,0x52
0026a3 495f
0026a4 564e
0026a5 4c41
0026a6 4449      	.DB  0x5F,0x49,0x4E,0x56,0x41,0x4C,0x49,0x44
0026a7 4f5f
0026a8 4a42
0026a9 4345
0026aa 0054      	.DB  0x5F,0x4F,0x42,0x4A,0x45,0x43,0x54,0x0
0026ab 5246
0026ac 575f
0026ad 4952
0026ae 4554      	.DB  0x46,0x52,0x5F,0x57,0x52,0x49,0x54,0x45
0026af 505f
0026b0 4f52
0026b1 4554
0026b2 5443      	.DB  0x5F,0x50,0x52,0x4F,0x54,0x45,0x43,0x54
0026b3 4445
0026b4 4600
0026b5 5f52
0026b6 4e49      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x49,0x4E
0026b7 4156
0026b8 494c
0026b9 5f44
0026ba 5244      	.DB  0x56,0x41,0x4C,0x49,0x44,0x5F,0x44,0x52
0026bb 5649
0026bc 0045
0026bd 5246
0026be 4e5f      	.DB  0x49,0x56,0x45,0x0,0x46,0x52,0x5F,0x4E
0026bf 544f
0026c0 455f
0026c1 414e
0026c2 4c42      	.DB  0x4F,0x54,0x5F,0x45,0x4E,0x41,0x42,0x4C
0026c3 4445
0026c4 4600
0026c5 5f52
0026c6 4f4e      	.DB  0x45,0x44,0x0,0x46,0x52,0x5F,0x4E,0x4F
0026c7 465f
0026c8 4c49
0026c9 5345
0026ca 5359      	.DB  0x5F,0x46,0x49,0x4C,0x45,0x53,0x59,0x53
0026cb 4554
0026cc 004d
0026cd 5246
0026ce 4d5f      	.DB  0x54,0x45,0x4D,0x0,0x46,0x52,0x5F,0x4D
0026cf 464b
0026d0 5f53
0026d1 4241
0026d2 524f      	.DB  0x4B,0x46,0x53,0x5F,0x41,0x42,0x4F,0x52
0026d3 4554
0026d4 0044
0026d5 5246
0026d6 545f      	.DB  0x54,0x45,0x44,0x0,0x46,0x52,0x5F,0x54
0026d7 4d49
0026d8 4f45
0026d9 5455
0026da 3c00      	.DB  0x49,0x4D,0x45,0x4F,0x55,0x54,0x0,0x3C
0026db 5245
0026dc 3e52
0026dd 2520
0026de 2e70      	.DB  0x45,0x52,0x52,0x3E,0x20,0x25,0x70,0x2E
0026df 0a0d
0026e0 3c00
0026e1 4453
0026e2 775f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x77
0026e3 6972
0026e4 6574
0026e5 6144
0026e6 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
0026e7 203e
0026e8 4453
0026e9 4320
0026ea 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
0026eb 2064
0026ec 6f6e
0026ed 2074
0026ee 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
0026ef 6461
0026f0 0d79
0026f1 000a
0026f2 533c      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x3C,0x53
0026f3 5f44
0026f4 7277
0026f5 7469
0026f6 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
0026f7 7461
0026f8 3e61
0026f9 6620
0026fa 6c5f      	.DB  0x61,0x74,0x61,0x3E,0x20,0x66,0x5F,0x6C
0026fb 6573
0026fc 6b65
0026fd 2528
0026fe 2975      	.DB  0x73,0x65,0x65,0x6B,0x28,0x25,0x75,0x29
0026ff 6620
002700 6961
002701 656c
002702 2164      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x21
002703 0d21
002704 000a
002705 533c
002706 5f44      	.DB  0x21,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
002707 7277
002708 7469
002709 4465
00270a 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
00270b 3e61
00270c 6620
00270d 775f
00270e 6972      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x77,0x72,0x69
00270f 6574
002710 2928
002711 6620
002712 6961      	.DB  0x74,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002713 656c
002714 0d64
002715 000a
002716 533c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x53
002717 5f44
002718 7277
002719 7469
00271a 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00271b 7461
00271c 3e61
00271d 6120
00271e 7463      	.DB  0x61,0x74,0x61,0x3E,0x20,0x61,0x63,0x74
00271f 6175
002720 5f6c
002721 7277
002722 7469      	.DB  0x75,0x61,0x6C,0x5F,0x77,0x72,0x69,0x74
002723 5b65
002724 7525
002725 205d
002726 3d21      	.DB  0x65,0x5B,0x25,0x75,0x5D,0x20,0x21,0x3D
002727 6c20
002728 6e65
002729 255b
00272a 5d75      	.DB  0x20,0x6C,0x65,0x6E,0x5B,0x25,0x75,0x5D
00272b 0a0d
00272c 3c00
00272d 4453
00272e 725f      	.DB  0xD,0xA,0x0,0x3C,0x53,0x44,0x5F,0x72
00272f 6165
002730 4464
002731 7461
002732 3e61      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x3E
002733 5320
002734 2044
002735 6143
002736 6472      	.DB  0x20,0x53,0x44,0x20,0x43,0x61,0x72,0x64
002737 6e20
002738 746f
002739 7220
00273a 6165      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x72,0x65,0x61
00273b 7964
00273c 0a0d
00273d 3c00
00273e 4453      	.DB  0x64,0x79,0xD,0xA,0x0,0x3C,0x53,0x44
00273f 725f
002740 6165
002741 4464
002742 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002743 3e61
002744 6620
002745 6c5f
002746 6573      	.DB  0x61,0x3E,0x20,0x66,0x5F,0x6C,0x73,0x65
002747 6b65
002748 2528
002749 2975
00274a 6620      	.DB  0x65,0x6B,0x28,0x25,0x75,0x29,0x20,0x66
00274b 6961
00274c 656c
00274d 2164
00274e 0d21      	.DB  0x61,0x69,0x6C,0x65,0x64,0x21,0x21,0xD
00274f 000a
002750 533c
002751 5f44
002752 6572      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x72,0x65
002753 6461
002754 6144
002755 6174
002756 203e      	.DB  0x61,0x64,0x44,0x61,0x74,0x61,0x3E,0x20
002757 5f66
002758 6572
002759 6461
00275a 2928      	.DB  0x66,0x5F,0x72,0x65,0x61,0x64,0x28,0x29
00275b 6620
00275c 6961
00275d 656c
00275e 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
00275f 000a
002760 533c
002761 5f44
002762 7277      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x77,0x72
002763 7469
002764 4465
002765 7461
002766 3e61      	.DB  0x69,0x74,0x65,0x44,0x61,0x74,0x61,0x3E
002767 6120
002768 7463
002769 6175
00276a 5f6c      	.DB  0x20,0x61,0x63,0x74,0x75,0x61,0x6C,0x5F
00276b 6572
00276c 6461
00276d 255b
00276e 5d75      	.DB  0x72,0x65,0x61,0x64,0x5B,0x25,0x75,0x5D
00276f 2120
002770 203d
002771 656c
002772 5b6e      	.DB  0x20,0x21,0x3D,0x20,0x6C,0x65,0x6E,0x5B
002773 7525
002774 0d5d
002775 000a
002776 533c      	.DB  0x25,0x75,0x5D,0xD,0xA,0x0,0x3C,0x53
002777 5f44
002778 6572
002779 6461
00277a 654d      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x4D,0x65
00277b 6f6d
00277c 7972
00277d 6552
00277e 616d      	.DB  0x6D,0x6F,0x72,0x79,0x52,0x65,0x6D,0x61
00277f 6e69
002780 203e
002781 5f66
002782 6567      	.DB  0x69,0x6E,0x3E,0x20,0x66,0x5F,0x67,0x65
002783 6674
002784 6572
002785 2865
002786 7325      	.DB  0x74,0x66,0x72,0x65,0x65,0x28,0x25,0x73
002787 2029
002788 7265
002789 6f72
00278a 2172      	.DB  0x29,0x20,0x65,0x72,0x72,0x6F,0x72,0x21
00278b 0d21
00278c 000a
00278d 6f4c
00278e 6967      	.DB  0x21,0xD,0xA,0x0,0x4C,0x6F,0x67,0x69
00278f 6163
002790 206c
002791 7264
002792 7669      	.DB  0x63,0x61,0x6C,0x20,0x64,0x72,0x69,0x76
002793 2065
002794 3a30
002795 6d20
002796 756f      	.DB  0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F,0x75
002797 746e
002798 6465
002799 4520
00279a 5252      	.DB  0x6E,0x74,0x65,0x64,0x20,0x45,0x52,0x52
00279b 524f
00279c 0a0d
00279d 4c00
00279e 676f      	.DB  0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F,0x67
00279f 6369
0027a0 6c61
0027a1 6420
0027a2 6972      	.DB  0x69,0x63,0x61,0x6C,0x20,0x64,0x72,0x69
0027a3 6576
0027a4 3020
0027a5 203a
0027a6 6f6d      	.DB  0x76,0x65,0x20,0x30,0x3A,0x20,0x6D,0x6F
0027a7 6e75
0027a8 6574
0027a9 2064
0027aa 4b4f      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x4F,0x4B
0027ab 0a0d
0027ac 4c00
0027ad 676f
0027ae 6369      	.DB  0xD,0xA,0x0,0x4C,0x6F,0x67,0x69,0x63
0027af 6c61
0027b0 6420
0027b1 6972
0027b2 6576      	.DB  0x61,0x6C,0x20,0x64,0x72,0x69,0x76,0x65
0027b3 3020
0027b4 203a
0027b5 6e75
0027b6 6f6d      	.DB  0x20,0x30,0x3A,0x20,0x75,0x6E,0x6D,0x6F
0027b7 6e75
0027b8 6574
0027b9 2064
0027ba 5245      	.DB  0x75,0x6E,0x74,0x65,0x64,0x20,0x45,0x52
0027bb 4f52
0027bc 0d52
0027bd 000a
0027be 6f4c      	.DB  0x52,0x4F,0x52,0xD,0xA,0x0,0x4C,0x6F
0027bf 6967
0027c0 6163
0027c1 206c
0027c2 7264      	.DB  0x67,0x69,0x63,0x61,0x6C,0x20,0x64,0x72
0027c3 7669
0027c4 2065
0027c5 3a30
0027c6 7520      	.DB  0x69,0x76,0x65,0x20,0x30,0x3A,0x20,0x75
0027c7 6d6e
0027c8 756f
0027c9 746e
0027ca 6465      	.DB  0x6E,0x6D,0x6F,0x75,0x6E,0x74,0x65,0x64
0027cb 4f20
0027cc 0d4b
0027cd 000a
0027ce 533c      	.DB  0x20,0x4F,0x4B,0xD,0xA,0x0,0x3C,0x53
0027cf 5f44
0027d0 6572
0027d1 6f6d
0027d2 6e75      	.DB  0x44,0x5F,0x72,0x65,0x6D,0x6F,0x75,0x6E
0027d3 3e74
0027d4 5320
0027d5 5f44
0027d6 6e75      	.DB  0x74,0x3E,0x20,0x53,0x44,0x5F,0x75,0x6E
0027d7 6f6d
0027d8 6e75
0027d9 2874
0027da 2029      	.DB  0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29,0x20
0027db 6166
0027dc 6c69
0027dd 6465
0027de 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
0027df 3c00
0027e0 4453
0027e1 725f
0027e2 6d65      	.DB  0x0,0x3C,0x53,0x44,0x5F,0x72,0x65,0x6D
0027e3 756f
0027e4 746e
0027e5 203e
0027e6 4453      	.DB  0x6F,0x75,0x6E,0x74,0x3E,0x20,0x53,0x44
0027e7 6d5f
0027e8 756f
0027e9 746e
0027ea 2928      	.DB  0x5F,0x6D,0x6F,0x75,0x6E,0x74,0x28,0x29
0027eb 6620
0027ec 6961
0027ed 656c
0027ee 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0027ef 000a
0027f0 533c
0027f1 5f44
0027f2 7263      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x72
0027f3 6165
0027f4 6574
0027f5 6946
0027f6 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
0027f7 203e
0027f8 4453
0027f9 4320
0027fa 7261      	.DB  0x3E,0x20,0x53,0x44,0x20,0x43,0x61,0x72
0027fb 2064
0027fc 6f6e
0027fd 2074
0027fe 6572      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x72,0x65
0027ff 6461
002800 0d79
002801 000a
002802 7325      	.DB  0x61,0x64,0x79,0xD,0xA,0x0,0x25,0x73
002803 7325
002804 3c00
002805 4453
002806 635f      	.DB  0x25,0x73,0x0,0x3C,0x53,0x44,0x5F,0x63
002807 6572
002808 7461
002809 4665
00280a 6c69      	.DB  0x72,0x65,0x61,0x74,0x65,0x46,0x69,0x6C
00280b 3e65
00280c 6620
00280d 6f5f
00280e 6570      	.DB  0x65,0x3E,0x20,0x66,0x5F,0x6F,0x70,0x65
00280f 286e
002810 2029
002811 6166
002812 6c69      	.DB  0x6E,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002813 6465
002814 0a0d
002815 3c00
002816 4453      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x53,0x44
002817 635f
002818 6572
002819 7461
00281a 4665      	.DB  0x5F,0x63,0x72,0x65,0x61,0x74,0x65,0x46
00281b 6c69
00281c 3e65
00281d 6620
00281e 635f      	.DB  0x69,0x6C,0x65,0x3E,0x20,0x66,0x5F,0x63
00281f 6f6c
002820 6573
002821 2928
002822 6620      	.DB  0x6C,0x6F,0x73,0x65,0x28,0x29,0x20,0x66
002823 6961
002824 656c
002825 0d64
002826 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002827 533c
002828 5f44
002829 706f
00282a 6e65      	.DB  0x3C,0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E
00282b 6946
00282c 656c
00282d 203e
00282e 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
00282f 4320
002830 7261
002831 2064
002832 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002833 2074
002834 6572
002835 6461
002836 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
002837 000a
002838 533c
002839 5f44
00283a 706f      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x6F,0x70
00283b 6e65
00283c 6946
00283d 656c
00283e 203e      	.DB  0x65,0x6E,0x46,0x69,0x6C,0x65,0x3E,0x20
00283f 5f66
002840 706f
002841 6e65
002842 2928      	.DB  0x66,0x5F,0x6F,0x70,0x65,0x6E,0x28,0x29
002843 5b20
002844 7325
002845 205d
002846 6166      	.DB  0x20,0x5B,0x25,0x73,0x5D,0x20,0x66,0x61
002847 6c69
002848 6465
002849 0a0d
00284a 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
00284b 4453
00284c 635f
00284d 6f6c
00284e 6573      	.DB  0x53,0x44,0x5F,0x63,0x6C,0x6F,0x73,0x65
00284f 6946
002850 656c
002851 203e
002852 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002853 4320
002854 7261
002855 2064
002856 6f6e      	.DB  0x20,0x43,0x61,0x72,0x64,0x20,0x6E,0x6F
002857 2074
002858 6572
002859 6461
00285a 0d79      	.DB  0x74,0x20,0x72,0x65,0x61,0x64,0x79,0xD
00285b 000a
00285c 533c
00285d 5f44
00285e 6c63      	.DB  0xA,0x0,0x3C,0x53,0x44,0x5F,0x63,0x6C
00285f 736f
002860 4665
002861 6c69
002862 3e65      	.DB  0x6F,0x73,0x65,0x46,0x69,0x6C,0x65,0x3E
002863 6620
002864 635f
002865 6f6c
002866 6573      	.DB  0x20,0x66,0x5F,0x63,0x6C,0x6F,0x73,0x65
002867 2928
002868 6620
002869 6961
00286a 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
00286b 0d64
00286c 000a
00286d 533c
00286e 5f44      	.DB  0x64,0xD,0xA,0x0,0x3C,0x53,0x44,0x5F
00286f 6e69
002870 7469
002871 203e
002872 7453      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x53,0x74
002873 7261
002874 2074
002875 6e69
002876 7469      	.DB  0x61,0x72,0x74,0x20,0x69,0x6E,0x69,0x74
002877 6169
002878 206c
002879 656d
00287a 6f6d      	.DB  0x69,0x61,0x6C,0x20,0x6D,0x65,0x6D,0x6F
00287b 7972
00287c 6320
00287d 7261
00287e 0d64      	.DB  0x72,0x79,0x20,0x63,0x61,0x72,0x64,0xD
00287f 000a
002880 0a0d
002881 533c
002882 5f44      	.DB  0xA,0x0,0xD,0xA,0x3C,0x53,0x44,0x5F
002883 6e69
002884 7469
002885 203e
002886 6f4d      	.DB  0x69,0x6E,0x69,0x74,0x3E,0x20,0x4D,0x6F
002887 6e75
002888 6974
002889 676e
00288a 5320      	.DB  0x75,0x6E,0x74,0x69,0x6E,0x67,0x20,0x53
00288b 2044
00288c 6143
00288d 6472
00288e 2e2e      	.DB  0x44,0x20,0x43,0x61,0x72,0x64,0x2E,0x2E
00288f 002e
002890 533c
002891 5f44
002892 6e69      	.DB  0x2E,0x0,0x3C,0x53,0x44,0x5F,0x69,0x6E
002893 7469
002894 203e
002895 4453
002896 6d5f      	.DB  0x69,0x74,0x3E,0x20,0x53,0x44,0x5F,0x6D
002897 756f
002898 746e
002899 2928
00289a 6620      	.DB  0x6F,0x75,0x6E,0x74,0x28,0x29,0x20,0x66
00289b 6961
00289c 656c
00289d 0d64
00289e 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00289f 0a0d
0028a0 533c
0028a1 5f44
0028a2 6e69      	.DB  0xD,0xA,0x3C,0x53,0x44,0x5F,0x69,0x6E
0028a3 7469
0028a4 203e
0028a5 6843
0028a6 6365      	.DB  0x69,0x74,0x3E,0x20,0x43,0x68,0x65,0x63
0028a7 206b
0028a8 6143
0028a9 6472
0028aa 5320      	.DB  0x6B,0x20,0x43,0x61,0x72,0x64,0x20,0x53
0028ab 7a69
0028ac 2e65
0028ad 2e2e
0028ae 3c00      	.DB  0x69,0x7A,0x65,0x2E,0x2E,0x2E,0x0,0x3C
0028af 4453
0028b0 695f
0028b1 696e
0028b2 3e74      	.DB  0x53,0x44,0x5F,0x69,0x6E,0x69,0x74,0x3E
0028b3 5320
0028b4 5f44
0028b5 6572
0028b6 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
0028b7 654d
0028b8 6f6d
0028b9 7972
0028ba 6552      	.DB  0x4D,0x65,0x6D,0x6F,0x72,0x79,0x52,0x65
0028bb 616d
0028bc 6e69
0028bd 2928
0028be 6620      	.DB  0x6D,0x61,0x69,0x6E,0x28,0x29,0x20,0x66
0028bf 6961
0028c0 656c
0028c1 0d64
0028c2 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
0028c3 533c
0028c4 5f44
0028c5 6e69
0028c6 7469      	.DB  0x3C,0x53,0x44,0x5F,0x69,0x6E,0x69,0x74
0028c7 203e
0028c8 7246
0028c9 6565
0028ca 7320      	.DB  0x3E,0x20,0x46,0x72,0x65,0x65,0x20,0x73
0028cb 6170
0028cc 6563
0028cd 6f20
0028ce 206e      	.DB  0x70,0x61,0x63,0x65,0x20,0x6F,0x6E,0x20
0028cf 6f6c
0028d0 6967
0028d1 6163
0028d2 206c      	.DB  0x6C,0x6F,0x67,0x69,0x63,0x61,0x6C,0x20
0028d3 7264
0028d4 7669
0028d5 2065
0028d6 3a30      	.DB  0x64,0x72,0x69,0x76,0x65,0x20,0x30,0x3A
0028d7 2520
0028d8 756c
0028d9 6b20
0028da 7962      	.DB  0x20,0x25,0x6C,0x75,0x20,0x6B,0x62,0x79
0028db 6574
0028dc 0d73
0028dd 000a      	.DB  0x74,0x65,0x73,0xD,0xA,0x0
                 _0x280003:
0028de 6164
0028df 6174
0028e0 6c2e
0028e1 676f      	.DB  0x64,0x61,0x74,0x61,0x2E,0x6C,0x6F,0x67
                 _0x280004:
0028e2 7665
0028e3 6e65
0028e4 2e74
0028e5 6f6c      	.DB  0x65,0x76,0x65,0x6E,0x74,0x2E,0x6C,0x6F
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3867): warning: .cseg .db misalignment - padding zero byte
0028e6 0067      	.DB  0x67
                 _0x280005:
0028e7 7265
0028e8 6f72
0028e9 2e72
0028ea 6f6c      	.DB  0x65,0x72,0x72,0x6F,0x72,0x2E,0x6C,0x6F
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(3870): warning: .cseg .db misalignment - padding zero byte
0028eb 0067      	.DB  0x67
                 _0x280006:
0028ec 0000
0028ed 0000
0028ee 0000
0028ef 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
0028f0 ffff
0028f1 ffff
0028f2 ffff
0028f3 ffff      	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
                 _0x280007:
0028f4 7e39
0028f5 0000      	.DB  LOW(_SD_openFile),HIGH(_SD_openFile),BYTE3(_SD_openFile),BYTE4(_SD_openFile)
                 _0x280008:
0028f6 7e78
0028f7 0000      	.DB  LOW(_SD_closeFile),HIGH(_SD_closeFile),BYTE3(_SD_closeFile),BYTE4(_SD_closeFile)
                 _0x280000:
0028f8 4c3c
0028f9 474f
0028fa 695f
0028fb 736e      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x69,0x6E,0x73
0028fc 7265
0028fd 4474
0028fe 7461
0028ff 3e61      	.DB  0x65,0x72,0x74,0x44,0x61,0x74,0x61,0x3E
002900 4c20
002901 474f
002902 675f
002903 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002904 614c
002905 7473
002906 6e49
002907 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002908 7472
002909 2928
00290a 6620
00290b 6961      	.DB  0x72,0x74,0x28,0x29,0x20,0x66,0x61,0x69
00290c 656c
00290d 0d64
00290e 000a
00290f 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002910 474f
002911 695f
002912 736e
002913 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002914 4474
002915 7461
002916 3e61
002917 5320      	.DB  0x74,0x44,0x61,0x74,0x61,0x3E,0x20,0x53
002918 5f44
002919 7277
00291a 7469
00291b 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
00291c 7461
00291d 2861
00291e 6c66
00291f 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002920 2029
002921 6166
002922 6c69
002923 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002924 0a0d
002925 3c00
002926 4f4c
002927 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002928 6e69
002929 6573
00292a 7472
00292b 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
00292c 6174
00292d 203e
00292e 4453
00292f 775f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x77
002930 6972
002931 6574
002932 6144
002933 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002934 7428
002935 6d69
002936 7365
002937 6174      	.DB  0x28,0x74,0x69,0x6D,0x65,0x73,0x74,0x61
002938 706d
002939 2029
00293a 6166
00293b 6c69      	.DB  0x6D,0x70,0x29,0x20,0x66,0x61,0x69,0x6C
00293c 6465
00293d 0a0d
00293e 3c00
00293f 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002940 5f47
002941 6e69
002942 6573
002943 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002944 6144
002945 6174
002946 203e
002947 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002948 775f
002949 6972
00294a 6574
00294b 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
00294c 6174
00294d 6328
00294e 6168
00294f 6e6e      	.DB  0x74,0x61,0x28,0x63,0x68,0x61,0x6E,0x6E
002950 6c65
002951 2029
002952 6166
002953 6c69      	.DB  0x65,0x6C,0x29,0x20,0x66,0x61,0x69,0x6C
002954 6465
002955 0a0d
002956 3c00
002957 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002958 5f47
002959 6e69
00295a 6573
00295b 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
00295c 6144
00295d 6174
00295e 203e
00295f 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002960 775f
002961 6972
002962 6574
002963 6144      	.DB  0x5F,0x77,0x72,0x69,0x74,0x65,0x44,0x61
002964 6174
002965 7628
002966 6c61
002967 6575      	.DB  0x74,0x61,0x28,0x76,0x61,0x6C,0x75,0x65
002968 2029
002969 6166
00296a 6c69
00296b 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
00296c 0a0d
00296d 3c00
00296e 4f4c
00296f 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002970 6e69
002971 6573
002972 7472
002973 6144      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x44,0x61
002974 6174
002975 203e
002976 4f4c
002977 5f47      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002978 6573
002979 4c74
00297a 7361
00297b 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
00297c 736e
00297d 7265
00297e 2874
00297f 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002980 2964
002981 6620
002982 6961
002983 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002984 0d64
002985 000a
002986 4c3c
002987 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002988 725f
002989 6165
00298a 4464
00298b 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
00298c 3e61
00298d 4c20
00298e 474f
00298f 675f      	.DB  0x61,0x3E,0x20,0x4C,0x4F,0x47,0x5F,0x67
002990 7465
002991 614c
002992 7473
002993 6e49      	.DB  0x65,0x74,0x4C,0x61,0x73,0x74,0x49,0x6E
002994 6573
002995 7472
002996 2928
002997 6620      	.DB  0x73,0x65,0x72,0x74,0x28,0x29,0x20,0x66
002998 6961
002999 656c
00299a 0d64
00299b 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
00299c 4c3c
00299d 474f
00299e 725f
00299f 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
0029a0 4464
0029a1 7461
0029a2 3e61
0029a3 4c20      	.DB  0x64,0x44,0x61,0x74,0x61,0x3E,0x20,0x4C
0029a4 474f
0029a5 675f
0029a6 7465
0029a7 614c      	.DB  0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C,0x61
0029a8 7473
0029a9 6553
0029aa 646e
0029ab 2928      	.DB  0x73,0x74,0x53,0x65,0x6E,0x64,0x28,0x29
0029ac 6620
0029ad 6961
0029ae 656c
0029af 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
0029b0 000a
0029b1 4c3c
0029b2 474f
0029b3 725f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72
0029b4 6165
0029b5 4564
0029b6 6576
0029b7 746e      	.DB  0x65,0x61,0x64,0x45,0x76,0x65,0x6E,0x74
0029b8 203e
0029b9 616c
0029ba 7473
0029bb 6553      	.DB  0x3E,0x20,0x6C,0x61,0x73,0x74,0x53,0x65
0029bc 646e
0029bd 6c2f
0029be 7361
0029bf 4974      	.DB  0x6E,0x64,0x2F,0x6C,0x61,0x73,0x74,0x49
0029c0 736e
0029c1 7265
0029c2 2074
0029c3 2d20      	.DB  0x6E,0x73,0x65,0x72,0x74,0x20,0x20,0x2D
0029c4 3e2d
0029c5 2520
0029c6 646c
0029c7 252f      	.DB  0x2D,0x3E,0x20,0x25,0x6C,0x64,0x2F,0x25
0029c8 646c
0029c9 0a0d
0029ca 3c00
0029cb 4f4c      	.DB  0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029cc 5f47
0029cd 6572
0029ce 6461
0029cf 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0029d0 6174
0029d1 203e
0029d2 6f4c
0029d3 2067      	.DB  0x74,0x61,0x3E,0x20,0x4C,0x6F,0x67,0x20
0029d4 6d65
0029d5 7470
0029d6 2e79
0029d7 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
0029d8 0d21
0029d9 000a
0029da 443c
0029db 4245      	.DB  0x21,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
0029dc 4755
0029dd 435f
0029de 656c
0029df 7261      	.DB  0x55,0x47,0x5F,0x43,0x6C,0x65,0x61,0x72
0029e0 6f4c
0029e1 4667
0029e2 6c69
0029e3 3e65      	.DB  0x4C,0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E
0029e4 4c20
0029e5 474f
0029e6 635f
0029e7 6572      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65
0029e8 7461
0029e9 4665
0029ea 6c69
0029eb 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
0029ec 7325
0029ed 2029
0029ee 6166
0029ef 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
0029f0 6465
0029f1 0a0d
0029f2 3c00
0029f3 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
0029f4 5f47
0029f5 6572
0029f6 6461
0029f7 6144      	.DB  0x47,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
0029f8 6174
0029f9 203e
0029fa 4453
0029fb 725f      	.DB  0x74,0x61,0x3E,0x20,0x53,0x44,0x5F,0x72
0029fc 6165
0029fd 4464
0029fe 7461
0029ff 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002a00 6c66
002a01 6761
002a02 2029
002a03 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002a04 6c69
002a05 6465
002a06 0a0d
002a07 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002a08 4f4c
002a09 5f47
002a0a 6572
002a0b 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002a0c 6144
002a0d 6174
002a0e 203e
002a0f 4453      	.DB  0x44,0x61,0x74,0x61,0x3E,0x20,0x53,0x44
002a10 725f
002a11 6165
002a12 4464
002a13 7461      	.DB  0x5F,0x72,0x65,0x61,0x64,0x44,0x61,0x74
002a14 2861
002a15 6974
002a16 656d
002a17 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002a18 6d61
002a19 2970
002a1a 6620
002a1b 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002a1c 656c
002a1d 0d64
002a1e 000a
002a1f 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a20 474f
002a21 725f
002a22 6165
002a23 4464      	.DB  0x4F,0x47,0x5F,0x72,0x65,0x61,0x64,0x44
002a24 7461
002a25 3e61
002a26 5320
002a27 5f44      	.DB  0x61,0x74,0x61,0x3E,0x20,0x53,0x44,0x5F
002a28 6572
002a29 6461
002a2a 6144
002a2b 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002a2c 6328
002a2d 6168
002a2e 6e6e
002a2f 6c65      	.DB  0x28,0x63,0x68,0x61,0x6E,0x6E,0x65,0x6C
002a30 2029
002a31 6166
002a32 6c69
002a33 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002a34 0a0d
002a35 3c00
002a36 4f4c
002a37 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002a38 6572
002a39 6461
002a3a 6144
002a3b 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002a3c 203e
002a3d 4453
002a3e 725f
002a3f 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002a40 4464
002a41 7461
002a42 2861
002a43 6176      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x76,0x61
002a44 756c
002a45 2965
002a46 6620
002a47 6961      	.DB  0x6C,0x75,0x65,0x29,0x20,0x66,0x61,0x69
002a48 656c
002a49 0d64
002a4a 000a
002a4b 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a4c 474f
002a4d 695f
002a4e 736e
002a4f 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002a50 4574
002a51 6576
002a52 746e
002a53 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002a54 4f4c
002a55 5f47
002a56 6567
002a57 4c74      	.DB  0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74,0x4C
002a58 7361
002a59 4974
002a5a 736e
002a5b 7265      	.DB  0x61,0x73,0x74,0x49,0x6E,0x73,0x65,0x72
002a5c 2874
002a5d 2029
002a5e 6166
002a5f 6c69      	.DB  0x74,0x28,0x29,0x20,0x66,0x61,0x69,0x6C
002a60 6465
002a61 0a0d
002a62 3c00
002a63 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002a64 5f47
002a65 6e69
002a66 6573
002a67 7472      	.DB  0x47,0x5F,0x69,0x6E,0x73,0x65,0x72,0x74
002a68 7645
002a69 6e65
002a6a 3e74
002a6b 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002a6c 5f44
002a6d 7277
002a6e 7469
002a6f 4465      	.DB  0x44,0x5F,0x77,0x72,0x69,0x74,0x65,0x44
002a70 7461
002a71 2861
002a72 6c66
002a73 6761      	.DB  0x61,0x74,0x61,0x28,0x66,0x6C,0x61,0x67
002a74 2029
002a75 6166
002a76 6c69
002a77 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002a78 0a0d
002a79 3c00
002a7a 4f4c
002a7b 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002a7c 6e69
002a7d 6573
002a7e 7472
002a7f 7645      	.DB  0x69,0x6E,0x73,0x65,0x72,0x74,0x45,0x76
002a80 6e65
002a81 3e74
002a82 5320
002a83 5f44      	.DB  0x65,0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F
002a84 7277
002a85 7469
002a86 4465
002a87 7461      	.DB  0x77,0x72,0x69,0x74,0x65,0x44,0x61,0x74
002a88 2861
002a89 6974
002a8a 656d
002a8b 7473      	.DB  0x61,0x28,0x74,0x69,0x6D,0x65,0x73,0x74
002a8c 6d61
002a8d 2970
002a8e 6620
002a8f 6961      	.DB  0x61,0x6D,0x70,0x29,0x20,0x66,0x61,0x69
002a90 656c
002a91 0d64
002a92 000a
002a93 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002a94 474f
002a95 695f
002a96 736e
002a97 7265      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x73,0x65,0x72
002a98 4574
002a99 6576
002a9a 746e
002a9b 203e      	.DB  0x74,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002a9c 4453
002a9d 775f
002a9e 6972
002a9f 6574      	.DB  0x53,0x44,0x5F,0x77,0x72,0x69,0x74,0x65
002aa0 6144
002aa1 6174
002aa2 6928
002aa3 2964      	.DB  0x44,0x61,0x74,0x61,0x28,0x69,0x64,0x29
002aa4 6620
002aa5 6961
002aa6 656c
002aa7 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002aa8 000a
002aa9 4c3c
002aaa 474f
002aab 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002aac 736e
002aad 7265
002aae 4574
002aaf 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002ab0 746e
002ab1 203e
002ab2 4453
002ab3 775f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x77
002ab4 6972
002ab5 6574
002ab6 6144
002ab7 6174      	.DB  0x72,0x69,0x74,0x65,0x44,0x61,0x74,0x61
002ab8 7328
002ab9 6174
002aba 7574
002abb 2973      	.DB  0x28,0x73,0x74,0x61,0x74,0x75,0x73,0x29
002abc 6620
002abd 6961
002abe 656c
002abf 0d64      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0xD
002ac0 000a
002ac1 4c3c
002ac2 474f
002ac3 695f      	.DB  0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x69
002ac4 736e
002ac5 7265
002ac6 4574
002ac7 6576      	.DB  0x6E,0x73,0x65,0x72,0x74,0x45,0x76,0x65
002ac8 746e
002ac9 203e
002aca 4f4c
002acb 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002acc 6573
002acd 4c74
002ace 7361
002acf 4974      	.DB  0x73,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002ad0 736e
002ad1 7265
002ad2 2874
002ad3 6c25      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x25,0x6C
002ad4 2964
002ad5 6620
002ad6 6961
002ad7 656c      	.DB  0x64,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002ad8 0d64
002ad9 000a
002ada 4c3c
002adb 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002adc 725f
002add 6165
002ade 4564
002adf 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002ae0 746e
002ae1 203e
002ae2 4f4c
002ae3 5f47      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x4F,0x47,0x5F
002ae4 6567
002ae5 4c74
002ae6 7361
002ae7 4974      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x49
002ae8 736e
002ae9 7265
002aea 2874
002aeb 2029      	.DB  0x6E,0x73,0x65,0x72,0x74,0x28,0x29,0x20
002aec 6166
002aed 6c69
002aee 6465
002aef 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002af0 3c00
002af1 4f4c
002af2 5f47
002af3 6572      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65
002af4 6461
002af5 7645
002af6 6e65
002af7 3e74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x3E
002af8 4c20
002af9 474f
002afa 675f
002afb 7465      	.DB  0x20,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002afc 614c
002afd 7473
002afe 6553
002aff 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002b00 2928
002b01 6620
002b02 6961
002b03 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002b04 0d64
002b05 000a
002b06 4c3c
002b07 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b08 725f
002b09 6165
002b0a 4564
002b0b 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b0c 746e
002b0d 203e
002b0e 6f4c
002b0f 2067      	.DB  0x6E,0x74,0x3E,0x20,0x4C,0x6F,0x67,0x20
002b10 6d65
002b11 7470
002b12 2e79
002b13 212e      	.DB  0x65,0x6D,0x70,0x74,0x79,0x2E,0x2E,0x21
002b14 0d21
002b15 000a
002b16 4c3c
002b17 474f      	.DB  0x21,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002b18 725f
002b19 6165
002b1a 4564
002b1b 6576      	.DB  0x5F,0x72,0x65,0x61,0x64,0x45,0x76,0x65
002b1c 746e
002b1d 203e
002b1e 4453
002b1f 725f      	.DB  0x6E,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002b20 6165
002b21 4464
002b22 7461
002b23 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002b24 6c66
002b25 6761
002b26 2029
002b27 6166      	.DB  0x66,0x6C,0x61,0x67,0x29,0x20,0x66,0x61
002b28 6c69
002b29 6465
002b2a 0a0d
002b2b 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002b2c 4f4c
002b2d 5f47
002b2e 6572
002b2f 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002b30 7645
002b31 6e65
002b32 3e74
002b33 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002b34 5f44
002b35 6572
002b36 6461
002b37 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002b38 6174
002b39 7428
002b3a 6d69
002b3b 7365      	.DB  0x74,0x61,0x28,0x74,0x69,0x6D,0x65,0x73
002b3c 6174
002b3d 706d
002b3e 2029
002b3f 6166      	.DB  0x74,0x61,0x6D,0x70,0x29,0x20,0x66,0x61
002b40 6c69
002b41 6465
002b42 0a0d
002b43 3c00      	.DB  0x69,0x6C,0x65,0x64,0xD,0xA,0x0,0x3C
002b44 4f4c
002b45 5f47
002b46 6572
002b47 6461      	.DB  0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61,0x64
002b48 7645
002b49 6e65
002b4a 3e74
002b4b 5320      	.DB  0x45,0x76,0x65,0x6E,0x74,0x3E,0x20,0x53
002b4c 5f44
002b4d 6572
002b4e 6461
002b4f 6144      	.DB  0x44,0x5F,0x72,0x65,0x61,0x64,0x44,0x61
002b50 6174
002b51 6928
002b52 2964
002b53 6620      	.DB  0x74,0x61,0x28,0x69,0x64,0x29,0x20,0x66
002b54 6961
002b55 656c
002b56 0d64
002b57 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002b58 4c3c
002b59 474f
002b5a 725f
002b5b 6165      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x72,0x65,0x61
002b5c 4564
002b5d 6576
002b5e 746e
002b5f 203e      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x3E,0x20
002b60 4453
002b61 725f
002b62 6165
002b63 4464      	.DB  0x53,0x44,0x5F,0x72,0x65,0x61,0x64,0x44
002b64 7461
002b65 2861
002b66 7473
002b67 7461      	.DB  0x61,0x74,0x61,0x28,0x73,0x74,0x61,0x74
002b68 7375
002b69 2029
002b6a 6166
002b6b 6c69      	.DB  0x75,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002b6c 6465
002b6d 0a0d
002b6e 3c00
002b6f 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002b70 5f47
002b71 6567
002b72 4c74
002b73 7361      	.DB  0x47,0x5F,0x67,0x65,0x74,0x4C,0x61,0x73
002b74 4974
002b75 736e
002b76 7265
002b77 3e74      	.DB  0x74,0x49,0x6E,0x73,0x65,0x72,0x74,0x3E
002b78 5320
002b79 5f44
002b7a 6572
002b7b 6461      	.DB  0x20,0x53,0x44,0x5F,0x72,0x65,0x61,0x64
002b7c 6144
002b7d 6174
002b7e 2928
002b7f 6620      	.DB  0x44,0x61,0x74,0x61,0x28,0x29,0x20,0x66
002b80 6961
002b81 656c
002b82 0d64
002b83 000a      	.DB  0x61,0x69,0x6C,0x65,0x64,0xD,0xA,0x0
002b84 4c3c
002b85 474f
002b86 675f
002b87 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x67,0x65,0x74
002b88 614c
002b89 7473
002b8a 6e49
002b8b 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002b8c 7472
002b8d 203e
002b8e 6f67
002b8f 2074      	.DB  0x72,0x74,0x3E,0x20,0x67,0x6F,0x74,0x20
002b90 6c25
002b91 0d64
002b92 000a
002b93 4c3c      	.DB  0x25,0x6C,0x64,0xD,0xA,0x0,0x3C,0x4C
002b94 474f
002b95 735f
002b96 7465
002b97 614c      	.DB  0x4F,0x47,0x5F,0x73,0x65,0x74,0x4C,0x61
002b98 7473
002b99 6e49
002b9a 6573
002b9b 7472      	.DB  0x73,0x74,0x49,0x6E,0x73,0x65,0x72,0x74
002b9c 203e
002b9d 7277
002b9e 7469
002b9f 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002ba0 2067
002ba1 6c25
002ba2 0d64
002ba3 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002ba4 4c3c
002ba5 474f
002ba6 735f
002ba7 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002ba8 614c
002ba9 7473
002baa 6e49
002bab 6573      	.DB  0x4C,0x61,0x73,0x74,0x49,0x6E,0x73,0x65
002bac 7472
002bad 203e
002bae 4453
002baf 725f      	.DB  0x72,0x74,0x3E,0x20,0x53,0x44,0x5F,0x72
002bb0 6165
002bb1 4464
002bb2 7461
002bb3 2861      	.DB  0x65,0x61,0x64,0x44,0x61,0x74,0x61,0x28
002bb4 2029
002bb5 6166
002bb6 6c69
002bb7 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002bb8 0a0d
002bb9 3c00
002bba 4f4c
002bbb 5f47      	.DB  0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47,0x5F
002bbc 6567
002bbd 4c74
002bbe 7361
002bbf 5374      	.DB  0x67,0x65,0x74,0x4C,0x61,0x73,0x74,0x53
002bc0 6e65
002bc1 3e64
002bc2 5320
002bc3 5f44      	.DB  0x65,0x6E,0x64,0x3E,0x20,0x53,0x44,0x5F
002bc4 6572
002bc5 6461
002bc6 6144
002bc7 6174      	.DB  0x72,0x65,0x61,0x64,0x44,0x61,0x74,0x61
002bc8 2928
002bc9 6620
002bca 6961
002bcb 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002bcc 0d64
002bcd 000a
002bce 4c3c
002bcf 474f      	.DB  0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002bd0 675f
002bd1 7465
002bd2 614c
002bd3 7473      	.DB  0x5F,0x67,0x65,0x74,0x4C,0x61,0x73,0x74
002bd4 6553
002bd5 646e
002bd6 203e
002bd7 6f67      	.DB  0x53,0x65,0x6E,0x64,0x3E,0x20,0x67,0x6F
002bd8 2074
002bd9 6c25
002bda 0d64
002bdb 000a      	.DB  0x74,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002bdc 4c3c
002bdd 474f
002bde 735f
002bdf 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002be0 614c
002be1 7473
002be2 6553
002be3 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002be4 203e
002be5 7277
002be6 7469
002be7 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002be8 2067
002be9 6c25
002bea 0d64
002beb 000a      	.DB  0x67,0x20,0x25,0x6C,0x64,0xD,0xA,0x0
002bec 4c3c
002bed 474f
002bee 735f
002bef 7465      	.DB  0x3C,0x4C,0x4F,0x47,0x5F,0x73,0x65,0x74
002bf0 614c
002bf1 7473
002bf2 6553
002bf3 646e      	.DB  0x4C,0x61,0x73,0x74,0x53,0x65,0x6E,0x64
002bf4 203e
002bf5 4453
002bf6 725f
002bf7 6165      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x72,0x65,0x61
002bf8 4464
002bf9 7461
002bfa 2861
002bfb 2029      	.DB  0x64,0x44,0x61,0x74,0x61,0x28,0x29,0x20
002bfc 6166
002bfd 6c69
002bfe 6465
002bff 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002c00 3c00
002c01 4f4c
002c02 5f47
002c03 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c04 6165
002c05 6574
002c06 6946
002c07 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c08 203e
002c09 4453
002c0a 635f
002c0b 6572      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x63,0x72,0x65
002c0c 7461
002c0d 4665
002c0e 6c69
002c0f 2865      	.DB  0x61,0x74,0x65,0x46,0x69,0x6C,0x65,0x28
002c10 7325
002c11 2029
002c12 6166
002c13 6c69      	.DB  0x25,0x73,0x29,0x20,0x66,0x61,0x69,0x6C
002c14 6465
002c15 0a0d
002c16 3c00
002c17 4f4c      	.DB  0x65,0x64,0xD,0xA,0x0,0x3C,0x4C,0x4F
002c18 5f47
002c19 7263
002c1a 6165
002c1b 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002c1c 6946
002c1d 656c
002c1e 203e
002c1f 7325      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x25,0x73
002c20 6120
002c21 726c
002c22 6165
002c23 7964      	.DB  0x20,0x61,0x6C,0x72,0x65,0x61,0x64,0x79
002c24 6520
002c25 6978
002c26 7473
002c27 0a0d      	.DB  0x20,0x65,0x78,0x69,0x73,0x74,0xD,0xA
002c28 3c00
002c29 4f4c
002c2a 5f47
002c2b 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c2c 6165
002c2d 6574
002c2e 6946
002c2f 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c30 203e
002c31 7325
002c32 6320
002c33 6572      	.DB  0x3E,0x20,0x25,0x73,0x20,0x63,0x72,0x65
002c34 7461
002c35 6465
002c36 0a0d
002c37 3c00      	.DB  0x61,0x74,0x65,0x64,0xD,0xA,0x0,0x3C
002c38 4f4c
002c39 5f47
002c3a 7263
002c3b 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002c3c 6574
002c3d 6946
002c3e 656c
002c3f 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002c40 7325
002c41 6320
002c42 6e6f
002c43 6174      	.DB  0x25,0x73,0x20,0x63,0x6F,0x6E,0x74,0x61
002c44 6e69
002c45 6465
002c46 6e20
002c47 206f      	.DB  0x69,0x6E,0x65,0x64,0x20,0x6E,0x6F,0x20
002c48 6e69
002c49 7469
002c4a 6169
002c4b 206c      	.DB  0x69,0x6E,0x69,0x74,0x69,0x61,0x6C,0x20
002c4c 6164
002c4d 6174
002c4e 0a0d
002c4f 3c00      	.DB  0x64,0x61,0x74,0x61,0xD,0xA,0x0,0x3C
002c50 4f4c
002c51 5f47
002c52 7263
002c53 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
002c54 6574
002c55 6946
002c56 656c
002c57 203e      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x3E,0x20
002c58 4453
002c59 6f5f
002c5a 6570
002c5b 466e      	.DB  0x53,0x44,0x5F,0x6F,0x70,0x65,0x6E,0x46
002c5c 6c69
002c5d 2865
002c5e 7325
002c5f 2029      	.DB  0x69,0x6C,0x65,0x28,0x25,0x73,0x29,0x20
002c60 6166
002c61 6c69
002c62 6465
002c63 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002c64 3c00
002c65 4f4c
002c66 5f47
002c67 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c68 6165
002c69 6574
002c6a 6946
002c6b 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c6c 203e
002c6d 7277
002c6e 7469
002c6f 6e69      	.DB  0x3E,0x20,0x77,0x72,0x69,0x74,0x69,0x6E
002c70 2067
002c71 6e69
002c72 7469
002c73 6169      	.DB  0x67,0x20,0x69,0x6E,0x69,0x74,0x69,0x61
002c74 206c
002c75 6164
002c76 6174
002c77 0a0d      	.DB  0x6C,0x20,0x64,0x61,0x74,0x61,0xD,0xA
002c78 3c00
002c79 4f4c
002c7a 5f47
002c7b 7263      	.DB  0x0,0x3C,0x4C,0x4F,0x47,0x5F,0x63,0x72
002c7c 6165
002c7d 6574
002c7e 6946
002c7f 656c      	.DB  0x65,0x61,0x74,0x65,0x46,0x69,0x6C,0x65
002c80 203e
002c81 4453
002c82 775f
002c83 6972      	.DB  0x3E,0x20,0x53,0x44,0x5F,0x77,0x72,0x69
002c84 6574
002c85 6144
002c86 6174
002c87 2928      	.DB  0x74,0x65,0x44,0x61,0x74,0x61,0x28,0x29
002c88 6620
002c89 6961
002c8a 656c
002c8b 2064      	.DB  0x20,0x66,0x61,0x69,0x6C,0x65,0x64,0x20
002c8c 7257
002c8d 7469
002c8e 6e69
002c8f 2e67      	.DB  0x57,0x72,0x69,0x74,0x69,0x6E,0x67,0x2E
002c90 202e
002c91 0a0d
002c92 3c00
002c93 4f4c      	.DB  0x2E,0x20,0xD,0xA,0x0,0x3C,0x4C,0x4F
002c94 5f47
002c95 7263
002c96 6165
002c97 6574      	.DB  0x47,0x5F,0x63,0x72,0x65,0x61,0x74,0x65
002c98 6946
002c99 656c
002c9a 203e
002c9b 4453      	.DB  0x46,0x69,0x6C,0x65,0x3E,0x20,0x53,0x44
002c9c 635f
002c9d 6f6c
002c9e 6573
002c9f 6946      	.DB  0x5F,0x63,0x6C,0x6F,0x73,0x65,0x46,0x69
002ca0 656c
002ca1 2928
002ca2 6620
002ca3 6961      	.DB  0x6C,0x65,0x28,0x29,0x20,0x66,0x61,0x69
002ca4 656c
002ca5 0d64
002ca6 000a
002ca7 4c3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4C
002ca8 474f
002ca9 695f
002caa 696e
002cab 3e74      	.DB  0x4F,0x47,0x5F,0x69,0x6E,0x69,0x74,0x3E
002cac 4920
002cad 696e
002cae 6974
002caf 6c61      	.DB  0x20,0x49,0x6E,0x69,0x74,0x69,0x61,0x6C
002cb0 6c20
002cb1 676f
002cb2 6620
002cb3 6c69      	.DB  0x20,0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C
002cb4 0d65
002cb5 000a
002cb6 4c3c
002cb7 474f      	.DB  0x65,0xD,0xA,0x0,0x3C,0x4C,0x4F,0x47
002cb8 695f
002cb9 696e
002cba 3e74
002cbb 4c20      	.DB  0x5F,0x69,0x6E,0x69,0x74,0x3E,0x20,0x4C
002cbc 474f
002cbd 635f
002cbe 6572
002cbf 7461      	.DB  0x4F,0x47,0x5F,0x63,0x72,0x65,0x61,0x74
002cc0 4665
002cc1 6c69
002cc2 2865
002cc3 7325      	.DB  0x65,0x46,0x69,0x6C,0x65,0x28,0x25,0x73
002cc4 2029
002cc5 6166
002cc6 6c69
002cc7 6465      	.DB  0x29,0x20,0x66,0x61,0x69,0x6C,0x65,0x64
002cc8 0a0d
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(4123): warning: .cseg .db misalignment - padding zero byte
002cc9 0000      	.DB  0xD,0xA,0x0
                 _0x2A0000:
002cca 0a0d
002ccb 0a0d
002ccc 613c
002ccd 6464      	.DB  0xD,0xA,0xD,0xA,0x3C,0x61,0x64,0x64
002cce 6144
002ccf 6174
002cd0 6f4c
002cd1 5167      	.DB  0x44,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002cd2 6575
002cd3 6575
002cd4 203e
002cd5 4157      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x57,0x41
002cd6 4e52
002cd7 4e49
002cd8 2047
002cd9 203a      	.DB  0x52,0x4E,0x49,0x4E,0x47,0x20,0x3A,0x20
002cda 6164
002cdb 6174
002cdc 6f4c
002cdd 5167      	.DB  0x64,0x61,0x74,0x61,0x4C,0x6F,0x67,0x51
002cde 6575
002cdf 6575
002ce0 4620
002ce1 4c55      	.DB  0x75,0x65,0x75,0x65,0x20,0x46,0x55,0x4C
002ce2 0d4c
002ce3 0d0a
002ce4 000a
002ce5 0a0d      	.DB  0x4C,0xD,0xA,0xD,0xA,0x0,0xD,0xA
002ce6 613c
002ce7 6464
002ce8 6144
002ce9 6174      	.DB  0x3C,0x61,0x64,0x64,0x44,0x61,0x74,0x61
002cea 6f4c
002ceb 5167
002cec 6575
002ced 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002cee 203e
002cef 2020
002cf0 2020
002cf1 2020      	.DB  0x3E,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002cf2 2020
002cf3 2020
002cf4 2020
002cf5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002cf6 2020
002cf7 2020
002cf8 2020
002cf9 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002cfa 2020
002cfb 2020
002cfc 6441
002cfd 6564      	.DB  0x20,0x20,0x20,0x20,0x41,0x64,0x64,0x65
002cfe 2064
002cff 2528
002d00 3230
002d01 2958      	.DB  0x64,0x20,0x28,0x25,0x30,0x32,0x58,0x29
002d02 7420
002d03 206f
002d04 6164
002d05 6174      	.DB  0x20,0x74,0x6F,0x20,0x64,0x61,0x74,0x61
002d06 6f4c
002d07 5167
002d08 6575
002d09 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d0a 255b
002d0b 5d64
002d0c 4320
002d0d 756f      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x43,0x6F,0x75
002d0e 746e
002d0f 3d20
002d10 2520
002d11 0d64      	.DB  0x6E,0x74,0x20,0x3D,0x20,0x25,0x64,0xD
002d12 000a
002d13 723c
002d14 6165
002d15 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d16 7461
002d17 4c61
002d18 676f
002d19 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d1a 7565
002d1b 3e65
002d1c 5720
002d1d 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d1e 3a4e
002d1f 6420
002d20 7461
002d21 4c61      	.DB  0x4E,0x3A,0x20,0x64,0x61,0x74,0x61,0x4C
002d22 676f
002d23 7551
002d24 7565
002d25 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002d26 6d65
002d27 7470
002d28 2179
002d29 0d21      	.DB  0x65,0x6D,0x70,0x74,0x79,0x21,0x21,0xD
002d2a 000a
002d2b 723c
002d2c 6165
002d2d 4464      	.DB  0xA,0x0,0x3C,0x72,0x65,0x61,0x64,0x44
002d2e 7461
002d2f 4c61
002d30 676f
002d31 7551      	.DB  0x61,0x74,0x61,0x4C,0x6F,0x67,0x51,0x75
002d32 7565
002d33 3e65
002d34 5720
002d35 5241      	.DB  0x65,0x75,0x65,0x3E,0x20,0x57,0x41,0x52
002d36 3a4e
002d37 6e20
002d38 746f
002d39 6620      	.DB  0x4E,0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66
002d3a 756f
002d3b 646e
002d3c 6920
002d3d 5b64      	.DB  0x6F,0x75,0x6E,0x64,0x20,0x69,0x64,0x5B
002d3e 7830
002d3f 3025
002d40 5832
002d41 205d      	.DB  0x30,0x78,0x25,0x30,0x32,0x58,0x5D,0x20
002d42 6e69
002d43 6420
002d44 7461
002d45 4c61      	.DB  0x69,0x6E,0x20,0x64,0x61,0x74,0x61,0x4C
002d46 676f
002d47 7551
002d48 7565
002d49 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002d4a 000a
002d4b 0a0d
002d4c 723c
002d4d 6d65      	.DB  0xA,0x0,0xD,0xA,0x3C,0x72,0x65,0x6D
002d4e 766f
002d4f 4465
002d50 7461
002d51 4c61      	.DB  0x6F,0x76,0x65,0x44,0x61,0x74,0x61,0x4C
002d52 676f
002d53 7551
002d54 7565
002d55 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002d56 2020
002d57 2020
002d58 2020
002d59 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d5a 2020
002d5b 2020
002d5c 2020
002d5d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d5e 2020
002d5f 2020
002d60 2020
002d61 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002d62 6552
002d63 6f6d
002d64 6576
002d65 2064      	.DB  0x52,0x65,0x6D,0x6F,0x76,0x65,0x64,0x20
002d66 2528
002d67 3230
002d68 2958
002d69 6620      	.DB  0x28,0x25,0x30,0x32,0x58,0x29,0x20,0x66
002d6a 6f72
002d6b 206d
002d6c 6164
002d6d 6174      	.DB  0x72,0x6F,0x6D,0x20,0x64,0x61,0x74,0x61
002d6e 6f4c
002d6f 5167
002d70 6575
002d71 6575      	.DB  0x4C,0x6F,0x67,0x51,0x75,0x65,0x75,0x65
002d72 255b
002d73 5d64
002d74 0a0d
002d75 3c00      	.DB  0x5B,0x25,0x64,0x5D,0xD,0xA,0x0,0x3C
002d76 6572
002d77 6f6d
002d78 6576
002d79 6144      	.DB  0x72,0x65,0x6D,0x6F,0x76,0x65,0x44,0x61
002d7a 6174
002d7b 6f4c
002d7c 5167
002d7d 6575      	.DB  0x74,0x61,0x4C,0x6F,0x67,0x51,0x75,0x65
002d7e 6575
002d7f 203e
002d80 4157
002d81 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002d82 203a
002d83 6f6e
002d84 2074
002d85 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002d86 6e75
002d87 2064
002d88 6469
002d89 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002d8a 2578
002d8b 3230
002d8c 5d58
002d8d 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002d8e 206e
002d8f 6164
002d90 6174
002d91 6f4c      	.DB  0x6E,0x20,0x64,0x61,0x74,0x61,0x4C,0x6F
002d92 5167
002d93 6575
002d94 6575
002d95 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002d96 0d00
002d97 0d0a
002d98 3c0a
002d99 6461      	.DB  0x0,0xD,0xA,0xD,0xA,0x3C,0x61,0x64
002d9a 4564
002d9b 6576
002d9c 746e
002d9d 6f4c      	.DB  0x64,0x45,0x76,0x65,0x6E,0x74,0x4C,0x6F
002d9e 5167
002d9f 6575
002da0 6575
002da1 203e      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0x3E,0x20
002da2 4157
002da3 4e52
002da4 4e49
002da5 2047      	.DB  0x57,0x41,0x52,0x4E,0x49,0x4E,0x47,0x20
002da6 203a
002da7 7665
002da8 6e65
002da9 4c74      	.DB  0x3A,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002daa 676f
002dab 7551
002dac 7565
002dad 2065      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x20
002dae 5546
002daf 4c4c
002db0 0a0d
002db1 0a0d      	.DB  0x46,0x55,0x4C,0x4C,0xD,0xA,0xD,0xA
002db2 0d00
002db3 3c0a
002db4 6461
002db5 4564      	.DB  0x0,0xD,0xA,0x3C,0x61,0x64,0x64,0x45
002db6 6576
002db7 746e
002db8 6f4c
002db9 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002dba 6575
002dbb 6575
002dbc 203e
002dbd 2020      	.DB  0x75,0x65,0x75,0x65,0x3E,0x20,0x20,0x20
002dbe 2020
002dbf 2020
002dc0 2020
002dc1 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc2 2020
002dc3 2020
002dc4 2020
002dc5 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002dc6 2020
002dc7 2020
002dc8 2020
002dc9 6441      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x41,0x64
002dca 6564
002dcb 2064
002dcc 2528
002dcd 3230      	.DB  0x64,0x65,0x64,0x20,0x28,0x25,0x30,0x32
002dce 2958
002dcf 7420
002dd0 206f
002dd1 7665      	.DB  0x58,0x29,0x20,0x74,0x6F,0x20,0x65,0x76
002dd2 6e65
002dd3 4c74
002dd4 676f
002dd5 7551      	.DB  0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75
002dd6 7565
002dd7 5b65
002dd8 6425
002dd9 205d      	.DB  0x65,0x75,0x65,0x5B,0x25,0x64,0x5D,0x20
002dda 6f43
002ddb 6e75
002ddc 2074
002ddd 203d      	.DB  0x43,0x6F,0x75,0x6E,0x74,0x20,0x3D,0x20
002dde 6425
002ddf 0a0d
002de0 3c00
002de1 6572      	.DB  0x25,0x64,0xD,0xA,0x0,0x3C,0x72,0x65
002de2 6461
002de3 7645
002de4 6e65
002de5 4c74      	.DB  0x61,0x64,0x45,0x76,0x65,0x6E,0x74,0x4C
002de6 676f
002de7 7551
002de8 7565
002de9 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002dea 5720
002deb 5241
002dec 3a4e
002ded 6520      	.DB  0x20,0x57,0x41,0x52,0x4E,0x3A,0x20,0x65
002dee 6576
002def 746e
002df0 6f4c
002df1 5167      	.DB  0x76,0x65,0x6E,0x74,0x4C,0x6F,0x67,0x51
002df2 6575
002df3 6575
002df4 6520
002df5 706d      	.DB  0x75,0x65,0x75,0x65,0x20,0x65,0x6D,0x70
002df6 7974
002df7 2121
002df8 0a0d
002df9 3c00      	.DB  0x74,0x79,0x21,0x21,0xD,0xA,0x0,0x3C
002dfa 6572
002dfb 6461
002dfc 7645
002dfd 6e65      	.DB  0x72,0x65,0x61,0x64,0x45,0x76,0x65,0x6E
002dfe 4c74
002dff 676f
002e00 7551
002e01 7565      	.DB  0x74,0x4C,0x6F,0x67,0x51,0x75,0x65,0x75
002e02 3e65
002e03 5720
002e04 5241
002e05 3a4e      	.DB  0x65,0x3E,0x20,0x57,0x41,0x52,0x4E,0x3A
002e06 6e20
002e07 746f
002e08 6620
002e09 756f      	.DB  0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F,0x75
002e0a 646e
002e0b 6920
002e0c 5b64
002e0d 7830      	.DB  0x6E,0x64,0x20,0x69,0x64,0x5B,0x30,0x78
002e0e 3025
002e0f 5832
002e10 205d
002e11 6e69      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x69,0x6E
002e12 6520
002e13 6576
002e14 746e
002e15 6f4c      	.DB  0x20,0x65,0x76,0x65,0x6E,0x74,0x4C,0x6F
002e16 5167
002e17 6575
002e18 6575
002e19 0a0d      	.DB  0x67,0x51,0x75,0x65,0x75,0x65,0xD,0xA
002e1a 0d00
002e1b 3c0a
002e1c 6572
002e1d 6f6d      	.DB  0x0,0xD,0xA,0x3C,0x72,0x65,0x6D,0x6F
002e1e 6576
002e1f 7645
002e20 6e65
002e21 4c74      	.DB  0x76,0x65,0x45,0x76,0x65,0x6E,0x74,0x4C
002e22 676f
002e23 7551
002e24 7565
002e25 3e65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x3E
002e26 2020
002e27 2020
002e28 2020
002e29 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e2a 2020
002e2b 2020
002e2c 2020
002e2d 2020      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20
002e2e 2020
002e2f 2020
002e30 2020
002e31 6552      	.DB  0x20,0x20,0x20,0x20,0x20,0x20,0x52,0x65
002e32 6f6d
002e33 6576
002e34 2064
002e35 2528      	.DB  0x6D,0x6F,0x76,0x65,0x64,0x20,0x28,0x25
002e36 3230
002e37 2958
002e38 6620
002e39 6f72      	.DB  0x30,0x32,0x58,0x29,0x20,0x66,0x72,0x6F
002e3a 206d
002e3b 7665
002e3c 6e65
002e3d 4c74      	.DB  0x6D,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e3e 676f
002e3f 7551
002e40 7565
002e41 5b65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0x5B
002e42 6425
002e43 0d5d
002e44 000a
002e45 723c      	.DB  0x25,0x64,0x5D,0xD,0xA,0x0,0x3C,0x72
002e46 6d65
002e47 766f
002e48 4565
002e49 6576      	.DB  0x65,0x6D,0x6F,0x76,0x65,0x45,0x76,0x65
002e4a 746e
002e4b 6f4c
002e4c 5167
002e4d 6575      	.DB  0x6E,0x74,0x4C,0x6F,0x67,0x51,0x75,0x65
002e4e 6575
002e4f 203e
002e50 4157
002e51 4e52      	.DB  0x75,0x65,0x3E,0x20,0x57,0x41,0x52,0x4E
002e52 203a
002e53 6f6e
002e54 2074
002e55 6f66      	.DB  0x3A,0x20,0x6E,0x6F,0x74,0x20,0x66,0x6F
002e56 6e75
002e57 2064
002e58 6469
002e59 305b      	.DB  0x75,0x6E,0x64,0x20,0x69,0x64,0x5B,0x30
002e5a 2578
002e5b 3230
002e5c 5d58
002e5d 6920      	.DB  0x78,0x25,0x30,0x32,0x58,0x5D,0x20,0x69
002e5e 206e
002e5f 7665
002e60 6e65
002e61 4c74      	.DB  0x6E,0x20,0x65,0x76,0x65,0x6E,0x74,0x4C
002e62 676f
002e63 7551
002e64 7565
002e65 0d65      	.DB  0x6F,0x67,0x51,0x75,0x65,0x75,0x65,0xD
002e66 000a      	.DB  0xA,0x0
                 _0x2C0003:
002e67 0000
002e68 0000
002e69 0000
002e6a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e6b 0000
002e6c 0000
002e6d 0000
002e6e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e6f 0000
002e70 0000
002e71 0000
002e72 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e73 0000
002e74 0000
002e75 0000
002e76 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e77 0000
002e78 0000
002e79 0000
002e7a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e7b 0000
002e7c 0000
002e7d 0000
002e7e 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e7f 0000
002e80 0000
002e81 0000
002e82 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e83 0000
002e84 0000
002e85 0000
002e86 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e87 0000
002e88 0000
002e89 0000
002e8a 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e8b 0591
002e8c 058d
002e8d 0000      	.DB  LOW(_servicePwd),HIGH(_servicePwd),LOW(_userPwd),HIGH(_userPwd),0x0,0x0
                 _0x2C027A:
002e8e 0000
002e8f 0000
002e90 0000
002e91 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e92 0000
002e93 0000
002e94 0000
002e95 0000      	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
002e96 0000
002e97 0000      	.DB  0x0,0x0,0x0,0x0
                 _0x2C0000:
002e98 314d
002e99 3125
002e9a 0064
002e9b 304d      	.DB  0x4D,0x31,0x25,0x31,0x64,0x0,0x4D,0x30
002e9c 4d00
002e9d 2541
002e9e 6431
002e9f 4d00      	.DB  0x0,0x4D,0x41,0x25,0x31,0x64,0x0,0x4D
002ea0 2532
002ea1 6431
002ea2 4d00
002ea3 2533      	.DB  0x32,0x25,0x31,0x64,0x0,0x4D,0x33,0x25
002ea4 6431
002ea5 4d00
002ea6 2534
002ea7 6431      	.DB  0x31,0x64,0x0,0x4D,0x34,0x25,0x31,0x64
002ea8 5000
002ea9 0031
002eaa 354d
002eab 3125      	.DB  0x0,0x50,0x31,0x0,0x4D,0x35,0x25,0x31
002eac 0064
002ead 3050
002eae 3c00
002eaf 454d      	.DB  0x64,0x0,0x50,0x30,0x0,0x3C,0x4D,0x45
002eb0 554e
002eb1 705f
002eb2 6f72
002eb3 6563      	.DB  0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63,0x65
002eb4 7373
002eb5 654b
002eb6 3e79
002eb7 5620      	.DB  0x73,0x73,0x4B,0x65,0x79,0x3E,0x20,0x56
002eb8 2550
002eb9 2c73
002eba 7325
002ebb 252c      	.DB  0x50,0x25,0x73,0x2C,0x25,0x73,0x2C,0x25
002ebc 2c73
002ebd 5200
002ebe 6165
002ebf 746c      	.DB  0x73,0x2C,0x0,0x52,0x65,0x61,0x6C,0x74
002ec0 6d69
002ec1 2c65
002ec2 4400
002ec3 7461      	.DB  0x69,0x6D,0x65,0x2C,0x0,0x44,0x61,0x74
002ec4 6c61
002ec5 676f
002ec6 6567
002ec7 2c72      	.DB  0x61,0x6C,0x6F,0x67,0x67,0x65,0x72,0x2C
002ec8 5500
002ec9 6b6e
002eca 6f6e
002ecb 6e77      	.DB  0x0,0x55,0x6E,0x6B,0x6E,0x6F,0x77,0x6E
002ecc 002c
002ecd 6e45
002ece 6261
002ecf 656c      	.DB  0x2C,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
002ed0 002c
002ed1 6944
002ed2 6173
002ed3 6c62      	.DB  0x2C,0x0,0x44,0x69,0x73,0x61,0x62,0x6C
002ed4 2c65
002ed5 3c00
002ed6 454d
002ed7 554e      	.DB  0x65,0x2C,0x0,0x3C,0x4D,0x45,0x4E,0x55
002ed8 705f
002ed9 6f72
002eda 6563
002edb 7373      	.DB  0x5F,0x70,0x72,0x6F,0x63,0x65,0x73,0x73
002edc 654b
002edd 3e79
002ede 5620
002edf 254f      	.DB  0x4B,0x65,0x79,0x3E,0x20,0x56,0x4F,0x25
002ee0 0073
002ee1 4d3c
002ee2 4e45
002ee3 5f55      	.DB  0x73,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002ee4 7270
002ee5 636f
002ee6 7365
002ee7 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002ee8 7965
002ee9 203e
002eea 616d
002eeb 6c6c      	.DB  0x65,0x79,0x3E,0x20,0x6D,0x61,0x6C,0x6C
002eec 636f
002eed 4328
002eee 4e4f
002eef 5f46      	.DB  0x6F,0x63,0x28,0x43,0x4F,0x4E,0x46,0x5F
002ef0 4552
002ef1 4441
002ef2 425f
002ef3 4655      	.DB  0x52,0x45,0x41,0x44,0x5F,0x42,0x55,0x46
002ef4 4546
002ef5 2952
002ef6 6620
002ef7 6961      	.DB  0x46,0x45,0x52,0x29,0x20,0x66,0x61,0x69
002ef8 656c
002ef9 0d64
002efa 000a
002efb 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002efc 4e45
002efd 5f55
002efe 7270
002eff 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002f00 7365
002f01 4b73
002f02 7965
002f03 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002f04 5445
002f05 5f48
002f06 6567
002f07 4374      	.DB  0x45,0x54,0x48,0x5F,0x67,0x65,0x74,0x43
002f08 6e6f
002f09 6966
002f0a 2867
002f0b 2029      	.DB  0x6F,0x6E,0x66,0x69,0x67,0x28,0x29,0x20
002f0c 6166
002f0d 6c69
002f0e 6465
002f0f 0a0d      	.DB  0x66,0x61,0x69,0x6C,0x65,0x64,0xD,0xA
002f10 3c00
002f11 454d
002f12 554e
002f13 705f      	.DB  0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f14 6f72
002f15 6563
002f16 7373
002f17 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f18 3e79
002f19 4520
002f1a 4854
002f1b 675f      	.DB  0x79,0x3E,0x20,0x45,0x54,0x48,0x5F,0x67
002f1c 7465
002f1d 6f43
002f1e 666e
002f1f 6769      	.DB  0x65,0x74,0x43,0x6F,0x6E,0x66,0x69,0x67
002f20 2928
002f21 7320
002f22 6375
002f23 6563      	.DB  0x28,0x29,0x20,0x73,0x75,0x63,0x63,0x65
002f24 7373
002f25 0a0d
002f26 0d00
002f27 0d0a      	.DB  0x73,0x73,0xD,0xA,0x0,0xD,0xA,0xD
002f28 3c0a
002f29 454d
002f2a 554e
002f2b 705f      	.DB  0xA,0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70
002f2c 6f72
002f2d 6563
002f2e 7373
002f2f 654b      	.DB  0x72,0x6F,0x63,0x65,0x73,0x73,0x4B,0x65
002f30 3e79
002f31 7220
002f32 6165
002f33 5b64      	.DB  0x79,0x3E,0x20,0x72,0x65,0x61,0x64,0x5B
002f34 6425
002f35 205d
002f36 2d2d
002f37 0d3e      	.DB  0x25,0x64,0x5D,0x20,0x2D,0x2D,0x3E,0xD
002f38 000a
002f39 4d3c
002f3a 4e45
002f3b 5f55      	.DB  0xA,0x0,0x3C,0x4D,0x45,0x4E,0x55,0x5F
002f3c 7270
002f3d 636f
002f3e 7365
002f3f 4b73      	.DB  0x70,0x72,0x6F,0x63,0x65,0x73,0x73,0x4B
002f40 7965
002f41 203e
002f42 6567
002f43 4e74      	.DB  0x65,0x79,0x3E,0x20,0x67,0x65,0x74,0x4E
002f44 7465
002f45 6f77
002f46 6b72
002f47 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
002f48 6f66
002f49 2928
002f4a 6620
002f4b 6961      	.DB  0x66,0x6F,0x28,0x29,0x20,0x66,0x61,0x69
002f4c 656c
002f4d 0d64
002f4e 000a
002f4f 4d3c      	.DB  0x6C,0x65,0x64,0xD,0xA,0x0,0x3C,0x4D
002f50 4e45
002f51 5f55
002f52 7270
002f53 636f      	.DB  0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F,0x63
002f54 7365
002f55 4b73
002f56 7965
002f57 203e      	.DB  0x65,0x73,0x73,0x4B,0x65,0x79,0x3E,0x20
002f58 4e56
002f59 7525
002f5a 252e
002f5b 2e75      	.DB  0x56,0x4E,0x25,0x75,0x2E,0x25,0x75,0x2E
002f5c 7525
002f5d 252e
002f5e 2c75
002f5f 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002f60 252e
002f61 2e75
002f62 7525
002f63 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002f64 2c75
002f65 7525
002f66 252e
002f67 2e75      	.DB  0x75,0x2C,0x25,0x75,0x2E,0x25,0x75,0x2E
002f68 7525
002f69 252e
002f6a 2c75
002f6b 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2C,0x25,0x75
002f6c 252e
002f6d 2e75
002f6e 7525
002f6f 252e      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E,0x25
002f70 2c75
002f71 0a0d
002f72 5600
002f73 254e      	.DB  0x75,0x2C,0xD,0xA,0x0,0x56,0x4E,0x25
002f74 2e75
002f75 7525
002f76 252e
002f77 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002f78 7525
002f79 252c
002f7a 2e75
002f7b 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002f7c 252e
002f7d 2e75
002f7e 7525
002f7f 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
002f80 2e75
002f81 7525
002f82 252e
002f83 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
002f84 7525
002f85 252c
002f86 2e75
002f87 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
002f88 252e
002f89 2e75
002f8a 7525
002f8b 002c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x0
002f8c 4d3c
002f8d 4e45
002f8e 5f55
002f8f 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002f90 636f
002f91 7365
002f92 4b73
002f93 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002f94 203e
002f95 6564
002f96 4576
002f97 5b6e      	.DB  0x3E,0x20,0x64,0x65,0x76,0x45,0x6E,0x5B
002f98 6425
002f99 205d
002f9a 6c61
002f9b 456d      	.DB  0x25,0x64,0x5D,0x20,0x61,0x6C,0x6D,0x45
002f9c 5b6e
002f9d 6425
002f9e 005d
002f9f 4f53      	.DB  0x6E,0x5B,0x25,0x64,0x5D,0x0,0x53,0x4F
002fa0 3125
002fa1 0064
002fa2 4445
002fa3 2532      	.DB  0x25,0x31,0x64,0x0,0x45,0x44,0x32,0x25
002fa4 6431
002fa5 4500
002fa6 3344
002fa7 3125      	.DB  0x31,0x64,0x0,0x45,0x44,0x33,0x25,0x31
002fa8 0064
002fa9 4953
002faa 4900
002fab 2544      	.DB  0x64,0x0,0x53,0x49,0x0,0x49,0x44,0x25
002fac 5831
002fad 3125
002fae 0064
002faf 364d      	.DB  0x31,0x58,0x25,0x31,0x64,0x0,0x4D,0x36
002fb0 3125
002fb1 0064
002fb2 4d3c
002fb3 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
002fb4 5f55
002fb5 7270
002fb6 636f
002fb7 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002fb8 4b73
002fb9 7965
002fba 203e
002fbb 6564      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x64,0x65
002fbc 4576
002fbd 206e
002fbe 3e2d
002fbf 4520      	.DB  0x76,0x45,0x6E,0x20,0x2D,0x3E,0x20,0x45
002fc0 2544
002fc1 6431
002fc2 3125
002fc3 0064      	.DB  0x44,0x25,0x31,0x64,0x25,0x31,0x64,0x0
002fc4 4d3c
002fc5 4e45
002fc6 5f55
002fc7 7270      	.DB  0x3C,0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72
002fc8 636f
002fc9 7365
002fca 4b73
002fcb 7965      	.DB  0x6F,0x63,0x65,0x73,0x73,0x4B,0x65,0x79
002fcc 203e
002fcd 6c61
002fce 456d
002fcf 206e      	.DB  0x3E,0x20,0x61,0x6C,0x6D,0x45,0x6E,0x20
002fd0 3e2d
002fd1 4520
002fd2 2544
002fd3 6431      	.DB  0x2D,0x3E,0x20,0x45,0x44,0x25,0x31,0x64
002fd4 3125
002fd5 0064
002fd6 4d3c
002fd7 4e45      	.DB  0x25,0x31,0x64,0x0,0x3C,0x4D,0x45,0x4E
002fd8 5f55
002fd9 7270
002fda 636f
002fdb 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
002fdc 4b73
002fdd 7965
002fde 203e
002fdf 6573      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x73,0x65
002fe0 4f74
002fe1 6570
002fe2 6172
002fe3 6974      	.DB  0x74,0x4F,0x70,0x65,0x72,0x61,0x74,0x69
002fe4 676e
002fe5 6f43
002fe6 666e
002fe7 6769      	.DB  0x6E,0x67,0x43,0x6F,0x6E,0x66,0x69,0x67
002fe8 2928
002fe9 6620
002fea 6961
002feb 656c      	.DB  0x28,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
002fec 0d64
002fed 000a
002fee 4c46
002fef 4600      	.DB  0x64,0xD,0xA,0x0,0x46,0x4C,0x0,0x46
002ff0 0049
002ff1 4149
002ff2 3125
002ff3 0058      	.DB  0x49,0x0,0x49,0x41,0x25,0x31,0x58,0x0
002ff4 4d53
002ff5 5300
002ff6 0047
002ff7 5353      	.DB  0x53,0x4D,0x0,0x53,0x47,0x0,0x53,0x53
002ff8 5300
002ff9 2546
002ffa 2e75
002ffb 7525      	.DB  0x0,0x53,0x46,0x25,0x75,0x2E,0x25,0x75
002ffc 252e
002ffd 2e75
002ffe 7525
002fff 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
003000 2e75
003001 7525
003002 252e
003003 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003004 7525
003005 252c
003006 2e75
003007 7525      	.DB  0x25,0x75,0x2C,0x25,0x75,0x2E,0x25,0x75
003008 252e
003009 2e75
00300a 7525
00300b 252c      	.DB  0x2E,0x25,0x75,0x2E,0x25,0x75,0x2C,0x25
00300c 2e75
00300d 7525
00300e 252e
00300f 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
003010 7525
003011 002c
003012 4d3c
003013 4e45      	.DB  0x25,0x75,0x2C,0x0,0x3C,0x4D,0x45,0x4E
003014 5f55
003015 7270
003016 636f
003017 7365      	.DB  0x55,0x5F,0x70,0x72,0x6F,0x63,0x65,0x73
003018 4b73
003019 7965
00301a 203e
00301b 5445      	.DB  0x73,0x4B,0x65,0x79,0x3E,0x20,0x45,0x54
00301c 5f48
00301d 6573
00301e 4374
00301f 6e6f      	.DB  0x48,0x5F,0x73,0x65,0x74,0x43,0x6F,0x6E
003020 6966
003021 2867
003022 2029
003023 6166      	.DB  0x66,0x69,0x67,0x28,0x29,0x20,0x66,0x61
003024 6c69
003025 6465
003026 0d20
003027 000a      	.DB  0x69,0x6C,0x65,0x64,0x20,0xD,0xA,0x0
003028 554d
003029 3125
00302a 0064
00302b 4450      	.DB  0x4D,0x55,0x25,0x31,0x64,0x0,0x50,0x44
00302c 3125
00302d 2a64
00302e 5000
00302f 2541      	.DB  0x25,0x31,0x64,0x2A,0x0,0x50,0x41,0x25
003030 6431
003031 5000
003032 0035
003033 4450      	.DB  0x31,0x64,0x0,0x50,0x35,0x0,0x50,0x44
003034 3125
003035 2564
003036 6431
003037 3c00      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x3C
003038 454d
003039 554e
00303a 705f
00303b 6f72      	.DB  0x4D,0x45,0x4E,0x55,0x5F,0x70,0x72,0x6F
00303c 6563
00303d 7373
00303e 654b
00303f 3e79      	.DB  0x63,0x65,0x73,0x73,0x4B,0x65,0x79,0x3E
003040 6e20
003041 7765
003042 7750
003043 2064      	.DB  0x20,0x6E,0x65,0x77,0x50,0x77,0x64,0x20
003044 2026
003045 6f63
003046 666e
003047 7750      	.DB  0x26,0x20,0x63,0x6F,0x6E,0x66,0x50,0x77
003048 2064
003049 6f6e
00304a 2074
00304b 616d      	.DB  0x64,0x20,0x6E,0x6F,0x74,0x20,0x6D,0x61
00304c 6374
00304d 0d68
00304e 000a
00304f 5653      	.DB  0x74,0x63,0x68,0xD,0xA,0x0,0x53,0x56
003050 5600
003051 2544
003052 6431
003053 3125      	.DB  0x0,0x56,0x44,0x25,0x31,0x64,0x25,0x31
003054 0064
003055 3153
003056 3125
003057 0064      	.DB  0x64,0x0,0x53,0x31,0x25,0x31,0x64,0x0
003058 3253
003059 3125
00305a 0064
00305b 4352      	.DB  0x53,0x32,0x25,0x31,0x64,0x0,0x52,0x43
00305c 4d00
00305d 2537
00305e 6431
00305f 5600      	.DB  0x0,0x4D,0x37,0x25,0x31,0x64,0x0,0x56
003060 2541
003061 6431
003062 5300
003063 2541      	.DB  0x41,0x25,0x31,0x64,0x0,0x53,0x41,0x25
003064 6431
003065 5000
003066 254e
003067 6431      	.DB  0x31,0x64,0x0,0x50,0x4E,0x25,0x31,0x64
003068 4300
003069 2543
00306a 6431
00306b 4d00      	.DB  0x0,0x43,0x43,0x25,0x31,0x64,0x0,0x4D
00306c 2538
00306d 6431
00306e 4300
00306f 2550      	.DB  0x38,0x25,0x31,0x64,0x0,0x43,0x50,0x25
003070 6431
003071 3125
003072 0064
003073 4443      	.DB  0x31,0x64,0x25,0x31,0x64,0x0,0x43,0x44
003074 3125
003075 2564
003076 6431
003077 6300      	.DB  0x25,0x31,0x64,0x25,0x31,0x64,0x0,0x63
003078 6c61
003079 6e50
00307a 5b74
00307b 3125      	.DB  0x61,0x6C,0x50,0x6E,0x74,0x5B,0x25,0x31
00307c 5d64
00307d 3d20
00307e 2520
00307f 6431      	.DB  0x64,0x5D,0x20,0x3D,0x20,0x25,0x31,0x64
003080 0a0d
003081 4300
003082 2541
003083 6431      	.DB  0xD,0xA,0x0,0x43,0x41,0x25,0x31,0x64
003084 5700
003085 0050
003086 5350
003087 5000      	.DB  0x0,0x57,0x50,0x0,0x50,0x53,0x0,0x50
003088 0034
003089 455b
00308a 005d
00308b 445b      	.DB  0x34,0x0,0x5B,0x45,0x5D,0x0,0x5B,0x44
00308c 005d
00308d 6e45
00308e 6261
00308f 656c      	.DB  0x5D,0x0,0x45,0x6E,0x61,0x62,0x6C,0x65
003090 4400
003091 7369
003092 6261
003093 656c      	.DB  0x0,0x44,0x69,0x73,0x61,0x62,0x6C,0x65
003094 3c00
003095 6873
003096 776f
003097 7250      	.DB  0x0,0x3C,0x73,0x68,0x6F,0x77,0x50,0x72
003098 626f
003099 4365
00309a 6e6f
00309b 6966      	.DB  0x6F,0x62,0x65,0x43,0x6F,0x6E,0x66,0x69
00309c 3e67
00309d 5020
00309e 2543
00309f 6431      	.DB  0x67,0x3E,0x20,0x50,0x43,0x25,0x31,0x64
0030a0 3125
0030a1 2564
0030a2 2c64
0030a3 7325      	.DB  0x25,0x31,0x64,0x25,0x64,0x2C,0x25,0x73
0030a4 252c
0030a5 2c73
0030a6 2e25
0030a7 6631      	.DB  0x2C,0x25,0x73,0x2C,0x25,0x2E,0x31,0x66
0030a8 252c
0030a9 2c64
0030aa 2e25
0030ab 6631      	.DB  0x2C,0x25,0x64,0x2C,0x25,0x2E,0x31,0x66
0030ac 252c
0030ad 312e
0030ae 2c66
0030af 6425      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x2C,0x25,0x64
0030b0 252c
0030b1 312e
0030b2 0066
0030b3 0a0d      	.DB  0x2C,0x25,0x2E,0x31,0x66,0x0,0xD,0xA
0030b4 673c
0030b5 7465
0030b6 635f
0030b7 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
0030b8 6572
0030b9 746e
0030ba 735f
0030bb 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
0030bc 6c70
0030bd 6e69
0030be 3e67
0030bf 7220      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x72
0030c0 6165
0030c1 206c
0030c2 6176
0030c3 756c      	.DB  0x65,0x61,0x6C,0x20,0x76,0x61,0x6C,0x75
0030c4 2065
0030c5 2528
0030c6 206c
0030c7 6573      	.DB  0x65,0x20,0x28,0x25,0x6C,0x20,0x73,0x65
0030c8 2e63
0030c9 0d29
0030ca 000a
0030cb 673c      	.DB  0x63,0x2E,0x29,0xD,0xA,0x0,0x3C,0x67
0030cc 7465
0030cd 635f
0030ce 7275
0030cf 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
0030d0 746e
0030d1 735f
0030d2 6d61
0030d3 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
0030d4 6e69
0030d5 3e67
0030d6 2520
0030d7 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
0030d8 7268
0030d9 0d2e
0030da 000a
0030db 673c      	.DB  0x68,0x72,0x2E,0xD,0xA,0x0,0x3C,0x67
0030dc 7465
0030dd 635f
0030de 7275
0030df 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
0030e0 746e
0030e1 735f
0030e2 6d61
0030e3 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
0030e4 6e69
0030e5 3e67
0030e6 2520
0030e7 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
0030e8 696d
0030e9 2e6e
0030ea 0a0d
0030eb 3c00      	.DB  0x6D,0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C
0030ec 6567
0030ed 5f74
0030ee 7563
0030ef 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
0030f0 6e65
0030f1 5f74
0030f2 6173
0030f3 706d      	.DB  0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70
0030f4 696c
0030f5 676e
0030f6 203e
0030f7 6425      	.DB  0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25,0x64
0030f8 7320
0030f9 6365
0030fa 0d2e
0030fb 000a      	.DB  0x20,0x73,0x65,0x63,0x2E,0xD,0xA,0x0
0030fc 673c
0030fd 7465
0030fe 635f
0030ff 7275      	.DB  0x3C,0x67,0x65,0x74,0x5F,0x63,0x75,0x72
003100 6572
003101 746e
003102 735f
003103 6d61      	.DB  0x72,0x65,0x6E,0x74,0x5F,0x73,0x61,0x6D
003104 6c70
003105 6e69
003106 3e67
003107 2520      	.DB  0x70,0x6C,0x69,0x6E,0x67,0x3E,0x20,0x25
003108 2064
003109 696d
00310a 2e6e
00310b 2520      	.DB  0x64,0x20,0x6D,0x69,0x6E,0x2E,0x20,0x25
00310c 2064
00310d 6573
00310e 2e63
00310f 0020      	.DB  0x64,0x20,0x73,0x65,0x63,0x2E,0x20,0x0
003110 2d2d
003111 203e
003112 6425
003113 6d20      	.DB  0x2D,0x2D,0x3E,0x20,0x25,0x64,0x20,0x6D
003114 6e69
003115 0d2e
003116 000a
003117 673c      	.DB  0x69,0x6E,0x2E,0xD,0xA,0x0,0x3C,0x67
003118 7465
003119 635f
00311a 7275
00311b 6572      	.DB  0x65,0x74,0x5F,0x63,0x75,0x72,0x72,0x65
00311c 746e
00311d 735f
00311e 6d61
00311f 6c70      	.DB  0x6E,0x74,0x5F,0x73,0x61,0x6D,0x70,0x6C
003120 6e69
003121 3e67
003122 2520
003123 2064      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x64,0x20
003124 7268
003125 202e
003126 6425
003127 6d20      	.DB  0x68,0x72,0x2E,0x20,0x25,0x64,0x20,0x6D
003128 6e69
003129 202e
00312a 6425
00312b 7320      	.DB  0x69,0x6E,0x2E,0x20,0x25,0x64,0x20,0x73
00312c 6365
00312d 202e
00312e 2d00
00312f 3e2d      	.DB  0x65,0x63,0x2E,0x20,0x0,0x2D,0x2D,0x3E
003130 2520
003131 2064
003132 7268
003133 0d2e      	.DB  0x20,0x25,0x64,0x20,0x68,0x72,0x2E,0xD
003134 000a
003135 673c
003136 7465
003137 635f      	.DB  0xA,0x0,0x3C,0x67,0x65,0x74,0x5F,0x63
003138 7275
003139 6572
00313a 746e
00313b 735f      	.DB  0x75,0x72,0x72,0x65,0x6E,0x74,0x5F,0x73
00313c 6d61
00313d 6c70
00313e 6e69
00313f 3e67      	.DB  0x61,0x6D,0x70,0x6C,0x69,0x6E,0x67,0x3E
003140 4320
003141 6e61
003142 7427
003143 5320      	.DB  0x20,0x43,0x61,0x6E,0x27,0x74,0x20,0x53
003144 6f68
003145 2e77
003146 0a0d
003147 3c00      	.DB  0x68,0x6F,0x77,0x2E,0xD,0xA,0x0,0x3C
003148 6567
003149 5f74
00314a 7563
00314b 7272      	.DB  0x67,0x65,0x74,0x5F,0x63,0x75,0x72,0x72
00314c 6e65
00314d 5f74
00314e 7276
00314f 6665      	.DB  0x65,0x6E,0x74,0x5F,0x76,0x72,0x65,0x66
003150 203e
003151 7276
003152 6665
003153 2528      	.DB  0x3E,0x20,0x76,0x72,0x65,0x66,0x28,0x25
003154 2966
003155 7620
003156 6c61
003157 6d54      	.DB  0x66,0x29,0x20,0x76,0x61,0x6C,0x54,0x6D
003158 2070
003159 203d
00315a 7325
00315b 0a0d      	.DB  0x70,0x20,0x3D,0x20,0x25,0x73,0xD,0xA
00315c 3c00
00315d 6567
00315e 5f74
00315f 7563      	.DB  0x0,0x3C,0x67,0x65,0x74,0x5F,0x63,0x75
003160 7272
003161 6e65
003162 5f74
003163 7276      	.DB  0x72,0x72,0x65,0x6E,0x74,0x5F,0x76,0x72
003164 6665
003165 203e
003166 7562
003167 2066      	.DB  0x65,0x66,0x3E,0x20,0x62,0x75,0x66,0x20
003168 3e2d
003169 0020
00316a 255b
00316b 5d63      	.DB  0x2D,0x3E,0x20,0x0,0x5B,0x25,0x63,0x5D
00316c 3c00
00316d 6567
00316e 4e74
00316f 7465      	.DB  0x0,0x3C,0x67,0x65,0x74,0x4E,0x65,0x74
003170 6f77
003171 6b72
003172 6e49
003173 6f66      	.DB  0x77,0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F
003174 203e
003175 494c
003176 2050
003177 203a      	.DB  0x3E,0x20,0x4C,0x49,0x50,0x20,0x3A,0x20
003178 7525
003179 252e
00317a 2e75
00317b 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
00317c 252e
00317d 0d75
00317e 000a
00317f 673c      	.DB  0x2E,0x25,0x75,0xD,0xA,0x0,0x3C,0x67
003180 7465
003181 654e
003182 7774
003183 726f      	.DB  0x65,0x74,0x4E,0x65,0x74,0x77,0x6F,0x72
003184 496b
003185 666e
003186 3e6f
003187 4d20      	.DB  0x6B,0x49,0x6E,0x66,0x6F,0x3E,0x20,0x4D
003188 4b53
003189 3a20
00318a 2520
00318b 2e75      	.DB  0x53,0x4B,0x20,0x3A,0x20,0x25,0x75,0x2E
00318c 7525
00318d 252e
00318e 2e75
00318f 7525      	.DB  0x25,0x75,0x2E,0x25,0x75,0x2E,0x25,0x75
003190 0a0d
003191 3c00
003192 6567
003193 4e74      	.DB  0xD,0xA,0x0,0x3C,0x67,0x65,0x74,0x4E
003194 7465
003195 6f77
003196 6b72
003197 6e49      	.DB  0x65,0x74,0x77,0x6F,0x72,0x6B,0x49,0x6E
003198 6f66
003199 203e
00319a 4744
00319b 2057      	.DB  0x66,0x6F,0x3E,0x20,0x44,0x47,0x57,0x20
00319c 203a
00319d 7525
00319e 252e
00319f 2e75      	.DB  0x3A,0x20,0x25,0x75,0x2E,0x25,0x75,0x2E
0031a0 7525
0031a1 252e
0031a2 0d75
0031a3 000a      	.DB  0x25,0x75,0x2E,0x25,0x75,0xD,0xA,0x0
0031a4 673c
0031a5 7465
0031a6 654e
0031a7 7774      	.DB  0x3C,0x67,0x65,0x74,0x4E,0x65,0x74,0x77
0031a8 726f
0031a9 496b
0031aa 666e
0031ab 3e6f      	.DB  0x6F,0x72,0x6B,0x49,0x6E,0x66,0x6F,0x3E
0031ac 5320
0031ad 5049
0031ae 3a20
0031af 2520      	.DB  0x20,0x53,0x49,0x50,0x20,0x3A,0x20,0x25
0031b0 2e75
0031b1 7525
0031b2 252e
0031b3 2e75      	.DB  0x75,0x2E,0x25,0x75,0x2E,0x25,0x75,0x2E
0031b4 7525
0031b5 0a0d
0031b6 3c00
0031b7 6573      	.DB  0x25,0x75,0xD,0xA,0x0,0x3C,0x73,0x65
0031b8 5f74
0031b9 7276
0031ba 6665
0031bb 203e      	.DB  0x74,0x5F,0x76,0x72,0x65,0x66,0x3E,0x20
0031bc 255b
0031bd 5d64
0031be 255b
0031bf 5d64      	.DB  0x5B,0x25,0x64,0x5D,0x5B,0x25,0x64,0x5D
0031c0 255b
0031c1 5d64
0031c2 2d20
0031c3 203e      	.DB  0x5B,0x25,0x64,0x5D,0x20,0x2D,0x3E,0x20
0031c4 6425
0031c5 2d20
0031c6 203e
0031c7 6625      	.DB  0x25,0x64,0x20,0x2D,0x3E,0x20,0x25,0x66
0031c8 0a0d
0031c9 3c00
0031ca 6572
0031cb 6d63      	.DB  0xD,0xA,0x0,0x3C,0x72,0x65,0x63,0x6D
0031cc 3e70
0031cd 7320
0031ce 6372
0031cf 5b31      	.DB  0x70,0x3E,0x20,0x73,0x72,0x63,0x31,0x5B
0031d0 3025
0031d1 5832
0031d2 205d
0031d3 7273      	.DB  0x25,0x30,0x32,0x58,0x5D,0x20,0x73,0x72
0031d4 3263
0031d5 255b
0031d6 3230
0031d7 5d58      	.DB  0x63,0x32,0x5B,0x25,0x30,0x32,0x58,0x5D
0031d8 7520
0031d9 6573
0031da 5b72
0031db 3025      	.DB  0x20,0x75,0x73,0x65,0x72,0x5B,0x25,0x30
0031dc 5832
0031dd 205d
0031de 6573
0031df 7672      	.DB  0x32,0x58,0x5D,0x20,0x73,0x65,0x72,0x76
0031e0 6369
0031e1 5b65
0031e2 3025
0031e3 5832      	.DB  0x69,0x63,0x65,0x5B,0x25,0x30,0x32,0x58
0031e4 0d5d
0031e5 000a      	.DB  0x5D,0xD,0xA,0x0
                 _0x2E0003:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(4458): warning: .cseg .db misalignment - padding zero byte
0031e6 0009      	.DB  0x9
                 _0x2E0000:
0031e7 6567
0031e8 2074
0031e9 6579
0031ea 7261      	.DB  0x67,0x65,0x74,0x20,0x79,0x65,0x61,0x72
0031eb 3d20
0031ec 2520
0031ed 0d64
0031ee 000a      	.DB  0x20,0x3D,0x20,0x25,0x64,0xD,0xA,0x0
0031ef 6567
0031f0 2074
0031f1 6f6d
0031f2 746e      	.DB  0x67,0x65,0x74,0x20,0x6D,0x6F,0x6E,0x74
0031f3 2068
0031f4 203d
0031f5 6425
0031f6 0a0d      	.DB  0x68,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
0031f7 6700
0031f8 7465
0031f9 6420
0031fa 7461      	.DB  0x0,0x67,0x65,0x74,0x20,0x64,0x61,0x74
0031fb 2065
0031fc 203d
0031fd 6425
0031fe 0a0d      	.DB  0x65,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
0031ff 6700
003200 7465
003201 6820
003202 756f      	.DB  0x0,0x67,0x65,0x74,0x20,0x68,0x6F,0x75
003203 2072
003204 203d
003205 6425
003206 0a0d      	.DB  0x72,0x20,0x3D,0x20,0x25,0x64,0xD,0xA
003207 6700
003208 7465
003209 6d20
00320a 6e69      	.DB  0x0,0x67,0x65,0x74,0x20,0x6D,0x69,0x6E
00320b 3d20
00320c 2520
00320d 0d64
00320e 000a      	.DB  0x20,0x3D,0x20,0x25,0x64,0xD,0xA,0x0
00320f 6567
003210 2074
003211 6573
003212 2063      	.DB  0x67,0x65,0x74,0x20,0x73,0x65,0x63,0x20
003213 203d
003214 6425
003215 0a0d
003216 6700      	.DB  0x3D,0x20,0x25,0x64,0xD,0xA,0x0,0x67
003217 7465
003218 7420
003219 6d69
00321a 7a65      	.DB  0x65,0x74,0x20,0x74,0x69,0x6D,0x65,0x7A
00321b 6e6f
00321c 2065
00321d 203d
00321e 2b25      	.DB  0x6F,0x6E,0x65,0x20,0x3D,0x20,0x25,0x2B
00321f 0d64
003220 000a
003221 0a0d
003222 443c      	.DB  0x64,0xD,0xA,0x0,0xD,0xA,0x3C,0x44
003223 4245
003224 4755
003225 203e
003226 6c41      	.DB  0x45,0x42,0x55,0x47,0x3E,0x20,0x41,0x6C
003227 7261
003228 206d
003229 7453
00322a 7461      	.DB  0x61,0x72,0x6D,0x20,0x53,0x74,0x61,0x74
00322b 7375
00322c 5220
00322d 7365
00322e 7465      	.DB  0x75,0x73,0x20,0x52,0x65,0x73,0x65,0x74
00322f 2e2e
003230 2121
003231 0a0d
003232 3c00      	.DB  0x2E,0x2E,0x21,0x21,0xD,0xA,0x0,0x3C
003233 4544
003234 5542
003235 5f47
003236 6c43      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x43,0x6C
003237 6165
003238 4c72
003239 676f
00323a 6946      	.DB  0x65,0x61,0x72,0x4C,0x6F,0x67,0x46,0x69
00323b 656c
00323c 203e
00323d 6552
00323e 692d      	.DB  0x6C,0x65,0x3E,0x20,0x52,0x65,0x2D,0x69
00323f 696e
003240 6974
003241 7461
003242 2065      	.DB  0x6E,0x69,0x74,0x69,0x61,0x74,0x65,0x20
003243 6f6c
003244 2067
003245 6966
003246 656c      	.DB  0x6C,0x6F,0x67,0x20,0x66,0x69,0x6C,0x65
003247 0a0d
003248 3c00
003249 4544
00324a 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00324b 5f47
00324c 6c43
00324d 6165
00324e 4c72      	.DB  0x47,0x5F,0x43,0x6C,0x65,0x61,0x72,0x4C
00324f 676f
003250 6946
003251 656c
003252 203e      	.DB  0x6F,0x67,0x46,0x69,0x6C,0x65,0x3E,0x20
003253 4f4c
003254 5f47
003255 7263
003256 6165      	.DB  0x4C,0x4F,0x47,0x5F,0x63,0x72,0x65,0x61
003257 6574
003258 6946
003259 656c
00325a 2528      	.DB  0x74,0x65,0x46,0x69,0x6C,0x65,0x28,0x25
00325b 2973
00325c 6620
00325d 6961
00325e 656c      	.DB  0x73,0x29,0x20,0x66,0x61,0x69,0x6C,0x65
00325f 0d64
003260 000a
003261 443c
003262 4245      	.DB  0x64,0xD,0xA,0x0,0x3C,0x44,0x45,0x42
003263 4755
003264 735f
003265 7465
003266 6552      	.DB  0x55,0x47,0x5F,0x73,0x65,0x74,0x52,0x65
003267 6c61
003268 7256
003269 6665
00326a 203e      	.DB  0x61,0x6C,0x56,0x72,0x65,0x66,0x3E,0x20
00326b 6567
00326c 2074
00326d 6573
00326e 2074      	.DB  0x67,0x65,0x74,0x20,0x73,0x65,0x74,0x20
00326f 7256
003270 6665
003271 733c
003272 7274      	.DB  0x56,0x72,0x65,0x66,0x3C,0x73,0x74,0x72
003273 6e69
003274 3e67
003275 2520
003276 0d73      	.DB  0x69,0x6E,0x67,0x3E,0x20,0x25,0x73,0xD
003277 000a
003278 443c
003279 4245
00327a 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
00327b 735f
00327c 7465
00327d 6552
00327e 6c61      	.DB  0x5F,0x73,0x65,0x74,0x52,0x65,0x61,0x6C
00327f 7256
003280 6665
003281 203e
003282 6641      	.DB  0x56,0x72,0x65,0x66,0x3E,0x20,0x41,0x66
003283 6574
003284 2072
003285 6f63
003286 766e      	.DB  0x74,0x65,0x72,0x20,0x63,0x6F,0x6E,0x76
003287 7265
003288 2074
003289 203d
00328a 6625      	.DB  0x65,0x72,0x74,0x20,0x3D,0x20,0x25,0x66
00328b 0a0d
00328c 3c00
00328d 4544
00328e 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00328f 5f47
003290 6573
003291 736e
003292 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
003293 6553
003294 656c
003295 7463
003296 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
003297 6854
003298 7369
003299 5420
00329a 4d45      	.DB  0x54,0x68,0x69,0x73,0x20,0x54,0x45,0x4D
00329b 5f50
00329c 4553
00329d 204c
00329e 6f6e      	.DB  0x50,0x5F,0x53,0x45,0x4C,0x20,0x6E,0x6F
00329f 2074
0032a0 7573
0032a1 7070
0032a2 726f      	.DB  0x74,0x20,0x73,0x75,0x70,0x70,0x6F,0x72
0032a3 0d74
0032a4 0d0a
0032a5 000a
0032a6 443c      	.DB  0x74,0xD,0xA,0xD,0xA,0x0,0x3C,0x44
0032a7 4245
0032a8 4755
0032a9 735f
0032aa 6e65      	.DB  0x45,0x42,0x55,0x47,0x5F,0x73,0x65,0x6E
0032ab 6f73
0032ac 5372
0032ad 6c65
0032ae 6365      	.DB  0x73,0x6F,0x72,0x53,0x65,0x6C,0x65,0x63
0032af 3e74
0032b0 4420
0032b1 7365
0032b2 6c65      	.DB  0x74,0x3E,0x20,0x44,0x65,0x73,0x65,0x6C
0032b3 6365
0032b4 2074
0032b5 6573
0032b6 736e      	.DB  0x65,0x63,0x74,0x20,0x73,0x65,0x6E,0x73
0032b7 726f
0032b8 0a0d
0032b9 0a0d
0032ba 3c00      	.DB  0x6F,0x72,0xD,0xA,0xD,0xA,0x0,0x3C
0032bb 4544
0032bc 5542
0032bd 5f47
0032be 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
0032bf 736e
0032c0 726f
0032c1 6553
0032c2 656c      	.DB  0x6E,0x73,0x6F,0x72,0x53,0x65,0x6C,0x65
0032c3 7463
0032c4 203e
0032c5 6553
0032c6 656c      	.DB  0x63,0x74,0x3E,0x20,0x53,0x65,0x6C,0x65
0032c7 7463
0032c8 6465
0032c9 7320
0032ca 6e65      	.DB  0x63,0x74,0x65,0x64,0x20,0x73,0x65,0x6E
0032cb 6f73
0032cc 2072
0032cd 6425
0032ce 0a0d      	.DB  0x73,0x6F,0x72,0x20,0x25,0x64,0xD,0xA
0032cf 0a0d
0032d0 3c00
0032d1 4544
0032d2 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
0032d3 5f47
0032d4 6573
0032d5 736e
0032d6 726f      	.DB  0x47,0x5F,0x73,0x65,0x6E,0x73,0x6F,0x72
0032d7 6553
0032d8 656c
0032d9 7463
0032da 203e      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x3E,0x20
0032db 5245
0032dc 4f52
0032dd 2052
0032de 203a      	.DB  0x45,0x52,0x52,0x4F,0x52,0x20,0x3A,0x20
0032df 6553
0032e0 656c
0032e1 7463
0032e2 6e69      	.DB  0x53,0x65,0x6C,0x65,0x63,0x74,0x69,0x6E
0032e3 2067
0032e4 6573
0032e5 736e
0032e6 726f      	.DB  0x67,0x20,0x73,0x65,0x6E,0x73,0x6F,0x72
0032e7 5b20
0032e8 6325
0032e9 5b5d
0032ea 7830      	.DB  0x20,0x5B,0x25,0x63,0x5D,0x5B,0x30,0x78
0032eb 3025
0032ec 5832
0032ed 0d5d
0032ee 0d0a      	.DB  0x25,0x30,0x32,0x58,0x5D,0xD,0xA,0xD
0032ef 000a
0032f0 443c
0032f1 4245
0032f2 4755      	.DB  0xA,0x0,0x3C,0x44,0x45,0x42,0x55,0x47
0032f3 735f
0032f4 7465
0032f5 6553
0032f6 6972      	.DB  0x5F,0x73,0x65,0x74,0x53,0x65,0x72,0x69
0032f7 6c61
0032f8 754e
0032f9 626d
0032fa 7265      	.DB  0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65,0x72
0032fb 203e
0032fc 6e69
0032fd 6176
0032fe 696c      	.DB  0x3E,0x20,0x69,0x6E,0x76,0x61,0x6C,0x69
0032ff 2064
003300 6573
003301 7474
003302 6e69      	.DB  0x64,0x20,0x73,0x65,0x74,0x74,0x69,0x6E
003303 2067
003304 7473
003305 6972
003306 676e      	.DB  0x67,0x20,0x73,0x74,0x72,0x69,0x6E,0x67
003307 2820
003308 6325
003309 5b29
00330a 7830      	.DB  0x20,0x28,0x25,0x63,0x29,0x5B,0x30,0x78
00330b 3025
00330c 5d32
00330d 0a0d
00330e 3c00      	.DB  0x25,0x30,0x32,0x5D,0xD,0xA,0x0,0x3C
00330f 4544
003310 5542
003311 5f47
003312 6573      	.DB  0x44,0x45,0x42,0x55,0x47,0x5F,0x73,0x65
003313 5374
003314 7265
003315 6169
003316 4e6c      	.DB  0x74,0x53,0x65,0x72,0x69,0x61,0x6C,0x4E
003317 6d75
003318 6562
003319 3e72
00331a 5220      	.DB  0x75,0x6D,0x62,0x65,0x72,0x3E,0x20,0x52
00331b 7065
00331c 616c
00331d 6963
00331e 676e      	.DB  0x65,0x70,0x6C,0x61,0x63,0x69,0x6E,0x67
00331f 4420
003320 5645
003321 4349
003322 5f45      	.DB  0x20,0x44,0x45,0x56,0x49,0x43,0x45,0x5F
003323 4553
003324 4952
003325 4c41
003326 2e2e      	.DB  0x53,0x45,0x52,0x49,0x41,0x4C,0x2E,0x2E
003327 0a0d
003328 3c00
003329 4544
00332a 5542      	.DB  0xD,0xA,0x0,0x3C,0x44,0x45,0x42,0x55
00332b 5f47
00332c 6573
00332d 5374
00332e 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
00332f 6169
003330 4e6c
003331 6d75
003332 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
003333 3e72
003334 5320
003335 7465
003336 5320      	.DB  0x72,0x3E,0x20,0x53,0x65,0x74,0x20,0x53
003337 7274
003338 6e69
003339 2067
00333a 2d2d      	.DB  0x74,0x72,0x69,0x6E,0x67,0x20,0x2D,0x2D
00333b 203e
00333c 5b00
00333d 6325
00333e 2500      	.DB  0x3E,0x20,0x0,0x5B,0x25,0x63,0x0,0x25
00333f 5d63
003340 3c00
003341 4544
003342 5542      	.DB  0x63,0x5D,0x0,0x3C,0x44,0x45,0x42,0x55
003343 5f47
003344 6573
003345 5374
003346 7265      	.DB  0x47,0x5F,0x73,0x65,0x74,0x53,0x65,0x72
003347 6169
003348 4e6c
003349 6d75
00334a 6562      	.DB  0x69,0x61,0x6C,0x4E,0x75,0x6D,0x62,0x65
00334b 3e72
00334c 5320
00334d 6375
00334e 6563      	.DB  0x72,0x3E,0x20,0x53,0x75,0x63,0x63,0x65
00334f 7373
003350 2121
003351 4420
003352 5645      	.DB  0x73,0x73,0x21,0x21,0x20,0x44,0x45,0x56
003353 535f
003354 5245
003355 4149
003356 204c      	.DB  0x5F,0x53,0x45,0x52,0x49,0x41,0x4C,0x20
003357 3d3d
003358 203e
003359 5b00
00335a 3025      	.DB  0x3D,0x3D,0x3E,0x20,0x0,0x5B,0x25,0x30
00335b 5832
00335c 005d
00335d 443c
00335e 4245      	.DB  0x32,0x58,0x5D,0x0,0x3C,0x44,0x45,0x42
00335f 4755
003360 725f
003361 6165
003362 5364      	.DB  0x55,0x47,0x5F,0x72,0x65,0x61,0x64,0x53
003363 7265
003364 6169
003365 4e6c
003366 6d75      	.DB  0x65,0x72,0x69,0x61,0x6C,0x4E,0x75,0x6D
003367 6562
003368 3e72
003369 4420
00336a 5645      	.DB  0x62,0x65,0x72,0x3E,0x20,0x44,0x45,0x56
00336b 535f
00336c 5245
00336d 4149
00336e 204c      	.DB  0x5F,0x53,0x45,0x52,0x49,0x41,0x4C,0x20
00336f 3d3d
003370 203e
003371 4700
003372 7465      	.DB  0x3D,0x3D,0x3E,0x20,0x0,0x47,0x65,0x74
003373 4420
003374 6265
003375 6775
003376 5220      	.DB  0x20,0x44,0x65,0x62,0x75,0x67,0x20,0x52
003377 7165
003378 3a2e
003379 2500
00337a 3530      	.DB  0x65,0x71,0x2E,0x3A,0x0,0x25,0x30,0x35
00337b 2064
00337c 2020
00337d 2500
00337e 3230      	.DB  0x64,0x20,0x20,0x20,0x0,0x25,0x30,0x32
00337f 2078
003380 2e00
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(4562): warning: .cseg .db misalignment - padding zero byte
003381 0000      	.DB  0x78,0x20,0x0,0x2E,0x0
                 _0x300003:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(4564): warning: .cseg .db misalignment - padding zero byte
003382 0003      	.DB  0x3
                 _0x300000:
003383 0a0d
003384 673c
003385 7561
003386 7373      	.DB  0xD,0xA,0x3C,0x67,0x61,0x75,0x73,0x73
003387 6169
003388 3e6e
003389 2d20
00338a 2d2d      	.DB  0x69,0x61,0x6E,0x3E,0x20,0x2D,0x2D,0x2D
00338b 7320
00338c 6174
00338d 7472
00338e 2d20      	.DB  0x20,0x73,0x74,0x61,0x72,0x74,0x20,0x2D
00338f 2d2d
003390 0a0d
003391 0900
003392 0009      	.DB  0x2D,0x2D,0xD,0xA,0x0,0x9,0x9,0x0
003393 2e25
003394 6632
003395 0009
003396 0a0d      	.DB  0x25,0x2E,0x32,0x66,0x9,0x0,0xD,0xA
003397 673c
003398 7561
003399 7373
00339a 6169      	.DB  0x3C,0x67,0x61,0x75,0x73,0x73,0x69,0x61
00339b 3e6e
00339c 2d20
00339d 2d2d
00339e 6620      	.DB  0x6E,0x3E,0x20,0x2D,0x2D,0x2D,0x20,0x66
00339f 6e69
0033a0 7369
0033a1 2068
0033a2 2d2d      	.DB  0x69,0x6E,0x69,0x73,0x68,0x20,0x2D,0x2D
0033a3 0d2d
0033a4 000a
0033a5 0a0d
0033a6 673c      	.DB  0x2D,0xD,0xA,0x0,0xD,0xA,0x3C,0x67
0033a7 7561
0033a8 7373
0033a9 6169
0033aa 3e6e      	.DB  0x61,0x75,0x73,0x73,0x69,0x61,0x6E,0x3E
0033ab 7920
0033ac 3d20
0033ad 2520
0033ae 2866      	.DB  0x20,0x79,0x20,0x3D,0x20,0x25,0x66,0x28
0033af 5e78
0033b0 2932
0033b1 2b20
0033b2 2520      	.DB  0x78,0x5E,0x32,0x29,0x20,0x2B,0x20,0x25
0033b3 2866
0033b4 2978
0033b5 2b20
0033b6 2520      	.DB  0x66,0x28,0x78,0x29,0x20,0x2B,0x20,0x25
0033b7 0d66
0033b8 000a      	.DB  0x66,0xD,0xA,0x0
                 _0x2000060:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(4581): warning: .cseg .db misalignment - padding zero byte
0033b9 0001      	.DB  0x1
                 _0x2000000:
0033ba 4e2d
0033bb 4e41
0033bc 4900
0033bd 464e      	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(4584): warning: .cseg .db misalignment - padding zero byte
0033be 0000      	.DB  0x0
                 _0x2040003:
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(4586): warning: .cseg .db misalignment - padding zero byte
0033bf 0001      	.DB  0x1
                 _0x2080000:
0033c0 4e2d
0033c1 4e41
D:\Work\WorkSpace\AVR Project\FirmwareIMS\iNT_ETH_CLOUD_TMEC_v02\List\iNT_ETH.asm(4588): warning: .cseg .db misalignment - padding zero byte
0033c2 0000      	.DB  0x2D,0x4E,0x41,0x4E,0x0
                 
                 __GLOBAL_INI_TBL:
0033c3 0004      	.DW  0x04
0033c4 1d8a      	.DW  0x1D8A
0033c5 01fe 0000 	.DD  __HEAP_START_MARKER*2
                 
0033c7 0004      	.DW  0x04
0033c8 14e0      	.DW  _ETH_rst_timer_S0000001000
0033c9 021c 0000 	.DD  _0xA5*2
                 
0033cb 002b      	.DW  0x2B
0033cc 0cf0      	.DW  _0x40009
0033cd 1086 0000 	.DD  _0x40000*2
                 
0033cf 0026      	.DW  0x26
0033d0 0d1b      	.DW  _0x40009+43
0033d1 10b1 0000 	.DD  _0x40000*2+43
                 
0033d3 002b      	.DW  0x2B
0033d4 0d41      	.DW  _0x40009+81
0033d5 1086 0000 	.DD  _0x40000*2
                 
0033d7 0002      	.DW  0x02
0033d8 1434      	.DW  _d_out
0033d9 115e 0000 	.DD  _0x80003*2
                 
0033db 0001      	.DW  0x01
0033dc 10f6      	.DW  _is_properties_config_update
0033dd 12c8 0000 	.DD  _0xE0003*2
                 
0033df 0001      	.DW  0x01
0033e0 10f7      	.DW  _is_operating_config_update
0033e1 12ca 0000 	.DD  _0xE0004*2
                 
0033e3 0005      	.DW  0x05
0033e4 10f8      	.DW  _is_sensor_config_update
0033e5 12cc 0000 	.DD  _0xE0005*2
                 
0033e7 0010      	.DW  0x10
0033e8 10fd      	.DW  _is_din_config_update
0033e9 12d2 0000 	.DD  _0xE0006*2
                 
0033eb 0005      	.DW  0x05
0033ec 110d      	.DW  _is_dout_config_update
0033ed 12e2 0000 	.DD  _0xE0007*2
                 
0033ef 0001      	.DW  0x01
0033f0 1112      	.DW  _is_buzzer_config_update
0033f1 12e8 0000 	.DD  _0xE0008*2
                 
0033f3 0001      	.DW  0x01
0033f4 1113      	.DW  _is_status_config_update
0033f5 12ea 0000 	.DD  _0xE0009*2
                 
0033f7 0001      	.DW  0x01
0033f8 1114      	.DW  _is_env_config_update
0033f9 12ec 0000 	.DD  _0xE000A*2
                 
0033fb 0002      	.DW  0x02
0033fc 0d6c      	.DW  _0x1200D0
0033fd 324c 0000 	.DD  _0x120000*2+4850
                 
0033ff 0003      	.DW  0x03
003400 0007      	.DW  0x07
003401 42d2 0000 	.DD  _0x18001D*2
                 
003403 0005      	.DW  0x05
003404 1564      	.DW  _lastCheck_S00D0001000
003405 4402 0000 	.DD  _0x1A0012*2
                 
003407 0004      	.DW  0x04
003408 000a      	.DW  0x0A
003409 48be 0000 	.DD  _0x1C0005*2
                 
00340b 0002      	.DW  0x02
00340c 147c      	.DW  _dinStatus
00340d 48c2 0000 	.DD  _0x1E0003*2
                 
00340f 0002      	.DW  0x02
003410 147e      	.DW  _doutStatus
003411 48c4 0000 	.DD  _0x1E0004*2
                 
003413 0001      	.DW  0x01
003414 1480      	.DW  _serverCommStatus
003415 48c6 0000 	.DD  _0x1E0005*2
                 
003417 0002      	.DW  0x02
003418 1600      	.DW  _lastDinCheck_S00F0006000
003419 48c8 0000 	.DD  _0x1E003A*2
                 
00341b 0010      	.DW  0x10
00341c 1496      	.DW  _dinAlarm
00341d 4a08 0000 	.DD  _0x220003*2
                 
00341f 0010      	.DW  0x10
003420 1682      	.DW  _ainAlarm
003421 4a18 0000 	.DD  _0x220004*2
                 
003423 0001      	.DW  0x01
003424 169c      	.DW  _lastCheck_S0110003000
003425 4a28 0000 	.DD  _0x2200A8*2
                 
003427 0001      	.DW  0x01
003428 16a2      	.DW  _lastCheck_S0110004000
003429 4a2a 0000 	.DD  _0x2200B1*2
                 
00342b 0002      	.DW  0x02
00342c 16b2      	.DW  _lastCheck_S0110006000
00342d 4a2c 0000 	.DD  _0x2200C5*2
                 
00342f 0005      	.DW  0x05
003430 16cd      	.DW  _lastCheck_S0110007000
003431 4a2e 0000 	.DD  _0x2200CF*2
                 
003433 0004      	.DW  0x04
003434 1487      	.DW  _muteAlarmExpired
003435 4a34 0000 	.DD  _0x2200DD*2
                 
003437 0001      	.DW  0x01
003438 0006      	.DW  0x06
003439 4a38 0000 	.DD  _0x2200F6*2
                 
00343b 0003      	.DW  0x03
00343c 191f      	.DW  _root_path
00343d 4ce2 0000 	.DD  _0x260003*2
                 
00343f 0008      	.DW  0x08
003440 14a8      	.DW  _LOGFILE_DATA
003441 51bc 0000 	.DD  _0x280003*2
                 
003443 0009      	.DW  0x09
003444 14b1      	.DW  _LOGFILE_EVENT
003445 51c4 0000 	.DD  _0x280004*2
                 
003447 0009      	.DW  0x09
003448 14bb      	.DW  _LOGFILE_ERROR
003449 51ce 0000 	.DD  _0x280005*2
                 
00344b 0010      	.DW  0x10
00344c 14c5      	.DW  _LOG_INIT_STR
00344d 51d8 0000 	.DD  _0x280006*2
                 
00344f 0004      	.DW  0x04
003450 14d5      	.DW  _LOG_openFile
003451 51e8 0000 	.DD  _0x280007*2
                 
003453 0004      	.DW  0x04
003454 14d9      	.DW  _LOG_closeFile
003455 51ec 0000 	.DD  _0x280008*2
                 
003457 0001      	.DW  0x01
003458 10f4      	.DW  _hwCalId
003459 63cc 0000 	.DD  _0x2E0003*2
                 
00345b 0001      	.DW  0x01
00345c 1a71      	.DW  _n
00345d 6704 0000 	.DD  _0x300003*2
                 
00345f 0001      	.DW  0x01
003460 1aa3      	.DW  __seed_G100
003461 6772 0000 	.DD  _0x2000060*2
                 
003463 0001      	.DW  0x01
003464 1aa7      	.DW  _status_G102
003465 677e 0000 	.DD  _0x2040003*2
                 
                 _0xFFFFFFFF:
003467 0000      	.DW  0
                 
                 __RESET:
003468 94f8      	CLI
003469 27ee      	CLR  R30
00346a bbef      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00346b e0f1      	LDI  R31,1
00346c bff5      	OUT  MCUCR,R31
00346d bfe5      	OUT  MCUCR,R30
00346e 93e0 0074 	STS  XMCRA,R30
003470 93e0 0075 	STS  XMCRB,R30
                 
                 ;DISABLE WATCHDOG
003472 e1f8      	LDI  R31,0x18
003473 95a8      	WDR
003474 b7a4      	IN   R26,MCUSR
003475 7fa7      	CBR  R26,8
003476 bfa4      	OUT  MCUSR,R26
003477 93f0 0060 	STS  WDTCSR,R31
003479 93e0 0060 	STS  WDTCSR,R30
                 
                 ;CLEAR R2-R14
00347b e08d      	LDI  R24,(14-2)+1
00347c e0a2      	LDI  R26,2
00347d 27bb      	CLR  R27
                 __CLEAR_REG:
00347e 93ed      	ST   X+,R30
00347f 958a      	DEC  R24
003480 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
003481 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
003482 e290      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
003483 e0a0      	LDI  R26,LOW(__SRAM_START)
003484 e0b2      	LDI  R27,HIGH(__SRAM_START)
                 __CLEAR_SRAM:
003485 93ed      	ST   X+,R30
003486 9701      	SBIW R24,1
003487 f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
003488 e8e6      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
003489 e6f7      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
00348a e0d0      	LDI  R29,BYTE3(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
00348b bfdb      	OUT  RAMPZ,R29
00348c 9187      	ELPM R24,Z+
00348d 9197      	ELPM R25,Z+
00348e 9700      	SBIW R24,0
00348f f081      	BREQ __GLOBAL_INI_END
003490 91a7      	ELPM R26,Z+
003491 91b7      	ELPM R27,Z+
003492 9007      	ELPM R0,Z+
003493 9017      	ELPM R1,Z+
003494 91c7      	ELPM R28,Z+
003495 91d7      	ELPM R29,Z+
003496 01bf      	MOVW R22,R30
003497 b7db      	IN   R29,RAMPZ
003498 01f0      	MOVW R30,R0
003499 bfcb      	OUT  RAMPZ,R28
                 __GLOBAL_INI_LOOP:
00349a 9007      	ELPM R0,Z+
00349b 920d      	ST   X+,R0
00349c 9701      	SBIW R24,1
00349d f7e1      	BRNE __GLOBAL_INI_LOOP
00349e 01fb      	MOVW R30,R22
00349f cfeb      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;GPIOR0 INITIALIZATION
0034a0 e0e0      	LDI  R30,__GPIOR0_INIT
0034a1 bbee      	OUT  GPIOR0,R30
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
0034a2 e8e9      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
0034a3 bfed      	OUT  SPL,R30
0034a4 e1ed      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
0034a5 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
0034a6 efc0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
0034a7 e0dc      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
0034a8 940c 34aa 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0xCF0
                 
                 	.CSEG
                 ;/*****************************************************
                 ;Project : COMM-ETH : 0.01a
                 ;Date    : 17/7/2012
                 ;Author  : Tawan Srisang
                 ;Company : Intelenics Co.,Ltd.
                 ;Comments:
                 ;Version Format : 1Major.2Minor.1Edition
                 ;
                 ;
                 ;Chip type               : ATmega2560
                 ;Program type            : Application
                 ;AVR Core Clock frequency: 8.000000 MHz
                 ;*****************************************************/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x01
                 	.EQU __sm_mask=0x0E
                 	.EQU __sm_powerdown=0x04
                 	.EQU __sm_powersave=0x06
                 	.EQU __sm_standby=0x0C
                 	.EQU __sm_ext_standby=0x0E
                 	.EQU __sm_adc_noise_red=0x02
                 	.SET power_ctrl_reg=smcr
                 	#endif
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ims_eth_header.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "ds1672.h"
                 ;#include "sensor.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "dataqueue.h"
                 ;#include "eventqueue.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "oled.h"
                 ;#include "menu.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "gaussian.h"
                 ;
                 ;#include "uart.h"
                 ;#include <stdio.h>
                 ;
                 ;#define MAX(a,b)                (((a) > (b)) ? (a) : (b))
                 ;#define MIN(a,b)                (((a) < (b)) ? (a) : (b))
                 ;//#define RANDOM(a,b)             ((rand() % (MAX(a,b) - MIN(a,b))) + MIN(a,b))
                 ;
                 ;#define PERIOD_CHECK_MEMORY     300
                 ;
                 ;// I2C Bus functions (for INT-AVXB-00-04)
                 ;#asm
                    .equ __i2c_port=0x0B ;PORTD
                    .equ __sda_bit=1
                    .equ __scl_bit=0
                 ; 0000 0031 #endasm
                 ;
                 ;//unsigned char FIRMWARE_VERSION[] = "COMM-ETH-0.01a";
                 ;
                 ;int updateStatus(void);
                 ;int eventCapture(void);
                 ;int statusReport(void);
                 ;int sensorDataReport(void);
                 ;int eventReport(void);
                 ;int sensorDataSave(void);
                 ;int eventSave(void);
                 ;int logReport(void);
                 ;extern void updateSensorADC(int ch);
                 ;
                 ;/*============================================================*/
                 ;void main(void)
                 ; 0000 0041 {
                 
                 	.CSEG
                 _main:
                 ; 0000 0042     int                     err,i=0,k=0,res,last_status;
                 ; 0000 0043 
                 ; 0000 0044     TIMER                   sensor_report_timer[5];
                 ; 0000 0045     TIMER                   status_report_timer;
                 ; 0000 0046     TIMER                   check_reset_timer;
                 ; 0000 0047     TIMER                   check_memory_timer;
                 ; 0000 0048     TIMER                   clear_duplicate_timer = 0;
                 ; 0000 0049     TIMER                   readSensorTimer = 0;
                 ; 0000 004A     unsigned long int       timestamp_rd;
                 ; 0000 004B 
                 ; 0000 004C     char                    key_press = 0;
                 ; 0000 004D 
                 ; 0000 004E     float tmpA = 0.0;
                 ; 0000 004F     float tmpB = 0.0;
                 ; 0000 0050     float tmpC = 0.0;
                 ; 0000 0051 
                 ; 0000 0052     struct rtc_structure st_rtc;
                 ; 0000 0053 
                 ; 0000 0054     // -------- System Initialize ----------- //
                 ; 0000 0055     do{ err = initial_system();  }while(err);
0034aa 97ef      	SBIW R28,63
0034ab 9768      	SBIW R28,24
0034ac e189      	LDI  R24,25
0034ad e1aa      	LDI  R26,LOW(26)
0034ae e0b0      	LDI  R27,HIGH(26)
0034af e0e2      	LDI  R30,LOW(_0x3*2)
0034b0 e0f2      	LDI  R31,HIGH(_0x3*2)
0034b1 e060      	LDI  R22,BYTE3(_0x3*2)
0034b2 940e daa7 	CALL __INITLOCB
                 ;	err -> R16,R17
                 ;	i -> R18,R19
                 ;	k -> R20,R21
                 ;	res -> Y+85
                 ;	last_status -> Y+83
                 ;	sensor_report_timer -> Y+63
                 ;	status_report_timer -> Y+59
                 ;	check_reset_timer -> Y+55
                 ;	check_memory_timer -> Y+51
                 ;	clear_duplicate_timer -> Y+47
                 ;	readSensorTimer -> Y+43
                 ;	timestamp_rd -> Y+39
                 ;	key_press -> Y+38
                 ;	tmpA -> Y+34
                 ;	tmpB -> Y+30
                 ;	tmpC -> Y+26
                 ;	st_rtc -> Y+0
0034b4 940e bba6 	CALL SUBOPT_0x0
                 _0x5:
0034b6 940e 3d31 	CALL _initial_system
0034b8 018f      	MOVW R16,R30
0034b9 2e00      	MOV  R0,R16
0034ba 2a01      	OR   R0,R17
0034bb f7d1      	BRNE _0x5
                 ; 0000 0056 
                 ; 0000 0057     //ETH_CONF;
                 ; 0000 0058 
                 ; 0000 0059     ETH_switchMode((unsigned char) MODE_NORM);
0034bc e8a0      	LDI  R26,LOW(128)
0034bd 940e 5d19 	CALL _ETH_switchMode
                 ; 0000 005A     //ETH_NORM;
                 ; 0000 005B    // ETH_reset();
                 ; 0000 005C    // ETH_OFF;
                 ; 0000 005D    // delay_ms(2000);
                 ; 0000 005E    // ETH_ON;
                 ; 0000 005F 
                 ; 0000 0060     // -- alarm indicator initialize -- //
                 ; 0000 0061     buzzer_on = 0;          // -- buzzer off -- //
0034bf 98f3      	CBI  0x1E,3
                 ; 0000 0062     for(k=0;k<2;k++)        // -- MAX_DO_CHANNEL
                +
0034c0 e040     +LDI R20 , LOW ( 0 )
0034c1 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0xA:
                +
0034c2 3042     +CPI R20 , LOW ( 2 )
0034c3 e0e0     +LDI R30 , HIGH ( 2 )
0034c4 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
0034c5 f44c      	BRGE _0xB
                 ; 0000 0063     {
                 ; 0000 0064         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
0034c6 940e bbab 	CALL SUBOPT_0x1
0034c8 940e bbb5 	CALL SUBOPT_0x2
0034ca 940e 4205 	CALL _IO_dout
                 ; 0000 0065     }
                +
0034cc 5f4f     +SUBI R20 , LOW ( - 1 )
0034cd 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0034ce cff3      	RJMP _0xA
                 _0xB:
                 ; 0000 0066 
                 ; 0000 0067     initDataLogQueue();
0034cf 940e 8386 	CALL _initDataLogQueue
                 ; 0000 0068     initEventLogQueue();
0034d1 940e 845c 	CALL _initEventLogQueue
                 ; 0000 0069     ETH_initWaitQueue();
0034d3 940e 68fc 	CALL _ETH_initWaitQueue
                 ; 0000 006A 
                 ; 0000 006B     printDebug("\r\n------ Initial Complete ------\r\n");
                +
0034d5 e2e0     +LDI R30 , LOW ( 2 * _0x0 + ( 0 ) )
0034d6 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 0 ) )
0034d7 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 0 ) )
0034d8 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 0 ) )
                 	__POINTD1FN _0x0,0
0034d9 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 006C     printDebug("Contact : contact.tawan@gmail.com\r\n");
                +
0034db e4e3     +LDI R30 , LOW ( 2 * _0x0 + ( 35 ) )
0034dc e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 35 ) )
0034dd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 35 ) )
0034de e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 35 ) )
                 	__POINTD1FN _0x0,35
0034df 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 006D 
                 ; 0000 006E 
                 ; 0000 006F     //while(1){ printDebug("<main> TEMP_SEL = 0x%02X\r",TEMP_SEL);    delay_ms(100);   #asm("wdr")}
                 ; 0000 0070 
                 ; 0000 0071     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
0034e1 e020     +LDI R18 , LOW ( 0 )
0034e2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xD:
                +
0034e3 3025     +CPI R18 , LOW ( 5 )
0034e4 e0e0     +LDI R30 , HIGH ( 5 )
0034e5 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0034e6 f444      	BRGE _0xE
                 ; 0000 0072         if(operating_config.sensorEnable[i]){
0034e7 940e bbc1 	CALL SUBOPT_0x4
0034e9 f011      	BREQ _0xF
                 ; 0000 0073             TIMER_setTimer(&sensor_report_timer[i], 5);
0034ea 940e bbc8 	CALL SUBOPT_0x5
                 ; 0000 0074         }
                 ; 0000 0075     }
                 _0xF:
                +
0034ec 5f2f     +SUBI R18 , LOW ( - 1 )
0034ed 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0034ee cff4      	RJMP _0xD
                 _0xE:
                 ; 0000 0076 
                 ; 0000 0077 //    gaussian(271.8683, 392.0240, 489.2156,
                 ; 0000 0078 //                 -90, -20, 50,
                 ; 0000 0079 //                 &tmpA, &tmpB, &tmpC);
                 ; 0000 007A //
                 ; 0000 007B //    printDebug("<main> --A--> %f\r\n", tmpA);
                 ; 0000 007C //    printDebug("<main> --B--> %f\r\n", tmpB);
                 ; 0000 007D //    printDebug("<main> --C--> %f\r\n", tmpC);
                 ; 0000 007E 
                 ; 0000 007F     TIMER_setTimer(&status_report_timer, 7);
0034ef 940e bbd7 	CALL SUBOPT_0x6
                 ; 0000 0080     TIMER_setTimer(&check_reset_timer, 60);
0034f1 940e bbe1 	CALL SUBOPT_0x7
                 ; 0000 0081     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
0034f3 940e bbeb 	CALL SUBOPT_0x8
                 ; 0000 0082 
                 ; 0000 0083     while(1){
                 _0x10:
                 ; 0000 0084 
                 ; 0000 0085         #asm("wdr")
0034f5 95a8      	wdr
                 ; 0000 0086 
                 ; 0000 0087         // Reset at 05.00 in every day
                 ; 0000 0088         if(TIMER_checkTimerExceed(check_reset_timer))
                +
0034f6 a9af     +LDD R26 , Y + 55
0034f7 adb8     +LDD R27 , Y + 55 + 1
0034f8 ad89     +LDD R24 , Y + 55 + 2
0034f9 ad9a     +LDD R25 , Y + 55 + 3
                 	__GETD2S 55
0034fa 940e 405d 	CALL _TIMER_checkTimerExceed
0034fc 9730      	SBIW R30,0
0034fd f0c1      	BREQ _0x13
                 ; 0000 0089         {
                 ; 0000 008A             TIMER_setTimer(&check_reset_timer, 60);
0034fe 940e bbe1 	CALL SUBOPT_0x7
                 ; 0000 008B             RTC_getDateTime(&st_rtc, 7);
003500 940e bbf5 	CALL SUBOPT_0x9
003502 940e bbf9 	CALL SUBOPT_0xA
003504 940e 4700 	CALL _RTC_getDateTime
                 ; 0000 008C //            printRTC(st_rtc);
                 ; 0000 008D             if(st_rtc.hour == 5) {
003506 940e bbfc 	CALL SUBOPT_0xB
                +
003508 30a5     +CPI R26 , LOW ( 0x5 )
003509 e0e0     +LDI R30 , HIGH ( 0x5 )
00350a 07be     +CPC R27 , R30
00350b e0e0     +LDI R30 , BYTE3 ( 0x5 )
00350c 078e     +CPC R24 , R30
00350d e0e0     +LDI R30 , BYTE4 ( 0x5 )
00350e 079e     +CPC R25 , R30
                 	__CPD2N 0x5
00350f f431      	BRNE _0x14
                 ; 0000 008E                 if(st_rtc.min == 0) {
003510 940e bc01 	CALL SUBOPT_0xC
003512 940e da7d 	CALL __CPD10
003514 f409      	BRNE _0x15
                 ; 0000 008F                     while(1);
                 _0x16:
003515 cfff      	RJMP _0x16
                 ; 0000 0090                 }
                 ; 0000 0091             }
                 _0x15:
                 ; 0000 0092         }
                 _0x14:
                 ; 0000 0093 
                 ; 0000 0094         // ----------- Received Debug Request ---------- //
                 ; 0000 0095         if(flag_PackageTerminate3){    debug_req();     }
                 _0x13:
003516 91e0 0d6e 	LDS  R30,_flag_PackageTerminate3
003518 30e0      	CPI  R30,0
003519 f011      	BREQ _0x19
00351a 940e 9a64 	CALL _debug_req
                 ; 0000 0096 
                 ; 0000 0097         // ----------- On Device Key Press ------------- //
                 ; 0000 0098         key_press = IO_keyCheck();
                 _0x19:
00351c 940e 4222 	CALL _IO_keyCheck
00351e a3ee      	STD  Y+38,R30
                 ; 0000 0099         if(key_press){
00351f 30e0      	CPI  R30,0
003520 f019      	BREQ _0x1A
                 ; 0000 009A             MENU_processKey(key_press);
003521 a1ae      	LDD  R26,Y+38
003522 940e 846e 	CALL _MENU_processKey
                 ; 0000 009B         }
                 ; 0000 009C 
                 ; 0000 009D         // ----------- Ethernet Communication ---------- //
                 ; 0000 009E         ETH_receive();
                 _0x1A:
003524 940e 5bcf 	CALL _ETH_receive
                 ; 0000 009F         ETH_retransmit();
003526 940e 5615 	CALL _ETH_retransmit
                 ; 0000 00A0 
                 ; 0000 00A1         // ----- check if configuration(s) has been updated ----- //
                 ; 0000 00A2         if(is_properties_config_update){
003528 91e0 10f6 	LDS  R30,_is_properties_config_update
00352a 30e0      	CPI  R30,0
00352b f011      	BREQ _0x1B
                 ; 0000 00A3             getPropertiesConfig(&properties_config);
00352c 940e bc06 	CALL SUBOPT_0xD
                 ; 0000 00A4             is_properties_config_update = 0;
                 ; 0000 00A5         }
                 ; 0000 00A6 
                 ; 0000 00A7         if(is_operating_config_update){
                 _0x1B:
00352e 91e0 10f7 	LDS  R30,_is_operating_config_update
003530 30e0      	CPI  R30,0
003531 f011      	BREQ _0x1C
                 ; 0000 00A8             getOperatingConfig(&operating_config);
003532 940e bc0e 	CALL SUBOPT_0xE
                 ; 0000 00A9             is_operating_config_update = 0;
                 ; 0000 00AA         }
                 ; 0000 00AB 
                 ; 0000 00AC         for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0x1C:
                +
003534 e020     +LDI R18 , LOW ( 0 )
003535 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E:
                +
003536 3025     +CPI R18 , LOW ( 5 )
003537 e0e0     +LDI R30 , HIGH ( 5 )
003538 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003539 f504      	BRGE _0x1F
                 ; 0000 00AD             if(is_sensor_config_update[i]){
00353a efa8      	LDI  R26,LOW(_is_sensor_config_update)
00353b e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
00353c 940e bc16 	CALL SUBOPT_0xF
00353e f0c1      	BREQ _0x20
                 ; 0000 00AE                 err = getSensorConfig(i,&sensor_config[i]);
00353f 933a      	ST   -Y,R19
003540 932a      	ST   -Y,R18
003541 940e bc1b 	CALL SUBOPT_0x10
003543 940e 48c1 	CALL _getSensorConfig
003545 018f      	MOVW R16,R30
                 ; 0000 00AF                 if(err < 0){
003546 2311      	TST  R17
003547 f44a      	BRPL _0x21
                 ; 0000 00B0                     printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
003548 e6e7     +LDI R30 , LOW ( 2 * _0x0 + ( 71 ) )
003549 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 71 ) )
00354a e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 71 ) )
00354b e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 71 ) )
                 	__POINTD1FN _0x0,71
00354c 940e bc24 	CALL SUBOPT_0x11
00354e 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 00B1                     continue;
003550 c006      	RJMP _0x1D
                 ; 0000 00B2                 }
                 ; 0000 00B3                 is_sensor_config_update[i] = 0;
                 _0x21:
003551 efa8      	LDI  R26,LOW(_is_sensor_config_update)
003552 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
003553 940e bc31 	CALL SUBOPT_0x13
                 ; 0000 00B4                 TIMER_setTimer(&sensor_report_timer[i], 5);
003555 940e bbc8 	CALL SUBOPT_0x5
                 ; 0000 00B5             }
                 ; 0000 00B6         }
                 _0x20:
                 _0x1D:
                +
003557 5f2f     +SUBI R18 , LOW ( - 1 )
003558 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003559 cfdc      	RJMP _0x1E
                 _0x1F:
                 ; 0000 00B7 
                 ; 0000 00B8         if(is_buzzer_config_update){            // -- update buzzer configuration if needed -- //
00355a 91e0 1112 	LDS  R30,_is_buzzer_config_update
00355c 30e0      	CPI  R30,0
00355d f011      	BREQ _0x22
                 ; 0000 00B9             getBuzzerConfig(&buzz_config);
00355e 940e bc36 	CALL SUBOPT_0x14
                 ; 0000 00BA             is_buzzer_config_update = 0;
                 ; 0000 00BB         }
                 ; 0000 00BC 
                 ; 0000 00BD         for(i=0;i<USE_DIN;i++){
                 _0x22:
                +
003560 e020     +LDI R18 , LOW ( 0 )
003561 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x24:
                +
003562 3022     +CPI R18 , LOW ( 2 )
003563 e0e0     +LDI R30 , HIGH ( 2 )
003564 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003565 f49c      	BRGE _0x25
                 ; 0000 00BE             if(is_din_config_update[i]){        // -- update digital input configuration if needed -- //
003566 efad      	LDI  R26,LOW(_is_din_config_update)
003567 e1b0      	LDI  R27,HIGH(_is_din_config_update)
003568 940e bc16 	CALL SUBOPT_0xF
00356a f059      	BREQ _0x26
                 ; 0000 00BF                 getAuxDinConfig(i,&din_config[i]);
00356b 933a      	ST   -Y,R19
00356c 932a      	ST   -Y,R18
00356d 940e bc3e 	CALL SUBOPT_0x15
00356f 01df      	MOVW R26,R30
003570 940e 49a9 	CALL _getAuxDinConfig
                 ; 0000 00C0                 is_din_config_update[i] = 0;
003572 efad      	LDI  R26,LOW(_is_din_config_update)
003573 e1b0      	LDI  R27,HIGH(_is_din_config_update)
003574 940e bc31 	CALL SUBOPT_0x13
                 ; 0000 00C1             }
                 ; 0000 00C2         }
                 _0x26:
                +
003576 5f2f     +SUBI R18 , LOW ( - 1 )
003577 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003578 cfe9      	RJMP _0x24
                 _0x25:
                 ; 0000 00C3 
                 ; 0000 00C4         for(i=0;i<USE_DOUT;i++){
                +
003579 e020     +LDI R18 , LOW ( 0 )
00357a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x28:
                +
00357b 3022     +CPI R18 , LOW ( 2 )
00357c e0e0     +LDI R30 , HIGH ( 2 )
00357d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00357e f49c      	BRGE _0x29
                 ; 0000 00C5             if(is_dout_config_update[i]){       // -- update digital output configuration if needed -- //
00357f e0ad      	LDI  R26,LOW(_is_dout_config_update)
003580 e1b1      	LDI  R27,HIGH(_is_dout_config_update)
003581 940e bc16 	CALL SUBOPT_0xF
003583 f059      	BREQ _0x2A
                 ; 0000 00C6                 getAuxDoutConfig(i,&dout_config[i]);
003584 933a      	ST   -Y,R19
003585 932a      	ST   -Y,R18
                +
003586 e2a6     +LDI R26 , 38
003587 9fa2     +MUL R26 , R18
003588 01f0     +MOVW R30 , R0
003589 9fa3     +MUL R26 , R19
00358a 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,38
00358b 940e bc46 	CALL SUBOPT_0x16
                 ; 0000 00C7                 is_dout_config_update[i] = 0;
00358d 940e bc31 	CALL SUBOPT_0x13
                 ; 0000 00C8             }
                 ; 0000 00C9         }
                 _0x2A:
                +
00358f 5f2f     +SUBI R18 , LOW ( - 1 )
003590 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003591 cfe9      	RJMP _0x28
                 _0x29:
                 ; 0000 00CA 
                 ; 0000 00CB         if(is_status_config_update){
003592 91e0 1113 	LDS  R30,_is_status_config_update
003594 30e0      	CPI  R30,0
003595 f021      	BREQ _0x2B
                 ; 0000 00CC             getStatusReportConfig(&status_config);
003596 940e bc4e 	CALL SUBOPT_0x17
                 ; 0000 00CD             is_status_config_update = 0;
                 ; 0000 00CE 
                 ; 0000 00CF             TIMER_setTimer(&status_report_timer, 7);
003598 940e bbd7 	CALL SUBOPT_0x6
                 ; 0000 00D0         }
                 ; 0000 00D1 
                 ; 0000 00D2         if(is_env_config_update){
                 _0x2B:
00359a 91e0 1114 	LDS  R30,_is_env_config_update
00359c 30e0      	CPI  R30,0
00359d f011      	BREQ _0x2C
                 ; 0000 00D3             getEnvAlarmConfig(&env_config);
00359e 940e bc56 	CALL SUBOPT_0x18
                 ; 0000 00D4             is_env_config_update = 0;
                 ; 0000 00D5         }
                 ; 0000 00D6 
                 ; 0000 00D7         if(operating_config.deviceEnable)                       // ----- device enable ------ //
                 _0x2C:
                +
0035a0 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
0035a2 30e0      	CPI  R30,0
0035a3 f411      	BRNE PC+3
0035a4 940c 3798 	JMP _0x2D
                 ; 0000 00D8         {
                 ; 0000 00D9             // -------------- Sensor Association -------------- //
                 ; 0000 00DA             for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0035a6 e020     +LDI R18 , LOW ( 0 )
0035a7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2F:
                +
0035a8 3025     +CPI R18 , LOW ( 5 )
0035a9 e0e0     +LDI R30 , HIGH ( 5 )
0035aa 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
0035ab f014      	BRLT PC+3
0035ac 940c 35f4 	JMP _0x30
                 ; 0000 00DB             {
                 ; 0000 00DC                 if(operating_config.sensorEnable[i])            // .. sensor enable .. //
0035ae 940e bbc1 	CALL SUBOPT_0x4
0035b0 f411      	BRNE PC+3
0035b1 940c 35f1 	JMP _0x31
                 ; 0000 00DD                 {
                 ; 0000 00DE                     //** test **//
                 ; 0000 00DF //                    if(TIMER_checkTimerExceed(readSensorTimer))
                 ; 0000 00E0 //                    {
                 ; 0000 00E1 //                        TIMER_setTimer(&readSensorTimer, 5);
                 ; 0000 00E2 //                        updateSensorADC(i);                    // -- update adcData[ch] -- //
                 ; 0000 00E3 //                        printDebug("[%d]ADC: %f, Volt: %f \r\n", i, adcData[i], (adcData[i]/1023)*2.56);
                 ; 0000 00E4 //                    }
                 ; 0000 00E5                     //-- test --//
                 ; 0000 00E6 
                 ; 0000 00E7 //                    printDebug("<main> sensorRead\r\n");
                 ; 0000 00E8                     err = sensorRead(i,&sensor[i]);
0035b3 940e bc5e 	CALL SUBOPT_0x19
0035b5 940e 6a3f 	CALL _sensorRead
0035b7 018f      	MOVW R16,R30
                 ; 0000 00E9                     if(err < 0)                                 // . sensor value error . //
0035b8 2311      	TST  R17
0035b9 f1ba      	BRMI _0x2E
                 ; 0000 00EA                     {
                 ; 0000 00EB                         continue;
                 ; 0000 00EC                     }
                 ; 0000 00ED                     else                                        // . sensor value valid . //
                 ; 0000 00EE                     {
                 ; 0000 00EF                         // --==== More detail in config (Re-Occurrance) ====-- //
                 ; 0000 00F0                         if(TIMER_checkTimerExceed(sensor_report_timer[i]))
0035ba 01f9      	MOVW R30,R18
0035bb 01de      	MOVW R26,R28
0035bc 96df      	ADIW R26,63
0035bd 940e bc69 	CALL SUBOPT_0x1A
0035bf 940e bc70 	CALL SUBOPT_0x1B
0035c1 f179      	BREQ _0x34
                 ; 0000 00F1                         {
                 ; 0000 00F2                             TIMER_setTimer(&sensor_report_timer[i], sensor_config[i].samplingRate);
0035c2 01f9      	MOVW R30,R18
0035c3 01de      	MOVW R26,R28
0035c4 96df      	ADIW R26,63
0035c5 940e bc76 	CALL SUBOPT_0x1C
0035c7 93fa      	ST   -Y,R31
0035c8 93ea      	ST   -Y,R30
0035c9 940e bc1b 	CALL SUBOPT_0x10
0035cb 940e bc7b 	CALL SUBOPT_0x1D
0035cd 940e bc80 	CALL SUBOPT_0x1E
                 ; 0000 00F3 
                 ; 0000 00F4                             timestamp_rd = DS1672_read();
0035cf 940e 43d3 	CALL _DS1672_read
                +
0035d1 a3ef     +STD Y + 39 , R30
0035d2 a7f8     +STD Y + 39 + 1 , R31
0035d3 a769     +STD Y + 39 + 2 , R22
0035d4 a77a     +STD Y + 39 + 3 , R23
                 	__PUTD1S 39
                 ; 0000 00F5                             err = addDataQueue(timestamp_rd, i, sensor[i].value);
0035d5 940e da29 	CALL __PUTPARD1
0035d7 940e bc5e 	CALL SUBOPT_0x19
0035d9 940e d9f4 	CALL __GETD1P
0035db 01df      	MOVW R26,R30
0035dc 01cb      	MOVW R24,R22
0035dd 940e 7116 	CALL _addDataQueue
0035df 018f      	MOVW R16,R30
                 ; 0000 00F6                             if(err<0){
0035e0 2311      	TST  R17
0035e1 f47a      	BRPL _0x35
                 ; 0000 00F7                                 printDebug("<main> addSensorDataQueue(%d,%.1f) failed\r\n",i,sensor[i].value);
                +
0035e2 e8ea     +LDI R30 , LOW ( 2 * _0x0 + ( 106 ) )
0035e3 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 106 ) )
0035e4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 106 ) )
0035e5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 106 ) )
                 	__POINTD1FN _0x0,106
0035e6 940e bc24 	CALL SUBOPT_0x11
                +
0035e8 e0a5     +LDI R26 , 5
0035e9 9fa2     +MUL R26 , R18
0035ea 01f0     +MOVW R30 , R0
0035eb 9fa3     +MUL R26 , R19
0035ec 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
0035ed 940e bc84 	CALL SUBOPT_0x1F
0035ef 940e bc8a 	CALL SUBOPT_0x20
                 ; 0000 00F8                                 continue;   // -- continue other sensor
                 ; 0000 00F9                             }
                 ; 0000 00FA                         }
                 _0x35:
                 ; 0000 00FB                         else{
                 _0x34:
                 ; 0000 00FC                             //printDebug("<main> [%d] %ld:%ld\r\n",i,baseCounter,sensor_report_timer[i]);
                 ; 0000 00FD                         }
                 ; 0000 00FE                     }
                 ; 0000 00FF 
                 ; 0000 0100                 }
                 ; 0000 0101                 else                                            // .. sensor disable .. //
                 _0x31:
                 ; 0000 0102                 {
                 ; 0000 0103                 }
                 ; 0000 0104             } // -- iterate each probe -- //
                 _0x2E:
                +
0035f1 5f2f     +SUBI R18 , LOW ( - 1 )
0035f2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0035f3 cfb4      	RJMP _0x2F
                 _0x30:
                 ; 0000 0105 
                 ; 0000 0106             #asm("wdr")
0035f4 95a8      	wdr
                 ; 0000 0107             // --------------- Status Management --------------- //
                 ; 0000 0108            // printDebug("<main> updateStatus()\r\n");
                 ; 0000 0109             last_status = updateStatus();
0035f5 d211      	RCALL _updateStatus
                +
0035f6 01de     +MOVW R26 , R28
0035f7 5aad     +SUBI R26 , LOW ( - 83 )
0035f8 4fbf     +SBCI R27 , HIGH ( - 83 )
0035f9 93ed     +ST X + , R30
0035fa 93fc     +ST X , R31
                 	__PUTW1SX 83
                 ; 0000 010A 
                 ; 0000 010B             // --------------- Alarm Management --------------- //
                 ; 0000 010C             if(operating_config.alarmEnable)                    // .. alarm enable .. //
                +
0035fb 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0035fd 30e0      	CPI  R30,0
0035fe f411      	BRNE PC+3
0035ff 940c 3674 	JMP _0x38
                 ; 0000 010D             {
                 ; 0000 010E                 // -- check alarm all -- //
                 ; 0000 010F                 if(last_status < 0)                             // .. status update falied .. //
                +
003601 01de     +MOVW R26 , R28
003602 5aac     +SUBI R26 , LOW ( - 84 )
003603 4fbf     +SBCI R27 , HIGH ( - 84 )
003604 91ac     +LD R26 , X
                 	__GETB2SX 84
003605 23aa      	TST  R26
003606 f43a      	BRPL _0x39
                 ; 0000 0110                 {
                 ; 0000 0111                     printDebug("<main> updateStatus() failed\r\n");
                +
003607 ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 150 ) )
003608 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 150 ) )
003609 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 150 ) )
00360a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 150 ) )
                 	__POINTD1FN _0x0,150
00360b 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0112                 }
                 ; 0000 0113                 else if((last_status > 0) && !muteMode)         // .. found some status error and alarm not muted .. //
00360d c062      	RJMP _0x3A
                 _0x39:
                +
00360e 01de     +MOVW R26 , R28
00360f 5aad     +SUBI R26 , LOW ( - 83 )
003610 4fbf     +SBCI R27 , HIGH ( - 83 )
003611 900d     +LD R0 , X +
003612 91bc     +LD R27 , X
003613 2da0     +MOV R26 , R0
                 	__GETW2SX 83
003614 940e da81 	CALL __CPW02
003616 f424      	BRGE _0x3C
003617 91e0 148b 	LDS  R30,_muteMode
003619 30e0      	CPI  R30,0
00361a f009      	BREQ _0x3D
                 _0x3C:
00361b c044      	RJMP _0x3B
                 _0x3D:
                 ; 0000 0114                 {
                 ; 0000 0115                     // -- Buzzer Alarm -- //
                 ; 0000 0116                     if(buzz_config.enable == 0x01 )             // -- buzzer enabled -- //
00361c 91a0 133d 	LDS  R26,_buzz_config
00361e 30a1      	CPI  R26,LOW(0x1)
00361f f471      	BRNE _0x3E
                 ; 0000 0117                     {
                 ; 0000 0118                         // -- check alarm source binded to Buzzer -- //
                 ; 0000 0119                         res = checkAlarm(buzz_config.eventSource, buzz_config.eventSourceNumber);       // -- alarm.h -- //
                +
003620 e3ef     +LDI R30 , LOW ( _buzz_config + ( 2 ) )
003621 e1f3     +LDI R31 , HIGH ( _buzz_config + ( 2 ) )
                 	__POINTW1MN _buzz_config,2
003622 93fa      	ST   -Y,R31
003623 93ea      	ST   -Y,R30
                +
003624 91a0 133e+LDS R26 , _buzz_config + ( 1 )
                 	__GETB2MN _buzz_config,1
003626 27bb      	CLR  R27
003627 940e bc91 	CALL SUBOPT_0x21
                 ; 0000 011A                         if(res){
003629 f011      	BREQ _0x3F
                 ; 0000 011B                             buzzer_on = 1;          // -- buzzer on -- //
00362a 9af3      	SBI  0x1E,3
                 ; 0000 011C                         }
                 ; 0000 011D                         else{
00362b c001      	RJMP _0x42
                 _0x3F:
                 ; 0000 011E                             buzzer_on = 0;          // -- buzzer off -- //
00362c 98f3      	CBI  0x1E,3
                 ; 0000 011F                         }
                 _0x42:
                 ; 0000 0120                     }
                 ; 0000 0121                     else                                        // -- buzzer disabled -- //
00362d c001      	RJMP _0x45
                 _0x3E:
                 ; 0000 0122                     {
                 ; 0000 0123                         buzzer_on = 0;                  // -- buzzer off -- //
00362e 98f3      	CBI  0x1E,3
                 ; 0000 0124                     }
                 _0x45:
                 ; 0000 0125 
                 ; 0000 0126                     // -- Digital Output Alarm (iterate each channel) -- //
                 ; 0000 0127                     for(k=0;k<USE_DOUT;k++)
                +
00362f e040     +LDI R20 , LOW ( 0 )
003630 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x49:
                +
003631 3042     +CPI R20 , LOW ( 2 )
003632 e0e0     +LDI R30 , HIGH ( 2 )
003633 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003634 f554      	BRGE _0x4A
                 ; 0000 0128                     {
                 ; 0000 0129                         if(dout_config[k].channelEnable == 0x01)            // -- digital output enabled -- //
003635 940e bc9a 	CALL SUBOPT_0x22
003637 58e1      	SUBI R30,LOW(-_dout_config)
003638 4efd      	SBCI R31,HIGH(-_dout_config)
003639 81a0      	LD   R26,Z
00363a 30a1      	CPI  R26,LOW(0x1)
00363b f4d1      	BRNE _0x4B
                 ; 0000 012A                         {
                 ; 0000 012B                             // -- check alarm Digital Output -- //
                 ; 0000 012C //                            printDebug("<main> dout[%d] alarm check -- \r\n",k);
                 ; 0000 012D                             res = checkAlarm(dout_config[k].eventSource, dout_config[k].eventSourceNumber);       // -- alarm.h -- //
00363c 940e bc9a 	CALL SUBOPT_0x22
                +
00363e 57ee     +SUBI R30 , LOW ( - _dout_config - ( 3 ) )
00363f 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 3 ) )
                 	__ADDW1MN _dout_config,3
003640 93fa      	ST   -Y,R31
003641 93ea      	ST   -Y,R30
003642 940e bc9a 	CALL SUBOPT_0x22
                +
003644 57ef     +SUBI R30 , LOW ( - _dout_config - ( 2 ) )
003645 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 2 ) )
                 	__ADDW1MN _dout_config,2
003646 81a0      	LD   R26,Z
003647 e0b0      	LDI  R27,0
003648 940e bc91 	CALL SUBOPT_0x21
                 ; 0000 012E                             if(res){
00364a f021      	BREQ _0x4C
                 ; 0000 012F                                 IO_dout(k,dout_config[k].stateOnEvent);     // -- Digital Output X ON -- //
00364b 940e bbab 	CALL SUBOPT_0x1
00364d 81a0      	LD   R26,Z
00364e c004      	RJMP _0x133
                 ; 0000 0130                             }
                 ; 0000 0131                             else{
                 _0x4C:
                 ; 0000 0132                                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00364f 940e bbab 	CALL SUBOPT_0x1
003651 940e bbb5 	CALL SUBOPT_0x2
                 _0x133:
003653 940e 4205 	CALL _IO_dout
                 ; 0000 0133                             }
                 ; 0000 0134                         }
                 ; 0000 0135                         else                                                // -- digital output disabled -- //
003655 c006      	RJMP _0x4E
                 _0x4B:
                 ; 0000 0136                         {
                 ; 0000 0137                             IO_dout(k,!dout_config[k].stateOnEvent);        // -- Digital Output X OFF -- //
003656 940e bbab 	CALL SUBOPT_0x1
003658 940e bbb5 	CALL SUBOPT_0x2
00365a 940e 4205 	CALL _IO_dout
                 ; 0000 0138                         }
                 _0x4E:
                 ; 0000 0139                     }
                +
00365c 5f4f     +SUBI R20 , LOW ( - 1 )
00365d 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00365e cfd2      	RJMP _0x49
                 _0x4A:
                 ; 0000 013A                 }
                 ; 0000 013B                 else                                            // .. no event .. //
00365f c010      	RJMP _0x4F
                 _0x3B:
                 ; 0000 013C                 {
                 ; 0000 013D                     // -- no alarm -- // ^_^
                 ; 0000 013E                     buzzer_on = 0;                  // -- buzzer off -- //
003660 98f3      	CBI  0x1E,3
                 ; 0000 013F                     for(k=0;k<USE_DOUT;k++)         // -- MAX_DO_CHANNEL
                +
003661 e040     +LDI R20 , LOW ( 0 )
003662 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x53:
                +
003663 3042     +CPI R20 , LOW ( 2 )
003664 e0e0     +LDI R30 , HIGH ( 2 )
003665 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
003666 f44c      	BRGE _0x54
                 ; 0000 0140                     {
                 ; 0000 0141                         IO_dout(k,!dout_config[k].stateOnEvent);     // -- Digital Output X OFF -- //
003667 940e bbab 	CALL SUBOPT_0x1
003669 940e bbb5 	CALL SUBOPT_0x2
00366b 940e 4205 	CALL _IO_dout
                 ; 0000 0142                     }
                +
00366d 5f4f     +SUBI R20 , LOW ( - 1 )
00366e 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00366f cff3      	RJMP _0x53
                 _0x54:
                 ; 0000 0143                 }
                 _0x4F:
                 _0x3A:
                 ; 0000 0144 
                 ; 0000 0145                 res = eventCapture();                           // -- send event packet if needed -- //
003670 d20b      	RCALL _eventCapture
003671 940e bca0 	CALL SUBOPT_0x23
                 ; 0000 0146             }
                 ; 0000 0147             else                                                // .. alarm disable .. //
003673 c010      	RJMP _0x55
                 _0x38:
                 ; 0000 0148             {
                 ; 0000 0149             //    printDebug("<main> alarmDisable()\r\n");
                 ; 0000 014A                 // -- no alarm -- // ;-P
                 ; 0000 014B                 buzzer_on = 0;                      // -- buzzer off -- //
003674 98f3      	CBI  0x1E,3
                 ; 0000 014C                 for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
003675 e040     +LDI R20 , LOW ( 0 )
003676 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x59:
                +
003677 3042     +CPI R20 , LOW ( 2 )
003678 e0e0     +LDI R30 , HIGH ( 2 )
003679 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
00367a f44c      	BRGE _0x5A
                 ; 0000 014D                 {
                 ; 0000 014E                     IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00367b 940e bbab 	CALL SUBOPT_0x1
00367d 940e bbb5 	CALL SUBOPT_0x2
00367f 940e 4205 	CALL _IO_dout
                 ; 0000 014F                 }
                +
003681 5f4f     +SUBI R20 , LOW ( - 1 )
003682 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
003683 cff3      	RJMP _0x59
                 _0x5A:
                 ; 0000 0150             }
                 _0x55:
                 ; 0000 0151 
                 ; 0000 0152             // -- check mute expired -- //
                 ; 0000 0153             if(muteMode){
003684 91e0 148b 	LDS  R30,_muteMode
003686 30e0      	CPI  R30,0
003687 f059      	BREQ _0x5B
                 ; 0000 0154                // printDebug("<main> ALARM_checkMuteExpired()\r\n");
                 ; 0000 0155                 if(ALARM_checkMuteExpired()){
003688 940e 7a06 	CALL _ALARM_checkMuteExpired
00368a 9730      	SBIW R30,0
00368b f039      	BREQ _0x5C
                 ; 0000 0156                     muteAlarmExpired = 0xFFFFFFFF;
00368c 940e bca6 	CALL SUBOPT_0x24
00368e 940e bcab 	CALL SUBOPT_0x25
                 ; 0000 0157                     muteMode = 0;
003690 e0e0      	LDI  R30,LOW(0)
003691 93e0 148b 	STS  _muteMode,R30
                 ; 0000 0158                 }
                 ; 0000 0159             }
                 _0x5C:
                 ; 0000 015A 
                 ; 0000 015B             // ---------------- Operating Mode ---------------- //
                 ; 0000 015C //            operating_config.mode = MODE_REALTIME;      //test
                 ; 0000 015D             if(operating_config.mode == MODE_REALTIME)          // .. realtime mode .. //
                 _0x5B:
003693 91a0 11b6 	LDS  R26,_operating_config
003695 31a0      	CPI  R26,LOW(0x10)
003696 f5e1      	BRNE _0x5D
                 ; 0000 015E             {
                 ; 0000 015F                 if(!duplicateListClear)
003697 91e0 1425 	LDS  R30,_duplicateListClear
003699 30e0      	CPI  R30,0
00369a f4a9      	BRNE _0x5E
                 ; 0000 0160                 {
                 ; 0000 0161                     res = TIMER_checkTimerExceed(clear_duplicate_timer);
                +
00369b a5af     +LDD R26 , Y + 47
00369c a9b8     +LDD R27 , Y + 47 + 1
00369d a989     +LDD R24 , Y + 47 + 2
00369e a99a     +LDD R25 , Y + 47 + 3
                 	__GETD2S 47
00369f 940e 405d 	CALL _TIMER_checkTimerExceed
0036a1 940e bca0 	CALL SUBOPT_0x23
                 ; 0000 0162                     if(res != 0){
0036a3 940e bcb4 	CALL SUBOPT_0x26
0036a5 9730      	SBIW R30,0
0036a6 f031      	BREQ _0x5F
                 ; 0000 0163                         TIMER_setTimer(&clear_duplicate_timer, 10);
0036a7 01fe      	MOVW R30,R28
0036a8 96bf      	ADIW R30,47
0036a9 940e bcbb 	CALL SUBOPT_0x27
                 ; 0000 0164                         ETH_clearDuplicateRequestCmd();
0036ab 940e 5529 	CALL _ETH_clearDuplicateRequestCmd
                 ; 0000 0165                     }
                 ; 0000 0166 
                 ; 0000 0167                     sensorDataSave();
                 _0x5F:
0036ad d43e      	RCALL _sensorDataSave
                 ; 0000 0168                     eventSave();
0036ae d4c1      	RCALL _eventSave
                 ; 0000 0169                 }
                 ; 0000 016A                 else
0036af c022      	RJMP _0x60
                 _0x5E:
                 ; 0000 016B                 {
                 ; 0000 016C                     if(TIMER_checkTimerExceed(status_report_timer))
                +
0036b0 adab     +LDD R26 , Y + 59
0036b1 adbc     +LDD R27 , Y + 59 + 1
0036b2 ad8d     +LDD R24 , Y + 59 + 2
0036b3 ad9e     +LDD R25 , Y + 59 + 3
                 	__GETD2S 59
0036b4 940e 405d 	CALL _TIMER_checkTimerExceed
0036b6 9730      	SBIW R30,0
0036b7 f069      	BREQ _0x61
                 ; 0000 016D                     {
                 ; 0000 016E                         TIMER_setTimer(&status_report_timer, status_config.intv);
0036b8 01fe      	MOVW R30,R28
0036b9 96fb      	ADIW R30,59
0036ba 93fa      	ST   -Y,R31
0036bb 93ea      	ST   -Y,R30
                +
0036bc 91a0 1363+LDS R26 , _status_config + ( 1 )
0036be 91b0 1364+LDS R27 , _status_config + ( 1 ) + 1
                 	__GETW2MN _status_config,1
0036c0 2788      	CLR  R24
0036c1 2799      	CLR  R25
0036c2 940e 4073 	CALL _TIMER_setTimer
                 ; 0000 016F 
                 ; 0000 0170                         statusReport();
0036c4 d2e3      	RCALL _statusReport
                 ; 0000 0171                     }
                 ; 0000 0172 
                 ; 0000 0173                     // -- report log only when no realtime data not ready -- //
                 ; 0000 0174                     if( (sensorDataReport() == 0) && (eventReport() == 0) && (sdFreeSpace > 0) )
                 _0x61:
0036c5 d383      	RCALL _sensorDataReport
0036c6 9730      	SBIW R30,0
0036c7 f441      	BRNE _0x63
0036c8 d3d4      	RCALL _eventReport
0036c9 9730      	SBIW R30,0
0036ca f429      	BRNE _0x63
0036cb 940e bcc3 	CALL SUBOPT_0x28
0036cd 940e da89 	CALL __CPD02
0036cf f008      	BRLO _0x64
                 _0x63:
0036d0 c001      	RJMP _0x62
                 _0x64:
                 ; 0000 0175                     {
                 ; 0000 0176                         logReport();
0036d1 d526      	RCALL _logReport
                 ; 0000 0177                     }
                 ; 0000 0178                 }
                 _0x62:
                 _0x60:
                 ; 0000 0179             }
                 ; 0000 017A             else if(operating_config.mode == MODE_DATALOGGER)   // .. datalogger mode .. //
0036d2 c011      	RJMP _0x65
                 _0x5D:
0036d3 91a0 11b6 	LDS  R26,_operating_config
0036d5 32a0      	CPI  R26,LOW(0x20)
0036d6 f419      	BRNE _0x66
                 ; 0000 017B             {
                 ; 0000 017C                // printDebug("<main> sensorDataSave()\r\n");
                 ; 0000 017D                 sensorDataSave();
0036d7 d414      	RCALL _sensorDataSave
                 ; 0000 017E               //  printDebug("<main> eventSave()\r\n");
                 ; 0000 017F                 eventSave();
0036d8 d497      	RCALL _eventSave
                 ; 0000 0180             }
                 ; 0000 0181             else                                                // .. unknown mode .. //
0036d9 c00a      	RJMP _0x67
                 _0x66:
                 ; 0000 0182             {
                 ; 0000 0183                 printDebug("<main> operating mode error!! [0x%02X]\r\n",operating_config.mode);
                +
0036da ede5     +LDI R30 , LOW ( 2 * _0x0 + ( 181 ) )
0036db e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 181 ) )
0036dc e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 181 ) )
0036dd e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 181 ) )
                 	__POINTD1FN _0x0,181
0036de 940e da29 	CALL __PUTPARD1
0036e0 91e0 11b6 	LDS  R30,_operating_config
0036e2 940e bccc 	CALL SUBOPT_0x29
                 ; 0000 0184             }
                 _0x67:
                 _0x65:
                 ; 0000 0185 
                 ; 0000 0186             #asm("wdr")
0036e4 95a8      	wdr
                 ; 0000 0187             if(timer_1sec_flag)
0036e5 9bf2      	SBIS 0x1E,2
0036e6 c0b0      	RJMP _0x68
                 ; 0000 0188             {
                 ; 0000 0189               //  printDebug("<main> timer_1sec_flag\r\n");
                 ; 0000 018A                 if(TIMER_checkTimerExceed(check_memory_timer) && (memoryStatus != ERROR))
                +
0036e7 a9ab     +LDD R26 , Y + 51
0036e8 a9bc     +LDD R27 , Y + 51 + 1
0036e9 a98d     +LDD R24 , Y + 51 + 2
0036ea a99e     +LDD R25 , Y + 51 + 3
                 	__GETD2S 51
0036eb 940e 405d 	CALL _TIMER_checkTimerExceed
0036ed 9730      	SBIW R30,0
0036ee f021      	BREQ _0x6A
0036ef 91a0 1482 	LDS  R26,_memoryStatus
0036f1 30a1      	CPI  R26,LOW(0x1)
0036f2 f409      	BRNE _0x6B
                 _0x6A:
0036f3 c014      	RJMP _0x69
                 _0x6B:
                 ; 0000 018B                 {
                 ; 0000 018C               //      printDebug("<main> Check Memory \r\n");
                 ; 0000 018D                     TIMER_setTimer(&check_memory_timer, PERIOD_CHECK_MEMORY);
0036f4 940e bbeb 	CALL SUBOPT_0x8
                 ; 0000 018E 
                 ; 0000 018F                     res = SD_readMemoryRemain(&sdFreeSpace);
0036f6 e6ab      	LDI  R26,LOW(_sdFreeSpace)
0036f7 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
0036f8 940e 7d90 	CALL _SD_readMemoryRemain
0036fa 940e bca0 	CALL SUBOPT_0x23
                 ; 0000 0190                     if(res < 0){
                +
0036fc 01de     +MOVW R26 , R28
0036fd 5aaa     +SUBI R26 , LOW ( - 86 )
0036fe 4fbf     +SBCI R27 , HIGH ( - 86 )
0036ff 91ac     +LD R26 , X
                 	__GETB2SX 86
003700 23aa      	TST  R26
003701 f432      	BRPL _0x6C
                 ; 0000 0191                         printDebug("<main> SD_readMemoryRemain() failed\r\n");
                +
003702 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 222 ) )
003703 e0f2     +LDI R31 , HIGH ( 2 * _0x0 + ( 222 ) )
003704 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 222 ) )
003705 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 222 ) )
                 	__POINTD1FN _0x0,222
003706 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0192                     }
                 ; 0000 0193                 }
                 _0x6C:
                 ; 0000 0194 
                 ; 0000 0195                 if(currentPage == P_MONITOR)
                 _0x69:
003708 91e0 14df 	LDS  R30,_currentPage
00370a 30e0      	CPI  R30,0
00370b f569      	BRNE _0x6D
                 ; 0000 0196                 {
                 ; 0000 0197               //      printDebug("<main> OLED_showSensorValue\r\n");
                 ; 0000 0198                     OLED_showSensorValue();
00370c 940e 7a92 	CALL _OLED_showSensorValue
                 ; 0000 0199 
                 ; 0000 019A                     for(i=0;i<2;i++){
                +
00370e e020     +LDI R18 , LOW ( 0 )
00370f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x6F:
                +
003710 3022     +CPI R18 , LOW ( 2 )
003711 e0e0     +LDI R30 , HIGH ( 2 )
003712 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003713 f454      	BRGE _0x70
                 ; 0000 019B                         OLED_showInputStatus(i,dinStatus[i]);
003714 933a      	ST   -Y,R19
003715 932a      	ST   -Y,R18
003716 940e bcd2 	CALL SUBOPT_0x2A
003718 91ac      	LD   R26,X
003719 940e 7b53 	CALL _OLED_showInputStatus
                 ; 0000 019C                     }
                +
00371b 5f2f     +SUBI R18 , LOW ( - 1 )
00371c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00371d cff2      	RJMP _0x6F
                 _0x70:
                 ; 0000 019D 
                 ; 0000 019E                     for(i=0;i<2;i++){
                +
00371e e020     +LDI R18 , LOW ( 0 )
00371f e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x72:
                +
003720 3022     +CPI R18 , LOW ( 2 )
003721 e0e0     +LDI R30 , HIGH ( 2 )
003722 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
003723 f464      	BRGE _0x73
                 ; 0000 019F                         OLED_showOutputStatus(i,doutStatus[i]);
003724 933a      	ST   -Y,R19
003725 932a      	ST   -Y,R18
003726 e7ae      	LDI  R26,LOW(_doutStatus)
003727 e1b4      	LDI  R27,HIGH(_doutStatus)
003728 0fa2      	ADD  R26,R18
003729 1fb3      	ADC  R27,R19
00372a 91ac      	LD   R26,X
00372b 940e 7b78 	CALL _OLED_showOutputStatus
                 ; 0000 01A0                     }
                +
00372d 5f2f     +SUBI R18 , LOW ( - 1 )
00372e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00372f cff0      	RJMP _0x72
                 _0x73:
                 ; 0000 01A1 
                 ; 0000 01A2                //     printDebug("<main> OLED_showDateTime\r\n");
                 ; 0000 01A3                     OLED_showDateTime(properties_config.timeZone);
                +
003730 91a0 11b5+LDS R26 , _properties_config + ( 160 )
                 	__GETB2MN _properties_config,160
003732 e0b0      	LDI  R27,0
003733 fda7      	SBRC R26,7
003734 efbf      	SER  R27
003735 940e 7a6e 	CALL _OLED_showDateTime
                 ; 0000 01A4 
                 ; 0000 01A5               //      printDebug("<main> OLED_showAlarmStatus\r\n");
                 ; 0000 01A6                     OLED_showAlarmStatus();
003737 940e 7bd1 	CALL _OLED_showAlarmStatus
                 ; 0000 01A7                 }
                 ; 0000 01A8 
                 ; 0000 01A9               //  printDebug("<main> powerSrcStatus\r\n");
                 ; 0000 01AA                 switch(powerSrcStatus){
                 _0x6D:
003739 91e0 147a 	LDS  R30,_powerSrcStatus
00373b 940e bcd7 	CALL SUBOPT_0x2B
                 ; 0000 01AB                     case PWR_NORMAL     :   OLED_showPowerStatus(PWR_NORMAL,0);                     break;
00373d f439      	BRNE _0x77
00373e e0e0      	LDI  R30,LOW(0)
00373f 93ea      	ST   -Y,R30
003740 940e bcda 	CALL SUBOPT_0x2C
003742 940e 7b10 	CALL _OLED_showPowerStatus
003744 c00a      	RJMP _0x76
                 ; 0000 01AC                     case PWR_DOWN       :   OLED_showPowerStatus(PWR_DOWN,batteryVolt);             break;
                 _0x77:
003745 30e1      	CPI  R30,LOW(0x1)
003746 e0a0      	LDI  R26,HIGH(0x1)
003747 07fa      	CPC  R31,R26
003748 f431      	BRNE _0x79
003749 e0e1      	LDI  R30,LOW(1)
00374a 93ea      	ST   -Y,R30
00374b 940e bcdf 	CALL SUBOPT_0x2D
00374d 940e 7b10 	CALL _OLED_showPowerStatus
                 ; 0000 01AD                     default             :   break;
                 _0x79:
                 ; 0000 01AE                 }
                 _0x76:
                 ; 0000 01AF 
                 ; 0000 01B0             //    printDebug("<main> serverCommStatus\r\n");
                 ; 0000 01B1                 switch(serverCommStatus){
00374f 91e0 1480 	LDS  R30,_serverCommStatus
003751 940e bcd7 	CALL SUBOPT_0x2B
                 ; 0000 01B2                     case COMM_NORMAL    :   OLED_showServerCommStatus(OLED_SERVER_CONNECT);         break;
003753 f411      	BRNE _0x7D
003754 e0a2      	LDI  R26,LOW(2)
003755 c007      	RJMP _0x134
                 ; 0000 01B3                     case COMM_LOST      :   OLED_showServerCommStatus(OLED_SERVER_DISCONNECT);      break;
                 _0x7D:
003756 30e2      	CPI  R30,LOW(0x2)
003757 e0a0      	LDI  R26,HIGH(0x2)
003758 07fa      	CPC  R31,R26
003759 f411      	BRNE _0x7F
00375a e0a1      	LDI  R26,LOW(1)
00375b c001      	RJMP _0x134
                 ; 0000 01B4                     default             :   OLED_showServerCommStatus(OLED_SERVER_UNKNOWN);         break;
                 _0x7F:
00375c e0a0      	LDI  R26,LOW(0)
                 _0x134:
00375d 940e 7ba9 	CALL _OLED_showServerCommStatus
                 ; 0000 01B5                 }
                 ; 0000 01B6 
                 ; 0000 01B7             //    printDebug("<main> lanStatus\r\n");
                 ; 0000 01B8                 switch(lanStatus){
00375f 91e0 1481 	LDS  R30,_lanStatus
003761 940e bcd7 	CALL SUBOPT_0x2B
                 ; 0000 01B9                     case COMM_LAN_CONNECT       :   OLED_showLanStatus(OLED_LAN_CONNECT);           break;
003763 f421      	BRNE _0x83
003764 e0a1      	LDI  R26,LOW(1)
003765 940e 7bb3 	CALL _OLED_showLanStatus
003767 c007      	RJMP _0x82
                 ; 0000 01BA                     case COMM_LAN_DISCONNECT    :   OLED_showLanStatus(OLED_LAN_DISCONNECT);        break;
                 _0x83:
003768 30e1      	CPI  R30,LOW(0x1)
003769 e0a0      	LDI  R26,HIGH(0x1)
00376a 07fa      	CPC  R31,R26
00376b f419      	BRNE _0x85
00376c e0a0      	LDI  R26,LOW(0)
00376d 940e 7bb3 	CALL _OLED_showLanStatus
                 ; 0000 01BB                     default                     :   break;
                 _0x85:
                 ; 0000 01BC                 }
                 _0x82:
                 ; 0000 01BD 
                 ; 0000 01BE             //    printDebug("<main> OLED_showBuzzerStatus\r\n");
                 ; 0000 01BF                 if(muteMode){
00376f 91e0 148b 	LDS  R30,_muteMode
003771 30e0      	CPI  R30,0
003772 f011      	BREQ _0x86
                 ; 0000 01C0                     OLED_showBuzzerStatus(OLED_BUZZER_MUTE);
003773 e0a2      	LDI  R26,LOW(2)
003774 c007      	RJMP _0x135
                 ; 0000 01C1                 }
                 ; 0000 01C2                 else if(buzz_config.enable == 0x01){
                 _0x86:
003775 91a0 133d 	LDS  R26,_buzz_config
003777 30a1      	CPI  R26,LOW(0x1)
003778 f411      	BRNE _0x88
                 ; 0000 01C3                     OLED_showBuzzerStatus(OLED_BUZZER_ENABLE);
003779 e0a0      	LDI  R26,LOW(0)
00377a c001      	RJMP _0x135
                 ; 0000 01C4                 }
                 ; 0000 01C5                 else{
                 _0x88:
                 ; 0000 01C6                     OLED_showBuzzerStatus(OLED_BUZZER_DISABLE);
00377b e0a1      	LDI  R26,LOW(1)
                 _0x135:
00377c 940e 7bbd 	CALL _OLED_showBuzzerStatus
                 ; 0000 01C7                 }
                 ; 0000 01C8 
                 ; 0000 01C9            //     printDebug("<main> memoryStatus\r\n");
                 ; 0000 01CA                 switch(memoryStatus){
00377e 91e0 1482 	LDS  R30,_memoryStatus
003780 940e bcd7 	CALL SUBOPT_0x2B
                 ; 0000 01CB                     case MEM_NORMAL         :   OLED_showMemoryStatus(OLED_MEMORY_NORMAL);          break;
003782 f421      	BRNE _0x8D
003783 e0a0      	LDI  R26,LOW(0)
003784 940e 7bc7 	CALL _OLED_showMemoryStatus
003786 c00f      	RJMP _0x8C
                 ; 0000 01CC                     case MEM_LOW            :   OLED_showMemoryStatus(OLED_MEMORY_LOW);             break;
                 _0x8D:
003787 30e1      	CPI  R30,LOW(0x1)
003788 e0a0      	LDI  R26,HIGH(0x1)
003789 07fa      	CPC  R31,R26
00378a f421      	BRNE _0x8E
00378b e0a1      	LDI  R26,LOW(1)
00378c 940e 7bc7 	CALL _OLED_showMemoryStatus
00378e c007      	RJMP _0x8C
                 ; 0000 01CD                     case MEM_ERROR          :   OLED_showMemoryStatus(OLED_MEMORY_ERROR);           break;
                 _0x8E:
00378f 30e2      	CPI  R30,LOW(0x2)
003790 e0a0      	LDI  R26,HIGH(0x2)
003791 07fa      	CPC  R31,R26
003792 f419      	BRNE _0x90
003793 e0a2      	LDI  R26,LOW(2)
003794 940e 7bc7 	CALL _OLED_showMemoryStatus
                 ; 0000 01CE                     default                 :   break;
                 _0x90:
                 ; 0000 01CF                 }
                 _0x8C:
                 ; 0000 01D0 
                 ; 0000 01D1                 timer_1sec_flag = 0;
003796 98f2      	CBI  0x1E,2
                 ; 0000 01D2             }
                 ; 0000 01D3         } // -- device enable -- //
                 _0x68:
                 ; 0000 01D4         else                                                    // ----- device disable ----- //
003797 c06c      	RJMP _0x93
                 _0x2D:
                 ; 0000 01D5         {
                 ; 0000 01D6             // -- no alarm -- // ;-P
                 ; 0000 01D7             buzzer_on = 0;                      // -- buzzer off -- //
003798 98f3      	CBI  0x1E,3
                 ; 0000 01D8             for(k=0;k<USE_DOUT;k++)             // -- MAX_DO_CHANNEL
                +
003799 e040     +LDI R20 , LOW ( 0 )
00379a e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x97:
                +
00379b 3042     +CPI R20 , LOW ( 2 )
00379c e0e0     +LDI R30 , HIGH ( 2 )
00379d 075e     +CPC R21 , R30
                 	__CPWRN 20,21,2
00379e f44c      	BRGE _0x98
                 ; 0000 01D9             {
                 ; 0000 01DA                 IO_dout(k,!dout_config[k].stateOnEvent);    // -- Digital Output X OFF -- //
00379f 940e bbab 	CALL SUBOPT_0x1
0037a1 940e bbb5 	CALL SUBOPT_0x2
0037a3 940e 4205 	CALL _IO_dout
                 ; 0000 01DB             }
                +
0037a5 5f4f     +SUBI R20 , LOW ( - 1 )
0037a6 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
0037a7 cff3      	RJMP _0x97
                 _0x98:
                 ; 0000 01DC 
                 ; 0000 01DD 
                 ; 0000 01DE             if(TEMP_SEL == TEMP_TYPE_K){
0037a8 940e bce8 	CALL SUBOPT_0x2E
0037aa f5d9      	BRNE _0x99
                 ; 0000 01DF                 if(hwCalId == 9){
0037ab 91a0 10f4 	LDS  R26,_hwCalId
0037ad 91b0 10f5 	LDS  R27,_hwCalId+1
0037af 9719      	SBIW R26,9
0037b0 f439      	BRNE _0x9A
                 ; 0000 01E0                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS N : X.XX                    \r");
                +
0037b1 e2e4     +LDI R30 , LOW ( 2 * _0x0 + ( 260 ) )
0037b2 e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 260 ) )
0037b3 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 260 ) )
0037b4 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 260 ) )
                 	__POINTD1FN _0x0,260
0037b5 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 01E1                 }
                 ; 0000 01E2                 else if(SENSOR_CONNECT){
0037b7 c02b      	RJMP _0x9B
                 _0x9A:
0037b8 940e bcf3 	CALL SUBOPT_0x2F
0037ba 9730      	SBIW R30,0
0037bb f0e9      	BREQ _0x9C
                 ; 0000 01E3                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : %f                     \r",hwCalId,(adcData[hwCalId]*ADC_CONV_FAC*100));
                +
0037bc e6eb     +LDI R30 , LOW ( 2 * _0x0 + ( 331 ) )
0037bd e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 331 ) )
0037be e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 331 ) )
0037bf e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 331 ) )
                 	__POINTD1FN _0x0,331
0037c0 940e bcfa 	CALL SUBOPT_0x30
0037c2 2766      	CLR  R22
0037c3 2777      	CLR  R23
0037c4 940e bcfa 	CALL SUBOPT_0x30
0037c6 940e bd01 	CALL SUBOPT_0x31
0037c8 937f      	PUSH R23
0037c9 936f      	PUSH R22
0037ca 93ff      	PUSH R31
0037cb 93ef      	PUSH R30
0037cc 940e bd04 	CALL SUBOPT_0x32
0037ce 91af      	POP  R26
0037cf 91bf      	POP  R27
0037d0 918f      	POP  R24
0037d1 919f      	POP  R25
0037d2 940e d7dd 	CALL __MULF12
0037d4 940e bd11 	CALL SUBOPT_0x33
0037d6 940e bc8a 	CALL SUBOPT_0x20
                 ; 0000 01E4                 }
                 ; 0000 01E5                 else{
0037d8 c00a      	RJMP _0x9D
                 _0x9C:
                 ; 0000 01E6                     printDebug("<main> [Device disable] [TYPE-K] $CMDSNS %d : disconnected           \r",hwCalId);
                +
0037d9 ebe2     +LDI R30 , LOW ( 2 * _0x0 + ( 402 ) )
0037da e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 402 ) )
0037db e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 402 ) )
0037dc e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 402 ) )
                 	__POINTD1FN _0x0,402
0037dd 940e bcfa 	CALL SUBOPT_0x30
0037df 940e bd18 	CALL SUBOPT_0x34
0037e1 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 01E7                 }
                 _0x9D:
                 _0x9B:
                 ; 0000 01E8                 delay_ms(200);
0037e3 940e bd1d 	CALL SUBOPT_0x35
                 ; 0000 01E9             }
                 ; 0000 01EA             else if(TEMP_SEL == TEMP_TMEC){
0037e5 c01e      	RJMP _0x9E
                 _0x99:
0037e6 940e bce8 	CALL SUBOPT_0x2E
0037e8 30e1      	CPI  R30,LOW(0x1)
0037e9 f429      	BRNE _0x9F
                 ; 0000 01EB                     printDebug("<main> [Device disable] [TMEC]                                       \r");
                +
0037ea efe9     +LDI R30 , LOW ( 2 * _0x0 + ( 473 ) )
0037eb e0f3     +LDI R31 , HIGH ( 2 * _0x0 + ( 473 ) )
0037ec e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 473 ) )
0037ed e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 473 ) )
                 	__POINTD1FN _0x0,473
0037ee c011      	RJMP _0x136
                 ; 0000 01EC             }
                 ; 0000 01ED             else if(TEMP_SEL == TEMP_PT100){
                 _0x9F:
0037ef 940e bce8 	CALL SUBOPT_0x2E
0037f1 30e2      	CPI  R30,LOW(0x2)
0037f2 f429      	BRNE _0xA1
                 ; 0000 01EE                     printDebug("<main> [Device disable] [PT100]                                      \r");
                +
0037f3 e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 544 ) )
0037f4 e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 544 ) )
0037f5 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 544 ) )
0037f6 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 544 ) )
                 	__POINTD1FN _0x0,544
0037f7 c008      	RJMP _0x136
                 ; 0000 01EF             }
                 ; 0000 01F0             else if(TEMP_SEL == TEMP_RESERVED){
                 _0xA1:
0037f8 940e bce8 	CALL SUBOPT_0x2E
0037fa 30e3      	CPI  R30,LOW(0x3)
0037fb f441      	BRNE _0xA3
                 ; 0000 01F1                     printDebug("<main> [Device disable] [RESERVED]                                   \r");
                +
0037fc e8e7     +LDI R30 , LOW ( 2 * _0x0 + ( 615 ) )
0037fd e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 615 ) )
0037fe e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 615 ) )
0037ff e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 615 ) )
                 	__POINTD1FN _0x0,615
                 _0x136:
003800 940e da29 	CALL __PUTPARD1
003802 940e bd21 	CALL SUBOPT_0x36
                 ; 0000 01F2             }
                 ; 0000 01F3         }
                 _0xA3:
                 _0x9E:
                 _0x93:
                 ; 0000 01F4 
                 ; 0000 01F5         #asm("wdr")
003804 95a8      	wdr
                 ; 0000 01F6     }
003805 ccef      	RJMP _0x10
                 ; 0000 01F7 
                 ; 0000 01F8 }
                 _0xA4:
003806 cfff      	RJMP _0xA4
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Status & Event Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int updateStatus(void)   // -- manipulate function in status.c -- //
                 ; 0000 0200 {
                 _updateStatus:
                 ; 0000 0201     int                 res=0, i=0, err=0;
                 ; 0000 0202     static TIMER        ETH_rst_timer=0xFFFFFFFF;
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0000 0203 
                 ; 0000 0204     // --------------- Update Sensor's Event --------------- //
                 ; 0000 0205     for(i=0;i<MAX_SENS_CHANNEL;i++)
003807 940e bd26 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                +
003809 e020     +LDI R18 , LOW ( 0 )
00380a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xA7:
                +
00380b 3025     +CPI R18 , LOW ( 5 )
00380c e0e0     +LDI R30 , HIGH ( 5 )
00380d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00380e f4dc      	BRGE _0xA8
                 ; 0000 0206     {
                 ; 0000 0207         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
00380f 940e bbc1 	CALL SUBOPT_0x4
003811 f0a9      	BREQ _0xA9
                 ; 0000 0208         {
                 ; 0000 0209             // ----------- Update Probe Status ------------------------- //
                 ; 0000 020A             err =   updateSensorStatus(i);
003812 01d9      	MOVW R26,R18
003813 940e 7257 	CALL _updateSensorStatus
003815 01af      	MOVW R20,R30
                 ; 0000 020B             if(err >= 0){
003816 2355      	TST  R21
003817 f07a      	BRMI _0xAA
                 ; 0000 020C                 res |=  err;
                +
003818 2b04     +OR R16 , R20
003819 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 020D                 if(sensor_config[i].alarmEnable && !err)        // . sensor alarm enable . //
00381a 940e bd2b 	CALL SUBOPT_0x38
00381c f019      	BREQ _0xAC
00381d 2e04      	MOV  R0,R20
00381e 2a05      	OR   R0,R21
00381f f009      	BREQ _0xAD
                 _0xAC:
003820 c006      	RJMP _0xAB
                 _0xAD:
                 ; 0000 020E                 {
                 ; 0000 020F                     // ----------- Update Temperature Status ------------------- //
                 ; 0000 0210                     err =   updateDataStatus(i);
003821 01d9      	MOVW R26,R18
003822 940e 728a 	CALL _updateDataStatus
003824 01af      	MOVW R20,R30
                 ; 0000 0211                     res |=  err;
                +
003825 2b04     +OR R16 , R20
003826 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0212                 }
                 ; 0000 0213             }
                 _0xAB:
                 ; 0000 0214         }
                 _0xAA:
                 ; 0000 0215     }
                 _0xA9:
                +
003827 5f2f     +SUBI R18 , LOW ( - 1 )
003828 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003829 cfe1      	RJMP _0xA7
                 _0xA8:
                 ; 0000 0216 
                 ; 0000 0217     // --- Update Battery Status --- //
                 ; 0000 0218     err =   updateBatteryStatus();
00382a 940e 7176 	CALL _updateBatteryStatus
00382c 01af      	MOVW R20,R30
                 ; 0000 0219     res |=  err;
                +
00382d 2b04     +OR R16 , R20
00382e 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 021A     // --- Update Digital Input Status --- //
                 ; 0000 021B     err =   updateDinStatus();
00382f 940e 7373 	CALL _updateDinStatus
003831 01af      	MOVW R20,R30
                 ; 0000 021C     res |=  err;
                +
003832 2b04     +OR R16 , R20
003833 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 021D     // --- Update Digital Output Status --- //
                 ; 0000 021E     err =   updateDoutStatus();
003834 940e 73f1 	CALL _updateDoutStatus
003836 01af      	MOVW R20,R30
                 ; 0000 021F     res |=  err;
                +
003837 2b04     +OR R16 , R20
003838 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0220     // --- Update Analog Input Status --- //
                 ; 0000 0221     // --- Update Communication Status --- //
                 ; 0000 0222     err =   updateCommStatus();
003839 940e 71d3 	CALL _updateCommStatus
00383b 01af      	MOVW R20,R30
                 ; 0000 0223     if(err){
00383c 2e04      	MOV  R0,R20
00383d 2a05      	OR   R0,R21
00383e f189      	BREQ _0xAE
                 ; 0000 0224 
                 ; 0000 0225         if((ETH_rst_timer == 0xFFFFFFFF) || (ETH_rst_timer == 0)){
00383f 940e bd35 	CALL SUBOPT_0x39
003841 940e bd3e 	CALL SUBOPT_0x3A
003843 f029      	BREQ _0xB0
003844 940e bd35 	CALL SUBOPT_0x39
003846 940e da89 	CALL __CPD02
003848 f471      	BRNE _0xAF
                 _0xB0:
                 ; 0000 0226             TIMER_setTimer(&ETH_rst_timer,15);
003849 eee0      	LDI  R30,LOW(_ETH_rst_timer_S0000001000)
00384a e1f4      	LDI  R31,HIGH(_ETH_rst_timer_S0000001000)
00384b 940e bd46 	CALL SUBOPT_0x3B
                 ; 0000 0227             printDebug("<updateStatus> ETH_rst_timer time left = %ld(%lX)\r\n",(ETH_rst_timer-baseCounter),(ETH_rst_timer-baseCounter));
                +
00384d ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 686 ) )
00384e e0f4     +LDI R31 , HIGH ( 2 * _0x0 + ( 686 ) )
00384f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 686 ) )
003850 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 686 ) )
                 	__POINTD1FN _0x0,686
003851 940e bd4e 	CALL SUBOPT_0x3C
003853 940e bd4e 	CALL SUBOPT_0x3C
003855 940e bc8a 	CALL SUBOPT_0x20
                 ; 0000 0228         }
                 ; 0000 0229 
                 ; 0000 022A         if(TIMER_checkTimerExceed(ETH_rst_timer) == 1){
                 _0xAF:
003857 940e bd35 	CALL SUBOPT_0x39
003859 940e 405d 	CALL _TIMER_checkTimerExceed
00385b 30e1      	CPI  R30,LOW(0x1)
00385c e0a0      	LDI  R26,HIGH(0x1)
00385d 07fa      	CPC  R31,R26
00385e f489      	BRNE _0xB2
                 ; 0000 022B             ETH_NORM;
00385f 91e0 0102 	LDS  R30,258
003861 77ef      	ANDI R30,0x7F
003862 93e0 0102 	STS  258,R30
                 ; 0000 022C             ETH_reset();
003864 940e 5fa5 	CALL _ETH_reset
                 ; 0000 022D             ETH_rst_timer = 0xFFFFFFFF;
003866 940e bca6 	CALL SUBOPT_0x24
003868 93e0 14e0 	STS  _ETH_rst_timer_S0000001000,R30
00386a 93f0 14e1 	STS  _ETH_rst_timer_S0000001000+1,R31
00386c 9360 14e2 	STS  _ETH_rst_timer_S0000001000+2,R22
00386e 9370 14e3 	STS  _ETH_rst_timer_S0000001000+3,R23
                 ; 0000 022E         }
                 ; 0000 022F     }
                 _0xB2:
                 ; 0000 0230     res |=  err;
                 _0xAE:
                +
003870 2b04     +OR R16 , R20
003871 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0231     // --- Update Memory Card Status --- //
                 ; 0000 0232     err =   updateMemoryStatus();
003872 940e 7237 	CALL _updateMemoryStatus
003874 01af      	MOVW R20,R30
                 ; 0000 0233     res |=  err;
                +
003875 2b04     +OR R16 , R20
003876 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
                 ; 0000 0234 
                 ; 0000 0235     return res;
003877 01f8      	MOVW R30,R16
003878 940e daa0 	CALL __LOADLOCR6
00387a 9626      	ADIW R28,6
00387b 9508      	RET
                 ; 0000 0236 }
                 ;/*============================================================*/
                 ;int eventCapture(void)
                 ; 0000 0239 {
                 _eventCapture:
                 ; 0000 023A     int                 res=0, i=0, err=0;
                 ; 0000 023B     unsigned long int   timestamp_rd;
                 ; 0000 023C     unsigned char       statusCode;
                 ; 0000 023D 
                 ; 0000 023E     // --------------- Check for Maintenance Event --------------- //
                 ; 0000 023F     err =   checkSendMIPAlarm(&statusCode);
00387c 9725      	SBIW R28,5
00387d 940e bd26 	CALL SUBOPT_0x37
                 ;	res -> R16,R17
                 ;	i -> R18,R19
                 ;	err -> R20,R21
                 ;	timestamp_rd -> Y+7
                 ;	statusCode -> Y+6
00387f 01de      	MOVW R26,R28
003880 9616      	ADIW R26,6
003881 940e 77d1 	CALL _checkSendMIPAlarm
003883 940e bd63 	CALL SUBOPT_0x3D
                 ; 0000 0240     res |=  err;
                 ; 0000 0241     if(err){
003885 f0c1      	BREQ _0xB3
                 ; 0000 0242         timestamp_rd    = DS1672_read();
003886 940e bd69 	CALL SUBOPT_0x3E
                 ; 0000 0243         if(statusCode)
003888 f029      	BREQ _0xB4
                 ; 0000 0244         {
                 ; 0000 0245             printDebug("\r\n<eventCapture> !!!!!!!!!!! Monitor Mode !!!!!\r\n");
                +
003889 e0e2     +LDI R30 , LOW ( 2 * _0x0 + ( 738 ) )
00388a e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 738 ) )
00388b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 738 ) )
00388c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 738 ) )
                 	__POINTD1FN _0x0,738
00388d c004      	RJMP _0x137
                 ; 0000 0246             //printOLED("AL12%1d",i+1);
                 ; 0000 0247         }
                 ; 0000 0248         else
                 _0xB4:
                 ; 0000 0249         {
                 ; 0000 024A             printDebug("\r\n<eventCapture> !!!!!!!!!!! Maintenance In Progress !!!!!\r\n");
                +
00388e e3e4     +LDI R30 , LOW ( 2 * _0x0 + ( 788 ) )
00388f e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 788 ) )
003890 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 788 ) )
003891 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 788 ) )
                 	__POINTD1FN _0x0,788
                 _0x137:
003892 940e da29 	CALL __PUTPARD1
003894 940e bd21 	CALL SUBOPT_0x36
                 ; 0000 024B             //printOLED("AL02%1d",i+1);
                 ; 0000 024C         }
                 ; 0000 024D         err = addEventQueue(timestamp_rd,EVENT_MTNC,statusCode);
003896 940e bd72 	CALL SUBOPT_0x3F
003898 e1e0      	LDI  R30,LOW(16)
003899 940e bd79 	CALL SUBOPT_0x40
                 ; 0000 024E         if(err < 0){
00389b f412      	BRPL _0xB6
                 ; 0000 024F             printDebug("<eventCapture> addEventQueue() failed\r\n");
00389c 940e bd80 	CALL SUBOPT_0x41
                 ; 0000 0250         }
                 ; 0000 0251     }
                 _0xB6:
                 ; 0000 0252 
                 ; 0000 0253     /*
                 ; 0000 0254     // -- Analog Input Event -- //
                 ; 0000 0255     // -- reserved -- //
                 ; 0000 0256     */
                 ; 0000 0257     // --------------- Check for Power Down Event --------------- //
                 ; 0000 0258     err =   checkSendPowerAlarm(&statusCode);
                 _0xB3:
00389e 01de      	MOVW R26,R28
00389f 9616      	ADIW R26,6
0038a0 940e 77e6 	CALL _checkSendPowerAlarm
0038a2 940e bd63 	CALL SUBOPT_0x3D
                 ; 0000 0259     res |=  err;
                 ; 0000 025A     if(err){
0038a4 f0c1      	BREQ _0xB7
                 ; 0000 025B         timestamp_rd    = DS1672_read();
0038a5 940e bd69 	CALL SUBOPT_0x3E
                 ; 0000 025C         if(statusCode)
0038a7 f029      	BREQ _0xB8
                 ; 0000 025D         {
                 ; 0000 025E             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Down !!!!!\r\n");
                +
0038a8 e9e9     +LDI R30 , LOW ( 2 * _0x0 + ( 889 ) )
0038a9 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 889 ) )
0038aa e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 889 ) )
0038ab e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 889 ) )
                 	__POINTD1FN _0x0,889
0038ac c004      	RJMP _0x138
                 ; 0000 025F             //printOLED("AL12%1d",i+1);
                 ; 0000 0260         }
                 ; 0000 0261         else
                 _0xB8:
                 ; 0000 0262         {
                 ; 0000 0263             printDebug("\r\n<eventCapture> !!!!!!!!!!! Main Power Up !!!!!\r\n");
                +
0038ad ecee     +LDI R30 , LOW ( 2 * _0x0 + ( 942 ) )
0038ae e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 942 ) )
0038af e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 942 ) )
0038b0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 942 ) )
                 	__POINTD1FN _0x0,942
                 _0x138:
0038b1 940e da29 	CALL __PUTPARD1
0038b3 940e bd21 	CALL SUBOPT_0x36
                 ; 0000 0264             //printOLED("AL02%1d",i+1);
                 ; 0000 0265         }
                 ; 0000 0266         err = addEventQueue(timestamp_rd,EVENT_PWR,statusCode);
0038b5 940e bd72 	CALL SUBOPT_0x3F
0038b7 e5e0      	LDI  R30,LOW(80)
0038b8 940e bd79 	CALL SUBOPT_0x40
                 ; 0000 0267         if(err < 0){
0038ba f412      	BRPL _0xBA
                 ; 0000 0268             printDebug("<eventCapture> addEventQueue() failed\r\n");
0038bb 940e bd80 	CALL SUBOPT_0x41
                 ; 0000 0269         }
                 ; 0000 026A     }
                 _0xBA:
                 ; 0000 026B 
                 ; 0000 026C     // --------------- Check for Battery Event --------------- //
                 ; 0000 026D     err =   checkSendBatteryAlarm(&statusCode);
                 _0xB7:
0038bd 01de      	MOVW R26,R28
0038be 9616      	ADIW R26,6
0038bf 940e 782e 	CALL _checkSendBatteryAlarm
0038c1 940e bd63 	CALL SUBOPT_0x3D
                 ; 0000 026E     res |=  err;
                 ; 0000 026F     if(err){
0038c3 f0c1      	BREQ _0xBB
                 ; 0000 0270         timestamp_rd    = DS1672_read();
0038c4 940e bd69 	CALL SUBOPT_0x3E
                 ; 0000 0271         if(statusCode)
0038c6 f029      	BREQ _0xBC
                 ; 0000 0272         {
                 ; 0000 0273             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery Low !!!!!\r\n");
                +
0038c7 e0e1     +LDI R30 , LOW ( 2 * _0x0 + ( 993 ) )
0038c8 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 993 ) )
0038c9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 993 ) )
0038ca e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 993 ) )
                 	__POINTD1FN _0x0,993
0038cb c004      	RJMP _0x139
                 ; 0000 0274             //printOLED("AL12%1d",i+1);
                 ; 0000 0275         }
                 ; 0000 0276         else
                 _0xBC:
                 ; 0000 0277         {
                 ; 0000 0278             printDebug("\r\n<eventCapture> !!!!!!!!!!! Battery OK !!!!!\r\n");
                +
0038cc e3e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1042 ) )
0038cd e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1042 ) )
0038ce e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1042 ) )
0038cf e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1042 ) )
                 	__POINTD1FN _0x0,1042
                 _0x139:
0038d0 940e da29 	CALL __PUTPARD1
0038d2 940e bd21 	CALL SUBOPT_0x36
                 ; 0000 0279             //printOLED("AL02%1d",i+1);
                 ; 0000 027A         }
                 ; 0000 027B         err = addEventQueue(timestamp_rd,EVENT_BAT,statusCode);
0038d4 940e bd72 	CALL SUBOPT_0x3F
0038d6 e5e1      	LDI  R30,LOW(81)
0038d7 940e bd79 	CALL SUBOPT_0x40
                 ; 0000 027C         if(err < 0){
0038d9 f412      	BRPL _0xBE
                 ; 0000 027D             printDebug("<eventCapture> addEventQueue() failed\r\n");
0038da 940e bd80 	CALL SUBOPT_0x41
                 ; 0000 027E         }
                 ; 0000 027F     }
                 _0xBE:
                 ; 0000 0280 
                 ; 0000 0281     // --------------- Check for Memory Event --------------- //
                 ; 0000 0282     err =   checkSendMemoryAlarm(&statusCode);
                 _0xBB:
0038dc 01de      	MOVW R26,R28
0038dd 9616      	ADIW R26,6
0038de 940e 7887 	CALL _checkSendMemoryAlarm
0038e0 940e bd63 	CALL SUBOPT_0x3D
                 ; 0000 0283     res |=  err;
                 ; 0000 0284     if(err){
0038e2 f131      	BREQ _0xBF
                 ; 0000 0285         timestamp_rd    = DS1672_read();
0038e3 940e 43d3 	CALL _DS1672_read
                +
0038e5 83ef     +STD Y + 7 , R30
0038e6 87f8     +STD Y + 7 + 1 , R31
0038e7 8769     +STD Y + 7 + 2 , R22
0038e8 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
                 ; 0000 0286         if(statusCode == ES_LOWMEMORY)
0038e9 81ae      	LDD  R26,Y+6
0038ea 30a1      	CPI  R26,LOW(0x1)
0038eb f429      	BRNE _0xC0
                 ; 0000 0287         {
                 ; 0000 0288             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Low !!!!!\r\n");
                +
0038ec e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1090 ) )
0038ed e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1090 ) )
0038ee e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1090 ) )
0038ef e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1090 ) )
                 	__POINTD1FN _0x0,1090
0038f0 c00c      	RJMP _0x13A
                 ; 0000 0289             //printOLED("AL12%1d",i+1);
                 ; 0000 028A         }
                 ; 0000 028B         else if(statusCode == ES_MEMORYERROR)
                 _0xC0:
0038f1 81ae      	LDD  R26,Y+6
0038f2 30a2      	CPI  R26,LOW(0x2)
0038f3 f429      	BRNE _0xC2
                 ; 0000 028C         {
                 ; 0000 028D             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory Error !!!!!\r\n");
                +
0038f4 e9e2     +LDI R30 , LOW ( 2 * _0x0 + ( 1138 ) )
0038f5 e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1138 ) )
0038f6 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1138 ) )
0038f7 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1138 ) )
                 	__POINTD1FN _0x0,1138
0038f8 c004      	RJMP _0x13A
                 ; 0000 028E             //printOLED("AL12%1d",i+1);
                 ; 0000 028F         }
                 ; 0000 0290         else
                 _0xC2:
                 ; 0000 0291         {
                 ; 0000 0292             printDebug("\r\n<eventCapture> !!!!!!!!!!! Memory OK !!!!!\r\n");
                +
0038f9 ece4     +LDI R30 , LOW ( 2 * _0x0 + ( 1188 ) )
0038fa e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1188 ) )
0038fb e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1188 ) )
0038fc e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1188 ) )
                 	__POINTD1FN _0x0,1188
                 _0x13A:
0038fd 940e da29 	CALL __PUTPARD1
0038ff 940e bd21 	CALL SUBOPT_0x36
                 ; 0000 0293             //printOLED("AL02%1d",i+1);
                 ; 0000 0294         }
                 ; 0000 0295         err = addEventQueue(timestamp_rd,EVENT_MEM,statusCode);
003901 940e bd72 	CALL SUBOPT_0x3F
003903 e7e0      	LDI  R30,LOW(112)
003904 940e bd79 	CALL SUBOPT_0x40
                 ; 0000 0296         if(err < 0){
003906 f412      	BRPL _0xC4
                 ; 0000 0297             printDebug("<eventCapture> addEventQueue() failed\r\n");
003907 940e bd80 	CALL SUBOPT_0x41
                 ; 0000 0298         }
                 ; 0000 0299     }
                 _0xC4:
                 ; 0000 029A 
                 ; 0000 029B     // --------------- Check for Digital Input Event --------------- //
                 ; 0000 029C     for(i=0;i<USE_DIN;i++)
                 _0xBF:
                +
003909 e020     +LDI R18 , LOW ( 0 )
00390a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xC6:
                +
00390b 3022     +CPI R18 , LOW ( 2 )
00390c e0e0     +LDI R30 , HIGH ( 2 )
00390d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00390e f544      	BRGE _0xC7
                 ; 0000 029D     {
                 ; 0000 029E         if(din_config[i].channelEnable)
00390f 940e bc3e 	CALL SUBOPT_0x15
003911 81e0      	LD   R30,Z
003912 30e0      	CPI  R30,0
003913 f101      	BREQ _0xC8
                 ; 0000 029F         {
                 ; 0000 02A0             err =   checkSendDinAlarm(i,&statusCode);
003914 940e bd85 	CALL SUBOPT_0x42
003916 940e 78d5 	CALL _checkSendDinAlarm
003918 940e bd63 	CALL SUBOPT_0x3D
                 ; 0000 02A1             res |=  err;
                 ; 0000 02A2             if(err){
00391a f0c9      	BREQ _0xC9
                 ; 0000 02A3                 timestamp_rd    = DS1672_read();
00391b 940e bd69 	CALL SUBOPT_0x3E
                 ; 0000 02A4                 if(statusCode)
00391d f029      	BREQ _0xCA
                 ; 0000 02A5                 {
                 ; 0000 02A6                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Rising !!!!!\r\n", i+1);
                +
00391e efe3     +LDI R30 , LOW ( 2 * _0x0 + ( 1235 ) )
00391f e0f6     +LDI R31 , HIGH ( 2 * _0x0 + ( 1235 ) )
003920 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1235 ) )
003921 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1235 ) )
                 	__POINTD1FN _0x0,1235
003922 c004      	RJMP _0x13B
                 ; 0000 02A7                     //printOLED("AL12%1d",i+1);
                 ; 0000 02A8                 }
                 ; 0000 02A9                 else
                 _0xCA:
                 ; 0000 02AA                 {
                 ; 0000 02AB                     printDebug("\r\n<eventCapture> !!!!!!!!!!! Din %d Falling !!!!!\r\n", i+1);
                +
003923 e2e6     +LDI R30 , LOW ( 2 * _0x0 + ( 1286 ) )
003924 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1286 ) )
003925 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1286 ) )
003926 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1286 ) )
                 	__POINTD1FN _0x0,1286
                 _0x13B:
003927 940e da29 	CALL __PUTPARD1
003929 940e bd8a 	CALL SUBOPT_0x43
                 ; 0000 02AC                     //printOLED("AL02%1d",i+1);
                 ; 0000 02AD                 }
                 ; 0000 02AE                 err = addEventQueue(timestamp_rd,EVENT_DIN(i),statusCode);
00392b 940e bd72 	CALL SUBOPT_0x3F
00392d 2fe2      	MOV  R30,R18
00392e 6ce0      	ORI  R30,LOW(0xC0)
00392f 940e bd79 	CALL SUBOPT_0x40
                 ; 0000 02AF                 if(err < 0){
003931 f412      	BRPL _0xCC
                 ; 0000 02B0                     printDebug("<eventCapture> addEventQueue() failed\r\n");
003932 940e bd80 	CALL SUBOPT_0x41
                 ; 0000 02B1                 }
                 ; 0000 02B2             }
                 _0xCC:
                 ; 0000 02B3         }// -- din channel Enable -- //
                 _0xC9:
                 ; 0000 02B4     }// -- for loop -- //
                 _0xC8:
                +
003934 5f2f     +SUBI R18 , LOW ( - 1 )
003935 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
003936 cfd4      	RJMP _0xC6
                 _0xC7:
                 ; 0000 02B5 
                 ; 0000 02B6     // --------------- Check for Sensor's Event --------------- //
                 ; 0000 02B7     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
003937 e020     +LDI R18 , LOW ( 0 )
003938 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xCE:
                +
003939 3025     +CPI R18 , LOW ( 5 )
00393a e0e0     +LDI R30 , HIGH ( 5 )
00393b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
00393c f014      	BRLT PC+3
00393d 940c 39a3 	JMP _0xCF
                 ; 0000 02B8     {
                 ; 0000 02B9         if(operating_config.sensorEnable[i])        // .. sensor enable .. //
00393f 940e bbc1 	CALL SUBOPT_0x4
003941 f411      	BRNE PC+3
003942 940c 39a0 	JMP _0xD0
                 ; 0000 02BA         {
                 ; 0000 02BB             // ----------- Check Probe Alarm ------------------------- //
                 ; 0000 02BC             err =   checkSendSensorAlarm(i,&statusCode);
003944 940e bd85 	CALL SUBOPT_0x42
003946 940e 7933 	CALL _checkSendSensorAlarm
003948 940e bd63 	CALL SUBOPT_0x3D
                 ; 0000 02BD             res |=  err;
                 ; 0000 02BE             if(err){
00394a f131      	BREQ _0xD1
                 ; 0000 02BF                 timestamp_rd    = DS1672_read();
00394b 940e bd69 	CALL SUBOPT_0x3E
                 ; 0000 02C0                 if(statusCode)
00394d f059      	BREQ _0xD2
                 ; 0000 02C1                 {
                 ; 0000 02C2                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d DISCONNECT !!!!!\r\n", i+1);
                +
00394e e5ea     +LDI R30 , LOW ( 2 * _0x0 + ( 1338 ) )
00394f e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1338 ) )
003950 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1338 ) )
003951 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1338 ) )
                 	__POINTD1FN _0x0,1338
003952 940e bd91 	CALL SUBOPT_0x44
                 ; 0000 02C3                     printOLED("AL12%1d",i+1);
                +
003954 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003955 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003956 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003957 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003958 c00a      	RJMP _0x13C
                 ; 0000 02C4                 }
                 ; 0000 02C5                 else
                 _0xD2:
                 ; 0000 02C6                 {
                 ; 0000 02C7                     printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d CONNECT !!!!!\r\n", i+1);
                +
003959 e9eb     +LDI R30 , LOW ( 2 * _0x0 + ( 1403 ) )
00395a e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1403 ) )
00395b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1403 ) )
00395c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1403 ) )
                 	__POINTD1FN _0x0,1403
00395d 940e bd91 	CALL SUBOPT_0x44
                 ; 0000 02C8                     printOLED("AL02%1d",i+1);
                +
00395f ede1     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003960 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003961 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003962 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13C:
003963 940e da29 	CALL __PUTPARD1
003965 940e bd94 	CALL SUBOPT_0x45
                 ; 0000 02C9                 }
                 ; 0000 02CA 
                 ; 0000 02CB                 err = addEventQueue(timestamp_rd,EVENT_SEN(i),statusCode);
003967 940e bd72 	CALL SUBOPT_0x3F
003969 2fe2      	MOV  R30,R18
00396a 6fe0      	ORI  R30,LOW(0xF0)
00396b 940e bd79 	CALL SUBOPT_0x40
                 ; 0000 02CC                 if(err < 0){
00396d f412      	BRPL _0xD4
                 ; 0000 02CD                     printDebug("<eventCapture> addEventQueue() failed\r\n");
00396e 940e bd80 	CALL SUBOPT_0x41
                 ; 0000 02CE                 }
                 ; 0000 02CF             }// -- check sensor alarm -- //
                 _0xD4:
                 ; 0000 02D0             else
003970 c02f      	RJMP _0xD5
                 _0xD1:
                 ; 0000 02D1             {
                 ; 0000 02D2                 if(sensor_config[i].alarmEnable)        // . sensor alarm enable . //
003971 940e bd2b 	CALL SUBOPT_0x38
003973 f161      	BREQ _0xD6
                 ; 0000 02D3                 {
                 ; 0000 02D4                     // ----------- Check Temperature Alarm ------------------- //
                 ; 0000 02D5                     err =   checkSendDataAlarm(i,&statusCode);
003974 940e bd85 	CALL SUBOPT_0x42
003976 940e 7993 	CALL _checkSendDataAlarm
003978 940e bd63 	CALL SUBOPT_0x3D
                 ; 0000 02D6                     res |=  err;
                 ; 0000 02D7                     if(err){
00397a f129      	BREQ _0xD7
                 ; 0000 02D8                         timestamp_rd    = DS1672_read();
00397b 940e bd69 	CALL SUBOPT_0x3E
                 ; 0000 02D9                         if(statusCode)
00397d f059      	BREQ _0xD8
                 ; 0000 02DA                         {
                 ; 0000 02DB                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature ERROR !!!!!\r\n", i+1);
                +
00397e ede9     +LDI R30 , LOW ( 2 * _0x0 + ( 1465 ) )
00397f e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1465 ) )
003980 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1465 ) )
003981 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1465 ) )
                 	__POINTD1FN _0x0,1465
003982 940e bd91 	CALL SUBOPT_0x44
                 ; 0000 02DC                             printOLED("AL12%1d",i+1);
                +
003984 e9e3     +LDI R30 , LOW ( 2 * _0x0 + ( 1395 ) )
003985 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1395 ) )
003986 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1395 ) )
003987 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1395 ) )
                 	__POINTD1FN _0x0,1395
003988 c00a      	RJMP _0x13D
                 ; 0000 02DD                         }
                 ; 0000 02DE                         else
                 _0xD8:
                 ; 0000 02DF                         {
                 ; 0000 02E0                             printDebug("\r\n<eventCapture> !!!!!!!!!!! PROBE %d Temperature OK !!!!!\r\n", i+1);
                +
003989 e1e9     +LDI R30 , LOW ( 2 * _0x0 + ( 1529 ) )
00398a e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1529 ) )
00398b e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1529 ) )
00398c e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1529 ) )
                 	__POINTD1FN _0x0,1529
00398d 940e bd91 	CALL SUBOPT_0x44
                 ; 0000 02E1                             printOLED("AL02%1d",i+1);
                +
00398f ede1     +LDI R30 , LOW ( 2 * _0x0 + ( 1457 ) )
003990 e0f7     +LDI R31 , HIGH ( 2 * _0x0 + ( 1457 ) )
003991 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1457 ) )
003992 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1457 ) )
                 	__POINTD1FN _0x0,1457
                 _0x13D:
003993 940e da29 	CALL __PUTPARD1
003995 940e bd94 	CALL SUBOPT_0x45
                 ; 0000 02E2                         }
                 ; 0000 02E3                         err = addEventQueue(timestamp_rd,EVENT_DAT(i),statusCode);
003997 940e bd72 	CALL SUBOPT_0x3F
003999 2fe2      	MOV  R30,R18
00399a 6ee0      	ORI  R30,LOW(0xE0)
00399b 940e bd79 	CALL SUBOPT_0x40
                 ; 0000 02E4                         if(err < 0){
00399d f412      	BRPL _0xDA
                 ; 0000 02E5                             printDebug("<eventCapture> addEventQueue() failed\r\n");
00399e 940e bd80 	CALL SUBOPT_0x41
                 ; 0000 02E6                         }
                 ; 0000 02E7                     }
                 _0xDA:
                 ; 0000 02E8                 }// -- sensor.alarmEnable -- //
                 _0xD7:
                 ; 0000 02E9             }// -- check data alarm -- //
                 _0xD6:
                 _0xD5:
                 ; 0000 02EA         }// -- sensor Enable -- //
                 ; 0000 02EB     }// -- for loop -- //
                 _0xD0:
                +
0039a0 5f2f     +SUBI R18 , LOW ( - 1 )
0039a1 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0039a2 cf96      	RJMP _0xCE
                 _0xCF:
                 ; 0000 02EC 
                 ; 0000 02ED 
                 ; 0000 02EE     return res;
0039a3 01f8      	MOVW R30,R16
0039a4 940e daa0 	CALL __LOADLOCR6
0039a6 962b      	ADIW R28,11
0039a7 9508      	RET
                 ; 0000 02EF }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Realtime Report Management *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int statusReport(void)
                 ; 0000 02F7 {
                 _statusReport:
                 ; 0000 02F8     int                     res = 0;
                 ; 0000 02F9     unsigned long int       timestamp_rd;
                 ; 0000 02FA     unsigned char           *param;
                 ; 0000 02FB     int                     paramLen = 0;
                 ; 0000 02FC 
                 ; 0000 02FD     unsigned short          deviceState;
                 ; 0000 02FE 
                 ; 0000 02FF     switch (status_config.accm)
0039a8 9726      	SBIW R28,6
0039a9 940e bd9f 	CALL SUBOPT_0x46
                 ;	res -> R16,R17
                 ;	timestamp_rd -> Y+8
                 ;	*param -> R18,R19
                 ;	paramLen -> R20,R21
                 ;	deviceState -> Y+6
                +
0039ab e040     +LDI R20 , LOW ( 0 )
0039ac e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
0039ad 91e0 1362 	LDS  R30,_status_config
0039af 940e bda4 	CALL SUBOPT_0x47
                 ; 0000 0300     {
                 ; 0000 0301         case REPORT_SINGLE      :   printDebug("<statusReport> REPORT_SINGLE mode not supported yet\r\n");
0039b1 f449      	BRNE _0xDE
                +
0039b2 e5e6     +LDI R30 , LOW ( 2 * _0x0 + ( 1590 ) )
0039b3 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1590 ) )
0039b4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1590 ) )
0039b5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1590 ) )
                 	__POINTD1FN _0x0,1590
0039b6 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0302                                     return -1;
0039b8 efef      	LDI  R30,LOW(65535)
0039b9 efff      	LDI  R31,HIGH(65535)
0039ba c08a      	RJMP _0x20E009D
                 ; 0000 0303         case REPORT_MULTIPLE    :   printDebug("<statusReport> REPORT_MULTIPLE mode not supported yet\r\n");
                 _0xDE:
0039bb 32e0      	CPI  R30,LOW(0x20)
0039bc e0a0      	LDI  R26,HIGH(0x20)
0039bd 07fa      	CPC  R31,R26
0039be f449      	BRNE _0xDF
                +
0039bf e8ec     +LDI R30 , LOW ( 2 * _0x0 + ( 1644 ) )
0039c0 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1644 ) )
0039c1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1644 ) )
0039c2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1644 ) )
                 	__POINTD1FN _0x0,1644
0039c3 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0304                                     return -1;
0039c5 efef      	LDI  R30,LOW(65535)
0039c6 efff      	LDI  R31,HIGH(65535)
0039c7 c07d      	RJMP _0x20E009D
                 ; 0000 0305         case REPORT_ALL         :   param = (unsigned char *) malloc(sizeof(char) * 11);
                 _0xDF:
0039c8 33e0      	CPI  R30,LOW(0x30)
0039c9 e0a0      	LDI  R26,HIGH(0x30)
0039ca 07fa      	CPC  R31,R26
0039cb f011      	BREQ PC+3
0039cc 940c 3a1e 	JMP _0xE3
0039ce 940e bda9 	CALL SUBOPT_0x48
0039d0 940e a0a2 	CALL _malloc
0039d2 019f      	MOVW R18,R30
                 ; 0000 0306                                     if(param == NULL){
0039d3 2e02      	MOV  R0,R18
0039d4 2a03      	OR   R0,R19
0039d5 f449      	BRNE _0xE1
                 ; 0000 0307                                         printDebug("<statusReport> malloc failed (%d bytes)\r\n",paramLen);
                +
0039d6 ece4     +LDI R30 , LOW ( 2 * _0x0 + ( 1700 ) )
0039d7 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1700 ) )
0039d8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1700 ) )
0039d9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1700 ) )
                 	__POINTD1FN _0x0,1700
0039da 940e bdac 	CALL SUBOPT_0x49
                 ; 0000 0308                                         return -1;
0039dc efef      	LDI  R30,LOW(65535)
0039dd efff      	LDI  R31,HIGH(65535)
0039de c066      	RJMP _0x20E009D
                 ; 0000 0309                                     }
                 ; 0000 030A 
                 ; 0000 030B                                     res = getDeviceState(&deviceState);
                 _0xE1:
0039df 01de      	MOVW R26,R28
0039e0 9616      	ADIW R26,6
0039e1 940e 7406 	CALL _getDeviceState
0039e3 018f      	MOVW R16,R30
                 ; 0000 030C                                     if(res<0){
0039e4 2311      	TST  R17
0039e5 f452      	BRPL _0xE2
                 ; 0000 030D                                         printDebug("<statusReport> getDeviceState() failed\r\n");
                +
0039e6 eeee     +LDI R30 , LOW ( 2 * _0x0 + ( 1742 ) )
0039e7 e0f8     +LDI R31 , HIGH ( 2 * _0x0 + ( 1742 ) )
0039e8 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1742 ) )
0039e9 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1742 ) )
                 	__POINTD1FN _0x0,1742
0039ea 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 030E                                         free ( param );
0039ec 01d9      	MOVW R26,R18
0039ed 940e bdb4 	CALL SUBOPT_0x4A
                 ; 0000 030F                                         return -1;
0039ef c055      	RJMP _0x20E009D
                 ; 0000 0310                                     }
                 ; 0000 0311 
                 ; 0000 0312                                     param[paramLen++] = (deviceState >> 8) & 0x00FF;
                 _0xE2:
0039f0 940e bdb9 	CALL SUBOPT_0x4B
0039f2 81ef      	LDD  R30,Y+7
0039f3 70f0      	ANDI R31,HIGH(0x0)
0039f4 93ec      	ST   X,R30
                 ; 0000 0313                                     param[paramLen++] = (deviceState & 0x00FF);
0039f5 940e bdb9 	CALL SUBOPT_0x4B
0039f7 81ee      	LDD  R30,Y+6
0039f8 93ec      	ST   X,R30
                 ; 0000 0314                                     param[paramLen++] = powerSrcStatus;
0039f9 940e bdc0 	CALL SUBOPT_0x4C
0039fb 91a0 147a 	LDS  R26,_powerSrcStatus
0039fd 83a0      	STD  Z+0,R26
                 ; 0000 0315 
                 ; 0000 0316 
                 ; 0000 0317                                     memcpy(&param[paramLen],&batteryVolt,sizeof(batteryVolt));
0039fe 01fa      	MOVW R30,R20
0039ff 0fe2      	ADD  R30,R18
003a00 1ff3      	ADC  R31,R19
003a01 93fa      	ST   -Y,R31
003a02 93ea      	ST   -Y,R30
003a03 e8e3      	LDI  R30,LOW(_batteryVolt)
003a04 e1f4      	LDI  R31,HIGH(_batteryVolt)
003a05 940e bdc6 	CALL SUBOPT_0x4D
                 ; 0000 0318                                     paramLen         += sizeof(batteryVolt);
                +
003a07 5f4c     +SUBI R20 , LOW ( - 4 )
003a08 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                 ; 0000 0319 
                 ; 0000 031A                                     param[paramLen++] = dinStatus[0];
003a09 940e bdc0 	CALL SUBOPT_0x4C
003a0b 91a0 147c 	LDS  R26,_dinStatus
003a0d 83a0      	STD  Z+0,R26
                 ; 0000 031B                                     param[paramLen++] = dinStatus[1];
003a0e 940e bdc0 	CALL SUBOPT_0x4C
                +
003a10 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
003a12 83a0      	STD  Z+0,R26
                 ; 0000 031C                                     param[paramLen++] = doutStatus[0];
003a13 940e bdc0 	CALL SUBOPT_0x4C
003a15 91a0 147e 	LDS  R26,_doutStatus
003a17 83a0      	STD  Z+0,R26
                 ; 0000 031D                                     param[paramLen++] = doutStatus[1];
003a18 940e bdc0 	CALL SUBOPT_0x4C
                +
003a1a 91a0 147f+LDS R26 , _doutStatus + ( 1 )
                 	__GETB2MN _doutStatus,1
003a1c 83a0      	STD  Z+0,R26
                 ; 0000 031E 
                 ; 0000 031F                                     break;
003a1d c00d      	RJMP _0xDD
                 ; 0000 0320         default                 :   printDebug("<statusReport> status report accm unknown [0x%02X]\r\n",status_config.accm);
                 _0xE3:
                +
003a1e e1e7     +LDI R30 , LOW ( 2 * _0x0 + ( 1783 ) )
003a1f e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1783 ) )
003a20 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1783 ) )
003a21 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1783 ) )
                 	__POINTD1FN _0x0,1783
003a22 940e da29 	CALL __PUTPARD1
003a24 91e0 1362 	LDS  R30,_status_config
003a26 940e bccc 	CALL SUBOPT_0x29
                 ; 0000 0321                                     return -1;
003a28 efef      	LDI  R30,LOW(65535)
003a29 efff      	LDI  R31,HIGH(65535)
003a2a c01a      	RJMP _0x20E009D
                 ; 0000 0322     }
                 _0xDD:
                 ; 0000 0323 
                 ; 0000 0324     timestamp_rd = DS1672_read();
003a2b 940e bdcc 	CALL SUBOPT_0x4E
                 ; 0000 0325 
                 ; 0000 0326     res = ETH_sendStatusReportCmd(timestamp_rd,status_config.accm,param,paramLen);
003a2d 940e bdd3 	CALL SUBOPT_0x4F
003a2f 940e da29 	CALL __PUTPARD1
003a31 91e0 1362 	LDS  R30,_status_config
003a33 93ea      	ST   -Y,R30
003a34 933a      	ST   -Y,R19
003a35 932a      	ST   -Y,R18
003a36 01da      	MOVW R26,R20
003a37 940e 52ae 	CALL _ETH_sendStatusReportCmd
003a39 018f      	MOVW R16,R30
                 ; 0000 0327     if(res < 0)
003a3a 2311      	TST  R17
003a3b f432      	BRPL _0xE4
                 ; 0000 0328     {
                 ; 0000 0329         printDebug("<statusReport> ETH_sendStatusReportCmd() failed\r\n");
                +
003a3c e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 1836 ) )
003a3d e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1836 ) )
003a3e e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1836 ) )
003a3f e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1836 ) )
                 	__POINTD1FN _0x0,1836
003a40 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 032A     }
                 ; 0000 032B 
                 ; 0000 032C     free ( param );
                 _0xE4:
003a42 01d9      	MOVW R26,R18
003a43 940e a0bd 	CALL _free
                 ; 0000 032D }
                 _0x20E009D:
003a45 940e daa0 	CALL __LOADLOCR6
003a47 962c      	ADIW R28,12
003a48 9508      	RET
                 ;/*============================================================*/
                 ;int sensorDataReport(void)
                 ; 0000 0330 {
                 _sensorDataReport:
                 ; 0000 0331     int                     count = 0;
                 ; 0000 0332     int                     res;
                 ; 0000 0333     unsigned long int       timestamp;
                 ; 0000 0334     unsigned int            channel;
                 ; 0000 0335     float                   value;
                 ; 0000 0336 
                 ; 0000 0337     // -- for debug -- //
                 ; 0000 0338     //struct rtc_structure    dt;
                 ; 0000 0339     // --------------- //
                 ; 0000 033A     //printDebug("<sensorDataReport> ------------------------- \r\n");
                 ; 0000 033B 
                 ; 0000 033C     while (count < MAX_DATA_QUEUE)
003a49 9728      	SBIW R28,8
003a4a 940e bd9f 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+10
                 ;	channel -> R20,R21
                 ;	value -> Y+6
                 _0xE5:
                +
003a4c 300a     +CPI R16 , LOW ( 10 )
003a4d e0e0     +LDI R30 , HIGH ( 10 )
003a4e 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
003a4f f014      	BRLT PC+3
003a50 940c 3a98 	JMP _0xE7
                 ; 0000 033D     {
                 ; 0000 033E         res = fetchDataQueue(&timestamp, &channel, &value);
003a52 01fe      	MOVW R30,R28
003a53 963a      	ADIW R30,10
003a54 93fa      	ST   -Y,R31
003a55 93ea      	ST   -Y,R30
003a56 b7ed      	IN   R30,SPL
003a57 b7fe      	IN   R31,SPH
003a58 9731      	SBIW R30,1
003a59 93fa      	ST   -Y,R31
003a5a 93ea      	ST   -Y,R30
003a5b 935f      	PUSH R21
003a5c 934f      	PUSH R20
003a5d 01de      	MOVW R26,R28
003a5e 961a      	ADIW R26,10
003a5f 940e 7145 	CALL _fetchDataQueue
003a61 914f      	POP  R20
003a62 915f      	POP  R21
003a63 019f      	MOVW R18,R30
                 ; 0000 033F         if(res < 0)
003a64 2333      	TST  R19
003a65 f192      	BRMI _0xE7
                 ; 0000 0340         {
                 ; 0000 0341             break;
                 ; 0000 0342         }
                 ; 0000 0343         else
                 ; 0000 0344         {
                 ; 0000 0345             printDebug("<sensorDataReport> [%ld][%d][%.2f]\r\n",timestamp,channel,value);
                +
003a66 e7ee     +LDI R30 , LOW ( 2 * _0x0 + ( 1886 ) )
003a67 e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1886 ) )
003a68 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1886 ) )
003a69 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1886 ) )
                 	__POINTD1FN _0x0,1886
003a6a 940e bdd8 	CALL SUBOPT_0x50
003a6c 01fa      	MOVW R30,R20
003a6d 940e bd18 	CALL SUBOPT_0x34
003a6f 940e bde1 	CALL SUBOPT_0x51
                 ; 0000 0346             /*
                 ; 0000 0347             binary_to_date(timestamp, &dt);
                 ; 0000 0348             printRTC(dt);
                 ; 0000 0349             printDebug("timestamp [%ld]\r\n",   timestamp);
                 ; 0000 034A             printDebug("channel   [%d]\r\n",    channel);
                 ; 0000 034B             printDebug("value     [%.2f]\r\n",  value);
                 ; 0000 034C             */
                 ; 0000 034D 
                 ; 0000 034E             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003a71 940e bdec 	CALL SUBOPT_0x52
003a73 940e da89 	CALL __CPD02
003a75 f039      	BREQ _0xEB
003a76 940e bdf1 	CALL SUBOPT_0x53
003a78 f021      	BREQ _0xEB
                +
003a79 3045     +CPI R20 , LOW ( 5 )
003a7a e0e0     +LDI R30 , HIGH ( 5 )
003a7b 075e     +CPC R21 , R30
                 	__CPWRN 20,21,5
003a7c f038      	BRLO _0xEA
                 _0xEB:
                 ; 0000 034F             {
                 ; 0000 0350                 printDebug("\r\n<sensorDataReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003a7d eae3     +LDI R30 , LOW ( 2 * _0x0 + ( 1923 ) )
003a7e e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1923 ) )
003a7f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1923 ) )
003a80 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1923 ) )
                 	__POINTD1FN _0x0,1923
003a81 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0351                 continue;
003a83 cfc8      	RJMP _0xE5
                 ; 0000 0352             }
                 ; 0000 0353 
                 ; 0000 0354 
                 ; 0000 0355             res = ETH_sendDataReportCmd(TYP_RLT,timestamp,channel,value);
                 _0xEA:
003a84 e0e0      	LDI  R30,LOW(0)
003a85 940e bdf3 	CALL SUBOPT_0x54
003a87 935a      	ST   -Y,R21
003a88 934a      	ST   -Y,R20
003a89 940e bdfb 	CALL SUBOPT_0x55
003a8b 019f      	MOVW R18,R30
                 ; 0000 0356             if(res < 0)
003a8c 2333      	TST  R19
003a8d f43a      	BRPL _0xED
                 ; 0000 0357             {
                 ; 0000 0358                 printDebug("<sensorDataReport> ETH_sendDataReportCmd() failed\r\n");
                +
003a8e eee1     +LDI R30 , LOW ( 2 * _0x0 + ( 1985 ) )
003a8f e0f9     +LDI R31 , HIGH ( 2 * _0x0 + ( 1985 ) )
003a90 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 1985 ) )
003a91 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 1985 ) )
                 	__POINTD1FN _0x0,1985
003a92 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0359                 // --- Keep in Log --- //
                 ; 0000 035A                 continue;
003a94 cfb7      	RJMP _0xE5
                 ; 0000 035B             }
                 ; 0000 035C             count++;
                 _0xED:
                +
003a95 5f0f     +SUBI R16 , LOW ( - 1 )
003a96 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 035D         }
                 ; 0000 035E 
                 ; 0000 035F     }
003a97 cfb4      	RJMP _0xE5
                 _0xE7:
                 ; 0000 0360 
                 ; 0000 0361     return count;
003a98 01f8      	MOVW R30,R16
003a99 940e daa0 	CALL __LOADLOCR6
003a9b 962e      	ADIW R28,14
003a9c 9508      	RET
                 ; 0000 0362 }
                 ;/*============================================================*/
                 ;int eventReport(void)
                 ; 0000 0365 {
                 _eventReport:
                 ; 0000 0366     int                     count = 0;
                 ; 0000 0367     int                     res;
                 ; 0000 0368     unsigned long int       timestamp;
                 ; 0000 0369     unsigned char           eventID;
                 ; 0000 036A     unsigned char           eventStatus;
                 ; 0000 036B 
                 ; 0000 036C     // -- for debug -- //
                 ; 0000 036D     //struct rtc_structure    dt;
                 ; 0000 036E     // --------------- //
                 ; 0000 036F     //printDebug("<eventReport> ------------------------- \r\n");
                 ; 0000 0370 
                 ; 0000 0371     while (count < MAX_EVENT_QUEUE)
003a9d 9724      	SBIW R28,4
003a9e 940e bd9f 	CALL SUBOPT_0x46
                 ;	count -> R16,R17
                 ;	res -> R18,R19
                 ;	timestamp -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
                 _0xEE:
                +
003aa0 3104     +CPI R16 , LOW ( 20 )
003aa1 e0e0     +LDI R30 , HIGH ( 20 )
003aa2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
003aa3 f014      	BRLT PC+3
003aa4 940c 3ae7 	JMP _0xF0
                 ; 0000 0372     {
                 ; 0000 0373         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003aa6 940e be01 	CALL SUBOPT_0x56
003aa8 b7ed      	IN   R30,SPL
003aa9 b7fe      	IN   R31,SPH
003aaa 93fa      	ST   -Y,R31
003aab 93ea      	ST   -Y,R30
003aac 935f      	PUSH R21
003aad b7ad      	IN   R26,SPL
003aae b7be      	IN   R27,SPH
003aaf 934f      	PUSH R20
003ab0 940e 74ab 	CALL _fetchEventQueue
003ab2 914f      	POP  R20
003ab3 915f      	POP  R21
003ab4 019f      	MOVW R18,R30
                 ; 0000 0374         if(res < 0)
003ab5 2333      	TST  R19
003ab6 f182      	BRMI _0xF0
                 ; 0000 0375         {
                 ; 0000 0376             break;
                 ; 0000 0377         }
                 ; 0000 0378         else
                 ; 0000 0379         {
                 ; 0000 037A 
                 ; 0000 037B             printDebug("<eventReport> [%ld][0x%02X][0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003ab7 e1e5     +LDI R30 , LOW ( 2 * _0x0 + ( 2037 ) )
003ab8 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2037 ) )
003ab9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2037 ) )
003aba e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2037 ) )
                 	__POINTD1FN _0x0,2037
003abb 940e be06 	CALL SUBOPT_0x57
003abd 940e da29 	CALL __PUTPARD1
003abf 940e be0d 	CALL SUBOPT_0x58
                 ; 0000 037C             /*
                 ; 0000 037D             binary_to_date(timestamp, &dt);
                 ; 0000 037E             printRTC(dt);
                 ; 0000 037F             */
                 ; 0000 0380 
                 ; 0000 0381             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003ac1 940e be1e 	CALL SUBOPT_0x59
003ac3 940e da89 	CALL __CPD02
003ac5 f029      	BREQ _0xF4
003ac6 940e be1e 	CALL SUBOPT_0x59
003ac8 940e bd3e 	CALL SUBOPT_0x3A
003aca f439      	BRNE _0xF3
                 _0xF4:
                 ; 0000 0382             {
                 ; 0000 0383                 printDebug("\r\n<eventReport> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003acb e3eb     +LDI R30 , LOW ( 2 * _0x0 + ( 2075 ) )
003acc e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2075 ) )
003acd e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2075 ) )
003ace e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2075 ) )
                 	__POINTD1FN _0x0,2075
003acf 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0384                 continue;
003ad1 cfce      	RJMP _0xEE
                 ; 0000 0385             }
                 ; 0000 0386 
                 ; 0000 0387 
                 ; 0000 0388             res = ETH_sendEventReportCmd(TYP_RLT,timestamp,eventID,eventStatus);
                 _0xF3:
003ad2 e0e0      	LDI  R30,LOW(0)
003ad3 93ea      	ST   -Y,R30
003ad4 940e bd72 	CALL SUBOPT_0x3F
003ad6 935a      	ST   -Y,R21
003ad7 2fa4      	MOV  R26,R20
003ad8 940e 52fd 	CALL _ETH_sendEventReportCmd
003ada 019f      	MOVW R18,R30
                 ; 0000 0389             if(res < 0)
003adb 2333      	TST  R19
003adc f43a      	BRPL _0xF6
                 ; 0000 038A             {
                 ; 0000 038B                 printDebug("<eventReport> ETH_sendEventReportCmd() failed\r\n");
                +
003add e7e4     +LDI R30 , LOW ( 2 * _0x0 + ( 2132 ) )
003ade e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2132 ) )
003adf e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2132 ) )
003ae0 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2132 ) )
                 	__POINTD1FN _0x0,2132
003ae1 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 038C                 // --- Keep in Log --- //
                 ; 0000 038D                 continue;
003ae3 cfbc      	RJMP _0xEE
                 ; 0000 038E             }
                 ; 0000 038F             count++;
                 _0xF6:
                +
003ae4 5f0f     +SUBI R16 , LOW ( - 1 )
003ae5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0000 0390         }
                 ; 0000 0391     }
003ae6 cfb9      	RJMP _0xEE
                 _0xF0:
                 ; 0000 0392 
                 ; 0000 0393     return count;
003ae7 01f8      	MOVW R30,R16
003ae8 940e daa0 	CALL __LOADLOCR6
003aea 962a      	ADIW R28,10
003aeb 9508      	RET
                 ; 0000 0394 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Log Management ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int sensorDataSave(void)
                 ; 0000 039C {
                 _sensorDataSave:
                 ; 0000 039D     FIL                     file;
                 ; 0000 039E     char                    isFileOpen = 0;
                 ; 0000 039F     int                     count = 0;
                 ; 0000 03A0     int                     res;
                 ; 0000 03A1     unsigned long int       timestamp;
                 ; 0000 03A2     unsigned int            channel;
                 ; 0000 03A3     float                   value;
                 ; 0000 03A4 
                 ; 0000 03A5 
                 ; 0000 03A6     // -- for debug -- //
                 ; 0000 03A7     //struct rtc_structure    dt;
                 ; 0000 03A8     // --------------- //
                 ; 0000 03A9 
                 ; 0000 03AA     while (count < MAX_DATA_QUEUE)
003aec 97aa      	SBIW R28,42
003aed 50d2      	SUBI R29,2
003aee 940e da99 	CALL __SAVELOCR6
                 ;	file -> Y+16
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+12
                 ;	channel -> Y+10
                 ;	value -> Y+6
003af0 e010      	LDI  R17,0
                +
003af1 e020     +LDI R18 , LOW ( 0 )
003af2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0xF7:
                +
003af3 302a     +CPI R18 , LOW ( 10 )
003af4 e0e0     +LDI R30 , HIGH ( 10 )
003af5 073e     +CPC R19 , R30
                 	__CPWRN 18,19,10
003af6 f014      	BRLT PC+3
003af7 940c 3b50 	JMP _0xF9
                 ; 0000 03AB     {
                 ; 0000 03AC         res = fetchDataQueue(&timestamp, &channel, &value);
003af9 940e be23 	CALL SUBOPT_0x5A
003afb 940e be23 	CALL SUBOPT_0x5A
003afd 01de      	MOVW R26,R28
003afe 961a      	ADIW R26,10
003aff 940e 7145 	CALL _fetchDataQueue
003b01 01af      	MOVW R20,R30
                 ; 0000 03AD         if(res < 0)
003b02 2355      	TST  R21
003b03 f40a      	BRPL _0xFA
                 ; 0000 03AE         {
                 ; 0000 03AF             break;
003b04 c04b      	RJMP _0xF9
                 ; 0000 03B0         }
                 ; 0000 03B1         else
                 _0xFA:
                 ; 0000 03B2         {
                 ; 0000 03B3             printDebug("<sensorDataSave> time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003b05 eae4     +LDI R30 , LOW ( 2 * _0x0 + ( 2180 ) )
003b06 e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2180 ) )
003b07 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2180 ) )
003b08 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2180 ) )
                 	__POINTD1FN _0x0,2180
003b09 940e be28 	CALL SUBOPT_0x5B
003b0b 89ea      	LDD  R30,Y+18
003b0c 89fb      	LDD  R31,Y+18+1
003b0d 940e bd18 	CALL SUBOPT_0x34
003b0f 940e bde1 	CALL SUBOPT_0x51
                 ; 0000 03B4             /*
                 ; 0000 03B5             binary_to_date(timestamp, &dt);
                 ; 0000 03B6             printRTC(dt);
                 ; 0000 03B7             */
                 ; 0000 03B8 
                 ; 0000 03B9             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003b11 940e bbfc 	CALL SUBOPT_0xB
003b13 940e da89 	CALL __CPD02
003b15 f039      	BREQ _0xFD
003b16 940e be2e 	CALL SUBOPT_0x5C
003b18 f021      	BREQ _0xFD
003b19 85aa      	LDD  R26,Y+10
003b1a 85bb      	LDD  R27,Y+10+1
003b1b 9715      	SBIW R26,5
003b1c f038      	BRLO _0xFC
                 _0xFD:
                 ; 0000 03BA             {
                 ; 0000 03BB                 printDebug("\r\n<sensorDataSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003b1d ede2     +LDI R30 , LOW ( 2 * _0x0 + ( 2226 ) )
003b1e e0fa     +LDI R31 , HIGH ( 2 * _0x0 + ( 2226 ) )
003b1f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2226 ) )
003b20 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2226 ) )
                 	__POINTD1FN _0x0,2226
003b21 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 03BC                 continue;
003b23 cfcf      	RJMP _0xF7
                 ; 0000 03BD             }
                 ; 0000 03BE 
                 ; 0000 03BF             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 03C0             if(!isFileOpen)
                 _0xFC:
003b24 3010      	CPI  R17,0
003b25 f489      	BRNE _0xFF
                 ; 0000 03C1             {
                 ; 0000 03C2                 res = LOG_openFile(&file,LOGFILE_DATA);
003b26 940e be30 	CALL SUBOPT_0x5D
003b28 940e be35 	CALL SUBOPT_0x5E
003b2a 01af      	MOVW R20,R30
                 ; 0000 03C3                 if(res < 0)
003b2b 2355      	TST  R21
003b2c f44a      	BRPL _0x100
                 ; 0000 03C4                 {
                 ; 0000 03C5                     printDebug("<sensorDataSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
003b2d e0ee     +LDI R30 , LOW ( 2 * _0x0 + ( 2286 ) )
003b2e e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2286 ) )
003b2f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2286 ) )
003b30 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2286 ) )
                 	__POINTD1FN _0x0,2286
003b31 940e be40 	CALL SUBOPT_0x5F
003b33 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 03C6                     continue;
003b35 cfbd      	RJMP _0xF7
                 ; 0000 03C7                 }
                 ; 0000 03C8                 isFileOpen = 1;
                 _0x100:
003b36 e011      	LDI  R17,LOW(1)
                 ; 0000 03C9             }
                 ; 0000 03CA 
                 ; 0000 03CB             res = LOG_insertData(&file,timestamp,channel,value);
                 _0xFF:
003b37 940e be30 	CALL SUBOPT_0x5D
003b39 940e be45 	CALL SUBOPT_0x60
003b3b 940e da29 	CALL __PUTPARD1
003b3d 89e8      	LDD  R30,Y+16
003b3e 89f9      	LDD  R31,Y+16+1
003b3f 93fa      	ST   -Y,R31
003b40 93ea      	ST   -Y,R30
003b41 940e be4a 	CALL SUBOPT_0x61
003b43 01af      	MOVW R20,R30
                 ; 0000 03CC             if(res < 0)
003b44 2355      	TST  R21
003b45 f43a      	BRPL _0x101
                 ; 0000 03CD             {
                 ; 0000 03CE                 printDebug("<sensorDataSave> LOG_insertData() failed\r\n");
                +
003b46 e4ec     +LDI R30 , LOW ( 2 * _0x0 + ( 2348 ) )
003b47 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2348 ) )
003b48 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2348 ) )
003b49 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2348 ) )
                 	__POINTD1FN _0x0,2348
003b4a 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 03CF                 continue;
003b4c cfa6      	RJMP _0xF7
                 ; 0000 03D0             }
                 ; 0000 03D1             count++;
                 _0x101:
                +
003b4d 5f2f     +SUBI R18 , LOW ( - 1 )
003b4e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 03D2         }
                 ; 0000 03D3     }
003b4f cfa3      	RJMP _0xF7
                 _0xF9:
                 ; 0000 03D4 
                 ; 0000 03D5     if(isFileOpen)
003b50 3010      	CPI  R17,0
003b51 f071      	BREQ _0x102
                 ; 0000 03D6     {
                 ; 0000 03D7         res = LOG_closeFile(&file);
003b52 01de      	MOVW R26,R28
003b53 9650      	ADIW R26,16
003b54 940e be50 	CALL SUBOPT_0x62
                 ; 0000 03D8         if(res < 0)
003b56 f44a      	BRPL _0x103
                 ; 0000 03D9         {
                 ; 0000 03DA             printDebug("<sensorDataSave> LOG_closeFile() failed\r\n");
                +
003b57 e7e7     +LDI R30 , LOW ( 2 * _0x0 + ( 2391 ) )
003b58 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2391 ) )
003b59 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2391 ) )
003b5a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2391 ) )
                 	__POINTD1FN _0x0,2391
003b5b 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 03DB             return -1;
003b5d efef      	LDI  R30,LOW(65535)
003b5e efff      	LDI  R31,HIGH(65535)
003b5f c00b      	RJMP _0x20E009C
                 ; 0000 03DC         }
                 ; 0000 03DD     }
                 _0x103:
                 ; 0000 03DE 
                 ; 0000 03DF     if(count > 0){
                 _0x102:
003b60 2400      	CLR  R0
003b61 1602      	CP   R0,R18
003b62 0603      	CPC  R0,R19
003b63 f434      	BRGE _0x104
                 ; 0000 03E0         //isDataLogEmpty  = 0;
                 ; 0000 03E1         printDebug("<sensorDataSave> Data Log is not empty\r\n");
                +
003b64 eae1     +LDI R30 , LOW ( 2 * _0x0 + ( 2433 ) )
003b65 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2433 ) )
003b66 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2433 ) )
003b67 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2433 ) )
                 	__POINTD1FN _0x0,2433
003b68 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 03E2     }
                 ; 0000 03E3 
                 ; 0000 03E4     return count;
                 _0x104:
003b6a 01f9      	MOVW R30,R18
                 _0x20E009C:
003b6b 940e daa0 	CALL __LOADLOCR6
003b6d 96e0      	ADIW R28,48
003b6e 5fde      	SUBI R29,-2
003b6f 9508      	RET
                 ; 0000 03E5 }
                 ;/*============================================================*/
                 ;int eventSave(void)
                 ; 0000 03E8 {
                 _eventSave:
                 ; 0000 03E9     FIL                     file;
                 ; 0000 03EA     char                    isFileOpen = 0;
                 ; 0000 03EB     int                     count = 0;
                 ; 0000 03EC     int                     res;
                 ; 0000 03ED     unsigned long int       timestamp;
                 ; 0000 03EE     unsigned char           eventID;
                 ; 0000 03EF     unsigned char           eventStatus;
                 ; 0000 03F0 
                 ; 0000 03F1     // -- for debug -- //
                 ; 0000 03F2     //struct rtc_structure    dt;
                 ; 0000 03F3     // --------------- //
                 ; 0000 03F4 
                 ; 0000 03F5     while (count < MAX_EVENT_QUEUE)
003b70 97a5      	SBIW R28,37
003b71 50d2      	SUBI R29,2
003b72 940e da99 	CALL __SAVELOCR6
                 ;	file -> Y+11
                 ;	isFileOpen -> R17
                 ;	count -> R18,R19
                 ;	res -> R20,R21
                 ;	timestamp -> Y+7
                 ;	eventID -> R16
                 ;	eventStatus -> Y+6
003b74 e010      	LDI  R17,0
                +
003b75 e020     +LDI R18 , LOW ( 0 )
003b76 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x105:
                +
003b77 3124     +CPI R18 , LOW ( 20 )
003b78 e0e0     +LDI R30 , HIGH ( 20 )
003b79 073e     +CPC R19 , R30
                 	__CPWRN 18,19,20
003b7a f014      	BRLT PC+3
003b7b 940c 3bd8 	JMP _0x107
                 ; 0000 03F6     {
                 ; 0000 03F7         res = fetchEventQueue(&timestamp, &eventID, &eventStatus);
003b7d 940e be5b 	CALL SUBOPT_0x63
003b7f b7ed      	IN   R30,SPL
003b80 b7fe      	IN   R31,SPH
003b81 93fa      	ST   -Y,R31
003b82 93ea      	ST   -Y,R30
003b83 930f      	PUSH R16
003b84 01de      	MOVW R26,R28
003b85 961a      	ADIW R26,10
003b86 940e 74ab 	CALL _fetchEventQueue
003b88 910f      	POP  R16
003b89 01af      	MOVW R20,R30
                 ; 0000 03F8         if(res < 0)
003b8a 2355      	TST  R21
003b8b f40a      	BRPL _0x108
                 ; 0000 03F9         {
                 ; 0000 03FA             break;
003b8c c04b      	RJMP _0x107
                 ; 0000 03FB         }
                 ; 0000 03FC         else
                 _0x108:
                 ; 0000 03FD         {
                 ; 0000 03FE             printDebug("<eventSave> time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
003b8d ecea     +LDI R30 , LOW ( 2 * _0x0 + ( 2474 ) )
003b8e e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2474 ) )
003b8f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2474 ) )
003b90 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2474 ) )
                 	__POINTD1FN _0x0,2474
003b91 940e da29 	CALL __PUTPARD1
003b93 940e be60 	CALL SUBOPT_0x64
003b95 2fe0      	MOV  R30,R16
003b96 940e be67 	CALL SUBOPT_0x65
003b98 89ea      	LDD  R30,Y+18
003b99 940e be67 	CALL SUBOPT_0x65
003b9b 940e be6d 	CALL SUBOPT_0x66
                 ; 0000 03FF             /*
                 ; 0000 0400             binary_to_date(timestamp, &dt);
                 ; 0000 0401             printRTC(dt);
                 ; 0000 0402             */
                 ; 0000 0403 
                 ; 0000 0404             if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003b9d 940e be72 	CALL SUBOPT_0x67
003b9f 940e da89 	CALL __CPD02
003ba1 f029      	BREQ _0x10B
003ba2 940e be72 	CALL SUBOPT_0x67
003ba4 940e bd3e 	CALL SUBOPT_0x3A
003ba6 f439      	BRNE _0x10A
                 _0x10B:
                 ; 0000 0405             {
                 ; 0000 0406                 printDebug("\r\n<eventSave> === ERROR INFOMATION IN TEMP QUEUE ===\r\n");
                +
003ba7 efea     +LDI R30 , LOW ( 2 * _0x0 + ( 2522 ) )
003ba8 e0fb     +LDI R31 , HIGH ( 2 * _0x0 + ( 2522 ) )
003ba9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2522 ) )
003baa e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2522 ) )
                 	__POINTD1FN _0x0,2522
003bab 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0407                 continue;
003bad cfc9      	RJMP _0x105
                 ; 0000 0408             }
                 ; 0000 0409 
                 ; 0000 040A             //if(sdStatus == OK && logStatus == OK)
                 ; 0000 040B             if(!isFileOpen)
                 _0x10A:
003bae 3010      	CPI  R17,0
003baf f489      	BRNE _0x10D
                 ; 0000 040C             {
                 ; 0000 040D                 res = LOG_openFile(&file,LOGFILE_EVENT);
003bb0 940e be77 	CALL SUBOPT_0x68
003bb2 940e be7c 	CALL SUBOPT_0x69
003bb4 01af      	MOVW R20,R30
                 ; 0000 040E                 if(res < 0)
003bb5 2355      	TST  R21
003bb6 f44a      	BRPL _0x10E
                 ; 0000 040F                 {
                 ; 0000 0410                     printDebug("<eventSave> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
003bb7 e3e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2577 ) )
003bb8 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2577 ) )
003bb9 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2577 ) )
003bba e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2577 ) )
                 	__POINTD1FN _0x0,2577
003bbb 940e be87 	CALL SUBOPT_0x6A
003bbd 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 0411                     continue;
003bbf cfb7      	RJMP _0x105
                 ; 0000 0412                 }
                 ; 0000 0413                 isFileOpen = 1;
                 _0x10E:
003bc0 e011      	LDI  R17,LOW(1)
                 ; 0000 0414             }
                 ; 0000 0415 
                 ; 0000 0416             res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
                 _0x10D:
003bc1 940e be77 	CALL SUBOPT_0x68
003bc3 940e be8c 	CALL SUBOPT_0x6B
003bc5 940e da29 	CALL __PUTPARD1
003bc7 930a      	ST   -Y,R16
003bc8 85ad      	LDD  R26,Y+13
003bc9 940e 801d 	CALL _LOG_insertEvent
003bcb 01af      	MOVW R20,R30
                 ; 0000 0417             if(res < 0)
003bcc 2355      	TST  R21
003bcd f43a      	BRPL _0x10F
                 ; 0000 0418             {
                 ; 0000 0419                 printDebug("<eventSave> LOG_insertEvent() failed\r\n");
                +
003bce e6ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2634 ) )
003bcf e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2634 ) )
003bd0 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2634 ) )
003bd1 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2634 ) )
                 	__POINTD1FN _0x0,2634
003bd2 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 041A                 continue;
003bd4 cfa2      	RJMP _0x105
                 ; 0000 041B             }
                 ; 0000 041C             count++;
                 _0x10F:
                +
003bd5 5f2f     +SUBI R18 , LOW ( - 1 )
003bd6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0000 041D         }
                 ; 0000 041E     }
003bd7 cf9f      	RJMP _0x105
                 _0x107:
                 ; 0000 041F 
                 ; 0000 0420     if(isFileOpen)
003bd8 3010      	CPI  R17,0
003bd9 f071      	BREQ _0x110
                 ; 0000 0421     {
                 ; 0000 0422         res = LOG_closeFile(&file);
003bda 01de      	MOVW R26,R28
003bdb 961b      	ADIW R26,11
003bdc 940e be50 	CALL SUBOPT_0x62
                 ; 0000 0423         if(res < 0)
003bde f44a      	BRPL _0x111
                 ; 0000 0424         {
                 ; 0000 0425             printDebug("<eventSave> LOG_closeFile() failed\r\n");
                +
003bdf e9e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2673 ) )
003be0 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2673 ) )
003be1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2673 ) )
003be2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2673 ) )
                 	__POINTD1FN _0x0,2673
003be3 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0426             return -1;
003be5 efef      	LDI  R30,LOW(65535)
003be6 efff      	LDI  R31,HIGH(65535)
003be7 c00b      	RJMP _0x20E009B
                 ; 0000 0427         }
                 ; 0000 0428     }
                 _0x111:
                 ; 0000 0429 
                 ; 0000 042A     if(count > 0){
                 _0x110:
003be8 2400      	CLR  R0
003be9 1602      	CP   R0,R18
003bea 0603      	CPC  R0,R19
003beb f434      	BRGE _0x112
                 ; 0000 042B         //isEventLogEmpty    = 0;
                 ; 0000 042C         printDebug("<eventSave> Event Log is not empty\r\n");
                +
003bec ebe6     +LDI R30 , LOW ( 2 * _0x0 + ( 2710 ) )
003bed e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2710 ) )
003bee e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2710 ) )
003bef e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2710 ) )
                 	__POINTD1FN _0x0,2710
003bf0 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 042D     }
                 ; 0000 042E 
                 ; 0000 042F     return count;
                 _0x112:
003bf2 01f9      	MOVW R30,R18
                 _0x20E009B:
003bf3 940e daa0 	CALL __LOADLOCR6
003bf5 96ab      	ADIW R28,43
003bf6 5fde      	SUBI R29,-2
003bf7 9508      	RET
                 ; 0000 0430 }
                 ;/*============================================================*/
                 ;int logReport(void)
                 ; 0000 0433 {
                 _logReport:
                 ; 0000 0434     FIL                     file;
                 ; 0000 0435     int                     res;
                 ; 0000 0436     unsigned long int       index;
                 ; 0000 0437     unsigned long int       timestamp;
                 ; 0000 0438     unsigned int            channel;
                 ; 0000 0439     float                   value;
                 ; 0000 043A     unsigned char           id;
                 ; 0000 043B     unsigned char           status;
                 ; 0000 043C 
                 ; 0000 043D     // -- send data log if any exist -- //
                 ; 0000 043E     if((!isDataLogEmpty) && (logDataWait.frameID == 0x00))   // -- if no logDataWaitFrameID, look for some data log to send -- //
003bf8 97ac      	SBIW R28,44
003bf9 50d2      	SUBI R29,2
003bfa 940e da99 	CALL __SAVELOCR6
                 ;	file -> Y+18
                 ;	res -> R16,R17
                 ;	index -> Y+14
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	id -> R21
                 ;	status -> R20
003bfc 91e0 14dd 	LDS  R30,_isDataLogEmpty
003bfe 30e0      	CPI  R30,0
003bff f421      	BRNE _0x114
003c00 91a0 1426 	LDS  R26,_logDataWait
003c02 30a0      	CPI  R26,LOW(0x0)
003c03 f009      	BREQ _0x115
                 _0x114:
003c04 c091      	RJMP _0x113
                 _0x115:
                 ; 0000 043F     {
                 ; 0000 0440         printDebug("<logReport> Check Data Log Exist\r\n");
                +
003c05 edeb     +LDI R30 , LOW ( 2 * _0x0 + ( 2747 ) )
003c06 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2747 ) )
003c07 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2747 ) )
003c08 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2747 ) )
                 	__POINTD1FN _0x0,2747
003c09 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0441         res = LOG_openFile(&file,LOGFILE_DATA);
003c0b 940e be91 	CALL SUBOPT_0x6C
003c0d 940e be35 	CALL SUBOPT_0x5E
003c0f 018f      	MOVW R16,R30
                 ; 0000 0442         if(res < 0)
003c10 2311      	TST  R17
003c11 f44a      	BRPL _0x116
                 ; 0000 0443         {
                 ; 0000 0444             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);
                +
003c12 efee     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003c13 e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003c14 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003c15 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003c16 940e be40 	CALL SUBOPT_0x5F
003c18 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 0445         }
                 ; 0000 0446         else
003c1a c07b      	RJMP _0x117
                 _0x116:
                 ; 0000 0447         {
                 ; 0000 0448             res = LOG_readData(&file,&timestamp,&channel,&value,&index);
003c1b 940e be91 	CALL SUBOPT_0x6C
003c1d 940e be23 	CALL SUBOPT_0x5A
003c1f b7ed      	IN   R30,SPL
003c20 b7fe      	IN   R31,SPH
003c21 9731      	SBIW R30,1
003c22 93fa      	ST   -Y,R31
003c23 93ea      	ST   -Y,R30
003c24 933f      	PUSH R19
003c25 932f      	PUSH R18
003c26 940e be23 	CALL SUBOPT_0x5A
003c28 01de      	MOVW R26,R28
003c29 9656      	ADIW R26,22
003c2a 940e 7f82 	CALL _LOG_readData
003c2c 912f      	POP  R18
003c2d 913f      	POP  R19
003c2e 018f      	MOVW R16,R30
                 ; 0000 0449             if(res < 0)
003c2f 2311      	TST  R17
003c30 f44a      	BRPL _0x118
                 ; 0000 044A             {
                 ; 0000 044B                 printDebug("<logReport> LOG_readData(%s) failed\r\n",LOGFILE_DATA);
                +
003c31 e2e4     +LDI R30 , LOW ( 2 * _0x0 + ( 2820 ) )
003c32 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2820 ) )
003c33 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2820 ) )
003c34 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2820 ) )
                 	__POINTD1FN _0x0,2820
003c35 940e be40 	CALL SUBOPT_0x5F
003c37 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 044C             }
                 ; 0000 044D             else if(res == 0)
003c39 c053      	RJMP _0x119
                 _0x118:
003c3a 2e00      	MOV  R0,R16
003c3b 2a01      	OR   R0,R17
003c3c f439      	BRNE _0x11A
                 ; 0000 044E             {
                 ; 0000 044F                 //isDataLogEmpty      = 1;
                 ; 0000 0450                 printDebug("<logReport> LOG_readData() Log empty\r\n");
                +
003c3d e4ea     +LDI R30 , LOW ( 2 * _0x0 + ( 2858 ) )
003c3e e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2858 ) )
003c3f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2858 ) )
003c40 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2858 ) )
                 	__POINTD1FN _0x0,2858
003c41 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0451             }
                 ; 0000 0452             else
003c43 c049      	RJMP _0x11B
                 _0x11A:
                 ; 0000 0453             {
                 ; 0000 0454                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
003c44 940e be96 	CALL SUBOPT_0x6D
003c46 f039      	BREQ _0x11D
003c47 940e bdf1 	CALL SUBOPT_0x53
003c49 f021      	BREQ _0x11D
                +
003c4a 3025     +CPI R18 , LOW ( 5 )
003c4b e0e0     +LDI R30 , HIGH ( 5 )
003c4c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
003c4d f048      	BRLO _0x11C
                 _0x11D:
                 ; 0000 0455                 {
                 ; 0000 0456                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_DATA);
                +
003c4e e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003c4f e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003c50 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003c51 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003c52 940e be40 	CALL SUBOPT_0x5F
003c54 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 0457                 }
                 ; 0000 0458                 else
003c56 c036      	RJMP _0x11F
                 _0x11C:
                 ; 0000 0459                 {
                 ; 0000 045A                     printDebug("<logReport> DataLog found time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
003c57 eae0     +LDI R30 , LOW ( 2 * _0x0 + ( 2944 ) )
003c58 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2944 ) )
003c59 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2944 ) )
003c5a e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2944 ) )
                 	__POINTD1FN _0x0,2944
003c5b 940e bdd8 	CALL SUBOPT_0x50
003c5d 01f9      	MOVW R30,R18
003c5e 940e bd18 	CALL SUBOPT_0x34
003c60 940e bde1 	CALL SUBOPT_0x51
                 ; 0000 045B                     res = ETH_sendDataReportCmd(TYP_LOG,timestamp,channel,value);
003c62 e0e1      	LDI  R30,LOW(1)
003c63 940e bdf3 	CALL SUBOPT_0x54
003c65 933a      	ST   -Y,R19
003c66 932a      	ST   -Y,R18
003c67 940e bdfb 	CALL SUBOPT_0x55
003c69 018f      	MOVW R16,R30
                 ; 0000 045C                     if(res < 0)
003c6a 2311      	TST  R17
003c6b f44a      	BRPL _0x120
                 ; 0000 045D                     {
                 ; 0000 045E                         logDataWait.frameID    = 0;
003c6c 940e be9a 	CALL SUBOPT_0x6E
                 ; 0000 045F                         logDataWait.logID      = 0;
                 ; 0000 0460                         printDebug("<logReport> ETH_sendDataReportCmd() failed\r\n");
                +
003c6e ede7     +LDI R30 , LOW ( 2 * _0x0 + ( 2999 ) )
003c6f e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2999 ) )
003c70 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2999 ) )
003c71 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2999 ) )
                 	__POINTD1FN _0x0,2999
003c72 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0461                     }
                 ; 0000 0462                     else
003c74 c018      	RJMP _0x121
                 _0x120:
                 ; 0000 0463                     {
                 ; 0000 0464                         logDataWait.logID       = index;
003c75 940e be45 	CALL SUBOPT_0x60
                +
003c77 93e0 1427+STS _logDataWait + ( 1 ) , R30
003c79 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
003c7b 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
003c7d 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
                 ; 0000 0465                         printDebug("<logReport> DataLog sent frameID[0x%02X] logID[0x%02X]\r\n",logDataWait.frameID,logDataWait.logID);
                +
003c7f e0e4     +LDI R30 , LOW ( 2 * _0x0 + ( 3044 ) )
003c80 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3044 ) )
003c81 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3044 ) )
003c82 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3044 ) )
                 	__POINTD1FN _0x0,3044
003c83 940e da29 	CALL __PUTPARD1
003c85 91e0 1426 	LDS  R30,_logDataWait
003c87 940e be67 	CALL SUBOPT_0x65
003c89 940e beaa 	CALL SUBOPT_0x6F
003c8b 940e bc8a 	CALL SUBOPT_0x20
                 ; 0000 0466                     }
                 _0x121:
                 ; 0000 0467                 }
                 _0x11F:
                 ; 0000 0468             }
                 _0x11B:
                 _0x119:
                 ; 0000 0469 
                 ; 0000 046A             res = LOG_closeFile(&file);
003c8d 940e beb3 	CALL SUBOPT_0x70
                 ; 0000 046B             if(res < 0)
003c8f f432      	BRPL _0x122
                 ; 0000 046C             {
                 ; 0000 046D                 printDebug("<logReport> LOG_closeFile() failed\r\n");
                +
003c90 e3ed     +LDI R30 , LOW ( 2 * _0x0 + ( 3101 ) )
003c91 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3101 ) )
003c92 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3101 ) )
003c93 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3101 ) )
                 	__POINTD1FN _0x0,3101
003c94 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 046E             }
                 ; 0000 046F         }
                 _0x122:
                 _0x117:
                 ; 0000 0470     }
                 ; 0000 0471 
                 ; 0000 0472     // -- send event log if any exist -- //
                 ; 0000 0473     if((!isEventLogEmpty) && (logEventWait.frameID == 0x00))  // -- if no logEventWaitFrameID, look for some event log to send -- //
                 _0x113:
003c96 91e0 14de 	LDS  R30,_isEventLogEmpty
003c98 30e0      	CPI  R30,0
003c99 f421      	BRNE _0x124
003c9a 91a0 142b 	LDS  R26,_logEventWait
003c9c 30a0      	CPI  R26,LOW(0x0)
003c9d f009      	BREQ _0x125
                 _0x124:
003c9e c08b      	RJMP _0x123
                 _0x125:
                 ; 0000 0474     {
                 ; 0000 0475         printDebug("<logReport> Check Event Log Exist\r\n");
                +
003c9f e6e2     +LDI R30 , LOW ( 2 * _0x0 + ( 3138 ) )
003ca0 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3138 ) )
003ca1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3138 ) )
003ca2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3138 ) )
                 	__POINTD1FN _0x0,3138
003ca3 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0476         res = LOG_openFile(&file,LOGFILE_EVENT);
003ca5 940e be91 	CALL SUBOPT_0x6C
003ca7 940e be7c 	CALL SUBOPT_0x69
003ca9 018f      	MOVW R16,R30
                 ; 0000 0477         if(res < 0)
003caa 2311      	TST  R17
003cab f42a      	BRPL _0x126
                 ; 0000 0478         {
                 ; 0000 0479             printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003cac efee     +LDI R30 , LOW ( 2 * _0x0 + ( 2782 ) )
003cad e0fc     +LDI R31 , HIGH ( 2 * _0x0 + ( 2782 ) )
003cae e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2782 ) )
003caf e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2782 ) )
                 	__POINTD1FN _0x0,2782
003cb0 c071      	RJMP _0x13E
                 ; 0000 047A         }
                 ; 0000 047B         else
                 _0x126:
                 ; 0000 047C         {
                 ; 0000 047D             res = LOG_readEvent(&file,&timestamp,&id,&status,&index);
003cb1 940e be91 	CALL SUBOPT_0x6C
003cb3 940e be23 	CALL SUBOPT_0x5A
003cb5 b7ed      	IN   R30,SPL
003cb6 b7fe      	IN   R31,SPH
003cb7 93fa      	ST   -Y,R31
003cb8 93ea      	ST   -Y,R30
003cb9 935f      	PUSH R21
003cba b7ed      	IN   R30,SPL
003cbb b7fe      	IN   R31,SPH
003cbc 93fa      	ST   -Y,R31
003cbd 93ea      	ST   -Y,R30
003cbe 934f      	PUSH R20
003cbf 01de      	MOVW R26,R28
003cc0 9656      	ADIW R26,22
003cc1 940e 80a9 	CALL _LOG_readEvent
003cc3 914f      	POP  R20
003cc4 915f      	POP  R21
003cc5 018f      	MOVW R16,R30
                 ; 0000 047E             if(res < 0)
003cc6 2311      	TST  R17
003cc7 f43a      	BRPL _0x128
                 ; 0000 047F             {
                 ; 0000 0480                 printDebug("<logReport> LOG_readEvent() failed\r\n");
                +
003cc8 e8e6     +LDI R30 , LOW ( 2 * _0x0 + ( 3174 ) )
003cc9 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3174 ) )
003cca e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3174 ) )
003ccb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3174 ) )
                 	__POINTD1FN _0x0,3174
003ccc 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0481             }
                 ; 0000 0482             else if(res == 0)
003cce c04c      	RJMP _0x129
                 _0x128:
003ccf 2e00      	MOV  R0,R16
003cd0 2a01      	OR   R0,R17
003cd1 f439      	BRNE _0x12A
                 ; 0000 0483             {
                 ; 0000 0484                 //isEventLogEmpty     = 1;
                 ; 0000 0485                 printDebug("<logReport> LOG_readEvent() Log empty\r\n");
                +
003cd2 eaeb     +LDI R30 , LOW ( 2 * _0x0 + ( 3211 ) )
003cd3 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3211 ) )
003cd4 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3211 ) )
003cd5 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3211 ) )
                 	__POINTD1FN _0x0,3211
003cd6 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0486             }
                 ; 0000 0487             else
003cd8 c042      	RJMP _0x12B
                 _0x12A:
                 ; 0000 0488             {
                 ; 0000 0489                 if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
003cd9 940e be96 	CALL SUBOPT_0x6D
003cdb f019      	BREQ _0x12D
003cdc 940e bdf1 	CALL SUBOPT_0x53
003cde f449      	BRNE _0x12C
                 _0x12D:
                 ; 0000 048A                 {
                 ; 0000 048B                     printDebug("\r\n<logReport> === ERROR INFOMATION IN %s ===\r\n",LOGFILE_EVENT);
                +
003cdf e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 2897 ) )
003ce0 e0fd     +LDI R31 , HIGH ( 2 * _0x0 + ( 2897 ) )
003ce1 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 2897 ) )
003ce2 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 2897 ) )
                 	__POINTD1FN _0x0,2897
003ce3 940e be87 	CALL SUBOPT_0x6A
003ce5 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 048C                 }
                 ; 0000 048D                 else
003ce7 c033      	RJMP _0x12F
                 _0x12C:
                 ; 0000 048E                 {
                 ; 0000 048F                     printDebug("<logReport> EventLog found time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,id,status);
                +
003ce8 ede3     +LDI R30 , LOW ( 2 * _0x0 + ( 3251 ) )
003ce9 e0fe     +LDI R31 , HIGH ( 2 * _0x0 + ( 3251 ) )
003cea e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3251 ) )
003ceb e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3251 ) )
                 	__POINTD1FN _0x0,3251
003cec 940e bdd8 	CALL SUBOPT_0x50
003cee 940e be0d 	CALL SUBOPT_0x58
                 ; 0000 0490                     res = ETH_sendEventReportCmd(TYP_LOG,timestamp,id,status);
003cf0 e0e1      	LDI  R30,LOW(1)
003cf1 940e bdf3 	CALL SUBOPT_0x54
003cf3 935a      	ST   -Y,R21
003cf4 2fa4      	MOV  R26,R20
003cf5 940e 52fd 	CALL _ETH_sendEventReportCmd
003cf7 018f      	MOVW R16,R30
                 ; 0000 0491                     if(res < 0)
003cf8 2311      	TST  R17
003cf9 f44a      	BRPL _0x130
                 ; 0000 0492                     {
                 ; 0000 0493                         logEventWait.frameID    = 0;
003cfa 940e bec0 	CALL SUBOPT_0x71
                 ; 0000 0494                         logEventWait.logID      = 0;
                 ; 0000 0495                         printDebug("<logReport> ETH_sendEventReportCmd() failed\r\n");
                +
003cfc e1e2     +LDI R30 , LOW ( 2 * _0x0 + ( 3314 ) )
003cfd e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3314 ) )
003cfe e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3314 ) )
003cff e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3314 ) )
                 	__POINTD1FN _0x0,3314
003d00 940e bbba 	CALL SUBOPT_0x3
                 ; 0000 0496                     }
                 ; 0000 0497                     else
003d02 c018      	RJMP _0x131
                 _0x130:
                 ; 0000 0498                     {
                 ; 0000 0499                         logEventWait.logID      = index;
003d03 940e be45 	CALL SUBOPT_0x60
                +
003d05 93e0 142c+STS _logEventWait + ( 1 ) , R30
003d07 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
003d09 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
003d0b 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
                 ; 0000 049A                         printDebug("<logReport> EventLog sent frameID[0x%02X] logID[0x%02X]\r\n",logEventWait.frameID,logEventWait.logID);
                +
003d0d e4e0     +LDI R30 , LOW ( 2 * _0x0 + ( 3360 ) )
003d0e e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3360 ) )
003d0f e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3360 ) )
003d10 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3360 ) )
                 	__POINTD1FN _0x0,3360
003d11 940e da29 	CALL __PUTPARD1
003d13 91e0 142b 	LDS  R30,_logEventWait
003d15 940e be67 	CALL SUBOPT_0x65
003d17 940e bed0 	CALL SUBOPT_0x72
003d19 940e bc8a 	CALL SUBOPT_0x20
                 ; 0000 049B                     }
                 _0x131:
                 ; 0000 049C                 }
                 _0x12F:
                 ; 0000 049D             }
                 _0x12B:
                 _0x129:
                 ; 0000 049E 
                 ; 0000 049F             res = LOG_closeFile(&file);
003d1b 940e beb3 	CALL SUBOPT_0x70
                 ; 0000 04A0             if(res < 0)
003d1d f462      	BRPL _0x132
                 ; 0000 04A1             {
                 ; 0000 04A2                 printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);
                +
003d1e e7ea     +LDI R30 , LOW ( 2 * _0x0 + ( 3418 ) )
003d1f e0ff     +LDI R31 , HIGH ( 2 * _0x0 + ( 3418 ) )
003d20 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 3418 ) )
003d21 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 3418 ) )
                 	__POINTD1FN _0x0,3418
                 _0x13E:
003d22 940e da29 	CALL __PUTPARD1
003d24 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
003d25 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
003d26 940e bd18 	CALL SUBOPT_0x34
003d28 940e bc2c 	CALL SUBOPT_0x12
                 ; 0000 04A3             }
                 ; 0000 04A4         }
                 _0x132:
                 ; 0000 04A5     }
                 ; 0000 04A6 
                 ; 0000 04A7     return 0;
                 _0x123:
003d2a e0e0      	LDI  R30,LOW(0)
003d2b e0f0      	LDI  R31,HIGH(0)
003d2c 940e daa0 	CALL __LOADLOCR6
003d2e 96e2      	ADIW R28,50
003d2f 5fde      	SUBI R29,-2
003d30 9508      	RET
                 ; 0000 04A8 }
                 ;/*============================================================*/
                 ;#include <delay.h>
                 ;#include <stdlib.h>
                 ;#include <i2c.h>
                 ;#include "initial_sys.h"
                 ;#include "uart.h"
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "ds1672.h"
                 ;#include "config.h"
                 ;#include "oled.h"
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;#include "log.h"
                 ;#include "sdcard.h"
                 ;
                 ;/*============================================================*/
                 ;int initial_system(void)
                 ; 0001 0012 {
                 
                 	.CSEG
                 _initial_system:
                 ; 0001 0013     int res=0;
                 ; 0001 0014 
                 ; 0001 0015     // Crystal Oscillator division factor: 1
                 ; 0001 0016     #pragma optsize-
                 ; 0001 0017     CLKPR=0x80;
003d31 931a      	ST   -Y,R17
003d32 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
003d33 e000     +LDI R16 , LOW ( 0 )
003d34 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
003d35 e8e0      	LDI  R30,LOW(128)
003d36 93e0 0061 	STS  97,R30
                 ; 0001 0018     CLKPR=0x00;
003d38 e0e0      	LDI  R30,LOW(0)
003d39 93e0 0061 	STS  97,R30
                 ; 0001 0019     #ifdef _OPTIMIZE_SIZE_
                 ; 0001 001A     #pragma optsize+
                 ; 0001 001B     #endif
                 ; 0001 001C 
                 ; 0001 001D     init_uart();
003d3b 940e 4020 	CALL _init_uart
                 ; 0001 001E 
                 ; 0001 001F     if(MCUSR & (1<<PORF)){
003d3d b7e4      	IN   R30,0x34
003d3e ffe0      	SBRS R30,0
003d3f c009      	RJMP _0x20003
                 ; 0001 0020         printDebug("\r\nPower-on Reset\r\n");
                +
003d40 eae2     +LDI R30 , LOW ( 2 * _0x20000 + ( 0 ) )
003d41 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 0 ) )
003d42 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 0 ) )
003d43 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 0 ) )
                 	__POINTD1FN _0x20000,0
003d44 940e bbba 	CALL SUBOPT_0x3
                 ; 0001 0021         MCUSR &= ~(1<<PORF);
003d46 b7e4      	IN   R30,0x34
003d47 7fee      	ANDI R30,0xFE
003d48 bfe4      	OUT  0x34,R30
                 ; 0001 0022     }
                 ; 0001 0023     if(MCUSR & (1<<EXTRF)){
                 _0x20003:
003d49 b7e4      	IN   R30,0x34
003d4a ffe1      	SBRS R30,1
003d4b c009      	RJMP _0x20004
                 ; 0001 0024         printDebug("\r\nExternal Reset\r\n");
                +
003d4c ebe5     +LDI R30 , LOW ( 2 * _0x20000 + ( 19 ) )
003d4d e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 19 ) )
003d4e e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 19 ) )
003d4f e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 19 ) )
                 	__POINTD1FN _0x20000,19
003d50 940e bbba 	CALL SUBOPT_0x3
                 ; 0001 0025         MCUSR &= ~(1<<EXTRF);
003d52 b7e4      	IN   R30,0x34
003d53 7fed      	ANDI R30,0xFD
003d54 bfe4      	OUT  0x34,R30
                 ; 0001 0026     }
                 ; 0001 0027     if(MCUSR & (1<<BORF)){
                 _0x20004:
003d55 b7e4      	IN   R30,0x34
003d56 ffe2      	SBRS R30,2
003d57 c009      	RJMP _0x20005
                 ; 0001 0028         printDebug("\r\nBrown-out Reset\r\n");
                +
003d58 ece8     +LDI R30 , LOW ( 2 * _0x20000 + ( 38 ) )
003d59 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 38 ) )
003d5a e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 38 ) )
003d5b e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 38 ) )
                 	__POINTD1FN _0x20000,38
003d5c 940e bbba 	CALL SUBOPT_0x3
                 ; 0001 0029         MCUSR &= ~(1<<BORF);
003d5e b7e4      	IN   R30,0x34
003d5f 7feb      	ANDI R30,0xFB
003d60 bfe4      	OUT  0x34,R30
                 ; 0001 002A     }
                 ; 0001 002B     if(MCUSR & (1<<WDRF)){
                 _0x20005:
003d61 b7e4      	IN   R30,0x34
003d62 ffe3      	SBRS R30,3
003d63 c009      	RJMP _0x20006
                 ; 0001 002C         printDebug("\r\nWatchdog Reset\r\n");
                +
003d64 edec     +LDI R30 , LOW ( 2 * _0x20000 + ( 58 ) )
003d65 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 58 ) )
003d66 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 58 ) )
003d67 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 58 ) )
                 	__POINTD1FN _0x20000,58
003d68 940e bbba 	CALL SUBOPT_0x3
                 ; 0001 002D         MCUSR &= ~(1<<WDRF);
003d6a b7e4      	IN   R30,0x34
003d6b 7fe7      	ANDI R30,0XF7
003d6c bfe4      	OUT  0x34,R30
                 ; 0001 002E     }
                 ; 0001 002F     if(MCUSR & (1<<JTRF)){
                 _0x20006:
003d6d b7e4      	IN   R30,0x34
003d6e ffe4      	SBRS R30,4
003d6f c009      	RJMP _0x20007
                 ; 0001 0030         printDebug("\r\nJTAG Reset\r\n");
                +
003d70 eeef     +LDI R30 , LOW ( 2 * _0x20000 + ( 77 ) )
003d71 e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 77 ) )
003d72 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 77 ) )
003d73 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 77 ) )
                 	__POINTD1FN _0x20000,77
003d74 940e bbba 	CALL SUBOPT_0x3
                 ; 0001 0031         MCUSR &= ~(1<<JTRF);
003d76 b7e4      	IN   R30,0x34
003d77 7eef      	ANDI R30,0xEF
003d78 bfe4      	OUT  0x34,R30
                 ; 0001 0032     }
                 ; 0001 0033 
                 ; 0001 0034     // -------- Peripheral Initialize ----------- //
                 ; 0001 0035     init_io();
                 _0x20007:
003d79 940e 41c2 	CALL _init_io
                 ; 0001 0036     init_i2c();
003d7b d052      	RCALL _init_i2c
                 ; 0001 0037     init_spi();
003d7c d054      	RCALL _init_spi
                 ; 0001 0038     init_adc();
003d7d 940e 43a6 	CALL _init_adc
                 ; 0001 0039     init_timer();
003d7f 940e 410f 	CALL _init_timer
                 ; 0001 003A     init_common();
003d81 d054      	RCALL _init_common
                 ; 0001 003B 
                 ; 0001 003C     enable_interrupt(2);
003d82 940e bed9 	CALL SUBOPT_0x73
003d84 940e 419c 	CALL _enable_interrupt
                 ; 0001 003D 
                 ; 0001 003E     delay_ms(500);
003d86 efa4      	LDI  R26,LOW(500)
003d87 e0b1      	LDI  R27,HIGH(500)
003d88 940e d6dd 	CALL _delay_ms
                 ; 0001 003F 
                 ; 0001 0040     // -------- Module Initialize ----------- //
                 ; 0001 0041     BUZZER = 0;                 // BUZZER Off.
003d8a 9877      	CBI  0xE,7
                 ; 0001 0042     init_RTC();         delay_ms(100);
003d8b 940e 4797 	CALL _init_RTC
003d8d 940e bedc 	CALL SUBOPT_0x74
                 ; 0001 0043     init_oled();        delay_ms(100);
003d8f 940e 7cb1 	CALL _init_oled
003d91 940e bedc 	CALL SUBOPT_0x74
                 ; 0001 0044     adc_init_read();            //getting first ADC to initial
003d93 940e 4349 	CALL _adc_init_read
                 ; 0001 0045 
                 ; 0001 0046     enable_interrupt(1);        // -- adc_sampling
003d95 940e bee0 	CALL SUBOPT_0x75
003d97 940e 419c 	CALL _enable_interrupt
                 ; 0001 0047     enable_interrupt(3);        // -- 1 sec timer
003d99 940e bee3 	CALL SUBOPT_0x76
003d9b 940e 419c 	CALL _enable_interrupt
                 ; 0001 0048     enable_interrupt(4);        // -- 0.5 sec timer
003d9d 940e bee6 	CALL SUBOPT_0x77
003d9f 940e 419c 	CALL _enable_interrupt
                 ; 0001 0049 
                 ; 0001 004A     getAllConfig();
003da1 940e 51fb 	CALL _getAllConfig
                 ; 0001 004B     // -- Initialize Complete -- //
                 ; 0001 004C     playBeep();
003da3 d04a      	RCALL _playBeep
                 ; 0001 004D     showLedInitComplete();
003da4 d09c      	RCALL _showLedInitComplete
                 ; 0001 004E     showDebugInitComplete();
003da5 d04d      	RCALL _showDebugInitComplete
                 ; 0001 004F 
                 ; 0001 0050     if(SD_init() == 0)
003da6 940e 7ea0 	CALL _SD_init
003da8 9730      	SBIW R30,0
003da9 f459      	BRNE _0x2000A
                 ; 0001 0051     {
                 ; 0001 0052         if(LOG_init() < 0)
003daa 940e 8284 	CALL _LOG_init
003dac 23ff      	TST  R31
003dad f432      	BRPL _0x2000B
                 ; 0001 0053         {
                 ; 0001 0054             // -- log status = error -- //
                 ; 0001 0055             printDebug("<initial_system> LOG_init() failed\r\n");
                +
003dae efee     +LDI R30 , LOW ( 2 * _0x20000 + ( 92 ) )
003daf e0ff     +LDI R31 , HIGH ( 2 * _0x20000 + ( 92 ) )
003db0 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 92 ) )
003db1 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 92 ) )
                 	__POINTD1FN _0x20000,92
003db2 940e bbba 	CALL SUBOPT_0x3
                 ; 0001 0056         }
                 ; 0001 0057 
                 ; 0001 0058         // -- log status = ok -- //
                 ; 0001 0059     }
                 _0x2000B:
                 ; 0001 005A     else
003db4 c006      	RJMP _0x2000C
                 _0x2000A:
                 ; 0001 005B     {
                 ; 0001 005C         // -- sd status = error -- //
                 ; 0001 005D         printDebug("<initial_system> SD_init() failed\r\n");
                +
003db5 e2e3     +LDI R30 , LOW ( 2 * _0x20000 + ( 129 ) )
003db6 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 129 ) )
003db7 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 129 ) )
003db8 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 129 ) )
                 	__POINTD1FN _0x20000,129
003db9 940e bbba 	CALL SUBOPT_0x3
                 ; 0001 005E     }
                 _0x2000C:
                 ; 0001 005F 
                 ; 0001 0060     srand((unsigned int)raw_rtc + (unsigned int)(read_adc(8) * 13));        // set random seed
003dbb e0a8      	LDI  R26,LOW(8)
003dbc 940e 42cc 	CALL _read_adc
003dbe e0ad      	LDI  R26,LOW(13)
003dbf e0b0      	LDI  R27,HIGH(13)
003dc0 940e d932 	CALL __MULW12U
003dc2 91a0 1430 	LDS  R26,_raw_rtc
003dc4 91b0 1431 	LDS  R27,_raw_rtc+1
003dc6 0fae      	ADD  R26,R30
003dc7 1fbf      	ADC  R27,R31
003dc8 940e 9fe6 	CALL _srand
                 ; 0001 0061 
                 ; 0001 0062     // -------- Configuration Initialize ----------- //
                 ; 0001 0063 //    readConfig();
                 ; 0001 0064 //    initAlarm();        //delay_ms(100);
                 ; 0001 0065 //
                 ; 0001 0066 //    if(init_logfile() < 0){
                 ; 0001 0067 //        printDebug("init_logdata() failed\r\n");
                 ; 0001 0068 //        return -1;
                 ; 0001 0069 //    }
                 ; 0001 006A 
                 ; 0001 006B 
                 ; 0001 006C     return res;
003dca 01f8      	MOVW R30,R16
003dcb 9109      	LD   R16,Y+
003dcc 9119      	LD   R17,Y+
003dcd 9508      	RET
                 ; 0001 006D }
                 ;/*============================================================*/
                 ;void init_i2c(void)
                 ; 0001 0070 {
                 _init_i2c:
                 ; 0001 0071     // I2C Bus initialization
                 ; 0001 0072     i2c_init();
003dce 940e d68c 	CALL _i2c_init
                 ; 0001 0073 }
003dd0 9508      	RET
                 ;/*============================================================*/
                 ;void init_spi(void)
                 ; 0001 0076 {
                 _init_spi:
                 ; 0001 0077     // SPI initialization
                 ; 0001 0078     // SPI Type: Master
                 ; 0001 0079     // SPI Clock Rate: 2000.000 kHz
                 ; 0001 007A     // SPI Clock Phase: Cycle Start
                 ; 0001 007B     // SPI Clock Polarity: Low
                 ; 0001 007C     // SPI Data Order: MSB First
                 ; 0001 007D     SPCR=0x50;
003dd1 e5e0      	LDI  R30,LOW(80)
003dd2 bdec      	OUT  0x2C,R30
                 ; 0001 007E     SPSR=0x00;
003dd3 e0e0      	LDI  R30,LOW(0)
003dd4 bded      	OUT  0x2D,R30
                 ; 0001 007F }
003dd5 9508      	RET
                 ;/*============================================================*/
                 ;void init_common(void)
                 ; 0001 0082 {
                 _init_common:
                 ; 0001 0083     // External Interrupt(s) initialization
                 ; 0001 0084     // INT0: Off, INT1: Off, INT2: Off, INT3: Off, INT4: Off, INT5: Off, INT6: Off, INT7: Off
                 ; 0001 0085     EICRA=0x00;
003dd6 e0e0      	LDI  R30,LOW(0)
003dd7 93e0 0069 	STS  105,R30
                 ; 0001 0086     EICRB=0x00;
003dd9 93e0 006a 	STS  106,R30
                 ; 0001 0087     EIMSK=0x00;
003ddb bbed      	OUT  0x1D,R30
                 ; 0001 0088 
                 ; 0001 0089     PCMSK0=0x00;
003ddc 93e0 006b 	STS  107,R30
                 ; 0001 008A     PCMSK1=0x00;
003dde 93e0 006c 	STS  108,R30
                 ; 0001 008B     PCMSK2=0x00;
003de0 93e0 006d 	STS  109,R30
                 ; 0001 008C     PCICR=0x00;
003de2 93e0 0068 	STS  104,R30
                 ; 0001 008D 
                 ; 0001 008E     // Analog Comparator initialization
                 ; 0001 008F     // Analog Comparator: Off
                 ; 0001 0090     // Analog Comparator Input Capture by Timer/Counter 1: Off
                 ; 0001 0091     ACSR=0x80;
003de4 e8e0      	LDI  R30,LOW(128)
003de5 bfe0      	OUT  0x30,R30
                 ; 0001 0092     ADCSRB=0x00;
003de6 e0e0      	LDI  R30,LOW(0)
003de7 93e0 007b 	STS  123,R30
                 ; 0001 0093     DIDR1=0x00;
003de9 93e0 007f 	STS  127,R30
                 ; 0001 0094 
                 ; 0001 0095     // TWI initialization
                 ; 0001 0096     // TWI disabled
                 ; 0001 0097     TWCR=0x00;
003deb 93e0 00bc 	STS  188,R30
                 ; 0001 0098 }
003ded 9508      	RET
                 ;/*============================================================*/
                 ;void playBeep(void)
                 ; 0001 009B {
                 _playBeep:
                 ; 0001 009C     BUZZER = 1;                                     // Buzzer ON Starting
003dee 9a77      	SBI  0xE,7
                 ; 0001 009D     delay_ms(200);
003def 940e bd1d 	CALL SUBOPT_0x35
                 ; 0001 009E     BUZZER = 0;
003df1 9877      	CBI  0xE,7
                 ; 0001 009F }
003df2 9508      	RET
                 ;/*============================================================*/
                 ;void showDebugInitComplete(void)
                 ; 0001 00A2 {
                 _showDebugInitComplete:
                 ; 0001 00A3     struct rtc_structure time;
                 ; 0001 00A4     struct prop_cnfg_st properties_config;
                 ; 0001 00A5 
                 ; 0001 00A6     printDebug("Initial Device Completed at - ");
003df3 97ef      	SBIW R28,63
003df4 97ef      	SBIW R28,63
003df5 97ed      	SBIW R28,61
                 ;	time -> Y+161
                 ;	properties_config -> Y+0
                +
003df6 e4e7     +LDI R30 , LOW ( 2 * _0x20000 + ( 165 ) )
003df7 e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 165 ) )
003df8 e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 165 ) )
003df9 e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 165 ) )
                 	__POINTD1FN _0x20000,165
003dfa 940e bbba 	CALL SUBOPT_0x3
                 ; 0001 00A7     RTC_getDateTime(&time,properties_config.timeZone);
003dfc 01fe      	MOVW R30,R28
003dfd 55ef      	SUBI R30,LOW(-(161))
003dfe 4fff      	SBCI R31,HIGH(-(161))
003dff 93fa      	ST   -Y,R31
003e00 93ea      	ST   -Y,R30
003e01 01de      	MOVW R26,R28
003e02 55ae      	SUBI R26,LOW(-162)
003e03 4fbf      	SBCI R27,HIGH(-162)
003e04 91ec      	LD   R30,X
003e05 e0f0      	LDI  R31,0
003e06 fde7      	SBRC R30,7
003e07 efff      	SER  R31
003e08 01df      	MOVW R26,R30
003e09 940e 4700 	CALL _RTC_getDateTime
                 ; 0001 00A8     printDebug("%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0001 00A9             time.year,time.month,time.date,time.hour,time.min,time.sec);
                +
003e0b e6e6     +LDI R30 , LOW ( 2 * _0x20000 + ( 196 ) )
003e0c e1f0     +LDI R31 , HIGH ( 2 * _0x20000 + ( 196 ) )
003e0d e060     +LDI R22 , BYTE3 ( 2 * _0x20000 + ( 196 ) )
003e0e e070     +LDI R23 , BYTE4 ( 2 * _0x20000 + ( 196 ) )
                 	__POINTD1FN _0x20000,196
003e0f 940e da29 	CALL __PUTPARD1
                +
003e11 01fe     +MOVW R30 , R28
003e12 55eb     +SUBI R30 , LOW ( - 165 )
003e13 4fff     +SBCI R31 , HIGH ( - 165 )
003e14 9001     +LD R0 , Z +
003e15 9011     +LD R1 , Z +
003e16 9161     +LD R22 , Z +
003e17 8170     +LD R23 , Z
003e18 01f0     +MOVW R30 , R0
                 	__GETD1SX 165
003e19 940e da29 	CALL __PUTPARD1
003e1b 01fe      	MOVW R30,R28
003e1c 55e7      	SUBI R30,LOW(-(169))
003e1d 4fff      	SBCI R31,HIGH(-(169))
003e1e 9634      	ADIW R30,4
003e1f 940e bee9 	CALL SUBOPT_0x78
003e21 01fe      	MOVW R30,R28
003e22 55e3      	SUBI R30,LOW(-(173))
003e23 4fff      	SBCI R31,HIGH(-(173))
003e24 9638      	ADIW R30,8
003e25 940e bee9 	CALL SUBOPT_0x78
003e27 01fe      	MOVW R30,R28
003e28 54ef      	SUBI R30,LOW(-(177))
003e29 4fff      	SBCI R31,HIGH(-(177))
003e2a 963c      	ADIW R30,12
003e2b 940e bee9 	CALL SUBOPT_0x78
003e2d 01fe      	MOVW R30,R28
003e2e 54eb      	SUBI R30,LOW(-(181))
003e2f 4fff      	SBCI R31,HIGH(-(181))
003e30 9670      	ADIW R30,16
003e31 940e bee9 	CALL SUBOPT_0x78
003e33 01fe      	MOVW R30,R28
003e34 54e7      	SUBI R30,LOW(-(185))
003e35 4fff      	SBCI R31,HIGH(-(185))
003e36 9674      	ADIW R30,20
003e37 940e bee9 	CALL SUBOPT_0x78
003e39 e188      	LDI  R24,24
003e3a 940e 9ad2 	CALL _printDebug
003e3c 966c      	ADIW R28,28
                 ; 0001 00AA }
003e3d 96ef      	ADIW R28,63
003e3e 96ef      	ADIW R28,63
003e3f 96ed      	ADIW R28,61
003e40 9508      	RET
                 ;/*============================================================*/
                 ;void showLedInitComplete(void)
                 ; 0001 00AD {
                 _showLedInitComplete:
                 ; 0001 00AE     LED_ON(BIT_LED_ALARM);
003e41 91e0 0102 	LDS  R30,258
003e43 7bef      	ANDI R30,0xBF
003e44 940e beef 	CALL SUBOPT_0x79
                 ; 0001 00AF     delay_ms(200);
                 ; 0001 00B0 
                 ; 0001 00B1     LED_ON(BIT_LED_LINK);
003e46 91e0 0102 	LDS  R30,258
003e48 7def      	ANDI R30,0xDF
003e49 940e beef 	CALL SUBOPT_0x79
                 ; 0001 00B2     delay_ms(200);
                 ; 0001 00B3 
                 ; 0001 00B4     LED_ON(BIT_LED_TEMP);
003e4b 91e0 0102 	LDS  R30,258
003e4d 7eef      	ANDI R30,0xEF
003e4e 940e beef 	CALL SUBOPT_0x79
                 ; 0001 00B5     delay_ms(200);
                 ; 0001 00B6 
                 ; 0001 00B7     LED_ON(BIT_LED_PWR);
003e50 91e0 0102 	LDS  R30,258
003e52 7fe7      	ANDI R30,0XF7
003e53 940e beef 	CALL SUBOPT_0x79
                 ; 0001 00B8     delay_ms(200);
                 ; 0001 00B9 
                 ; 0001 00BA     LED_OFF(BIT_LED_PWR|BIT_LED_TEMP|BIT_LED_LINK|BIT_LED_ALARM);
003e55 91e0 0102 	LDS  R30,258
003e57 67e8      	ORI  R30,LOW(0x78)
003e58 940e beef 	CALL SUBOPT_0x79
                 ; 0001 00BB     delay_ms(200);
                 ; 0001 00BC 
                 ; 0001 00BD     LED_ON(BIT_LED_PWR);
003e5a 91e0 0102 	LDS  R30,258
003e5c 7fe7      	ANDI R30,0XF7
003e5d 93e0 0102 	STS  258,R30
                 ; 0001 00BE     delay_ms(50);
003e5f 940e bef2 	CALL SUBOPT_0x7A
                 ; 0001 00BF }
003e61 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <ctype.h>
                 ;#include <delay.h>
                 ;#include "uart.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;/*============================================================*/
                 ;char flag_PackageTerminate3 = 0;
                 ;
                 ;flash unsigned char charHeader = '$';
                 ;flash unsigned char charTerminate = '#';
                 ;
                 ;bit                 flag_oled_ack      = 0;
                 ;
                 ;unsigned char       rxPackageIndex3;
                 ;unsigned char       rxPackage3[64];
                 ;unsigned char       rxPackageIndexCount3;
                 ;/*============================================================*/
                 ;// USART0 Receiver buffer
                 ;char rx_buffer0[RX_BUFFER_SIZE0];
                 ;
                 ;unsigned int rx_wr_index0,rx_rd_index0,rx_counter0;
                 ;
                 ;// This flag is set on USART0 Receiver buffer overflow
                 ;bit rx_buffer_overflow0;
                 ;
                 ;unsigned char       configRd[CONF_READ_BUFFER];      // for reading config
                 ;int                 configLen=0;
                 ;
                 ;char                config_start    = 0;
                 ;char                config_ready    = 0;    // 1 = failed, 2 = success
                 ;char                config_end      = 0;
                 ;char                config_response = 0;
                 ;
                 ;// USART0 Receiver interrupt service routine
                 ;interrupt [USART0_RXC] void usart0_rx_isr(void)
                 ; 0002 0028 {
                 
                 	.CSEG
                 _usart0_rx_isr:
003e62 940e bef6 	CALL SUBOPT_0x7B
                 ; 0002 0029     char status,data;
                 ; 0002 002A     status=UCSR0A;
                 ;	status -> R17
                 ;	data -> R16
003e64 9110 00c0 	LDS  R17,192
                 ; 0002 002B     data=UDR0;
003e66 9100 00c6 	LDS  R16,198
                 ; 0002 002C 
                 ; 0002 002D     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003e68 2fe1      	MOV  R30,R17
003e69 71ec      	ANDI R30,LOW(0x1C)
003e6a f011      	BREQ PC+3
003e6b 940c 3f16 	JMP _0x40003
                 ; 0002 002E     {
                 ; 0002 002F         if(ETH_current_mode != MODE_CONF)
003e6d 91e0 1420 	LDS  R30,_ETH_current_mode
003e6f 30e0      	CPI  R30,0
003e70 f199      	BREQ _0x40004
                 ; 0002 0030         {
                 ; 0002 0031             //putchar3(data);
                 ; 0002 0032             rx_buffer0[rx_wr_index0++]  =   data;
003e71 eaa3      	LDI  R26,LOW(_rx_wr_index0)
003e72 e0bf      	LDI  R27,HIGH(_rx_wr_index0)
003e73 940e bf0a 	CALL SUBOPT_0x7C
003e75 9731      	SBIW R30,1
003e76 55e1      	SUBI R30,LOW(-_rx_buffer0)
003e77 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003e78 8300      	ST   Z,R16
                 ; 0002 0033 
                 ; 0002 0034             if (rx_wr_index0 == RX_BUFFER_SIZE0)
003e79 91a0 0fa3 	LDS  R26,_rx_wr_index0
003e7b 91b0 0fa4 	LDS  R27,_rx_wr_index0+1
003e7d 3fa4      	CPI  R26,LOW(0x1F4)
003e7e e0e1      	LDI  R30,HIGH(0x1F4)
003e7f 07be      	CPC  R27,R30
003e80 f429      	BRNE _0x40005
                 ; 0002 0035             {
                 ; 0002 0036                 rx_wr_index0=0;
003e81 e0e0      	LDI  R30,LOW(0)
003e82 93e0 0fa3 	STS  _rx_wr_index0,R30
003e84 93e0 0fa4 	STS  _rx_wr_index0+1,R30
                 ; 0002 0037             }
                 ; 0002 0038             if (++rx_counter0 == RX_BUFFER_SIZE0)
                 _0x40005:
003e86 eaa7      	LDI  R26,LOW(_rx_counter0)
003e87 e0bf      	LDI  R27,HIGH(_rx_counter0)
003e88 940e bf0a 	CALL SUBOPT_0x7C
003e8a 3fe4      	CPI  R30,LOW(0x1F4)
003e8b e0a1      	LDI  R26,HIGH(0x1F4)
003e8c 07fa      	CPC  R31,R26
003e8d f4a9      	BRNE _0x40006
                 ; 0002 0039             {
                 ; 0002 003A                 rx_counter0=0;
003e8e e0e0      	LDI  R30,LOW(0)
003e8f 93e0 0fa7 	STS  _rx_counter0,R30
003e91 93e0 0fa8 	STS  _rx_counter0+1,R30
                 ; 0002 003B                 rx_buffer_overflow0=1;
003e93 9af1      	SBI  0x1E,1
                 ; 0002 003C                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003e94 e0e3      	LDI  R30,LOW(3)
003e95 93ea      	ST   -Y,R30
                +
003e96 efa0     +LDI R26 , LOW ( _0x40009 + ( 0 ) )
003e97 e0bc     +LDI R27 , HIGH ( _0x40009 + ( 0 ) )
                 	__POINTW2MN _0x40009,0
003e98 d154      	RCALL _send_uart
                 ; 0002 003D                 send_uart(3,    "!!!!!!! Eth Buffer Overflow !!!!!!!!!"     );
003e99 e0e3      	LDI  R30,LOW(3)
003e9a 93ea      	ST   -Y,R30
                +
003e9b e1ab     +LDI R26 , LOW ( _0x40009 + ( 43 ) )
003e9c e0bd     +LDI R27 , HIGH ( _0x40009 + ( 43 ) )
                 	__POINTW2MN _0x40009,43
003e9d d14f      	RCALL _send_uart
                 ; 0002 003E                 send_uart(3,"\r\n!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!\r\n" );
003e9e e0e3      	LDI  R30,LOW(3)
003e9f 93ea      	ST   -Y,R30
                +
003ea0 e4a1     +LDI R26 , LOW ( _0x40009 + ( 81 ) )
003ea1 e0bd     +LDI R27 , HIGH ( _0x40009 + ( 81 ) )
                 	__POINTW2MN _0x40009,81
003ea2 d14a      	RCALL _send_uart
                 ; 0002 003F             }
                 ; 0002 0040         }
                 _0x40006:
                 ; 0002 0041         else{
003ea3 c072      	RJMP _0x4000A
                 _0x40004:
                 ; 0002 0042             putchar3(data);
003ea4 2fa0      	MOV  R26,R16
003ea5 d13d      	RCALL _putchar3
                 ; 0002 0043 
                 ; 0002 0044             if (configLen == CONF_READ_BUFFER)
003ea6 940e bf10 	CALL SUBOPT_0x7D
003ea8 34a5      	CPI  R26,LOW(0x145)
003ea9 e0e1      	LDI  R30,HIGH(0x145)
003eaa 07be      	CPC  R27,R30
003eab f411      	BRNE _0x4000B
                 ; 0002 0045             {
                 ; 0002 0046                 configLen=0;
003eac 940e bf15 	CALL SUBOPT_0x7E
                 ; 0002 0047             }
                 ; 0002 0048 
                 ; 0002 0049             if((data == '<') && (config_start == 0)){
                 _0x4000B:
003eae 330c      	CPI  R16,60
003eaf f421      	BRNE _0x4000D
003eb0 91a0 10f0 	LDS  R26,_config_start
003eb2 30a0      	CPI  R26,LOW(0x0)
003eb3 f009      	BREQ _0x4000E
                 _0x4000D:
003eb4 c009      	RJMP _0x4000C
                 _0x4000E:
                 ; 0002 004A                 config_start            = 1;
003eb5 e0e1      	LDI  R30,LOW(1)
003eb6 93e0 10f0 	STS  _config_start,R30
                 ; 0002 004B                 config_response         = 0;
003eb8 e0e0      	LDI  R30,LOW(0)
003eb9 93e0 10f3 	STS  _config_response,R30
                 ; 0002 004C                 config_ready            = 0;
003ebb 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 004D             }
                 ; 0002 004E             else if((data == 0x0D) && (config_end == 0) && (config_start == 1) && (config_response != 0)){
003ebd c058      	RJMP _0x4000F
                 _0x4000C:
003ebe 300d      	CPI  R16,13
003ebf f461      	BRNE _0x40011
003ec0 91a0 10f2 	LDS  R26,_config_end
003ec2 30a0      	CPI  R26,LOW(0x0)
003ec3 f441      	BRNE _0x40011
003ec4 91a0 10f0 	LDS  R26,_config_start
003ec6 30a1      	CPI  R26,LOW(0x1)
003ec7 f421      	BRNE _0x40011
003ec8 91a0 10f3 	LDS  R26,_config_response
003eca 30a0      	CPI  R26,LOW(0x0)
003ecb f409      	BRNE _0x40012
                 _0x40011:
003ecc c004      	RJMP _0x40010
                 _0x40012:
                 ; 0002 004F                 config_end  = 0x0D;
003ecd e0ed      	LDI  R30,LOW(13)
003ece 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0050             }
                 ; 0002 0051             else if((data == 0x0A) && (config_end == 0x0D) && (config_start == 1) && (config_response != 0)){
003ed0 c045      	RJMP _0x40013
                 _0x40010:
003ed1 300a      	CPI  R16,10
003ed2 f461      	BRNE _0x40015
003ed3 91a0 10f2 	LDS  R26,_config_end
003ed5 30ad      	CPI  R26,LOW(0xD)
003ed6 f441      	BRNE _0x40015
003ed7 91a0 10f0 	LDS  R26,_config_start
003ed9 30a1      	CPI  R26,LOW(0x1)
003eda f421      	BRNE _0x40015
003edb 91a0 10f3 	LDS  R26,_config_response
003edd 30a0      	CPI  R26,LOW(0x0)
003ede f409      	BRNE _0x40016
                 _0x40015:
003edf c007      	RJMP _0x40014
                 _0x40016:
                 ; 0002 0052                 config_end              = 0x0A;
003ee0 e0ea      	LDI  R30,LOW(10)
003ee1 93e0 10f2 	STS  _config_end,R30
                 ; 0002 0053                 config_ready            = 1;
003ee3 e0e1      	LDI  R30,LOW(1)
003ee4 93e0 10f1 	STS  _config_ready,R30
                 ; 0002 0054             }
                 ; 0002 0055             else if((data == 'E') && (config_start == 1) && (config_response == 0)){
003ee6 c02f      	RJMP _0x40017
                 _0x40014:
003ee7 3405      	CPI  R16,69
003ee8 f441      	BRNE _0x40019
003ee9 91a0 10f0 	LDS  R26,_config_start
003eeb 30a1      	CPI  R26,LOW(0x1)
003eec f421      	BRNE _0x40019
003eed 91a0 10f3 	LDS  R26,_config_response
003eef 30a0      	CPI  R26,LOW(0x0)
003ef0 f009      	BREQ _0x4001A
                 _0x40019:
003ef1 c004      	RJMP _0x40018
                 _0x4001A:
                 ; 0002 0056                 config_response         = 'E';
003ef2 e4e5      	LDI  R30,LOW(69)
003ef3 93e0 10f3 	STS  _config_response,R30
                 ; 0002 0057             }
                 ; 0002 0058             else if((data == 'S') && (config_start == 1) && (config_response == 0)){
003ef5 c020      	RJMP _0x4001B
                 _0x40018:
003ef6 3503      	CPI  R16,83
003ef7 f441      	BRNE _0x4001D
003ef8 91a0 10f0 	LDS  R26,_config_start
003efa 30a1      	CPI  R26,LOW(0x1)
003efb f421      	BRNE _0x4001D
003efc 91a0 10f3 	LDS  R26,_config_response
003efe 30a0      	CPI  R26,LOW(0x0)
003eff f009      	BREQ _0x4001E
                 _0x4001D:
003f00 c004      	RJMP _0x4001C
                 _0x4001E:
                 ; 0002 0059                 config_response         = 'S';
003f01 e5e3      	LDI  R30,LOW(83)
003f02 93e0 10f3 	STS  _config_response,R30
                 ; 0002 005A             }
                 ; 0002 005B             else if((config_start == 1) && (config_response != 0)){
003f04 c011      	RJMP _0x4001F
                 _0x4001C:
003f05 91a0 10f0 	LDS  R26,_config_start
003f07 30a1      	CPI  R26,LOW(0x1)
003f08 f421      	BRNE _0x40021
003f09 91a0 10f3 	LDS  R26,_config_response
003f0b 30a0      	CPI  R26,LOW(0x0)
003f0c f409      	BRNE _0x40022
                 _0x40021:
003f0d c008      	RJMP _0x40020
                 _0x40022:
                 ; 0002 005C                 configRd[configLen++]   =   data;
003f0e eeae      	LDI  R26,LOW(_configLen)
003f0f e1b0      	LDI  R27,HIGH(_configLen)
003f10 940e bf0a 	CALL SUBOPT_0x7C
003f12 9731      	SBIW R30,1
003f13 55e7      	SUBI R30,LOW(-_configRd)
003f14 4ff0      	SBCI R31,HIGH(-_configRd)
003f15 8300      	ST   Z,R16
                 ; 0002 005D             }
                 ; 0002 005E         }
                 _0x40020:
                 _0x4001F:
                 _0x4001B:
                 _0x40017:
                 _0x40013:
                 _0x4000F:
                 _0x4000A:
                 ; 0002 005F     }
                 ; 0002 0060 }
                 _0x40003:
003f16 c0b8      	RJMP _0x40053
                 
                 	.DSEG
                 _0x40009:
000cf0           	.BYTE 0x7C
                 ;
                 ;#ifndef _DEBUG_TERMINAL_IO_
                 ;// Get a character from the USART0 Receiver buffer
                 ;#define _ALTERNATE_GETCHAR_
                 ;
                 ;#pragma used+
                 ;char getchar(void)
                 ; 0002 0068 {
                 
                 	.CSEG
                 ; 0002 0069     char data;
                 ; 0002 006A     while (rx_counter0==0);
                 ;	data -> R17
                 ; 0002 006B     data=rx_buffer0[rx_rd_index0++];
                 ; 0002 006C  //   #if RX_BUFFER_SIZE0 != 256
                 ; 0002 006D     if (rx_rd_index0 == RX_BUFFER_SIZE0)
                 ; 0002 006E         rx_rd_index0=0;
                 ; 0002 006F //    #endif
                 ; 0002 0070     #asm("cli")
                 ; 0002 0071     --rx_counter0;
                 ; 0002 0072     #asm("sei")
                 ; 0002 0073     return data;
                 ; 0002 0074 }
                 ;#pragma used-
                 ;// Write a character to the USART0 Transmitter
                 ;#pragma used+
                 ;void putchar0(char c)
                 ; 0002 0079 {
                 _putchar0:
                 ; 0002 007A     while ((UCSR0A & DATA_REGISTER_EMPTY)==0);
003f17 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40027:
003f18 91e0 00c0 	LDS  R30,192
003f1a 72e0      	ANDI R30,LOW(0x20)
003f1b f3e1      	BREQ _0x40027
                 ; 0002 007B     UDR0=c;
003f1c 81e8      	LD   R30,Y
003f1d 93e0 00c6 	STS  198,R30
                 ; 0002 007C }
003f1f c0cb      	RJMP _0x20E009A
                 ;#pragma used-
                 ;#endif
                 ;
                 ;int read_uart0(char *readbuf, int maxread,int interchar)
                 ; 0002 0081 {
                 _read_uart0:
                 ; 0002 0082     char data;
                 ; 0002 0083     int len=0;
                 ; 0002 0084 
                 ; 0002 0085     while (rx_counter0 > 0)
003f20 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*readbuf -> Y+8
                 ;	maxread -> Y+6
                 ;	interchar -> Y+4
                 ;	data -> R17
                 ;	len -> R18,R19
                +
003f22 e020     +LDI R18 , LOW ( 0 )
003f23 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x4002A:
003f24 91a0 0fa7 	LDS  R26,_rx_counter0
003f26 91b0 0fa8 	LDS  R27,_rx_counter0+1
003f28 940e da81 	CALL __CPW02
003f2a f010      	BRLO PC+3
003f2b 940c 3f6d 	JMP _0x4002C
                 ; 0002 0086     {
                 ; 0002 0087         data=rx_buffer0[rx_rd_index0++];
003f2d eaa5      	LDI  R26,LOW(_rx_rd_index0)
003f2e e0bf      	LDI  R27,HIGH(_rx_rd_index0)
003f2f 940e bf0a 	CALL SUBOPT_0x7C
003f31 9731      	SBIW R30,1
003f32 55e1      	SUBI R30,LOW(-_rx_buffer0)
003f33 4ff2      	SBCI R31,HIGH(-_rx_buffer0)
003f34 8110      	LD   R17,Z
                 ; 0002 0088         if (rx_rd_index0 == RX_BUFFER_SIZE0){
003f35 91a0 0fa5 	LDS  R26,_rx_rd_index0
003f37 91b0 0fa6 	LDS  R27,_rx_rd_index0+1
003f39 3fa4      	CPI  R26,LOW(0x1F4)
003f3a e0e1      	LDI  R30,HIGH(0x1F4)
003f3b 07be      	CPC  R27,R30
003f3c f429      	BRNE _0x4002D
                 ; 0002 0089             rx_rd_index0=0;
003f3d e0e0      	LDI  R30,LOW(0)
003f3e 93e0 0fa5 	STS  _rx_rd_index0,R30
003f40 93e0 0fa6 	STS  _rx_rd_index0+1,R30
                 ; 0002 008A         }
                 ; 0002 008B         UCSR0B &= 0x7F;          // -- disable uart0 interrupt -- //
                 _0x4002D:
003f42 91e0 00c1 	LDS  R30,193
003f44 77ef      	ANDI R30,0x7F
003f45 93e0 00c1 	STS  193,R30
                 ; 0002 008C 
                 ; 0002 008D         --rx_counter0;
003f47 eaa7      	LDI  R26,LOW(_rx_counter0)
003f48 e0bf      	LDI  R27,HIGH(_rx_counter0)
003f49 91ed      	LD   R30,X+
003f4a 91fd      	LD   R31,X+
003f4b 9731      	SBIW R30,1
003f4c 93fe      	ST   -X,R31
003f4d 93ee      	ST   -X,R30
                 ; 0002 008E 
                 ; 0002 008F         UCSR0B |= 0x80;          // -- enable uart0 interrupt -- //
003f4e 91e0 00c1 	LDS  R30,193
003f50 68e0      	ORI  R30,0x80
003f51 93e0 00c1 	STS  193,R30
                 ; 0002 0090 
                 ; 0002 0091         memcpy(readbuf++,&data,1);
003f53 940e bf20 	CALL SUBOPT_0x80
003f55 93fa      	ST   -Y,R31
003f56 93ea      	ST   -Y,R30
003f57 b7ed      	IN   R30,SPL
003f58 b7fe      	IN   R31,SPH
003f59 93fa      	ST   -Y,R31
003f5a 93ea      	ST   -Y,R30
003f5b 931f      	PUSH R17
003f5c 940e bee0 	CALL SUBOPT_0x75
003f5e 940e a0df 	CALL _memcpy
003f60 911f      	POP  R17
                 ; 0002 0092         len++;
                +
003f61 5f2f     +SUBI R18 , LOW ( - 1 )
003f62 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 ; 0002 0093 
                 ; 0002 0094         if(len == maxread){
003f63 81ee      	LDD  R30,Y+6
003f64 81ff      	LDD  R31,Y+6+1
003f65 17e2      	CP   R30,R18
003f66 07f3      	CPC  R31,R19
003f67 f029      	BREQ _0x4002C
                 ; 0002 0095             break;
                 ; 0002 0096         }
                 ; 0002 0097         delay_ms(interchar);
003f68 81ac      	LDD  R26,Y+4
003f69 81bd      	LDD  R27,Y+4+1
003f6a 940e d6dd 	CALL _delay_ms
                 ; 0002 0098     }
003f6c cfb7      	RJMP _0x4002A
                 _0x4002C:
                 ; 0002 0099     return len;
003f6d 01f9      	MOVW R30,R18
003f6e 940e daa2 	CALL __LOADLOCR4
003f70 c143      	RJMP _0x20E0099
                 ; 0002 009A }
                 ;
                 ;int write_uart0(char writebuf[], int len)
                 ; 0002 009D {
                 _write_uart0:
                 ; 0002 009E     int i;
                 ; 0002 009F     for(i=0;i<len;i++){
003f71 940e bf27 	CALL SUBOPT_0x81
                 ;	writebuf -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
003f73 e000     +LDI R16 , LOW ( 0 )
003f74 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x40030:
003f75 940e bf2c 	CALL SUBOPT_0x82
003f77 f43c      	BRGE _0x40031
                 ; 0002 00A0         putchar0(writebuf[i]);
003f78 940e bf31 	CALL SUBOPT_0x83
003f7a 91ac      	LD   R26,X
003f7b df9b      	RCALL _putchar0
                 ; 0002 00A1     }
                +
003f7c 5f0f     +SUBI R16 , LOW ( - 1 )
003f7d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
003f7e cff6      	RJMP _0x40030
                 _0x40031:
                 ; 0002 00A2     return i;
003f7f 01f8      	MOVW R30,R16
003f80 8119      	LDD  R17,Y+1
003f81 8108      	LDD  R16,Y+0
003f82 9626      	ADIW R28,6
003f83 9508      	RET
                 ; 0002 00A3 }
                 ;/*============================================================*/
                 ;// USART1 Receiver interrupt service routine
                 ;interrupt [USART1_RXC] void usart1_rx_isr(void)
                 ; 0002 00A7 {
                 _usart1_rx_isr:
003f84 93ea      	ST   -Y,R30
003f85 b7ef      	IN   R30,SREG
003f86 93ea      	ST   -Y,R30
                 ; 0002 00A8     char status,data;
                 ; 0002 00A9     status=UCSR1A;
003f87 931a      	ST   -Y,R17
003f88 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
003f89 9110 00c8 	LDS  R17,200
                 ; 0002 00AA     data=UDR1;
003f8b 9100 00ce 	LDS  R16,206
                 ; 0002 00AB 
                 ; 0002 00AC     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003f8d 2fe1      	MOV  R30,R17
003f8e 71ec      	ANDI R30,LOW(0x1C)
                 ; 0002 00AD     {
                 ; 0002 00AE         if(data);
                 ; 0002 00AF     }
                 ; 0002 00B0 }
003f8f c00f      	RJMP _0x40054
                 ;
                 ;/*============================================================*/
                 ;// USART2 Receiver interrupt service routine
                 ;interrupt [USART2_RXC] void usart2_rx_isr(void)
                 ; 0002 00B5 {
                 _usart2_rx_isr:
003f90 93ea      	ST   -Y,R30
003f91 b7ef      	IN   R30,SREG
003f92 93ea      	ST   -Y,R30
                 ; 0002 00B6     char status,data;
                 ; 0002 00B7     status=UCSR2A;
003f93 931a      	ST   -Y,R17
003f94 930a      	ST   -Y,R16
                 ;	status -> R17
                 ;	data -> R16
003f95 9110 00d0 	LDS  R17,208
                 ; 0002 00B8     data=UDR2;
003f97 9100 00d6 	LDS  R16,214
                 ; 0002 00B9     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003f99 2fe1      	MOV  R30,R17
003f9a 71ec      	ANDI R30,LOW(0x1C)
003f9b f419      	BRNE _0x40034
                 ; 0002 00BA     {
                 ; 0002 00BB         if(data=='K'){
003f9c 340b      	CPI  R16,75
003f9d f409      	BRNE _0x40035
                 ; 0002 00BC             flag_oled_ack = 1;
003f9e 9af0      	SBI  0x1E,0
                 ; 0002 00BD         }
                 ; 0002 00BE         else{
                 _0x40035:
                 ; 0002 00BF             //putchar3(data);
                 ; 0002 00C0         }
                 ; 0002 00C1     }
                 ; 0002 00C2 }
                 _0x40034:
                 _0x40054:
003f9f 9109      	LD   R16,Y+
003fa0 9119      	LD   R17,Y+
003fa1 91e9      	LD   R30,Y+
003fa2 bfef      	OUT  SREG,R30
003fa3 91e9      	LD   R30,Y+
003fa4 9518      	RETI
                 ;
                 ;// Write a character to the USART2 Transmitter
                 ;#pragma used+
                 ;void putchar2(char c)
                 ; 0002 00C7 {
                 _putchar2:
                 ; 0002 00C8     while ((UCSR2A & DATA_REGISTER_EMPTY)==0);
003fa5 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40039:
003fa6 91e0 00d0 	LDS  R30,208
003fa8 72e0      	ANDI R30,LOW(0x20)
003fa9 f3e1      	BREQ _0x40039
                 ; 0002 00C9     UDR2=c;
003faa 81e8      	LD   R30,Y
003fab 93e0 00d6 	STS  214,R30
                 ; 0002 00CA }
003fad c03d      	RJMP _0x20E009A
                 ;#pragma used-
                 ;
                 ;
                 ;/*============================================================*/
                 ;// USART3 Receiver interrupt service routine
                 ;interrupt [USART3_RXC] void usart3_rx_isr(void)
                 ; 0002 00D1 {
                 _usart3_rx_isr:
003fae 940e bef6 	CALL SUBOPT_0x7B
                 ; 0002 00D2     char status,data;
                 ; 0002 00D3     status=UCSR3A;
                 ;	status -> R17
                 ;	data -> R16
003fb0 9110 0130 	LDS  R17,304
                 ; 0002 00D4     data=UDR3;
003fb2 9100 0136 	LDS  R16,310
                 ; 0002 00D5     //putchar3(data);
                 ; 0002 00D6     //putchar0(data);
                 ; 0002 00D7     if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
003fb4 2fe1      	MOV  R30,R17
003fb5 71ec      	ANDI R30,LOW(0x1C)
003fb6 f4c1      	BRNE _0x4003C
                 ; 0002 00D8     {
                 ; 0002 00D9         putchar3(data);
003fb7 2fa0      	MOV  R26,R16
003fb8 d02a      	RCALL _putchar3
                 ; 0002 00DA //        putchar0(data);
                 ; 0002 00DB         // Detect Package Header
                 ; 0002 00DC         if(data == charHeader)
003fb9 3204      	CPI  R16,36
003fba f409      	BRNE _0x4003D
                 ; 0002 00DD         {
                 ; 0002 00DE             rxPackageIndex3 = 0;
003fbb 2455      	CLR  R5
                 ; 0002 00DF         }
                 ; 0002 00E0 
                 ; 0002 00E1         rxPackage3[rxPackageIndex3++] = data;
                 _0x4003D:
003fbc 2de5      	MOV  R30,R5
003fbd 9453      	INC  R5
003fbe e0f0      	LDI  R31,0
003fbf 59e1      	SUBI R30,LOW(-_rxPackage3)
003fc0 4ff2      	SBCI R31,HIGH(-_rxPackage3)
003fc1 8300      	ST   Z,R16
                 ; 0002 00E2 
                 ; 0002 00E3         if(rxPackageIndex3 >= 64) rxPackageIndex3 = 0;
003fc2 e4e0      	LDI  R30,LOW(64)
003fc3 165e      	CP   R5,R30
003fc4 f008      	BRLO _0x4003E
003fc5 2455      	CLR  R5
                 ; 0002 00E4 
                 ; 0002 00E5         if(data == charTerminate)
                 _0x4003E:
003fc6 3203      	CPI  R16,35
003fc7 f439      	BRNE _0x4003F
                 ; 0002 00E6         {
                 ; 0002 00E7             rxPackageIndexCount3 = rxPackageIndex3-1;
003fc8 2de5      	MOV  R30,R5
003fc9 50e1      	SUBI R30,LOW(1)
003fca 2e4e      	MOV  R4,R30
                 ; 0002 00E8             rxPackageIndex3 = 0;
003fcb 2455      	CLR  R5
                 ; 0002 00E9             flag_PackageTerminate3 = 1;
003fcc e0e1      	LDI  R30,LOW(1)
003fcd 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0002 00EA         }
                 ; 0002 00EB     }
                 _0x4003F:
                 ; 0002 00EC }
                 _0x4003C:
                 _0x40053:
003fcf 9109      	LD   R16,Y+
003fd0 9119      	LD   R17,Y+
003fd1 91e9      	LD   R30,Y+
003fd2 bfef      	OUT  SREG,R30
003fd3 91e9      	LD   R30,Y+
003fd4 bfec      	OUT  EIND,R30
003fd5 91e9      	LD   R30,Y+
003fd6 bfeb      	OUT  RAMPZ,R30
003fd7 91f9      	LD   R31,Y+
003fd8 91e9      	LD   R30,Y+
003fd9 91b9      	LD   R27,Y+
003fda 91a9      	LD   R26,Y+
003fdb 9199      	LD   R25,Y+
003fdc 9189      	LD   R24,Y+
003fdd 9179      	LD   R23,Y+
003fde 9169      	LD   R22,Y+
003fdf 90f9      	LD   R15,Y+
003fe0 9019      	LD   R1,Y+
003fe1 9009      	LD   R0,Y+
003fe2 9518      	RETI
                 ;
                 ;/*============================================================*/
                 ;// Write a character to the USART3 Transmitter
                 ;#pragma used+
                 ;void putchar3(char c)
                 ; 0002 00F2 {
                 _putchar3:
                 ; 0002 00F3     while ((UCSR3A & DATA_REGISTER_EMPTY)==0);
003fe3 93aa      	ST   -Y,R26
                 ;	c -> Y+0
                 _0x40040:
003fe4 91e0 0130 	LDS  R30,304
003fe6 72e0      	ANDI R30,LOW(0x20)
003fe7 f3e1      	BREQ _0x40040
                 ; 0002 00F4     UDR3=c;
003fe8 81e8      	LD   R30,Y
003fe9 93e0 0136 	STS  310,R30
                 ; 0002 00F5 }
                 _0x20E009A:
003feb 9621      	ADIW R28,1
003fec 9508      	RET
                 ;#pragma used-
                 ;
                 ;/*============================================================*/
                 ;void send_uart(char port,char *buffer)
                 ; 0002 00FA {
                 _send_uart:
                 ; 0002 00FB     char i = 0;
                 ; 0002 00FC 
                 ; 0002 00FD     switch (port)
003fed 93ba      	ST   -Y,R27
003fee 93aa      	ST   -Y,R26
003fef 931a      	ST   -Y,R17
                 ;	port -> Y+3
                 ;	*buffer -> Y+1
                 ;	i -> R17
003ff0 e010      	LDI  R17,0
003ff1 81eb      	LDD  R30,Y+3
003ff2 940e bcd7 	CALL SUBOPT_0x2B
                 ; 0002 00FE     {
                 ; 0002 00FF         case 0: puts(buffer);
003ff4 f429      	BRNE _0x40046
003ff5 81a9      	LDD  R26,Y+1
003ff6 81ba      	LDD  R27,Y+1+1
003ff7 940e b78b 	CALL _puts
                 ; 0002 0100                 break;
003ff9 c023      	RJMP _0x40045
                 ; 0002 0101 
                 ; 0002 0102         case 1: while(buffer[i] != 0)
                 _0x40046:
003ffa 30e1      	CPI  R30,LOW(0x1)
003ffb e0a0      	LDI  R26,HIGH(0x1)
003ffc 07fa      	CPC  R31,R26
003ffd f431      	BRNE _0x40047
                 _0x40048:
003ffe 940e bf37 	CALL SUBOPT_0x84
004000 f011      	BREQ _0x4004A
                 ; 0002 0103                 {
                 ; 0002 0104                     //putchar1(buffer[i]);
                 ; 0002 0105                     i++;
004001 5f1f      	SUBI R17,-1
                 ; 0002 0106                 }
004002 cffb      	RJMP _0x40048
                 _0x4004A:
                 ; 0002 0107                 break;
004003 c019      	RJMP _0x40045
                 ; 0002 0108 
                 ; 0002 0109         case 2: while(buffer[i] != 0)
                 _0x40047:
004004 30e2      	CPI  R30,LOW(0x2)
004005 e0a0      	LDI  R26,HIGH(0x2)
004006 07fa      	CPC  R31,R26
004007 f449      	BRNE _0x4004B
                 _0x4004C:
004008 940e bf37 	CALL SUBOPT_0x84
00400a f029      	BREQ _0x4004E
                 ; 0002 010A                 {
                 ; 0002 010B                     putchar2(buffer[i]);
00400b 940e bf3f 	CALL SUBOPT_0x85
00400d df97      	RCALL _putchar2
                 ; 0002 010C                     i++;
00400e 5f1f      	SUBI R17,-1
                 ; 0002 010D                 }
00400f cff8      	RJMP _0x4004C
                 _0x4004E:
                 ; 0002 010E                 break;
004010 c00c      	RJMP _0x40045
                 ; 0002 010F 
                 ; 0002 0110         case 3: while(buffer[i] != 0)
                 _0x4004B:
004011 30e3      	CPI  R30,LOW(0x3)
004012 e0a0      	LDI  R26,HIGH(0x3)
004013 07fa      	CPC  R31,R26
004014 f441      	BRNE _0x40045
                 _0x40050:
004015 940e bf37 	CALL SUBOPT_0x84
004017 f029      	BREQ _0x40052
                 ; 0002 0111                 {
                 ; 0002 0112                     putchar3(buffer[i]);
004018 940e bf3f 	CALL SUBOPT_0x85
00401a dfc8      	RCALL _putchar3
                 ; 0002 0113                     i++;
00401b 5f1f      	SUBI R17,-1
                 ; 0002 0114                 }
00401c cff8      	RJMP _0x40050
                 _0x40052:
                 ; 0002 0115                 break;
                 ; 0002 0116     }
                 _0x40045:
                 ; 0002 0117 }
00401d 8118      	LDD  R17,Y+0
00401e 940c 4347 	JMP  _0x20E0096
                 ;
                 ;/*============================================================*/
                 ;void init_uart(void)
                 ; 0002 011B {
                 _init_uart:
                 ; 0002 011C //    // USART0 initialization
                 ; 0002 011D //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 011E //    // USART0 Receiver: On
                 ; 0002 011F //    // USART0 Transmitter: On
                 ; 0002 0120 //    // USART0 Mode: Asynchronous
                 ; 0002 0121 //    // USART0 Baud Rate: 38400
                 ; 0002 0122 //    UCSR0A=0x00;
                 ; 0002 0123 //    UCSR0B=0x98;
                 ; 0002 0124 //    UCSR0C=0x06;
                 ; 0002 0125 //    UBRR0H=0x00;
                 ; 0002 0126 //    UBRR0L=0x0C;
                 ; 0002 0127 
                 ; 0002 0128     // USART0 initialization
                 ; 0002 0129     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 012A     // USART0 Receiver: On
                 ; 0002 012B     // USART0 Transmitter: On
                 ; 0002 012C     // USART0 Mode: Asynchronous
                 ; 0002 012D     // USART0 Baud Rate: 9600
                 ; 0002 012E     UCSR0A=0x00;
004020 e0e0      	LDI  R30,LOW(0)
004021 93e0 00c0 	STS  192,R30
                 ; 0002 012F     UCSR0B=0x98;
004023 e9e8      	LDI  R30,LOW(152)
004024 93e0 00c1 	STS  193,R30
                 ; 0002 0130     UCSR0C=0x06;
004026 e0e6      	LDI  R30,LOW(6)
004027 93e0 00c2 	STS  194,R30
                 ; 0002 0131     UBRR0H=0x00;
004029 e0e0      	LDI  R30,LOW(0)
00402a 93e0 00c5 	STS  197,R30
                 ; 0002 0132     UBRR0L=0x33;
00402c e3e3      	LDI  R30,LOW(51)
00402d 93e0 00c4 	STS  196,R30
                 ; 0002 0133 
                 ; 0002 0134     // USART1 initialization
                 ; 0002 0135     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0136     // USART1 Receiver: On
                 ; 0002 0137     // USART1 Transmitter: On
                 ; 0002 0138     // USART1 Mode: Asynchronous
                 ; 0002 0139     // USART1 Baud Rate: 38400
                 ; 0002 013A     UCSR1A=0x00;
00402f e0e0      	LDI  R30,LOW(0)
004030 93e0 00c8 	STS  200,R30
                 ; 0002 013B     UCSR1B=0x98;
004032 e9e8      	LDI  R30,LOW(152)
004033 93e0 00c9 	STS  201,R30
                 ; 0002 013C     UCSR1C=0x06;
004035 e0e6      	LDI  R30,LOW(6)
004036 93e0 00ca 	STS  202,R30
                 ; 0002 013D     UBRR1H=0x00;
004038 e0e0      	LDI  R30,LOW(0)
004039 93e0 00cd 	STS  205,R30
                 ; 0002 013E     UBRR1L=0x0C;
00403b e0ec      	LDI  R30,LOW(12)
00403c 93e0 00cc 	STS  204,R30
                 ; 0002 013F 
                 ; 0002 0140 //    // USART2 initialization
                 ; 0002 0141 //    // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 0142 //    // USART2 Receiver: On
                 ; 0002 0143 //    // USART2 Transmitter: On
                 ; 0002 0144 //    // USART2 Mode: Asynchronous
                 ; 0002 0145 //    // USART2 Baud Rate: 115200 (Double Speed Mode)
                 ; 0002 0146 //    UCSR2A=0x02;
                 ; 0002 0147 //    UCSR2B=0x98;
                 ; 0002 0148 //    UCSR2C=0x06;
                 ; 0002 0149 //    UBRR2H=0x00;
                 ; 0002 014A //    UBRR2L=0x08;
                 ; 0002 014B 
                 ; 0002 014C     // USART2 initialization
                 ; 0002 014D     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 014E     // USART2 Receiver: On
                 ; 0002 014F     // USART2 Transmitter: On
                 ; 0002 0150     // USART2 Mode: Asynchronous
                 ; 0002 0151     // USART2 Baud Rate: 38400
                 ; 0002 0152     UCSR2A=0x00;
00403e e0e0      	LDI  R30,LOW(0)
00403f 93e0 00d0 	STS  208,R30
                 ; 0002 0153     UCSR2B=0x98;
004041 e9e8      	LDI  R30,LOW(152)
004042 93e0 00d1 	STS  209,R30
                 ; 0002 0154     UCSR2C=0x06;
004044 e0e6      	LDI  R30,LOW(6)
004045 93e0 00d2 	STS  210,R30
                 ; 0002 0155     UBRR2H=0x00;
004047 e0e0      	LDI  R30,LOW(0)
004048 93e0 00d5 	STS  213,R30
                 ; 0002 0156     UBRR2L=0x0C;
00404a e0ec      	LDI  R30,LOW(12)
00404b 93e0 00d4 	STS  212,R30
                 ; 0002 0157 
                 ; 0002 0158     // USART3 initialization
                 ; 0002 0159     // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0002 015A     // USART3 Receiver: On
                 ; 0002 015B     // USART3 Transmitter: On
                 ; 0002 015C     // USART3 Mode: Asynchronous
                 ; 0002 015D     // USART3 Baud Rate: 38400
                 ; 0002 015E     UCSR3A=0x00;
00404d e0e0      	LDI  R30,LOW(0)
00404e 93e0 0130 	STS  304,R30
                 ; 0002 015F     UCSR3B=0x98;
004050 e9e8      	LDI  R30,LOW(152)
004051 93e0 0131 	STS  305,R30
                 ; 0002 0160     UCSR3C=0x06;
004053 e0e6      	LDI  R30,LOW(6)
004054 93e0 0132 	STS  306,R30
                 ; 0002 0161     UBRR3H=0x00;
004056 e0e0      	LDI  R30,LOW(0)
004057 93e0 0135 	STS  309,R30
                 ; 0002 0162     UBRR3L=0x0C;
004059 e0ec      	LDI  R30,LOW(12)
00405a 93e0 0134 	STS  308,R30
                 ; 0002 0163 }
00405c 9508      	RET
                 ;
                 ;/*============================================================*/
                 ;
                 ;#include "timer.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "adc.h"
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;#include "memcard.h"
                 ;
                 ;TIMER       baseCounter         = 0;    // -- increase continually by 1 second timer. use for timer comparison -- //
                 ;bit         timer_1sec_flag     = 0;    // -- 1 second trigger flag for main loop -- //
                 ;
                 ;bit         buzzer_on           = 0;    // -- buzzer control [0:1] => [on:off] -- //
                 ;
                 ;/**************************************************************/
                 ;/******************* Software Timer Support *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;TIMER TIMER_checkTimeLeft(TIMER time)
                 ; 0003 0012 {
                 
                 	.CSEG
                 ; 0003 0013     if(baseCounter < time){
                 ;	time -> Y+0
                 ; 0003 0014         return ( time - baseCounter );
                 ; 0003 0015     }
                 ; 0003 0016     else{
                 ; 0003 0017         return 0;
                 ; 0003 0018     }
                 ; 0003 0019 }
                 ;/*============================================================*/
                 ;int TIMER_checkTimerExceed(TIMER keeper)
                 ; 0003 001C {
                 _TIMER_checkTimerExceed:
                 ; 0003 001D     if(keeper == 0){
00405d 940e bf46 	CALL SUBOPT_0x86
                 ;	keeper -> Y+0
00405f f421      	BRNE _0x60005
                 ; 0003 001E         return -1;
004060 efef      	LDI  R30,LOW(65535)
004061 efff      	LDI  R31,HIGH(65535)
004062 940c 4347 	JMP  _0x20E0096
                 ; 0003 001F     }
                 ; 0003 0020 
                 ; 0003 0021     if((unsigned long int)baseCounter < (unsigned long int)keeper){
                 _0x60005:
004064 940e bf4d 	CALL SUBOPT_0x87
004066 940e bf50 	CALL SUBOPT_0x88
004068 940e da94 	CALL __CPD21
00406a f420      	BRSH _0x60006
                 ; 0003 0022         return 0;
00406b e0e0      	LDI  R30,LOW(0)
00406c e0f0      	LDI  R31,HIGH(0)
00406d 940c 4347 	JMP  _0x20E0096
                 ; 0003 0023     }
                 ; 0003 0024     else{                             // -- time exceed -- //
                 _0x60006:
                 ; 0003 0025         return 1;
00406f e0e1      	LDI  R30,LOW(1)
004070 e0f0      	LDI  R31,HIGH(1)
004071 940c 4347 	JMP  _0x20E0096
                 ; 0003 0026     }
                 ; 0003 0027 }
                 ;/*============================================================*/
                 ;int TIMER_setTimer(TIMER *keeper, unsigned long int period)
                 ; 0003 002A {
                 _TIMER_setTimer:
                 ; 0003 002B     unsigned long int t;
                 ; 0003 002C 
                 ; 0003 002D     if(period == 0){
004073 940e da2e 	CALL __PUTPARD2
004075 9724      	SBIW R28,4
                 ;	*keeper -> Y+8
                 ;	period -> Y+4
                 ;	t -> Y+0
004076 940e bf59 	CALL SUBOPT_0x89
004078 940e da7d 	CALL __CPD10
00407a f479      	BRNE _0x60008
                 ; 0003 002E         printDebug("<TIMER_setTimer> ERR: period = 0\r\n");
                +
00407b ede8     +LDI R30 , LOW ( 2 * _0x60000 + ( 0 ) )
00407c e1f0     +LDI R31 , HIGH ( 2 * _0x60000 + ( 0 ) )
00407d e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 0 ) )
00407e e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 0 ) )
                 	__POINTD1FN _0x60000,0
00407f 940e bbba 	CALL SUBOPT_0x3
                 ; 0003 002F         *keeper = 0xFFFFFFFF;
004081 85a8      	LDD  R26,Y+8
004082 85b9      	LDD  R27,Y+8+1
004083 940e bca6 	CALL SUBOPT_0x24
004085 940e d9ff 	CALL __PUTDP1
                 ; 0003 0030         return -1;
004087 efef      	LDI  R30,LOW(65535)
004088 efff      	LDI  R31,HIGH(65535)
004089 c02a      	RJMP _0x20E0099
                 ; 0003 0031     }
                 ; 0003 0032 
                 ; 0003 0033     t = baseCounter + period;
                 _0x60008:
00408a 940e bf59 	CALL SUBOPT_0x89
00408c 940e bf50 	CALL SUBOPT_0x88
00408e 940e bf5e 	CALL SUBOPT_0x8A
                 ; 0003 0034 
                 ; 0003 0035     *keeper = t;
004090 940e bf4d 	CALL SUBOPT_0x87
004092 85a8      	LDD  R26,Y+8
004093 85b9      	LDD  R27,Y+8+1
004094 940e d9ff 	CALL __PUTDP1
                 ; 0003 0036 
                 ; 0003 0037     if(t <= baseCounter){
004096 940e bf63 	CALL SUBOPT_0x8B
004098 940e bf6c 	CALL SUBOPT_0x8C
00409a 940e da8f 	CALL __CPD12
00409c f0a8      	BRLO _0x60009
                 ; 0003 0038         printDebug("<TIMER_setTimer> baseCounter[%ld] + period[%ld] = %ld OVERFLOW!!\r\n",baseCounter,period,t);
                +
00409d efeb     +LDI R30 , LOW ( 2 * _0x60000 + ( 35 ) )
00409e e1f0     +LDI R31 , HIGH ( 2 * _0x60000 + ( 35 ) )
00409f e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 35 ) )
0040a0 e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 35 ) )
                 	__POINTD1FN _0x60000,35
0040a1 940e da29 	CALL __PUTPARD1
0040a3 940e bf63 	CALL SUBOPT_0x8B
0040a5 940e bf6f 	CALL SUBOPT_0x8D
0040a7 940e bf6f 	CALL SUBOPT_0x8D
0040a9 940e bf76 	CALL SUBOPT_0x8E
                 ; 0003 0039         *keeper = 0;
0040ab 85a8      	LDD  R26,Y+8
0040ac 85b9      	LDD  R27,Y+8+1
0040ad 940e bf79 	CALL SUBOPT_0x8F
                 ; 0003 003A         return -1;
0040af efef      	LDI  R30,LOW(65535)
0040b0 efff      	LDI  R31,HIGH(65535)
0040b1 c002      	RJMP _0x20E0099
                 ; 0003 003B     }
                 ; 0003 003C     else{
                 _0x60009:
                 ; 0003 003D         return 0;
0040b2 e0e0      	LDI  R30,LOW(0)
0040b3 e0f0      	LDI  R31,HIGH(0)
                 ; 0003 003E     }
                 ; 0003 003F }
                 _0x20E0099:
0040b4 962a      	ADIW R28,10
0040b5 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************** Hardware Support **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;// Watchdog timeout interrupt service routine
                 ;interrupt [WDT] void wdt_timeout_isr(void)
                 ; 0003 0048 {
                 _wdt_timeout_isr:
0040b6 940e bf80 	CALL SUBOPT_0x90
                 ; 0003 0049     // Place your code here
                 ; 0003 004A     printDebug("<WDT> WatchDog Timer Reset!!\r\n");
                +
0040b8 e3ee     +LDI R30 , LOW ( 2 * _0x60000 + ( 102 ) )
0040b9 e1f1     +LDI R31 , HIGH ( 2 * _0x60000 + ( 102 ) )
0040ba e060     +LDI R22 , BYTE3 ( 2 * _0x60000 + ( 102 ) )
0040bb e070     +LDI R23 , BYTE4 ( 2 * _0x60000 + ( 102 ) )
                 	__POINTD1FN _0x60000,102
0040bc 940e bbba 	CALL SUBOPT_0x3
                 ; 0003 004B     return;
0040be c00f      	RJMP _0x6002A
                 ; 0003 004C }
                 ;/*============================================================*/
                 ;// Timer 0 overflow interrupt service routine
                 ;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
                 ; 0003 0050 {
                 _timer0_ovf_isr:
0040bf 93ea      	ST   -Y,R30
                 ; 0003 0051     // Reinitialize Timer 0 value
                 ; 0003 0052     TCNT0=0x64;
0040c0 e6e4      	LDI  R30,LOW(100)
0040c1 bde6      	OUT  0x26,R30
                 ; 0003 0053     // Place your code here
                 ; 0003 0054 
                 ; 0003 0055 }
0040c2 c04a      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine
                 ;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
                 ; 0003 0059 {
                 _timer1_ovf_isr:
0040c3 93ea      	ST   -Y,R30
                 ; 0003 005A     // Reinitialize Timer1 value
                 ; 0003 005B //    TCNT1H=0xFF64 >> 8;
                 ; 0003 005C //    TCNT1L=0xFF64 & 0xff;
                 ; 0003 005D     TCNT1H=0xFE79 >> 8;
0040c4 940e bf92 	CALL SUBOPT_0x91
                 ; 0003 005E     TCNT1L=0xFE79 & 0xff;
                 ; 0003 005F 
                 ; 0003 0060     //adc_sampling();
                 ; 0003 0061 }
0040c6 c046      	RJMP _0x60029
                 ;/*============================================================*/
                 ;// Timer2 overflow interrupt service routine    (100Hz)
                 ;interrupt [TIM2_OVF] void timer2_ovf_isr(void)
                 ; 0003 0065 {
                 _timer2_ovf_isr:
0040c7 940e bf80 	CALL SUBOPT_0x90
                 ; 0003 0066     // Reinitialize Timer2 value
                 ; 0003 0067     TCNT2=0xb2;
0040c9 ebe2      	LDI  R30,LOW(178)
0040ca 93e0 00b2 	STS  178,R30
                 ; 0003 0068 
                 ; 0003 0069     /* card access low level timing function */
                 ; 0003 006A     disk_timerproc();
0040cc 940e a62b 	CALL _disk_timerproc
                 ; 0003 006B 
                 ; 0003 006C }
                 _0x6002A:
0040ce 91e9      	LD   R30,Y+
0040cf bfef      	OUT  SREG,R30
0040d0 91e9      	LD   R30,Y+
0040d1 bfec      	OUT  EIND,R30
0040d2 91e9      	LD   R30,Y+
0040d3 bfeb      	OUT  RAMPZ,R30
0040d4 91f9      	LD   R31,Y+
0040d5 91e9      	LD   R30,Y+
0040d6 91b9      	LD   R27,Y+
0040d7 91a9      	LD   R26,Y+
0040d8 9199      	LD   R25,Y+
0040d9 9189      	LD   R24,Y+
0040da 9179      	LD   R23,Y+
0040db 9169      	LD   R22,Y+
0040dc 90f9      	LD   R15,Y+
0040dd 9019      	LD   R1,Y+
0040de 9009      	LD   R0,Y+
0040df 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer1 overflow interrupt service routine  (1 second)
                 ;interrupt [TIM3_OVF] void timer3_ovf_isr(void)
                 ; 0003 0070 {
                 _timer3_ovf_isr:
0040e0 936a      	ST   -Y,R22
0040e1 937a      	ST   -Y,R23
0040e2 93aa      	ST   -Y,R26
0040e3 93ba      	ST   -Y,R27
0040e4 93ea      	ST   -Y,R30
0040e5 93fa      	ST   -Y,R31
0040e6 b7ef      	IN   R30,SREG
0040e7 93ea      	ST   -Y,R30
                 ; 0003 0071     // Reinitialize Timer1 value
                 ; 0003 0072     TCNT3H=0x85ED >> 8;
0040e8 940e bf99 	CALL SUBOPT_0x92
                 ; 0003 0073     TCNT3L=0x85ED & 0xff;
                 ; 0003 0074 
                 ; 0003 0075     // Place your code here
                 ; 0003 0076     timer_1sec_flag = 1;
0040ea 9af2      	SBI  0x1E,2
                 ; 0003 0077 
                 ; 0003 0078     baseCounter++;
0040eb e7a7      	LDI  R26,LOW(_baseCounter)
0040ec e1b3      	LDI  R27,HIGH(_baseCounter)
0040ed 940e bfa0 	CALL SUBOPT_0x93
                 ; 0003 0079 
                 ; 0003 007A     raw_rtc++;                          // -- update backup RTC
0040ef e3a0      	LDI  R26,LOW(_raw_rtc)
0040f0 e1b4      	LDI  R27,HIGH(_raw_rtc)
0040f1 940e bfa0 	CALL SUBOPT_0x93
                 ; 0003 007B 
                 ; 0003 007C     //printDebug("<%d>\r\n",baseCounter);
                 ; 0003 007D }
0040f3 91e9      	LD   R30,Y+
0040f4 bfef      	OUT  SREG,R30
0040f5 91f9      	LD   R31,Y+
0040f6 91e9      	LD   R30,Y+
0040f7 91b9      	LD   R27,Y+
0040f8 91a9      	LD   R26,Y+
0040f9 9179      	LD   R23,Y+
0040fa 9169      	LD   R22,Y+
0040fb 9518      	RETI
                 ;/*============================================================*/
                 ;// Timer4 overflow interrupt service routine (0.5 sec)
                 ;interrupt [TIM4_OVF] void timer4_ovf_isr(void)
                 ; 0003 0081 {
                 _timer4_ovf_isr:
0040fc 93ea      	ST   -Y,R30
                 ; 0003 0082     static bit toggle = 0;
                 ; 0003 0083     // Reinitialize Timer4 value
                 ; 0003 0084     TCNT4H=0x85ED >> 8;
0040fd 940e bfa9 	CALL SUBOPT_0x94
                 ; 0003 0085     TCNT4L=0x85ED & 0xff;
                 ; 0003 0086 
                 ; 0003 0087     // Place your code here
                 ; 0003 0088     toggle = !toggle;
0040ff 9bf4      	SBIS 0x1E,4
004100 c002      	RJMP _0x6000D
004101 98f4      	CBI  0x1E,4
004102 c001      	RJMP _0x6000E
                 _0x6000D:
004103 9af4      	SBI  0x1E,4
                 _0x6000E:
                 ; 0003 0089 
                 ; 0003 008A     if(buzzer_on){
004104 9bf3      	SBIS 0x1E,3
004105 c006      	RJMP _0x6000F
                 ; 0003 008B         if(toggle)  {   BUZZER = 1; }
004106 9bf4      	SBIS 0x1E,4
004107 c002      	RJMP _0x60010
004108 9a77      	SBI  0xE,7
                 ; 0003 008C         else        {   BUZZER = 0; }
004109 c001      	RJMP _0x60013
                 _0x60010:
00410a 9877      	CBI  0xE,7
                 _0x60013:
                 ; 0003 008D     }
                 ; 0003 008E     else{
00410b c001      	RJMP _0x60016
                 _0x6000F:
                 ; 0003 008F         BUZZER = 0;
00410c 9877      	CBI  0xE,7
                 ; 0003 0090     }
                 _0x60016:
                 ; 0003 0091 
                 ; 0003 0092 }
                 _0x60029:
00410d 91e9      	LD   R30,Y+
00410e 9518      	RETI
                 ;/*============================================================*/
                 ;void init_timer(void)
                 ; 0003 0095 {
                 _init_timer:
                 ; 0003 0096 
                 ; 0003 0097     // Timer/Counter 0 initialization
                 ; 0003 0098     // Clock source: System Clock
                 ; 0003 0099     // Clock value: 7.813 kHz
                 ; 0003 009A     // Mode: Normal top=0xFF
                 ; 0003 009B     // OC0A output: Disconnected
                 ; 0003 009C     // OC0B output: Disconnected
                 ; 0003 009D     TCCR0A=0x00;
00410f e0e0      	LDI  R30,LOW(0)
004110 bde4      	OUT  0x24,R30
                 ; 0003 009E     TCCR0B=0x05;
004111 e0e5      	LDI  R30,LOW(5)
004112 bde5      	OUT  0x25,R30
                 ; 0003 009F     TCNT0=0x64;
004113 e6e4      	LDI  R30,LOW(100)
004114 bde6      	OUT  0x26,R30
                 ; 0003 00A0     OCR0A=0x00;
004115 e0e0      	LDI  R30,LOW(0)
004116 bde7      	OUT  0x27,R30
                 ; 0003 00A1     OCR0B=0x00;
004117 bde8      	OUT  0x28,R30
                 ; 0003 00A2 
                 ; 0003 00A3     // Timer/Counter 1 initialization
                 ; 0003 00A4     // Clock source: System Clock
                 ; 0003 00A5     // Clock value: 7.813 kHz
                 ; 0003 00A6     // Mode: Normal top=0xFFFF
                 ; 0003 00A7     // OC1A output: Discon.
                 ; 0003 00A8     // OC1B output: Discon.
                 ; 0003 00A9     // OC1C output: Discon.
                 ; 0003 00AA     // Noise Canceler: Off
                 ; 0003 00AB     // Input Capture on Falling Edge
                 ; 0003 00AC     // Timer1 Overflow Interrupt: On
                 ; 0003 00AD     // Input Capture Interrupt: Off
                 ; 0003 00AE     // Compare A Match Interrupt: Off
                 ; 0003 00AF     // Compare B Match Interrupt: Off
                 ; 0003 00B0     // Compare C Match Interrupt: Off
                 ; 0003 00B1     TCCR1A=0x00;
004118 93e0 0080 	STS  128,R30
                 ; 0003 00B2     TCCR1B=0x05;
00411a e0e5      	LDI  R30,LOW(5)
00411b 93e0 0081 	STS  129,R30
                 ; 0003 00B3     //TCNT1H=0xFF;
                 ; 0003 00B4     //TCNT1L=0x64;
                 ; 0003 00B5     TCNT1H=0xFE;
00411d 940e bf92 	CALL SUBOPT_0x91
                 ; 0003 00B6     TCNT1L=0x79;
                 ; 0003 00B7     ICR1H=0x00;
00411f e0e0      	LDI  R30,LOW(0)
004120 93e0 0087 	STS  135,R30
                 ; 0003 00B8     ICR1L=0x00;
004122 93e0 0086 	STS  134,R30
                 ; 0003 00B9     OCR1AH=0x00;
004124 93e0 0089 	STS  137,R30
                 ; 0003 00BA     OCR1AL=0x00;
004126 93e0 0088 	STS  136,R30
                 ; 0003 00BB     OCR1BH=0x00;
004128 93e0 008b 	STS  139,R30
                 ; 0003 00BC     OCR1BL=0x00;
00412a 93e0 008a 	STS  138,R30
                 ; 0003 00BD     OCR1CH=0x00;
00412c 93e0 008d 	STS  141,R30
                 ; 0003 00BE     OCR1CL=0x00;
00412e 93e0 008c 	STS  140,R30
                 ; 0003 00BF 
                 ; 0003 00C0     // Timer/Counter 2 initialization
                 ; 0003 00C1     // Clock source: System Clock
                 ; 0003 00C2     // Clock value: 7.813 kHz
                 ; 0003 00C3     // Mode: Normal top=0xFF
                 ; 0003 00C4     // OC2A output: Disconnected
                 ; 0003 00C5     // OC2B output: Disconnected
                 ; 0003 00C6     ASSR=0x00;
004130 93e0 00b6 	STS  182,R30
                 ; 0003 00C7     TCCR2A=0x00;
004132 93e0 00b0 	STS  176,R30
                 ; 0003 00C8     TCCR2B=0x07;
004134 e0e7      	LDI  R30,LOW(7)
004135 93e0 00b1 	STS  177,R30
                 ; 0003 00C9     TCNT2=0xb2;
004137 ebe2      	LDI  R30,LOW(178)
004138 93e0 00b2 	STS  178,R30
                 ; 0003 00CA     OCR2A=0x00;
00413a e0e0      	LDI  R30,LOW(0)
00413b 93e0 00b3 	STS  179,R30
                 ; 0003 00CB     OCR2B=0x00;
00413d 93e0 00b4 	STS  180,R30
                 ; 0003 00CC 
                 ; 0003 00CD     // Timer/Counter 3 initialization
                 ; 0003 00CE     // Clock source: System Clock
                 ; 0003 00CF     // Clock value: 31.250 kHz
                 ; 0003 00D0     // Mode: Normal top=0xFFFF
                 ; 0003 00D1     // OC3A output: Discon.
                 ; 0003 00D2     // OC3B output: Discon.
                 ; 0003 00D3     // OC3C output: Discon.
                 ; 0003 00D4     // Noise Canceler: Off
                 ; 0003 00D5     // Input Capture on Falling Edge
                 ; 0003 00D6     // Timer3 Overflow Interrupt: On
                 ; 0003 00D7     // Input Capture Interrupt: Off
                 ; 0003 00D8     // Compare A Match Interrupt: Off
                 ; 0003 00D9     // Compare B Match Interrupt: Off
                 ; 0003 00DA     // Compare C Match Interrupt: Off
                 ; 0003 00DB     TCCR3A=0x00;
00413f 93e0 0090 	STS  144,R30
                 ; 0003 00DC     TCCR3B=0x04;
004141 e0e4      	LDI  R30,LOW(4)
004142 93e0 0091 	STS  145,R30
                 ; 0003 00DD     TCNT3H=0x85;
004144 940e bf99 	CALL SUBOPT_0x92
                 ; 0003 00DE     TCNT3L=0xED;
                 ; 0003 00DF     ICR3H=0x00;
004146 e0e0      	LDI  R30,LOW(0)
004147 93e0 0097 	STS  151,R30
                 ; 0003 00E0     ICR3L=0x00;
004149 93e0 0096 	STS  150,R30
                 ; 0003 00E1     OCR3AH=0x00;
00414b 93e0 0099 	STS  153,R30
                 ; 0003 00E2     OCR3AL=0x00;
00414d 93e0 0098 	STS  152,R30
                 ; 0003 00E3     OCR3BH=0x00;
00414f 93e0 009b 	STS  155,R30
                 ; 0003 00E4     OCR3BL=0x00;
004151 93e0 009a 	STS  154,R30
                 ; 0003 00E5     OCR3CH=0x00;
004153 93e0 009d 	STS  157,R30
                 ; 0003 00E6     OCR3CL=0x00;
004155 93e0 009c 	STS  156,R30
                 ; 0003 00E7 
                 ; 0003 00E8     // Timer/Counter 4 initialization
                 ; 0003 00E9     // Clock source: System Clock
                 ; 0003 00EA     // Clock value: 125.000 kHz
                 ; 0003 00EB     // Mode: Normal top=0xFFFF
                 ; 0003 00EC     // OC4A output: Discon.
                 ; 0003 00ED     // OC4B output: Discon.
                 ; 0003 00EE     // OC4C output: Discon.
                 ; 0003 00EF     // Noise Canceler: Off
                 ; 0003 00F0     // Input Capture on Falling Edge
                 ; 0003 00F1     // Timer4 Overflow Interrupt: On
                 ; 0003 00F2     // Input Capture Interrupt: Off
                 ; 0003 00F3     // Compare A Match Interrupt: Off
                 ; 0003 00F4     // Compare B Match Interrupt: Off
                 ; 0003 00F5     // Compare C Match Interrupt: Off
                 ; 0003 00F6     TCCR4A=0x00;
004157 93e0 00a0 	STS  160,R30
                 ; 0003 00F7     TCCR4B=0x03;
004159 e0e3      	LDI  R30,LOW(3)
00415a 93e0 00a1 	STS  161,R30
                 ; 0003 00F8     TCNT4H=0x85;
00415c 940e bfa9 	CALL SUBOPT_0x94
                 ; 0003 00F9     TCNT4L=0xED;
                 ; 0003 00FA     ICR4H=0x00;
00415e e0e0      	LDI  R30,LOW(0)
00415f 93e0 00a7 	STS  167,R30
                 ; 0003 00FB     ICR4L=0x00;
004161 93e0 00a6 	STS  166,R30
                 ; 0003 00FC     OCR4AH=0x00;
004163 93e0 00a9 	STS  169,R30
                 ; 0003 00FD     OCR4AL=0x00;
004165 93e0 00a8 	STS  168,R30
                 ; 0003 00FE     OCR4BH=0x00;
004167 93e0 00ab 	STS  171,R30
                 ; 0003 00FF     OCR4BL=0x00;
004169 93e0 00aa 	STS  170,R30
                 ; 0003 0100     OCR4CH=0x00;
00416b 93e0 00ad 	STS  173,R30
                 ; 0003 0101     OCR4CL=0x00;
00416d 93e0 00ac 	STS  172,R30
                 ; 0003 0102 
                 ; 0003 0103     // Timer/Counter 5 initialization
                 ; 0003 0104     // Clock source: System Clock
                 ; 0003 0105     // Clock value: Timer5 Stopped
                 ; 0003 0106     // Mode: Normal top=0xFFFF
                 ; 0003 0107     // OC5A output: Discon.
                 ; 0003 0108     // OC5B output: Discon.
                 ; 0003 0109     // OC5C output: Discon.
                 ; 0003 010A     // Noise Canceler: Off
                 ; 0003 010B     // Input Capture on Falling Edge
                 ; 0003 010C     // Timer5 Overflow Interrupt: Off
                 ; 0003 010D     // Input Capture Interrupt: Off
                 ; 0003 010E     // Compare A Match Interrupt: Off
                 ; 0003 010F     // Compare B Match Interrupt: Off
                 ; 0003 0110     // Compare C Match Interrupt: Off
                 ; 0003 0111     TCCR5A=0x00;
00416f 93e0 0120 	STS  288,R30
                 ; 0003 0112     TCCR5B=0x00;
004171 93e0 0121 	STS  289,R30
                 ; 0003 0113     TCNT5H=0x00;
004173 93e0 0125 	STS  293,R30
                 ; 0003 0114     TCNT5L=0x00;
004175 93e0 0124 	STS  292,R30
                 ; 0003 0115     ICR5H=0x00;
004177 93e0 0127 	STS  295,R30
                 ; 0003 0116     ICR5L=0x00;
004179 93e0 0126 	STS  294,R30
                 ; 0003 0117     OCR5AH=0x00;
00417b 93e0 0129 	STS  297,R30
                 ; 0003 0118     OCR5AL=0x00;
00417d 93e0 0128 	STS  296,R30
                 ; 0003 0119     OCR5BH=0x00;
00417f 93e0 012b 	STS  299,R30
                 ; 0003 011A     OCR5BL=0x00;
004181 93e0 012a 	STS  298,R30
                 ; 0003 011B     OCR5CH=0x00;
004183 93e0 012d 	STS  301,R30
                 ; 0003 011C     OCR5CL=0x00;
004185 93e0 012c 	STS  300,R30
                 ; 0003 011D 
                 ; 0003 011E     // Watchdog Timer initialization
                 ; 0003 011F     // Watchdog Timer Prescaler: OSC/1024k
                 ; 0003 0120     // Watchdog Timer interrupt: On
                 ; 0003 0121     #pragma optsize-
                 ; 0003 0122     #asm("wdr")
004187 95a8      	wdr
                 ; 0003 0123     WDTCSR=0x79;
004188 e7e9      	LDI  R30,LOW(121)
004189 93e0 0060 	STS  96,R30
                 ; 0003 0124     WDTCSR=0x69;
00418b e6e9      	LDI  R30,LOW(105)
00418c 93e0 0060 	STS  96,R30
                 ; 0003 0125 
                 ; 0003 0126     #ifdef _OPTIMIZE_SIZE_
                 ; 0003 0127     #pragma optsize+
                 ; 0003 0128     #endif
                 ; 0003 0129 
                 ; 0003 012A 
                 ; 0003 012B     // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 012C     TIMSK0=0x00;
00418e e0e0      	LDI  R30,LOW(0)
00418f 93e0 006e 	STS  110,R30
                 ; 0003 012D 
                 ; 0003 012E     // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 012F     TIMSK1=0x00;
004191 93e0 006f 	STS  111,R30
                 ; 0003 0130 
                 ; 0003 0131     // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0132     TIMSK2=0x00;
004193 93e0 0070 	STS  112,R30
                 ; 0003 0133 
                 ; 0003 0134     // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0135     TIMSK3=0x00;
004195 93e0 0071 	STS  113,R30
                 ; 0003 0136 
                 ; 0003 0137     // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 0138     TIMSK4=0x00;
004197 93e0 0072 	STS  114,R30
                 ; 0003 0139 
                 ; 0003 013A     // Timer/Counter 5 Interrupt(s) initialization
                 ; 0003 013B     TIMSK5=0x00;
004199 93e0 0073 	STS  115,R30
                 ; 0003 013C }
00419b 9508      	RET
                 ;/*============================================================*/
                 ;void enable_interrupt(int ch)
                 ; 0003 013F {
                 _enable_interrupt:
                 ; 0003 0140 
                 ; 0003 0141     // -------------- enable timer ---------------  //
                 ; 0003 0142 
                 ; 0003 0143     switch(ch){
00419c 940e bfb0 	CALL SUBOPT_0x95
                 ;	ch -> Y+0
                 ; 0003 0144         case 0: // Timer/Counter 0 Interrupt(s) initialization
00419e 9730      	SBIW R30,0
00419f f0f9      	BREQ _0x6001B
                 ; 0003 0145                 //TIMSK0=0x01;
                 ; 0003 0146                 break;
                 ; 0003 0147         case 1: // Timer/Counter 1 Interrupt(s) initialization
0041a0 30e1      	CPI  R30,LOW(0x1)
0041a1 e0a0      	LDI  R26,HIGH(0x1)
0041a2 07fa      	CPC  R31,R26
0041a3 f421      	BRNE _0x6001D
                 ; 0003 0148                 TIMSK1=0x01;
0041a4 e0e1      	LDI  R30,LOW(1)
0041a5 93e0 006f 	STS  111,R30
                 ; 0003 0149                 break;
0041a7 c017      	RJMP _0x6001B
                 ; 0003 014A         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 _0x6001D:
0041a8 30e2      	CPI  R30,LOW(0x2)
0041a9 e0a0      	LDI  R26,HIGH(0x2)
0041aa 07fa      	CPC  R31,R26
0041ab f421      	BRNE _0x6001E
                 ; 0003 014B                 TIMSK2=0x01;
0041ac e0e1      	LDI  R30,LOW(1)
0041ad 93e0 0070 	STS  112,R30
                 ; 0003 014C                 break;
0041af c00f      	RJMP _0x6001B
                 ; 0003 014D         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 _0x6001E:
0041b0 30e3      	CPI  R30,LOW(0x3)
0041b1 e0a0      	LDI  R26,HIGH(0x3)
0041b2 07fa      	CPC  R31,R26
0041b3 f421      	BRNE _0x6001F
                 ; 0003 014E                 TIMSK3=0x01;
0041b4 e0e1      	LDI  R30,LOW(1)
0041b5 93e0 0071 	STS  113,R30
                 ; 0003 014F                 break;
0041b7 c007      	RJMP _0x6001B
                 ; 0003 0150         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 _0x6001F:
0041b8 30e4      	CPI  R30,LOW(0x4)
0041b9 e0a0      	LDI  R26,HIGH(0x4)
0041ba 07fa      	CPC  R31,R26
0041bb f419      	BRNE _0x6001B
                 ; 0003 0151                 TIMSK4=0x01;
0041bc e0e1      	LDI  R30,LOW(1)
0041bd 93e0 0072 	STS  114,R30
                 ; 0003 0152                 break;
                 ; 0003 0153     }
                 _0x6001B:
                 ; 0003 0154     // Global enable interrupts
                 ; 0003 0155     #asm("sei")
0041bf 9478      	sei
                 ; 0003 0156 }
0041c0 9622      	ADIW R28,2
0041c1 9508      	RET
                 ;/*============================================================*/
                 ;void disable_interrupt(int ch)
                 ; 0003 0159 {
                 ; 0003 015A 
                 ; 0003 015B     // -------------- enable timer ---------------  //
                 ; 0003 015C 
                 ; 0003 015D     switch(ch){
                 ;	ch -> Y+0
                 ; 0003 015E         case 0: // Timer/Counter 0 Interrupt(s) initialization
                 ; 0003 015F                 //TIMSK0=0x00;
                 ; 0003 0160                 break;
                 ; 0003 0161         case 1: // Timer/Counter 1 Interrupt(s) initialization
                 ; 0003 0162                 TIMSK1=0x00;
                 ; 0003 0163                 break;
                 ; 0003 0164         case 2: // Timer/Counter 2 Interrupt(s) initialization
                 ; 0003 0165                 TIMSK2=0x00;
                 ; 0003 0166                 break;
                 ; 0003 0167         case 3: // Timer/Counter 3 Interrupt(s) initialization
                 ; 0003 0168                 TIMSK3=0x00;
                 ; 0003 0169                 break;
                 ; 0003 016A         case 4: // Timer/Counter 4 Interrupt(s) initialization
                 ; 0003 016B                 TIMSK4=0x00;
                 ; 0003 016C                 break;
                 ; 0003 016D     }
                 ; 0003 016E     // Global enable interrupts
                 ; 0003 016F     #asm("sei")
                 ; 0003 0170 }
                 ;/*============================================================*/
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include "io.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char   d_out[USE_DOUT] = {0xFF,0xFF};
                 
                 	.DSEG
                 ;
                 ;/*============================================================*/
                 ;void init_io(void)
                 ; 0004 000A {
                 
                 	.CSEG
                 _init_io:
                 ; 0004 000B     // Input/Output Ports initialization
                 ; 0004 000C     // Port A initialization
                 ; 0004 000D     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=Out Func1=In Func0=In
                 ; 0004 000E     // State7=T State6=T State5=T State4=T State3=T State2=0 State1=T State0=T
                 ; 0004 000F     PORTA=0x00;
0041c2 e0e0      	LDI  R30,LOW(0)
0041c3 b9e2      	OUT  0x2,R30
                 ; 0004 0010     DDRA=0x04;
0041c4 e0e4      	LDI  R30,LOW(4)
0041c5 b9e1      	OUT  0x1,R30
                 ; 0004 0011 
                 ; 0004 0012     // Port B initialization
                 ; 0004 0013     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=In Func2=Out Func1=Out Func0=Out
                 ; 0004 0014     // State7=1 State6=1 State5=1 State4=1 State3=P State2=1 State1=1 State0=1
                 ; 0004 0015     PORTB=0xFF;
0041c6 efef      	LDI  R30,LOW(255)
0041c7 b9e5      	OUT  0x5,R30
                 ; 0004 0016     DDRB=0xF7;
0041c8 efe7      	LDI  R30,LOW(247)
0041c9 b9e4      	OUT  0x4,R30
                 ; 0004 0017 
                 ; 0004 0018     // Port C initialization
                 ; 0004 0019     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 001A     // State7=P State6=P State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 001B     PORTC=0xC0;
0041ca ece0      	LDI  R30,LOW(192)
0041cb b9e8      	OUT  0x8,R30
                 ; 0004 001C     DDRC=0x00;
0041cc e0e0      	LDI  R30,LOW(0)
0041cd b9e7      	OUT  0x7,R30
                 ; 0004 001D 
                 ; 0004 001E     // Port C initialization
                 ; 0004 001F     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0020     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0021     //PORTC=0x80;
                 ; 0004 0022     //DDRC=0x00;
                 ; 0004 0023 
                 ; 0004 0024     // Port D initialization
                 ; 0004 0025     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0026     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0027     PORTD=0x80;
0041ce e8e0      	LDI  R30,LOW(128)
0041cf b9eb      	OUT  0xB,R30
                 ; 0004 0028     DDRD=0x00;
0041d0 e0e0      	LDI  R30,LOW(0)
0041d1 b9ea      	OUT  0xA,R30
                 ; 0004 0029 
                 ; 0004 002A     // Port E initialization
                 ; 0004 002B     // Func7=Out Func6=Out Func5=Out Func4=Out Func3=Out Func2=Out Func1=In Func0=In
                 ; 0004 002C     // State7=1 State6=1 State5=1 State4=1 State3=1 State2=P State1=T State0=T
                 ; 0004 002D     PORTE=0xFC;
0041d2 efec      	LDI  R30,LOW(252)
0041d3 b9ee      	OUT  0xE,R30
                 ; 0004 002E     DDRE=0xFC;
0041d4 b9ed      	OUT  0xD,R30
                 ; 0004 002F 
                 ; 0004 0030     // Port F initialization
                 ; 0004 0031     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0032     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0033     PORTF=0x00;
0041d5 e0e0      	LDI  R30,LOW(0)
0041d6 bbe1      	OUT  0x11,R30
                 ; 0004 0034     DDRF=0x00;
0041d7 bbe0      	OUT  0x10,R30
                 ; 0004 0035 
                 ; 0004 0036     // Port G initialization
                 ; 0004 0037     // Func5=Out Func4=Out Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0038     // State5=1 State4=1 State3=T State2=T State1=T State0=T
                 ; 0004 0039     //PORTG=0x20;
                 ; 0004 003A     //DDRG=0x20;
                 ; 0004 003B     PORTG=0x30;
0041d8 e3e0      	LDI  R30,LOW(48)
0041d9 bbe4      	OUT  0x14,R30
                 ; 0004 003C     DDRG=0x30;
0041da bbe3      	OUT  0x13,R30
                 ; 0004 003D 
                 ; 0004 003E     // Port H initialization
                 ; 0004 003F     // Func7=In Func6=Out Func5=Out Func4=Out Func3=Out Func2=In Func1=In Func0=In
                 ; 0004 0040     // State7=P State6=1 State5=1 State4=1 State3=1 State2=T State1=T State0=T
                 ; 0004 0041     PORTH=0xF8;
0041db efe8      	LDI  R30,LOW(248)
0041dc 93e0 0102 	STS  258,R30
                 ; 0004 0042     DDRH=0xF8;
0041de 93e0 0101 	STS  257,R30
                 ; 0004 0043 
                 ; 0004 0044 //    // Port J initialization
                 ; 0004 0045 //    // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0046 //    // State7=P State6=P State5=P State4=P State3=P State2=P State1=T State0=T
                 ; 0004 0047 //    PORTJ=0xFC;
                 ; 0004 0048 //    DDRJ=0x00;
                 ; 0004 0049 
                 ; 0004 004A     // Port J initialization
                 ; 0004 004B     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 004C     // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 004D     PORTJ=0x80;
0041e0 e8e0      	LDI  R30,LOW(128)
0041e1 93e0 0105 	STS  261,R30
                 ; 0004 004E     DDRJ=0x00;
0041e3 e0e0      	LDI  R30,LOW(0)
0041e4 93e0 0104 	STS  260,R30
                 ; 0004 004F 
                 ; 0004 0050     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0041e6 940e bce8 	CALL SUBOPT_0x2E
0041e8 f021      	BREQ _0x80005
0041e9 940e bce8 	CALL SUBOPT_0x2E
0041eb 30e3      	CPI  R30,LOW(0x3)
0041ec f429      	BRNE _0x80004
                 _0x80005:
                 ; 0004 0051         // Port K initialization
                 ; 0004 0052         // Func7=In Func6=In Func5=In Func4=In Func3=Out Func2=Out Func1=Out Func0=In
                 ; 0004 0053         // State7=P State6=T State5=T State4=P State3=0 State2=0 State1=0 State0=T
                 ; 0004 0054         PORTK=0x90;
0041ed e9e0      	LDI  R30,LOW(144)
0041ee 93e0 0108 	STS  264,R30
                 ; 0004 0055         DDRK=0x0E;
0041f0 e0ee      	LDI  R30,LOW(14)
0041f1 c00b      	RJMP _0x8003D
                 ; 0004 0056     }
                 ; 0004 0057     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x80004:
0041f2 940e bfb5 	CALL SUBOPT_0x96
0041f4 f021      	BREQ _0x80009
0041f5 940e bce8 	CALL SUBOPT_0x2E
0041f7 30e2      	CPI  R30,LOW(0x2)
0041f8 f431      	BRNE _0x80008
                 _0x80009:
                 ; 0004 0058         // Port K initialization
                 ; 0004 0059         // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 005A         // State7=P State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 005B         PORTK=0x80;
0041f9 e8e0      	LDI  R30,LOW(128)
0041fa 93e0 0108 	STS  264,R30
                 ; 0004 005C         DDRK=0x00;
0041fc e0e0      	LDI  R30,LOW(0)
                 _0x8003D:
0041fd 93e0 0107 	STS  263,R30
                 ; 0004 005D     }
                 ; 0004 005E 
                 ; 0004 005F     // Port L initialization
                 ; 0004 0060     // Func7=In Func6=In Func5=In Func4=In Func3=In Func2=In Func1=In Func0=In
                 ; 0004 0061     // State7=T State6=T State5=T State4=T State3=T State2=T State1=T State0=T
                 ; 0004 0062     PORTL=0x00;
                 _0x80008:
0041ff e0e0      	LDI  R30,LOW(0)
004200 93e0 010b 	STS  267,R30
                 ; 0004 0063     DDRL=0x00;
004202 93e0 010a 	STS  266,R30
                 ; 0004 0064 
                 ; 0004 0065 }
004204 9508      	RET
                 ;/*============================================================*/
                 ;void IO_dout(int ch, char state)
                 ; 0004 0068 {
                 _IO_dout:
                 ; 0004 0069     switch(ch){
004205 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
004206 81e9      	LDD  R30,Y+1
004207 81fa      	LDD  R31,Y+1+1
                 ; 0004 006A         case 0  :   DOUT1       =   !state;
004208 9730      	SBIW R30,0
004209 f451      	BRNE _0x8000E
00420a 81e8      	LD   R30,Y
00420b 30e0      	CPI  R30,0
00420c f011      	BREQ _0x8000F
00420d 9873      	CBI  0xE,3
00420e c001      	RJMP _0x80010
                 _0x8000F:
00420f 9a73      	SBI  0xE,3
                 _0x80010:
                 ; 0004 006B                     d_out[0]    =   state;
004210 81e8      	LD   R30,Y
004211 93e0 1434 	STS  _d_out,R30
                 ; 0004 006C                     //printDebug("<IO_dout> dout0 %d\r\n",d_out[0]);
                 ; 0004 006D                     break;
004213 c00d      	RJMP _0x8000D
                 ; 0004 006E         case 1  :   DOUT2       =   !state;
                 _0x8000E:
004214 30e1      	CPI  R30,LOW(0x1)
004215 e0a0      	LDI  R26,HIGH(0x1)
004216 07fa      	CPC  R31,R26
004217 f449      	BRNE _0x80014
004218 81e8      	LD   R30,Y
004219 30e0      	CPI  R30,0
00421a f011      	BREQ _0x80012
00421b 9874      	CBI  0xE,4
00421c c001      	RJMP _0x80013
                 _0x80012:
00421d 9a74      	SBI  0xE,4
                 _0x80013:
                 ; 0004 006F                     d_out[1]    =   state;
00421e 81e8      	LD   R30,Y
                +
00421f 93e0 1435+STS _d_out + ( 1 ) , R30
                 	__PUTB1MN _d_out,1
                 ; 0004 0070                     //printDebug("<IO_dout> dout1 %d\r\n",d_out[1]);
                 ; 0004 0071                     break;
                 ; 0004 0072         default :   break;
                 _0x80014:
                 ; 0004 0073     }
                 _0x8000D:
                 ; 0004 0074 }
004221 c0f4      	RJMP _0x20E0097
                 ;/*============================================================*/
                 ;char IO_keyCheck(void)
                 ; 0004 0077 {
                 _IO_keyCheck:
                 ; 0004 0078     static char flag_hold_MODE   = 0;
                 ; 0004 0079     static char flag_hold_UP     = 0;
                 ; 0004 007A     static char flag_hold_DOWN   = 0;
                 ; 0004 007B     static char flag_hold_OK     = 0;
                 ; 0004 007C 
                 ; 0004 007D     if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
004222 940e bfc2 	CALL SUBOPT_0x97
004224 f421      	BRNE _0x80016
004225 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004227 30e0      	CPI  R30,0
004228 f009      	BREQ _0x80017
                 _0x80016:
004229 c00f      	RJMP _0x80015
                 _0x80017:
                 ; 0004 007E     {
                 ; 0004 007F         delay_ms(KEY_DELAY);
00422a 940e bfc9 	CALL SUBOPT_0x98
                 ; 0004 0080 
                 ; 0004 0081         if( KEY_PRESS_CHK_MODE && !flag_hold_MODE )
00422c 940e bfc2 	CALL SUBOPT_0x97
00422e f421      	BRNE _0x80019
00422f 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
004231 30e0      	CPI  R30,0
004232 f009      	BREQ _0x8001A
                 _0x80019:
004233 c004      	RJMP _0x80018
                 _0x8001A:
                 ; 0004 0082         {
                 ; 0004 0083             flag_hold_MODE = 1;
004234 e0e1      	LDI  R30,LOW(1)
004235 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 0084             return 0;
004237 c092      	RJMP _0x20E0098
                 ; 0004 0085         }
                 ; 0004 0086     }
                 _0x80018:
                 ; 0004 0087     else if( KEY_RELEASE_CHK_MODE && flag_hold_MODE)
004238 c013      	RJMP _0x8001B
                 _0x80015:
004239 940e bfc2 	CALL SUBOPT_0x97
00423b f021      	BREQ _0x8001D
00423c 91e0 14e4 	LDS  R30,_flag_hold_MODE_S0040002000
00423e 30e0      	CPI  R30,0
00423f f409      	BRNE _0x8001E
                 _0x8001D:
004240 c00b      	RJMP _0x8001C
                 _0x8001E:
                 ; 0004 0088     {
                 ; 0004 0089         printDebug("<IO_keyCheck> key MODE\r\n");
                +
004241 e6e0     +LDI R30 , LOW ( 2 * _0x80000 + ( 0 ) )
004242 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 0 ) )
004243 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 0 ) )
004244 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 0 ) )
                 	__POINTD1FN _0x80000,0
004245 940e bbba 	CALL SUBOPT_0x3
                 ; 0004 008A         flag_hold_MODE = 0;
004247 e0e0      	LDI  R30,LOW(0)
004248 93e0 14e4 	STS  _flag_hold_MODE_S0040002000,R30
                 ; 0004 008B         return KEY_MODE;
00424a e0e1      	LDI  R30,LOW(1)
00424b 9508      	RET
                 ; 0004 008C     }
                 ; 0004 008D 
                 ; 0004 008E     if( KEY_PRESS_CHK_UP && !flag_hold_UP )
                 _0x8001C:
                 _0x8001B:
00424c 940e bfcd 	CALL SUBOPT_0x99
00424e f421      	BRNE _0x80020
00424f 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
004251 30e0      	CPI  R30,0
004252 f009      	BREQ _0x80021
                 _0x80020:
004253 c00f      	RJMP _0x8001F
                 _0x80021:
                 ; 0004 008F     {
                 ; 0004 0090         delay_ms(KEY_DELAY);
004254 940e bfc9 	CALL SUBOPT_0x98
                 ; 0004 0091 
                 ; 0004 0092         if( KEY_PRESS_CHK_UP && !flag_hold_UP )
004256 940e bfcd 	CALL SUBOPT_0x99
004258 f421      	BRNE _0x80023
004259 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
00425b 30e0      	CPI  R30,0
00425c f009      	BREQ _0x80024
                 _0x80023:
00425d c004      	RJMP _0x80022
                 _0x80024:
                 ; 0004 0093         {
                 ; 0004 0094             flag_hold_UP = 1;
00425e e0e1      	LDI  R30,LOW(1)
00425f 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 0095             return 0;
004261 c068      	RJMP _0x20E0098
                 ; 0004 0096         }
                 ; 0004 0097     }
                 _0x80022:
                 ; 0004 0098     else if( KEY_RELEASE_CHK_UP && flag_hold_UP)
004262 c013      	RJMP _0x80025
                 _0x8001F:
004263 940e bfcd 	CALL SUBOPT_0x99
004265 f021      	BREQ _0x80027
004266 91e0 14e5 	LDS  R30,_flag_hold_UP_S0040002000
004268 30e0      	CPI  R30,0
004269 f409      	BRNE _0x80028
                 _0x80027:
00426a c00b      	RJMP _0x80026
                 _0x80028:
                 ; 0004 0099     {
                 ; 0004 009A         printDebug("<IO_keyCheck> key UP\r\n");
                +
00426b e7e9     +LDI R30 , LOW ( 2 * _0x80000 + ( 25 ) )
00426c e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 25 ) )
00426d e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 25 ) )
00426e e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 25 ) )
                 	__POINTD1FN _0x80000,25
00426f 940e bbba 	CALL SUBOPT_0x3
                 ; 0004 009B         flag_hold_UP = 0;
004271 e0e0      	LDI  R30,LOW(0)
004272 93e0 14e5 	STS  _flag_hold_UP_S0040002000,R30
                 ; 0004 009C         return KEY_UP;
004274 e0e2      	LDI  R30,LOW(2)
004275 9508      	RET
                 ; 0004 009D     }
                 ; 0004 009E 
                 ; 0004 009F     if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
                 _0x80026:
                 _0x80025:
004276 940e bfd6 	CALL SUBOPT_0x9A
004278 f421      	BRNE _0x8002A
004279 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
00427b 30e0      	CPI  R30,0
00427c f009      	BREQ _0x8002B
                 _0x8002A:
00427d c00f      	RJMP _0x80029
                 _0x8002B:
                 ; 0004 00A0     {
                 ; 0004 00A1         delay_ms(KEY_DELAY);
00427e 940e bfc9 	CALL SUBOPT_0x98
                 ; 0004 00A2 
                 ; 0004 00A3         if( KEY_PRESS_CHK_DOWN && !flag_hold_DOWN )
004280 940e bfd6 	CALL SUBOPT_0x9A
004282 f421      	BRNE _0x8002D
004283 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
004285 30e0      	CPI  R30,0
004286 f009      	BREQ _0x8002E
                 _0x8002D:
004287 c004      	RJMP _0x8002C
                 _0x8002E:
                 ; 0004 00A4         {
                 ; 0004 00A5             flag_hold_DOWN = 1;
004288 e0e1      	LDI  R30,LOW(1)
004289 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00A6             return 0;
00428b c03e      	RJMP _0x20E0098
                 ; 0004 00A7         }
                 ; 0004 00A8     }
                 _0x8002C:
                 ; 0004 00A9     else if( KEY_RELEASE_CHK_DOWN && flag_hold_DOWN)
00428c c013      	RJMP _0x8002F
                 _0x80029:
00428d 940e bfd6 	CALL SUBOPT_0x9A
00428f f021      	BREQ _0x80031
004290 91e0 14e6 	LDS  R30,_flag_hold_DOWN_S0040002000
004292 30e0      	CPI  R30,0
004293 f409      	BRNE _0x80032
                 _0x80031:
004294 c00b      	RJMP _0x80030
                 _0x80032:
                 ; 0004 00AA     {
                 ; 0004 00AB         printDebug("<IO_keyCheck> key DOWN\r\n");
                +
004295 e9e0     +LDI R30 , LOW ( 2 * _0x80000 + ( 48 ) )
004296 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 48 ) )
004297 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 48 ) )
004298 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 48 ) )
                 	__POINTD1FN _0x80000,48
004299 940e bbba 	CALL SUBOPT_0x3
                 ; 0004 00AC         flag_hold_DOWN = 0;
00429b e0e0      	LDI  R30,LOW(0)
00429c 93e0 14e6 	STS  _flag_hold_DOWN_S0040002000,R30
                 ; 0004 00AD         return KEY_DOWN;
00429e e0e3      	LDI  R30,LOW(3)
00429f 9508      	RET
                 ; 0004 00AE     }
                 ; 0004 00AF 
                 ; 0004 00B0     if( KEY_PRESS_CHK_OK && !flag_hold_OK )
                 _0x80030:
                 _0x8002F:
0042a0 940e bfdf 	CALL SUBOPT_0x9B
0042a2 f421      	BRNE _0x80034
0042a3 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0042a5 30e0      	CPI  R30,0
0042a6 f009      	BREQ _0x80035
                 _0x80034:
0042a7 c00f      	RJMP _0x80033
                 _0x80035:
                 ; 0004 00B1     {
                 ; 0004 00B2         delay_ms(KEY_DELAY);
0042a8 940e bfc9 	CALL SUBOPT_0x98
                 ; 0004 00B3 
                 ; 0004 00B4         if( KEY_PRESS_CHK_OK && !flag_hold_OK )
0042aa 940e bfdf 	CALL SUBOPT_0x9B
0042ac f421      	BRNE _0x80037
0042ad 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0042af 30e0      	CPI  R30,0
0042b0 f009      	BREQ _0x80038
                 _0x80037:
0042b1 c004      	RJMP _0x80036
                 _0x80038:
                 ; 0004 00B5         {
                 ; 0004 00B6             flag_hold_OK = 1;
0042b2 e0e1      	LDI  R30,LOW(1)
0042b3 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00B7             return 0;
0042b5 c014      	RJMP _0x20E0098
                 ; 0004 00B8         }
                 ; 0004 00B9     }
                 _0x80036:
                 ; 0004 00BA     else if( KEY_RELEASE_CHK_OK && flag_hold_OK)
0042b6 c013      	RJMP _0x80039
                 _0x80033:
0042b7 940e bfdf 	CALL SUBOPT_0x9B
0042b9 f021      	BREQ _0x8003B
0042ba 91e0 14e7 	LDS  R30,_flag_hold_OK_S0040002000
0042bc 30e0      	CPI  R30,0
0042bd f409      	BRNE _0x8003C
                 _0x8003B:
0042be c00b      	RJMP _0x8003A
                 _0x8003C:
                 ; 0004 00BB     {
                 ; 0004 00BC         printDebug("<IO_keyCheck> key OK\r\n");
                +
0042bf eae9     +LDI R30 , LOW ( 2 * _0x80000 + ( 73 ) )
0042c0 e1f1     +LDI R31 , HIGH ( 2 * _0x80000 + ( 73 ) )
0042c1 e060     +LDI R22 , BYTE3 ( 2 * _0x80000 + ( 73 ) )
0042c2 e070     +LDI R23 , BYTE4 ( 2 * _0x80000 + ( 73 ) )
                 	__POINTD1FN _0x80000,73
0042c3 940e bbba 	CALL SUBOPT_0x3
                 ; 0004 00BD         flag_hold_OK = 0;
0042c5 e0e0      	LDI  R30,LOW(0)
0042c6 93e0 14e7 	STS  _flag_hold_OK_S0040002000,R30
                 ; 0004 00BE         return KEY_OK;
0042c8 e0e4      	LDI  R30,LOW(4)
0042c9 9508      	RET
                 ; 0004 00BF     }
                 ; 0004 00C0 
                 ; 0004 00C1     return 0;
                 _0x8003A:
                 _0x80039:
                 _0x20E0098:
0042ca e0e0      	LDI  R30,LOW(0)
0042cb 9508      	RET
                 ; 0004 00C2 }
                 ;
                 ;#include <mega2560.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include <delay.h>
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "adc.h"
                 ;#include "debug.h"
                 ;
                 ;float           adcData[5];
                 ;float           adcBatt;
                 ;
                 ;eeprom float    eep_vref_val = 2.56;
                 ;
                 ;/*============================================================*/
                 ;unsigned int read_adc(unsigned char adc_input)
                 ; 0005 0010 {
                 
                 	.CSEG
                 _read_adc:
                 ; 0005 0011     unsigned int adc_data = 0x0000;
                 ; 0005 0012 
                 ; 0005 0013     ADMUX  &= ADC_VREF_TYPE;
0042cc 93aa      	ST   -Y,R26
0042cd 940e bfe8 	CALL SUBOPT_0x9C
                 ;	adc_input -> Y+2
                 ;	adc_data -> R16,R17
0042cf 91e0 007c 	LDS  R30,124
0042d1 7ce0      	ANDI R30,LOW(0xC0)
0042d2 93e0 007c 	STS  124,R30
                 ; 0005 0014     ADCSRB &= 0xf7;
0042d4 91e0 007b 	LDS  R30,123
0042d6 7fe7      	ANDI R30,0XF7
0042d7 93e0 007b 	STS  123,R30
                 ; 0005 0015 
                 ; 0005 0016     ADMUX  |= (adc_input & 0x07) | (ADC_VREF_TYPE & 0xff);
0042d9 e7ac      	LDI  R26,LOW(124)
0042da e0b0      	LDI  R27,HIGH(124)
0042db 2e0a      	MOV  R0,R26
0042dc 91ac      	LD   R26,X
0042dd 81ea      	LDD  R30,Y+2
0042de 70e7      	ANDI R30,LOW(0x7)
0042df 6ce0      	ORI  R30,LOW(0xC0)
0042e0 2bea      	OR   R30,R26
0042e1 2da0      	MOV  R26,R0
0042e2 93ec      	ST   X,R30
                 ; 0005 0017 
                 ; 0005 0018     if(adc_input > 7)
0042e3 81aa      	LDD  R26,Y+2
0042e4 30a8      	CPI  R26,LOW(0x8)
0042e5 f020      	BRLO _0xA0003
                 ; 0005 0019     {
                 ; 0005 001A         ADCSRB |= 0x08;
0042e6 91e0 007b 	LDS  R30,123
0042e8 60e8      	ORI  R30,8
0042e9 c003      	RJMP _0xA0020
                 ; 0005 001B     }
                 ; 0005 001C     else
                 _0xA0003:
                 ; 0005 001D     {
                 ; 0005 001E         ADCSRB &= 0xf7;
0042ea 91e0 007b 	LDS  R30,123
0042ec 7fe7      	ANDI R30,0XF7
                 _0xA0020:
0042ed 93e0 007b 	STS  123,R30
                 ; 0005 001F     }
                 ; 0005 0020 
                 ; 0005 0021     // Delay needed for the stabilization of the ADC input voltage
                 ; 0005 0022     delay_us(20);
                +
0042ef e385     +LDI R24 , LOW ( 53 )
                +__DELAY_USB_LOOP :
0042f0 958a     +DEC R24
0042f1 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 53
                 ; 0005 0023 
                 ; 0005 0024     // Start the AD conversion
                 ; 0005 0025     ADCSRA  |= 0x80; //ENABLE ADC
0042f2 91e0 007a 	LDS  R30,122
0042f4 68e0      	ORI  R30,0x80
0042f5 93e0 007a 	STS  122,R30
                 ; 0005 0026     ADCSRA  |= 0x40;
0042f7 91e0 007a 	LDS  R30,122
0042f9 64e0      	ORI  R30,0x40
0042fa 93e0 007a 	STS  122,R30
                 ; 0005 0027 
                 ; 0005 0028     // Wait for the AD conversion to complete
                 ; 0005 0029     //while ( ((ADCSRA & 0x10)==0) || ((ADCSRA & 0x40) == 0x40));
                 ; 0005 002A     while ( (ADCSRA & 0x10)==0);
                 _0xA0005:
0042fc 91e0 007a 	LDS  R30,122
0042fe 71e0      	ANDI R30,LOW(0x10)
0042ff f3e1      	BREQ _0xA0005
                 ; 0005 002B     adc_data = ADCL;
004300 9100 0078 	LDS  R16,120
004302 2711      	CLR  R17
                 ; 0005 002C     adc_data |= (ADCH & 0x00ff) << 8;
004303 91e0 0079 	LDS  R30,121
004305 940e bfed 	CALL SUBOPT_0x9D
004307 2ffe      	MOV  R31,R30
004308 e0e0      	LDI  R30,0
                +
004309 2b0e     +OR R16 , R30
00430a 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
                 ; 0005 002D 
                 ; 0005 002E     ADCSRA  |=0x10;
00430b 91e0 007a 	LDS  R30,122
00430d 61e0      	ORI  R30,0x10
00430e 93e0 007a 	STS  122,R30
                 ; 0005 002F 
                 ; 0005 0030     delay_us(50);
                +
004310 e885     +LDI R24 , LOW ( 133 )
                +__DELAY_USB_LOOP :
004311 958a     +DEC R24
004312 f7f1     +BRNE __DELAY_USB_LOOP
                 	__DELAY_USB 133
                 ; 0005 0031 
                 ; 0005 0032     return adc_data;
004313 01f8      	MOVW R30,R16
004314 8119      	LDD  R17,Y+1
004315 8108      	LDD  R16,Y+0
                 _0x20E0097:
004316 9623      	ADIW R28,3
004317 9508      	RET
                 ; 0005 0033 }
                 ;/*============================================================*/
                 ;unsigned char adc_sampling(void)
                 ; 0005 0036 {
                 ; 0005 0037     static int      i = 0;
                 ; 0005 0038     static char     batt_read_flag = 0;
                 ; 0005 0039 
                 ; 0005 003A     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 ; 0005 003B         /*
                 ; 0005 003C         printDebug("<%d>",i);
                 ; 0005 003D         SENSOR_SELECT(i);
                 ; 0005 003E         delay_ms(20);
                 ; 0005 003F         adcData[i] = (float)((adcData[i] * 9.0) + (float)(read_adc(8) * 1.0))/10;           // Temp Sensor Low-Pass Filter
                 ; 0005 0040         if(++i >= 5){   i = 0;  }
                 ; 0005 0041         */
                 ; 0005 0042     }
                 ; 0005 0043     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 ; 0005 0044 //        for( i=0 ; i<5 ; i++ ){
                 ; 0005 0045 //            adcData[i] = (float)((adcData[i] * 9.9) + (float)(read_adc(8+i) * 0.1))/10;     // Temp Sensor Low-Pass Filter
                 ; 0005 0046 //        }
                 ; 0005 0047     }
                 ; 0005 0048 
                 ; 0005 0049 //    if(++batt_read_flag > 25){
                 ; 0005 004A //        adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
                 ; 0005 004B //        batt_read_flag = 0;
                 ; 0005 004C //    }
                 ; 0005 004D 
                 ; 0005 004E     return 0;
                 ; 0005 004F }
                 ;/*============================================================*/
                 ;float readBattery(void)
                 ; 0005 0052 {
                 _readBattery:
                 ; 0005 0053     float   vBATT;
                 ; 0005 0054 
                 ; 0005 0055     adcBatt = (float)((adcBatt * 9.9) + (float)(read_adc(14) * 0.1))/10;                // Battery Read
004318 9724      	SBIW R28,4
                 ;	vBATT -> Y+0
004319 940e bff0 	CALL SUBOPT_0x9E
                +
00431b e6e6     +LDI R30 , LOW ( 0x411E6666 )
00431c e6f6     +LDI R31 , HIGH ( 0x411E6666 )
00431d e16e     +LDI R22 , BYTE3 ( 0x411E6666 )
00431e e471     +LDI R23 , BYTE4 ( 0x411E6666 )
                 	__GETD1N 0x411E6666
00431f 940e d7dd 	CALL __MULF12
004321 937f      	PUSH R23
004322 936f      	PUSH R22
004323 93ff      	PUSH R31
004324 93ef      	PUSH R30
004325 e0ae      	LDI  R26,LOW(14)
004326 dfa5      	RCALL _read_adc
004327 940e bff9 	CALL SUBOPT_0x9F
004329 940e bffe 	CALL SUBOPT_0xA0
00432b 91af      	POP  R26
00432c 91bf      	POP  R27
00432d 918f      	POP  R24
00432e 919f      	POP  R25
00432f 940e c005 	CALL SUBOPT_0xA1
004331 93e0 14e8 	STS  _adcBatt,R30
004333 93f0 14e9 	STS  _adcBatt+1,R31
004335 9360 14ea 	STS  _adcBatt+2,R22
004337 9370 14eb 	STS  _adcBatt+3,R23
                 ; 0005 0056 
                 ; 0005 0057     vBATT   = adcBatt*ADC_CONV_FAC*1.8;                                // from voltage divider 120k & 150k
004339 940e bd04 	CALL SUBOPT_0x32
00433b 940e bff0 	CALL SUBOPT_0x9E
00433d 940e d7dd 	CALL __MULF12
                +
00433f e6a6     +LDI R26 , LOW ( 0x3FE66666 )
004340 e6b6     +LDI R27 , HIGH ( 0x3FE66666 )
004341 ee86     +LDI R24 , BYTE3 ( 0x3FE66666 )
004342 e39f     +LDI R25 , BYTE4 ( 0x3FE66666 )
                 	__GETD2N 0x3FE66666
004343 940e c010 	CALL SUBOPT_0xA2
                 ; 0005 0058     //printDebug("                                                     -- volt[%f]\r\n", vBATT);    // padding line
                 ; 0005 0059 
                 ; 0005 005A     return vBATT;
004345 940e bf4d 	CALL SUBOPT_0x87
                 _0x20E0096:
004347 9624      	ADIW R28,4
004348 9508      	RET
                 ; 0005 005B }
                 ;/*============================================================*/
                 ;void adc_init_read(void)
                 ; 0005 005E {
                 _adc_init_read:
                 ; 0005 005F     int i;
                 ; 0005 0060     printDebug("Initializing ADC.. ");
004349 931a      	ST   -Y,R17
00434a 930a      	ST   -Y,R16
                 ;	i -> R16,R17
                +
00434b ece0     +LDI R30 , LOW ( 2 * _0xA0000 + ( 0 ) )
00434c e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 0 ) )
00434d e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 0 ) )
00434e e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 0 ) )
                 	__POINTD1FN _0xA0000,0
00434f 940e bbba 	CALL SUBOPT_0x3
                 ; 0005 0061 
                 ; 0005 0062     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
004351 940e bce8 	CALL SUBOPT_0x2E
004353 f021      	BREQ _0xA0010
004354 940e bce8 	CALL SUBOPT_0x2E
004356 30e3      	CPI  R30,LOW(0x3)
004357 f4d1      	BRNE _0xA000F
                 _0xA0010:
                 ; 0005 0063         for(i=0;i<5;i++){ \
                 ; 0005 0064             SENSOR_SELECT(i);
                +
004358 e000     +LDI R16 , LOW ( 0 )
004359 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xA0013:
                +
00435a 3005     +CPI R16 , LOW ( 5 )
00435b e0e0     +LDI R30 , HIGH ( 5 )
00435c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00435d f49c      	BRGE _0xA0014
00435e 940e c015 	CALL SUBOPT_0xA3
004360 2fe0      	MOV  R30,R16
004361 940e c01f 	CALL SUBOPT_0xA4
                 ; 0005 0065             delay_ms(20);
                 ; 0005 0066             adcData[i] = read_adc(8);
004363 01f8      	MOVW R30,R16
004364 940e c027 	CALL SUBOPT_0xA5
004366 93ff      	PUSH R31
004367 93ef      	PUSH R30
004368 e0a8      	LDI  R26,LOW(8)
004369 df62      	RCALL _read_adc
00436a 91af      	POP  R26
00436b 91bf      	POP  R27
00436c 940e c02a 	CALL SUBOPT_0xA6
                 ; 0005 0067         }
                +
00436e 5f0f     +SUBI R16 , LOW ( - 1 )
00436f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004370 cfe9      	RJMP _0xA0013
                 _0xA0014:
                 ; 0005 0068     }
                 ; 0005 0069     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
004371 c025      	RJMP _0xA0015
                 _0xA000F:
004372 940e bfb5 	CALL SUBOPT_0x96
004374 f021      	BREQ _0xA0017
004375 940e bce8 	CALL SUBOPT_0x2E
004377 30e2      	CPI  R30,LOW(0x2)
004378 f4f1      	BRNE _0xA0016
                 _0xA0017:
                 ; 0005 006A         adcData[0] = read_adc(8);
004379 e0a8      	LDI  R26,LOW(8)
00437a df51      	RCALL _read_adc
00437b e3a6      	LDI  R26,LOW(_adcData)
00437c e1b4      	LDI  R27,HIGH(_adcData)
00437d 940e c02a 	CALL SUBOPT_0xA6
                 ; 0005 006B         adcData[1] = read_adc(9);
00437f e0a9      	LDI  R26,LOW(9)
004380 df4b      	RCALL _read_adc
                +
004381 e3aa     +LDI R26 , LOW ( _adcData + ( 4 ) )
004382 e1b4     +LDI R27 , HIGH ( _adcData + ( 4 ) )
                 	__POINTW2MN _adcData,4
004383 940e c02a 	CALL SUBOPT_0xA6
                 ; 0005 006C         adcData[2] = read_adc(10);
004385 e0aa      	LDI  R26,LOW(10)
004386 df45      	RCALL _read_adc
                +
004387 e3ae     +LDI R26 , LOW ( _adcData + ( 8 ) )
004388 e1b4     +LDI R27 , HIGH ( _adcData + ( 8 ) )
                 	__POINTW2MN _adcData,8
004389 940e c02a 	CALL SUBOPT_0xA6
                 ; 0005 006D         adcData[3] = read_adc(11);
00438b e0ab      	LDI  R26,LOW(11)
00438c df3f      	RCALL _read_adc
                +
00438d e4a2     +LDI R26 , LOW ( _adcData + ( 12 ) )
00438e e1b4     +LDI R27 , HIGH ( _adcData + ( 12 ) )
                 	__POINTW2MN _adcData,12
00438f 940e c02a 	CALL SUBOPT_0xA6
                 ; 0005 006E         adcData[4] = read_adc(12);
004391 e0ac      	LDI  R26,LOW(12)
004392 df39      	RCALL _read_adc
                +
004393 e4a6     +LDI R26 , LOW ( _adcData + ( 16 ) )
004394 e1b4     +LDI R27 , HIGH ( _adcData + ( 16 ) )
                 	__POINTW2MN _adcData,16
004395 940e c02a 	CALL SUBOPT_0xA6
                 ; 0005 006F     }
                 ; 0005 0070 
                 ; 0005 0071     adcBatt = read_adc(14);
                 _0xA0016:
                 _0xA0015:
004397 e0ae      	LDI  R26,LOW(14)
004398 df33      	RCALL _read_adc
004399 eea8      	LDI  R26,LOW(_adcBatt)
00439a e1b4      	LDI  R27,HIGH(_adcBatt)
00439b 940e c02a 	CALL SUBOPT_0xA6
                 ; 0005 0072 
                 ; 0005 0073     printDebug("OK\r\n");
                +
00439d ede4     +LDI R30 , LOW ( 2 * _0xA0000 + ( 20 ) )
00439e e1f1     +LDI R31 , HIGH ( 2 * _0xA0000 + ( 20 ) )
00439f e060     +LDI R22 , BYTE3 ( 2 * _0xA0000 + ( 20 ) )
0043a0 e070     +LDI R23 , BYTE4 ( 2 * _0xA0000 + ( 20 ) )
                 	__POINTD1FN _0xA0000,20
0043a1 940e bbba 	CALL SUBOPT_0x3
                 ; 0005 0074 }
0043a3 9109      	LD   R16,Y+
0043a4 9119      	LD   R17,Y+
0043a5 9508      	RET
                 ;/*============================================================*/
                 ;void init_adc(void)
                 ; 0005 0077 {
                 _init_adc:
                 ; 0005 0078     // ADC initialization
                 ; 0005 0079     // ADC Clock frequency: 1000.000 kHz
                 ; 0005 007A     // ADC Voltage Reference: 2.56V, cap. on AREF
                 ; 0005 007B     // ADC Auto Trigger Source: Free Running
                 ; 0005 007C     // Digital input buffers on ADC0: On, ADC1: On, ADC2: On, ADC3: On
                 ; 0005 007D     // ADC4: On, ADC5: On, ADC6: On, ADC7: On
                 ; 0005 007E     DIDR0=0x00;
0043a6 e0e0      	LDI  R30,LOW(0)
0043a7 93e0 007e 	STS  126,R30
                 ; 0005 007F 
                 ; 0005 0080 
                 ; 0005 0081     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
0043a9 940e bce8 	CALL SUBOPT_0x2E
0043ab f021      	BREQ _0xA001A
0043ac 940e bce8 	CALL SUBOPT_0x2E
0043ae 30e3      	CPI  R30,LOW(0x3)
0043af f411      	BRNE _0xA0019
                 _0xA001A:
                 ; 0005 0082         // Digital input buffers on ADC8: Off, ADC9: On, ADC10: On, ADC11: On
                 ; 0005 0083         // ADC12: On, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0084         DIDR2=0x61;
0043b0 e6e1      	LDI  R30,LOW(97)
0043b1 c008      	RJMP _0xA0021
                 ; 0005 0085     }
                 ; 0005 0086     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0xA0019:
0043b2 940e bfb5 	CALL SUBOPT_0x96
0043b4 f021      	BREQ _0xA001E
0043b5 940e bce8 	CALL SUBOPT_0x2E
0043b7 30e2      	CPI  R30,LOW(0x2)
0043b8 f419      	BRNE _0xA001D
                 _0xA001E:
                 ; 0005 0087         // Digital input buffers on ADC8: Off, ADC9: Off, ADC10: Off, ADC11: Off
                 ; 0005 0088         // ADC12: Off, ADC13: Off, ADC14: Off, ADC15: On
                 ; 0005 0089         DIDR2=0x7F;
0043b9 e7ef      	LDI  R30,LOW(127)
                 _0xA0021:
0043ba 93e0 007d 	STS  125,R30
                 ; 0005 008A     }
                 ; 0005 008B 
                 ; 0005 008C     ADMUX   = ADC_VREF_TYPE;
                 _0xA001D:
0043bc ece0      	LDI  R30,LOW(192)
0043bd 93e0 007c 	STS  124,R30
                 ; 0005 008D     ADCSRA  = (1<<7) |          // ADEN:    ADC enable
                 ; 0005 008E               (0<<6) |          // ADSC:    ADC Start Conversion
                 ; 0005 008F               (0<<5) |          // ADATE:   ADC Auto Trigger Enable
                 ; 0005 0090               (0<<4) |          // ADIF:    ADC Interrupt Flag
                 ; 0005 0091               (0<<3) |          // ADIE:    ADC Interrupt
                 ; 0005 0092               (1<<2) |          //-----
                 ; 0005 0093               (1<<1) |          //- ADPS2-0: ADC Prescaler Select Bits      (011 = clk/8) (110 = clk/64)
                 ; 0005 0094               (0<<0);           //-----
0043bf e8e6      	LDI  R30,LOW(134)
0043c0 93e0 007a 	STS  122,R30
                 ; 0005 0095 
                 ; 0005 0096     ADCSRB  = 0;
0043c2 e0e0      	LDI  R30,LOW(0)
0043c3 93e0 007b 	STS  123,R30
                 ; 0005 0097 
                 ; 0005 0098     //adc_init_read();
                 ; 0005 0099 }
0043c5 9508      	RET
                 ;/*============================================================*/
                 ;#include <i2c.h>
                 ;#include <delay.h>
                 ;#include <string.h>
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "ds1672.h"
                 ;
                 ;/*============================================================*/
                 ;unsigned long raw_rtc;
                 ;/*============================================================*/
                 ;int DS1672_trickerChargeEnable(void) /* ----- enable the trickle-charger ------ */
                 ; 0006 000C {
                 
                 	.CSEG
                 _DS1672_trickerChargeEnable:
                 ; 0006 000D     #asm("cli")
0043c6 94f8      	cli
                 ; 0006 000E     i2c_start();
0043c7 940e c02e 	CALL SUBOPT_0xA7
                 ; 0006 000F     i2c_write(ADDRTC);
                 ; 0006 0010     i2c_write(5);
0043c9 e0a5      	LDI  R26,LOW(5)
0043ca 940e d6c5 	CALL _i2c_write
                 ; 0006 0011     i2c_write(0xA6);            /* enable the trickle-charger : No diode, 2k ohm resistor */
0043cc eaa6      	LDI  R26,LOW(166)
0043cd 940e c033 	CALL SUBOPT_0xA8
                 ; 0006 0012     i2c_stop();
                 ; 0006 0013     #asm("sei")
0043cf 9478      	sei
                 ; 0006 0014 
                 ; 0006 0015     /* 10ms delay to complete the write operation */
                 ; 0006 0016     delay_ms(10);
0043d0 940e c037 	CALL SUBOPT_0xA9
                 ; 0006 0017 
                 ; 0006 0018     return 0;
0043d2 9508      	RET
                 ; 0006 0019 }
                 ;/*============================================================*/
                 ;unsigned long int DS1672_read(void)
                 ; 0006 001C {
                 _DS1672_read:
                 ; 0006 001D     unsigned long int z;
                 ; 0006 001E     unsigned char rtc_reg1, rtc_reg2, rtc_reg3, rtc_reg4;
                 ; 0006 001F 
                 ; 0006 0020     #asm("cli")
0043d3 9724      	SBIW R28,4
0043d4 940e da9b 	CALL __SAVELOCR4
                 ;	z -> Y+4
                 ;	rtc_reg1 -> R17
                 ;	rtc_reg2 -> R16
                 ;	rtc_reg3 -> R19
                 ;	rtc_reg4 -> R18
0043d6 94f8      	cli
                 ; 0006 0021     i2c_start();
0043d7 940e c02e 	CALL SUBOPT_0xA7
                 ; 0006 0022     i2c_write(ADDRTC);                      /* write slave address, write 1672 */
                 ; 0006 0023     i2c_write(0x00);                        /* write register address, 1st clock register */
0043d9 e0a0      	LDI  R26,LOW(0)
0043da 940e d6c5 	CALL _i2c_write
                 ; 0006 0024     i2c_start();
0043dc 940e d691 	CALL _i2c_start
                 ; 0006 0025     i2c_write(ADDRTC | 1);                  /* write slave address, read 1672 */
0043de eda1      	LDI  R26,LOW(209)
0043df 940e d6c5 	CALL _i2c_write
                 ; 0006 0026     rtc_reg1 = i2c_read(ACK);                 /* starts w/last address stored in register pointer */
0043e1 e0a1      	LDI  R26,LOW(1)
0043e2 940e d6aa 	CALL _i2c_read
0043e4 2f1e      	MOV  R17,R30
                 ; 0006 0027     rtc_reg2 = i2c_read(ACK);
0043e5 e0a1      	LDI  R26,LOW(1)
0043e6 940e d6aa 	CALL _i2c_read
0043e8 2f0e      	MOV  R16,R30
                 ; 0006 0028     rtc_reg3 = i2c_read(ACK);
0043e9 e0a1      	LDI  R26,LOW(1)
0043ea 940e d6aa 	CALL _i2c_read
0043ec 2f3e      	MOV  R19,R30
                 ; 0006 0029     rtc_reg4 = i2c_read(NACK);
0043ed e0a0      	LDI  R26,LOW(0)
0043ee 940e d6aa 	CALL _i2c_read
0043f0 2f2e      	MOV  R18,R30
                 ; 0006 002A     i2c_stop();
0043f1 940e d6a0 	CALL _i2c_stop
                 ; 0006 002B     #asm("sei")
0043f3 9478      	sei
                 ; 0006 002C 
                 ; 0006 002D     z = rtc_reg4;
0043f4 2fe2      	MOV  R30,R18
0043f5 27ff      	CLR  R31
0043f6 2766      	CLR  R22
0043f7 2777      	CLR  R23
0043f8 940e c03e 	CALL SUBOPT_0xAA
                 ; 0006 002E     z <<= 8;
0043fa 940e c043 	CALL SUBOPT_0xAB
0043fc 940e c048 	CALL SUBOPT_0xAC
                 ; 0006 002F     z += rtc_reg3;
0043fe 2fe3      	MOV  R30,R19
0043ff 940e c04c 	CALL SUBOPT_0xAD
                 ; 0006 0030     z <<= 8;
                 ; 0006 0031     z += rtc_reg2;
004401 2fe0      	MOV  R30,R16
004402 940e c04c 	CALL SUBOPT_0xAD
                 ; 0006 0032     z <<= 8;
                 ; 0006 0033     z += rtc_reg1;
004404 940e c055 	CALL SUBOPT_0xAE
004406 940e c043 	CALL SUBOPT_0xAB
004408 940e c058 	CALL SUBOPT_0xAF
00440a 940e c05d 	CALL SUBOPT_0xB0
                 ; 0006 0034 
                 ; 0006 0035     //printDebug("\r\nDS1672_read -> 0x%02X%02X%02X%02X\r\n",rtc_reg4,rtc_reg3,rtc_reg2,rtc_reg1);
                 ; 0006 0036     //printDebug("rawtime [%ld]\r\n", z);
                 ; 0006 0037 
                 ; 0006 0038     return z;
00440c 940e daa2 	CALL __LOADLOCR4
00440e 9628      	ADIW R28,8
00440f 9508      	RET
                 ; 0006 0039 }
                 ;/*============================================================*/
                 ;int binary_to_date(unsigned long x, struct rtc_structure *rtcCov) /* ------ convert binary time to date format ------ */
                 ; 0006 003C {
                 _binary_to_date:
                 ; 0006 003D     unsigned long yrs = 99, mon = 99, day = 99, tmp, jday, hrs, min, sec;
                 ; 0006 003E     unsigned long j, n;
                 ; 0006 003F     unsigned int dow;     // day of week
                 ; 0006 0040 
                 ; 0006 0041     j = x / 60;                             /* whole minutes since 1/1/70 */
004410 93ba      	ST   -Y,R27
004411 93aa      	ST   -Y,R26
004412 97a8      	SBIW R28,40
004413 e08c      	LDI  R24,12
004414 e1ac      	LDI  R26,LOW(28)
004415 e0b0      	LDI  R27,HIGH(28)
004416 edea      	LDI  R30,LOW(_0xC0003*2)
004417 e1f1      	LDI  R31,HIGH(_0xC0003*2)
004418 e060      	LDI  R22,BYTE3(_0xC0003*2)
004419 940e daa7 	CALL __INITLOCB
00441b 931a      	ST   -Y,R17
00441c 930a      	ST   -Y,R16
                 ;	x -> Y+44
                 ;	*rtcCov -> Y+42
                 ;	yrs -> Y+38
                 ;	mon -> Y+34
                 ;	day -> Y+30
                 ;	tmp -> Y+26
                 ;	jday -> Y+22
                 ;	hrs -> Y+18
                 ;	min -> Y+14
                 ;	sec -> Y+10
                 ;	j -> Y+6
                 ;	n -> Y+2
                 ;	dow -> R16,R17
                +
00441d a5ac     +LDD R26 , Y + 44
00441e a5bd     +LDD R27 , Y + 44 + 1
00441f a58e     +LDD R24 , Y + 44 + 2
004420 a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
004421 940e c05f 	CALL SUBOPT_0xB1
004423 940e c066 	CALL SUBOPT_0xB2
                 ; 0006 0042     sec = x - (60 * j);                     /* leftover seconds */
004425 940e c06b 	CALL SUBOPT_0xB3
                +
004427 a5ac     +LDD R26 , Y + 44
004428 a5bd     +LDD R27 , Y + 44 + 1
004429 a58e     +LDD R24 , Y + 44 + 2
00442a a59f     +LDD R25 , Y + 44 + 3
                 	__GETD2S 44
00442b 940e d8a3 	CALL __SUBD21
                +
00442d 87aa     +STD Y + 10 , R26
00442e 87bb     +STD Y + 10 + 1 , R27
00442f 878c     +STD Y + 10 + 2 , R24
004430 879d     +STD Y + 10 + 3 , R25
                 	__PUTD2S 10
                 ; 0006 0043     n = j / 60;
004431 940e be1e 	CALL SUBOPT_0x59
004433 940e c05f 	CALL SUBOPT_0xB1
004435 940e c072 	CALL SUBOPT_0xB4
                 ; 0006 0044     min = j - (60 * n);
004437 940e c077 	CALL SUBOPT_0xB5
004439 940e c06b 	CALL SUBOPT_0xB3
00443b 940e be1e 	CALL SUBOPT_0x59
00443d 940e d8a3 	CALL __SUBD21
                +
00443f 87ae     +STD Y + 14 , R26
004440 87bf     +STD Y + 14 + 1 , R27
004441 8b88     +STD Y + 14 + 2 , R24
004442 8b99     +STD Y + 14 + 3 , R25
                 	__PUTD2S 14
                 ; 0006 0045     j = n / 24;
004443 940e c07c 	CALL SUBOPT_0xB6
                +
004445 e1e8     +LDI R30 , LOW ( 0x18 )
004446 e0f0     +LDI R31 , HIGH ( 0x18 )
004447 e060     +LDI R22 , BYTE3 ( 0x18 )
004448 e070     +LDI R23 , BYTE4 ( 0x18 )
                 	__GETD1N 0x18
004449 940e d990 	CALL __DIVD21U
00444b 940e c066 	CALL SUBOPT_0xB2
                 ; 0006 0046     hrs = n - (24 * j);
                +
00444d e1a8     +LDI R26 , LOW ( 0x18 )
00444e e0b0     +LDI R27 , HIGH ( 0x18 )
00444f e080     +LDI R24 , BYTE3 ( 0x18 )
004450 e090     +LDI R25 , BYTE4 ( 0x18 )
                 	__GETD2N 0x18
004451 940e d93a 	CALL __MULD12U
004453 940e c07c 	CALL SUBOPT_0xB6
004455 940e d8a3 	CALL __SUBD21
                +
004457 8baa     +STD Y + 18 , R26
004458 8bbb     +STD Y + 18 + 1 , R27
004459 8b8c     +STD Y + 18 + 2 , R24
00445a 8b9d     +STD Y + 18 + 3 , R25
                 	__PUTD2S 18
                 ; 0006 0047     j = j + (365 + 366);                    /* whole days since 1/1/68 */
00445b 940e c081 	CALL SUBOPT_0xB7
                +
00445d 52e5     +SUBI R30 , LOW ( - 731 )
00445e 4ffd     +SBCI R31 , HIGH ( - 731 )
00445f 4f6f     +SBCI R22 , BYTE3 ( - 731 )
004460 4f7f     +SBCI R23 , BYTE4 ( - 731 )
                 	__ADDD1N 731
004461 940e c086 	CALL SUBOPT_0xB8
                 ; 0006 0048 
                 ; 0006 0049     dow = (j % 7)+1;                        /* since 1/1/68 is Monday */
004463 940e be1e 	CALL SUBOPT_0x59
                +
004465 e0e7     +LDI R30 , LOW ( 0x7 )
004466 e0f0     +LDI R31 , HIGH ( 0x7 )
004467 e060     +LDI R22 , BYTE3 ( 0x7 )
004468 e070     +LDI R23 , BYTE4 ( 0x7 )
                 	__GETD1N 0x7
004469 940e d9d2 	CALL __MODD21U
00446b 9631      	ADIW R30,1
00446c 018f      	MOVW R16,R30
                 ; 0006 004A                                             /* 1-7 => Sun - Sat */
                 ; 0006 004B     day = j / ((4 * 365) + 1);
00446d 940e c08b 	CALL SUBOPT_0xB9
00446f 940e d990 	CALL __DIVD21U
004471 940e c091 	CALL SUBOPT_0xBA
                 ; 0006 004C     tmp = j % ((4 * 365) + 1);
004473 940e c08b 	CALL SUBOPT_0xB9
004475 940e d9d2 	CALL __MODD21U
                +
004477 8fea     +STD Y + 26 , R30
004478 8ffb     +STD Y + 26 + 1 , R31
004479 8f6c     +STD Y + 26 + 2 , R22
00447a 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 004D     if(tmp >= (31 + 29))                    /* if past 2/29 */
00447b 940e c096 	CALL SUBOPT_0xBB
00447d 940e c09b 	CALL SUBOPT_0xBC
00447f f030      	BRLO _0xC0004
                 ; 0006 004E     day++;                                  /* add a leap day */
004480 940e c0a3 	CALL SUBOPT_0xBD
004482 940e c0a8 	CALL SUBOPT_0xBE
004484 940e c091 	CALL SUBOPT_0xBA
                 ; 0006 004F     yrs = (j - day) / 365;                  /* whole years since 1968 */
                 _0xC0004:
004486 940e c0ad 	CALL SUBOPT_0xBF
004488 940e c081 	CALL SUBOPT_0xB7
00448a 940e d89e 	CALL __SUBD12
00448c 01df      	MOVW R26,R30
00448d 01cb      	MOVW R24,R22
                +
00448e e6ed     +LDI R30 , LOW ( 0x16D )
00448f e0f1     +LDI R31 , HIGH ( 0x16D )
004490 e060     +LDI R22 , BYTE3 ( 0x16D )
004491 e070     +LDI R23 , BYTE4 ( 0x16D )
                 	__GETD1N 0x16D
004492 940e d990 	CALL __DIVD21U
                +
004494 a3ee     +STD Y + 38 , R30
004495 a3ff     +STD Y + 38 + 1 , R31
004496 a768     +STD Y + 38 + 2 , R22
004497 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0050     jday = j - (yrs * 365) - day;           /* days since 1/1 of current year */
004498 940e c0b2 	CALL SUBOPT_0xC0
00449a 940e c0b7 	CALL SUBOPT_0xC1
00449c 940e be1e 	CALL SUBOPT_0x59
00449e 940e c0be 	CALL SUBOPT_0xC2
0044a0 940e c0ad 	CALL SUBOPT_0xBF
0044a2 940e d89e 	CALL __SUBD12
0044a4 940e c0c3 	CALL SUBOPT_0xC3
                 ; 0006 0051     if(tmp <= 365 && tmp >= 60)             /* if past 2/29 and a leap year then */
0044a6 940e c096 	CALL SUBOPT_0xBB
                +
0044a8 36ae     +CPI R26 , LOW ( 0x16E )
0044a9 e0e1     +LDI R30 , HIGH ( 0x16E )
0044aa 07be     +CPC R27 , R30
0044ab e0e0     +LDI R30 , BYTE3 ( 0x16E )
0044ac 078e     +CPC R24 , R30
0044ad e0e0     +LDI R30 , BYTE4 ( 0x16E )
0044ae 079e     +CPC R25 , R30
                 	__CPD2N 0x16E
0044af f428      	BRSH _0xC0006
0044b0 940e c096 	CALL SUBOPT_0xBB
0044b2 940e c09b 	CALL SUBOPT_0xBC
0044b4 f408      	BRSH _0xC0007
                 _0xC0006:
0044b5 c006      	RJMP _0xC0005
                 _0xC0007:
                 ; 0006 0052     jday++;                                 /* add a leap day */
0044b6 940e c0c8 	CALL SUBOPT_0xC4
0044b8 940e c0a8 	CALL SUBOPT_0xBE
0044ba 940e c0c3 	CALL SUBOPT_0xC3
                 ; 0006 0053     yrs += 1968;                            /* calculate year */
                 _0xC0005:
0044bc 940e c0b2 	CALL SUBOPT_0xC0
                +
0044be 55e0     +SUBI R30 , LOW ( - 1968 )
0044bf 4ff8     +SBCI R31 , HIGH ( - 1968 )
0044c0 4f6f     +SBCI R22 , BYTE3 ( - 1968 )
0044c1 4f7f     +SBCI R23 , BYTE4 ( - 1968 )
                 	__ADDD1N 1968
                +
0044c2 a3ee     +STD Y + 38 , R30
0044c3 a3ff     +STD Y + 38 + 1 , R31
0044c4 a768     +STD Y + 38 + 2 , R22
0044c5 a779     +STD Y + 38 + 3 , R23
                 	__PUTD1S 38
                 ; 0006 0054     for(mon = 12; mon > 0; mon--)
                +
0044c6 e0ec     +LDI R30 , LOW ( 0xC )
0044c7 e0f0     +LDI R31 , HIGH ( 0xC )
0044c8 e060     +LDI R22 , BYTE3 ( 0xC )
0044c9 e070     +LDI R23 , BYTE4 ( 0xC )
                 	__GETD1N 0xC
                +
0044ca a3ea     +STD Y + 34 , R30
0044cb a3fb     +STD Y + 34 + 1 , R31
0044cc a36c     +STD Y + 34 + 2 , R22
0044cd a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
                 _0xC0009:
                +
0044ce a1aa     +LDD R26 , Y + 34
0044cf a1bb     +LDD R27 , Y + 34 + 1
0044d0 a18c     +LDD R24 , Y + 34 + 2
0044d1 a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
0044d2 940e da89 	CALL __CPD02
0044d4 f010      	BRLO PC+3
0044d5 940c 4562 	JMP _0xC000A
                 ; 0006 0055     {
                 ; 0006 0056         switch(mon)
0044d7 940e c0cd 	CALL SUBOPT_0xC5
                 ; 0006 0057         {
                 ; 0006 0058             case 1:     tmp = 0;
0044d9 940e c0d2 	CALL SUBOPT_0xC6
0044db f431      	BRNE _0xC000E
0044dc e0e0      	LDI  R30,LOW(0)
                +
0044dd 8fea     +STD Y + 26 , R30
0044de 8feb     +STD Y + 26 + 1 , R30
0044df 8fec     +STD Y + 26 + 2 , R30
0044e0 8fed     +STD Y + 26 + 3 , R30
                 	__CLRD1S 26
                 ; 0006 0059                         break;
0044e1 c05b      	RJMP _0xC000D
                 ; 0006 005A             case 2:     tmp = 31;
                 _0xC000E:
0044e2 940e c0da 	CALL SUBOPT_0xC7
0044e4 f429      	BRNE _0xC000F
                +
0044e5 e1ef     +LDI R30 , LOW ( 0x1F )
0044e6 e0f0     +LDI R31 , HIGH ( 0x1F )
0044e7 e060     +LDI R22 , BYTE3 ( 0x1F )
0044e8 e070     +LDI R23 , BYTE4 ( 0x1F )
                 	__GETD1N 0x1F
0044e9 c04f      	RJMP _0xC004D
                 ; 0006 005B                         break;
                 ; 0006 005C             case 3:     tmp = 59;
                 _0xC000F:
0044ea 940e c0e2 	CALL SUBOPT_0xC8
0044ec f429      	BRNE _0xC0010
                +
0044ed e3eb     +LDI R30 , LOW ( 0x3B )
0044ee e0f0     +LDI R31 , HIGH ( 0x3B )
0044ef e060     +LDI R22 , BYTE3 ( 0x3B )
0044f0 e070     +LDI R23 , BYTE4 ( 0x3B )
                 	__GETD1N 0x3B
0044f1 c047      	RJMP _0xC004D
                 ; 0006 005D                         break;
                 ; 0006 005E             case 4:     tmp = 90;
                 _0xC0010:
0044f2 940e c0ea 	CALL SUBOPT_0xC9
0044f4 f429      	BRNE _0xC0011
                +
0044f5 e5ea     +LDI R30 , LOW ( 0x5A )
0044f6 e0f0     +LDI R31 , HIGH ( 0x5A )
0044f7 e060     +LDI R22 , BYTE3 ( 0x5A )
0044f8 e070     +LDI R23 , BYTE4 ( 0x5A )
                 	__GETD1N 0x5A
0044f9 c03f      	RJMP _0xC004D
                 ; 0006 005F                         break;
                 ; 0006 0060             case 5:     tmp = 120;
                 _0xC0011:
0044fa 940e c0f2 	CALL SUBOPT_0xCA
0044fc f429      	BRNE _0xC0012
                +
0044fd e7e8     +LDI R30 , LOW ( 0x78 )
0044fe e0f0     +LDI R31 , HIGH ( 0x78 )
0044ff e060     +LDI R22 , BYTE3 ( 0x78 )
004500 e070     +LDI R23 , BYTE4 ( 0x78 )
                 	__GETD1N 0x78
004501 c037      	RJMP _0xC004D
                 ; 0006 0061                         break;
                 ; 0006 0062             case 6:     tmp = 151;
                 _0xC0012:
004502 940e c0fa 	CALL SUBOPT_0xCB
004504 f429      	BRNE _0xC0013
                +
004505 e9e7     +LDI R30 , LOW ( 0x97 )
004506 e0f0     +LDI R31 , HIGH ( 0x97 )
004507 e060     +LDI R22 , BYTE3 ( 0x97 )
004508 e070     +LDI R23 , BYTE4 ( 0x97 )
                 	__GETD1N 0x97
004509 c02f      	RJMP _0xC004D
                 ; 0006 0063                         break;
                 ; 0006 0064             case 7:     tmp = 181;
                 _0xC0013:
00450a 940e c102 	CALL SUBOPT_0xCC
00450c f429      	BRNE _0xC0014
                +
00450d ebe5     +LDI R30 , LOW ( 0xB5 )
00450e e0f0     +LDI R31 , HIGH ( 0xB5 )
00450f e060     +LDI R22 , BYTE3 ( 0xB5 )
004510 e070     +LDI R23 , BYTE4 ( 0xB5 )
                 	__GETD1N 0xB5
004511 c027      	RJMP _0xC004D
                 ; 0006 0065                         break;
                 ; 0006 0066             case 8:     tmp = 212;
                 _0xC0014:
004512 940e c10a 	CALL SUBOPT_0xCD
004514 f429      	BRNE _0xC0015
                +
004515 ede4     +LDI R30 , LOW ( 0xD4 )
004516 e0f0     +LDI R31 , HIGH ( 0xD4 )
004517 e060     +LDI R22 , BYTE3 ( 0xD4 )
004518 e070     +LDI R23 , BYTE4 ( 0xD4 )
                 	__GETD1N 0xD4
004519 c01f      	RJMP _0xC004D
                 ; 0006 0067                         break;
                 ; 0006 0068             case 9:     tmp = 243;
                 _0xC0015:
00451a 940e c112 	CALL SUBOPT_0xCE
00451c f429      	BRNE _0xC0016
                +
00451d efe3     +LDI R30 , LOW ( 0xF3 )
00451e e0f0     +LDI R31 , HIGH ( 0xF3 )
00451f e060     +LDI R22 , BYTE3 ( 0xF3 )
004520 e070     +LDI R23 , BYTE4 ( 0xF3 )
                 	__GETD1N 0xF3
004521 c017      	RJMP _0xC004D
                 ; 0006 0069                         break;
                 ; 0006 006A             case 10:    tmp = 273;
                 _0xC0016:
004522 940e c11a 	CALL SUBOPT_0xCF
004524 f429      	BRNE _0xC0017
                +
004525 e1e1     +LDI R30 , LOW ( 0x111 )
004526 e0f1     +LDI R31 , HIGH ( 0x111 )
004527 e060     +LDI R22 , BYTE3 ( 0x111 )
004528 e070     +LDI R23 , BYTE4 ( 0x111 )
                 	__GETD1N 0x111
004529 c00f      	RJMP _0xC004D
                 ; 0006 006B                         break;
                 ; 0006 006C             case 11:    tmp = 304;
                 _0xC0017:
00452a 940e c122 	CALL SUBOPT_0xD0
00452c f429      	BRNE _0xC0018
                +
00452d e3e0     +LDI R30 , LOW ( 0x130 )
00452e e0f1     +LDI R31 , HIGH ( 0x130 )
00452f e060     +LDI R22 , BYTE3 ( 0x130 )
004530 e070     +LDI R23 , BYTE4 ( 0x130 )
                 	__GETD1N 0x130
004531 c007      	RJMP _0xC004D
                 ; 0006 006D                         break;
                 ; 0006 006E             case 12:    tmp = 334;
                 _0xC0018:
004532 940e c12a 	CALL SUBOPT_0xD1
004534 f441      	BRNE _0xC000D
                +
004535 e4ee     +LDI R30 , LOW ( 0x14E )
004536 e0f1     +LDI R31 , HIGH ( 0x14E )
004537 e060     +LDI R22 , BYTE3 ( 0x14E )
004538 e070     +LDI R23 , BYTE4 ( 0x14E )
                 	__GETD1N 0x14E
                 _0xC004D:
                +
004539 8fea     +STD Y + 26 , R30
00453a 8ffb     +STD Y + 26 + 1 , R31
00453b 8f6c     +STD Y + 26 + 2 , R22
00453c 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 006F                         break;
                 ; 0006 0070         }
                 _0xC000D:
                 ; 0006 0071         if((mon > 2) && !(yrs % 4))         /* adjust for leap year */
                +
00453d a1aa     +LDD R26 , Y + 34
00453e a1bb     +LDD R27 , Y + 34 + 1
00453f a18c     +LDD R24 , Y + 34 + 2
004540 a19d     +LDD R25 , Y + 34 + 3
                 	__GETD2S 34
004541 940e c132 	CALL SUBOPT_0xD2
004543 f020      	BRLO _0xC001B
004544 940e c0b2 	CALL SUBOPT_0xC0
004546 70e3      	ANDI R30,LOW(0x3)
004547 f009      	BREQ _0xC001C
                 _0xC001B:
004548 c008      	RJMP _0xC001A
                 _0xC001C:
                 ; 0006 0072         tmp++;
004549 940e c13a 	CALL SUBOPT_0xD3
00454b 940e c0a8 	CALL SUBOPT_0xBE
                +
00454d 8fea     +STD Y + 26 , R30
00454e 8ffb     +STD Y + 26 + 1 , R31
00454f 8f6c     +STD Y + 26 + 2 , R22
004550 8f7d     +STD Y + 26 + 3 , R23
                 	__PUTD1S 26
                 ; 0006 0073         if(jday >= tmp) break;
                 _0xC001A:
004551 940e c13a 	CALL SUBOPT_0xD3
004553 940e c13f 	CALL SUBOPT_0xD4
004555 940e da94 	CALL __CPD21
004557 f450      	BRSH _0xC000A
                 ; 0006 0074     }
004558 940e c0cd 	CALL SUBOPT_0xC5
00455a 9731      	SBIW R30,1
00455b 4060      	SBCI R22,0
00455c 4070      	SBCI R23,0
                +
00455d a3ea     +STD Y + 34 , R30
00455e a3fb     +STD Y + 34 + 1 , R31
00455f a36c     +STD Y + 34 + 2 , R22
004560 a37d     +STD Y + 34 + 3 , R23
                 	__PUTD1S 34
004561 cf6c      	RJMP _0xC0009
                 _0xC000A:
                 ; 0006 0075     day = jday - tmp + 1;                   /* calculate day in month */
004562 940e c096 	CALL SUBOPT_0xBB
004564 940e c0c8 	CALL SUBOPT_0xC4
004566 940e d89e 	CALL __SUBD12
004568 940e c144 	CALL SUBOPT_0xD5
00456a 940e c091 	CALL SUBOPT_0xBA
                 ; 0006 0076 
                 ; 0006 0077     rtcCov->year    = yrs;
00456c 940e c0b2 	CALL SUBOPT_0xC0
00456e a5aa      	LDD  R26,Y+42
00456f a5bb      	LDD  R27,Y+42+1
004570 940e d9ff 	CALL __PUTDP1
                 ; 0006 0078     rtcCov->month   = mon;
004572 940e c0cd 	CALL SUBOPT_0xC5
                +
004574 a5aa     +LDD R26 , Y + 42
004575 a5bb     +LDD R27 , Y + 42 + 1
004576 9614     +ADIW R26 , 4
004577 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,4
                 ; 0006 0079     rtcCov->date    = day;
004579 940e c0a3 	CALL SUBOPT_0xBD
                +
00457b a5aa     +LDD R26 , Y + 42
00457c a5bb     +LDD R27 , Y + 42 + 1
00457d 9618     +ADIW R26 , 8
00457e 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,8
                 ; 0006 007A     rtcCov->hour    = hrs;
004580 940e c149 	CALL SUBOPT_0xD6
                +
004582 a5aa     +LDD R26 , Y + 42
004583 a5bb     +LDD R27 , Y + 42 + 1
004584 961c     +ADIW R26 , 12
004585 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,12
                 ; 0006 007B     rtcCov->min     = min;
004587 940e be45 	CALL SUBOPT_0x60
                +
004589 a5aa     +LDD R26 , Y + 42
00458a a5bb     +LDD R27 , Y + 42 + 1
00458b 9650     +ADIW R26 , 16
00458c 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,16
                 ; 0006 007C     rtcCov->sec     = sec;
00458e 940e c14e 	CALL SUBOPT_0xD7
                +
004590 a5aa     +LDD R26 , Y + 42
004591 a5bb     +LDD R27 , Y + 42 + 1
004592 9654     +ADIW R26 , 20
004593 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 42,20
                 ; 0006 007D     rtcCov->day     = dow;
004595 01f8      	MOVW R30,R16
                +
004596 a5aa     +LDD R26 , Y + 42
004597 a5bb     +LDD R27 , Y + 42 + 1
004598 9658     +ADIW R26 , 24
004599 93ed     +ST X + , R30
00459a 93fc     +ST X , R31
                 	__PUTW1SNS 42,24
                 ; 0006 007E 
                 ; 0006 007F     return 0;
00459b 940e c153 	CALL SUBOPT_0xD8
00459d 96e0      	ADIW R28,48
00459e 9508      	RET
                 ; 0006 0080 }
                 ;/*============================================================*/
                 ;unsigned long int date_to_binary(struct rtc_structure rtcSrc)
                 ; 0006 0083 {
                 _date_to_binary:
                 ; 0006 0084     /* ---- convert date to elapsed days in binary ---- */
                 ; 0006 0085     unsigned long x;                                        // total second
                 ; 0006 0086 
                 ; 0006 0087     /* the following is broken down for clarity */
                 ; 0006 0088     x = (unsigned long)365 * (rtcSrc.year - 1970);          /* calculate number of days for previous years */
00459f 9724      	SBIW R28,4
                 ;	rtcSrc -> Y+4
                 ;	x -> Y+0
0045a0 940e bf59 	CALL SUBOPT_0x89
                +
0045a2 5be2     +SUBI R30 , LOW ( 1970 )
0045a3 40f7     +SBCI R31 , HIGH ( 1970 )
0045a4 4060     +SBCI R22 , BYTE3 ( 1970 )
0045a5 4070     +SBCI R23 , BYTE4 ( 1970 )
                 	__SUBD1N 1970
0045a6 940e c0b7 	CALL SUBOPT_0xC1
0045a8 940e c158 	CALL SUBOPT_0xD9
                 ; 0006 0089     x += ((rtcSrc.year - 1969) >> 2);                       /* add a day for each leap year */
0045aa 940e bf59 	CALL SUBOPT_0x89
                +
0045ac 5be1     +SUBI R30 , LOW ( 1969 )
0045ad 40f7     +SBCI R31 , HIGH ( 1969 )
0045ae 4060     +SBCI R22 , BYTE3 ( 1969 )
0045af 4070     +SBCI R23 , BYTE4 ( 1969 )
                 	__SUBD1N 1969
0045b0 940e d8fa 	CALL __LSRD1
0045b2 940e d8fa 	CALL __LSRD1
0045b4 940e c15b 	CALL SUBOPT_0xDA
                 ; 0006 008A     if((rtcSrc.month > 2) && (rtcSrc.year % 4 == 0))        /* add a day if current year is leap and past Feb 29th */
0045b6 940e c15d 	CALL SUBOPT_0xDB
0045b8 940e c132 	CALL SUBOPT_0xD2
0045ba f018      	BRLO _0xC001F
0045bb 81ec      	LDD  R30,Y+4
0045bc 70e3      	ANDI R30,LOW(0x3)
0045bd f009      	BREQ _0xC0020
                 _0xC001F:
0045be c006      	RJMP _0xC001E
                 _0xC0020:
                 ; 0006 008B         x++;
0045bf 940e bf4d 	CALL SUBOPT_0x87
0045c1 940e c0a8 	CALL SUBOPT_0xBE
0045c3 940e c158 	CALL SUBOPT_0xD9
                 ; 0006 008C 
                 ; 0006 008D     switch(rtcSrc.month)
                 _0xC001E:
0045c5 940e bdd3 	CALL SUBOPT_0x4F
                 ; 0006 008E     {
                 ; 0006 008F         case 1:     x += 0;
0045c7 940e c0d2 	CALL SUBOPT_0xC6
0045c9 f419      	BRNE _0xC0024
0045ca 940e bf4d 	CALL SUBOPT_0x87
0045cc c06d      	RJMP _0xC004E
                 ; 0006 0090                     break;
                 ; 0006 0091         case 2:     x += 31;
                 _0xC0024:
0045cd 940e c0da 	CALL SUBOPT_0xC7
0045cf f439      	BRNE _0xC0025
0045d0 940e bf4d 	CALL SUBOPT_0x87
                +
0045d2 5ee1     +SUBI R30 , LOW ( - 31 )
0045d3 4fff     +SBCI R31 , HIGH ( - 31 )
0045d4 4f6f     +SBCI R22 , BYTE3 ( - 31 )
0045d5 4f7f     +SBCI R23 , BYTE4 ( - 31 )
                 	__ADDD1N 31
0045d6 c063      	RJMP _0xC004E
                 ; 0006 0092                     break;
                 ; 0006 0093         case 3:     x += 59;
                 _0xC0025:
0045d7 940e c0e2 	CALL SUBOPT_0xC8
0045d9 f439      	BRNE _0xC0026
0045da 940e bf4d 	CALL SUBOPT_0x87
                +
0045dc 5ce5     +SUBI R30 , LOW ( - 59 )
0045dd 4fff     +SBCI R31 , HIGH ( - 59 )
0045de 4f6f     +SBCI R22 , BYTE3 ( - 59 )
0045df 4f7f     +SBCI R23 , BYTE4 ( - 59 )
                 	__ADDD1N 59
0045e0 c059      	RJMP _0xC004E
                 ; 0006 0094                     break;
                 ; 0006 0095         case 4:     x += 90;
                 _0xC0026:
0045e1 940e c0ea 	CALL SUBOPT_0xC9
0045e3 f439      	BRNE _0xC0027
0045e4 940e bf4d 	CALL SUBOPT_0x87
                +
0045e6 5ae6     +SUBI R30 , LOW ( - 90 )
0045e7 4fff     +SBCI R31 , HIGH ( - 90 )
0045e8 4f6f     +SBCI R22 , BYTE3 ( - 90 )
0045e9 4f7f     +SBCI R23 , BYTE4 ( - 90 )
                 	__ADDD1N 90
0045ea c04f      	RJMP _0xC004E
                 ; 0006 0096                     break;
                 ; 0006 0097         case 5:     x += 120;
                 _0xC0027:
0045eb 940e c0f2 	CALL SUBOPT_0xCA
0045ed f439      	BRNE _0xC0028
0045ee 940e bf4d 	CALL SUBOPT_0x87
                +
0045f0 58e8     +SUBI R30 , LOW ( - 120 )
0045f1 4fff     +SBCI R31 , HIGH ( - 120 )
0045f2 4f6f     +SBCI R22 , BYTE3 ( - 120 )
0045f3 4f7f     +SBCI R23 , BYTE4 ( - 120 )
                 	__ADDD1N 120
0045f4 c045      	RJMP _0xC004E
                 ; 0006 0098                     break;
                 ; 0006 0099         case 6:     x += 151;
                 _0xC0028:
0045f5 940e c0fa 	CALL SUBOPT_0xCB
0045f7 f439      	BRNE _0xC0029
0045f8 940e bf4d 	CALL SUBOPT_0x87
                +
0045fa 56e9     +SUBI R30 , LOW ( - 151 )
0045fb 4fff     +SBCI R31 , HIGH ( - 151 )
0045fc 4f6f     +SBCI R22 , BYTE3 ( - 151 )
0045fd 4f7f     +SBCI R23 , BYTE4 ( - 151 )
                 	__ADDD1N 151
0045fe c03b      	RJMP _0xC004E
                 ; 0006 009A                     break;
                 ; 0006 009B         case 7:     x += 181;
                 _0xC0029:
0045ff 940e c102 	CALL SUBOPT_0xCC
004601 f439      	BRNE _0xC002A
004602 940e bf4d 	CALL SUBOPT_0x87
                +
004604 54eb     +SUBI R30 , LOW ( - 181 )
004605 4fff     +SBCI R31 , HIGH ( - 181 )
004606 4f6f     +SBCI R22 , BYTE3 ( - 181 )
004607 4f7f     +SBCI R23 , BYTE4 ( - 181 )
                 	__ADDD1N 181
004608 c031      	RJMP _0xC004E
                 ; 0006 009C                     break;
                 ; 0006 009D         case 8:     x += 212;
                 _0xC002A:
004609 940e c10a 	CALL SUBOPT_0xCD
00460b f439      	BRNE _0xC002B
00460c 940e bf4d 	CALL SUBOPT_0x87
                +
00460e 52ec     +SUBI R30 , LOW ( - 212 )
00460f 4fff     +SBCI R31 , HIGH ( - 212 )
004610 4f6f     +SBCI R22 , BYTE3 ( - 212 )
004611 4f7f     +SBCI R23 , BYTE4 ( - 212 )
                 	__ADDD1N 212
004612 c027      	RJMP _0xC004E
                 ; 0006 009E                     break;
                 ; 0006 009F         case 9:     x += 243;
                 _0xC002B:
004613 940e c112 	CALL SUBOPT_0xCE
004615 f439      	BRNE _0xC002C
004616 940e bf4d 	CALL SUBOPT_0x87
                +
004618 50ed     +SUBI R30 , LOW ( - 243 )
004619 4fff     +SBCI R31 , HIGH ( - 243 )
00461a 4f6f     +SBCI R22 , BYTE3 ( - 243 )
00461b 4f7f     +SBCI R23 , BYTE4 ( - 243 )
                 	__ADDD1N 243
00461c c01d      	RJMP _0xC004E
                 ; 0006 00A0                     break;
                 ; 0006 00A1         case 10:    x += 273;
                 _0xC002C:
00461d 940e c11a 	CALL SUBOPT_0xCF
00461f f439      	BRNE _0xC002D
004620 940e bf4d 	CALL SUBOPT_0x87
                +
004622 5eef     +SUBI R30 , LOW ( - 273 )
004623 4ffe     +SBCI R31 , HIGH ( - 273 )
004624 4f6f     +SBCI R22 , BYTE3 ( - 273 )
004625 4f7f     +SBCI R23 , BYTE4 ( - 273 )
                 	__ADDD1N 273
004626 c013      	RJMP _0xC004E
                 ; 0006 00A2                     break;
                 ; 0006 00A3         case 11:    x += 304;
                 _0xC002D:
004627 940e c122 	CALL SUBOPT_0xD0
004629 f439      	BRNE _0xC002E
00462a 940e bf4d 	CALL SUBOPT_0x87
                +
00462c 5de0     +SUBI R30 , LOW ( - 304 )
00462d 4ffe     +SBCI R31 , HIGH ( - 304 )
00462e 4f6f     +SBCI R22 , BYTE3 ( - 304 )
00462f 4f7f     +SBCI R23 , BYTE4 ( - 304 )
                 	__ADDD1N 304
004630 c009      	RJMP _0xC004E
                 ; 0006 00A4                     break;
                 ; 0006 00A5         case 12:    x += 334;
                 _0xC002E:
004631 940e c12a 	CALL SUBOPT_0xD1
004633 f441      	BRNE _0xC0023
004634 940e bf4d 	CALL SUBOPT_0x87
                +
004636 5be2     +SUBI R30 , LOW ( - 334 )
004637 4ffe     +SBCI R31 , HIGH ( - 334 )
004638 4f6f     +SBCI R22 , BYTE3 ( - 334 )
004639 4f7f     +SBCI R23 , BYTE4 ( - 334 )
                 	__ADDD1N 334
                 _0xC004E:
00463a 940e da1a 	CALL __PUTD1S0
                 ; 0006 00A6                     break;
                 ; 0006 00A7     }
                 _0xC0023:
                 ; 0006 00A8 
                 ; 0006 00A9     x += rtcSrc.date - 1;                       /* finally, add the days into the current month */
00463c 940e c162 	CALL SUBOPT_0xDC
00463e 940e c167 	CALL SUBOPT_0xDD
004640 940e c15b 	CALL SUBOPT_0xDA
                 ; 0006 00AA     x = x * 86400;                              /* and calculate the number of seconds in all those days (1 day = 86400 second)*/
004642 940e bf4d 	CALL SUBOPT_0x87
                +
004644 e8a0     +LDI R26 , LOW ( 0x15180 )
004645 e5b1     +LDI R27 , HIGH ( 0x15180 )
004646 e081     +LDI R24 , BYTE3 ( 0x15180 )
004647 e090     +LDI R25 , BYTE4 ( 0x15180 )
                 	__GETD2N 0x15180
004648 940e d93a 	CALL __MULD12U
00464a 940e c158 	CALL SUBOPT_0xD9
                 ; 0006 00AB     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
00464c 940e c16c 	CALL SUBOPT_0xDE
                 ; 0006 00AC     x += (unsigned long)rtcSrc.hour * 1800;     /* add the number of seconds in the hours */
00464e 940e c16c 	CALL SUBOPT_0xDE
                 ; 0006 00AD     x += (unsigned long)rtcSrc.min * 60;        /* ditto the minutes */
004650 940e c174 	CALL SUBOPT_0xDF
004652 940e c06b 	CALL SUBOPT_0xB3
004654 940e c15b 	CALL SUBOPT_0xDA
                 ; 0006 00AE     x += rtcSrc.sec;                            /* finally, the seconds */
004656 940e c179 	CALL SUBOPT_0xE0
004658 940e c15b 	CALL SUBOPT_0xDA
                 ; 0006 00AF 
                 ; 0006 00B0     return(x);
00465a 940e bf4d 	CALL SUBOPT_0x87
00465c 966e      	ADIW R28,30
00465d 9508      	RET
                 ; 0006 00B1 }
                 ;/*============================================================*/
                 ;int RTC_setBinary(unsigned long int rtc_bin)
                 ; 0006 00B4 {
                 _RTC_setBinary:
                 ; 0006 00B5     unsigned long int rtc_current;
                 ; 0006 00B6     unsigned long int rtc_diff;
                 ; 0006 00B7     unsigned char a, b, c, d;
                 ; 0006 00B8 
                 ; 0006 00B9     rtc_current = DS1672_read();
00465e 940e da2e 	CALL __PUTPARD2
004660 9728      	SBIW R28,8
004661 940e da9b 	CALL __SAVELOCR4
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
004663 940e bdcc 	CALL SUBOPT_0x4E
                 ; 0006 00BA 
                 ; 0006 00BB     if(rtc_current > rtc_bin){
004665 940e c17e 	CALL SUBOPT_0xE1
004667 f418      	BRSH _0xC0030
                 ; 0006 00BC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
004668 940e c183 	CALL SUBOPT_0xE2
                 ; 0006 00BD     }
                 ; 0006 00BE     else if(rtc_bin > rtc_current){
00466a c00b      	RJMP _0xC0031
                 _0xC0030:
00466b 940e c188 	CALL SUBOPT_0xE3
00466d f418      	BRSH _0xC0032
                 ; 0006 00BF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
00466e 940e c18d 	CALL SUBOPT_0xE4
                 ; 0006 00C0     }
                 ; 0006 00C1     else{
004670 c005      	RJMP _0xC0033
                 _0xC0032:
                 ; 0006 00C2         // set value and current value are equal
                 ; 0006 00C3         //printDebug("\r\nset time and current time are equal\r\n");
                 ; 0006 00C4         rtc_diff = 0;
004671 e0e0      	LDI  R30,LOW(0)
                +
004672 83ec     +STD Y + 4 , R30
004673 83ed     +STD Y + 4 + 1 , R30
004674 83ee     +STD Y + 4 + 2 , R30
004675 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 00C5     }
                 _0xC0033:
                 _0xC0031:
                 ; 0006 00C6 
                 ; 0006 00C7     if((rtc_diff >= 0) && (rtc_diff < 10)){
004676 940e c043 	CALL SUBOPT_0xAB
004678 940e da85 	CALL __CPD20
00467a f018      	BRLO _0xC0035
00467b 940e c192 	CALL SUBOPT_0xE5
00467d f008      	BRLO _0xC0036
                 _0xC0035:
00467e c003      	RJMP _0xC0034
                 _0xC0036:
                 ; 0006 00C8         //printDebug("\r\nset time is too close to current time, not set!!!\r\n");
                 ; 0006 00C9         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 00CA         return -1;
00467f efef      	LDI  R30,LOW(65535)
004680 efff      	LDI  R31,HIGH(65535)
004681 c016      	RJMP _0x20E0095
                 ; 0006 00CB     }
                 ; 0006 00CC 
                 ; 0006 00CD     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC0034:
004682 940e c19b 	CALL SUBOPT_0xE6
004684 940e c1a0 	CALL SUBOPT_0xE7
004686 940e be6d 	CALL SUBOPT_0x66
                 ; 0006 00CE 
                 ; 0006 00CF     a = (rtc_bin & 0xff);
004688 940e c1a4 	CALL SUBOPT_0xE8
                 ; 0006 00D0     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 00D1     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 00D2     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 00D3 
                 ; 0006 00D4     #asm("cli")
00468a 94f8      	cli
                 ; 0006 00D5     i2c_start();
00468b 940e c02e 	CALL SUBOPT_0xA7
                 ; 0006 00D6     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 00D7     i2c_write(0x00);            /* write register address, 1st clock register */
00468d 940e c1b5 	CALL SUBOPT_0xE9
                 ; 0006 00D8     i2c_write(a);
                 ; 0006 00D9     i2c_write(b);
                 ; 0006 00DA     i2c_write(c);
                 ; 0006 00DB     i2c_write(d);
                 ; 0006 00DC     i2c_stop();
                 ; 0006 00DD     #asm("sei")
00468f 9478      	sei
                 ; 0006 00DE 
                 ; 0006 00DF     printDebug(">> RTC_setBinary RTC Sync.\r\n");
                +
004690 e0ef     +LDI R30 , LOW ( 2 * _0xC0000 + ( 41 ) )
004691 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 41 ) )
004692 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 41 ) )
004693 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 41 ) )
                 	__POINTD1FN _0xC0000,41
004694 940e bbba 	CALL SUBOPT_0x3
                 ; 0006 00E0 
                 ; 0006 00E1     /* 10ms delay to complete the write operation */
                 ; 0006 00E2     delay_ms(10);
004696 940e c037 	CALL SUBOPT_0xA9
                 ; 0006 00E3 
                 ; 0006 00E4     return 0;
                 _0x20E0095:
004698 940e daa2 	CALL __LOADLOCR4
00469a 9660      	ADIW R28,16
00469b 9508      	RET
                 ; 0006 00E5 }
                 ;/*============================================================*/
                 ;int RTC_setDateTime(struct rtc_structure rtcSrc,int timezone)
                 ; 0006 00E8 {
                 _RTC_setDateTime:
                 ; 0006 00E9     unsigned long int rtc_bin;
                 ; 0006 00EA     unsigned long int rtc_current;
                 ; 0006 00EB     unsigned long int rtc_diff;
                 ; 0006 00EC     unsigned char a, b, c, d;
                 ; 0006 00ED 
                 ; 0006 00EE     if((timezone > 14) || (timezone < -12)){
00469c 940e c1c3 	CALL SUBOPT_0xEA
                 ;	rtcSrc -> Y+18
                 ;	timezone -> Y+16
                 ;	rtc_bin -> Y+12
                 ;	rtc_current -> Y+8
                 ;	rtc_diff -> Y+4
                 ;	a -> R17
                 ;	b -> R16
                 ;	c -> R19
                 ;	d -> R18
00469e 89a8      	LDD  R26,Y+16
00469f 89b9      	LDD  R27,Y+16+1
0046a0 971f      	SBIW R26,15
0046a1 f434      	BRGE _0xC0038
0046a2 89a8      	LDD  R26,Y+16
0046a3 89b9      	LDD  R27,Y+16+1
0046a4 3fa4      	CPI  R26,LOW(0xFFF4)
0046a5 efef      	LDI  R30,HIGH(0xFFF4)
0046a6 07be      	CPC  R27,R30
0046a7 f45c      	BRGE _0xC0037
                 _0xC0038:
                 ; 0006 00EF         printDebug("<RTC_setDateTime> Timezone out of range (%+d)\r\n",timezone);
                +
0046a8 e2ec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 70 ) )
0046a9 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 70 ) )
0046aa e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 70 ) )
0046ab e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 70 ) )
                 	__POINTD1FN _0xC0000,70
0046ac 940e c1c9 	CALL SUBOPT_0xEB
0046ae 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0006 00F0         return -2;
0046b0 efee      	LDI  R30,LOW(65534)
0046b1 efff      	LDI  R31,HIGH(65534)
0046b2 c049      	RJMP _0x20E0094
                 ; 0006 00F1     }
                 ; 0006 00F2 
                 ; 0006 00F3     rtc_bin = date_to_binary(rtcSrc);
                 _0xC0037:
0046b3 01fe      	MOVW R30,R28
0046b4 9672      	ADIW R30,18
0046b5 e1aa      	LDI  R26,26
0046b6 940e da33 	CALL __PUTPARL
0046b8 dee6      	RCALL _date_to_binary
0046b9 940e c1d3 	CALL SUBOPT_0xED
                 ; 0006 00F4 
                 ; 0006 00F5     rtc_bin = rtc_bin + (int)(timezone * 60 * 60 * -1);
0046bb 89e8      	LDD  R30,Y+16
0046bc 89f9      	LDD  R31,Y+16+1
0046bd 940e c1d8 	CALL SUBOPT_0xEE
0046bf 940e c1d8 	CALL SUBOPT_0xEE
0046c1 efaf      	LDI  R26,LOW(65535)
0046c2 efbf      	LDI  R27,HIGH(65535)
0046c3 940e d960 	CALL __MULW12
0046c5 940e bbfc 	CALL SUBOPT_0xB
0046c7 940e c058 	CALL SUBOPT_0xAF
0046c9 940e c1dd 	CALL SUBOPT_0xEF
                 ; 0006 00F6 
                 ; 0006 00F7     raw_rtc = rtc_bin;
0046cb 940e c1df 	CALL SUBOPT_0xF0
                 ; 0006 00F8 
                 ; 0006 00F9     rtc_current = DS1672_read();
0046cd 940e bdcc 	CALL SUBOPT_0x4E
                 ; 0006 00FA 
                 ; 0006 00FB     if(rtc_current > rtc_bin){
0046cf 940e c17e 	CALL SUBOPT_0xE1
0046d1 f418      	BRSH _0xC003A
                 ; 0006 00FC         rtc_diff = (unsigned long int) (rtc_current - rtc_bin);
0046d2 940e c183 	CALL SUBOPT_0xE2
                 ; 0006 00FD     }
                 ; 0006 00FE     else if(rtc_bin > rtc_current){
0046d4 c00b      	RJMP _0xC003B
                 _0xC003A:
0046d5 940e c188 	CALL SUBOPT_0xE3
0046d7 f418      	BRSH _0xC003C
                 ; 0006 00FF         rtc_diff = (unsigned long int) (rtc_bin - rtc_current);
0046d8 940e c18d 	CALL SUBOPT_0xE4
                 ; 0006 0100     }
                 ; 0006 0101     else{
0046da c005      	RJMP _0xC003D
                 _0xC003C:
                 ; 0006 0102         // set value and current value are equal
                 ; 0006 0103         rtc_diff = 0;
0046db e0e0      	LDI  R30,LOW(0)
                +
0046dc 83ec     +STD Y + 4 , R30
0046dd 83ed     +STD Y + 4 + 1 , R30
0046de 83ee     +STD Y + 4 + 2 , R30
0046df 83ef     +STD Y + 4 + 3 , R30
                 	__CLRD1S 4
                 ; 0006 0104     }
                 _0xC003D:
                 _0xC003B:
                 ; 0006 0105 
                 ; 0006 0106     if((rtc_diff >= 0) && (rtc_diff < 10)){
0046e0 940e c043 	CALL SUBOPT_0xAB
0046e2 940e da85 	CALL __CPD20
0046e4 f018      	BRLO _0xC003F
0046e5 940e c192 	CALL SUBOPT_0xE5
0046e7 f008      	BRLO _0xC0040
                 _0xC003F:
0046e8 c003      	RJMP _0xC003E
                 _0xC0040:
                 ; 0006 0107         //printDebug("\r\nset time is too close to current time, not set!!! c[%ld] s[%ld]\r\n", rtc_current, rtc_bin);
                 ; 0006 0108         return -1;
0046e9 efef      	LDI  R30,LOW(65535)
0046ea efff      	LDI  R31,HIGH(65535)
0046eb c010      	RJMP _0x20E0094
                 ; 0006 0109     }
                 ; 0006 010A 
                 ; 0006 010B     printDebug("c_time[%ld] & s_time[%ld] => diff[%ld]\r\n",rtc_current,rtc_bin,rtc_diff);
                 _0xC003E:
0046ec 940e c19b 	CALL SUBOPT_0xE6
0046ee 940e c1a0 	CALL SUBOPT_0xE7
0046f0 940e be6d 	CALL SUBOPT_0x66
                 ; 0006 010C 
                 ; 0006 010D     a = (rtc_bin & 0xff);
0046f2 940e c1a4 	CALL SUBOPT_0xE8
                 ; 0006 010E     b = ((rtc_bin >> 8) & 0xff);
                 ; 0006 010F     c = ((rtc_bin >> 16) & 0xff);
                 ; 0006 0110     d = ((rtc_bin >> 24) & 0xff);
                 ; 0006 0111 
                 ; 0006 0112     #asm("cli")
0046f4 94f8      	cli
                 ; 0006 0113     i2c_start();
0046f5 940e c02e 	CALL SUBOPT_0xA7
                 ; 0006 0114     i2c_write(ADDRTC);          /* write slave address, write 1672 */
                 ; 0006 0115     i2c_write(0x00);            /* write register address, 1st clock register */
0046f7 940e c1b5 	CALL SUBOPT_0xE9
                 ; 0006 0116     i2c_write(a);
                 ; 0006 0117     i2c_write(b);
                 ; 0006 0118     i2c_write(c);
                 ; 0006 0119     i2c_write(d);
                 ; 0006 011A     i2c_stop();
                 ; 0006 011B     #asm("sei")
0046f9 9478      	sei
                 ; 0006 011C 
                 ; 0006 011D     /* 10ms delay to complete the write operation */
                 ; 0006 011E     delay_ms(10);
0046fa 940e c037 	CALL SUBOPT_0xA9
                 ; 0006 011F 
                 ; 0006 0120     return 0;
                 _0x20E0094:
0046fc 940e daa2 	CALL __LOADLOCR4
0046fe 96ac      	ADIW R28,44
0046ff 9508      	RET
                 ; 0006 0121 }
                 ;/*============================================================*/
                 ;int RTC_getDateTime(struct rtc_structure *rtcPtr, int timezone)
                 ; 0006 0124 {
                 _RTC_getDateTime:
                 ; 0006 0125     unsigned long r_rtc;
                 ; 0006 0126     int flag;
                 ; 0006 0127 
                 ; 0006 0128     r_rtc = DS1672_read();
004700 940e c1e8 	CALL SUBOPT_0xF1
004702 930a      	ST   -Y,R16
                 ;	*rtcPtr -> Y+8
                 ;	timezone -> Y+6
                 ;	r_rtc -> Y+2
                 ;	flag -> R16,R17
004703 dccf      	RCALL _DS1672_read
004704 940e c1ed 	CALL SUBOPT_0xF2
                 ; 0006 0129     if(r_rtc == 0xFFFFFFFF){
004706 940e bd3e 	CALL SUBOPT_0x3A
004708 f469      	BRNE _0xC0041
                 ; 0006 012A         flag    = RTC_BACKUP;
                +
004709 e001     +LDI R16 , LOW ( 1 )
00470a e010     +LDI R17 , HIGH ( 1 )
                 	__GETWRN 16,17,1
                 ; 0006 012B         r_rtc   = raw_rtc;
00470b 91e0 1430 	LDS  R30,_raw_rtc
00470d 91f0 1431 	LDS  R31,_raw_rtc+1
00470f 9160 1432 	LDS  R22,_raw_rtc+2
004711 9170 1433 	LDS  R23,_raw_rtc+3
004713 940e c072 	CALL SUBOPT_0xB4
                 ; 0006 012C     }
                 ; 0006 012D     else{
004715 c006      	RJMP _0xC0042
                 _0xC0041:
                 ; 0006 012E         flag    = RTC_REAL;
                +
004716 e000     +LDI R16 , LOW ( 0 )
004717 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 ; 0006 012F         raw_rtc = r_rtc;
004718 940e c077 	CALL SUBOPT_0xB5
00471a 940e c1df 	CALL SUBOPT_0xF0
                 ; 0006 0130     }
                 _0xC0042:
                 ; 0006 0131 
                 ; 0006 0132     r_rtc = r_rtc + (int)(timezone * 60 * 60);
00471c 81ee      	LDD  R30,Y+6
00471d 81ff      	LDD  R31,Y+6+1
00471e 940e c1d8 	CALL SUBOPT_0xEE
004720 940e c1d8 	CALL SUBOPT_0xEE
004722 940e c07c 	CALL SUBOPT_0xB6
004724 940e c058 	CALL SUBOPT_0xAF
004726 940e c072 	CALL SUBOPT_0xB4
                 ; 0006 0133 
                 ; 0006 0134     binary_to_date(r_rtc,rtcPtr);
004728 940e c1ef 	CALL SUBOPT_0xF3
00472a 85ac      	LDD  R26,Y+12
00472b 85bd      	LDD  R27,Y+12+1
00472c dce3      	RCALL _binary_to_date
                 ; 0006 0135 
                 ; 0006 0136     return flag;
00472d 01f8      	MOVW R30,R16
00472e 8119      	LDD  R17,Y+1
00472f 8108      	LDD  R16,Y+0
004730 962a      	ADIW R28,10
004731 9508      	RET
                 ; 0006 0137 }
                 ;/*============================================================*/
                 ;void printRTC(struct rtc_structure time)
                 ; 0006 013A {
                 _printRTC:
                 ; 0006 013B     switch(time.day){
                 ;	time -> Y+0
004732 8de8      	LDD  R30,Y+24
004733 8df9      	LDD  R31,Y+24+1
                 ; 0006 013C         case DAY_MON: printDebug("Mon. "); break;
004734 30e1      	CPI  R30,LOW(0x1)
004735 e0a0      	LDI  R26,HIGH(0x1)
004736 07fa      	CPC  R31,R26
004737 f429      	BRNE _0xC0046
                +
004738 e5ec     +LDI R30 , LOW ( 2 * _0xC0000 + ( 118 ) )
004739 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 118 ) )
00473a e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 118 ) )
00473b e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 118 ) )
                 	__POINTD1FN _0xC0000,118
00473c c035      	RJMP _0xC004F
                 ; 0006 013D         case DAY_TUE: printDebug("Tue. "); break;
                 _0xC0046:
00473d 30e2      	CPI  R30,LOW(0x2)
00473e e0a0      	LDI  R26,HIGH(0x2)
00473f 07fa      	CPC  R31,R26
004740 f429      	BRNE _0xC0047
                +
004741 e6e2     +LDI R30 , LOW ( 2 * _0xC0000 + ( 124 ) )
004742 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 124 ) )
004743 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 124 ) )
004744 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 124 ) )
                 	__POINTD1FN _0xC0000,124
004745 c02c      	RJMP _0xC004F
                 ; 0006 013E         case DAY_WED: printDebug("Wed. "); break;
                 _0xC0047:
004746 30e3      	CPI  R30,LOW(0x3)
004747 e0a0      	LDI  R26,HIGH(0x3)
004748 07fa      	CPC  R31,R26
004749 f429      	BRNE _0xC0048
                +
00474a e6e8     +LDI R30 , LOW ( 2 * _0xC0000 + ( 130 ) )
00474b e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 130 ) )
00474c e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 130 ) )
00474d e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 130 ) )
                 	__POINTD1FN _0xC0000,130
00474e c023      	RJMP _0xC004F
                 ; 0006 013F         case DAY_THU: printDebug("Thu. "); break;
                 _0xC0048:
00474f 30e4      	CPI  R30,LOW(0x4)
004750 e0a0      	LDI  R26,HIGH(0x4)
004751 07fa      	CPC  R31,R26
004752 f429      	BRNE _0xC0049
                +
004753 e6ee     +LDI R30 , LOW ( 2 * _0xC0000 + ( 136 ) )
004754 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 136 ) )
004755 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 136 ) )
004756 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 136 ) )
                 	__POINTD1FN _0xC0000,136
004757 c01a      	RJMP _0xC004F
                 ; 0006 0140         case DAY_FRI: printDebug("Fri. "); break;
                 _0xC0049:
004758 30e5      	CPI  R30,LOW(0x5)
004759 e0a0      	LDI  R26,HIGH(0x5)
00475a 07fa      	CPC  R31,R26
00475b f429      	BRNE _0xC004A
                +
00475c e7e4     +LDI R30 , LOW ( 2 * _0xC0000 + ( 142 ) )
00475d e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 142 ) )
00475e e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 142 ) )
00475f e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 142 ) )
                 	__POINTD1FN _0xC0000,142
004760 c011      	RJMP _0xC004F
                 ; 0006 0141         case DAY_SAT: printDebug("Sat. "); break;
                 _0xC004A:
004761 30e6      	CPI  R30,LOW(0x6)
004762 e0a0      	LDI  R26,HIGH(0x6)
004763 07fa      	CPC  R31,R26
004764 f429      	BRNE _0xC004B
                +
004765 e7ea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 148 ) )
004766 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 148 ) )
004767 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 148 ) )
004768 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 148 ) )
                 	__POINTD1FN _0xC0000,148
004769 c008      	RJMP _0xC004F
                 ; 0006 0142         case DAY_SUN: printDebug("Sun. "); break;
                 _0xC004B:
00476a 30e7      	CPI  R30,LOW(0x7)
00476b e0a0      	LDI  R26,HIGH(0x7)
00476c 07fa      	CPC  R31,R26
00476d f441      	BRNE _0xC0045
                +
00476e e8e0     +LDI R30 , LOW ( 2 * _0xC0000 + ( 154 ) )
00476f e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 154 ) )
004770 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 154 ) )
004771 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 154 ) )
                 	__POINTD1FN _0xC0000,154
                 _0xC004F:
004772 940e da29 	CALL __PUTPARD1
004774 940e bd21 	CALL SUBOPT_0x36
                 ; 0006 0143     }
                 _0xC0045:
                 ; 0006 0144 
                 ; 0006 0145     printDebug(
                 ; 0006 0146         "[%d]%04d-%02d-%02d %02d:%02d:%02d\r\n",
                 ; 0006 0147         time.day,
                 ; 0006 0148         time.year,
                 ; 0006 0149         time.month,
                 ; 0006 014A         time.date,
                 ; 0006 014B         time.hour,
                 ; 0006 014C         time.min,
                 ; 0006 014D         time.sec
                 ; 0006 014E     );
                +
004776 e8e6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 160 ) )
004777 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 160 ) )
004778 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 160 ) )
004779 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 160 ) )
                 	__POINTD1FN _0xC0000,160
00477a 940e c1f3 	CALL SUBOPT_0xF4
00477c 940e bd18 	CALL SUBOPT_0x34
00477e 940e bdd3 	CALL SUBOPT_0x4F
004780 940e be28 	CALL SUBOPT_0x5B
004782 940e c1f8 	CALL SUBOPT_0xF5
                +
004784 a1e8     +LDD R30 , Y + 32
004785 a1f9     +LDD R31 , Y + 32 + 1
004786 a16a     +LDD R22 , Y + 32 + 2
004787 a17b     +LDD R23 , Y + 32 + 3
                 	__GETD1S 32
004788 940e da29 	CALL __PUTPARD1
00478a 940e c1fc 	CALL SUBOPT_0xF6
                +
00478c a9e8     +LDD R30 , Y + 48
00478d a9f9     +LDD R31 , Y + 48 + 1
00478e a96a     +LDD R22 , Y + 48 + 2
00478f a97b     +LDD R23 , Y + 48 + 3
                 	__GETD1S 48
004790 940e da29 	CALL __PUTPARD1
004792 e18c      	LDI  R24,28
004793 940e 9ad2 	CALL _printDebug
004795 96a0      	ADIW R28,32
                 ; 0006 014F     return;
004796 c025      	RJMP _0x20E0093
                 ; 0006 0150 }
                 ;/*============================================================*/
                 ;void init_RTC(void)
                 ; 0006 0153 {
                 _init_RTC:
                 ; 0006 0154     struct rtc_structure rtcTest;
                 ; 0006 0155 
                 ; 0006 0156     raw_rtc = 0;            /* initial default time_value in RAM */
004797 976a      	SBIW R28,26
                 ;	rtcTest -> Y+0
004798 e0e0      	LDI  R30,LOW(0)
004799 93e0 1430 	STS  _raw_rtc,R30
00479b 93e0 1431 	STS  _raw_rtc+1,R30
00479d 93e0 1432 	STS  _raw_rtc+2,R30
00479f 93e0 1433 	STS  _raw_rtc+3,R30
                 ; 0006 0157 
                 ; 0006 0158     #asm("cli")
0047a1 94f8      	cli
                 ; 0006 0159     i2c_start();
0047a2 940e c02e 	CALL SUBOPT_0xA7
                 ; 0006 015A     i2c_write(ADDRTC);
                 ; 0006 015B     i2c_write(0x04);
0047a4 e0a4      	LDI  R26,LOW(4)
0047a5 940e d6c5 	CALL _i2c_write
                 ; 0006 015C     i2c_write(0x00);         /* enable the oscillator */
0047a7 e0a0      	LDI  R26,LOW(0)
0047a8 940e c033 	CALL SUBOPT_0xA8
                 ; 0006 015D     i2c_stop();
                 ; 0006 015E     #asm("sei")
0047aa 9478      	sei
                 ; 0006 015F 
                 ; 0006 0160     DS1672_trickerChargeEnable();
0047ab dc1a      	RCALL _DS1672_trickerChargeEnable
                 ; 0006 0161 
                 ; 0006 0162     RTC_getDateTime(&rtcTest,0);
0047ac 940e bbf5 	CALL SUBOPT_0x9
0047ae 940e c203 	CALL SUBOPT_0xF7
0047b0 df4f      	RCALL _RTC_getDateTime
                 ; 0006 0163 
                 ; 0006 0164     printDebug("Running with System Clock @ ");
                +
0047b1 eaea     +LDI R30 , LOW ( 2 * _0xC0000 + ( 196 ) )
0047b2 e1f2     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 196 ) )
0047b3 e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 196 ) )
0047b4 e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 196 ) )
                 	__POINTD1FN _0xC0000,196
0047b5 940e bbba 	CALL SUBOPT_0x3
                 ; 0006 0165 
                 ; 0006 0166     printRTC(rtcTest);
0047b7 01fe      	MOVW R30,R28
0047b8 e1aa      	LDI  R26,26
0047b9 940e da33 	CALL __PUTPARL
0047bb df76      	RCALL _printRTC
                 ; 0006 0167 }
                 _0x20E0093:
0047bc 966a      	ADIW R28,26
0047bd 9508      	RET
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;char is_properties_config_update                = 1;
                 
                 	.DSEG
                 ;char is_operating_config_update                 = 1;
                 ;char is_sensor_config_update[MAX_SENS_CHANNEL]  = {1,1,1,1,1};
                 ;char is_din_config_update[MAX_DI_CHANNEL]       = {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_dout_config_update[MAX_DO_CHANNEL]      = {1,1,1,1,1};//,1,1,1,1,1,1,1,1,1,1,1};
                 ;char is_buzzer_config_update                    = 1;
                 ;char is_status_config_update                    = 1;
                 ;char is_env_config_update                       = 1;
                 ;
                 ;struct prop_cnfg_st properties_config;
                 ;struct oper_cnfg_st operating_config;
                 ;struct sens_cnfg_st sensor_config[MAX_SENS_CHANNEL];
                 ;struct din_cnfg_st  din_config[MAX_DI_CHANNEL];
                 ;struct dout_cnfg_st dout_config[MAX_DO_CHANNEL];
                 ;struct buzz_cnfg_st buzz_config;
                 ;struct stat_cnfg_st status_config;
                 ;struct alm_cnfg_st  env_config;
                 ;
                 ;flash char FIRMWARE_VERSION[] = "iNT-ETH-0.24b";
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** Read Configuration from EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int getPropertiesConfig(struct prop_cnfg_st *readConfig)
                 ; 0007 0021 {
                 
                 	.CSEG
                 _getPropertiesConfig:
                 ; 0007 0022     int i;
                 ; 0007 0023 
                 ; 0007 0024     //printDebug("<getPropertiesConfig>..\r\n");
                 ; 0007 0025 
                 ; 0007 0026     if( config_prop_flag != 0x01){
0047be 940e bf27 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0047c0 e4a2      	LDI  R26,LOW(_config_prop_flag)
0047c1 e0b5      	LDI  R27,HIGH(_config_prop_flag)
0047c2 940e da50 	CALL __EEPROMRDB
0047c4 30e1      	CPI  R30,LOW(0x1)
0047c5 f0a9      	BREQ _0xE000B
                 ; 0007 0027         printDebug("<getPropertiesConfig> no configuration, use default\r\n");
                +
0047c6 eeee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 0 ) )
0047c7 e1f2     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 0 ) )
0047c8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 0 ) )
0047c9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 0 ) )
                 	__POINTD1FN _0xE0000,0
0047ca 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0028         memset(readConfig,0x00,sizeof(struct prop_cnfg_st));
0047cc 81ea      	LDD  R30,Y+2
0047cd 81fb      	LDD  R31,Y+2+1
0047ce 940e c206 	CALL SUBOPT_0xF8
0047d0 940e c20b 	CALL SUBOPT_0xF9
0047d2 940e a124 	CALL _memset
                 ; 0007 0029         readConfig->timeZone   = 7;
0047d4 81aa      	LDD  R26,Y+2
0047d5 81bb      	LDD  R27,Y+2+1
0047d6 56a0      	SUBI R26,LOW(-160)
0047d7 4fbf      	SBCI R27,HIGH(-160)
0047d8 e0e7      	LDI  R30,LOW(7)
0047d9 93ec      	ST   X,R30
                 ; 0007 002A     }
                 ; 0007 002B     else{
0047da c074      	RJMP _0xE000C
                 _0xE000B:
                 ; 0007 002C 
                 ; 0007 002D         for(i=0;i<DEVTYPE_LENGTH;i++)
                +
0047db e000     +LDI R16 , LOW ( 0 )
0047dc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE000E:
                +
0047dd 3104     +CPI R16 , LOW ( 20 )
0047de e0e0     +LDI R30 , HIGH ( 20 )
0047df 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0047e0 f47c      	BRGE _0xE000F
                 ; 0007 002E         {
                 ; 0007 002F             readConfig->deviceType[i]   = config_prop.deviceType[i];
0047e1 01f8      	MOVW R30,R16
0047e2 81aa      	LDD  R26,Y+2
0047e3 81bb      	LDD  R27,Y+2+1
0047e4 0fea      	ADD  R30,R26
0047e5 1ffb      	ADC  R31,R27
0047e6 010f      	MOVW R0,R30
0047e7 e0a0      	LDI  R26,LOW(_config_prop)
0047e8 e0b0      	LDI  R27,HIGH(_config_prop)
0047e9 940e c20e 	CALL SUBOPT_0xFA
0047eb 01d0      	MOVW R26,R0
0047ec 93ec      	ST   X,R30
                 ; 0007 0030         }
                +
0047ed 5f0f     +SUBI R16 , LOW ( - 1 )
0047ee 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0047ef cfed      	RJMP _0xE000E
                 _0xE000F:
                 ; 0007 0031 
                 ; 0007 0032         /*
                 ; 0007 0033         for(i=0;i<FW_LENGTH;i++)
                 ; 0007 0034         {
                 ; 0007 0035             //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 0036             readConfig->firmwareVersion[i]   = config_prop.firmwareVersion[i];
                 ; 0007 0037         }
                 ; 0007 0038         */
                 ; 0007 0039         memcpyf(readConfig->firmwareVersion,FIRMWARE_VERSION,strlenf(FIRMWARE_VERSION));
0047f0 81ea      	LDD  R30,Y+2
0047f1 81fb      	LDD  R31,Y+2+1
0047f2 9674      	ADIW R30,20
0047f3 93fa      	ST   -Y,R31
0047f4 93ea      	ST   -Y,R30
                +
0047f5 eee4     +LDI R30 , LOW ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0047f6 e0f0     +LDI R31 , HIGH ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0047f7 e060     +LDI R22 , BYTE3 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
0047f8 e070     +LDI R23 , BYTE4 ( 2 * _FIRMWARE_VERSION + ( 0 ) )
                 	__POINTD1FN _FIRMWARE_VERSION,0
0047f9 940e da29 	CALL __PUTPARD1
0047fb eea4      	LDI  R26,LOW(_FIRMWARE_VERSION*2)
0047fc e0b0      	LDI  R27,HIGH(_FIRMWARE_VERSION*2)
0047fd e080      	LDI  R24,BYTE3(_FIRMWARE_VERSION*2)
0047fe 940e a177 	CALL _strlenf
004800 01df      	MOVW R26,R30
004801 940e a0f1 	CALL _memcpyf
                 ; 0007 003A 
                 ; 0007 003B         for(i=0;i<NAME_LENGTH;i++)
                +
004803 e000     +LDI R16 , LOW ( 0 )
004804 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0011:
                +
004805 3208     +CPI R16 , LOW ( 40 )
004806 e0e0     +LDI R30 , HIGH ( 40 )
004807 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004808 f46c      	BRGE _0xE0012
                 ; 0007 003C         {
                 ; 0007 003D             readConfig->deviceName[i]   = config_prop.deviceName[i];
004809 81ea      	LDD  R30,Y+2
00480a 81fb      	LDD  R31,Y+2+1
00480b 96b8      	ADIW R30,40
00480c 0fe0      	ADD  R30,R16
00480d 1ff1      	ADC  R31,R17
00480e 010f      	MOVW R0,R30
                +
00480f e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004810 e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004811 940e c213 	CALL SUBOPT_0xFB
                 ; 0007 003E         }
                +
004813 5f0f     +SUBI R16 , LOW ( - 1 )
004814 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004815 cfef      	RJMP _0xE0011
                 _0xE0012:
                 ; 0007 003F 
                 ; 0007 0040         for(i=0;i<ID_LENGTH;i++)
                +
004816 e000     +LDI R16 , LOW ( 0 )
004817 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0014:
                +
004818 3104     +CPI R16 , LOW ( 20 )
004819 e0e0     +LDI R30 , HIGH ( 20 )
00481a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00481b f454      	BRGE _0xE0015
                 ; 0007 0041         {
                 ; 0007 0042             readConfig->deviceID[i]   = config_prop.deviceID[i];
00481c 940e c21b 	CALL SUBOPT_0xFC
00481e 010f      	MOVW R0,R30
                +
00481f e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004820 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004821 940e c213 	CALL SUBOPT_0xFB
                 ; 0007 0043         }
                +
004823 5f0f     +SUBI R16 , LOW ( - 1 )
004824 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004825 cff2      	RJMP _0xE0014
                 _0xE0015:
                 ; 0007 0044 
                 ; 0007 0045         for(i=0;i<NAME_LENGTH;i++)
                +
004826 e000     +LDI R16 , LOW ( 0 )
004827 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0017:
                +
004828 3208     +CPI R16 , LOW ( 40 )
004829 e0e0     +LDI R30 , HIGH ( 40 )
00482a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
00482b f454      	BRGE _0xE0018
                 ; 0007 0046         {
                 ; 0007 0047             readConfig->hostName[i]   = config_prop.hostName[i];
00482c 940e c222 	CALL SUBOPT_0xFD
00482e 010f      	MOVW R0,R30
                +
00482f e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004830 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004831 940e c213 	CALL SUBOPT_0xFB
                 ; 0007 0048         }
                +
004833 5f0f     +SUBI R16 , LOW ( - 1 )
004834 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004835 cff2      	RJMP _0xE0017
                 _0xE0018:
                 ; 0007 0049 
                 ; 0007 004A         for(i=0;i<ID_LENGTH;i++)
                +
004836 e000     +LDI R16 , LOW ( 0 )
004837 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE001A:
                +
004838 3104     +CPI R16 , LOW ( 20 )
004839 e0e0     +LDI R30 , HIGH ( 20 )
00483a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
00483b f454      	BRGE _0xE001B
                 ; 0007 004B         {
                 ; 0007 004C             readConfig->hostID[i]   = config_prop.hostID[i];
00483c 940e c229 	CALL SUBOPT_0xFE
00483e 010f      	MOVW R0,R30
                +
00483f e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004840 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004841 940e c213 	CALL SUBOPT_0xFB
                 ; 0007 004D         }
                +
004843 5f0f     +SUBI R16 , LOW ( - 1 )
004844 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004845 cff2      	RJMP _0xE001A
                 _0xE001B:
                 ; 0007 004E 
                 ; 0007 004F         readConfig->timeZone   = config_prop.timeZone;
                +
004846 eaa0     +LDI R26 , LOW ( _config_prop + ( 160 ) )
004847 e0b0     +LDI R27 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW2MN _config_prop,160
004848 940e da50 	CALL __EEPROMRDB
                +
00484a 81aa     +LDD R26 , Y + 2
00484b 81bb     +LDD R27 , Y + 2 + 1
00484c 56a0     +SUBI R26 , LOW ( - 160 )
00484d 4fbf     +SBCI R27 , HIGH ( - 160 )
00484e 93ec     +ST X , R30
                 	__PUTB1SN 2,160
                 ; 0007 0050     }
                 _0xE000C:
                 ; 0007 0051     return 0;
00484f 940e c153 	CALL SUBOPT_0xD8
004851 9624      	ADIW R28,4
004852 9508      	RET
                 ; 0007 0052 }
                 ;/*============================================================*/
                 ;int getOperatingConfig(struct oper_cnfg_st *readConfig)
                 ; 0007 0055 {
                 _getOperatingConfig:
                 ; 0007 0056     int i;
                 ; 0007 0057 
                 ; 0007 0058     if( config_oper_flag != 0x01){
004853 940e bf27 	CALL SUBOPT_0x81
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004855 e4a3      	LDI  R26,LOW(_config_oper_flag)
004856 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004857 940e da50 	CALL __EEPROMRDB
004859 30e1      	CPI  R30,LOW(0x1)
00485a f0d1      	BREQ _0xE001C
                 ; 0007 0059         printDebug("<getOperatingConfig> no configuration, use default\r\n");
                +
00485b e2e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 54 ) )
00485c e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 54 ) )
00485d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 54 ) )
00485e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 54 ) )
                 	__POINTD1FN _0xE0000,54
00485f 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 005A 
                 ; 0007 005B         readConfig->mode                    =   MODE_DATALOGGER;
004861 81aa      	LDD  R26,Y+2
004862 81bb      	LDD  R27,Y+2+1
004863 e2e0      	LDI  R30,LOW(32)
004864 940e c230 	CALL SUBOPT_0xFF
                 ; 0007 005C         readConfig->deviceEnable            =   0x00;
004866 e0e0      	LDI  R30,LOW(0)
004867 940e c235 	CALL SUBOPT_0x100
                 ; 0007 005D         readConfig->alarmEnable             =   0x00;
                 ; 0007 005E 
                 ; 0007 005F         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 _0xE001E:
                +
004869 3005     +CPI R16 , LOW ( 5 )
00486a e0e0     +LDI R30 , HIGH ( 5 )
00486b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
00486c f43c      	BRGE _0xE001F
                 ; 0007 0060         {
                 ; 0007 0061             readConfig->sensorEnable[i]     =   0x00;
00486d 940e c23e 	CALL SUBOPT_0x101
00486f e0a0      	LDI  R26,LOW(0)
004870 83a0      	STD  Z+0,R26
                 ; 0007 0062         }
                +
004871 5f0f     +SUBI R16 , LOW ( - 1 )
004872 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004873 cff5      	RJMP _0xE001E
                 _0xE001F:
                 ; 0007 0063 
                 ; 0007 0064         /* // -- for test -- //
                 ; 0007 0065         readConfig->mode                    =   MODE_REALTIME;
                 ; 0007 0066         readConfig->deviceEnable            =   0x01;
                 ; 0007 0067         readConfig->alarmEnable             =   0x01;
                 ; 0007 0068 
                 ; 0007 0069         for(i=0;i<MAX_SENS_CHANNEL;i++)
                 ; 0007 006A         {
                 ; 0007 006B             if(i==0){
                 ; 0007 006C                 readConfig->sensorEnable[i]     =   0x01;
                 ; 0007 006D             }
                 ; 0007 006E             else{
                 ; 0007 006F                 readConfig->sensorEnable[i]     =   0x00;
                 ; 0007 0070             }
                 ; 0007 0071         }
                 ; 0007 0072         */
                 ; 0007 0073     }
                 ; 0007 0074     else{
004874 c01c      	RJMP _0xE0020
                 _0xE001C:
                 ; 0007 0075         readConfig->mode                    =   config_oper.mode;
004875 eaa1      	LDI  R26,LOW(_config_oper)
004876 e0b0      	LDI  R27,HIGH(_config_oper)
004877 940e c244 	CALL SUBOPT_0x102
                 ; 0007 0076         readConfig->deviceEnable            =   config_oper.deviceEnable;
                +
004879 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
00487a e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
00487b 940e c24a 	CALL SUBOPT_0x103
                 ; 0007 0077         readConfig->alarmEnable             =   config_oper.alarmEnable;
                +
00487d eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
00487e e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
00487f 940e c251 	CALL SUBOPT_0x104
                 ; 0007 0078 
                 ; 0007 0079         for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004881 e000     +LDI R16 , LOW ( 0 )
004882 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0022:
                +
004883 3005     +CPI R16 , LOW ( 5 )
004884 e0e0     +LDI R30 , HIGH ( 5 )
004885 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004886 f454      	BRGE _0xE0023
                 ; 0007 007A         {
                 ; 0007 007B             readConfig->sensorEnable[i]     =   config_oper.sensorEnable[i];
004887 940e c23e 	CALL SUBOPT_0x101
004889 010f      	MOVW R0,R30
                +
00488a eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
00488b e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
00488c 940e c213 	CALL SUBOPT_0xFB
                 ; 0007 007C         }
                +
00488e 5f0f     +SUBI R16 , LOW ( - 1 )
00488f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004890 cff2      	RJMP _0xE0022
                 _0xE0023:
                 ; 0007 007D     }
                 _0xE0020:
                 ; 0007 007E 
                 ; 0007 007F 
                 ; 0007 0080     printDebug("<getOperatingConfig> mode            >> 0x%02X\r\n",readConfig->mode);
                +
004891 e5e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 107 ) )
004892 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 107 ) )
004893 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 107 ) )
004894 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 107 ) )
                 	__POINTD1FN _0xE0000,107
004895 940e c258 	CALL SUBOPT_0x105
                 ; 0007 0081     printDebug("<getOperatingConfig> deviceEnable    >> 0x%02X\r\n",readConfig->deviceEnable);
                +
004897 e8ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 156 ) )
004898 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 156 ) )
004899 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 156 ) )
00489a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 156 ) )
                 	__POINTD1FN _0xE0000,156
00489b 940e c25e 	CALL SUBOPT_0x106
00489d 81e1      	LDD  R30,Z+1
00489e 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0082     printDebug("<getOperatingConfig> alarmEnable     >> 0x%02X\r\n",readConfig->alarmEnable);
                +
0048a0 ebeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 205 ) )
0048a1 e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 205 ) )
0048a2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 205 ) )
0048a3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 205 ) )
                 	__POINTD1FN _0xE0000,205
0048a4 940e c25e 	CALL SUBOPT_0x106
0048a6 81e2      	LDD  R30,Z+2
0048a7 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0083     printDebug("<getOperatingConfig> sensorEnable    >> ");
                +
0048a9 eeec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 254 ) )
0048aa e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 254 ) )
0048ab e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 254 ) )
0048ac e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 254 ) )
                 	__POINTD1FN _0xE0000,254
0048ad 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0084 
                 ; 0007 0085     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
0048af e000     +LDI R16 , LOW ( 0 )
0048b0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0025:
                +
0048b1 3005     +CPI R16 , LOW ( 5 )
0048b2 e0e0     +LDI R30 , HIGH ( 5 )
0048b3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0048b4 f43c      	BRGE _0xE0026
                 ; 0007 0086     {
                 ; 0007 0087         printDebug("[0x%02X]",readConfig->sensorEnable[i]);
0048b5 940e c263 	CALL SUBOPT_0x107
0048b7 940e c268 	CALL SUBOPT_0x108
                 ; 0007 0088     }
                +
0048b9 5f0f     +SUBI R16 , LOW ( - 1 )
0048ba 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0048bb cff5      	RJMP _0xE0025
                 _0xE0026:
                 ; 0007 0089     printDebug("\r\n");
0048bc 940e c26d 	CALL SUBOPT_0x109
                 ; 0007 008A 
                 ; 0007 008B     return 0;
0048be 940e c153 	CALL SUBOPT_0xD8
0048c0 c4e6      	RJMP _0x20E008E
                 ; 0007 008C }
                 ;/*============================================================*/
                 ;int getSensorConfig(int ch, struct sens_cnfg_st *readConfig)
                 ; 0007 008F {
                 _getSensorConfig:
                 ; 0007 0090     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
0048c1 940e c272 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
0048c3 f022      	BRMI _0xE0028
0048c4 81aa      	LDD  R26,Y+2
0048c5 81bb      	LDD  R27,Y+2+1
0048c6 9715      	SBIW R26,5
0048c7 f04c      	BRLT _0xE0027
                 _0xE0028:
                 ; 0007 0091         printDebug("<getSensorConfig> sensor channel out of range (%d)\r\n",ch);
                +
0048c8 e1ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 304 ) )
0048c9 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 304 ) )
0048ca e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 304 ) )
0048cb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 304 ) )
                 	__POINTD1FN _0xE0000,304
0048cc 940e c25e 	CALL SUBOPT_0x106
0048ce 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0007 0092         return -1;
0048d0 c4d4      	RJMP _0x20E008F
                 ; 0007 0093     }
                 ; 0007 0094 
                 ; 0007 0095     if( config_sens_flag[ch] != 0x01){
                 _0xE0027:
0048d1 81aa      	LDD  R26,Y+2
0048d2 81bb      	LDD  R27,Y+2+1
0048d3 5bac      	SUBI R26,LOW(-_config_sens_flag)
0048d4 4fba      	SBCI R27,HIGH(-_config_sens_flag)
0048d5 940e da50 	CALL __EEPROMRDB
0048d7 30e1      	CPI  R30,LOW(0x1)
0048d8 f411      	BRNE PC+3
0048d9 940c 4922 	JMP _0xE002A
                 ; 0007 0096         printDebug("<getSensorConfig> no configuration, use default\r\n");
                +
0048db e5e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 357 ) )
0048dc e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 357 ) )
0048dd e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 357 ) )
0048de e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 357 ) )
                 	__POINTD1FN _0xE0000,357
0048df 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0097         readConfig->samplingRate        =   300;
0048e1 81a8      	LD   R26,Y
0048e2 81b9      	LDD  R27,Y+1
0048e3 e2ec      	LDI  R30,LOW(300)
0048e4 e0f1      	LDI  R31,HIGH(300)
0048e5 940e c277 	CALL SUBOPT_0x10B
                 ; 0007 0098         readConfig->reOccurrence        =   0x8000;
0048e7 9612      	ADIW R26,2
0048e8 e0e0      	LDI  R30,LOW(32768)
0048e9 e8f0      	LDI  R31,HIGH(32768)
0048ea 940e c277 	CALL SUBOPT_0x10B
                 ; 0007 0099         readConfig->timeStartHour       =   0;
0048ec 9614      	ADIW R26,4
0048ed 940e c27c 	CALL SUBOPT_0x10C
                 ; 0007 009A         readConfig->timeStartMin        =   0;
0048ef 9615      	ADIW R26,5
0048f0 940e c27c 	CALL SUBOPT_0x10C
                 ; 0007 009B         readConfig->timeStopHour        =   0;
0048f2 9616      	ADIW R26,6
0048f3 940e c27c 	CALL SUBOPT_0x10C
                 ; 0007 009C         readConfig->timeStopMin         =   0;
0048f5 9617      	ADIW R26,7
0048f6 940e c27c 	CALL SUBOPT_0x10C
                 ; 0007 009D 
                 ; 0007 009E         readConfig->alarmEnable         =   0x00;
0048f8 9618      	ADIW R26,8
0048f9 940e c27c 	CALL SUBOPT_0x10C
                 ; 0007 009F         readConfig->lowerLimit          =   10.0;
0048fb 9619      	ADIW R26,9
0048fc 940e c281 	CALL SUBOPT_0x10D
0048fe 940e d9ff 	CALL __PUTDP1
                 ; 0007 00A0         readConfig->lowerDelay          =   20;
004900 81a8      	LD   R26,Y
004901 81b9      	LDD  R27,Y+1
004902 961d      	ADIW R26,13
004903 e1e4      	LDI  R30,LOW(20)
004904 e0f0      	LDI  R31,HIGH(20)
004905 940e c277 	CALL SUBOPT_0x10B
                 ; 0007 00A1         readConfig->lowerExtreme        =   0.0;
004907 961f      	ADIW R26,15
004908 940e bf79 	CALL SUBOPT_0x8F
                 ; 0007 00A2         readConfig->upperLimit          =   180.0;
00490a 81a8      	LD   R26,Y
00490b 81b9      	LDD  R27,Y+1
00490c 9653      	ADIW R26,19
                +
00490d e0e0     +LDI R30 , LOW ( 0x43340000 )
00490e e0f0     +LDI R31 , HIGH ( 0x43340000 )
00490f e364     +LDI R22 , BYTE3 ( 0x43340000 )
004910 e473     +LDI R23 , BYTE4 ( 0x43340000 )
                 	__GETD1N 0x43340000
004911 940e d9ff 	CALL __PUTDP1
                 ; 0007 00A3         readConfig->upperDelay          =   20;
004913 81a8      	LD   R26,Y
004914 81b9      	LDD  R27,Y+1
004915 9657      	ADIW R26,23
004916 e1e4      	LDI  R30,LOW(20)
004917 e0f0      	LDI  R31,HIGH(20)
004918 940e c277 	CALL SUBOPT_0x10B
                 ; 0007 00A4         readConfig->upperExtreme        =   200.0;
00491a 9659      	ADIW R26,25
                +
00491b e0e0     +LDI R30 , LOW ( 0x43480000 )
00491c e0f0     +LDI R31 , HIGH ( 0x43480000 )
00491d e468     +LDI R22 , BYTE3 ( 0x43480000 )
00491e e473     +LDI R23 , BYTE4 ( 0x43480000 )
                 	__GETD1N 0x43480000
00491f 940e d9ff 	CALL __PUTDP1
                 ; 0007 00A5         /*
                 ; 0007 00A6         readConfig->alarmEnable         =   0x00;
                 ; 0007 00A7         readConfig->lowerLimit          =   0.0;
                 ; 0007 00A8         readConfig->lowerDelay          =   10;
                 ; 0007 00A9         readConfig->lowerExtreme        =   0.0;
                 ; 0007 00AA         readConfig->upperLimit          =   0.0;
                 ; 0007 00AB         readConfig->upperDelay          =   10;
                 ; 0007 00AC         readConfig->upperExtreme        =   0.0;
                 ; 0007 00AD         */
                 ; 0007 00AE     }
                 ; 0007 00AF     else{
004921 c084      	RJMP _0xE002B
                 _0xE002A:
                 ; 0007 00B0         readConfig->samplingRate        =   config_sens[ch].samplingRate;
004922 940e c286 	CALL SUBOPT_0x10E
004924 55e7      	SUBI R30,LOW(-_config_sens)
004925 4fff      	SBCI R31,HIGH(-_config_sens)
004926 01df      	MOVW R26,R30
004927 940e da4c 	CALL __EEPROMRDW
004929 81a8      	LD   R26,Y
00492a 81b9      	LDD  R27,Y+1
00492b 93ed      	ST   X+,R30
00492c 93fc      	ST   X,R31
                 ; 0007 00B1         readConfig->reOccurrence        =   config_sens[ch].reOccurrence;
00492d 940e c286 	CALL SUBOPT_0x10E
                +
00492f 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004930 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004931 01df      	MOVW R26,R30
004932 940e da4c 	CALL __EEPROMRDW
                +
004934 81a8     +LDD R26 , Y + 0
004935 81b9     +LDD R27 , Y + 0 + 1
004936 9612     +ADIW R26 , 2
004937 93ed     +ST X + , R30
004938 93fc     +ST X , R31
                 	__PUTW1SNS 0,2
                 ; 0007 00B2         readConfig->timeStartHour       =   config_sens[ch].timeStartHour;
004939 940e c286 	CALL SUBOPT_0x10E
                +
00493b 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
00493c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
00493d 01df      	MOVW R26,R30
00493e 940e da50 	CALL __EEPROMRDB
                +
004940 81a8     +LDD R26 , Y + 0
004941 81b9     +LDD R27 , Y + 0 + 1
004942 9614     +ADIW R26 , 4
004943 93ec     +ST X , R30
                 	__PUTB1SNS 0,4
                 ; 0007 00B3         readConfig->timeStartMin        =   config_sens[ch].timeStartMin;
004944 940e c286 	CALL SUBOPT_0x10E
                +
004946 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004947 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004948 01df      	MOVW R26,R30
004949 940e da50 	CALL __EEPROMRDB
                +
00494b 81a8     +LDD R26 , Y + 0
00494c 81b9     +LDD R27 , Y + 0 + 1
00494d 9615     +ADIW R26 , 5
00494e 93ec     +ST X , R30
                 	__PUTB1SNS 0,5
                 ; 0007 00B4         readConfig->timeStopHour        =   config_sens[ch].timeStopHour;
00494f 940e c286 	CALL SUBOPT_0x10E
                +
004951 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004952 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004953 01df      	MOVW R26,R30
004954 940e da50 	CALL __EEPROMRDB
                +
004956 81a8     +LDD R26 , Y + 0
004957 81b9     +LDD R27 , Y + 0 + 1
004958 9616     +ADIW R26 , 6
004959 93ec     +ST X , R30
                 	__PUTB1SNS 0,6
                 ; 0007 00B5         readConfig->timeStopMin         =   config_sens[ch].timeStopMin;
00495a 940e c286 	CALL SUBOPT_0x10E
                +
00495c 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
00495d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
00495e 01df      	MOVW R26,R30
00495f 940e da50 	CALL __EEPROMRDB
                +
004961 81a8     +LDD R26 , Y + 0
004962 81b9     +LDD R27 , Y + 0 + 1
004963 9617     +ADIW R26 , 7
004964 93ec     +ST X , R30
                 	__PUTB1SNS 0,7
                 ; 0007 00B6 
                 ; 0007 00B7         readConfig->alarmEnable         =   config_sens[ch].alarmEnable;
004965 940e c286 	CALL SUBOPT_0x10E
                +
004967 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004968 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004969 01df      	MOVW R26,R30
00496a 940e da50 	CALL __EEPROMRDB
                +
00496c 81a8     +LDD R26 , Y + 0
00496d 81b9     +LDD R27 , Y + 0 + 1
00496e 9618     +ADIW R26 , 8
00496f 93ec     +ST X , R30
                 	__PUTB1SNS 0,8
                 ; 0007 00B8         readConfig->lowerLimit          =   config_sens[ch].lowerLimit;
004970 940e c286 	CALL SUBOPT_0x10E
004972 940e c28c 	CALL SUBOPT_0x10F
                +
004974 81a8     +LDD R26 , Y + 0
004975 81b9     +LDD R27 , Y + 0 + 1
004976 9619     +ADIW R26 , 9
004977 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,9
                 ; 0007 00B9         readConfig->lowerDelay          =   config_sens[ch].lowerDelay;
004979 940e c286 	CALL SUBOPT_0x10E
00497b 940e c292 	CALL SUBOPT_0x110
                +
00497d 81a8     +LDD R26 , Y + 0
00497e 81b9     +LDD R27 , Y + 0 + 1
00497f 961d     +ADIW R26 , 13
004980 93ed     +ST X + , R30
004981 93fc     +ST X , R31
                 	__PUTW1SNS 0,13
                 ; 0007 00BA         readConfig->lowerExtreme        =   config_sens[ch].lowerExtreme;
004982 940e c286 	CALL SUBOPT_0x10E
004984 940e c298 	CALL SUBOPT_0x111
                +
004986 81a8     +LDD R26 , Y + 0
004987 81b9     +LDD R27 , Y + 0 + 1
004988 961f     +ADIW R26 , 15
004989 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,15
                 ; 0007 00BB         readConfig->upperLimit          =   config_sens[ch].upperLimit;
00498b 940e c286 	CALL SUBOPT_0x10E
00498d 940e c29e 	CALL SUBOPT_0x112
                +
00498f 81a8     +LDD R26 , Y + 0
004990 81b9     +LDD R27 , Y + 0 + 1
004991 9653     +ADIW R26 , 19
004992 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,19
                 ; 0007 00BC         readConfig->upperDelay          =   config_sens[ch].upperDelay;
004994 940e c286 	CALL SUBOPT_0x10E
004996 940e c2a4 	CALL SUBOPT_0x113
                +
004998 81a8     +LDD R26 , Y + 0
004999 81b9     +LDD R27 , Y + 0 + 1
00499a 9657     +ADIW R26 , 23
00499b 93ed     +ST X + , R30
00499c 93fc     +ST X , R31
                 	__PUTW1SNS 0,23
                 ; 0007 00BD         readConfig->upperExtreme        =   config_sens[ch].upperExtreme;
00499d 940e c286 	CALL SUBOPT_0x10E
00499f 940e c2aa 	CALL SUBOPT_0x114
                +
0049a1 81a8     +LDD R26 , Y + 0
0049a2 81b9     +LDD R27 , Y + 0 + 1
0049a3 9659     +ADIW R26 , 25
0049a4 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,25
                 ; 0007 00BE     }
                 _0xE002B:
                 ; 0007 00BF     return 0;
0049a6 e0e0      	LDI  R30,LOW(0)
0049a7 e0f0      	LDI  R31,HIGH(0)
0049a8 c3fe      	RJMP _0x20E008E
                 ; 0007 00C0 }
                 ;/*============================================================*/
                 ;int getAuxDinConfig(int ch, struct din_cnfg_st *readConfig)
                 ; 0007 00C3 {
                 _getAuxDinConfig:
                 ; 0007 00C4     if((ch < 0) || (ch >= MAX_DI_CHANNEL)){
0049a9 940e c272 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
0049ab f022      	BRMI _0xE002D
0049ac 81aa      	LDD  R26,Y+2
0049ad 81bb      	LDD  R27,Y+2+1
0049ae 9750      	SBIW R26,16
0049af f04c      	BRLT _0xE002C
                 _0xE002D:
                 ; 0007 00C5         printDebug("<getAuxDinConfig> digital input channel out of range (%d)\r\n",ch);
                +
0049b0 e8e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 407 ) )
0049b1 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 407 ) )
0049b2 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 407 ) )
0049b3 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 407 ) )
                 	__POINTD1FN _0xE0000,407
0049b4 940e c25e 	CALL SUBOPT_0x106
0049b6 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0007 00C6         return -1;
0049b8 c3ec      	RJMP _0x20E008F
                 ; 0007 00C7     }
                 ; 0007 00C8 
                 ; 0007 00C9     if( config_din_flag[ch] != 0x01){
                 _0xE002C:
0049b9 81aa      	LDD  R26,Y+2
0049ba 81bb      	LDD  R27,Y+2+1
0049bb 5ba7      	SUBI R26,LOW(-_config_din_flag)
0049bc 4fba      	SBCI R27,HIGH(-_config_din_flag)
0049bd 940e da50 	CALL __EEPROMRDB
0049bf 30e1      	CPI  R30,LOW(0x1)
0049c0 f071      	BREQ _0xE002F
                 ; 0007 00CA         printDebug("<getAuxDinConfig> no configuration, use default\r\n");
                +
0049c1 ece1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 467 ) )
0049c2 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 467 ) )
0049c3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 467 ) )
0049c4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 467 ) )
                 	__POINTD1FN _0xE0000,467
0049c5 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 00CB 
                 ; 0007 00CC         readConfig->channelEnable       =   0x00;
0049c7 81a8      	LD   R26,Y
0049c8 81b9      	LDD  R27,Y+1
0049c9 940e c27c 	CALL SUBOPT_0x10C
                 ; 0007 00CD         readConfig->alarmDelay          =   0;
0049cb 9611      	ADIW R26,1
0049cc 940e c2b0 	CALL SUBOPT_0x115
                 ; 0007 00CE 
                 ; 0007 00CF         /* // -- for test -- //
                 ; 0007 00D0         if(ch < 2)  readConfig->channelEnable       =   0x01;
                 ; 0007 00D1         else        readConfig->channelEnable       =   0x00;
                 ; 0007 00D2 
                 ; 0007 00D3         readConfig->alarmDelay          =   0;
                 ; 0007 00D4         */
                 ; 0007 00D5     }
                 ; 0007 00D6     else{
0049ce c00d      	RJMP _0xE0030
                 _0xE002F:
                 ; 0007 00D7         readConfig->channelEnable       =   config_din[ch].channelEnable;
0049cf 940e c2b5 	CALL SUBOPT_0x116
0049d1 5ce6      	SUBI R30,LOW(-_config_din)
0049d2 4ffe      	SBCI R31,HIGH(-_config_din)
0049d3 940e c2bb 	CALL SUBOPT_0x117
                 ; 0007 00D8         readConfig->alarmDelay          =   config_din[ch].alarmDelay;
0049d5 940e c2b5 	CALL SUBOPT_0x116
                +
0049d7 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
0049d8 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
0049d9 01df      	MOVW R26,R30
0049da 940e c2c2 	CALL SUBOPT_0x118
                 ; 0007 00D9     }
                 _0xE0030:
                 ; 0007 00DA     return 0;
0049dc e0e0      	LDI  R30,LOW(0)
0049dd e0f0      	LDI  R31,HIGH(0)
0049de c3c8      	RJMP _0x20E008E
                 ; 0007 00DB }
                 ;/*============================================================*/
                 ;int getAuxDoutConfig(int ch, struct dout_cnfg_st *readConfig)
                 ; 0007 00DE {
                 _getAuxDoutConfig:
                 ; 0007 00DF     int i;
                 ; 0007 00E0 
                 ; 0007 00E1     if((ch < 0) || (ch >= MAX_DO_CHANNEL)){
0049df 940e bf27 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
0049e1 81ad      	LDD  R26,Y+5
0049e2 23aa      	TST  R26
0049e3 f022      	BRMI _0xE0032
0049e4 81ac      	LDD  R26,Y+4
0049e5 81bd      	LDD  R27,Y+4+1
0049e6 9715      	SBIW R26,5
0049e7 f04c      	BRLT _0xE0031
                 _0xE0032:
                 ; 0007 00E2         printDebug("<getAuxDoutConfig> digital output channel out of range (%d)\r\n",ch);
                +
0049e8 efe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 517 ) )
0049e9 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 517 ) )
0049ea e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 517 ) )
0049eb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 517 ) )
                 	__POINTD1FN _0xE0000,517
0049ec 940e c2ca 	CALL SUBOPT_0x119
                 ; 0007 00E3         return -1;
0049ee efef      	LDI  R30,LOW(65535)
0049ef efff      	LDI  R31,HIGH(65535)
0049f0 c144      	RJMP _0x20E0091
                 ; 0007 00E4     }
                 ; 0007 00E5 
                 ; 0007 00E6     if( config_dout_flag[ch] != 0x01){
                 _0xE0031:
0049f1 81ac      	LDD  R26,Y+4
0049f2 81bd      	LDD  R27,Y+4+1
0049f3 5aa7      	SUBI R26,LOW(-_config_dout_flag)
0049f4 4fba      	SBCI R27,HIGH(-_config_dout_flag)
0049f5 940e da50 	CALL __EEPROMRDB
0049f7 30e1      	CPI  R30,LOW(0x1)
0049f8 f0d1      	BREQ _0xE0034
                 ; 0007 00E7         printDebug("<getAuxDoutConfig> no configuration, use default\r\n");
                +
0049f9 e3e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 579 ) )
0049fa e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 579 ) )
0049fb e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 579 ) )
0049fc e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 579 ) )
                 	__POINTD1FN _0xE0000,579
0049fd 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 00E8         readConfig->channelEnable       =   0x00;
0049ff 81aa      	LDD  R26,Y+2
004a00 81bb      	LDD  R27,Y+2+1
004a01 e0e0      	LDI  R30,LOW(0)
004a02 940e c230 	CALL SUBOPT_0xFF
                 ; 0007 00E9         readConfig->stateOnEvent        =   0x01;
004a04 e0e1      	LDI  R30,LOW(1)
004a05 940e c235 	CALL SUBOPT_0x100
                 ; 0007 00EA         readConfig->eventSourceNumber   =   0;
                 ; 0007 00EB 
                 ; 0007 00EC         for(i=0;i<MAX_EVENT_SOURCE;i++){
                 _0xE0036:
                +
004a07 3203     +CPI R16 , LOW ( 35 )
004a08 e0e0     +LDI R30 , HIGH ( 35 )
004a09 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004a0a f43c      	BRGE _0xE0037
                 ; 0007 00ED             readConfig->eventSource[i]  =   0x00;
004a0b 940e c23e 	CALL SUBOPT_0x101
004a0d e0a0      	LDI  R26,LOW(0)
004a0e 83a0      	STD  Z+0,R26
                 ; 0007 00EE         }
                +
004a0f 5f0f     +SUBI R16 , LOW ( - 1 )
004a10 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a11 cff5      	RJMP _0xE0036
                 _0xE0037:
                 ; 0007 00EF     }
                 ; 0007 00F0     else{
004a12 c065      	RJMP _0xE0038
                 _0xE0034:
                 ; 0007 00F1         readConfig->channelEnable       =   config_dout[ch].channelEnable;
004a13 940e c2cf 	CALL SUBOPT_0x11A
004a15 59e6      	SUBI R30,LOW(-_config_dout)
004a16 4ffe      	SBCI R31,HIGH(-_config_dout)
004a17 01df      	MOVW R26,R30
004a18 940e c244 	CALL SUBOPT_0x102
                 ; 0007 00F2         readConfig->stateOnEvent        =   config_dout[ch].stateOnEvent;
004a1a 940e c2cf 	CALL SUBOPT_0x11A
                +
004a1c 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004a1d 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004a1e 01df      	MOVW R26,R30
004a1f 940e c24a 	CALL SUBOPT_0x103
                 ; 0007 00F3         readConfig->eventSourceNumber   =   config_dout[ch].eventSourceNumber;
004a21 940e c2cf 	CALL SUBOPT_0x11A
                +
004a23 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004a24 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004a25 01df      	MOVW R26,R30
004a26 940e c251 	CALL SUBOPT_0x104
                 ; 0007 00F4 
                 ; 0007 00F5         printDebug("<getAuxDoutConfig> -- CH %d -- \r\n",ch);
                +
004a28 e6e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 630 ) )
004a29 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 630 ) )
004a2a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 630 ) )
004a2b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 630 ) )
                 	__POINTD1FN _0xE0000,630
004a2c 940e c2ca 	CALL SUBOPT_0x119
                 ; 0007 00F6         printDebug("<getAuxDoutConfig> enable         [0x%02X]\r\n",config_dout[ch].channelEnable);
                +
004a2e e8e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 664 ) )
004a2f e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 664 ) )
004a30 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 664 ) )
004a31 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 664 ) )
                 	__POINTD1FN _0xE0000,664
004a32 940e c2d5 	CALL SUBOPT_0x11B
004a34 940e c2dd 	CALL SUBOPT_0x11C
                 ; 0007 00F7         printDebug("<getAuxDoutConfig> stateOnEvent   [0x%02X]\r\n",config_dout[ch].stateOnEvent);
                +
004a36 ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 709 ) )
004a37 e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 709 ) )
004a38 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 709 ) )
004a39 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 709 ) )
                 	__POINTD1FN _0xE0000,709
004a3a 940e c2d5 	CALL SUBOPT_0x11B
004a3c 940e c2e3 	CALL SUBOPT_0x11D
                 ; 0007 00F8         printDebug("<getAuxDoutConfig> numberEvSrc    [%d]->",config_dout[ch].eventSourceNumber);
                +
004a3e eee0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 754 ) )
004a3f e1f5     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 754 ) )
004a40 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 754 ) )
004a41 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 754 ) )
                 	__POINTD1FN _0xE0000,754
004a42 940e c2d5 	CALL SUBOPT_0x11B
004a44 940e c2e9 	CALL SUBOPT_0x11E
004a46 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 00F9         for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004a48 e000     +LDI R16 , LOW ( 0 )
004a49 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE003A:
004a4a 940e c2cf 	CALL SUBOPT_0x11A
004a4c 940e c2e9 	CALL SUBOPT_0x11E
004a4e 940e c2ef 	CALL SUBOPT_0x11F
004a50 f4a4      	BRGE _0xE003B
                 ; 0007 00FA             readConfig->eventSource[i]  =   config_dout[ch].eventSource[i];
004a51 940e c23e 	CALL SUBOPT_0x101
                +
004a53 2f7e     +MOV R23 , R30
004a54 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004a55 940e c2cf 	CALL SUBOPT_0x11A
004a57 940e c2f4 	CALL SUBOPT_0x120
004a59 940e da50 	CALL __EEPROMRDB
                +
004a5b 2fa7     +MOV R26 , R23
004a5c 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004a5d 93ec      	ST   X,R30
                 ; 0007 00FB             printDebug("[0x%02X]",readConfig->eventSource[i]);
004a5e 940e c263 	CALL SUBOPT_0x107
004a60 940e c268 	CALL SUBOPT_0x108
                 ; 0007 00FC         }
                +
004a62 5f0f     +SUBI R16 , LOW ( - 1 )
004a63 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a64 cfe5      	RJMP _0xE003A
                 _0xE003B:
                 ; 0007 00FD         for(i=config_dout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004a65 940e c2cf 	CALL SUBOPT_0x11A
004a67 940e c2e9 	CALL SUBOPT_0x11E
004a69 2f0e      	MOV  R16,R30
004a6a 2711      	CLR  R17
                 _0xE003D:
                +
004a6b 3203     +CPI R16 , LOW ( 35 )
004a6c e0e0     +LDI R30 , HIGH ( 35 )
004a6d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004a6e f43c      	BRGE _0xE003E
                 ; 0007 00FE             readConfig->eventSource[i]  =   0x00;
004a6f 940e c23e 	CALL SUBOPT_0x101
004a71 e0a0      	LDI  R26,LOW(0)
004a72 83a0      	STD  Z+0,R26
                 ; 0007 00FF             //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 0100         }
                +
004a73 5f0f     +SUBI R16 , LOW ( - 1 )
004a74 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004a75 cff5      	RJMP _0xE003D
                 _0xE003E:
                 ; 0007 0101         printDebug("\r\n");
004a76 940e c26d 	CALL SUBOPT_0x109
                 ; 0007 0102 
                 ; 0007 0103     }
                 _0xE0038:
                 ; 0007 0104     return 0;
004a78 c0ba      	RJMP _0x20E0092
                 ; 0007 0105 }
                 ;/*============================================================*/
                 ;int getAuxAinConfig(int ch, struct ain_cnfg_st *readConfig)
                 ; 0007 0108 {
                 _getAuxAinConfig:
                 ; 0007 0109     if((ch < 0) || (ch >= MAX_AI_CHANNEL)){
004a79 940e c272 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*readConfig -> Y+0
004a7b f022      	BRMI _0xE0040
004a7c 81aa      	LDD  R26,Y+2
004a7d 81bb      	LDD  R27,Y+2+1
004a7e 9750      	SBIW R26,16
004a7f f04c      	BRLT _0xE003F
                 _0xE0040:
                 ; 0007 010A         printDebug("<getAuxAinConfig> analog input channel out of range (%d)\r\n",ch);
                +
004a80 e0e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 795 ) )
004a81 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 795 ) )
004a82 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 795 ) )
004a83 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 795 ) )
                 	__POINTD1FN _0xE0000,795
004a84 940e c25e 	CALL SUBOPT_0x106
004a86 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0007 010B         return -1;
004a88 c31c      	RJMP _0x20E008F
                 ; 0007 010C     }
                 ; 0007 010D 
                 ; 0007 010E     if( config_ain_flag[ch] != 0x01){
                 _0xE003F:
004a89 81aa      	LDD  R26,Y+2
004a8a 81bb      	LDD  R27,Y+2+1
004a8b 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004a8c 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004a8d 940e da50 	CALL __EEPROMRDB
004a8f 30e1      	CPI  R30,LOW(0x1)
004a90 f071      	BREQ _0xE0042
                 ; 0007 010F         printDebug("<getAuxAinConfig> no configuration, use default\r\n");
                +
004a91 e4e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 854 ) )
004a92 e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 854 ) )
004a93 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 854 ) )
004a94 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 854 ) )
                 	__POINTD1FN _0xE0000,854
004a95 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0110         readConfig->channelEnable       =   0x00;
004a97 81a8      	LD   R26,Y
004a98 81b9      	LDD  R27,Y+1
004a99 940e c27c 	CALL SUBOPT_0x10C
                 ; 0007 0111         readConfig->alarmLevel          =   0;
004a9b 9611      	ADIW R26,1
004a9c 940e bf79 	CALL SUBOPT_0x8F
                 ; 0007 0112     }
                 ; 0007 0113     else{
004a9e c012      	RJMP _0xE0043
                 _0xE0042:
                 ; 0007 0114         readConfig->channelEnable       =   config_ain[ch].channelEnable;
004a9f 940e c2fa 	CALL SUBOPT_0x121
004aa1 5de8      	SUBI R30,LOW(-_config_ain)
004aa2 4ffd      	SBCI R31,HIGH(-_config_ain)
004aa3 940e c2bb 	CALL SUBOPT_0x117
                 ; 0007 0115         readConfig->alarmLevel          =   config_ain[ch].alarmLevel;
004aa5 940e c2fa 	CALL SUBOPT_0x121
                +
004aa7 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004aa8 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004aa9 01df      	MOVW R26,R30
004aaa 940e da48 	CALL __EEPROMRDD
                +
004aac 81a8     +LDD R26 , Y + 0
004aad 81b9     +LDD R27 , Y + 0 + 1
004aae 9611     +ADIW R26 , 1
004aaf 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,1
                 ; 0007 0116     }
                 _0xE0043:
                 ; 0007 0117     return 0;
004ab1 e0e0      	LDI  R30,LOW(0)
004ab2 e0f0      	LDI  R31,HIGH(0)
004ab3 c2f3      	RJMP _0x20E008E
                 ; 0007 0118 }
                 ;/*============================================================*/
                 ;int getAuxAoutConfig(int ch, struct aout_cnfg_st *readConfig)
                 ; 0007 011B {
                 _getAuxAoutConfig:
                 ; 0007 011C     int i;
                 ; 0007 011D 
                 ; 0007 011E     if((ch < 0) || (ch >= MAX_AO_CHANNEL)){
004ab4 940e bf27 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*readConfig -> Y+2
                 ;	i -> R16,R17
004ab6 81ad      	LDD  R26,Y+5
004ab7 23aa      	TST  R26
004ab8 f022      	BRMI _0xE0045
004ab9 81ac      	LDD  R26,Y+4
004aba 81bd      	LDD  R27,Y+4+1
004abb 9750      	SBIW R26,16
004abc f04c      	BRLT _0xE0044
                 _0xE0045:
                 ; 0007 011F         printDebug("<getAuxAoutConfig> analog output channel out of range (%d)\r\n",ch);
                +
004abd e7e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 904 ) )
004abe e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 904 ) )
004abf e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 904 ) )
004ac0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 904 ) )
                 	__POINTD1FN _0xE0000,904
004ac1 940e c2ca 	CALL SUBOPT_0x119
                 ; 0007 0120         return -1;
004ac3 efef      	LDI  R30,LOW(65535)
004ac4 efff      	LDI  R31,HIGH(65535)
004ac5 c06f      	RJMP _0x20E0091
                 ; 0007 0121     }
                 ; 0007 0122 
                 ; 0007 0123     if( config_aout_flag[ch] != 0x01){
                 _0xE0044:
004ac6 81ac      	LDD  R26,Y+4
004ac7 81bd      	LDD  R27,Y+4+1
004ac8 59a2      	SUBI R26,LOW(-_config_aout_flag)
004ac9 4fba      	SBCI R27,HIGH(-_config_aout_flag)
004aca 940e da50 	CALL __EEPROMRDB
004acc 30e1      	CPI  R30,LOW(0x1)
004acd f101      	BREQ _0xE0047
                 ; 0007 0124         printDebug("<getAuxAoutConfig> no configuration, use default\r\n");
                +
004ace ebe3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 965 ) )
004acf e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 965 ) )
004ad0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 965 ) )
004ad1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 965 ) )
                 	__POINTD1FN _0xE0000,965
004ad2 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0125         readConfig->channelEnable       =   0x00;
004ad4 81aa      	LDD  R26,Y+2
004ad5 81bb      	LDD  R27,Y+2+1
004ad6 e0e0      	LDI  R30,LOW(0)
004ad7 940e c230 	CALL SUBOPT_0xFF
                 ; 0007 0126         readConfig->levelOnEvent        =   0.0;
004ad9 940e bf79 	CALL SUBOPT_0x8F
                 ; 0007 0127         readConfig->eventSourceNumber   =   0;
004adb 81aa      	LDD  R26,Y+2
004adc 81bb      	LDD  R27,Y+2+1
004add 9615      	ADIW R26,5
004ade e0e0      	LDI  R30,LOW(0)
004adf 93ec      	ST   X,R30
                 ; 0007 0128 
                 ; 0007 0129         for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004ae0 e000     +LDI R16 , LOW ( 0 )
004ae1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0049:
                +
004ae2 3203     +CPI R16 , LOW ( 35 )
004ae3 e0e0     +LDI R30 , HIGH ( 35 )
004ae4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004ae5 f43c      	BRGE _0xE004A
                 ; 0007 012A             readConfig->eventSource[i]  =   0x00;
004ae6 940e c300 	CALL SUBOPT_0x122
004ae8 e0a0      	LDI  R26,LOW(0)
004ae9 83a0      	STD  Z+0,R26
                 ; 0007 012B         }
                +
004aea 5f0f     +SUBI R16 , LOW ( - 1 )
004aeb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004aec cff5      	RJMP _0xE0049
                 _0xE004A:
                 ; 0007 012C     }
                 ; 0007 012D     else{
004aed c045      	RJMP _0xE004B
                 _0xE0047:
                 ; 0007 012E         readConfig->channelEnable       =   config_aout[ch].channelEnable;
004aee 940e c306 	CALL SUBOPT_0x123
004af0 58e8      	SUBI R30,LOW(-_config_aout)
004af1 4ffd      	SBCI R31,HIGH(-_config_aout)
004af2 01df      	MOVW R26,R30
004af3 940e c244 	CALL SUBOPT_0x102
                 ; 0007 012F         readConfig->levelOnEvent        =   config_aout[ch].levelOnEvent;
004af5 940e c306 	CALL SUBOPT_0x123
                +
004af7 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
004af8 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
004af9 01df      	MOVW R26,R30
004afa 940e da48 	CALL __EEPROMRDD
                +
004afc 81aa     +LDD R26 , Y + 2
004afd 81bb     +LDD R27 , Y + 2 + 1
004afe 9611     +ADIW R26 , 1
004aff 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 2,1
                 ; 0007 0130         readConfig->eventSourceNumber   =   config_aout[ch].eventSourceNumber;
004b01 940e c306 	CALL SUBOPT_0x123
004b03 940e c30c 	CALL SUBOPT_0x124
                +
004b05 81aa     +LDD R26 , Y + 2
004b06 81bb     +LDD R27 , Y + 2 + 1
004b07 9615     +ADIW R26 , 5
004b08 93ec     +ST X , R30
                 	__PUTB1SNS 2,5
                 ; 0007 0131 
                 ; 0007 0132         for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
004b09 e000     +LDI R16 , LOW ( 0 )
004b0a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE004D:
004b0b 940e c306 	CALL SUBOPT_0x123
004b0d 940e c30c 	CALL SUBOPT_0x124
004b0f 940e c2ef 	CALL SUBOPT_0x11F
004b11 f484      	BRGE _0xE004E
                 ; 0007 0133             readConfig->eventSource[i]  =   config_aout[ch].eventSource[i];
004b12 940e c300 	CALL SUBOPT_0x122
                +
004b14 2f7e     +MOV R23 , R30
004b15 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
004b16 940e c306 	CALL SUBOPT_0x123
004b18 940e c312 	CALL SUBOPT_0x125
004b1a 940e da50 	CALL __EEPROMRDB
                +
004b1c 2fa7     +MOV R26 , R23
004b1d 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
004b1e 93ec      	ST   X,R30
                 ; 0007 0134         }
                +
004b1f 5f0f     +SUBI R16 , LOW ( - 1 )
004b20 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b21 cfe9      	RJMP _0xE004D
                 _0xE004E:
                 ; 0007 0135         for(i=config_aout[ch].eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004b22 940e c306 	CALL SUBOPT_0x123
004b24 940e c30c 	CALL SUBOPT_0x124
004b26 2f0e      	MOV  R16,R30
004b27 2711      	CLR  R17
                 _0xE0050:
                +
004b28 3203     +CPI R16 , LOW ( 35 )
004b29 e0e0     +LDI R30 , HIGH ( 35 )
004b2a 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004b2b f43c      	BRGE _0xE0051
                 ; 0007 0136             readConfig->eventSource[i]  =   0x00;
004b2c 940e c300 	CALL SUBOPT_0x122
004b2e e0a0      	LDI  R26,LOW(0)
004b2f 83a0      	STD  Z+0,R26
                 ; 0007 0137         }
                +
004b30 5f0f     +SUBI R16 , LOW ( - 1 )
004b31 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b32 cff5      	RJMP _0xE0050
                 _0xE0051:
                 ; 0007 0138     }
                 _0xE004B:
                 ; 0007 0139     return 0;
                 _0x20E0092:
004b33 e0e0      	LDI  R30,LOW(0)
004b34 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0091:
004b35 8119      	LDD  R17,Y+1
004b36 8108      	LDD  R16,Y+0
004b37 9626      	ADIW R28,6
004b38 9508      	RET
                 ; 0007 013A }
                 ;/*============================================================*/
                 ;int getBuzzerConfig(struct buzz_cnfg_st *readConfig)
                 ; 0007 013D {
                 _getBuzzerConfig:
                 ; 0007 013E     char errSrc[4] = {0xC7,0xCF,0xD7,0xDF};
                 ; 0007 013F     int i;
                 ; 0007 0140 
                 ; 0007 0141     if( config_buzz_flag != 0x01){
004b39 93ba      	ST   -Y,R27
004b3a 93aa      	ST   -Y,R26
004b3b 9724      	SBIW R28,4
004b3c ece7      	LDI  R30,LOW(199)
004b3d 83e8      	ST   Y,R30
004b3e ecef      	LDI  R30,LOW(207)
004b3f 83e9      	STD  Y+1,R30
004b40 ede7      	LDI  R30,LOW(215)
004b41 83ea      	STD  Y+2,R30
004b42 edef      	LDI  R30,LOW(223)
004b43 83eb      	STD  Y+3,R30
004b44 931a      	ST   -Y,R17
004b45 930a      	ST   -Y,R16
                 ;	*readConfig -> Y+6
                 ;	errSrc -> Y+2
                 ;	i -> R16,R17
004b46 e7ae      	LDI  R26,LOW(_config_buzz_flag)
004b47 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
004b48 940e da50 	CALL __EEPROMRDB
004b4a 30e1      	CPI  R30,LOW(0x1)
004b4b f141      	BREQ _0xE0052
                 ; 0007 0142         printDebug("<getBuzzerConfig> no configuration, use default\r\n");
                +
004b4c eee6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1016 ) )
004b4d e1f6     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1016 ) )
004b4e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1016 ) )
004b4f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1016 ) )
                 	__POINTD1FN _0xE0000,1016
004b50 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0143         readConfig->enable              =   0x01;
004b52 81ae      	LDD  R26,Y+6
004b53 81bf      	LDD  R27,Y+6+1
004b54 e0e1      	LDI  R30,LOW(1)
004b55 93ec      	ST   X,R30
                 ; 0007 0144         readConfig->eventSourceNumber   =   sizeof(errSrc);
004b56 9611      	ADIW R26,1
004b57 e0e4      	LDI  R30,LOW(4)
004b58 93ec      	ST   X,R30
                 ; 0007 0145 
                 ; 0007 0146         //printDebug("<getBuzzerConfig> eventSourceNumber = %d ->",readConfig->eventSourceNumber);
                 ; 0007 0147         for(i=0;i<sizeof(errSrc);i++){
                +
004b59 e000     +LDI R16 , LOW ( 0 )
004b5a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0054:
                +
004b5b 3004     +CPI R16 , LOW ( 4 )
004b5c e0e0     +LDI R30 , HIGH ( 4 )
004b5d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004b5e f4a4      	BRGE _0xE0055
                 ; 0007 0148             if(i<sizeof(errSrc)){
                +
004b5f 3004     +CPI R16 , LOW ( 4 )
004b60 e0e0     +LDI R30 , HIGH ( 4 )
004b61 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
004b62 f44c      	BRGE _0xE0056
                 ; 0007 0149                 readConfig->eventSource[i]  =   errSrc[i];
004b63 940e c318 	CALL SUBOPT_0x126
004b65 010f      	MOVW R0,R30
004b66 940e c31e 	CALL SUBOPT_0x127
004b68 91ec      	LD   R30,X
004b69 01d0      	MOVW R26,R0
004b6a 93ec      	ST   X,R30
                 ; 0007 014A                 //printDebug("[0x%02X]",readConfig->eventSource[i]);
                 ; 0007 014B             }
                 ; 0007 014C             else{
004b6b c004      	RJMP _0xE0057
                 _0xE0056:
                 ; 0007 014D                 readConfig->eventSource[i]  =   0x00;
004b6c 940e c318 	CALL SUBOPT_0x126
004b6e e0a0      	LDI  R26,LOW(0)
004b6f 83a0      	STD  Z+0,R26
                 ; 0007 014E             }
                 _0xE0057:
                 ; 0007 014F         }
                +
004b70 5f0f     +SUBI R16 , LOW ( - 1 )
004b71 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b72 cfe8      	RJMP _0xE0054
                 _0xE0055:
                 ; 0007 0150         //printDebug("\r\n");
                 ; 0007 0151     }
                 ; 0007 0152     else{
004b73 c02d      	RJMP _0xE0058
                 _0xE0052:
                 ; 0007 0153         readConfig->enable              =   config_buzz.enable;
004b74 e0a8      	LDI  R26,LOW(_config_buzz)
004b75 e0b5      	LDI  R27,HIGH(_config_buzz)
004b76 940e da50 	CALL __EEPROMRDB
004b78 81ae      	LDD  R26,Y+6
004b79 81bf      	LDD  R27,Y+6+1
004b7a 93ec      	ST   X,R30
                 ; 0007 0154         readConfig->eventSourceNumber   =   config_buzz.eventSourceNumber;
004b7b 940e c323 	CALL SUBOPT_0x128
                +
004b7d 81ae     +LDD R26 , Y + 6
004b7e 81bf     +LDD R27 , Y + 6 + 1
004b7f 9611     +ADIW R26 , 1
004b80 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
                 ; 0007 0155 
                 ; 0007 0156         for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
004b81 e000     +LDI R16 , LOW ( 0 )
004b82 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE005A:
004b83 940e c323 	CALL SUBOPT_0x128
004b85 940e c2ef 	CALL SUBOPT_0x11F
004b87 f454      	BRGE _0xE005B
                 ; 0007 0157             readConfig->eventSource[i]  =   config_buzz.eventSource[i];
004b88 940e c318 	CALL SUBOPT_0x126
004b8a 010f      	MOVW R0,R30
                +
004b8b e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
004b8c e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
004b8d 940e c213 	CALL SUBOPT_0xFB
                 ; 0007 0158         }
                +
004b8f 5f0f     +SUBI R16 , LOW ( - 1 )
004b90 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004b91 cff1      	RJMP _0xE005A
                 _0xE005B:
                 ; 0007 0159         for(i=config_buzz.eventSourceNumber;i<MAX_EVENT_SOURCE;i++){
004b92 940e c323 	CALL SUBOPT_0x128
004b94 2f0e      	MOV  R16,R30
004b95 2711      	CLR  R17
                 _0xE005D:
                +
004b96 3203     +CPI R16 , LOW ( 35 )
004b97 e0e0     +LDI R30 , HIGH ( 35 )
004b98 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004b99 f43c      	BRGE _0xE005E
                 ; 0007 015A             readConfig->eventSource[i]  =   0x00;
004b9a 940e c318 	CALL SUBOPT_0x126
004b9c e0a0      	LDI  R26,LOW(0)
004b9d 83a0      	STD  Z+0,R26
                 ; 0007 015B         }
                +
004b9e 5f0f     +SUBI R16 , LOW ( - 1 )
004b9f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004ba0 cff5      	RJMP _0xE005D
                 _0xE005E:
                 ; 0007 015C     }
                 _0xE0058:
                 ; 0007 015D 
                 ; 0007 015E     printDebug("<getBuzzerConfig> enable            >>[0x%02X]\r\n",    readConfig->enable);
                +
004ba1 e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1066 ) )
004ba2 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1066 ) )
004ba3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1066 ) )
004ba4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1066 ) )
                 	__POINTD1FN _0xE0000,1066
004ba5 940e c328 	CALL SUBOPT_0x129
004ba7 91ec      	LD   R30,X
004ba8 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 015F     printDebug("<getBuzzerConfig> eventSourceNumber >>[%d]\r\n",         readConfig->eventSourceNumber);
                +
004baa e4e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1115 ) )
004bab e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1115 ) )
004bac e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1115 ) )
004bad e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1115 ) )
                 	__POINTD1FN _0xE0000,1115
004bae 940e c32d 	CALL SUBOPT_0x12A
004bb0 81e1      	LDD  R30,Z+1
004bb1 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0160     printDebug("<getBuzzerConfig> eventSource       >>");
                +
004bb3 e7e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1160 ) )
004bb4 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1160 ) )
004bb5 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1160 ) )
004bb6 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1160 ) )
                 	__POINTD1FN _0xE0000,1160
004bb7 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0161     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
004bb9 e000     +LDI R16 , LOW ( 0 )
004bba e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0060:
                +
004bbb 3203     +CPI R16 , LOW ( 35 )
004bbc e0e0     +LDI R30 , HIGH ( 35 )
004bbd 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
004bbe f45c      	BRGE _0xE0061
                 ; 0007 0162         printDebug("[0x%02X]",readConfig->eventSource[i]);
004bbf 940e c332 	CALL SUBOPT_0x12B
004bc1 940e c32d 	CALL SUBOPT_0x12A
004bc3 940e c337 	CALL SUBOPT_0x12C
004bc5 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0163     }
                +
004bc7 5f0f     +SUBI R16 , LOW ( - 1 )
004bc8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004bc9 cff1      	RJMP _0xE0060
                 _0xE0061:
                 ; 0007 0164     printDebug("\r\n");
004bca 940e c26d 	CALL SUBOPT_0x109
                 ; 0007 0165 
                 ; 0007 0166     return 0;
004bcc 940e c153 	CALL SUBOPT_0xD8
004bce 9628      	ADIW R28,8
004bcf 9508      	RET
                 ; 0007 0167 }
                 ;/*============================================================*/
                 ;int getEnvAlarmConfig(struct alm_cnfg_st *readConfig)
                 ; 0007 016A {
                 _getEnvAlarmConfig:
                 ; 0007 016B     if( config_alm_flag != 0x01 ){
004bd0 93ba      	ST   -Y,R27
004bd1 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004bd2 e7af      	LDI  R26,LOW(_config_alm_flag)
004bd3 e0b5      	LDI  R27,HIGH(_config_alm_flag)
004bd4 940e da50 	CALL __EEPROMRDB
004bd6 30e1      	CPI  R30,LOW(0x1)
004bd7 f121      	BREQ _0xE0062
                 ; 0007 016C         printDebug("<getEnvAlarmConfig> no configuration, use default\r\n");
                +
004bd8 e9ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1199 ) )
004bd9 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1199 ) )
004bda e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1199 ) )
004bdb e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1199 ) )
                 	__POINTD1FN _0xE0000,1199
004bdc 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 016D         readConfig->gsmRSSILevel         =   0;
004bde 81a8      	LD   R26,Y
004bdf 81b9      	LDD  R27,Y+1
004be0 940e bf79 	CALL SUBOPT_0x8F
                 ; 0007 016E         readConfig->gsmCreditBalance     =   0;
004be2 81a8      	LD   R26,Y
004be3 81b9      	LDD  R27,Y+1
004be4 9614      	ADIW R26,4
004be5 e0e0      	LDI  R30,LOW(0)
004be6 e0f0      	LDI  R31,HIGH(0)
004be7 940e c277 	CALL SUBOPT_0x10B
                 ; 0007 016F         readConfig->batteryLevel         =   0;
004be9 9616      	ADIW R26,6
004bea 940e bf79 	CALL SUBOPT_0x8F
                 ; 0007 0170         readConfig->commSignalLevel      =   0;
004bec 81a8      	LD   R26,Y
004bed 81b9      	LDD  R27,Y+1
004bee 961a      	ADIW R26,10
004bef 940e bf79 	CALL SUBOPT_0x8F
                 ; 0007 0171         readConfig->commLostDelay        =   0;
004bf1 81a8      	LD   R26,Y
004bf2 81b9      	LDD  R27,Y+1
004bf3 961e      	ADIW R26,14
004bf4 e0e0      	LDI  R30,LOW(0)
004bf5 e0f0      	LDI  R31,HIGH(0)
004bf6 940e c277 	CALL SUBOPT_0x10B
                 ; 0007 0172         readConfig->memoryMin            =   0;
004bf8 9650      	ADIW R26,16
004bf9 940e c2b0 	CALL SUBOPT_0x115
                 ; 0007 0173     }
                 ; 0007 0174     else{
004bfb c035      	RJMP _0xE0063
                 _0xE0062:
                 ; 0007 0175         readConfig->gsmRSSILevel         =   config_alm.gsmRSSILevel;
004bfc e2ad      	LDI  R26,LOW(_config_alm)
004bfd e0b5      	LDI  R27,HIGH(_config_alm)
004bfe 940e da48 	CALL __EEPROMRDD
004c00 81a8      	LD   R26,Y
004c01 81b9      	LDD  R27,Y+1
004c02 940e d9ff 	CALL __PUTDP1
                 ; 0007 0176         readConfig->gsmCreditBalance     =   config_alm.gsmCreditBalance;
                +
004c04 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
004c05 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
004c06 940e da4c 	CALL __EEPROMRDW
                +
004c08 81a8     +LDD R26 , Y + 0
004c09 81b9     +LDD R27 , Y + 0 + 1
004c0a 9614     +ADIW R26 , 4
004c0b 93ed     +ST X + , R30
004c0c 93fc     +ST X , R31
                 	__PUTW1SNS 0,4
                 ; 0007 0177         readConfig->batteryLevel         =   config_alm.batteryLevel;
                +
004c0d e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
004c0e e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
004c0f 940e da48 	CALL __EEPROMRDD
                +
004c11 81a8     +LDD R26 , Y + 0
004c12 81b9     +LDD R27 , Y + 0 + 1
004c13 9616     +ADIW R26 , 6
004c14 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,6
                 ; 0007 0178         readConfig->commSignalLevel      =   config_alm.commSignalLevel;
                +
004c16 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
004c17 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
004c18 940e da48 	CALL __EEPROMRDD
                +
004c1a 81a8     +LDD R26 , Y + 0
004c1b 81b9     +LDD R27 , Y + 0 + 1
004c1c 961a     +ADIW R26 , 10
004c1d 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 0,10
                 ; 0007 0179         readConfig->commLostDelay        =   config_alm.commLostDelay;
                +
004c1f e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
004c20 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
004c21 940e da4c 	CALL __EEPROMRDW
                +
004c23 81a8     +LDD R26 , Y + 0
004c24 81b9     +LDD R27 , Y + 0 + 1
004c25 961e     +ADIW R26 , 14
004c26 93ed     +ST X + , R30
004c27 93fc     +ST X , R31
                 	__PUTW1SNS 0,14
                 ; 0007 017A         readConfig->memoryMin            =   config_alm.memoryMin;
                +
004c28 e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
004c29 e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
004c2a 940e da4c 	CALL __EEPROMRDW
                +
004c2c 81a8     +LDD R26 , Y + 0
004c2d 81b9     +LDD R27 , Y + 0 + 1
004c2e 9650     +ADIW R26 , 16
004c2f 93ed     +ST X + , R30
004c30 93fc     +ST X , R31
                 	__PUTW1SNS 0,16
                 ; 0007 017B     }
                 _0xE0063:
                 ; 0007 017C 
                 ; 0007 017D     printDebug("<getEnvAlarmConfig> gsmRSSILevel         [%f]\r\n",readConfig->gsmRSSILevel);
                +
004c31 ede1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1251 ) )
004c32 e1f7     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1251 ) )
004c33 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1251 ) )
004c34 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1251 ) )
                 	__POINTD1FN _0xE0000,1251
004c35 940e c33c 	CALL SUBOPT_0x12D
004c37 940e c341 	CALL SUBOPT_0x12E
                 ; 0007 017E     printDebug("<getEnvAlarmConfig> gsmCreditBalance     [%d]\r\n",readConfig->gsmCreditBalance);
                +
004c39 e0e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1299 ) )
004c3a e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1299 ) )
004c3b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1299 ) )
004c3c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1299 ) )
                 	__POINTD1FN _0xE0000,1299
004c3d 940e c33c 	CALL SUBOPT_0x12D
004c3f 9614      	ADIW R26,4
004c40 940e c346 	CALL SUBOPT_0x12F
                 ; 0007 017F     printDebug("<getEnvAlarmConfig> batteryLevel         [%f]\r\n",readConfig->batteryLevel);
                +
004c42 e3e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1347 ) )
004c43 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1347 ) )
004c44 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1347 ) )
004c45 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1347 ) )
                 	__POINTD1FN _0xE0000,1347
004c46 940e c349 	CALL SUBOPT_0x130
004c48 940e c34e 	CALL SUBOPT_0x131
                 ; 0007 0180     printDebug("<getEnvAlarmConfig> commSignalLevel      [%f]\r\n",readConfig->commSignalLevel);
                +
004c4a e6e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1395 ) )
004c4b e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1395 ) )
004c4c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1395 ) )
004c4d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1395 ) )
                 	__POINTD1FN _0xE0000,1395
004c4e 940e c349 	CALL SUBOPT_0x130
004c50 940e c355 	CALL SUBOPT_0x132
                 ; 0007 0181     printDebug("<getEnvAlarmConfig> commLostDelay        [%d]\r\n",readConfig->commLostDelay);
                +
004c52 e9e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1443 ) )
004c53 e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1443 ) )
004c54 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1443 ) )
004c55 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1443 ) )
                 	__POINTD1FN _0xE0000,1443
004c56 940e c33c 	CALL SUBOPT_0x12D
004c58 961e      	ADIW R26,14
004c59 940e c346 	CALL SUBOPT_0x12F
                 ; 0007 0182     printDebug("<getEnvAlarmConfig> memoryMin            [%u]\r\n",readConfig->memoryMin,);
                +
004c5b ece1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1491 ) )
004c5c e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1491 ) )
004c5d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1491 ) )
004c5e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1491 ) )
                 	__POINTD1FN _0xE0000,1491
004c5f 940e c33c 	CALL SUBOPT_0x12D
004c61 9650      	ADIW R26,16
004c62 c033      	RJMP _0x20E0090
                 ; 0007 0183 
                 ; 0007 0184     return 0;
                 ; 0007 0185 }
                 ;/*============================================================*/
                 ;int getStatusReportConfig(struct stat_cnfg_st *readConfig)
                 ; 0007 0188 {
                 _getStatusReportConfig:
                 ; 0007 0189     if( config_stat_flag != 0x01 ){
004c63 93ba      	ST   -Y,R27
004c64 93aa      	ST   -Y,R26
                 ;	*readConfig -> Y+0
004c65 e8a0      	LDI  R26,LOW(_config_stat_flag)
004c66 e0b5      	LDI  R27,HIGH(_config_stat_flag)
004c67 940e da50 	CALL __EEPROMRDB
004c69 30e1      	CPI  R30,LOW(0x1)
004c6a f081      	BREQ _0xE0064
                 ; 0007 018A         printDebug("<getStatusReportConfig> no configuration, use default\r\n");
                +
004c6b efe1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1539 ) )
004c6c e1f8     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1539 ) )
004c6d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1539 ) )
004c6e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1539 ) )
                 	__POINTD1FN _0xE0000,1539
004c6f 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 018B         readConfig->accm                =   0x30;
004c71 81a8      	LD   R26,Y
004c72 81b9      	LDD  R27,Y+1
004c73 e3e0      	LDI  R30,LOW(48)
004c74 93ec      	ST   X,R30
                 ; 0007 018C         readConfig->intv                =   60;
004c75 9611      	ADIW R26,1
004c76 e3ec      	LDI  R30,LOW(60)
004c77 e0f0      	LDI  R31,HIGH(60)
004c78 93ed      	ST   X+,R30
004c79 93fc      	ST   X,R31
                 ; 0007 018D     }
                 ; 0007 018E     else{
004c7a c00b      	RJMP _0xE0065
                 _0xE0064:
                 ; 0007 018F         readConfig->accm                =   config_stat.accm;
004c7b e3af      	LDI  R26,LOW(_config_stat)
004c7c e0b5      	LDI  R27,HIGH(_config_stat)
004c7d 940e da50 	CALL __EEPROMRDB
004c7f 81a8      	LD   R26,Y
004c80 81b9      	LDD  R27,Y+1
004c81 93ec      	ST   X,R30
                 ; 0007 0190         readConfig->intv                =   config_stat.intv;
                +
004c82 e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
004c83 e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
004c84 940e c2c2 	CALL SUBOPT_0x118
                 ; 0007 0191     }
                 _0xE0065:
                 ; 0007 0192 
                 ; 0007 0193     printDebug("<getStatusReportConfig> accm        [0x%02X]\r\n",readConfig->accm);
                +
004c86 e2e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1595 ) )
004c87 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1595 ) )
004c88 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1595 ) )
004c89 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1595 ) )
                 	__POINTD1FN _0xE0000,1595
004c8a 940e c33c 	CALL SUBOPT_0x12D
004c8c 91ec      	LD   R30,X
004c8d 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0194     printDebug("<getStatusReportConfig> intv        [%d]\r\n",readConfig->intv);
                +
004c8f e5e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1642 ) )
004c90 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1642 ) )
004c91 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1642 ) )
004c92 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1642 ) )
                 	__POINTD1FN _0xE0000,1642
004c93 940e c33c 	CALL SUBOPT_0x12D
004c95 9611      	ADIW R26,1
                 _0x20E0090:
004c96 940e d9f0 	CALL __GETW1P
004c98 940e bd18 	CALL SUBOPT_0x34
004c9a 940e bc2c 	CALL SUBOPT_0x12
                 ; 0007 0195 
                 ; 0007 0196     return 0;
004c9c e0e0      	LDI  R30,LOW(0)
004c9d e0f0      	LDI  R31,HIGH(0)
004c9e 9622      	ADIW R28,2
004c9f 9508      	RET
                 ; 0007 0197 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/**************** Write Configuration to EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setPropertiesConfig(struct prop_cnfg_st *newConfig)
                 ; 0007 019F {
                 _setPropertiesConfig:
                 ; 0007 01A0     int i;
                 ; 0007 01A1 
                 ; 0007 01A2     for(i=0;i<DEVTYPE_LENGTH;i++)
004ca0 940e bf27 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
                +
004ca2 e000     +LDI R16 , LOW ( 0 )
004ca3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0067:
                +
004ca4 3104     +CPI R16 , LOW ( 20 )
004ca5 e0e0     +LDI R30 , HIGH ( 20 )
004ca6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004ca7 f474      	BRGE _0xE0068
                 ; 0007 01A3     {
                 ; 0007 01A4         config_prop.deviceType[i]       = newConfig->deviceType[i];
004ca8 01f8      	MOVW R30,R16
004ca9 50e0      	SUBI R30,LOW(-_config_prop)
004caa 40f0      	SBCI R31,HIGH(-_config_prop)
004cab 010f      	MOVW R0,R30
004cac 01f8      	MOVW R30,R16
004cad 81aa      	LDD  R26,Y+2
004cae 81bb      	LDD  R27,Y+2+1
004caf 940e c35c 	CALL SUBOPT_0x133
004cb1 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01A5     }
                +
004cb3 5f0f     +SUBI R16 , LOW ( - 1 )
004cb4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cb5 cfee      	RJMP _0xE0067
                 _0xE0068:
                 ; 0007 01A6 
                 ; 0007 01A7     /*
                 ; 0007 01A8     for(i=0;i<FW_LENGTH;i++)
                 ; 0007 01A9     {
                 ; 0007 01AA         config_prop.firmwareVersion[i]  = newConfig->firmwareVersion[i];    //printDebug("%c",config_prop.firmwareVersion[i]);
                 ; 0007 01AB     }
                 ; 0007 01AC     */
                 ; 0007 01AD 
                 ; 0007 01AE     for(i=0;i<NAME_LENGTH;i++)
                +
004cb6 e000     +LDI R16 , LOW ( 0 )
004cb7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006A:
                +
004cb8 3208     +CPI R16 , LOW ( 40 )
004cb9 e0e0     +LDI R30 , HIGH ( 40 )
004cba 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004cbb f484      	BRGE _0xE006B
                 ; 0007 01AF     {
                 ; 0007 01B0         config_prop.deviceName[i]       = newConfig->deviceName[i];
                +
004cbc e2e8     +LDI R30 , LOW ( _config_prop + ( 40 ) )
004cbd e0f0     +LDI R31 , HIGH ( _config_prop + ( 40 ) )
                 	__POINTW1MN _config_prop,40
004cbe 0fe0      	ADD  R30,R16
004cbf 1ff1      	ADC  R31,R17
004cc0 01df      	MOVW R26,R30
004cc1 81ea      	LDD  R30,Y+2
004cc2 81fb      	LDD  R31,Y+2+1
004cc3 96b8      	ADIW R30,40
004cc4 0fe0      	ADD  R30,R16
004cc5 1ff1      	ADC  R31,R17
004cc6 81e0      	LD   R30,Z
004cc7 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01B1     }
                +
004cc9 5f0f     +SUBI R16 , LOW ( - 1 )
004cca 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004ccb cfec      	RJMP _0xE006A
                 _0xE006B:
                 ; 0007 01B2 
                 ; 0007 01B3     for(i=0;i<ID_LENGTH;i++)
                +
004ccc e000     +LDI R16 , LOW ( 0 )
004ccd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE006D:
                +
004cce 3104     +CPI R16 , LOW ( 20 )
004ccf e0e0     +LDI R30 , HIGH ( 20 )
004cd0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004cd1 f46c      	BRGE _0xE006E
                 ; 0007 01B4     {
                 ; 0007 01B5         config_prop.deviceID[i]         = newConfig->deviceID[i];
                +
004cd2 e5e0     +LDI R30 , LOW ( _config_prop + ( 80 ) )
004cd3 e0f0     +LDI R31 , HIGH ( _config_prop + ( 80 ) )
                 	__POINTW1MN _config_prop,80
004cd4 0fe0      	ADD  R30,R16
004cd5 1ff1      	ADC  R31,R17
004cd6 01df      	MOVW R26,R30
004cd7 940e c21b 	CALL SUBOPT_0xFC
004cd9 81e0      	LD   R30,Z
004cda 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01B6     }
                +
004cdc 5f0f     +SUBI R16 , LOW ( - 1 )
004cdd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cde cfef      	RJMP _0xE006D
                 _0xE006E:
                 ; 0007 01B7 
                 ; 0007 01B8     for(i=0;i<NAME_LENGTH;i++)
                +
004cdf e000     +LDI R16 , LOW ( 0 )
004ce0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0070:
                +
004ce1 3208     +CPI R16 , LOW ( 40 )
004ce2 e0e0     +LDI R30 , HIGH ( 40 )
004ce3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,40
004ce4 f46c      	BRGE _0xE0071
                 ; 0007 01B9     {
                 ; 0007 01BA         config_prop.hostName[i]         = newConfig->hostName[i];
                +
004ce5 e6e4     +LDI R30 , LOW ( _config_prop + ( 100 ) )
004ce6 e0f0     +LDI R31 , HIGH ( _config_prop + ( 100 ) )
                 	__POINTW1MN _config_prop,100
004ce7 0fe0      	ADD  R30,R16
004ce8 1ff1      	ADC  R31,R17
004ce9 01df      	MOVW R26,R30
004cea 940e c222 	CALL SUBOPT_0xFD
004cec 81e0      	LD   R30,Z
004ced 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01BB     }
                +
004cef 5f0f     +SUBI R16 , LOW ( - 1 )
004cf0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004cf1 cfef      	RJMP _0xE0070
                 _0xE0071:
                 ; 0007 01BC 
                 ; 0007 01BD     for(i=0;i<ID_LENGTH;i++)
                +
004cf2 e000     +LDI R16 , LOW ( 0 )
004cf3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0073:
                +
004cf4 3104     +CPI R16 , LOW ( 20 )
004cf5 e0e0     +LDI R30 , HIGH ( 20 )
004cf6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
004cf7 f46c      	BRGE _0xE0074
                 ; 0007 01BE     {
                 ; 0007 01BF         config_prop.hostID[i]           = newConfig->hostID[i];
                +
004cf8 e8ec     +LDI R30 , LOW ( _config_prop + ( 140 ) )
004cf9 e0f0     +LDI R31 , HIGH ( _config_prop + ( 140 ) )
                 	__POINTW1MN _config_prop,140
004cfa 0fe0      	ADD  R30,R16
004cfb 1ff1      	ADC  R31,R17
004cfc 01df      	MOVW R26,R30
004cfd 940e c229 	CALL SUBOPT_0xFE
004cff 81e0      	LD   R30,Z
004d00 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01C0     }
                +
004d02 5f0f     +SUBI R16 , LOW ( - 1 )
004d03 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d04 cfef      	RJMP _0xE0073
                 _0xE0074:
                 ; 0007 01C1 
                 ; 0007 01C2     config_prop.timeZone                = newConfig->timeZone;
                +
004d05 eae0     +LDI R30 , LOW ( _config_prop + ( 160 ) )
004d06 e0f0     +LDI R31 , HIGH ( _config_prop + ( 160 ) )
                 	__POINTW1MN _config_prop,160
004d07 010f      	MOVW R0,R30
004d08 81aa      	LDD  R26,Y+2
004d09 81bb      	LDD  R27,Y+2+1
004d0a 56a0      	SUBI R26,LOW(-160)
004d0b 4fbf      	SBCI R27,HIGH(-160)
004d0c 940e c361 	CALL SUBOPT_0x134
                 ; 0007 01C3 
                 ; 0007 01C4     config_prop_flag                    = 0x01;
004d0e e4a2      	LDI  R26,LOW(_config_prop_flag)
004d0f e0b5      	LDI  R27,HIGH(_config_prop_flag)
004d10 940e c366 	CALL SUBOPT_0x135
                 ; 0007 01C5 
                 ; 0007 01C6     is_properties_config_update          = 1;
004d12 93e0 10f6 	STS  _is_properties_config_update,R30
                 ; 0007 01C7 
                 ; 0007 01C8     return 0;
004d14 940e c153 	CALL SUBOPT_0xD8
004d16 c090      	RJMP _0x20E008E
                 ; 0007 01C9 }
                 ;/*============================================================*/
                 ;int setOperatingConfig(struct oper_cnfg_st *newConfig)
                 ; 0007 01CC {
                 _setOperatingConfig:
                 ; 0007 01CD     int i;
                 ; 0007 01CE 
                 ; 0007 01CF     if( (newConfig->mode != MODE_REALTIME) && (newConfig->mode != MODE_DATALOGGER) ){
004d17 940e bf27 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004d19 81aa      	LDD  R26,Y+2
004d1a 81bb      	LDD  R27,Y+2+1
004d1b 91ac      	LD   R26,X
004d1c 31a0      	CPI  R26,LOW(0x10)
004d1d f029      	BREQ _0xE0076
004d1e 81aa      	LDD  R26,Y+2
004d1f 81bb      	LDD  R27,Y+2+1
004d20 91ac      	LD   R26,X
004d21 32a0      	CPI  R26,LOW(0x20)
004d22 f409      	BRNE _0xE0077
                 _0xE0076:
004d23 c00b      	RJMP _0xE0075
                 _0xE0077:
                 ; 0007 01D0         printDebug("<setOperatingConfig> Error: operating mode invalid [0x%02X]\r\n", newConfig->mode);
                +
004d24 e8e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1685 ) )
004d25 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1685 ) )
004d26 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1685 ) )
004d27 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1685 ) )
                 	__POINTD1FN _0xE0000,1685
004d28 940e c258 	CALL SUBOPT_0x105
                 ; 0007 01D1         return -1;
004d2a efef      	LDI  R30,LOW(65535)
004d2b efff      	LDI  R31,HIGH(65535)
004d2c 8119      	LDD  R17,Y+1
004d2d 8108      	LDD  R16,Y+0
004d2e c078      	RJMP _0x20E008E
                 ; 0007 01D2     }
                 ; 0007 01D3 
                 ; 0007 01D4     config_oper.mode                    =   newConfig->mode;
                 _0xE0075:
004d2f 81aa      	LDD  R26,Y+2
004d30 81bb      	LDD  R27,Y+2+1
004d31 91ec      	LD   R30,X
004d32 eaa1      	LDI  R26,LOW(_config_oper)
004d33 e0b0      	LDI  R27,HIGH(_config_oper)
004d34 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01D5     config_oper.deviceEnable            =   newConfig->deviceEnable;
                +
004d36 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004d37 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004d38 81ea      	LDD  R30,Y+2
004d39 81fb      	LDD  R31,Y+2+1
004d3a 81e1      	LDD  R30,Z+1
004d3b 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01D6     config_oper.alarmEnable             =   newConfig->alarmEnable;
                +
004d3d eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004d3e e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004d3f 81ea      	LDD  R30,Y+2
004d40 81fb      	LDD  R31,Y+2+1
004d41 81e2      	LDD  R30,Z+2
004d42 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01D7 
                 ; 0007 01D8     printDebug("\r\n mode            >> 0x%02X",config_oper.mode);
                +
004d44 ece1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1747 ) )
004d45 e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1747 ) )
004d46 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1747 ) )
004d47 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1747 ) )
                 	__POINTD1FN _0xE0000,1747
004d48 940e da29 	CALL __PUTPARD1
004d4a eaa1      	LDI  R26,LOW(_config_oper)
004d4b e0b0      	LDI  R27,HIGH(_config_oper)
004d4c 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 01D9     printDebug("\r\n deviceEnable    >> 0x%02X",config_oper.deviceEnable);
                +
004d4e edee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1776 ) )
004d4f e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1776 ) )
004d50 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1776 ) )
004d51 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1776 ) )
                 	__POINTD1FN _0xE0000,1776
004d52 940e da29 	CALL __PUTPARD1
                +
004d54 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
004d55 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
004d56 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 01DA     printDebug("\r\n alarmEnable     >> 0x%02X",config_oper.alarmEnable);
004d58 940e c36d 	CALL SUBOPT_0x137
                +
004d5a eaa3     +LDI R26 , LOW ( _config_oper + ( 2 ) )
004d5b e0b0     +LDI R27 , HIGH ( _config_oper + ( 2 ) )
                 	__POINTW2MN _config_oper,2
004d5c 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 01DB     printDebug("\r\n sensorEnable    >> ");
                +
004d5e e1e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1834 ) )
004d5f e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1834 ) )
004d60 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1834 ) )
004d61 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1834 ) )
                 	__POINTD1FN _0xE0000,1834
004d62 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 01DC 
                 ; 0007 01DD     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
004d64 e000     +LDI R16 , LOW ( 0 )
004d65 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0079:
                +
004d66 3005     +CPI R16 , LOW ( 5 )
004d67 e0e0     +LDI R30 , HIGH ( 5 )
004d68 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
004d69 f4c4      	BRGE _0xE007A
                 ; 0007 01DE     {
                 ; 0007 01DF         config_oper.sensorEnable[i]     =   newConfig->sensorEnable[i];
                +
004d6a eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004d6b e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004d6c 0fe0      	ADD  R30,R16
004d6d 1ff1      	ADC  R31,R17
004d6e 01df      	MOVW R26,R30
004d6f 940e c23e 	CALL SUBOPT_0x101
004d71 81e0      	LD   R30,Z
004d72 940e da6c 	CALL __EEPROMWRB
                 ; 0007 01E0         printDebug("[0x%02X]",config_oper.sensorEnable[i]);
004d74 940e c332 	CALL SUBOPT_0x12B
004d76 940e da29 	CALL __PUTPARD1
                +
004d78 eae4     +LDI R30 , LOW ( _config_oper + ( 3 ) )
004d79 e0f0     +LDI R31 , HIGH ( _config_oper + ( 3 ) )
                 	__POINTW1MN _config_oper,3
004d7a 0fe0      	ADD  R30,R16
004d7b 1ff1      	ADC  R31,R17
004d7c 01df      	MOVW R26,R30
004d7d 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 01E1     }
                +
004d7f 5f0f     +SUBI R16 , LOW ( - 1 )
004d80 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004d81 cfe4      	RJMP _0xE0079
                 _0xE007A:
                 ; 0007 01E2     printDebug("\r\n");
004d82 940e c26d 	CALL SUBOPT_0x109
                 ; 0007 01E3 
                 ; 0007 01E4     config_oper_flag                    =   0x01;
004d84 e4a3      	LDI  R26,LOW(_config_oper_flag)
004d85 e0b5      	LDI  R27,HIGH(_config_oper_flag)
004d86 940e c366 	CALL SUBOPT_0x135
                 ; 0007 01E5 
                 ; 0007 01E6     is_operating_config_update          =   1;
004d88 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0007 01E7 
                 ; 0007 01E8     return 0;
004d8a 940e c153 	CALL SUBOPT_0xD8
004d8c c01a      	RJMP _0x20E008E
                 ; 0007 01E9 }
                 ;/*============================================================*/
                 ;int setSensorConfig(int ch, struct sens_cnfg_st *newConfig)
                 ; 0007 01EC {
                 _setSensorConfig:
                 ; 0007 01ED     if((ch < 0) || (ch >= MAX_SENS_CHANNEL)){
004d8d 940e c272 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004d8f f022      	BRMI _0xE007C
004d90 81aa      	LDD  R26,Y+2
004d91 81bb      	LDD  R27,Y+2+1
004d92 9715      	SBIW R26,5
004d93 f02c      	BRLT _0xE007B
                 _0xE007C:
                 ; 0007 01EE         printDebug("<setSensorConfig> ERR: channel out of range\r\n");
                +
004d94 e2ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1857 ) )
004d95 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1857 ) )
004d96 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1857 ) )
004d97 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1857 ) )
                 	__POINTD1FN _0xE0000,1857
004d98 c008      	RJMP _0x20E008D
                 ; 0007 01EF         return -1;
                 ; 0007 01F0     }
                 ; 0007 01F1     if(newConfig->samplingRate == 0){
                 _0xE007B:
004d99 940e c374 	CALL SUBOPT_0x138
004d9b 9730      	SBIW R30,0
004d9c f461      	BRNE _0xE007E
                 ; 0007 01F2         printDebug("<setSensorConfig> ERR: samplingRate couldn't be set to 0\r\n");
                +
004d9d e5ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1903 ) )
004d9e e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1903 ) )
004d9f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1903 ) )
004da0 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1903 ) )
                 	__POINTD1FN _0xE0000,1903
                 _0x20E008D:
004da1 940e da29 	CALL __PUTPARD1
004da3 940e bd21 	CALL SUBOPT_0x36
                 ; 0007 01F3         return -1;
                 _0x20E008F:
004da5 efef      	LDI  R30,LOW(65535)
004da6 efff      	LDI  R31,HIGH(65535)
                 _0x20E008E:
004da7 9624      	ADIW R28,4
004da8 9508      	RET
                 ; 0007 01F4     }
                 ; 0007 01F5 
                 ; 0007 01F6     if(newConfig->samplingRate < 60){
                 _0xE007E:
004da9 940e c374 	CALL SUBOPT_0x138
004dab 97fc      	SBIW R30,60
004dac f430      	BRSH _0xE007F
                 ; 0007 01F7         newConfig->samplingRate         =   60;
004dad 81a8      	LD   R26,Y
004dae 81b9      	LDD  R27,Y+1
004daf e3ec      	LDI  R30,LOW(60)
004db0 e0f0      	LDI  R31,HIGH(60)
004db1 93ed      	ST   X+,R30
004db2 93fc      	ST   X,R31
                 ; 0007 01F8     }
                 ; 0007 01F9 
                 ; 0007 01FA     config_sens[ch].samplingRate        =   newConfig->samplingRate;
                 _0xE007F:
004db3 940e c286 	CALL SUBOPT_0x10E
004db5 55e7      	SUBI R30,LOW(-_config_sens)
004db6 4fff      	SBCI R31,HIGH(-_config_sens)
004db7 010f      	MOVW R0,R30
004db8 940e c374 	CALL SUBOPT_0x138
004dba 940e c379 	CALL SUBOPT_0x139
                 ; 0007 01FB     config_sens[ch].reOccurrence        =   newConfig->reOccurrence;
                +
004dbc 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004dbd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004dbe 010f      	MOVW R0,R30
004dbf 81a8      	LD   R26,Y
004dc0 81b9      	LDD  R27,Y+1
004dc1 9612      	ADIW R26,2
004dc2 940e c37d 	CALL SUBOPT_0x13A
                 ; 0007 01FC     config_sens[ch].timeStartHour       =   newConfig->timeStartHour;
                +
004dc4 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004dc5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004dc6 01df      	MOVW R26,R30
004dc7 81e8      	LD   R30,Y
004dc8 81f9      	LDD  R31,Y+1
004dc9 81e4      	LDD  R30,Z+4
004dca 940e c380 	CALL SUBOPT_0x13B
                 ; 0007 01FD     config_sens[ch].timeStartMin        =   newConfig->timeStartMin;
                +
004dcc 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004dcd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004dce 01df      	MOVW R26,R30
004dcf 81e8      	LD   R30,Y
004dd0 81f9      	LDD  R31,Y+1
004dd1 81e5      	LDD  R30,Z+5
004dd2 940e c380 	CALL SUBOPT_0x13B
                 ; 0007 01FE     config_sens[ch].timeStopHour        =   newConfig->timeStopHour;
                +
004dd4 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004dd5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004dd6 01df      	MOVW R26,R30
004dd7 81e8      	LD   R30,Y
004dd8 81f9      	LDD  R31,Y+1
004dd9 81e6      	LDD  R30,Z+6
004dda 940e c380 	CALL SUBOPT_0x13B
                 ; 0007 01FF     config_sens[ch].timeStopMin         =   newConfig->timeStopMin;
                +
004ddc 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004ddd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004dde 01df      	MOVW R26,R30
004ddf 81e8      	LD   R30,Y
004de0 81f9      	LDD  R31,Y+1
004de1 81e7      	LDD  R30,Z+7
004de2 940e c380 	CALL SUBOPT_0x13B
                 ; 0007 0200 
                 ; 0007 0201     config_sens[ch].alarmEnable         =   newConfig->alarmEnable;
                +
004de4 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004de5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004de6 01df      	MOVW R26,R30
004de7 81e8      	LD   R30,Y
004de8 81f9      	LDD  R31,Y+1
004de9 85e0      	LDD  R30,Z+8
004dea 940e c380 	CALL SUBOPT_0x13B
                 ; 0007 0202     config_sens[ch].lowerLimit          =   newConfig->lowerLimit;
                +
004dec 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
004ded 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
004dee 010f      	MOVW R0,R30
004def 81a8      	LD   R26,Y
004df0 81b9      	LDD  R27,Y+1
004df1 9619      	ADIW R26,9
004df2 940e c383 	CALL SUBOPT_0x13C
                 ; 0007 0203     config_sens[ch].lowerDelay          =   newConfig->lowerDelay;
                +
004df4 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
004df5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
004df6 010f      	MOVW R0,R30
004df7 81a8      	LD   R26,Y
004df8 81b9      	LDD  R27,Y+1
004df9 961d      	ADIW R26,13
004dfa 940e c37d 	CALL SUBOPT_0x13A
                 ; 0007 0204     config_sens[ch].lowerExtreme        =   newConfig->lowerExtreme;
                +
004dfc 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
004dfd 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
004dfe 010f      	MOVW R0,R30
004dff 81a8      	LD   R26,Y
004e00 81b9      	LDD  R27,Y+1
004e01 961f      	ADIW R26,15
004e02 940e c383 	CALL SUBOPT_0x13C
                 ; 0007 0205     config_sens[ch].upperLimit          =   newConfig->upperLimit;
                +
004e04 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
004e05 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
004e06 010f      	MOVW R0,R30
004e07 81a8      	LD   R26,Y
004e08 81b9      	LDD  R27,Y+1
004e09 9653      	ADIW R26,19
004e0a 940e c383 	CALL SUBOPT_0x13C
                 ; 0007 0206     config_sens[ch].upperDelay          =   newConfig->upperDelay;
                +
004e0c 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
004e0d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
004e0e 010f      	MOVW R0,R30
004e0f 81a8      	LD   R26,Y
004e10 81b9      	LDD  R27,Y+1
004e11 9657      	ADIW R26,23
004e12 940e c37d 	CALL SUBOPT_0x13A
                 ; 0007 0207     config_sens[ch].upperExtreme        =   newConfig->upperExtreme;
                +
004e14 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
004e15 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
004e16 010f      	MOVW R0,R30
004e17 81a8      	LD   R26,Y
004e18 81b9      	LDD  R27,Y+1
004e19 9659      	ADIW R26,25
004e1a 940e c389 	CALL SUBOPT_0x13D
                 ; 0007 0208 
                 ; 0007 0209     printDebug("\r\n samplingRate    >> 0x%04X",config_sens[ch].samplingRate);
                +
004e1c e9e8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1962 ) )
004e1d e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1962 ) )
004e1e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1962 ) )
004e1f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1962 ) )
                 	__POINTD1FN _0xE0000,1962
004e20 940e c38f 	CALL SUBOPT_0x13E
004e22 55e7      	SUBI R30,LOW(-_config_sens)
004e23 4fff      	SBCI R31,HIGH(-_config_sens)
004e24 940e c397 	CALL SUBOPT_0x13F
004e26 940e bc2c 	CALL SUBOPT_0x12
                 ; 0007 020A     printDebug("\r\n reOccurrence    >> 0x%04X",config_sens[ch].reOccurrence);
                +
004e28 ebe5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1991 ) )
004e29 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1991 ) )
004e2a e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1991 ) )
004e2b e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1991 ) )
                 	__POINTD1FN _0xE0000,1991
004e2c 940e c38f 	CALL SUBOPT_0x13E
                +
004e2e 55e5     +SUBI R30 , LOW ( - _config_sens - ( 2 ) )
004e2f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 2 ) )
                 	__ADDW1MN _config_sens,2
004e30 940e c397 	CALL SUBOPT_0x13F
004e32 940e bc2c 	CALL SUBOPT_0x12
                 ; 0007 020B     printDebug("\r\n timeStartHour   >> 0x%02X",config_sens[ch].timeStartHour);
                +
004e34 ede2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2020 ) )
004e35 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2020 ) )
004e36 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2020 ) )
004e37 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2020 ) )
                 	__POINTD1FN _0xE0000,2020
004e38 940e c38f 	CALL SUBOPT_0x13E
                +
004e3a 55e3     +SUBI R30 , LOW ( - _config_sens - ( 4 ) )
004e3b 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 4 ) )
                 	__ADDW1MN _config_sens,4
004e3c 01df      	MOVW R26,R30
004e3d 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 020C     printDebug("\r\n timeStartMin    >> 0x%02X",config_sens[ch].timeStartMin);
                +
004e3f eeef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2049 ) )
004e40 e1fa     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2049 ) )
004e41 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2049 ) )
004e42 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2049 ) )
                 	__POINTD1FN _0xE0000,2049
004e43 940e c38f 	CALL SUBOPT_0x13E
                +
004e45 55e2     +SUBI R30 , LOW ( - _config_sens - ( 5 ) )
004e46 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 5 ) )
                 	__ADDW1MN _config_sens,5
004e47 01df      	MOVW R26,R30
004e48 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 020D     printDebug("\r\n timeStopHour    >> 0x%02X",config_sens[ch].timeStopHour);
                +
004e4a e0ec     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2078 ) )
004e4b e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2078 ) )
004e4c e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2078 ) )
004e4d e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2078 ) )
                 	__POINTD1FN _0xE0000,2078
004e4e 940e c38f 	CALL SUBOPT_0x13E
                +
004e50 55e1     +SUBI R30 , LOW ( - _config_sens - ( 6 ) )
004e51 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 6 ) )
                 	__ADDW1MN _config_sens,6
004e52 01df      	MOVW R26,R30
004e53 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 020E     printDebug("\r\n timeStopMin     >> 0x%02X",config_sens[ch].timeStopMin);
                +
004e55 e2e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2107 ) )
004e56 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2107 ) )
004e57 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2107 ) )
004e58 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2107 ) )
                 	__POINTD1FN _0xE0000,2107
004e59 940e c38f 	CALL SUBOPT_0x13E
                +
004e5b 55e0     +SUBI R30 , LOW ( - _config_sens - ( 7 ) )
004e5c 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 7 ) )
                 	__ADDW1MN _config_sens,7
004e5d 01df      	MOVW R26,R30
004e5e 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 020F 
                 ; 0007 0210     printDebug("\r\n alarmEnable     >> 0x%02X",        config_sens[ch].alarmEnable);
004e60 940e c36d 	CALL SUBOPT_0x137
004e62 81ae      	LDD  R26,Y+6
004e63 81bf      	LDD  R27,Y+6+1
004e64 e1ed      	LDI  R30,LOW(29)
004e65 940e d95a 	CALL __MULB1W2U
                +
004e67 54ef     +SUBI R30 , LOW ( - _config_sens - ( 8 ) )
004e68 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 8 ) )
                 	__ADDW1MN _config_sens,8
004e69 01df      	MOVW R26,R30
004e6a 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 0211     printDebug("\r\n lowerLimit      >> %f [%04lX]",     config_sens[ch].lowerLimit,config_sens[ch].lowerLimit);
                +
004e6c e4e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2136 ) )
004e6d e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2136 ) )
004e6e e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2136 ) )
004e6f e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2136 ) )
                 	__POINTD1FN _0xE0000,2136
004e70 940e c38f 	CALL SUBOPT_0x13E
004e72 940e c28c 	CALL SUBOPT_0x10F
004e74 940e c328 	CALL SUBOPT_0x129
004e76 e1ed      	LDI  R30,LOW(29)
004e77 940e d95a 	CALL __MULB1W2U
004e79 940e c28c 	CALL SUBOPT_0x10F
004e7b 940e bc8a 	CALL SUBOPT_0x20
                 ; 0007 0212     printDebug("\r\n lowerDelay      >> %d [%02X]",     config_sens[ch].lowerDelay,config_sens[ch].lowerDelay);
                +
004e7d e6e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2169 ) )
004e7e e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2169 ) )
004e7f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2169 ) )
004e80 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2169 ) )
                 	__POINTD1FN _0xE0000,2169
004e81 940e c38f 	CALL SUBOPT_0x13E
004e83 940e c292 	CALL SUBOPT_0x110
004e85 940e bd18 	CALL SUBOPT_0x34
004e87 85aa      	LDD  R26,Y+10
004e88 85bb      	LDD  R27,Y+10+1
004e89 e1ed      	LDI  R30,LOW(29)
004e8a 940e d95a 	CALL __MULB1W2U
004e8c 940e c292 	CALL SUBOPT_0x110
004e8e 940e c39b 	CALL SUBOPT_0x140
                 ; 0007 0213     printDebug("\r\n lowerExtreme    >> %f [%04lX]",     config_sens[ch].lowerExtreme,config_sens[ch].lowerExtreme);
                +
004e90 e8e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2201 ) )
004e91 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2201 ) )
004e92 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2201 ) )
004e93 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2201 ) )
                 	__POINTD1FN _0xE0000,2201
004e94 940e c38f 	CALL SUBOPT_0x13E
004e96 940e c298 	CALL SUBOPT_0x111
004e98 940e c328 	CALL SUBOPT_0x129
004e9a e1ed      	LDI  R30,LOW(29)
004e9b 940e d95a 	CALL __MULB1W2U
004e9d 940e c298 	CALL SUBOPT_0x111
004e9f 940e bc8a 	CALL SUBOPT_0x20
                 ; 0007 0214     printDebug("\r\n upperLimit      >> %f [%04lX]",     config_sens[ch].upperLimit,config_sens[ch].upperLimit);
                +
004ea1 eae8     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2234 ) )
004ea2 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2234 ) )
004ea3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2234 ) )
004ea4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2234 ) )
                 	__POINTD1FN _0xE0000,2234
004ea5 940e c38f 	CALL SUBOPT_0x13E
004ea7 940e c29e 	CALL SUBOPT_0x112
004ea9 940e c328 	CALL SUBOPT_0x129
004eab e1ed      	LDI  R30,LOW(29)
004eac 940e d95a 	CALL __MULB1W2U
004eae 940e c29e 	CALL SUBOPT_0x112
004eb0 940e bc8a 	CALL SUBOPT_0x20
                 ; 0007 0215     printDebug("\r\n upperDelay      >> %d [%02X]",     config_sens[ch].upperDelay,config_sens[ch].upperDelay);
                +
004eb2 ece9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2267 ) )
004eb3 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2267 ) )
004eb4 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2267 ) )
004eb5 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2267 ) )
                 	__POINTD1FN _0xE0000,2267
004eb6 940e c38f 	CALL SUBOPT_0x13E
004eb8 940e c2a4 	CALL SUBOPT_0x113
004eba 940e bd18 	CALL SUBOPT_0x34
004ebc 85aa      	LDD  R26,Y+10
004ebd 85bb      	LDD  R27,Y+10+1
004ebe e1ed      	LDI  R30,LOW(29)
004ebf 940e d95a 	CALL __MULB1W2U
004ec1 940e c2a4 	CALL SUBOPT_0x113
004ec3 940e c39b 	CALL SUBOPT_0x140
                 ; 0007 0216     printDebug("\r\n upperExtreme    >> %f [%04lX]",     config_sens[ch].upperExtreme,config_sens[ch].upperExtreme);
                +
004ec5 eee9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2299 ) )
004ec6 e1fb     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2299 ) )
004ec7 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2299 ) )
004ec8 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2299 ) )
                 	__POINTD1FN _0xE0000,2299
004ec9 940e c38f 	CALL SUBOPT_0x13E
004ecb 940e c2aa 	CALL SUBOPT_0x114
004ecd 940e c328 	CALL SUBOPT_0x129
004ecf e1ed      	LDI  R30,LOW(29)
004ed0 940e d95a 	CALL __MULB1W2U
004ed2 940e c2aa 	CALL SUBOPT_0x114
004ed4 940e bc8a 	CALL SUBOPT_0x20
                 ; 0007 0217     printDebug("\r\n");
004ed6 940e c26d 	CALL SUBOPT_0x109
                 ; 0007 0218 
                 ; 0007 0219     config_sens_flag[ch]                = 0x01;
004ed8 81aa      	LDD  R26,Y+2
004ed9 81bb      	LDD  R27,Y+2+1
004eda 5bac      	SUBI R26,LOW(-_config_sens_flag)
004edb 4fba      	SBCI R27,HIGH(-_config_sens_flag)
004edc e0e1      	LDI  R30,LOW(1)
004edd 940e da6c 	CALL __EEPROMWRB
                 ; 0007 021A     is_sensor_config_update[ch]          = 1;
004edf 81ea      	LDD  R30,Y+2
004ee0 81fb      	LDD  R31,Y+2+1
004ee1 50e8      	SUBI R30,LOW(-_is_sensor_config_update)
004ee2 4eff      	SBCI R31,HIGH(-_is_sensor_config_update)
004ee3 e0a1      	LDI  R26,LOW(1)
004ee4 83a0      	STD  Z+0,R26
                 ; 0007 021B 
                 ; 0007 021C     return 0;
004ee5 e0e0      	LDI  R30,LOW(0)
004ee6 e0f0      	LDI  R31,HIGH(0)
004ee7 c374      	RJMP _0x20E0088
                 ; 0007 021D }
                 ;/*============================================================*/
                 ;int setAuxDinConfig(int ch, struct din_cnfg_st *newConfig)
                 ; 0007 0220 {
                 _setAuxDinConfig:
                 ; 0007 0221     if((ch < 0) || (ch > MAX_DI_CHANNEL)){
004ee8 940e c272 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004eea f022      	BRMI _0xE0081
004eeb 81aa      	LDD  R26,Y+2
004eec 81bb      	LDD  R27,Y+2+1
004eed 9751      	SBIW R26,17
004eee f01c      	BRLT _0xE0080
                 _0xE0081:
                 ; 0007 0222         return -1;
004eef efef      	LDI  R30,LOW(65535)
004ef0 efff      	LDI  R31,HIGH(65535)
004ef1 c36a      	RJMP _0x20E0088
                 ; 0007 0223     }
                 ; 0007 0224 
                 ; 0007 0225     config_din[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE0080:
004ef2 940e c2b5 	CALL SUBOPT_0x116
004ef4 5ce6      	SUBI R30,LOW(-_config_din)
004ef5 4ffe      	SBCI R31,HIGH(-_config_din)
004ef6 010f      	MOVW R0,R30
004ef7 81a8      	LD   R26,Y
004ef8 81b9      	LDD  R27,Y+1
004ef9 940e c361 	CALL SUBOPT_0x134
                 ; 0007 0226     config_din[ch].alarmDelay           =   newConfig->alarmDelay;
004efb 940e c2b5 	CALL SUBOPT_0x116
                +
004efd 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004efe 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004eff 940e c39e 	CALL SUBOPT_0x141
004f01 940e c3a3 	CALL SUBOPT_0x142
                 ; 0007 0227 
                 ; 0007 0228     printDebug("\r\n channel         >> [%d]",      ch);
004f03 940e c3a9 	CALL SUBOPT_0x143
004f05 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0007 0229     printDebug("\r\n channelEnable   >> 0x%02X",    config_din[ch].channelEnable);
004f07 940e c3ae 	CALL SUBOPT_0x144
004f09 e0e3      	LDI  R30,LOW(3)
004f0a 940e d95a 	CALL __MULB1W2U
004f0c 5ce6      	SUBI R30,LOW(-_config_din)
004f0d 4ffe      	SBCI R31,HIGH(-_config_din)
004f0e 01df      	MOVW R26,R30
004f0f 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 022A     printDebug("\r\n alarmDelay      >> %d",        config_din[ch].alarmDelay);
                +
004f11 e4e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2388 ) )
004f12 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2388 ) )
004f13 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2388 ) )
004f14 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2388 ) )
                 	__POINTD1FN _0xE0000,2388
004f15 940e c3b7 	CALL SUBOPT_0x145
004f17 e0e3      	LDI  R30,LOW(3)
004f18 940e d95a 	CALL __MULB1W2U
                +
004f1a 5ce5     +SUBI R30 , LOW ( - _config_din - ( 1 ) )
004f1b 4ffe     +SBCI R31 , HIGH ( - _config_din - ( 1 ) )
                 	__ADDW1MN _config_din,1
004f1c 940e c397 	CALL SUBOPT_0x13F
004f1e 940e bc2c 	CALL SUBOPT_0x12
                 ; 0007 022B 
                 ; 0007 022C     config_din_flag[ch]                 =   0x01;
004f20 81aa      	LDD  R26,Y+2
004f21 81bb      	LDD  R27,Y+2+1
004f22 5ba7      	SUBI R26,LOW(-_config_din_flag)
004f23 4fba      	SBCI R27,HIGH(-_config_din_flag)
004f24 e0e1      	LDI  R30,LOW(1)
004f25 940e da6c 	CALL __EEPROMWRB
                 ; 0007 022D     is_din_config_update[ch]            =   1;
004f27 81ea      	LDD  R30,Y+2
004f28 81fb      	LDD  R31,Y+2+1
004f29 50e3      	SUBI R30,LOW(-_is_din_config_update)
004f2a 4eff      	SBCI R31,HIGH(-_is_din_config_update)
004f2b e0a1      	LDI  R26,LOW(1)
004f2c 83a0      	STD  Z+0,R26
                 ; 0007 022E     return 0;
004f2d e0e0      	LDI  R30,LOW(0)
004f2e e0f0      	LDI  R31,HIGH(0)
004f2f c32c      	RJMP _0x20E0088
                 ; 0007 022F }
                 ;/*============================================================*/
                 ;int setAuxDoutConfig(int ch, struct dout_cnfg_st *newConfig)
                 ; 0007 0232 {
                 _setAuxDoutConfig:
                 ; 0007 0233     int i;
                 ; 0007 0234 
                 ; 0007 0235     if((ch < 0) || (ch > MAX_DO_CHANNEL)){
004f30 940e bf27 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004f32 81ad      	LDD  R26,Y+5
004f33 23aa      	TST  R26
004f34 f022      	BRMI _0xE0084
004f35 81ac      	LDD  R26,Y+4
004f36 81bd      	LDD  R27,Y+4+1
004f37 9716      	SBIW R26,6
004f38 f04c      	BRLT _0xE0083
                 _0xE0084:
                 ; 0007 0236         printDebug("\r\n<setAuxDoutConfig> Channel Error!!\r\n");
                +
004f39 e5eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2413 ) )
004f3a e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2413 ) )
004f3b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2413 ) )
004f3c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2413 ) )
                 	__POINTD1FN _0xE0000,2413
004f3d 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0237         return -1;
004f3f efef      	LDI  R30,LOW(65535)
004f40 efff      	LDI  R31,HIGH(65535)
004f41 c143      	RJMP _0x20E008B
                 ; 0007 0238     }
                 ; 0007 0239 
                 ; 0007 023A     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE0083:
004f42 81ea      	LDD  R30,Y+2
004f43 81fb      	LDD  R31,Y+2+1
004f44 81a2      	LDD  R26,Z+2
004f45 32a4      	CPI  R26,LOW(0x24)
004f46 f060      	BRLO _0xE0086
                 ; 0007 023B         printDebug("\r\n<setAuxDoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
004f47 e8e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2452 ) )
004f48 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2452 ) )
004f49 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2452 ) )
004f4a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2452 ) )
                 	__POINTD1FN _0xE0000,2452
004f4b 940e c25e 	CALL SUBOPT_0x106
004f4d 81e2      	LDD  R30,Z+2
004f4e 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 023C         return -1;
004f50 efef      	LDI  R30,LOW(65535)
004f51 efff      	LDI  R31,HIGH(65535)
004f52 c132      	RJMP _0x20E008B
                 ; 0007 023D     }
                 ; 0007 023E 
                 ; 0007 023F     config_dout[ch].channelEnable       =   0x01; //newConfig->channelEnable;      // Edit bug from software
                 _0xE0086:
004f53 940e c2cf 	CALL SUBOPT_0x11A
004f55 59e6      	SUBI R30,LOW(-_config_dout)
004f56 4ffe      	SBCI R31,HIGH(-_config_dout)
004f57 01df      	MOVW R26,R30
004f58 e0e1      	LDI  R30,LOW(1)
004f59 940e c3bc 	CALL SUBOPT_0x146
                 ; 0007 0240     config_dout[ch].stateOnEvent        =   0x00; //newConfig->stateOnEvent;
                +
004f5b 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
004f5c 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
004f5d 01df      	MOVW R26,R30
004f5e e0e0      	LDI  R30,LOW(0)
004f5f 940e c3bc 	CALL SUBOPT_0x146
                 ; 0007 0241     config_dout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
                +
004f61 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
004f62 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
004f63 01df      	MOVW R26,R30
004f64 81ea      	LDD  R30,Y+2
004f65 81fb      	LDD  R31,Y+2+1
004f66 81e2      	LDD  R30,Z+2
004f67 940e c3bf 	CALL SUBOPT_0x147
                 ; 0007 0242 
                 ; 0007 0243     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 0244     printDebug("\r\n channelEnable     >> 0x%02X",  config_dout[ch].channelEnable);
                +
004f69 edeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
004f6a e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
004f6b e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
004f6c e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
004f6d 940e c2d5 	CALL SUBOPT_0x11B
004f6f 940e c2dd 	CALL SUBOPT_0x11C
                 ; 0007 0245     printDebug("\r\n stateOnEvent      >> 0x%02X",  config_dout[ch].stateOnEvent);
                +
004f71 efea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2572 ) )
004f72 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2572 ) )
004f73 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2572 ) )
004f74 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2572 ) )
                 	__POINTD1FN _0xE0000,2572
004f75 940e c2d5 	CALL SUBOPT_0x11B
004f77 940e c2e3 	CALL SUBOPT_0x11D
                 ; 0007 0246     printDebug("\r\n eventSourceNumber >> %d",      config_dout[ch].eventSourceNumber);
004f79 940e c3c6 	CALL SUBOPT_0x148
004f7b 940e c2d5 	CALL SUBOPT_0x11B
004f7d 940e c2e9 	CALL SUBOPT_0x11E
004f7f 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0247     printDebug("\r\n eventSource       >> ");
004f81 940e c3cb 	CALL SUBOPT_0x149
                 ; 0007 0248 
                 ; 0007 0249     for(i=0;i<config_dout[ch].eventSourceNumber;i++){
                +
004f83 e000     +LDI R16 , LOW ( 0 )
004f84 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0088:
004f85 940e c2cf 	CALL SUBOPT_0x11A
004f87 940e c2e9 	CALL SUBOPT_0x11E
004f89 940e c2ef 	CALL SUBOPT_0x11F
004f8b f4d4      	BRGE _0xE0089
                 ; 0007 024A 
                 ; 0007 024B         config_dout[ch].eventSource[i]  =   newConfig->eventSource[i];
004f8c 940e c2cf 	CALL SUBOPT_0x11A
004f8e 940e c2f4 	CALL SUBOPT_0x120
004f90 940e c23e 	CALL SUBOPT_0x101
004f92 81e0      	LD   R30,Z
004f93 940e c3bc 	CALL SUBOPT_0x146
                 ; 0007 024C 
                 ; 0007 024D         if( config_dout[ch].eventSource[i] != 0x00 ){
004f95 940e c2f4 	CALL SUBOPT_0x120
004f97 940e da50 	CALL __EEPROMRDB
004f99 30e0      	CPI  R30,0
004f9a f041      	BREQ _0xE008A
                 ; 0007 024E             printDebug("[0x%02X]",config_dout[ch].eventSource[i]);
004f9b 940e c332 	CALL SUBOPT_0x12B
004f9d 940e c2d5 	CALL SUBOPT_0x11B
004f9f 940e c2f4 	CALL SUBOPT_0x120
004fa1 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 024F         }
                 ; 0007 0250     }
                 _0xE008A:
                +
004fa3 5f0f     +SUBI R16 , LOW ( - 1 )
004fa4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
004fa5 cfdf      	RJMP _0xE0088
                 _0xE0089:
                 ; 0007 0251     printDebug("\r\n");
004fa6 940e c26d 	CALL SUBOPT_0x109
                 ; 0007 0252 
                 ; 0007 0253     config_dout_flag[ch]                =   0x01;
004fa8 81ac      	LDD  R26,Y+4
004fa9 81bd      	LDD  R27,Y+4+1
004faa 5aa7      	SUBI R26,LOW(-_config_dout_flag)
004fab 4fba      	SBCI R27,HIGH(-_config_dout_flag)
004fac e0e1      	LDI  R30,LOW(1)
004fad 940e da6c 	CALL __EEPROMWRB
                 ; 0007 0254     is_dout_config_update[ch]           =   1;
004faf 81ec      	LDD  R30,Y+4
004fb0 81fd      	LDD  R31,Y+4+1
004fb1 5fe3      	SUBI R30,LOW(-_is_dout_config_update)
004fb2 4efe      	SBCI R31,HIGH(-_is_dout_config_update)
004fb3 e0a1      	LDI  R26,LOW(1)
004fb4 83a0      	STD  Z+0,R26
                 ; 0007 0255 
                 ; 0007 0256     return 0;
004fb5 c0cd      	RJMP _0x20E008C
                 ; 0007 0257 }
                 ;/*============================================================*/
                 ;int setAuxAinConfig(int ch, struct ain_cnfg_st *newConfig)
                 ; 0007 025A {
                 _setAuxAinConfig:
                 ; 0007 025B     if((ch < 0) || (ch > MAX_AI_CHANNEL)){
004fb6 940e c272 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*newConfig -> Y+0
004fb8 f022      	BRMI _0xE008C
004fb9 81aa      	LDD  R26,Y+2
004fba 81bb      	LDD  R27,Y+2+1
004fbb 9751      	SBIW R26,17
004fbc f01c      	BRLT _0xE008B
                 _0xE008C:
                 ; 0007 025C         return -1;
004fbd efef      	LDI  R30,LOW(65535)
004fbe efff      	LDI  R31,HIGH(65535)
004fbf c29c      	RJMP _0x20E0088
                 ; 0007 025D     }
                 ; 0007 025E 
                 ; 0007 025F     config_ain[ch].channelEnable        =   newConfig->channelEnable;
                 _0xE008B:
004fc0 940e c2fa 	CALL SUBOPT_0x121
004fc2 5de8      	SUBI R30,LOW(-_config_ain)
004fc3 4ffd      	SBCI R31,HIGH(-_config_ain)
004fc4 010f      	MOVW R0,R30
004fc5 81a8      	LD   R26,Y
004fc6 81b9      	LDD  R27,Y+1
004fc7 940e c361 	CALL SUBOPT_0x134
                 ; 0007 0260     config_ain[ch].alarmLevel           =   newConfig->alarmLevel;
004fc9 940e c2fa 	CALL SUBOPT_0x121
                +
004fcb 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004fcc 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004fcd 940e c39e 	CALL SUBOPT_0x141
004fcf 940e c389 	CALL SUBOPT_0x13D
                 ; 0007 0261 
                 ; 0007 0262     printDebug("\r\n channel         >> [%d]",      ch);
004fd1 940e c3a9 	CALL SUBOPT_0x143
004fd3 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0007 0263     printDebug("\r\n channelEnable   >> 0x%02X",    config_ain[ch].channelEnable);
004fd5 940e c3ae 	CALL SUBOPT_0x144
004fd7 e0e5      	LDI  R30,LOW(5)
004fd8 940e d95a 	CALL __MULB1W2U
004fda 5de8      	SUBI R30,LOW(-_config_ain)
004fdb 4ffd      	SBCI R31,HIGH(-_config_ain)
004fdc 01df      	MOVW R26,R30
004fdd 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 0264     printDebug("\r\n alarmLevel      >> %d",        config_ain[ch].alarmLevel);
                +
004fdf e4ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2655 ) )
004fe0 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2655 ) )
004fe1 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2655 ) )
004fe2 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2655 ) )
                 	__POINTD1FN _0xE0000,2655
004fe3 940e c3b7 	CALL SUBOPT_0x145
004fe5 e0e5      	LDI  R30,LOW(5)
004fe6 940e d95a 	CALL __MULB1W2U
                +
004fe8 5de7     +SUBI R30 , LOW ( - _config_ain - ( 1 ) )
004fe9 4ffd     +SBCI R31 , HIGH ( - _config_ain - ( 1 ) )
                 	__ADDW1MN _config_ain,1
004fea 940e c3d1 	CALL SUBOPT_0x14A
                 ; 0007 0265 
                 ; 0007 0266     config_ain_flag[ch]                 = 0x01;
004fec 81aa      	LDD  R26,Y+2
004fed 81bb      	LDD  R27,Y+2+1
004fee 5aa2      	SUBI R26,LOW(-_config_ain_flag)
004fef 4fba      	SBCI R27,HIGH(-_config_ain_flag)
004ff0 e0e1      	LDI  R30,LOW(1)
004ff1 940e da6c 	CALL __EEPROMWRB
                 ; 0007 0267 
                 ; 0007 0268     return 0;
004ff3 e0e0      	LDI  R30,LOW(0)
004ff4 e0f0      	LDI  R31,HIGH(0)
004ff5 c266      	RJMP _0x20E0088
                 ; 0007 0269 }
                 ;/*============================================================*/
                 ;int setAuxAoutConfig(int ch, struct aout_cnfg_st *newConfig)
                 ; 0007 026C {
                 _setAuxAoutConfig:
                 ; 0007 026D     int i;
                 ; 0007 026E 
                 ; 0007 026F     if((ch < 0) || (ch > MAX_AO_CHANNEL)){
004ff6 940e bf27 	CALL SUBOPT_0x81
                 ;	ch -> Y+4
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
004ff8 81ad      	LDD  R26,Y+5
004ff9 23aa      	TST  R26
004ffa f022      	BRMI _0xE008F
004ffb 81ac      	LDD  R26,Y+4
004ffc 81bd      	LDD  R27,Y+4+1
004ffd 9751      	SBIW R26,17
004ffe f04c      	BRLT _0xE008E
                 _0xE008F:
                 ; 0007 0270         printDebug("\r\n<setAuxAoutConfig> Channel Error!!\r\n");
                +
004fff e6e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2680 ) )
005000 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2680 ) )
005001 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2680 ) )
005002 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2680 ) )
                 	__POINTD1FN _0xE0000,2680
005003 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 0271         return -1;
005005 efef      	LDI  R30,LOW(65535)
005006 efff      	LDI  R31,HIGH(65535)
005007 c07d      	RJMP _0x20E008B
                 ; 0007 0272     }
                 ; 0007 0273 
                 ; 0007 0274     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
                 _0xE008E:
005008 81ea      	LDD  R30,Y+2
005009 81fb      	LDD  R31,Y+2+1
00500a 81a5      	LDD  R26,Z+5
00500b 32a4      	CPI  R26,LOW(0x24)
00500c f060      	BRLO _0xE0091
                 ; 0007 0275         printDebug("\r\n<setAuxAoutConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
00500d e8ed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2719 ) )
00500e e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2719 ) )
00500f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2719 ) )
005010 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2719 ) )
                 	__POINTD1FN _0xE0000,2719
005011 940e c25e 	CALL SUBOPT_0x106
005013 81e5      	LDD  R30,Z+5
005014 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0276         return -1;
005016 efef      	LDI  R30,LOW(65535)
005017 efff      	LDI  R31,HIGH(65535)
005018 c06c      	RJMP _0x20E008B
                 ; 0007 0277     }
                 ; 0007 0278 
                 ; 0007 0279     config_aout[ch].channelEnable       =   newConfig->channelEnable;
                 _0xE0091:
005019 940e c306 	CALL SUBOPT_0x123
00501b 58e8      	SUBI R30,LOW(-_config_aout)
00501c 4ffd      	SBCI R31,HIGH(-_config_aout)
00501d 010f      	MOVW R0,R30
00501e 81aa      	LDD  R26,Y+2
00501f 81bb      	LDD  R27,Y+2+1
005020 940e c361 	CALL SUBOPT_0x134
                 ; 0007 027A     config_aout[ch].levelOnEvent        =   newConfig->levelOnEvent;
005022 940e c306 	CALL SUBOPT_0x123
                +
005024 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
005025 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
005026 010f      	MOVW R0,R30
005027 81aa      	LDD  R26,Y+2
005028 81bb      	LDD  R27,Y+2+1
005029 9611      	ADIW R26,1
00502a 940e c389 	CALL SUBOPT_0x13D
                 ; 0007 027B     config_aout[ch].eventSourceNumber   =   newConfig->eventSourceNumber;
00502c 940e c306 	CALL SUBOPT_0x123
                +
00502e 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00502f 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
005030 01df      	MOVW R26,R30
005031 81ea      	LDD  R30,Y+2
005032 81fb      	LDD  R31,Y+2+1
005033 81e5      	LDD  R30,Z+5
005034 940e c3bf 	CALL SUBOPT_0x147
                 ; 0007 027C 
                 ; 0007 027D     printDebug("\r\n channel           >> [%d]",    ch);
                 ; 0007 027E     printDebug("\r\n channelEnable     >> 0x%02X",  config_aout[ch].channelEnable);
                +
005036 edeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2541 ) )
005037 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2541 ) )
005038 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2541 ) )
005039 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2541 ) )
                 	__POINTD1FN _0xE0000,2541
00503a 940e c3d8 	CALL SUBOPT_0x14B
00503c 58e8      	SUBI R30,LOW(-_config_aout)
00503d 4ffd      	SBCI R31,HIGH(-_config_aout)
00503e 01df      	MOVW R26,R30
00503f 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 027F     printDebug("\r\n levelOnEvent      >> %f",      config_aout[ch].levelOnEvent);
                +
005041 ece9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2779 ) )
005042 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2779 ) )
005043 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2779 ) )
005044 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2779 ) )
                 	__POINTD1FN _0xE0000,2779
005045 940e c3d8 	CALL SUBOPT_0x14B
                +
005047 58e7     +SUBI R30 , LOW ( - _config_aout - ( 1 ) )
005048 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 1 ) )
                 	__ADDW1MN _config_aout,1
005049 940e c3d1 	CALL SUBOPT_0x14A
                 ; 0007 0280     printDebug("\r\n eventSourceNumber >> %d",      config_aout[ch].eventSourceNumber);
00504b 940e c3c6 	CALL SUBOPT_0x148
00504d 940e c3d8 	CALL SUBOPT_0x14B
00504f 940e c30c 	CALL SUBOPT_0x124
005051 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0281     printDebug("\r\n eventSource       >> ");
005053 940e c3cb 	CALL SUBOPT_0x149
                 ; 0007 0282 
                 ; 0007 0283     for(i=0;i<config_aout[ch].eventSourceNumber;i++){
                +
005055 e000     +LDI R16 , LOW ( 0 )
005056 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0093:
005057 940e c306 	CALL SUBOPT_0x123
005059 940e c30c 	CALL SUBOPT_0x124
00505b 940e c2ef 	CALL SUBOPT_0x11F
00505d f4e4      	BRGE _0xE0094
                 ; 0007 0284 
                 ; 0007 0285         config_aout[ch].eventSource[i]  =   newConfig->eventSource[i];
00505e 940e c306 	CALL SUBOPT_0x123
005060 940e c312 	CALL SUBOPT_0x125
005062 940e c300 	CALL SUBOPT_0x122
005064 81e0      	LD   R30,Z
005065 940e da6c 	CALL __EEPROMWRB
                 ; 0007 0286 
                 ; 0007 0287         if( config_aout[ch].eventSource[i] != 0x00 ){
005067 940e c306 	CALL SUBOPT_0x123
005069 940e c312 	CALL SUBOPT_0x125
00506b 940e da50 	CALL __EEPROMRDB
00506d 30e0      	CPI  R30,0
00506e f041      	BREQ _0xE0095
                 ; 0007 0288             printDebug("[0x%02X]",config_aout[ch].eventSource[i]);
00506f 940e c332 	CALL SUBOPT_0x12B
005071 940e c3d8 	CALL SUBOPT_0x14B
005073 940e c312 	CALL SUBOPT_0x125
005075 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 0289         }
                 ; 0007 028A     }
                 _0xE0095:
                +
005077 5f0f     +SUBI R16 , LOW ( - 1 )
005078 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005079 cfdd      	RJMP _0xE0093
                 _0xE0094:
                 ; 0007 028B     printDebug("\r\n");
00507a 940e c26d 	CALL SUBOPT_0x109
                 ; 0007 028C 
                 ; 0007 028D     config_aout_flag[ch]                =   0x01;
00507c 81ac      	LDD  R26,Y+4
00507d 81bd      	LDD  R27,Y+4+1
00507e 59a2      	SUBI R26,LOW(-_config_aout_flag)
00507f 4fba      	SBCI R27,HIGH(-_config_aout_flag)
005080 e0e1      	LDI  R30,LOW(1)
005081 940e da6c 	CALL __EEPROMWRB
                 ; 0007 028E 
                 ; 0007 028F     return 0;
                 _0x20E008C:
005083 e0e0      	LDI  R30,LOW(0)
005084 e0f0      	LDI  R31,HIGH(0)
                 _0x20E008B:
005085 8119      	LDD  R17,Y+1
005086 8108      	LDD  R16,Y+0
005087 9626      	ADIW R28,6
005088 9508      	RET
                 ; 0007 0290 }
                 ;/*============================================================*/
                 ;int setBuzzerConfig(struct buzz_cnfg_st *newConfig)
                 ; 0007 0293 {
                 _setBuzzerConfig:
                 ; 0007 0294     int i;
                 ; 0007 0295 
                 ; 0007 0296     if( (newConfig->eventSourceNumber) > MAX_EVENT_SOURCE ){
005089 940e bf27 	CALL SUBOPT_0x81
                 ;	*newConfig -> Y+2
                 ;	i -> R16,R17
00508b 81ea      	LDD  R30,Y+2
00508c 81fb      	LDD  R31,Y+2+1
00508d 81a1      	LDD  R26,Z+1
00508e 32a4      	CPI  R26,LOW(0x24)
00508f f070      	BRLO _0xE0096
                 ; 0007 0297         printDebug("\r\n<setBuzzerConfig> eventSourceNumber is too long (%d)!!\r\n",(newConfig->eventSourceNumber));
                +
005090 eee4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2806 ) )
005091 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2806 ) )
005092 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2806 ) )
005093 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2806 ) )
                 	__POINTD1FN _0xE0000,2806
005094 940e c25e 	CALL SUBOPT_0x106
005096 81e1      	LDD  R30,Z+1
005097 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 0298         return -1;
005099 efef      	LDI  R30,LOW(65535)
00509a efff      	LDI  R31,HIGH(65535)
00509b 8119      	LDD  R17,Y+1
00509c 8108      	LDD  R16,Y+0
00509d c1be      	RJMP _0x20E0088
                 ; 0007 0299     }
                 ; 0007 029A 
                 ; 0007 029B     config_buzz.enable                  =   newConfig->enable;
                 _0xE0096:
00509e 81aa      	LDD  R26,Y+2
00509f 81bb      	LDD  R27,Y+2+1
0050a0 91ec      	LD   R30,X
0050a1 e0a8      	LDI  R26,LOW(_config_buzz)
0050a2 e0b5      	LDI  R27,HIGH(_config_buzz)
0050a3 940e da6c 	CALL __EEPROMWRB
                 ; 0007 029C     config_buzz.eventSourceNumber       =   newConfig->eventSourceNumber;
                +
0050a5 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
0050a6 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
0050a7 81ea      	LDD  R30,Y+2
0050a8 81fb      	LDD  R31,Y+2+1
0050a9 81e1      	LDD  R30,Z+1
0050aa 940e da6c 	CALL __EEPROMWRB
                 ; 0007 029D 
                 ; 0007 029E     printDebug("\r\n enable            >> 0x%02X",  config_buzz.enable);
                +
0050ac e1ef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2865 ) )
0050ad e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2865 ) )
0050ae e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2865 ) )
0050af e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2865 ) )
                 	__POINTD1FN _0xE0000,2865
0050b0 940e da29 	CALL __PUTPARD1
0050b2 e0a8      	LDI  R26,LOW(_config_buzz)
0050b3 e0b5      	LDI  R27,HIGH(_config_buzz)
0050b4 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 029F     printDebug("\r\n eventSourceNumber >> %d",      config_buzz.eventSourceNumber);
0050b6 940e c3c6 	CALL SUBOPT_0x148
0050b8 940e da29 	CALL __PUTPARD1
0050ba 940e c323 	CALL SUBOPT_0x128
0050bc 940e bccc 	CALL SUBOPT_0x29
                 ; 0007 02A0     printDebug("\r\n eventSource       >>");
                +
0050be e3ee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2896 ) )
0050bf e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2896 ) )
0050c0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2896 ) )
0050c1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2896 ) )
                 	__POINTD1FN _0xE0000,2896
0050c2 940e bbba 	CALL SUBOPT_0x3
                 ; 0007 02A1 
                 ; 0007 02A2     for(i=0;i<config_buzz.eventSourceNumber;i++){
                +
0050c4 e000     +LDI R16 , LOW ( 0 )
0050c5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE0098:
0050c6 940e c323 	CALL SUBOPT_0x128
0050c8 940e c2ef 	CALL SUBOPT_0x11F
0050ca f4cc      	BRGE _0xE0099
                 ; 0007 02A3 
                 ; 0007 02A4         config_buzz.eventSource[i]      =   newConfig->eventSource[i];
0050cb 940e c3e0 	CALL SUBOPT_0x14C
0050cd 81ea      	LDD  R30,Y+2
0050ce 81fb      	LDD  R31,Y+2+1
0050cf 940e c337 	CALL SUBOPT_0x12C
0050d1 940e da6c 	CALL __EEPROMWRB
                 ; 0007 02A5 
                 ; 0007 02A6         if( config_buzz.eventSource[i] != 0x00 ){
0050d3 940e c3e0 	CALL SUBOPT_0x14C
0050d5 940e da50 	CALL __EEPROMRDB
0050d7 30e0      	CPI  R30,0
0050d8 f041      	BREQ _0xE009A
                 ; 0007 02A7             printDebug("[0x%02X]",config_buzz.eventSource[i]);
0050d9 940e c332 	CALL SUBOPT_0x12B
0050db 940e da29 	CALL __PUTPARD1
0050dd 940e c3e0 	CALL SUBOPT_0x14C
0050df 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 02A8         }
                 ; 0007 02A9 
                 ; 0007 02AA     }
                 _0xE009A:
                +
0050e1 5f0f     +SUBI R16 , LOW ( - 1 )
0050e2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0050e3 cfe2      	RJMP _0xE0098
                 _0xE0099:
                 ; 0007 02AB     printDebug("\r\n");
0050e4 940e c26d 	CALL SUBOPT_0x109
                 ; 0007 02AC 
                 ; 0007 02AD     config_buzz_flag                    =   0x01;
0050e6 e7ae      	LDI  R26,LOW(_config_buzz_flag)
0050e7 e0b5      	LDI  R27,HIGH(_config_buzz_flag)
0050e8 940e c366 	CALL SUBOPT_0x135
                 ; 0007 02AE 
                 ; 0007 02AF     is_buzzer_config_update             =   1;
0050ea 93e0 1112 	STS  _is_buzzer_config_update,R30
                 ; 0007 02B0 
                 ; 0007 02B1     return 0;
0050ec 940e c153 	CALL SUBOPT_0xD8
0050ee c16d      	RJMP _0x20E0088
                 ; 0007 02B2 }
                 ;/*============================================================*/
                 ;int setEnvAlarmConfig(struct alm_cnfg_st *newConfig)
                 ; 0007 02B5 {
                 _setEnvAlarmConfig:
                 ; 0007 02B6     config_alm.gsmRSSILevel             =   newConfig->gsmRSSILevel;
0050ef 93ba      	ST   -Y,R27
0050f0 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
0050f1 81a8      	LD   R26,Y
0050f2 81b9      	LDD  R27,Y+1
0050f3 940e d9f4 	CALL __GETD1P
0050f5 e2ad      	LDI  R26,LOW(_config_alm)
0050f6 e0b5      	LDI  R27,HIGH(_config_alm)
0050f7 940e da5c 	CALL __EEPROMWRD
                 ; 0007 02B7     config_alm.gsmCreditBalance         =   newConfig->gsmCreditBalance;
                +
0050f9 e3e1     +LDI R30 , LOW ( _config_alm + ( 4 ) )
0050fa e0f5     +LDI R31 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW1MN _config_alm,4
0050fb 010f      	MOVW R0,R30
0050fc 81a8      	LD   R26,Y
0050fd 81b9      	LDD  R27,Y+1
0050fe 9614      	ADIW R26,4
0050ff 940e c3a3 	CALL SUBOPT_0x142
                 ; 0007 02B8     config_alm.batteryLevel             =   newConfig->batteryLevel;
                +
005101 e3e3     +LDI R30 , LOW ( _config_alm + ( 6 ) )
005102 e0f5     +LDI R31 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW1MN _config_alm,6
005103 010f      	MOVW R0,R30
005104 81a8      	LD   R26,Y
005105 81b9      	LDD  R27,Y+1
005106 9616      	ADIW R26,6
005107 940e c389 	CALL SUBOPT_0x13D
                 ; 0007 02B9     config_alm.commSignalLevel          =   newConfig->commSignalLevel;
                +
005109 e3e7     +LDI R30 , LOW ( _config_alm + ( 10 ) )
00510a e0f5     +LDI R31 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW1MN _config_alm,10
00510b 010f      	MOVW R0,R30
00510c 81a8      	LD   R26,Y
00510d 81b9      	LDD  R27,Y+1
00510e 961a      	ADIW R26,10
00510f 940e c389 	CALL SUBOPT_0x13D
                 ; 0007 02BA     config_alm.commLostDelay            =   newConfig->commLostDelay;
                +
005111 e3eb     +LDI R30 , LOW ( _config_alm + ( 14 ) )
005112 e0f5     +LDI R31 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW1MN _config_alm,14
005113 010f      	MOVW R0,R30
005114 81a8      	LD   R26,Y
005115 81b9      	LDD  R27,Y+1
005116 961e      	ADIW R26,14
005117 940e c3a3 	CALL SUBOPT_0x142
                 ; 0007 02BB     config_alm.memoryMin                =   newConfig->memoryMin;
                +
005119 e3ed     +LDI R30 , LOW ( _config_alm + ( 16 ) )
00511a e0f5     +LDI R31 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW1MN _config_alm,16
00511b 010f      	MOVW R0,R30
00511c 81a8      	LD   R26,Y
00511d 81b9      	LDD  R27,Y+1
00511e 9650      	ADIW R26,16
00511f 940e c3a3 	CALL SUBOPT_0x142
                 ; 0007 02BC 
                 ; 0007 02BD     printDebug("\r\n gsmRSSILevel     >> %f dB",    config_alm.gsmRSSILevel);
                +
005121 e5e6     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2920 ) )
005122 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2920 ) )
005123 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2920 ) )
005124 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2920 ) )
                 	__POINTD1FN _0xE0000,2920
005125 940e da29 	CALL __PUTPARD1
005127 e2ad      	LDI  R26,LOW(_config_alm)
005128 e0b5      	LDI  R27,HIGH(_config_alm)
005129 940e c3e6 	CALL SUBOPT_0x14D
                 ; 0007 02BE     printDebug("\r\n gsmCreditBalance >> %d Baht",  config_alm.gsmCreditBalance);
                +
00512b e7e3     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2949 ) )
00512c e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2949 ) )
00512d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2949 ) )
00512e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2949 ) )
                 	__POINTD1FN _0xE0000,2949
00512f 940e da29 	CALL __PUTPARD1
                +
005131 e3a1     +LDI R26 , LOW ( _config_alm + ( 4 ) )
005132 e0b5     +LDI R27 , HIGH ( _config_alm + ( 4 ) )
                 	__POINTW2MN _config_alm,4
005133 940e da4c 	CALL __EEPROMRDW
005135 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0007 02BF     printDebug("\r\n batteryLevel     >> %f Volts", config_alm.batteryLevel);
                +
005137 e9e2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2980 ) )
005138 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2980 ) )
005139 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2980 ) )
00513a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2980 ) )
                 	__POINTD1FN _0xE0000,2980
00513b 940e da29 	CALL __PUTPARD1
                +
00513d e3a3     +LDI R26 , LOW ( _config_alm + ( 6 ) )
00513e e0b5     +LDI R27 , HIGH ( _config_alm + ( 6 ) )
                 	__POINTW2MN _config_alm,6
00513f 940e c3e6 	CALL SUBOPT_0x14D
                 ; 0007 02C0     printDebug("\r\n commSignalLevel  >> %f dB",    config_alm.commSignalLevel);
                +
005141 ebe2     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3012 ) )
005142 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3012 ) )
005143 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3012 ) )
005144 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3012 ) )
                 	__POINTD1FN _0xE0000,3012
005145 940e da29 	CALL __PUTPARD1
                +
005147 e3a7     +LDI R26 , LOW ( _config_alm + ( 10 ) )
005148 e0b5     +LDI R27 , HIGH ( _config_alm + ( 10 ) )
                 	__POINTW2MN _config_alm,10
005149 940e c3e6 	CALL SUBOPT_0x14D
                 ; 0007 02C1     printDebug("\r\n commLostDelay    >> %d sec",   config_alm.commLostDelay);
                +
00514b ecef     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3041 ) )
00514c e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3041 ) )
00514d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3041 ) )
00514e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3041 ) )
                 	__POINTD1FN _0xE0000,3041
00514f 940e da29 	CALL __PUTPARD1
                +
005151 e3ab     +LDI R26 , LOW ( _config_alm + ( 14 ) )
005152 e0b5     +LDI R27 , HIGH ( _config_alm + ( 14 ) )
                 	__POINTW2MN _config_alm,14
005153 940e da4c 	CALL __EEPROMRDW
005155 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0007 02C2     printDebug("\r\n memoryMin        >> %d MB.",   config_alm.memoryMin);
                +
005157 eeed     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3071 ) )
005158 e1fe     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3071 ) )
005159 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3071 ) )
00515a e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3071 ) )
                 	__POINTD1FN _0xE0000,3071
00515b 940e da29 	CALL __PUTPARD1
                +
00515d e3ad     +LDI R26 , LOW ( _config_alm + ( 16 ) )
00515e e0b5     +LDI R27 , HIGH ( _config_alm + ( 16 ) )
                 	__POINTW2MN _config_alm,16
00515f 940e da4c 	CALL __EEPROMRDW
005161 940e bd18 	CALL SUBOPT_0x34
005163 940e bc2c 	CALL SUBOPT_0x12
                 ; 0007 02C3 
                 ; 0007 02C4     config_alm_flag                 = 0x01;
005165 e7af      	LDI  R26,LOW(_config_alm_flag)
005166 e0b5      	LDI  R27,HIGH(_config_alm_flag)
005167 940e c366 	CALL SUBOPT_0x135
                 ; 0007 02C5     is_env_config_update            = 1;
005169 93e0 1114 	STS  _is_env_config_update,R30
                 ; 0007 02C6     return 0;
00516b c02d      	RJMP _0x20E008A
                 ; 0007 02C7 }
                 ;/*============================================================*/
                 ;int setStatusReportConfig(struct stat_cnfg_st *newConfig)
                 ; 0007 02CA {
                 _setStatusReportConfig:
                 ; 0007 02CB     config_stat.accm                    =   newConfig->accm;
00516c 93ba      	ST   -Y,R27
00516d 93aa      	ST   -Y,R26
                 ;	*newConfig -> Y+0
00516e 81a8      	LD   R26,Y
00516f 81b9      	LDD  R27,Y+1
005170 91ec      	LD   R30,X
005171 e3af      	LDI  R26,LOW(_config_stat)
005172 e0b5      	LDI  R27,HIGH(_config_stat)
005173 940e da6c 	CALL __EEPROMWRB
                 ; 0007 02CC     config_stat.intv                    =   newConfig->intv;
                +
005175 e4e0     +LDI R30 , LOW ( _config_stat + ( 1 ) )
005176 e0f5     +LDI R31 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW1MN _config_stat,1
005177 940e c39e 	CALL SUBOPT_0x141
005179 940e c3a3 	CALL SUBOPT_0x142
                 ; 0007 02CD 
                 ; 0007 02CE     printDebug("\r\n accm     >> %f dB",    config_stat.accm);
                +
00517b e0eb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3101 ) )
00517c e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3101 ) )
00517d e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3101 ) )
00517e e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3101 ) )
                 	__POINTD1FN _0xE0000,3101
00517f 940e da29 	CALL __PUTPARD1
005181 e3af      	LDI  R26,LOW(_config_stat)
005182 e0b5      	LDI  R27,HIGH(_config_stat)
005183 940e c36a 	CALL SUBOPT_0x136
                 ; 0007 02CF     printDebug("\r\n intv     >> %d Baht",  config_stat.intv);
                +
005185 e2e0     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3122 ) )
005186 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3122 ) )
005187 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3122 ) )
005188 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3122 ) )
                 	__POINTD1FN _0xE0000,3122
005189 940e da29 	CALL __PUTPARD1
                +
00518b e4a0     +LDI R26 , LOW ( _config_stat + ( 1 ) )
00518c e0b5     +LDI R27 , HIGH ( _config_stat + ( 1 ) )
                 	__POINTW2MN _config_stat,1
00518d 940e da4c 	CALL __EEPROMRDW
00518f 940e bd18 	CALL SUBOPT_0x34
005191 940e bc2c 	CALL SUBOPT_0x12
                 ; 0007 02D0 
                 ; 0007 02D1     config_stat_flag                    = 0x01;
005193 e8a0      	LDI  R26,LOW(_config_stat_flag)
005194 e0b5      	LDI  R27,HIGH(_config_stat_flag)
005195 940e c366 	CALL SUBOPT_0x135
                 ; 0007 02D2     is_status_config_update             = 1;
005197 93e0 1113 	STS  _is_status_config_update,R30
                 ; 0007 02D3     return 0;
                 _0x20E008A:
005199 e0e0      	LDI  R30,LOW(0)
00519a e0f0      	LDI  R31,HIGH(0)
00519b 9622      	ADIW R28,2
00519c 9508      	RET
                 ; 0007 02D4 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********* Service Configuration Management Function **********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int setDefaultConfig(void)
                 ; 0007 02DC {
                 ; 0007 02DD     int i;
                 ; 0007 02DE 
                 ; 0007 02DF     config_prop_flag            = 0x00;
                 ;	i -> R16,R17
                 ; 0007 02E0     config_oper_flag            = 0x00;
                 ; 0007 02E1 
                 ; 0007 02E2     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 ; 0007 02E3         config_sens_flag[i]     = 0x00;
                 ; 0007 02E4     }
                 ; 0007 02E5 
                 ; 0007 02E6     for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 02E7         config_din_flag[i]      = 0x00;
                 ; 0007 02E8     }
                 ; 0007 02E9 
                 ; 0007 02EA     for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 02EB         config_dout_flag[i]     = 0x00;
                 ; 0007 02EC     }
                 ; 0007 02ED 
                 ; 0007 02EE     for(i=0;i<MAX_AI_CHANNEL;i++){
                 ; 0007 02EF         config_ain_flag[i]      = 0x00;
                 ; 0007 02F0     }
                 ; 0007 02F1 
                 ; 0007 02F2     for(i=0;i<MAX_AO_CHANNEL;i++){
                 ; 0007 02F3         config_aout_flag[i]     = 0x00;
                 ; 0007 02F4     }
                 ; 0007 02F5 
                 ; 0007 02F6     config_buzz_flag            = 0x00;
                 ; 0007 02F7     config_alm_flag             = 0x00;
                 ; 0007 02F8     config_stat_flag            = 0x00;
                 ; 0007 02F9 
                 ; 0007 02FA     return 0;
                 ; 0007 02FB }
                 ;/*============================================================*/
                 ;int isDeviceConfig(void)
                 ; 0007 02FE {
                 _isDeviceConfig:
                 ; 0007 02FF     int i   = 0;
                 ; 0007 0300 
                 ; 0007 0301     if( config_prop_flag || config_oper_flag || config_buzz_flag || config_alm_flag || config_stat_flag ){
00519d 940e bfe8 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
00519f e4a2      	LDI  R26,LOW(_config_prop_flag)
0051a0 e0b5      	LDI  R27,HIGH(_config_prop_flag)
0051a1 940e da50 	CALL __EEPROMRDB
0051a3 30e0      	CPI  R30,0
0051a4 f4c1      	BRNE _0xE00AB
0051a5 e4a3      	LDI  R26,LOW(_config_oper_flag)
0051a6 e0b5      	LDI  R27,HIGH(_config_oper_flag)
0051a7 940e da50 	CALL __EEPROMRDB
0051a9 30e0      	CPI  R30,0
0051aa f491      	BRNE _0xE00AB
0051ab e7ae      	LDI  R26,LOW(_config_buzz_flag)
0051ac e0b5      	LDI  R27,HIGH(_config_buzz_flag)
0051ad 940e da50 	CALL __EEPROMRDB
0051af 30e0      	CPI  R30,0
0051b0 f461      	BRNE _0xE00AB
0051b1 e7af      	LDI  R26,LOW(_config_alm_flag)
0051b2 e0b5      	LDI  R27,HIGH(_config_alm_flag)
0051b3 940e da50 	CALL __EEPROMRDB
0051b5 30e0      	CPI  R30,0
0051b6 f431      	BRNE _0xE00AB
0051b7 e8a0      	LDI  R26,LOW(_config_stat_flag)
0051b8 e0b5      	LDI  R27,HIGH(_config_stat_flag)
0051b9 940e da50 	CALL __EEPROMRDB
0051bb 30e0      	CPI  R30,0
0051bc f019      	BREQ _0xE00AA
                 _0xE00AB:
                 ; 0007 0302         return 1;
0051bd e0e1      	LDI  R30,LOW(1)
0051be e0f0      	LDI  R31,HIGH(1)
0051bf c038      	RJMP _0x20E0089
                 ; 0007 0303     }
                 ; 0007 0304 
                 ; 0007 0305     for(i=0;i<MAX_SENS_CHANNEL;i++){
                 _0xE00AA:
                +
0051c0 e000     +LDI R16 , LOW ( 0 )
0051c1 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00AE:
                +
0051c2 3005     +CPI R16 , LOW ( 5 )
0051c3 e0e0     +LDI R30 , HIGH ( 5 )
0051c4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0051c5 f464      	BRGE _0xE00AF
                 ; 0007 0306         if(config_sens_flag[i]){
0051c6 e4a4      	LDI  R26,LOW(_config_sens_flag)
0051c7 e0b5      	LDI  R27,HIGH(_config_sens_flag)
0051c8 940e c20e 	CALL SUBOPT_0xFA
0051ca 30e0      	CPI  R30,0
0051cb f019      	BREQ _0xE00B0
                 ; 0007 0307             return 1;
0051cc e0e1      	LDI  R30,LOW(1)
0051cd e0f0      	LDI  R31,HIGH(1)
0051ce c029      	RJMP _0x20E0089
                 ; 0007 0308         }
                 ; 0007 0309     }
                 _0xE00B0:
                +
0051cf 5f0f     +SUBI R16 , LOW ( - 1 )
0051d0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051d1 cff0      	RJMP _0xE00AE
                 _0xE00AF:
                 ; 0007 030A 
                 ; 0007 030B     //for(i=0;i<MAX_DI_CHANNEL;i++){
                 ; 0007 030C     for(i=0;i<2;i++){
                +
0051d2 e000     +LDI R16 , LOW ( 0 )
0051d3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B2:
                +
0051d4 3002     +CPI R16 , LOW ( 2 )
0051d5 e0e0     +LDI R30 , HIGH ( 2 )
0051d6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0051d7 f464      	BRGE _0xE00B3
                 ; 0007 030D         if(config_din_flag[i]){
0051d8 e4a9      	LDI  R26,LOW(_config_din_flag)
0051d9 e0b5      	LDI  R27,HIGH(_config_din_flag)
0051da 940e c20e 	CALL SUBOPT_0xFA
0051dc 30e0      	CPI  R30,0
0051dd f019      	BREQ _0xE00B4
                 ; 0007 030E             return 1;
0051de e0e1      	LDI  R30,LOW(1)
0051df e0f0      	LDI  R31,HIGH(1)
0051e0 c017      	RJMP _0x20E0089
                 ; 0007 030F         }
                 ; 0007 0310     }
                 _0xE00B4:
                +
0051e1 5f0f     +SUBI R16 , LOW ( - 1 )
0051e2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051e3 cff0      	RJMP _0xE00B2
                 _0xE00B3:
                 ; 0007 0311 
                 ; 0007 0312     //for(i=0;i<MAX_DO_CHANNEL;i++){
                 ; 0007 0313     for(i=0;i<2;i++){
                +
0051e4 e000     +LDI R16 , LOW ( 0 )
0051e5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00B6:
                +
0051e6 3002     +CPI R16 , LOW ( 2 )
0051e7 e0e0     +LDI R30 , HIGH ( 2 )
0051e8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
0051e9 f464      	BRGE _0xE00B7
                 ; 0007 0314         if(config_dout_flag[i]){
0051ea e5a9      	LDI  R26,LOW(_config_dout_flag)
0051eb e0b5      	LDI  R27,HIGH(_config_dout_flag)
0051ec 940e c20e 	CALL SUBOPT_0xFA
0051ee 30e0      	CPI  R30,0
0051ef f019      	BREQ _0xE00B8
                 ; 0007 0315             return 1;
0051f0 e0e1      	LDI  R30,LOW(1)
0051f1 e0f0      	LDI  R31,HIGH(1)
0051f2 c005      	RJMP _0x20E0089
                 ; 0007 0316         }
                 ; 0007 0317     }
                 _0xE00B8:
                +
0051f3 5f0f     +SUBI R16 , LOW ( - 1 )
0051f4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0051f5 cff0      	RJMP _0xE00B6
                 _0xE00B7:
                 ; 0007 0318     return 0;
0051f6 e0e0      	LDI  R30,LOW(0)
0051f7 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0089:
0051f8 9109      	LD   R16,Y+
0051f9 9119      	LD   R17,Y+
0051fa 9508      	RET
                 ; 0007 0319 }
                 ;/*============================================================*/
                 ;int getAllConfig(void)
                 ; 0007 031C {
                 _getAllConfig:
                 ; 0007 031D     int i,err;
                 ; 0007 031E 
                 ; 0007 031F     // -- load configuration -- //
                 ; 0007 0320     getPropertiesConfig(&properties_config);
0051fb 940e da9b 	CALL __SAVELOCR4
                 ;	i -> R16,R17
                 ;	err -> R18,R19
0051fd 940e bc06 	CALL SUBOPT_0xD
                 ; 0007 0321     is_properties_config_update = 0;
                 ; 0007 0322 
                 ; 0007 0323     getOperatingConfig(&operating_config);
0051ff 940e bc0e 	CALL SUBOPT_0xE
                 ; 0007 0324     is_operating_config_update = 0;
                 ; 0007 0325 
                 ; 0007 0326     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
005201 e000     +LDI R16 , LOW ( 0 )
005202 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BA:
                +
005203 3005     +CPI R16 , LOW ( 5 )
005204 e0e0     +LDI R30 , HIGH ( 5 )
005205 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
005206 f504      	BRGE _0xE00BB
                 ; 0007 0327         err = getSensorConfig(i,&sensor_config[i]);
005207 931a      	ST   -Y,R17
005208 930a      	ST   -Y,R16
                +
005209 e1ad     +LDI R26 , 29
00520a 9fa0     +MUL R26 , R16
00520b 01f0     +MOVW R30 , R0
00520c 9fa1     +MUL R26 , R17
00520d 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
00520e 54e2      	SUBI R30,LOW(-_sensor_config)
00520f 4efe      	SBCI R31,HIGH(-_sensor_config)
005210 01df      	MOVW R26,R30
005211 940e 48c1 	CALL _getSensorConfig
005213 019f      	MOVW R18,R30
                 ; 0007 0328         if(err < 0){
005214 2333      	TST  R19
005215 f452      	BRPL _0xE00BC
                 ; 0007 0329             printDebug("<main> getSensorConfig(%d) error\r\n",i);
                +
005216 e3e7     +LDI R30 , LOW ( 2 * _0xE0000 + ( 3145 ) )
005217 e1ff     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 3145 ) )
005218 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 3145 ) )
005219 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 3145 ) )
                 	__POINTD1FN _0xE0000,3145
00521a 940e da29 	CALL __PUTPARD1
00521c 01f8      	MOVW R30,R16
00521d 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0007 032A             continue;
00521f c004      	RJMP _0xE00B9
                 ; 0007 032B         }
                 ; 0007 032C         is_sensor_config_update[i] = 0;
                 _0xE00BC:
005220 efa8      	LDI  R26,LOW(_is_sensor_config_update)
005221 e1b0      	LDI  R27,HIGH(_is_sensor_config_update)
005222 940e c3ec 	CALL SUBOPT_0x14E
                 ; 0007 032D     }
                 _0xE00B9:
                +
005224 5f0f     +SUBI R16 , LOW ( - 1 )
005225 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005226 cfdc      	RJMP _0xE00BA
                 _0xE00BB:
                 ; 0007 032E 
                 ; 0007 032F     getBuzzerConfig(&buzz_config);
005227 940e bc36 	CALL SUBOPT_0x14
                 ; 0007 0330     is_buzzer_config_update = 0;
                 ; 0007 0331 
                 ; 0007 0332     for(i=0;i<USE_DIN;i++){
                +
005229 e000     +LDI R16 , LOW ( 0 )
00522a e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00BE:
                +
00522b 3002     +CPI R16 , LOW ( 2 )
00522c e0e0     +LDI R30 , HIGH ( 2 )
00522d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00522e f49c      	BRGE _0xE00BF
                 ; 0007 0333         getAuxDinConfig(i,&din_config[i]);
00522f 931a      	ST   -Y,R17
005230 930a      	ST   -Y,R16
                +
005231 e0a3     +LDI R26 , 3
005232 9fa0     +MUL R26 , R16
005233 01f0     +MOVW R30 , R0
005234 9fa1     +MUL R26 , R17
005235 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,3
005236 5be1      	SUBI R30,LOW(-_din_config)
005237 4efd      	SBCI R31,HIGH(-_din_config)
005238 01df      	MOVW R26,R30
005239 940e 49a9 	CALL _getAuxDinConfig
                 ; 0007 0334         is_din_config_update[i] = 0;
00523b efad      	LDI  R26,LOW(_is_din_config_update)
00523c e1b0      	LDI  R27,HIGH(_is_din_config_update)
00523d 940e c3ec 	CALL SUBOPT_0x14E
                 ; 0007 0335     }
                +
00523f 5f0f     +SUBI R16 , LOW ( - 1 )
005240 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005241 cfe9      	RJMP _0xE00BE
                 _0xE00BF:
                 ; 0007 0336 
                 ; 0007 0337     for(i=0;i<USE_DOUT;i++){
                +
005242 e000     +LDI R16 , LOW ( 0 )
005243 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0xE00C1:
                +
005244 3002     +CPI R16 , LOW ( 2 )
005245 e0e0     +LDI R30 , HIGH ( 2 )
005246 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
005247 f474      	BRGE _0xE00C2
                 ; 0007 0338         getAuxDoutConfig(i,&dout_config[i]);
005248 931a      	ST   -Y,R17
005249 930a      	ST   -Y,R16
                +
00524a e2a6     +LDI R26 , 38
00524b 9fa0     +MUL R26 , R16
00524c 01f0     +MOVW R30 , R0
00524d 9fa1     +MUL R26 , R17
00524e 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,38
00524f 940e bc46 	CALL SUBOPT_0x16
                 ; 0007 0339         is_dout_config_update[i] = 0;
005251 940e c3ec 	CALL SUBOPT_0x14E
                 ; 0007 033A     }
                +
005253 5f0f     +SUBI R16 , LOW ( - 1 )
005254 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005255 cfee      	RJMP _0xE00C1
                 _0xE00C2:
                 ; 0007 033B 
                 ; 0007 033C     getStatusReportConfig(&status_config);
005256 940e bc4e 	CALL SUBOPT_0x17
                 ; 0007 033D     is_status_config_update = 0;
                 ; 0007 033E 
                 ; 0007 033F     getEnvAlarmConfig(&env_config);
005258 940e bc56 	CALL SUBOPT_0x18
                 ; 0007 0340     is_env_config_update = 0;
                 ; 0007 0341 
                 ; 0007 0342     return 0;
00525a 940e c3f1 	CALL SUBOPT_0x14F
                 _0x20E0088:
00525c 9624      	ADIW R28,4
00525d 9508      	RET
                 ; 0007 0343 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "configstructure.h"
                 ;
                 ;/**************************************************************/
                 ;/**************** Configuration saved in EEPROM ***************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom struct prop_cnfg_st  config_prop                     =   {   "EndPoint",
                 ;                                                                    "COMM-ETH-0.01a",
                 ;                                                                    "TestEndPoint01",
                 ;                                                                    "00000000001",
                 ;                                                                    "iNTELENICs Company",
                 ;                                                                    "STRI-703",
                 ;                                                                    7
                 ;                                                                };
                 ;eeprom struct oper_cnfg_st  config_oper                     =   {   0x20,
                 ;                                                                    0x00,
                 ;                                                                    0x00,
                 ;                                                                    {0x00,0x00,0x00,0x00,0x00}
                 ;                                                                };
                 ;eeprom struct sens_cnfg_st  config_sens[MAX_SENS_CHANNEL]   =   {   {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   },
                 ;                                                                    {   300,0x8000,0,0,0,0,
                 ;                                                                        0,0.0,10,0.0,0.0,10,0.0   }
                 ;                                                                };
                 ;eeprom struct din_cnfg_st   config_din[MAX_DI_CHANNEL]      =   {   {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15},
                 ;                                                                    {0x00,15}
                 ;                                                                };
                 ;eeprom struct dout_cnfg_st  config_dout[MAX_DO_CHANNEL]     =   {   {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    }
                 ;                                                                };
                 ;//                                                                    ,{0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    },
                 ;//                                                                    {0x00,0x01,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;//                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;//                                                                    }
                 ;//                                                                };
                 ;eeprom struct ain_cnfg_st   config_ain[MAX_AI_CHANNEL]      =   {   {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5},
                 ;                                                                    {0x00,1.5}
                 ;                                                                };
                 ;eeprom struct aout_cnfg_st  config_aout[MAX_AO_CHANNEL]     =   {   {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;                                                                    {0x00,0.0,0,{  0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                                    0x00,0x00,0x00,0x00,0x00}
                 ;                                                                    },
                 ;
                 ;                                                                };
                 ;eeprom struct buzz_cnfg_st  config_buzz                     =   {   0x00,
                 ;                                                                    0x00,
                 ;                                                                    {   0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,
                 ;                                                                        0x00,0x00,0x00,0x00,0x00
                 ;                                                                    }
                 ;                                                                };
                 ;eeprom struct alm_cnfg_st   config_alm                      =   {   0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x00000000,
                 ;                                                                    0x0000,
                 ;                                                                    0x0000
                 ;                                                                };
                 ;eeprom struct stat_cnfg_st  config_stat                     =   {0x30,60};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** EEPROM Configured indicator ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;eeprom char config_prop_flag                    =   0x00;
                 ;eeprom char config_oper_flag                    =   0x00;
                 ;eeprom char config_sens_flag[MAX_SENS_CHANNEL]  =   {0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_din_flag[MAX_DI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_dout_flag[MAX_DO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00};//,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_ain_flag[MAX_AI_CHANNEL]     =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_aout_flag[MAX_AO_CHANNEL]    =   {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00};
                 ;eeprom char config_buzz_flag                    =   0x00;
                 ;eeprom char config_alm_flag                     =   0x00;
                 ;eeprom char config_stat_flag                    =   0x00;
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "ethcomm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "log.h"
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;eeprom char     DEVICE_SERIAL[8]    = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01};
                 ;
                 ;TIMER           commLostTimer       = 0;
                 ;unsigned char   duplicateListClear  = 0;
                 ;
                 ;struct log_wait_st    logDataWait   = {0x00,0x00};
                 ;struct log_wait_st    logEventWait  = {0x00,0x00};
                 ;
                 ;/**************************************************************/
                 ;/***** Higher Level Communication Management (IMS_Protocol)****/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int ETH_sendNack(char frameID,char errCode)
                 ; 0009 0018 {
                 
                 	.CSEG
                 _ETH_sendNack:
                 ; 0009 0019     int     i=0,k=0;
                 ; 0009 001A     char    frameData[2+sizeof(DEVICE_SERIAL)];
                 ; 0009 001B 
                 ; 0009 001C     frameData[i++]      = PROTOERROR;
00525e 93aa      	ST   -Y,R26
00525f 940e c3f6 	CALL SUBOPT_0x150
                 ;	frameID -> Y+15
                 ;	errCode -> Y+14
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005261 eeeb      	LDI  R30,LOW(235)
005262 93ec      	ST   X,R30
                 ; 0009 001D 
                 ; 0009 001E     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005263 e020     +LDI R18 , LOW ( 0 )
005264 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120004:
                +
005265 3028     +CPI R18 , LOW ( 8 )
005266 e0e0     +LDI R30 , HIGH ( 8 )
005267 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005268 f43c      	BRGE _0x120005
                 ; 0009 001F         frameData[i++]  = DEVICE_SERIAL[k];
005269 940e c405 	CALL SUBOPT_0x151
00526b 940e c40d 	CALL SUBOPT_0x152
                 ; 0009 0020     }
                +
00526d 5f2f     +SUBI R18 , LOW ( - 1 )
00526e 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00526f cff5      	RJMP _0x120004
                 _0x120005:
                 ; 0009 0021 
                 ; 0009 0022     frameData[i++]      = errCode;
005270 940e c405 	CALL SUBOPT_0x151
005272 85ae      	LDD  R26,Y+14
005273 83a0      	STD  Z+0,R26
                 ; 0009 0023 
                 ; 0009 0024     printDebug("<ETH_sendNack> sending..\r\n");
                +
005274 e5ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 0 ) )
005275 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 0 ) )
005276 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 0 ) )
005277 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 0 ) )
                 	__POINTD1FN _0x120000,0
005278 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0025     //print_payload(frameData,i);
                 ; 0009 0026     ETH_send(frameData,i,frameID,0);
00527a 940e c417 	CALL SUBOPT_0x153
00527c 89eb      	LDD  R30,Y+19
00527d 93ea      	ST   -Y,R30
00527e 940e c203 	CALL SUBOPT_0xF7
005280 940e c41e 	CALL SUBOPT_0x154
                 ; 0009 0027 
                 ; 0009 0028     return 0;
005282 c1a1      	RJMP _0x20E0085
                 ; 0009 0029 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusRequestAck(char frameID,char accm,char status)
                 ; 0009 002C {
                 _ETH_sendStatusRequestAck:
                 ; 0009 002D     int     i=0,k=0;
                 ; 0009 002E     char    frameData[7+sizeof(DEVICE_SERIAL)];
                 ; 0009 002F 
                 ; 0009 0030     frameData[i++]      = STATREQA;
005283 93aa      	ST   -Y,R26
005284 972f      	SBIW R28,15
005285 940e c421 	CALL SUBOPT_0x155
                 ;	frameID -> Y+21
                 ;	accm -> Y+20
                 ;	status -> Y+19
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005287 e1eb      	LDI  R30,LOW(27)
005288 93ec      	ST   X,R30
                 ; 0009 0031 
                 ; 0009 0032     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005289 e020     +LDI R18 , LOW ( 0 )
00528a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120007:
                +
00528b 3028     +CPI R18 , LOW ( 8 )
00528c e0e0     +LDI R30 , HIGH ( 8 )
00528d 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00528e f43c      	BRGE _0x120008
                 ; 0009 0033         frameData[i++]  = DEVICE_SERIAL[k];
00528f 940e c405 	CALL SUBOPT_0x151
005291 940e c40d 	CALL SUBOPT_0x152
                 ; 0009 0034     }
                +
005293 5f2f     +SUBI R18 , LOW ( - 1 )
005294 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005295 cff5      	RJMP _0x120007
                 _0x120008:
                 ; 0009 0035 
                 ; 0009 0036     frameData[i++]      = accm;
005296 940e c405 	CALL SUBOPT_0x151
005298 89ac      	LDD  R26,Y+20
005299 83a0      	STD  Z+0,R26
                 ; 0009 0037     frameData[i++]      = status;
00529a 940e c405 	CALL SUBOPT_0x151
00529c 89ab      	LDD  R26,Y+19
00529d 83a0      	STD  Z+0,R26
                 ; 0009 0038 
                 ; 0009 0039     printDebug("<ETH_sendStatusRequestAck> sending..\r\n");
                +
00529e e7e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 27 ) )
00529f e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 27 ) )
0052a0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 27 ) )
0052a1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 27 ) )
                 	__POINTD1FN _0x120000,27
0052a2 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 003A     //print_payload(frameData,i);
                 ; 0009 003B 
                 ; 0009 003C     ETH_send(frameData,i,frameID,0);
0052a4 940e c417 	CALL SUBOPT_0x153
0052a6 8de9      	LDD  R30,Y+25
0052a7 93ea      	ST   -Y,R30
0052a8 940e c203 	CALL SUBOPT_0xF7
0052aa 940e c41e 	CALL SUBOPT_0x154
                 ; 0009 003D 
                 ; 0009 003E     return 0;
0052ac 9666      	ADIW R28,22
0052ad 9508      	RET
                 ; 0009 003F 
                 ; 0009 0040 }
                 ;/*============================================================*/
                 ;int ETH_sendStatusReportCmd(unsigned long int timestamp, unsigned char accm, unsigned char *paraResp, int paraLen)
                 ; 0009 0043 {
                 _ETH_sendStatusReportCmd:
                 ; 0009 0044     int     i=0,k=0;
                 ; 0009 0045     int     frameLen    = 0;
                 ; 0009 0046     char    *frameData;
                 ; 0009 0047 
                 ; 0009 0048     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(timestamp) + sizeof(accm) + paraLen;
0052ae 93ba      	ST   -Y,R27
0052af 93aa      	ST   -Y,R26
0052b0 9722      	SBIW R28,2
0052b1 940e bd26 	CALL SUBOPT_0x37
                 ;	timestamp -> Y+13
                 ;	accm -> Y+12
                 ;	*paraResp -> Y+10
                 ;	paraLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
0052b3 940e c42f 	CALL SUBOPT_0x156
                 ; 0009 0049     if(frameLen > 250){
0052b5 f04c      	BRLT _0x120009
                 ; 0009 004A         printDebug("<ETH_sendStatusReportCmd> frameLen too long (%d bytes)\r\n",frameLen);
                +
0052b6 e9ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 66 ) )
0052b7 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 66 ) )
0052b8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 66 ) )
0052b9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 66 ) )
                 	__POINTD1FN _0x120000,66
0052ba 940e bdac 	CALL SUBOPT_0x49
                 ; 0009 004B         return -1;
0052bc efef      	LDI  R30,LOW(65535)
0052bd efff      	LDI  R31,HIGH(65535)
0052be c03a      	RJMP _0x20E0087
                 ; 0009 004C     }
                 ; 0009 004D 
                 ; 0009 004E     frameData           = (char *) malloc (frameLen);
                 _0x120009:
0052bf 940e c437 	CALL SUBOPT_0x157
                 ; 0009 004F     if(frameData == NULL){
0052c1 f449      	BRNE _0x12000A
                 ; 0009 0050         printDebug("<ETH_sendStatusReportCmd> malloc failed (%d bytes)\r\n",frameLen);
                +
0052c2 ede5     +LDI R30 , LOW ( 2 * _0x120000 + ( 123 ) )
0052c3 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 123 ) )
0052c4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 123 ) )
0052c5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 123 ) )
                 	__POINTD1FN _0x120000,123
0052c6 940e bdac 	CALL SUBOPT_0x49
                 ; 0009 0051         return -1;
0052c8 efef      	LDI  R30,LOW(65535)
0052c9 efff      	LDI  R31,HIGH(65535)
0052ca c02e      	RJMP _0x20E0087
                 ; 0009 0052     }
                 ; 0009 0053 
                 ; 0009 0054     frameData[i++]      = STATREPC;
                 _0x12000A:
0052cb 940e c43e 	CALL SUBOPT_0x158
0052cd 0fae      	ADD  R26,R30
0052ce 1fbf      	ADC  R27,R31
0052cf e2ea      	LDI  R30,LOW(42)
0052d0 93ec      	ST   X,R30
                 ; 0009 0055 
                 ; 0009 0056     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0052d1 e020     +LDI R18 , LOW ( 0 )
0052d2 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12000C:
                +
0052d3 3028     +CPI R18 , LOW ( 8 )
0052d4 e0e0     +LDI R30 , HIGH ( 8 )
0052d5 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0052d6 f43c      	BRGE _0x12000D
                 ; 0009 0057         frameData[i++]  = DEVICE_SERIAL[k];
0052d7 940e c43e 	CALL SUBOPT_0x158
0052d9 940e c444 	CALL SUBOPT_0x159
                 ; 0009 0058     }
                +
0052db 5f2f     +SUBI R18 , LOW ( - 1 )
0052dc 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0052dd cff5      	RJMP _0x12000C
                 _0x12000D:
                 ; 0009 0059 
                 ; 0009 005A     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
0052de 940e c447 	CALL SUBOPT_0x15A
0052e0 01fe      	MOVW R30,R28
0052e1 963f      	ADIW R30,15
0052e2 940e bdc6 	CALL SUBOPT_0x4D
                 ; 0009 005B     i += sizeof(timestamp);
                +
0052e4 5f0c     +SUBI R16 , LOW ( - 4 )
0052e5 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 005C 
                 ; 0009 005D     frameData[i++]      = accm;
0052e6 940e c43e 	CALL SUBOPT_0x158
0052e8 0fea      	ADD  R30,R26
0052e9 1ffb      	ADC  R31,R27
0052ea 85ac      	LDD  R26,Y+12
0052eb 83a0      	STD  Z+0,R26
                 ; 0009 005E 
                 ; 0009 005F     memcpy(&frameData[i],paraResp,paraLen);
0052ec 940e c447 	CALL SUBOPT_0x15A
0052ee 940e c44f 	CALL SUBOPT_0x15B
                 ; 0009 0060     i += paraLen;
                 ; 0009 0061 
                 ; 0009 0062     ETH_send(frameData,i,0x00,CMD_TIMEOUT);
0052f0 940e c45c 	CALL SUBOPT_0x15C
0052f2 931a      	ST   -Y,R17
0052f3 930a      	ST   -Y,R16
0052f4 e0e0      	LDI  R30,LOW(0)
0052f5 940e c461 	CALL SUBOPT_0x15D
                 ; 0009 0063     free( frameData );
0052f7 940e c466 	CALL SUBOPT_0x15E
                 ; 0009 0064 }
                 _0x20E0087:
0052f9 940e daa0 	CALL __LOADLOCR6
0052fb 9661      	ADIW R28,17
0052fc 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendEventReportCmd(char eventType, unsigned long int timestamp, char eventID, char statusCode)
                 ; 0009 0067 {
                 _ETH_sendEventReportCmd:
                 ; 0009 0068     int     i=0,k=0,res=0;
                 ; 0009 0069     char    frameID;
                 ; 0009 006A     char    frameData[8 + sizeof(DEVICE_SERIAL)];
                 ; 0009 006B 
                 ; 0009 006C     if((eventType != TYP_RLT) && (eventType != TYP_LOG) && (eventType != TYP_SAV))
0052fd 93aa      	ST   -Y,R26
0052fe 9761      	SBIW R28,17
0052ff 940e bd26 	CALL SUBOPT_0x37
                 ;	eventType -> Y+29
                 ;	timestamp -> Y+25
                 ;	eventID -> Y+24
                 ;	statusCode -> Y+23
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+22
                 ;	frameData -> Y+6
005301 8dad      	LDD  R26,Y+29
005302 30a0      	CPI  R26,LOW(0x0)
005303 f021      	BREQ _0x12000F
005304 30a1      	CPI  R26,LOW(0x1)
005305 f011      	BREQ _0x12000F
005306 30a2      	CPI  R26,LOW(0x2)
005307 f409      	BRNE _0x120010
                 _0x12000F:
005308 c00c      	RJMP _0x12000E
                 _0x120010:
                 ; 0009 006D     {
                 ; 0009 006E         printDebug("<ETH_sendEventReportCmd> Wrong eventType 0x%02X\r\n", eventType);
                +
005309 e0ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 176 ) )
00530a e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 176 ) )
00530b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 176 ) )
00530c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 176 ) )
                 	__POINTD1FN _0x120000,176
00530d 940e da29 	CALL __PUTPARD1
00530f a1e9      	LDD  R30,Y+33
005310 940e bccc 	CALL SUBOPT_0x29
                 ; 0009 006F         return -1;
005312 efef      	LDI  R30,LOW(65535)
005313 efff      	LDI  R31,HIGH(65535)
005314 c078      	RJMP _0x20E0086
                 ; 0009 0070     }
                 ; 0009 0071 
                 ; 0009 0072     frameData[i++]      =   EVENREPC;
                 _0x12000E:
005315 940e c46a 	CALL SUBOPT_0x15F
005317 0fae      	ADD  R26,R30
005318 1fbf      	ADC  R27,R31
005319 e3ea      	LDI  R30,LOW(58)
00531a 93ec      	ST   X,R30
                 ; 0009 0073 
                 ; 0009 0074     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00531b e020     +LDI R18 , LOW ( 0 )
00531c e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120012:
                +
00531d 3028     +CPI R18 , LOW ( 8 )
00531e e0e0     +LDI R30 , HIGH ( 8 )
00531f 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005320 f43c      	BRGE _0x120013
                 ; 0009 0075         frameData[i++]  = DEVICE_SERIAL[k];
005321 940e c46a 	CALL SUBOPT_0x15F
005323 940e c444 	CALL SUBOPT_0x159
                 ; 0009 0076     }
                +
005325 5f2f     +SUBI R18 , LOW ( - 1 )
005326 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005327 cff5      	RJMP _0x120012
                 _0x120013:
                 ; 0009 0077 
                 ; 0009 0078     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
005328 01f8      	MOVW R30,R16
005329 01de      	MOVW R26,R28
00532a 9616      	ADIW R26,6
00532b 940e c470 	CALL SUBOPT_0x160
00532d 01fe      	MOVW R30,R28
00532e 967b      	ADIW R30,27
00532f 940e bdc6 	CALL SUBOPT_0x4D
                 ; 0009 0079     i += sizeof(timestamp);
                +
005331 5f0c     +SUBI R16 , LOW ( - 4 )
005332 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 007A 
                 ; 0009 007B     frameData[i++]      =   eventType;
005333 940e c46a 	CALL SUBOPT_0x15F
005335 0fea      	ADD  R30,R26
005336 1ffb      	ADC  R31,R27
005337 8dad      	LDD  R26,Y+29
005338 83a0      	STD  Z+0,R26
                 ; 0009 007C     frameData[i++]      =   eventID;
005339 940e c46a 	CALL SUBOPT_0x15F
00533b 0fea      	ADD  R30,R26
00533c 1ffb      	ADC  R31,R27
00533d 8da8      	LDD  R26,Y+24
00533e 83a0      	STD  Z+0,R26
                 ; 0009 007D     frameData[i++]      =   statusCode;
00533f 940e c46a 	CALL SUBOPT_0x15F
005341 0fea      	ADD  R30,R26
005342 1ffb      	ADC  R31,R27
005343 89af      	LDD  R26,Y+23
005344 83a0      	STD  Z+0,R26
                 ; 0009 007E 
                 ; 0009 007F     frameID             = ETH_generateId();
005345 940e 6943 	CALL _ETH_generateId
005347 8bee      	STD  Y+22,R30
                 ; 0009 0080 
                 ; 0009 0081     if(eventType == TYP_RLT)
005348 8ded      	LDD  R30,Y+29
005349 30e0      	CPI  R30,0
00534a f511      	BRNE _0x120014
                 ; 0009 0082     {
                 ; 0009 0083         res = addEventLogQueue(frameID,timestamp,eventID,statusCode);
00534b 89ee      	LDD  R30,Y+22
00534c 93ea      	ST   -Y,R30
00534d 940e c13a 	CALL SUBOPT_0xD3
00534f 940e da29 	CALL __PUTPARD1
005351 8ded      	LDD  R30,Y+29
005352 93ea      	ST   -Y,R30
005353 8dad      	LDD  R26,Y+29
005354 940e 8391 	CALL _addEventLogQueue
005356 01af      	MOVW R20,R30
                 ; 0009 0084         if(res < 0)
005357 2355      	TST  R21
005358 f49a      	BRPL _0x120015
                 ; 0009 0085         {
                 ; 0009 0086             printDebug("<ETH_sendEventReportCmd> addEventLogQueue(0x%02X,%ld,0x%02X,0x%02X) failed\r\n",
                 ; 0009 0087                         frameID,timestamp,eventID,statusCode);
                +
005359 e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 226 ) )
00535a e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 226 ) )
00535b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 226 ) )
00535c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 226 ) )
                 	__POINTD1FN _0x120000,226
00535d 940e da29 	CALL __PUTPARD1
00535f 8dea      	LDD  R30,Y+26
005360 940e be67 	CALL SUBOPT_0x65
005362 940e c475 	CALL SUBOPT_0x161
005364 a1ec      	LDD  R30,Y+36
005365 940e be67 	CALL SUBOPT_0x65
005367 a1ef      	LDD  R30,Y+39
005368 940e be67 	CALL SUBOPT_0x65
00536a 940e c47c 	CALL SUBOPT_0x162
                 ; 0009 0088         }
                 ; 0009 0089     }
                 _0x120015:
                 ; 0009 008A     else if(eventType == TYP_LOG)
00536c c006      	RJMP _0x120016
                 _0x120014:
00536d 8dad      	LDD  R26,Y+29
00536e 30a1      	CPI  R26,LOW(0x1)
00536f f419      	BRNE _0x120017
                 ; 0009 008B     {
                 ; 0009 008C         logEventWait.frameID = frameID;
005370 89ee      	LDD  R30,Y+22
005371 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 008D     }
                 ; 0009 008E 
                 ; 0009 008F     printDebug("<ETH_sendEventReportCmd> sending..\r\n");
                 _0x120017:
                 _0x120016:
                +
005373 e8e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 303 ) )
005374 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 303 ) )
005375 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 303 ) )
005376 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 303 ) )
                 	__POINTD1FN _0x120000,303
005377 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0090     print_payload(frameData,i);
005379 940e be01 	CALL SUBOPT_0x56
00537b 01d8      	MOVW R26,R16
00537c 940e 9b56 	CALL _print_payload
                 ; 0009 0091 
                 ; 0009 0092     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
00537e 940e be01 	CALL SUBOPT_0x56
005380 931a      	ST   -Y,R17
005381 930a      	ST   -Y,R16
005382 8dea      	LDD  R30,Y+26
005383 940e c461 	CALL SUBOPT_0x15D
005385 01af      	MOVW R20,R30
                 ; 0009 0093     if(res < 0){
005386 2355      	TST  R21
005387 f41a      	BRPL _0x120018
                 ; 0009 0094         return -1;
005388 efef      	LDI  R30,LOW(65535)
005389 efff      	LDI  R31,HIGH(65535)
00538a c002      	RJMP _0x20E0086
                 ; 0009 0095     }
                 ; 0009 0096     else{
                 _0x120018:
                 ; 0009 0097         return 0;
00538b e0e0      	LDI  R30,LOW(0)
00538c e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0098     }
                 ; 0009 0099 }
                 _0x20E0086:
00538d 940e daa0 	CALL __LOADLOCR6
00538f 966e      	ADIW R28,30
005390 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageNack(char frameID,char accd,char cnfg,char status)
                 ; 0009 009C {
                 _ETH_sendConfigManageNack:
                 ; 0009 009D     int     i=0,k=0;
                 ; 0009 009E     char    frameData[4 + sizeof(DEVICE_SERIAL)];
                 ; 0009 009F 
                 ; 0009 00A0     frameData[i++]      = CONFMANA;
005391 93aa      	ST   -Y,R26
005392 972c      	SBIW R28,12
005393 940e c421 	CALL SUBOPT_0x155
                 ;	frameID -> Y+19
                 ;	accd -> Y+18
                 ;	cnfg -> Y+17
                 ;	status -> Y+16
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005395 e4eb      	LDI  R30,LOW(75)
005396 93ec      	ST   X,R30
                 ; 0009 00A1 
                 ; 0009 00A2     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005397 e020     +LDI R18 , LOW ( 0 )
005398 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x12001B:
                +
005399 3028     +CPI R18 , LOW ( 8 )
00539a e0e0     +LDI R30 , HIGH ( 8 )
00539b 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
00539c f43c      	BRGE _0x12001C
                 ; 0009 00A3         frameData[i++]  = DEVICE_SERIAL[k];
00539d 940e c405 	CALL SUBOPT_0x151
00539f 940e c40d 	CALL SUBOPT_0x152
                 ; 0009 00A4     }
                +
0053a1 5f2f     +SUBI R18 , LOW ( - 1 )
0053a2 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053a3 cff5      	RJMP _0x12001B
                 _0x12001C:
                 ; 0009 00A5 
                 ; 0009 00A6     frameData[i++]      = accd;
0053a4 940e c405 	CALL SUBOPT_0x151
0053a6 89aa      	LDD  R26,Y+18
0053a7 83a0      	STD  Z+0,R26
                 ; 0009 00A7     frameData[i++]      = cnfg;
0053a8 940e c405 	CALL SUBOPT_0x151
0053aa 89a9      	LDD  R26,Y+17
0053ab 83a0      	STD  Z+0,R26
                 ; 0009 00A8     frameData[i++]      = status;
0053ac 940e c405 	CALL SUBOPT_0x151
0053ae 89a8      	LDD  R26,Y+16
0053af 83a0      	STD  Z+0,R26
                 ; 0009 00A9 
                 ; 0009 00AA     printDebug("<ETH_sendConfigManageNack> sending..\r\n");
                +
0053b0 eaee     +LDI R30 , LOW ( 2 * _0x120000 + ( 340 ) )
0053b1 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 340 ) )
0053b2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 340 ) )
0053b3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 340 ) )
                 	__POINTD1FN _0x120000,340
0053b4 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 00AB     //print_payload(frameData,i);
                 ; 0009 00AC 
                 ; 0009 00AD     ETH_send(frameData,i,frameID,0);
0053b6 940e c417 	CALL SUBOPT_0x153
0053b8 89ef      	LDD  R30,Y+23
0053b9 93ea      	ST   -Y,R30
0053ba 940e c203 	CALL SUBOPT_0xF7
0053bc 940e c41e 	CALL SUBOPT_0x154
                 ; 0009 00AE 
                 ; 0009 00AF     return 0;
0053be 9664      	ADIW R28,20
0053bf 9508      	RET
                 ; 0009 00B0 }
                 ;/*============================================================*/
                 ;int ETH_sendConfigManageAck(char frameID,char accd,char cnfg,char status,char *cnfgData, int cnfgLen)
                 ; 0009 00B3 {
                 _ETH_sendConfigManageAck:
                 ; 0009 00B4     int     i=0,k=0;
                 ; 0009 00B5     int     frameLen    = 0;
                 ; 0009 00B6     char    *frameData;
                 ; 0009 00B7 
                 ; 0009 00B8 
                 ; 0009 00B9     frameLen            = 1 + sizeof(DEVICE_SERIAL) + sizeof(accd) + sizeof(cnfg) + sizeof(status) + cnfgLen;
0053c0 93ba      	ST   -Y,R27
0053c1 93aa      	ST   -Y,R26
0053c2 9722      	SBIW R28,2
0053c3 940e bd26 	CALL SUBOPT_0x37
                 ;	frameID -> Y+15
                 ;	accd -> Y+14
                 ;	cnfg -> Y+13
                 ;	status -> Y+12
                 ;	*cnfgData -> Y+10
                 ;	cnfgLen -> Y+8
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameLen -> R20,R21
                 ;	*frameData -> Y+6
0053c5 940e c42f 	CALL SUBOPT_0x156
                 ; 0009 00BA     if(frameLen > 250){
0053c7 f04c      	BRLT _0x12001D
                 ; 0009 00BB         printDebug("<ETH_sendConfigManageAck> frameLen too long (%d bytes)\r\n",frameLen);
                +
0053c8 ede5     +LDI R30 , LOW ( 2 * _0x120000 + ( 379 ) )
0053c9 e2f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 379 ) )
0053ca e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 379 ) )
0053cb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 379 ) )
                 	__POINTD1FN _0x120000,379
0053cc 940e bdac 	CALL SUBOPT_0x49
                 ; 0009 00BC         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
0053ce 940e c481 	CALL SUBOPT_0x163
                 ; 0009 00BD         return -1;
0053d0 c051      	RJMP _0x20E0084
                 ; 0009 00BE     }
                 ; 0009 00BF 
                 ; 0009 00C0     frameData           = (char *) malloc (frameLen);
                 _0x12001D:
0053d1 940e c437 	CALL SUBOPT_0x157
                 ; 0009 00C1     if(frameData == NULL){
0053d3 f449      	BRNE _0x12001E
                 ; 0009 00C2         printDebug("<ETH_sendConfigManageAck> malloc failed (%d bytes)\r\n",frameLen);
                +
0053d4 e0ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 436 ) )
0053d5 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 436 ) )
0053d6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 436 ) )
0053d7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 436 ) )
                 	__POINTD1FN _0x120000,436
0053d8 940e bdac 	CALL SUBOPT_0x49
                 ; 0009 00C3         ETH_sendConfigManageNack(frameID,accd,cnfg,ERROR);
0053da 940e c481 	CALL SUBOPT_0x163
                 ; 0009 00C4         return -1;
0053dc c045      	RJMP _0x20E0084
                 ; 0009 00C5     }
                 ; 0009 00C6 
                 ; 0009 00C7     frameData[i++]      = CONFMANA;
                 _0x12001E:
0053dd 940e c43e 	CALL SUBOPT_0x158
0053df 0fae      	ADD  R26,R30
0053e0 1fbf      	ADC  R27,R31
0053e1 e4eb      	LDI  R30,LOW(75)
0053e2 93ec      	ST   X,R30
                 ; 0009 00C8 
                 ; 0009 00C9     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0053e3 e020     +LDI R18 , LOW ( 0 )
0053e4 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120020:
                +
0053e5 3028     +CPI R18 , LOW ( 8 )
0053e6 e0e0     +LDI R30 , HIGH ( 8 )
0053e7 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0053e8 f43c      	BRGE _0x120021
                 ; 0009 00CA         frameData[i++]  = DEVICE_SERIAL[k];
0053e9 940e c43e 	CALL SUBOPT_0x158
0053eb 940e c444 	CALL SUBOPT_0x159
                 ; 0009 00CB     }
                +
0053ed 5f2f     +SUBI R18 , LOW ( - 1 )
0053ee 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0053ef cff5      	RJMP _0x120020
                 _0x120021:
                 ; 0009 00CC 
                 ; 0009 00CD     frameData[i++]      = accd;
0053f0 940e c43e 	CALL SUBOPT_0x158
0053f2 0fea      	ADD  R30,R26
0053f3 1ffb      	ADC  R31,R27
0053f4 85ae      	LDD  R26,Y+14
0053f5 83a0      	STD  Z+0,R26
                 ; 0009 00CE     frameData[i++]      = cnfg;
0053f6 940e c43e 	CALL SUBOPT_0x158
0053f8 0fea      	ADD  R30,R26
0053f9 1ffb      	ADC  R31,R27
0053fa 85ad      	LDD  R26,Y+13
0053fb 83a0      	STD  Z+0,R26
                 ; 0009 00CF     frameData[i++]      = status;
0053fc 940e c43e 	CALL SUBOPT_0x158
0053fe 0fea      	ADD  R30,R26
0053ff 1ffb      	ADC  R31,R27
005400 85ac      	LDD  R26,Y+12
005401 83a0      	STD  Z+0,R26
                 ; 0009 00D0     if(cnfgLen > 0){
005402 85a8      	LDD  R26,Y+8
005403 85b9      	LDD  R27,Y+8+1
005404 940e da81 	CALL __CPW02
005406 f424      	BRGE _0x120022
                 ; 0009 00D1         memcpy(&frameData[i],cnfgData,cnfgLen);
005407 940e c447 	CALL SUBOPT_0x15A
005409 940e c44f 	CALL SUBOPT_0x15B
                 ; 0009 00D2         i += cnfgLen;
                 ; 0009 00D3     }
                 ; 0009 00D4 
                 ; 0009 00D5     printDebug("<ETH_sendConfigManageAck> sending..\r\n");
                 _0x120022:
                +
00540b e4e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 489 ) )
00540c e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 489 ) )
00540d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 489 ) )
00540e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 489 ) )
                 	__POINTD1FN _0x120000,489
00540f 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 00D6     print_payload(frameData,i);
005411 940e c45c 	CALL SUBOPT_0x15C
005413 01d8      	MOVW R26,R16
005414 940e c48d 	CALL SUBOPT_0x164
                 ; 0009 00D7 
                 ; 0009 00D8     ETH_send(frameData,i,frameID,0);
005416 931a      	ST   -Y,R17
005417 930a      	ST   -Y,R16
005418 89eb      	LDD  R30,Y+19
005419 93ea      	ST   -Y,R30
00541a 940e c203 	CALL SUBOPT_0xF7
00541c 940e 5c63 	CALL _ETH_send
                 ; 0009 00D9 
                 ; 0009 00DA     free( frameData );
00541e 940e c466 	CALL SUBOPT_0x15E
                 ; 0009 00DB 
                 ; 0009 00DC     return 0;
005420 e0e0      	LDI  R30,LOW(0)
005421 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0084:
005422 940e daa0 	CALL __LOADLOCR6
                 _0x20E0085:
005424 9660      	ADIW R28,16
005425 9508      	RET
                 ; 0009 00DD }
                 ;/*============================================================*/
                 ;int ETH_sendDataReportCmd(char dataType, unsigned long int timestamp, unsigned int sensorID, float value)
                 ; 0009 00E0 {
                 _ETH_sendDataReportCmd:
                 ; 0009 00E1     int     i=0,k=0,res=0;
                 ; 0009 00E2     char    frameID;
                 ; 0009 00E3     char    frameData[10 + sizeof(DEVICE_SERIAL)];
                 ; 0009 00E4     char    did = 0x00;
                 ; 0009 00E5 
                 ; 0009 00E6     if((dataType != TYP_RLT) && (dataType != TYP_LOG) && (dataType != TYP_SAV))
005426 940e da2e 	CALL __PUTPARD2
005428 9764      	SBIW R28,20
005429 e0e0      	LDI  R30,LOW(0)
00542a 83e8      	ST   Y,R30
00542b 940e bd26 	CALL SUBOPT_0x37
                 ;	dataType -> Y+36
                 ;	timestamp -> Y+32
                 ;	sensorID -> Y+30
                 ;	value -> Y+26
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	res -> R20,R21
                 ;	frameID -> Y+25
                 ;	frameData -> Y+7
                 ;	did -> Y+6
00542d a1ac      	LDD  R26,Y+36
00542e 30a0      	CPI  R26,LOW(0x0)
00542f f021      	BREQ _0x120024
005430 30a1      	CPI  R26,LOW(0x1)
005431 f011      	BREQ _0x120024
005432 30a2      	CPI  R26,LOW(0x2)
005433 f409      	BRNE _0x120025
                 _0x120024:
005434 c00c      	RJMP _0x120023
                 _0x120025:
                 ; 0009 00E7     {
                 ; 0009 00E8         printDebug("<ETH_sendDataReportCmd> Wrong dataType 0x%02X\r\n", dataType);
                +
005435 e6e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 527 ) )
005436 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 527 ) )
005437 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 527 ) )
005438 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 527 ) )
                 	__POINTD1FN _0x120000,527
005439 940e da29 	CALL __PUTPARD1
00543b a5e8      	LDD  R30,Y+40
00543c 940e bccc 	CALL SUBOPT_0x29
                 ; 0009 00E9         return -1;
00543e efef      	LDI  R30,LOW(65535)
00543f efff      	LDI  R31,HIGH(65535)
005440 c083      	RJMP _0x20E0083
                 ; 0009 00EA     }
                 ; 0009 00EB 
                 ; 0009 00EC     did     = ((sensorID+1) & 0xff) << 4;
                 _0x120023:
005441 8dae      	LDD  R26,Y+30
005442 5faf      	SUBI R26,-LOW(1)
005443 2fea      	MOV  R30,R26
005444 95e2      	SWAP R30
005445 7fe0      	ANDI R30,0xF0
005446 83ee      	STD  Y+6,R30
                 ; 0009 00ED     did    |= dataType;
005447 a1ec      	LDD  R30,Y+36
005448 81ae      	LDD  R26,Y+6
005449 2bea      	OR   R30,R26
00544a 83ee      	STD  Y+6,R30
                 ; 0009 00EE 
                 ; 0009 00EF     frameData[i++]      =   DATAREPC;
00544b 940e c490 	CALL SUBOPT_0x165
00544d 0fae      	ADD  R26,R30
00544e 1fbf      	ADC  R27,R31
00544f e5ea      	LDI  R30,LOW(90)
005450 93ec      	ST   X,R30
                 ; 0009 00F0 
                 ; 0009 00F1     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005451 e020     +LDI R18 , LOW ( 0 )
005452 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120027:
                +
005453 3028     +CPI R18 , LOW ( 8 )
005454 e0e0     +LDI R30 , HIGH ( 8 )
005455 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005456 f43c      	BRGE _0x120028
                 ; 0009 00F2         frameData[i++]  = DEVICE_SERIAL[k];
005457 940e c490 	CALL SUBOPT_0x165
005459 940e c444 	CALL SUBOPT_0x159
                 ; 0009 00F3     }
                +
00545b 5f2f     +SUBI R18 , LOW ( - 1 )
00545c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00545d cff5      	RJMP _0x120027
                 _0x120028:
                 ; 0009 00F4 
                 ; 0009 00F5     memcpy(&frameData[i],&timestamp,sizeof(timestamp));
00545e 01f8      	MOVW R30,R16
00545f 01de      	MOVW R26,R28
005460 9617      	ADIW R26,7
005461 940e c470 	CALL SUBOPT_0x160
005463 01fe      	MOVW R30,R28
005464 96b2      	ADIW R30,34
005465 940e bdc6 	CALL SUBOPT_0x4D
                 ; 0009 00F6     i += sizeof(timestamp);
                +
005467 5f0c     +SUBI R16 , LOW ( - 4 )
005468 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00F7 
                 ; 0009 00F8     frameData[i++]      =   did;
005469 940e c490 	CALL SUBOPT_0x165
00546b 0fea      	ADD  R30,R26
00546c 1ffb      	ADC  R31,R27
00546d 81ae      	LDD  R26,Y+6
00546e 83a0      	STD  Z+0,R26
                 ; 0009 00F9 
                 ; 0009 00FA     memcpy(&frameData[i],&value,sizeof(value));
00546f 01f8      	MOVW R30,R16
005470 01de      	MOVW R26,R28
005471 9617      	ADIW R26,7
005472 940e c470 	CALL SUBOPT_0x160
005474 01fe      	MOVW R30,R28
005475 967c      	ADIW R30,28
005476 940e bdc6 	CALL SUBOPT_0x4D
                 ; 0009 00FB     i += sizeof(value);
                +
005478 5f0c     +SUBI R16 , LOW ( - 4 )
005479 4f1f     +SBCI R17 , HIGH ( - 4 )
                 	__ADDWRN 16,17,4
                 ; 0009 00FC 
                 ; 0009 00FD     frameID             = ETH_generateId();
00547a 940e 6943 	CALL _ETH_generateId
00547c 8fe9      	STD  Y+25,R30
                 ; 0009 00FE 
                 ; 0009 00FF     if(dataType == TYP_RLT)
00547d a1ec      	LDD  R30,Y+36
00547e 30e0      	CPI  R30,0
00547f f549      	BRNE _0x120029
                 ; 0009 0100     {
                 ; 0009 0101         res = addDataLogQueue(frameID,timestamp,sensorID,value);
005480 8de9      	LDD  R30,Y+25
005481 93ea      	ST   -Y,R30
005482 940e c475 	CALL SUBOPT_0x161
005484 a1eb      	LDD  R30,Y+35
005485 a1fc      	LDD  R31,Y+35+1
005486 93fa      	ST   -Y,R31
005487 93ea      	ST   -Y,R30
                +
005488 a1a9     +LDD R26 , Y + 33
005489 a1ba     +LDD R27 , Y + 33 + 1
00548a a18b     +LDD R24 , Y + 33 + 2
00548b a19c     +LDD R25 , Y + 33 + 3
                 	__GETD2S 33
00548c 940e 82c3 	CALL _addDataLogQueue
00548e 01af      	MOVW R20,R30
                 ; 0009 0102         if(res < 0)
00548f 2355      	TST  R21
005490 f4ba      	BRPL _0x12002A
                 ; 0009 0103         {
                 ; 0009 0104             printDebug("<ETH_sendDataReportCmd> addDataLogQueue(0x%02X,%ld,%u,%.2f) failed\r\n",frameID,timestamp,sensorID,value);
                +
005491 e9e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 575 ) )
005492 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 575 ) )
005493 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 575 ) )
005494 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 575 ) )
                 	__POINTD1FN _0x120000,575
005495 940e da29 	CALL __PUTPARD1
005497 8ded      	LDD  R30,Y+29
005498 940e be67 	CALL SUBOPT_0x65
00549a 940e c1fc 	CALL SUBOPT_0xF6
00549c a5ea      	LDD  R30,Y+42
00549d a5fb      	LDD  R31,Y+42+1
00549e 940e bd18 	CALL SUBOPT_0x34
                +
0054a0 a5ea     +LDD R30 , Y + 42
0054a1 a5fb     +LDD R31 , Y + 42 + 1
0054a2 a56c     +LDD R22 , Y + 42 + 2
0054a3 a57d     +LDD R23 , Y + 42 + 3
                 	__GETD1S 42
0054a4 940e da29 	CALL __PUTPARD1
0054a6 940e c47c 	CALL SUBOPT_0x162
                 ; 0009 0105         }
                 ; 0009 0106     }
                 _0x12002A:
                 ; 0009 0107     else if(dataType == TYP_LOG)
0054a8 c006      	RJMP _0x12002B
                 _0x120029:
0054a9 a1ac      	LDD  R26,Y+36
0054aa 30a1      	CPI  R26,LOW(0x1)
0054ab f419      	BRNE _0x12002C
                 ; 0009 0108     {
                 ; 0009 0109         logDataWait.frameID = frameID;
0054ac 8de9      	LDD  R30,Y+25
0054ad 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 010A     }
                 ; 0009 010B 
                 ; 0009 010C     printDebug("<ETH_sendDataReportCmd> sending..\r\n");
                 _0x12002C:
                 _0x12002B:
                +
0054af edee     +LDI R30 , LOW ( 2 * _0x120000 + ( 644 ) )
0054b0 e2f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 644 ) )
0054b1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 644 ) )
0054b2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 644 ) )
                 	__POINTD1FN _0x120000,644
0054b3 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 010D     //print_payload(frameData,i);
                 ; 0009 010E 
                 ; 0009 010F     res = ETH_send(frameData,i,frameID,CMD_TIMEOUT);
0054b5 940e be5b 	CALL SUBOPT_0x63
0054b7 931a      	ST   -Y,R17
0054b8 930a      	ST   -Y,R16
0054b9 8ded      	LDD  R30,Y+29
0054ba 940e c461 	CALL SUBOPT_0x15D
0054bc 01af      	MOVW R20,R30
                 ; 0009 0110     if(res < 0){
0054bd 2355      	TST  R21
0054be f41a      	BRPL _0x12002D
                 ; 0009 0111         return -1;
0054bf efef      	LDI  R30,LOW(65535)
0054c0 efff      	LDI  R31,HIGH(65535)
0054c1 c002      	RJMP _0x20E0083
                 ; 0009 0112     }
                 ; 0009 0113     else{
                 _0x12002D:
                 ; 0009 0114         return 0;
0054c2 e0e0      	LDI  R30,LOW(0)
0054c3 e0f0      	LDI  R31,HIGH(0)
                 ; 0009 0115     }
                 ; 0009 0116 }
                 _0x20E0083:
0054c4 940e daa0 	CALL __LOADLOCR6
0054c6 96a5      	ADIW R28,37
0054c7 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_sendLogManipulationAck(char frameID,char accd,char status)
                 ; 0009 0119 {
                 _ETH_sendLogManipulationAck:
                 ; 0009 011A     int     i=0,k=0;
                 ; 0009 011B     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 011C 
                 ; 0009 011D     frameData[i++]      = LOGMANIA;
0054c8 940e c496 	CALL SUBOPT_0x166
                 ;	frameID -> Y+17
                 ;	accd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0054ca e6eb      	LDI  R30,LOW(107)
0054cb 93ec      	ST   X,R30
                 ; 0009 011E 
                 ; 0009 011F     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054cc e020     +LDI R18 , LOW ( 0 )
0054cd e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120030:
                +
0054ce 3028     +CPI R18 , LOW ( 8 )
0054cf e0e0     +LDI R30 , HIGH ( 8 )
0054d0 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0054d1 f43c      	BRGE _0x120031
                 ; 0009 0120         frameData[i++]  = DEVICE_SERIAL[k];
0054d2 940e c405 	CALL SUBOPT_0x151
0054d4 940e c40d 	CALL SUBOPT_0x152
                 ; 0009 0121     }
                +
0054d6 5f2f     +SUBI R18 , LOW ( - 1 )
0054d7 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0054d8 cff5      	RJMP _0x120030
                 _0x120031:
                 ; 0009 0122 
                 ; 0009 0123     frameData[i++]      = accd;
0054d9 940e c405 	CALL SUBOPT_0x151
0054db 940e c499 	CALL SUBOPT_0x167
                 ; 0009 0124     frameData[i++]      = status;
0054dd 85af      	LDD  R26,Y+15
0054de 83a0      	STD  Z+0,R26
                 ; 0009 0125 
                 ; 0009 0126     printDebug("<ETH_sendLogManipulationAck> sending..\r\n");
                +
0054df e0e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 680 ) )
0054e0 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 680 ) )
0054e1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 680 ) )
0054e2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 680 ) )
                 	__POINTD1FN _0x120000,680
0054e3 c037      	RJMP _0x20E0082
                 ; 0009 0127     //print_payload(frameData,i);
                 ; 0009 0128     ETH_send(frameData,i,frameID,0);
                 ; 0009 0129 
                 ; 0009 012A     return 0;
                 ; 0009 012B }
                 ;/*============================================================*/
                 ;int ETH_sendNetworkMaintenanceAck(char frameID,char cmd,char status)
                 ; 0009 012E {
                 _ETH_sendNetworkMaintenanceAck:
                 ; 0009 012F     int     i=0,k=0;
                 ; 0009 0130     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0131 
                 ; 0009 0132     frameData[i++]      = NETMAINA;
0054e4 940e c496 	CALL SUBOPT_0x166
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
0054e6 e7eb      	LDI  R30,LOW(123)
0054e7 93ec      	ST   X,R30
                 ; 0009 0133 
                 ; 0009 0134     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
0054e8 e020     +LDI R18 , LOW ( 0 )
0054e9 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120033:
                +
0054ea 3028     +CPI R18 , LOW ( 8 )
0054eb e0e0     +LDI R30 , HIGH ( 8 )
0054ec 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
0054ed f43c      	BRGE _0x120034
                 ; 0009 0135         frameData[i++]  = DEVICE_SERIAL[k];
0054ee 940e c405 	CALL SUBOPT_0x151
0054f0 940e c40d 	CALL SUBOPT_0x152
                 ; 0009 0136     }
                +
0054f2 5f2f     +SUBI R18 , LOW ( - 1 )
0054f3 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0054f4 cff5      	RJMP _0x120033
                 _0x120034:
                 ; 0009 0137 
                 ; 0009 0138     frameData[i++]      = cmd;
0054f5 940e c405 	CALL SUBOPT_0x151
0054f7 940e c499 	CALL SUBOPT_0x167
                 ; 0009 0139     frameData[i++]      = status;
0054f9 85af      	LDD  R26,Y+15
0054fa 83a0      	STD  Z+0,R26
                 ; 0009 013A 
                 ; 0009 013B     printDebug("<ETH_sendNetworkMaintenanceAck> sending..\r\n");
                +
0054fb e2eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 721 ) )
0054fc e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 721 ) )
0054fd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 721 ) )
0054fe e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 721 ) )
                 	__POINTD1FN _0x120000,721
0054ff c01b      	RJMP _0x20E0082
                 ; 0009 013C     ETH_send(frameData,i,frameID,0);
                 ; 0009 013D 
                 ; 0009 013E     return 0;
                 ; 0009 013F }
                 ;/*============================================================*/
                 ;int ETH_remoteDeviceControlAck(char frameID,char cmd,char status)
                 ; 0009 0142 {
                 _ETH_remoteDeviceControlAck:
                 ; 0009 0143     int     i=0,k=0;
                 ; 0009 0144     char    frameData[3 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0145 
                 ; 0009 0146     frameData[i++]      = RMDCTRLA;
005500 940e c496 	CALL SUBOPT_0x166
                 ;	frameID -> Y+17
                 ;	cmd -> Y+16
                 ;	status -> Y+15
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
005502 e8eb      	LDI  R30,LOW(139)
005503 93ec      	ST   X,R30
                 ; 0009 0147 
                 ; 0009 0148     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
005504 e020     +LDI R18 , LOW ( 0 )
005505 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120036:
                +
005506 3028     +CPI R18 , LOW ( 8 )
005507 e0e0     +LDI R30 , HIGH ( 8 )
005508 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005509 f43c      	BRGE _0x120037
                 ; 0009 0149         frameData[i++]  = DEVICE_SERIAL[k];
00550a 940e c405 	CALL SUBOPT_0x151
00550c 940e c40d 	CALL SUBOPT_0x152
                 ; 0009 014A     }
                +
00550e 5f2f     +SUBI R18 , LOW ( - 1 )
00550f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005510 cff5      	RJMP _0x120036
                 _0x120037:
                 ; 0009 014B 
                 ; 0009 014C     frameData[i++]      = cmd;
005511 940e c405 	CALL SUBOPT_0x151
005513 940e c499 	CALL SUBOPT_0x167
                 ; 0009 014D     frameData[i++]      = status;
005515 85af      	LDD  R26,Y+15
005516 83a0      	STD  Z+0,R26
                 ; 0009 014E 
                 ; 0009 014F     printDebug("<ETH_remoteDeviceControlAck> sending..\r\n");
                +
005517 e5e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 765 ) )
005518 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 765 ) )
005519 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 765 ) )
00551a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 765 ) )
                 	__POINTD1FN _0x120000,765
                 _0x20E0082:
00551b 940e da29 	CALL __PUTPARD1
00551d 940e bd21 	CALL SUBOPT_0x36
                 ; 0009 0150     ETH_send(frameData,i,frameID,0);
00551f 940e c417 	CALL SUBOPT_0x153
005521 89ed      	LDD  R30,Y+21
005522 93ea      	ST   -Y,R30
005523 940e c203 	CALL SUBOPT_0xF7
005525 940e c41e 	CALL SUBOPT_0x154
                 ; 0009 0151 
                 ; 0009 0152     return 0;
005527 9662      	ADIW R28,18
005528 9508      	RET
                 ; 0009 0153 }
                 ;/*============================================================*/
                 ;int ETH_clearDuplicateRequestCmd(void)
                 ; 0009 0156 {
                 _ETH_clearDuplicateRequestCmd:
                 ; 0009 0157     int     i=0,k=0;
                 ; 0009 0158     char    frameData[2 + sizeof(DEVICE_SERIAL)];
                 ; 0009 0159 
                 ; 0009 015A     frameData[i++]  = CLRLISTC;
005529 940e c3f6 	CALL SUBOPT_0x150
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ;	frameData -> Y+4
00552b e9ea      	LDI  R30,LOW(154)
00552c 93ec      	ST   X,R30
                 ; 0009 015B 
                 ; 0009 015C     for(k=0;k<sizeof(DEVICE_SERIAL);k++){
                +
00552d e020     +LDI R18 , LOW ( 0 )
00552e e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x120039:
                +
00552f 3028     +CPI R18 , LOW ( 8 )
005530 e0e0     +LDI R30 , HIGH ( 8 )
005531 073e     +CPC R19 , R30
                 	__CPWRN 18,19,8
005532 f43c      	BRGE _0x12003A
                 ; 0009 015D         frameData[i++]  = DEVICE_SERIAL[k];
005533 940e c405 	CALL SUBOPT_0x151
005535 940e c40d 	CALL SUBOPT_0x152
                 ; 0009 015E     }
                +
005537 5f2f     +SUBI R18 , LOW ( - 1 )
005538 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
005539 cff5      	RJMP _0x120039
                 _0x12003A:
                 ; 0009 015F 
                 ; 0009 0160     frameData[i++]  = CLR_DUPLIST;
00553a 01f8      	MOVW R30,R16
                +
00553b 5f0f     +SUBI R16 , LOW ( - 1 )
00553c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00553d 940e c49c 	CALL SUBOPT_0x168
00553f e0e1      	LDI  R30,LOW(1)
005540 93ec      	ST   X,R30
                 ; 0009 0161 
                 ; 0009 0162     printDebug("<ETH_clearDuplicateRequestCmd> sending..\r\n");
                +
005541 e8e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 806 ) )
005542 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 806 ) )
005543 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 806 ) )
005544 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 806 ) )
                 	__POINTD1FN _0x120000,806
005545 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0163     ETH_send(frameData,i,0xFF,0);
005547 940e c417 	CALL SUBOPT_0x153
005549 efef      	LDI  R30,LOW(255)
00554a 93ea      	ST   -Y,R30
00554b 940e c203 	CALL SUBOPT_0xF7
00554d 940e c41e 	CALL SUBOPT_0x154
                 ; 0009 0164 
                 ; 0009 0165     return 0;
00554f 962e      	ADIW R28,14
005550 9508      	RET
                 ; 0009 0166 }
                 ;/*============================================================*/
                 ;void ETH_checkPushLog(unsigned char id)
                 ; 0009 0169 {
                 _ETH_checkPushLog:
                 ; 0009 016A     FIL                 file;
                 ; 0009 016B     int                 res;
                 ; 0009 016C     unsigned long int   timestamp;
                 ; 0009 016D     unsigned int        channel;
                 ; 0009 016E     float               value;
                 ; 0009 016F     unsigned char       eventID;
                 ; 0009 0170     unsigned char       eventStatus;
                 ; 0009 0171 
                 ; 0009 0172     // -- check if id is in dataLogQueue -- //
                 ; 0009 0173     res = readDataLogQueue(id,&timestamp,&channel,&value);
005551 93aa      	ST   -Y,R26
005552 97a8      	SBIW R28,40
005553 50d2      	SUBI R29,2
005554 940e da99 	CALL __SAVELOCR6
                 ;	id -> Y+558
                 ;	file -> Y+14
                 ;	res -> R16,R17
                 ;	timestamp -> Y+10
                 ;	channel -> R18,R19
                 ;	value -> Y+6
                 ;	eventID -> R21
                 ;	eventStatus -> R20
005556 940e c4a1 	CALL SUBOPT_0x169
005558 b7ed      	IN   R30,SPL
005559 b7fe      	IN   R31,SPH
00555a 9731      	SBIW R30,1
00555b 93fa      	ST   -Y,R31
00555c 93ea      	ST   -Y,R30
00555d 933f      	PUSH R19
00555e 932f      	PUSH R18
00555f 01de      	MOVW R26,R28
005560 961b      	ADIW R26,11
005561 940e 830f 	CALL _readDataLogQueue
005563 912f      	POP  R18
005564 913f      	POP  R19
005565 018f      	MOVW R16,R30
                 ; 0009 0174     if(res != -1)
005566 efef      	LDI  R30,LOW(65535)
005567 efff      	LDI  R31,HIGH(65535)
005568 17e0      	CP   R30,R16
005569 07f1      	CPC  R31,R17
00556a f411      	BRNE PC+3
00556b 940c 55b7 	JMP _0x12003B
                 ; 0009 0175     {
                 ; 0009 0176         // -- found in dataLogQueue -- //
                 ; 0009 0177         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) || (channel > (MAX_SENS_CHANNEL-1)) )
00556d 940e be96 	CALL SUBOPT_0x6D
00556f f039      	BREQ _0x12003D
005570 940e bdf1 	CALL SUBOPT_0x53
005572 f021      	BREQ _0x12003D
                +
005573 3025     +CPI R18 , LOW ( 5 )
005574 e0e0     +LDI R30 , HIGH ( 5 )
005575 073e     +CPC R19 , R30
                 	__CPWRN 18,19,5
005576 f028      	BRLO _0x12003C
                 _0x12003D:
                 ; 0009 0178         {
                 ; 0009 0179             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN DATA LOG QUEUE ===\r\n");
                +
005577 eaeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 849 ) )
005578 e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 849 ) )
005579 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 849 ) )
00557a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 849 ) )
                 	__POINTD1FN _0x120000,849
00557b c031      	RJMP _0x120115
                 ; 0009 017A         }
                 ; 0009 017B         else
                 _0x12003C:
                 ; 0009 017C         {
                 ; 0009 017D             printDebug("<ETH_checkPushLog> DataLog time[%ld],ch[%d],val[%.2f]\r\n",timestamp,channel,value);
                +
00557c eeed     +LDI R30 , LOW ( 2 * _0x120000 + ( 915 ) )
00557d e2f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 915 ) )
00557e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 915 ) )
00557f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 915 ) )
                 	__POINTD1FN _0x120000,915
005580 940e bdd8 	CALL SUBOPT_0x50
005582 01f9      	MOVW R30,R18
005583 940e bd18 	CALL SUBOPT_0x34
005585 940e bde1 	CALL SUBOPT_0x51
                 ; 0009 017E             res = LOG_openFile(&file,LOGFILE_DATA);
005587 940e c4a7 	CALL SUBOPT_0x16A
005589 940e be35 	CALL SUBOPT_0x5E
00558b 018f      	MOVW R16,R30
                 ; 0009 017F             if(res < 0)
00558c 2311      	TST  R17
00558d f44a      	BRPL _0x120040
                 ; 0009 0180             {
                 ; 0009 0181                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_DATA);
                +
00558e e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
00558f e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
005590 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
005591 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
005592 940e be40 	CALL SUBOPT_0x5F
005594 940e bc2c 	CALL SUBOPT_0x12
                 ; 0009 0182             }
                 ; 0009 0183             else
005596 c01a      	RJMP _0x120041
                 _0x120040:
                 ; 0009 0184             {
                 ; 0009 0185                 res = LOG_insertData(&file,timestamp,channel,value);
005597 940e c4a7 	CALL SUBOPT_0x16A
005599 940e c4ac 	CALL SUBOPT_0x16B
00559b 933a      	ST   -Y,R19
00559c 932a      	ST   -Y,R18
00559d 940e be4a 	CALL SUBOPT_0x61
00559f 018f      	MOVW R16,R30
                 ; 0009 0186                 if(res < 0)
0055a0 2311      	TST  R17
0055a1 f412      	BRPL _0x120042
                 ; 0009 0187                 {
                 ; 0009 0188                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
0055a2 940e c4b0 	CALL SUBOPT_0x16C
                 ; 0009 0189                 }
                 ; 0009 018A 
                 ; 0009 018B                 res = LOG_closeFile(&file);
                 _0x120042:
0055a4 940e c4b6 	CALL SUBOPT_0x16D
                 ; 0009 018C                 if(res < 0)
0055a6 f412      	BRPL _0x120043
                 ; 0009 018D                 {
                 ; 0009 018E                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
0055a7 940e c4c3 	CALL SUBOPT_0x16E
                 ; 0009 018F                 }
                 ; 0009 0190 
                 ; 0009 0191                 printDebug("<ETH_checkPushLog> Inserted Data Log\r\n");
                 _0x120043:
                +
0055a9 ebee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1124 ) )
0055aa e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1124 ) )
0055ab e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1124 ) )
0055ac e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1124 ) )
                 	__POINTD1FN _0x120000,1124
                 _0x120115:
0055ad 940e da29 	CALL __PUTPARD1
0055af 940e bd21 	CALL SUBOPT_0x36
                 ; 0009 0192             }
                 _0x120041:
                 ; 0009 0193         }
                 ; 0009 0194 
                 ; 0009 0195         //isDataLogEmpty = 0;
                 ; 0009 0196         removeDataLogQueue(id);
                +
0055b1 01de     +MOVW R26 , R28
0055b2 5da2     +SUBI R26 , LOW ( - 558 )
0055b3 4fbd     +SBCI R27 , HIGH ( - 558 )
0055b4 91ac     +LD R26 , X
                 	__GETB2SX 558
0055b5 940e 8350 	CALL _removeDataLogQueue
                 ; 0009 0197     }
                 ; 0009 0198 
                 ; 0009 0199     // -- check if id is in eventLogQueue -- //
                 ; 0009 019A     res = readEventLogQueue(id,&timestamp,&eventID,&eventStatus);
                 _0x12003B:
0055b7 940e c4a1 	CALL SUBOPT_0x169
0055b9 b7ed      	IN   R30,SPL
0055ba b7fe      	IN   R31,SPH
0055bb 93fa      	ST   -Y,R31
0055bc 93ea      	ST   -Y,R30
0055bd 935f      	PUSH R21
0055be b7ad      	IN   R26,SPL
0055bf b7be      	IN   R27,SPH
0055c0 934f      	PUSH R20
0055c1 940e 83d2 	CALL _readEventLogQueue
0055c3 914f      	POP  R20
0055c4 915f      	POP  R21
0055c5 018f      	MOVW R16,R30
                 ; 0009 019B     if(res != -1)
0055c6 efef      	LDI  R30,LOW(65535)
0055c7 efff      	LDI  R31,HIGH(65535)
0055c8 17e0      	CP   R30,R16
0055c9 07f1      	CPC  R31,R17
0055ca f411      	BRNE PC+3
0055cb 940c 5610 	JMP _0x120044
                 ; 0009 019C     {
                 ; 0009 019D         // -- found in eventLogQueue -- //
                 ; 0009 019E         if( (timestamp == 0) || (timestamp == 0xFFFFFFFF) )
0055cd 940e be96 	CALL SUBOPT_0x6D
0055cf f019      	BREQ _0x120046
0055d0 940e bdf1 	CALL SUBOPT_0x53
0055d2 f429      	BRNE _0x120045
                 _0x120046:
                 ; 0009 019F         {
                 ; 0009 01A0             printDebug("\r\n<ETH_checkPushLog> === ERROR INFOMATION IN EVENT LOG QUEUE ===\r\n");
                +
0055d3 eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1163 ) )
0055d4 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1163 ) )
0055d5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1163 ) )
0055d6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1163 ) )
                 	__POINTD1FN _0x120000,1163
0055d7 c02e      	RJMP _0x120116
                 ; 0009 01A1         }
                 ; 0009 01A2         else{
                 _0x120045:
                 ; 0009 01A3 
                 ; 0009 01A4             res = LOG_openFile(&file,LOGFILE_EVENT);
0055d8 940e c4a7 	CALL SUBOPT_0x16A
0055da 940e be7c 	CALL SUBOPT_0x69
0055dc 018f      	MOVW R16,R30
                 ; 0009 01A5             if(res < 0)
0055dd 2311      	TST  R17
0055de f44a      	BRPL _0x120049
                 ; 0009 01A6             {
                 ; 0009 01A7                 printDebug("<ETH_checkPushLog> LOG_openFile(%s) failed, couldn't save log\r\n",LOGFILE_EVENT);
                +
0055df e2e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 971 ) )
0055e0 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 971 ) )
0055e1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 971 ) )
0055e2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 971 ) )
                 	__POINTD1FN _0x120000,971
0055e3 940e be87 	CALL SUBOPT_0x6A
0055e5 940e bc2c 	CALL SUBOPT_0x12
                 ; 0009 01A8             }
                 ; 0009 01A9             else
0055e7 c022      	RJMP _0x12004A
                 _0x120049:
                 ; 0009 01AA             {
                 ; 0009 01AB                 printDebug("<ETH_checkPushLog> EventLog time[%ld],id[0x%02X],stat[0x%02X]\r\n",timestamp,eventID,eventStatus);
                +
0055e8 e2e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1230 ) )
0055e9 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1230 ) )
0055ea e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1230 ) )
0055eb e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1230 ) )
                 	__POINTD1FN _0x120000,1230
0055ec 940e bdd8 	CALL SUBOPT_0x50
0055ee 940e be0d 	CALL SUBOPT_0x58
                 ; 0009 01AC                 res = LOG_insertEvent(&file,timestamp,eventID,eventStatus);
0055f0 940e c4a7 	CALL SUBOPT_0x16A
0055f2 940e c4ac 	CALL SUBOPT_0x16B
0055f4 935a      	ST   -Y,R21
0055f5 2fa4      	MOV  R26,R20
0055f6 940e 801d 	CALL _LOG_insertEvent
0055f8 018f      	MOVW R16,R30
                 ; 0009 01AD                 if(res < 0)
0055f9 2311      	TST  R17
0055fa f412      	BRPL _0x12004B
                 ; 0009 01AE                 {
                 ; 0009 01AF                     printDebug("<ETH_checkPushLog> LOG_insertData() failed\r\n");
0055fb 940e c4b0 	CALL SUBOPT_0x16C
                 ; 0009 01B0                 }
                 ; 0009 01B1 
                 ; 0009 01B2                 res = LOG_closeFile(&file);
                 _0x12004B:
0055fd 940e c4b6 	CALL SUBOPT_0x16D
                 ; 0009 01B3                 if(res < 0)
0055ff f412      	BRPL _0x12004C
                 ; 0009 01B4                 {
                 ; 0009 01B5                     printDebug("<ETH_checkPushLog> LOG_closeFile() failed\r\n");
005600 940e c4c3 	CALL SUBOPT_0x16E
                 ; 0009 01B6                 }
                 ; 0009 01B7 
                 ; 0009 01B8                 printDebug("<ETH_checkPushLog> Inserted Event Log\r\n");
                 _0x12004C:
                +
005602 e6e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1294 ) )
005603 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1294 ) )
005604 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1294 ) )
005605 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1294 ) )
                 	__POINTD1FN _0x120000,1294
                 _0x120116:
005606 940e da29 	CALL __PUTPARD1
005608 940e bd21 	CALL SUBOPT_0x36
                 ; 0009 01B9             }
                 _0x12004A:
                 ; 0009 01BA 
                 ; 0009 01BB         }
                 ; 0009 01BC 
                 ; 0009 01BD         //isEventLogEmpty    = 0;
                 ; 0009 01BE         removeEventLogQueue(id);
                +
00560a 01de     +MOVW R26 , R28
00560b 5da2     +SUBI R26 , LOW ( - 558 )
00560c 4fbd     +SBCI R27 , HIGH ( - 558 )
00560d 91ac     +LD R26 , X
                 	__GETB2SX 558
00560e 940e 8417 	CALL _removeEventLogQueue
                 ; 0009 01BF     }
                 ; 0009 01C0 
                 ; 0009 01C1     return;
                 _0x120044:
005610 940e daa0 	CALL __LOADLOCR6
005612 96af      	ADIW R28,47
005613 5fde      	SUBI R29,-2
005614 9508      	RET
                 ; 0009 01C2 }
                 ;/*============================================================*/
                 ;void ETH_retransmit(void)
                 ; 0009 01C5 {
                 _ETH_retransmit:
                 ; 0009 01C6     int i;
                 ; 0009 01C7 
                 ; 0009 01C8     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++)
005615 940e bfe8 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x12004E:
                +
005617 300f     +CPI R16 , LOW ( 15 )
005618 e0e0     +LDI R30 , HIGH ( 15 )
005619 071e     +CPC R17 , R30
                 	__CPWRN 16,17,15
00561a f014      	BRLT PC+3
00561b 940c 56c9 	JMP _0x12004F
                 ; 0009 01C9     {
                 ; 0009 01CA         if( TIMER_checkTimerExceed(eth_waitQueue[i].retryTime) &&
                 ; 0009 01CB             (eth_waitQueue[i].packetID != 0))
00561d 940e c4c9 	CALL SUBOPT_0x16F
                +
00561f 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
005620 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
005621 01df      	MOVW R26,R30
005622 940e d9f4 	CALL __GETD1P
005624 940e bc70 	CALL SUBOPT_0x1B
005626 f039      	BREQ _0x120051
005627 940e c4c9 	CALL SUBOPT_0x16F
                +
005629 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00562a 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00562b 81a0      	LD   R26,Z
00562c 30a0      	CPI  R26,LOW(0x0)
00562d f409      	BRNE _0x120052
                 _0x120051:
00562e c097      	RJMP _0x120050
                 _0x120052:
                 ; 0009 01CC         {
                 ; 0009 01CD             if(eth_waitQueue[i].retryCount >= ETH_MAX_RETRY)
00562f 940e c4c9 	CALL SUBOPT_0x16F
005631 58e5      	SUBI R30,LOW(-_eth_waitQueue)
005632 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
005633 81a0      	LD   R26,Z
005634 30a3      	CPI  R26,LOW(0x3)
005635 f410      	BRSH PC+3
005636 940c 569d 	JMP _0x120053
                 ; 0009 01CE             {
                 ; 0009 01CF                 printDebug("<ETH_retransmit> packet [0x%02X] Expired\r\n",eth_waitQueue[i].packetID);
                +
005638 e9e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1334 ) )
005639 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1334 ) )
00563a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1334 ) )
00563b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1334 ) )
                 	__POINTD1FN _0x120000,1334
00563c 940e da29 	CALL __PUTPARD1
00563e 940e c4c9 	CALL SUBOPT_0x16F
                +
005640 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005641 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005642 81e0      	LD   R30,Z
005643 940e bccc 	CALL SUBOPT_0x29
                 ; 0009 01D0 
                 ; 0009 01D1                 if(eth_waitQueue[i].packetID == logDataWait.frameID){
005645 940e c4c9 	CALL SUBOPT_0x16F
                +
005647 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005648 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005649 81a0      	LD   R26,Z
00564a 91e0 1426 	LDS  R30,_logDataWait
00564c 17ea      	CP   R30,R26
00564d f451      	BRNE _0x120054
                 ; 0009 01D2                     printDebug("<ETH_retransmit> update logData timeout\r\n");
                +
00564e ebeb     +LDI R30 , LOW ( 2 * _0x120000 + ( 1377 ) )
00564f e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1377 ) )
005650 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1377 ) )
005651 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1377 ) )
                 	__POINTD1FN _0x120000,1377
005652 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 01D3                     logDataWait.frameID = 0x00;
005654 e0e0      	LDI  R30,LOW(0)
005655 93e0 1426 	STS  _logDataWait,R30
                 ; 0009 01D4                 }
                 ; 0009 01D5                 else if(eth_waitQueue[i].packetID == logEventWait.frameID){
005657 c019      	RJMP _0x120055
                 _0x120054:
005658 940e c4c9 	CALL SUBOPT_0x16F
                +
00565a 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00565b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00565c 81a0      	LD   R26,Z
00565d 91e0 142b 	LDS  R30,_logEventWait
00565f 17ea      	CP   R30,R26
005660 f451      	BRNE _0x120056
                 ; 0009 01D6                     printDebug("<ETH_retransmit> update logEvent timeout\r\n");
                +
005661 eee5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1419 ) )
005662 e2f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1419 ) )
005663 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1419 ) )
005664 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1419 ) )
                 	__POINTD1FN _0x120000,1419
005665 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 01D7                     logEventWait.frameID = 0x00;
005667 e0e0      	LDI  R30,LOW(0)
005668 93e0 142b 	STS  _logEventWait,R30
                 ; 0009 01D8                 }
                 ; 0009 01D9                 else{
00566a c006      	RJMP _0x120057
                 _0x120056:
                 ; 0009 01DA                     // ---- Push in log here ---- //
                 ; 0009 01DB                     ETH_checkPushLog(eth_waitQueue[i].packetID);
00566b 940e c4c9 	CALL SUBOPT_0x16F
                +
00566d 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00566e 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00566f 81a0      	LD   R26,Z
005670 dee0      	RCALL _ETH_checkPushLog
                 ; 0009 01DC                     // -------------------------- //
                 ; 0009 01DD                 }
                 _0x120057:
                 _0x120055:
                 ; 0009 01DE 
                 ; 0009 01DF                 ETH_removeWaitQueue(eth_waitQueue[i].packetID);
005671 940e c4c9 	CALL SUBOPT_0x16F
                +
005673 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
005674 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
005675 81a0      	LD   R26,Z
005676 940e 68cc 	CALL _ETH_removeWaitQueue
                 ; 0009 01E0 
                 ; 0009 01E1                 printDebug("<ETH_retransmit> commLostTimer = %ld(%lX)\r\n",commLostTimer,commLostTimer);
                +
005678 e1e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1462 ) )
005679 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1462 ) )
00567a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1462 ) )
00567b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1462 ) )
                 	__POINTD1FN _0x120000,1462
00567c 940e c4cf 	CALL SUBOPT_0x170
00567e 940e c4cf 	CALL SUBOPT_0x170
005680 940e bc8a 	CALL SUBOPT_0x20
                 ; 0009 01E2                 if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
005682 940e c4da 	CALL SUBOPT_0x171
005684 940e bd3e 	CALL SUBOPT_0x3A
005686 f029      	BREQ _0x120059
005687 940e c4da 	CALL SUBOPT_0x171
005689 940e da89 	CALL __CPD02
00568b f481      	BRNE _0x120058
                 _0x120059:
                 ; 0009 01E3                     TIMER_setTimer(&commLostTimer,30);
00568c e2e1      	LDI  R30,LOW(_commLostTimer)
00568d e1f4      	LDI  R31,HIGH(_commLostTimer)
00568e 940e c4e3 	CALL SUBOPT_0x172
005690 940e 4073 	CALL _TIMER_setTimer
                 ; 0009 01E4                     printDebug("<ETH_retransmit> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
005692 e3ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 1506 ) )
005693 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1506 ) )
005694 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1506 ) )
005695 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1506 ) )
                 	__POINTD1FN _0x120000,1506
005696 940e c4ea 	CALL SUBOPT_0x173
005698 940e c4ea 	CALL SUBOPT_0x173
00569a 940e bc8a 	CALL SUBOPT_0x20
                 ; 0009 01E5                 }
                 ; 0009 01E6             }
                 _0x120058:
                 ; 0009 01E7             else
00569c c029      	RJMP _0x12005B
                 _0x120053:
                 ; 0009 01E8             {
                 ; 0009 01E9                 TIMER_setTimer(&(eth_waitQueue[i].retryTime), eth_waitQueue[i].timeout);
00569d 940e c4c9 	CALL SUBOPT_0x16F
00569f 940e c4f8 	CALL SUBOPT_0x174
0056a1 940e c4fd 	CALL SUBOPT_0x175
                 ; 0009 01EA                 eth_waitQueue[i].retryCount++;      // increase retry counter
0056a3 940e c4c9 	CALL SUBOPT_0x16F
0056a5 58e5      	SUBI R30,LOW(-_eth_waitQueue)
0056a6 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
0056a7 01df      	MOVW R26,R30
0056a8 91ec      	LD   R30,X
0056a9 5fef      	SUBI R30,-LOW(1)
0056aa 93ec      	ST   X,R30
                 ; 0009 01EB 
                 ; 0009 01EC                 printDebug("\r\n<ETH_retransmit> --Retransmitting-- [0x%02X]\r\n",eth_waitQueue[i].packetID);
                +
0056ab e6ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 1556 ) )
0056ac e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1556 ) )
0056ad e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1556 ) )
0056ae e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1556 ) )
                 	__POINTD1FN _0x120000,1556
0056af 940e da29 	CALL __PUTPARD1
0056b1 940e c4c9 	CALL SUBOPT_0x16F
                +
0056b3 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0056b4 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0056b5 81e0      	LD   R30,Z
0056b6 940e bccc 	CALL SUBOPT_0x29
                 ; 0009 01ED 
                 ; 0009 01EE                 write_uart0(    eth_waitQueue[i].packetData,
                 ; 0009 01EF                                 eth_waitQueue[i].packetLen);
0056b8 940e c4c9 	CALL SUBOPT_0x16F
0056ba 940e c506 	CALL SUBOPT_0x176
0056bc 93fa      	ST   -Y,R31
0056bd 93ea      	ST   -Y,R30
0056be 940e c4c9 	CALL SUBOPT_0x16F
                +
0056c0 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
0056c1 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
0056c2 81a0      	LD   R26,Z
0056c3 e0b0      	LDI  R27,0
0056c4 940e 3f71 	CALL _write_uart0
                 ; 0009 01F0             }
                 _0x12005B:
                 ; 0009 01F1         }
                 ; 0009 01F2     }
                 _0x120050:
                +
0056c6 5f0f     +SUBI R16 , LOW ( - 1 )
0056c7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0056c8 cf4e      	RJMP _0x12004E
                 _0x12004F:
                 ; 0009 01F3     return;
0056c9 9109      	LD   R16,Y+
0056ca 9119      	LD   R17,Y+
0056cb 9508      	RET
                 ; 0009 01F4 }
                 ;/*============================================================*/
                 ;void ETH_processPacket(unsigned char *ptr2frame,int len)
                 ; 0009 01F7 {
                 _ETH_processPacket:
                 ; 0009 01F8     FIL             file;
                 ; 0009 01F9     unsigned char   frameType;
                 ; 0009 01FA     int             res=0;
                 ; 0009 01FB     unsigned char   frameID;
                 ; 0009 01FC     int             payload;            // -- pointer to payload data extracted from a frame -- //
                 ; 0009 01FD 
                 ; 0009 01FE     int             cnfgRd;             // -- for keeping read configuration -- //
                 ; 0009 01FF     char            *cnfgWr;
                 ; 0009 0200 
                 ; 0009 0201     int             i;
                 ; 0009 0202 
                 ; 0009 0203 //    printDebug("\r\n\r\n****** processPacket ******\r\n");
                 ; 0009 0204 //    print_payload(ptr2frame,len);
                 ; 0009 0205 //    printDebug("\r\n******************\r\n");
                 ; 0009 0206     frameID         = ptr2frame[0];
0056cc 93ba      	ST   -Y,R27
0056cd 93aa      	ST   -Y,R26
0056ce 97a6      	SBIW R28,38
0056cf 50d2      	SUBI R29,2
0056d0 940e da99 	CALL __SAVELOCR6
                 ;	*ptr2frame -> Y+558
                 ;	len -> Y+556
                 ;	file -> Y+12
                 ;	frameType -> R17
                 ;	res -> R18,R19
                 ;	frameID -> R16
                 ;	payload -> R20,R21
                 ;	cnfgRd -> Y+10
                 ;	*cnfgWr -> Y+8
                 ;	i -> Y+6
                +
0056d2 e020     +LDI R18 , LOW ( 0 )
0056d3 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
0056d4 940e c50c 	CALL SUBOPT_0x177
0056d6 910c      	LD   R16,X
                 ; 0009 0207     frameType       = ptr2frame[1];
0056d7 940e c50c 	CALL SUBOPT_0x177
0056d9 9611      	ADIW R26,1
0056da 911c      	LD   R17,X
                 ; 0009 0208 
                 ; 0009 0209     commLostTimer   = 0xFFFFFFFF;                     // -- cancel communication lost timer -- //
0056db 940e bca6 	CALL SUBOPT_0x24
0056dd 93e0 1421 	STS  _commLostTimer,R30
0056df 93f0 1422 	STS  _commLostTimer+1,R31
0056e1 9360 1423 	STS  _commLostTimer+2,R22
0056e3 9370 1424 	STS  _commLostTimer+3,R23
                 ; 0009 020A     //commLostTimer   = 0;                            // -- re-initial -- //
                 ; 0009 020B 
                 ; 0009 020C     switch(frameType){
0056e5 940e c055 	CALL SUBOPT_0xAE
                 ; 0009 020D         case STATREQC  :     // -- Status Request COMMAND
0056e7 31ea      	CPI  R30,LOW(0x1A)
0056e8 e0a0      	LDI  R26,HIGH(0x1A)
0056e9 07fa      	CPC  R31,R26
0056ea f011      	BREQ PC+3
0056eb 940c 576a 	JMP _0x12005F
                 ; 0009 020E             if( len < (2 + sizeof(struct stat_req_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
0056ed 940e c513 	CALL SUBOPT_0x178
0056ef 971d      	SBIW R26,13
0056f0 f44c      	BRGE _0x120060
                 ; 0009 020F                 printDebug("<ETH_processPacket> status request invalid length (%d)\r\n",len);
                +
0056f1 e9ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 1605 ) )
0056f2 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1605 ) )
0056f3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1605 ) )
0056f4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1605 ) )
                 	__POINTD1FN _0x120000,1605
0056f5 940e c51a 	CALL SUBOPT_0x179
                 ; 0009 0210                 ETH_sendNack(frameID,INVALID_LENGTH);
0056f7 940e c523 	CALL SUBOPT_0x17A
                 ; 0009 0211                 return;
0056f9 c0d3      	RJMP _0x20E0081
                 ; 0009 0212             }
                 ; 0009 0213 
                 ; 0009 0214             payload = (int) malloc (len);
                 _0x120060:
0056fa 940e c513 	CALL SUBOPT_0x178
0056fc 940e c527 	CALL SUBOPT_0x17B
                 ; 0009 0215             if(payload == NULL){
0056fe f449      	BRNE _0x120061
                 ; 0009 0216                 printDebug("<ETH_processPacket> payload malloc() failed\r\n");
                +
0056ff ede8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1662 ) )
005700 e2f5     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1662 ) )
005701 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1662 ) )
005702 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1662 ) )
                 	__POINTD1FN _0x120000,1662
005703 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0217                 ETH_sendNack(frameID,NOT_READY);
005705 940e c52d 	CALL SUBOPT_0x17C
                 ; 0009 0218                 return;
005707 c0c5      	RJMP _0x20E0081
                 ; 0009 0219             }
                 ; 0009 021A 
                 ; 0009 021B             res = statusRequestParser(ptr2frame+2,len-2,(struct stat_req_st *)payload);
                 _0x120061:
005708 940e c531 	CALL SUBOPT_0x17D
00570a 940e c538 	CALL SUBOPT_0x17E
00570c 940e 5fbc 	CALL _statusRequestParser
00570e 019f      	MOVW R18,R30
                 ; 0009 021C             if(res < 0){
00570f 2333      	TST  R19
005710 f44a      	BRPL _0x120062
                 ; 0009 021D                 printDebug("<ETH_processPacket> statusRequestParser() failed\r\n");
                +
005711 e0e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 1708 ) )
005712 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1708 ) )
005713 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1708 ) )
005714 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1708 ) )
                 	__POINTD1FN _0x120000,1708
005715 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 021E                 free( (void *) payload );
005717 940e c541 	CALL SUBOPT_0x17F
                 ; 0009 021F                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0220                 return;
005719 c0b3      	RJMP _0x20E0081
                 ; 0009 0221             }
                 ; 0009 0222 
                 ; 0009 0223             printDebug("\r\n--statusRequestParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120062:
                +
00571a e3e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 1759 ) )
00571b e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1759 ) )
00571c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1759 ) )
00571d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1759 ) )
                 	__POINTD1FN _0x120000,1759
00571e 940e c548 	CALL SUBOPT_0x180
                 ; 0009 0224             printDebug("accessMethod    [0x%02X]\r\n",      ((struct stat_req_st *)payload)->accm);
                +
005720 e6e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1800 ) )
005721 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1800 ) )
005722 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1800 ) )
005723 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1800 ) )
                 	__POINTD1FN _0x120000,1800
005724 940e c54d 	CALL SUBOPT_0x181
                 ; 0009 0225             printDebug("interval        [0x%04X] = %d\r\n", ((struct stat_req_st *)payload)->intv,((struct stat_req_st *)payload)->intv);
                +
005726 e7ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 1827 ) )
005727 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1827 ) )
005728 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1827 ) )
005729 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1827 ) )
                 	__POINTD1FN _0x120000,1827
00572a 940e c553 	CALL SUBOPT_0x182
00572c 940e c553 	CALL SUBOPT_0x182
00572e 940e bc8a 	CALL SUBOPT_0x20
                 ; 0009 0226             printDebug("statusList      |");
                +
005730 e9ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 1859 ) )
005731 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1859 ) )
005732 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1859 ) )
005733 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1859 ) )
                 	__POINTD1FN _0x120000,1859
005734 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0227 
                 ; 0009 0228             for( i=0 ; i<(((struct stat_req_st *)payload)->parLen) ; i++)
005736 e0e0      	LDI  R30,LOW(0)
005737 83ee      	STD  Y+6,R30
005738 83ef      	STD  Y+6+1,R30
                 _0x120064:
005739 01da      	MOVW R26,R20
00573a 961b      	ADIW R26,11
00573b 940e c559 	CALL SUBOPT_0x183
00573d f4b8      	BRSH _0x120065
                 ; 0009 0229             {
                 ; 0009 022A                 printDebug("%02X|",(((struct stat_req_st *)payload)->parlst)[i++]);
                +
00573e eaef     +LDI R30 , LOW ( 2 * _0x120000 + ( 1877 ) )
00573f e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1877 ) )
005740 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1877 ) )
005741 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1877 ) )
                 	__POINTD1FN _0x120000,1877
005742 940e da29 	CALL __PUTPARD1
005744 01fa      	MOVW R30,R20
005745 85a5      	LDD  R26,Z+13
005746 85b6      	LDD  R27,Z+14
005747 85ea      	LDD  R30,Y+10
005748 85fb      	LDD  R31,Y+10+1
005749 9631      	ADIW R30,1
00574a 87ea      	STD  Y+10,R30
00574b 87fb      	STD  Y+10+1,R31
00574c 9731      	SBIW R30,1
00574d 940e c560 	CALL SUBOPT_0x184
                 ; 0009 022B             }
00574f 81ee      	LDD  R30,Y+6
005750 81ff      	LDD  R31,Y+6+1
005751 9631      	ADIW R30,1
005752 83ee      	STD  Y+6,R30
005753 83ff      	STD  Y+6+1,R31
005754 cfe4      	RJMP _0x120064
                 _0x120065:
                 ; 0009 022C             printDebug("\r\n-- ..Done.. --\r\n");
                +
005755 ebe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1883 ) )
005756 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1883 ) )
005757 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1883 ) )
005758 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1883 ) )
                 	__POINTD1FN _0x120000,1883
005759 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 022D 
                 ; 0009 022E             ETH_sendStatusRequestAck(frameID,((struct stat_req_st *)payload)->accm,0x00);
00575b 940e c565 	CALL SUBOPT_0x185
00575d e0a0      	LDI  R26,LOW(0)
00575e db24      	RCALL _ETH_sendStatusRequestAck
                 ; 0009 022F 
                 ; 0009 0230             if( ((struct stat_req_st *)payload)->accm < 0x30){
00575f 01fa      	MOVW R30,R20
005760 85a0      	LDD  R26,Z+8
005761 33a0      	CPI  R26,LOW(0x30)
005762 f418      	BRSH _0x120066
                 ; 0009 0231                 free_statusRequest((struct stat_req_st *)payload);
005763 01da      	MOVW R26,R20
005764 940e 61fc 	CALL _free_statusRequest
                 ; 0009 0232             }
                 ; 0009 0233 
                 ; 0009 0234             free( (void *) payload );
                 _0x120066:
005766 01da      	MOVW R26,R20
005767 940e a0bd 	CALL _free
                 ; 0009 0235             break;
005769 c460      	RJMP _0x12005E
                 ; 0009 0236         case STATREPA  :     // -- Status Report ACKNOWLEDGE
                 _0x12005F:
00576a 32eb      	CPI  R30,LOW(0x2B)
00576b e0a0      	LDI  R26,HIGH(0x2B)
00576c 07fa      	CPC  R31,R26
00576d f011      	BREQ PC+3
00576e 940c 57b5 	JMP _0x120067
                 ; 0009 0237             if( len < (2 + sizeof(struct stat_rep_st)) ){
005770 940e c513 	CALL SUBOPT_0x178
005772 971e      	SBIW R26,14
005773 f42c      	BRGE _0x120068
                 ; 0009 0238                 printDebug("<ETH_processPacket> status report invalid length (%d)\r\n",len);
                +
005774 ece8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1902 ) )
005775 e2f6     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1902 ) )
005776 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1902 ) )
005777 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1902 ) )
                 	__POINTD1FN _0x120000,1902
005778 c04a      	RJMP _0x20E0080
                 ; 0009 0239                 return;
                 ; 0009 023A             }
                 ; 0009 023B 
                 ; 0009 023C             printDebug("\r\n--statusReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120068:
                +
005779 e0e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 1958 ) )
00577a e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1958 ) )
00577b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1958 ) )
00577c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1958 ) )
                 	__POINTD1FN _0x120000,1958
00577d 940e c548 	CALL SUBOPT_0x180
                 ; 0009 023D             printDebug("unixTime        [0x%02X][0x%02X][0x%02X][0x%02X]\r\n",
                 ; 0009 023E                                     ptr2frame[10],ptr2frame[11],ptr2frame[12],ptr2frame[13]);
                +
00577f e2e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 1998 ) )
005780 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1998 ) )
005781 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1998 ) )
005782 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1998 ) )
                 	__POINTD1FN _0x120000,1998
005783 940e da29 	CALL __PUTPARD1
                +
005785 01fe     +MOVW R30 , R28
005786 5cee     +SUBI R30 , LOW ( - 562 )
005787 4ffd     +SBCI R31 , HIGH ( - 562 )
005788 9001     +LD R0 , Z +
005789 81f0     +LD R31 , Z
00578a 2de0     +MOV R30 , R0
                 	__GETW1SX 562
00578b 85e2      	LDD  R30,Z+10
00578c 940e be67 	CALL SUBOPT_0x65
                +
00578e 01fe     +MOVW R30 , R28
00578f 5cea     +SUBI R30 , LOW ( - 566 )
005790 4ffd     +SBCI R31 , HIGH ( - 566 )
005791 9001     +LD R0 , Z +
005792 81f0     +LD R31 , Z
005793 2de0     +MOV R30 , R0
                 	__GETW1SX 566
005794 85e3      	LDD  R30,Z+11
005795 940e be67 	CALL SUBOPT_0x65
                +
005797 01fe     +MOVW R30 , R28
005798 5ce6     +SUBI R30 , LOW ( - 570 )
005799 4ffd     +SBCI R31 , HIGH ( - 570 )
00579a 9001     +LD R0 , Z +
00579b 81f0     +LD R31 , Z
00579c 2de0     +MOV R30 , R0
                 	__GETW1SX 570
00579d 85e4      	LDD  R30,Z+12
00579e 940e be67 	CALL SUBOPT_0x65
                +
0057a0 01fe     +MOVW R30 , R28
0057a1 5ce2     +SUBI R30 , LOW ( - 574 )
0057a2 4ffd     +SBCI R31 , HIGH ( - 574 )
0057a3 9001     +LD R0 , Z +
0057a4 81f0     +LD R31 , Z
0057a5 2de0     +MOV R30 , R0
                 	__GETW1SX 574
0057a6 85e5      	LDD  R30,Z+13
0057a7 940e be67 	CALL SUBOPT_0x65
0057a9 940e c47c 	CALL SUBOPT_0x162
                 ; 0009 023F             res = setTimeSyncSchema( &ptr2frame[10] );
0057ab 940e c50c 	CALL SUBOPT_0x177
0057ad 961a      	ADIW R26,10
0057ae 940e 67e9 	CALL _setTimeSyncSchema
0057b0 019f      	MOVW R18,R30
                 ; 0009 0240             if(res < 0){
                 ; 0009 0241                 //printDebug("<ETH_processPacket> setTimeSyncSchema() failed in STATREPA\r\n");
                 ; 0009 0242             }
                 ; 0009 0243             ETH_removeWaitQueue(frameID);
0057b1 2fa0      	MOV  R26,R16
0057b2 940e 68cc 	CALL _ETH_removeWaitQueue
                 ; 0009 0244             break;
0057b4 c415      	RJMP _0x12005E
                 ; 0009 0245         case EVENREPA  :     // -- Event Report ACKNOWLEDGE
                 _0x120067:
0057b5 33eb      	CPI  R30,LOW(0x3B)
0057b6 e0a0      	LDI  R26,HIGH(0x3B)
0057b7 07fa      	CPC  R31,R26
0057b8 f011      	BREQ PC+3
0057b9 940c 5821 	JMP _0x12006A
                 ; 0009 0246             if( len < (2 + sizeof(struct event_rep_st)) ){
0057bb 940e c513 	CALL SUBOPT_0x178
0057bd 971a      	SBIW R26,10
0057be f49c      	BRGE _0x12006B
                 ; 0009 0247                 printDebug("<ETH_processPacket> event report invalid length (%d)\r\n",len);
                +
0057bf e5eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 2049 ) )
0057c0 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2049 ) )
0057c1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2049 ) )
0057c2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2049 ) )
                 	__POINTD1FN _0x120000,2049
                 _0x20E0080:
0057c3 940e da29 	CALL __PUTPARD1
                +
0057c5 01fe     +MOVW R30 , R28
0057c6 5de0     +SUBI R30 , LOW ( - 560 )
0057c7 4ffd     +SBCI R31 , HIGH ( - 560 )
0057c8 9001     +LD R0 , Z +
0057c9 81f0     +LD R31 , Z
0057ca 2de0     +MOV R30 , R0
                 	__GETW1SX 560
0057cb 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0009 0248                 return;
                 _0x20E0081:
0057cd 940e daa0 	CALL __LOADLOCR6
0057cf 96e0      	ADIW R28,48
0057d0 5fde      	SUBI R29,-2
0057d1 9508      	RET
                 ; 0009 0249             }
                 ; 0009 024A 
                 ; 0009 024B             printDebug("\r\n--eventReportParser-- ACK [0x%02X]\r\n", frameID);
                 _0x12006B:
                +
0057d2 e9e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 2104 ) )
0057d3 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2104 ) )
0057d4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2104 ) )
0057d5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2104 ) )
                 	__POINTD1FN _0x120000,2104
0057d6 940e c548 	CALL SUBOPT_0x180
                 ; 0009 024C             if( (logEventWait.frameID != 0) && (frameID == logEventWait.frameID) )
0057d8 91a0 142b 	LDS  R26,_logEventWait
0057da 30a0      	CPI  R26,LOW(0x0)
0057db f021      	BREQ _0x12006D
0057dc 91e0 142b 	LDS  R30,_logEventWait
0057de 17e0      	CP   R30,R16
0057df f009      	BREQ _0x12006E
                 _0x12006D:
0057e0 c039      	RJMP _0x12006C
                 _0x12006E:
                 ; 0009 024D             {
                 ; 0009 024E                 printDebug("<ETH_processPacket> got event log ack\r\n");
                +
0057e1 ebe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 2143 ) )
0057e2 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2143 ) )
0057e3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2143 ) )
0057e4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2143 ) )
                 	__POINTD1FN _0x120000,2143
0057e5 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 024F 
                 ; 0009 0250                 res = LOG_openFile(&file,LOGFILE_EVENT);
0057e7 940e be23 	CALL SUBOPT_0x5A
0057e9 940e be7c 	CALL SUBOPT_0x69
0057eb 019f      	MOVW R18,R30
                 ; 0009 0251                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_EVENT);            }
0057ec 2333      	TST  R19
0057ed f42a      	BRPL _0x12006F
                +
0057ee eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
0057ef e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
0057f0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
0057f1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
0057f2 c01d      	RJMP _0x120117
                 ; 0009 0252                 else
                 _0x12006F:
                 ; 0009 0253                 {
                 ; 0009 0254                     res = LOG_setLastSend(&file,logEventWait.logID + 1);
0057f3 940e be23 	CALL SUBOPT_0x5A
0057f5 940e bed0 	CALL SUBOPT_0x72
0057f7 940e c56a 	CALL SUBOPT_0x186
                 ; 0009 0255                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
0057f9 f41a      	BRPL _0x120071
0057fa 940e c572 	CALL SUBOPT_0x187
                 ; 0009 0256                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_EVENT,logEventWait.logID + 1);   }
0057fc c00c      	RJMP _0x120072
                 _0x120071:
                +
0057fd e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
0057fe e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
0057ff e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
005800 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005801 940e be87 	CALL SUBOPT_0x6A
005803 940e bed0 	CALL SUBOPT_0x72
005805 940e c144 	CALL SUBOPT_0xD5
005807 940e bc8a 	CALL SUBOPT_0x20
                 _0x120072:
                 ; 0009 0257 
                 ; 0009 0258                     res = LOG_closeFile(&file);
005809 940e c578 	CALL SUBOPT_0x188
                 ; 0009 0259                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_EVENT);           }
00580b f462      	BRPL _0x120073
                +
00580c e5ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
00580d e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
00580e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
00580f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x120117:
005810 940e da29 	CALL __PUTPARD1
005812 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
005813 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
005814 940e bd18 	CALL SUBOPT_0x34
005816 940e bc2c 	CALL SUBOPT_0x12
                 ; 0009 025A                 }
                 _0x120073:
                 ; 0009 025B 
                 ; 0009 025C                 logEventWait.frameID    = 0;
005818 940e bec0 	CALL SUBOPT_0x71
                 ; 0009 025D                 logEventWait.logID      = 0;
                 ; 0009 025E             }
                 ; 0009 025F             removeEventLogQueue(frameID);
                 _0x12006C:
00581a 2fa0      	MOV  R26,R16
00581b 940e 8417 	CALL _removeEventLogQueue
                 ; 0009 0260             ETH_removeWaitQueue(frameID);
00581d 2fa0      	MOV  R26,R16
00581e 940e 68cc 	CALL _ETH_removeWaitQueue
                 ; 0009 0261             break;
005820 c3a9      	RJMP _0x12005E
                 ; 0009 0262         case CONFMANC  :     // -- Configuration Management COMMAND
                 _0x12006A:
005821 34ea      	CPI  R30,LOW(0x4A)
005822 e0a0      	LDI  R26,HIGH(0x4A)
005823 07fa      	CPC  R31,R26
005824 f011      	BREQ PC+3
005825 940c 5958 	JMP _0x120074
                 ; 0009 0263             printDebug("<ETH_processPacket> Config Manage\r\n");
                +
005827 e8e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2343 ) )
005828 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2343 ) )
005829 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2343 ) )
00582a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2343 ) )
                 	__POINTD1FN _0x120000,2343
00582b 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0264             print_payload(ptr2frame, len);
00582d 940e c531 	CALL SUBOPT_0x17D
00582f 93fa      	ST   -Y,R31
005830 93ea      	ST   -Y,R30
005831 940e c50c 	CALL SUBOPT_0x177
005833 940e 9b56 	CALL _print_payload
                 ; 0009 0265 
                 ; 0009 0266             if( len < (2 + sizeof(struct conf_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) ) ){
005835 940e c513 	CALL SUBOPT_0x178
005837 971c      	SBIW R26,12
005838 f44c      	BRGE _0x120075
                 ; 0009 0267                 printDebug("<ETH_processPacket> configuration management invalid length (%d)\r\n",len);
                +
005839 eae5     +LDI R30 , LOW ( 2 * _0x120000 + ( 2379 ) )
00583a e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2379 ) )
00583b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2379 ) )
00583c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2379 ) )
                 	__POINTD1FN _0x120000,2379
00583d 940e c51a 	CALL SUBOPT_0x179
                 ; 0009 0268                 ETH_sendNack(frameID,INVALID_LENGTH);
00583f 940e c523 	CALL SUBOPT_0x17A
                 ; 0009 0269                 return;
005841 c388      	RJMP _0x20E007F
                 ; 0009 026A             }
                 ; 0009 026B 
                 ; 0009 026C             payload = (int) malloc (sizeof(struct conf_man_st));
                 _0x120075:
005842 e0ae      	LDI  R26,LOW(14)
005843 940e c585 	CALL SUBOPT_0x189
                 ; 0009 026D             if(payload == NULL){
005845 f459      	BRNE _0x120076
                 ; 0009 026E                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct conf_man_st));
005846 940e c587 	CALL SUBOPT_0x18A
                +
005848 e0ee     +LDI R30 , LOW ( 0xE )
005849 e0f0     +LDI R31 , HIGH ( 0xE )
00584a e060     +LDI R22 , BYTE3 ( 0xE )
00584b e070     +LDI R23 , BYTE4 ( 0xE )
                 	__GETD1N 0xE
00584c 940e c58e 	CALL SUBOPT_0x18B
                 ; 0009 026F                 ETH_sendNack(frameID,NOT_READY);
00584e 940e c52d 	CALL SUBOPT_0x17C
                 ; 0009 0270                 return;
005850 c379      	RJMP _0x20E007F
                 ; 0009 0271             }
                 ; 0009 0272 
                 ; 0009 0273             res = configManageParser(ptr2frame+2,len-2,(struct conf_man_st *)payload);
                 _0x120076:
005851 940e c592 	CALL SUBOPT_0x18C
005853 940e 6018 	CALL _configManageParser
005855 019f      	MOVW R18,R30
                 ; 0009 0274             if(res < 0){
005856 2333      	TST  R19
005857 f44a      	BRPL _0x120077
                 ; 0009 0275                 printDebug("<ETH_processPacket> configManageParser() failed\r\n");
                +
005858 e1e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2494 ) )
005859 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2494 ) )
00585a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2494 ) )
00585b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2494 ) )
                 	__POINTD1FN _0x120000,2494
00585c 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0276                 free( (void *) payload );
00585e 940e c541 	CALL SUBOPT_0x17F
                 ; 0009 0277                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0278                 return;
005860 c369      	RJMP _0x20E007F
                 ; 0009 0279             }
                 ; 0009 027A 
                 ; 0009 027B             printDebug("\r\n--configManageParser-- CMD [0x%02X]\r\n",frameID);
                 _0x120077:
                +
005861 e4ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 2544 ) )
005862 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2544 ) )
005863 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2544 ) )
005864 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2544 ) )
                 	__POINTD1FN _0x120000,2544
005865 940e c548 	CALL SUBOPT_0x180
                 ; 0009 027C             printDebug("accd            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->accd);
005867 940e c594 	CALL SUBOPT_0x18D
                 ; 0009 027D             printDebug("cnfg            [0x%02X]\r\n",       ((struct conf_man_st *)payload)->cnfg);
                +
005869 e8ed     +LDI R30 , LOW ( 2 * _0x120000 + ( 2611 ) )
00586a e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2611 ) )
00586b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2611 ) )
00586c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2611 ) )
                 	__POINTD1FN _0x120000,2611
00586d 940e c599 	CALL SUBOPT_0x18E
                 ; 0009 027E 
                 ; 0009 027F             switch( ((struct conf_man_st *)payload)->accd ){
00586f 940e c59f 	CALL SUBOPT_0x18F
                 ; 0009 0280                 case CONF_RD_CMD    :   // -- Configration Read -- //
005871 f011      	BREQ PC+3
005872 940c 58e1 	JMP _0x12007B
                 ; 0009 0281                                         res = getConfigLen(((struct conf_man_st *)payload)->cnfg);
005874 01fa      	MOVW R30,R20
005875 85a1      	LDD  R26,Z+9
005876 940e 6211 	CALL _getConfigLen
005878 019f      	MOVW R18,R30
                 ; 0009 0282                                         if(res < 0){
005879 2333      	TST  R19
00587a f43a      	BRPL _0x12007C
                 ; 0009 0283                                             printDebug("<ETH_processPacket> getConfigLen() failed\r\n");
                +
00587b eae8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2638 ) )
00587c e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2638 ) )
00587d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2638 ) )
00587e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2638 ) )
                 	__POINTD1FN _0x120000,2638
00587f 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0284                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005881 c0cc      	RJMP _0x120118
                 ; 0009 0285                                             break;
                 ; 0009 0286                                         }
                 ; 0009 0287 
                 ; 0009 0288                                         cnfgRd = (int) malloc (res);
                 _0x12007C:
005882 01d9      	MOVW R26,R18
005883 940e a0a2 	CALL _malloc
005885 87ea      	STD  Y+10,R30
005886 87fb      	STD  Y+10+1,R31
                 ; 0009 0289                                         if(cnfgRd == NULL){
005887 9730      	SBIW R30,0
005888 f449      	BRNE _0x12007D
                 ; 0009 028A                                             printDebug("<ETH_processPacket> cnfgRd malloc() failed\r\n");
                +
005889 ede4     +LDI R30 , LOW ( 2 * _0x120000 + ( 2682 ) )
00588a e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2682 ) )
00588b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2682 ) )
00588c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2682 ) )
                 	__POINTD1FN _0x120000,2682
00588d 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 028B                                             ETH_sendNack(frameID,NOT_READY);
00588f 930a      	ST   -Y,R16
005890 e5a0      	LDI  R26,LOW(80)
005891 c0be      	RJMP _0x120119
                 ; 0009 028C                                             break;
                 ; 0009 028D                                         }
                 ; 0009 028E 
                 ; 0009 028F                                         res = configRead(((struct conf_man_st *)payload)->cnfg,(char *) cnfgRd);
                 _0x12007D:
005892 01fa      	MOVW R30,R20
005893 85a1      	LDD  R26,Z+9
005894 93aa      	ST   -Y,R26
005895 85ab      	LDD  R26,Y+11
005896 85bc      	LDD  R27,Y+11+1
005897 940e 6263 	CALL _configRead
005899 019f      	MOVW R18,R30
                 ; 0009 0290                                         if(res <= 0){
00589a 2400      	CLR  R0
00589b 1602      	CP   R0,R18
00589c 0603      	CPC  R0,R19
00589d f164      	BRLT _0x12007E
                 ; 0009 0291                                             printDebug("<ETH_processPacket> configRead() failed\r\n");
                +
00589e e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2727 ) )
00589f e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2727 ) )
0058a0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2727 ) )
0058a1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2727 ) )
                 	__POINTD1FN _0x120000,2727
0058a2 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0292                                             if(res == -1){
0058a4 efef      	LDI  R30,LOW(65535)
0058a5 efff      	LDI  R31,HIGH(65535)
0058a6 17e2      	CP   R30,R18
0058a7 07f3      	CPC  R31,R19
0058a8 f419      	BRNE _0x12007F
                 ; 0009 0293                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
0058a9 930a      	ST   -Y,R16
0058aa e3a0      	LDI  R26,LOW(48)
0058ab c018      	RJMP _0x12011A
                 ; 0009 0294                                             }
                 ; 0009 0295                                             else if((res == -2) || (res == 0)){
                 _0x12007F:
0058ac efee      	LDI  R30,LOW(65534)
0058ad efff      	LDI  R31,HIGH(65534)
0058ae 17e2      	CP   R30,R18
0058af 07f3      	CPC  R31,R19
0058b0 f021      	BREQ _0x120082
0058b1 2400      	CLR  R0
0058b2 1602      	CP   R0,R18
0058b3 0603      	CPC  R0,R19
0058b4 f419      	BRNE _0x120081
                 _0x120082:
                 ; 0009 0296                                                 ETH_sendNack(frameID,NOT_READY);
0058b5 930a      	ST   -Y,R16
0058b6 e5a0      	LDI  R26,LOW(80)
0058b7 c00c      	RJMP _0x12011A
                 ; 0009 0297                                             }
                 ; 0009 0298                                             else if(res == -3){
                 _0x120081:
0058b8 efed      	LDI  R30,LOW(65533)
0058b9 efff      	LDI  R31,HIGH(65533)
0058ba 17e2      	CP   R30,R18
0058bb 07f3      	CPC  R31,R19
0058bc f429      	BRNE _0x120085
                 ; 0009 0299                                                 ETH_sendConfigManageNack(   frameID,
                 ; 0009 029A                                                                             ((struct conf_man_st *)payload)->accd,
                 ; 0009 029B                                                                             ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 029C                                                                             ERROR);
0058bd 940e c565 	CALL SUBOPT_0x185
0058bf 940e c5a3 	CALL SUBOPT_0x190
                 ; 0009 029D                                             }
                 ; 0009 029E                                             else{
0058c1 c003      	RJMP _0x120086
                 _0x120085:
                 ; 0009 029F                                                 ETH_sendNack(frameID,UNKNOWN_ERROR);
0058c2 930a      	ST   -Y,R16
0058c3 efaf      	LDI  R26,LOW(255)
                 _0x12011A:
0058c4 d999      	RCALL _ETH_sendNack
                 ; 0009 02A0                                             }
                 _0x120086:
                 ; 0009 02A1 
                 ; 0009 02A2                                             free((void *) cnfgRd);
0058c5 85aa      	LDD  R26,Y+10
0058c6 85bb      	LDD  R27,Y+10+1
0058c7 940e a0bd 	CALL _free
                 ; 0009 02A3                                             break;
0058c9 c087      	RJMP _0x12007A
                 ; 0009 02A4                                         }
                 ; 0009 02A5 
                 ; 0009 02A6                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12007E:
                 ; 0009 02A7                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02A8                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02A9                                                                         SUCCESS,
                 ; 0009 02AA                                                                         (char *)cnfgRd,
                 ; 0009 02AB                                                                         res  );
0058ca 940e c565 	CALL SUBOPT_0x185
0058cc 940e c5a9 	CALL SUBOPT_0x191
0058ce 85ee      	LDD  R30,Y+14
0058cf 85ff      	LDD  R31,Y+14+1
0058d0 93fa      	ST   -Y,R31
0058d1 93ea      	ST   -Y,R30
0058d2 01d9      	MOVW R26,R18
0058d3 940e c5af 	CALL SUBOPT_0x192
                 ; 0009 02AC                                         if(res < 0){
0058d5 f432      	BRPL _0x120087
                 ; 0009 02AD                                             printDebug("<ETH_processPacket> RD_CMD : ETH_sendConfigManageAck() failed\r\n");
                +
0058d6 e2eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 2769 ) )
0058d7 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2769 ) )
0058d8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2769 ) )
0058d9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2769 ) )
                 	__POINTD1FN _0x120000,2769
0058da 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 02AE                                         }
                 ; 0009 02AF 
                 ; 0009 02B0                                         free( (void *) cnfgRd );
                 _0x120087:
0058dc 85aa      	LDD  R26,Y+10
0058dd 85bb      	LDD  R27,Y+10+1
0058de 940e a0bd 	CALL _free
                 ; 0009 02B1                                         break;
0058e0 c070      	RJMP _0x12007A
                 ; 0009 02B2                 case CONF_WR_CMD    :   // -- Configuration Write -- //
                 _0x12007B:
0058e1 32e0      	CPI  R30,LOW(0x20)
0058e2 e0a0      	LDI  R26,HIGH(0x20)
0058e3 07fa      	CPC  R31,R26
0058e4 f011      	BREQ PC+3
0058e5 940c 592c 	JMP _0x120088
                 ; 0009 02B3                                         cnfgWr = malloc(((struct conf_man_st *)payload)->confLen);
0058e7 01fa      	MOVW R30,R20
0058e8 85a2      	LDD  R26,Z+10
0058e9 85b3      	LDD  R27,Z+11
0058ea 940e a0a2 	CALL _malloc
0058ec 940e c5b4 	CALL SUBOPT_0x193
                 ; 0009 02B4                                         if(cnfgWr == NULL){
0058ee 9730      	SBIW R30,0
0058ef f449      	BRNE _0x120089
                 ; 0009 02B5                                             printDebug("<ETH_processPacket> cnfgWr malloc() failed\r\n");
                +
0058f0 e6eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 2833 ) )
0058f1 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2833 ) )
0058f2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2833 ) )
0058f3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2833 ) )
                 	__POINTD1FN _0x120000,2833
0058f4 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 02B6                                             ETH_sendNack(frameID,NOT_READY);
0058f6 930a      	ST   -Y,R16
0058f7 e5a0      	LDI  R26,LOW(80)
0058f8 c057      	RJMP _0x120119
                 ; 0009 02B7                                             break;
                 ; 0009 02B8                                         }
                 ; 0009 02B9 
                 ; 0009 02BA                                         memcpy(cnfgWr,((struct conf_man_st *)payload)->confSpec,((struct conf_man_st *)payload)->confLen);
                 _0x120089:
0058f9 940e c5b7 	CALL SUBOPT_0x194
0058fb 01fa      	MOVW R30,R20
0058fc 85a4      	LDD  R26,Z+12
0058fd 85b5      	LDD  R27,Z+13
0058fe 93ba      	ST   -Y,R27
0058ff 93aa      	ST   -Y,R26
005900 85a2      	LDD  R26,Z+10
005901 85b3      	LDD  R27,Z+11
005902 940e a0df 	CALL _memcpy
                 ; 0009 02BB 
                 ; 0009 02BC                                         res = configWrite(  (unsigned char) (((struct conf_man_st *)payload)->cnfg),
                 ; 0009 02BD                                                             cnfgWr,
                 ; 0009 02BE                                                             (int) (((struct conf_man_st *)payload)->confLen) );
005904 01fa      	MOVW R30,R20
005905 85a1      	LDD  R26,Z+9
005906 93aa      	ST   -Y,R26
005907 940e c5bc 	CALL SUBOPT_0x195
005909 01fa      	MOVW R30,R20
00590a 85a2      	LDD  R26,Z+10
00590b 85b3      	LDD  R27,Z+11
00590c 940e 6693 	CALL _configWrite
00590e 019f      	MOVW R18,R30
                 ; 0009 02BF 
                 ; 0009 02C0                                         free(cnfgWr);
00590f 85a8      	LDD  R26,Y+8
005910 85b9      	LDD  R27,Y+8+1
005911 940e a0bd 	CALL _free
                 ; 0009 02C1                                         if(res < 0){
005913 2333      	TST  R19
005914 f45a      	BRPL _0x12008A
                 ; 0009 02C2                                             printDebug("<ETH_processPacket> configWrite() failed\r\n");
                +
005915 e9e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2878 ) )
005916 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2878 ) )
005917 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2878 ) )
005918 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2878 ) )
                 	__POINTD1FN _0x120000,2878
005919 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 02C3                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02C4                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02C5                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02C6                                                                         ERROR);
00591b 940e c565 	CALL SUBOPT_0x185
00591d 940e c5a3 	CALL SUBOPT_0x190
                 ; 0009 02C7                                             break;
00591f c031      	RJMP _0x12007A
                 ; 0009 02C8                                         }
                 ; 0009 02C9 
                 ; 0009 02CA 
                 ; 0009 02CB                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008A:
                 ; 0009 02CC                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02CD                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02CE                                                                         SUCCESS,
                 ; 0009 02CF                                                                         NULL,
                 ; 0009 02D0                                                                         0  );
005920 940e c565 	CALL SUBOPT_0x185
005922 940e c5a9 	CALL SUBOPT_0x191
005924 940e c5c1 	CALL SUBOPT_0x196
005926 940e c5af 	CALL SUBOPT_0x192
                 ; 0009 02D1                                         if(res < 0){
005928 f412      	BRPL _0x12008B
                 ; 0009 02D2                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005929 940e c5c6 	CALL SUBOPT_0x197
                 ; 0009 02D3                                         }
                 ; 0009 02D4 
                 ; 0009 02D5                                         break;
                 _0x12008B:
00592b c025      	RJMP _0x12007A
                 ; 0009 02D6                 case CONF_CF_CMD    :   // -- Configuration Confirm -- //
                 _0x120088:
00592c 33e0      	CPI  R30,LOW(0x30)
00592d e0a0      	LDI  R26,HIGH(0x30)
00592e 07fa      	CPC  R31,R26
00592f f4e1      	BRNE _0x12008F
                 ; 0009 02D7                                         res = configConfirm();
005930 940e 6860 	CALL _configConfirm
005932 019f      	MOVW R18,R30
                 ; 0009 02D8                                         if(res < 0){
005933 2333      	TST  R19
005934 f45a      	BRPL _0x12008D
                 ; 0009 02D9                                             printDebug("<ETH_processPacket> configConfirm() failed\r\n");
                +
005935 e0ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 2992 ) )
005936 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2992 ) )
005937 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2992 ) )
005938 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2992 ) )
                 	__POINTD1FN _0x120000,2992
005939 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 02DA                                             ETH_sendConfigManageNack(   frameID,
                 ; 0009 02DB                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02DC                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02DD                                                                         ERROR);
00593b 940e c565 	CALL SUBOPT_0x185
00593d 940e c5a3 	CALL SUBOPT_0x190
                 ; 0009 02DE                                             break;
00593f c011      	RJMP _0x12007A
                 ; 0009 02DF                                         }
                 ; 0009 02E0 
                 ; 0009 02E1                                         res = ETH_sendConfigManageAck(  frameID,
                 _0x12008D:
                 ; 0009 02E2                                                                         ((struct conf_man_st *)payload)->accd,
                 ; 0009 02E3                                                                         ((struct conf_man_st *)payload)->cnfg,
                 ; 0009 02E4                                                                         SUCCESS,
                 ; 0009 02E5                                                                         NULL,
                 ; 0009 02E6                                                                         0  );
005940 940e c565 	CALL SUBOPT_0x185
005942 940e c5a9 	CALL SUBOPT_0x191
005944 940e c5c1 	CALL SUBOPT_0x196
005946 940e c5af 	CALL SUBOPT_0x192
                 ; 0009 02E7                                         if(res < 0){
005948 f412      	BRPL _0x12008E
                 ; 0009 02E8                                             printDebug("WARN : <ETH_processPacket> WR_CMD : ETH_sendConfigManageAck() failed\r\n");
005949 940e c5c6 	CALL SUBOPT_0x197
                 ; 0009 02E9                                         }
                 ; 0009 02EA 
                 ; 0009 02EB                                         break;
                 _0x12008E:
00594b c005      	RJMP _0x12007A
                 ; 0009 02EC                 default             :   // -- Shouldn't reach here -- //
                 _0x12008F:
                 ; 0009 02ED                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 02EE                                                         ((struct conf_man_st *)payload)->accd );
00594c 940e c5cc 	CALL SUBOPT_0x198
                 ; 0009 02EF                                         ETH_sendNack(frameID,INVALID_PARAMETER);
                 _0x120118:
00594e 930a      	ST   -Y,R16
00594f e3a0      	LDI  R26,LOW(48)
                 _0x120119:
005950 d90d      	RCALL _ETH_sendNack
                 ; 0009 02F0                                         break;
                 ; 0009 02F1             }
                 _0x12007A:
                 ; 0009 02F2 
                 ; 0009 02F3             free_configManage((struct conf_man_st *)payload);
005951 01da      	MOVW R26,R20
005952 940e 6203 	CALL _free_configManage
                 ; 0009 02F4             free( (void *) payload );
005954 01da      	MOVW R26,R20
005955 940e a0bd 	CALL _free
                 ; 0009 02F5 
                 ; 0009 02F6             break;
005957 c272      	RJMP _0x12005E
                 ; 0009 02F7         case DATAREPA  :     // -- Data Report ACKNOWLEDGE
                 _0x120074:
005958 35eb      	CPI  R30,LOW(0x5B)
005959 e0a0      	LDI  R26,HIGH(0x5B)
00595a 07fa      	CPC  R31,R26
00595b f011      	BREQ PC+3
00595c 940c 59b8 	JMP _0x120090
                 ; 0009 02F8             if( len < (2 + sizeof(struct data_rep_st)) ){
00595e 940e c513 	CALL SUBOPT_0x178
005960 971a      	SBIW R26,10
005961 f43c      	BRGE _0x120091
                 ; 0009 02F9                 printDebug("<ETH_processPacket> Data report invalid length (%d)\r\n",len);
                +
005962 e7e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3098 ) )
005963 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3098 ) )
005964 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3098 ) )
005965 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3098 ) )
                 	__POINTD1FN _0x120000,3098
005966 940e c51a 	CALL SUBOPT_0x179
                 ; 0009 02FA                 return;
005968 c261      	RJMP _0x20E007F
                 ; 0009 02FB             }
                 ; 0009 02FC 
                 ; 0009 02FD             printDebug("\r\n--dataReportParser-- ACK [0x%02X]\r\n",frameID);
                 _0x120091:
                +
005969 eaea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3152 ) )
00596a e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3152 ) )
00596b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3152 ) )
00596c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3152 ) )
                 	__POINTD1FN _0x120000,3152
00596d 940e c548 	CALL SUBOPT_0x180
                 ; 0009 02FE             if( (logDataWait.frameID != 0) && (frameID == logDataWait.frameID) )
00596f 91a0 1426 	LDS  R26,_logDataWait
005971 30a0      	CPI  R26,LOW(0x0)
005972 f021      	BREQ _0x120093
005973 91e0 1426 	LDS  R30,_logDataWait
005975 17e0      	CP   R30,R16
005976 f009      	BREQ _0x120094
                 _0x120093:
005977 c039      	RJMP _0x120092
                 _0x120094:
                 ; 0009 02FF             {
                 ; 0009 0300                 printDebug("<ETH_processPacket> got data log ack\r\n");
                +
005978 ede0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3190 ) )
005979 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3190 ) )
00597a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3190 ) )
00597b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3190 ) )
                 	__POINTD1FN _0x120000,3190
00597c 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0301 
                 ; 0009 0302                 res = LOG_openFile(&file,LOGFILE_DATA);
00597e 940e be23 	CALL SUBOPT_0x5A
005980 940e be35 	CALL SUBOPT_0x5E
005982 019f      	MOVW R18,R30
                 ; 0009 0303                 if(res < 0){        printDebug("<logReport> LOG_openFile(%s) failed\r\n",LOGFILE_DATA);             }
005983 2333      	TST  R19
005984 f42a      	BRPL _0x120095
                +
005985 eee1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2183 ) )
005986 e2f7     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2183 ) )
005987 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2183 ) )
005988 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2183 ) )
                 	__POINTD1FN _0x120000,2183
005989 c01d      	RJMP _0x12011B
                 ; 0009 0304                 else
                 _0x120095:
                 ; 0009 0305                 {
                 ; 0009 0306                     res = LOG_setLastSend(&file,logDataWait.logID + 1);
00598a 940e be23 	CALL SUBOPT_0x5A
00598c 940e beaa 	CALL SUBOPT_0x6F
00598e 940e c56a 	CALL SUBOPT_0x186
                 ; 0009 0307                     if(res < 0){    printDebug("<LOG_readData> LOG_setLastSend() failed\r\n");                      }
005990 f41a      	BRPL _0x120097
005991 940e c572 	CALL SUBOPT_0x187
                 ; 0009 0308                     else{           printDebug("<LOG_readData> LOG_setLastSend(%s,%ld)\r\n",LOGFILE_DATA,logDataWait.logID + 1);    }
005993 c00c      	RJMP _0x120098
                 _0x120097:
                +
005994 e3e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 2263 ) )
005995 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2263 ) )
005996 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2263 ) )
005997 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2263 ) )
                 	__POINTD1FN _0x120000,2263
005998 940e be40 	CALL SUBOPT_0x5F
00599a 940e beaa 	CALL SUBOPT_0x6F
00599c 940e c144 	CALL SUBOPT_0xD5
00599e 940e bc8a 	CALL SUBOPT_0x20
                 _0x120098:
                 ; 0009 0309 
                 ; 0009 030A                     res = LOG_closeFile(&file);
0059a0 940e c578 	CALL SUBOPT_0x188
                 ; 0009 030B                     if(res < 0){    printDebug("<logReport> LOG_closeFile(%s) failed\r\n",LOGFILE_DATA);            }
0059a2 f462      	BRPL _0x120099
                +
0059a3 e5ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 2304 ) )
0059a4 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2304 ) )
0059a5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2304 ) )
0059a6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2304 ) )
                 	__POINTD1FN _0x120000,2304
                 _0x12011B:
0059a7 940e da29 	CALL __PUTPARD1
0059a9 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
0059aa e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
0059ab 940e bd18 	CALL SUBOPT_0x34
0059ad 940e bc2c 	CALL SUBOPT_0x12
                 ; 0009 030C                 }
                 _0x120099:
                 ; 0009 030D 
                 ; 0009 030E                 logDataWait.frameID    = 0;
0059af 940e be9a 	CALL SUBOPT_0x6E
                 ; 0009 030F                 logDataWait.logID      = 0;
                 ; 0009 0310             }
                 ; 0009 0311             removeDataLogQueue(frameID);
                 _0x120092:
0059b1 2fa0      	MOV  R26,R16
0059b2 940e 8350 	CALL _removeDataLogQueue
                 ; 0009 0312             ETH_removeWaitQueue(frameID);
0059b4 2fa0      	MOV  R26,R16
0059b5 940e 68cc 	CALL _ETH_removeWaitQueue
                 ; 0009 0313             break;
0059b7 c212      	RJMP _0x12005E
                 ; 0009 0314         case LOGMANIC  :     // -- Log Manipulation COMMAND
                 _0x120090:
0059b8 36ea      	CPI  R30,LOW(0x6A)
0059b9 e0a0      	LDI  R26,HIGH(0x6A)
0059ba 07fa      	CPC  R31,R26
0059bb f011      	BREQ PC+3
0059bc 940c 5a24 	JMP _0x12009A
                 ; 0009 0315             if( len < (2 + sizeof(struct log_manic_st)) ){
0059be 940e c513 	CALL SUBOPT_0x178
0059c0 9753      	SBIW R26,19
0059c1 f44c      	BRGE _0x12009B
                 ; 0009 0316                 printDebug("<ETH_processPacket> log manipulation (CMD) invalid length (%d)\r\n",len);
                +
0059c2 efe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3229 ) )
0059c3 e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3229 ) )
0059c4 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3229 ) )
0059c5 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3229 ) )
                 	__POINTD1FN _0x120000,3229
0059c6 940e c51a 	CALL SUBOPT_0x179
                 ; 0009 0317                 ETH_sendNack(frameID,INVALID_LENGTH);
0059c8 940e c523 	CALL SUBOPT_0x17A
                 ; 0009 0318                 return;
0059ca c1ff      	RJMP _0x20E007F
                 ; 0009 0319             }
                 ; 0009 031A 
                 ; 0009 031B             payload = (int) malloc (sizeof(struct log_manic_st));
                 _0x12009B:
0059cb e1a1      	LDI  R26,LOW(17)
0059cc 940e c585 	CALL SUBOPT_0x189
                 ; 0009 031C             if(payload == NULL){
0059ce f459      	BRNE _0x12009C
                 ; 0009 031D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_manic_st));
0059cf 940e c587 	CALL SUBOPT_0x18A
                +
0059d1 e1e1     +LDI R30 , LOW ( 0x11 )
0059d2 e0f0     +LDI R31 , HIGH ( 0x11 )
0059d3 e060     +LDI R22 , BYTE3 ( 0x11 )
0059d4 e070     +LDI R23 , BYTE4 ( 0x11 )
                 	__GETD1N 0x11
0059d5 940e c58e 	CALL SUBOPT_0x18B
                 ; 0009 031E                 ETH_sendNack(frameID,NOT_READY);
0059d7 940e c52d 	CALL SUBOPT_0x17C
                 ; 0009 031F                 return;
0059d9 c1f0      	RJMP _0x20E007F
                 ; 0009 0320             }
                 ; 0009 0321 
                 ; 0009 0322             res = logManipulationCmdParser(ptr2frame+2,len-2,(struct log_manic_st *)payload);
                 _0x12009C:
0059da 940e c592 	CALL SUBOPT_0x18C
0059dc 940e 609e 	CALL _logManipulationCmdParser
0059de 019f      	MOVW R18,R30
                 ; 0009 0323             if(res < 0){
0059df 2333      	TST  R19
0059e0 f42a      	BRPL _0x12009D
                 ; 0009 0324                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
0059e1 940e c5d1 	CALL SUBOPT_0x199
                 ; 0009 0325                 free( (void *) payload );
0059e3 940e c541 	CALL SUBOPT_0x17F
                 ; 0009 0326                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0327                 return;
0059e5 c1e4      	RJMP _0x20E007F
                 ; 0009 0328             }
                 ; 0009 0329 
                 ; 0009 032A             printDebug("\r\n--logManipulationCmdParser-- CMD [0x%02X]\r\n",frameID);
                 _0x12009D:
                +
0059e6 e7e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3350 ) )
0059e7 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3350 ) )
0059e8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3350 ) )
0059e9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3350 ) )
                 	__POINTD1FN _0x120000,3350
0059ea 940e c548 	CALL SUBOPT_0x180
                 ; 0009 032B             printDebug("accd            [0x%02X]\r\n",  ((struct log_manic_st *)payload)->accd);
0059ec 940e c594 	CALL SUBOPT_0x18D
                 ; 0009 032C             printDebug("tStart          [%ld]\r\n",     ((struct log_manic_st *)payload)->tStart);
                +
0059ee e9ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3396 ) )
0059ef e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3396 ) )
0059f0 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3396 ) )
0059f1 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3396 ) )
                 	__POINTD1FN _0x120000,3396
0059f2 940e c5d7 	CALL SUBOPT_0x19A
                 ; 0009 032D             printDebug("tStop           [%ld]\r\n",     ((struct log_manic_st *)payload)->tStop);
                +
0059f4 ebe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 3420 ) )
0059f5 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3420 ) )
0059f6 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3420 ) )
0059f7 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3420 ) )
                 	__POINTD1FN _0x120000,3420
0059f8 940e da29 	CALL __PUTPARD1
0059fa 01fa      	MOVW R30,R20
                +
0059fb 85a5     +LDD R26 , Z + 13
0059fc 85b6     +LDD R27 , Z + 13 + 1
0059fd 8587     +LDD R24 , Z + 13 + 2
0059fe 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
0059ff 940e c5e2 	CALL SUBOPT_0x19B
                 ; 0009 032E 
                 ; 0009 032F             res = setLogManipulateSchema(   ((struct log_manic_st *)payload)->accd,
                 ; 0009 0330                                             ((struct log_manic_st *)payload)->tStart,
                 ; 0009 0331                                             ((struct log_manic_st *)payload)->tStop);
005a01 01fa      	MOVW R30,R20
005a02 85a0      	LDD  R26,Z+8
005a03 93aa      	ST   -Y,R26
005a04 940e c5e6 	CALL SUBOPT_0x19C
005a06 940e da2e 	CALL __PUTPARD2
005a08 01fa      	MOVW R30,R20
                +
005a09 85a5     +LDD R26 , Z + 13
005a0a 85b6     +LDD R27 , Z + 13 + 1
005a0b 8587     +LDD R24 , Z + 13 + 2
005a0c 8990     +LDD R25 , Z + 13 + 3
                 	__GETD2Z 13
005a0d 940e 67d0 	CALL _setLogManipulateSchema
005a0f 019f      	MOVW R18,R30
                 ; 0009 0332             if(res < 0){
005a10 2333      	TST  R19
005a11 f452      	BRPL _0x12009E
                 ; 0009 0333                 printDebug("<ETH_processPacket> setLogManipulateSchema() failed\r\n");
                +
005a12 ecee     +LDI R30 , LOW ( 2 * _0x120000 + ( 3444 ) )
005a13 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3444 ) )
005a14 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3444 ) )
005a15 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3444 ) )
                 	__POINTD1FN _0x120000,3444
005a16 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0334                 ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,ERROR);
005a18 940e c565 	CALL SUBOPT_0x185
005a1a e0a1      	LDI  R26,LOW(1)
005a1b daac      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0335             }
                 ; 0009 0336 
                 ; 0009 0337             ETH_sendLogManipulationAck(frameID,((struct log_manic_st *)payload)->accd,SUCCESS);
                 _0x12009E:
005a1c 940e c565 	CALL SUBOPT_0x185
005a1e e0a0      	LDI  R26,LOW(0)
005a1f daa8      	RCALL _ETH_sendLogManipulationAck
                 ; 0009 0338 
                 ; 0009 0339             free( (void *) payload );
005a20 01da      	MOVW R26,R20
005a21 940e a0bd 	CALL _free
                 ; 0009 033A 
                 ; 0009 033B             break;
005a23 c1a6      	RJMP _0x12005E
                 ; 0009 033C         case LOGMANIA  :     // -- Log Manipulation ACKNOWLEDGE
                 _0x12009A:
005a24 36eb      	CPI  R30,LOW(0x6B)
005a25 e0a0      	LDI  R26,HIGH(0x6B)
005a26 07fa      	CPC  R31,R26
005a27 f5b1      	BRNE _0x12009F
                 ; 0009 033D             if( len < (2 + sizeof(struct log_mania_st)) ){
005a28 940e c513 	CALL SUBOPT_0x178
005a2a 971c      	SBIW R26,12
005a2b f43c      	BRGE _0x1200A0
                 ; 0009 033E                 printDebug("<ETH_processPacket> log manipulation (ACK) invalid length (%d)\r\n",len);
                +
005a2c e0e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3498 ) )
005a2d e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3498 ) )
005a2e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3498 ) )
005a2f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3498 ) )
                 	__POINTD1FN _0x120000,3498
005a30 940e c51a 	CALL SUBOPT_0x179
                 ; 0009 033F                 return;
005a32 c197      	RJMP _0x20E007F
                 ; 0009 0340             }
                 ; 0009 0341 
                 ; 0009 0342             payload = (int) malloc (sizeof(struct log_mania_st));
                 _0x1200A0:
005a33 e0aa      	LDI  R26,LOW(10)
005a34 940e c585 	CALL SUBOPT_0x189
                 ; 0009 0343             if(payload == NULL){
005a36 f429      	BRNE _0x1200A1
                 ; 0009 0344                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct log_mania_st));
005a37 940e c587 	CALL SUBOPT_0x18A
005a39 940e c5eb 	CALL SUBOPT_0x19D
                 ; 0009 0345                 return;
005a3b c18e      	RJMP _0x20E007F
                 ; 0009 0346             }
                 ; 0009 0347 
                 ; 0009 0348             res = logManipulationAckParser(ptr2frame+2,(struct log_mania_st *)payload);
                 _0x1200A1:
005a3c 940e c5f0 	CALL SUBOPT_0x19E
005a3e 940e 6126 	CALL _logManipulationAckParser
005a40 019f      	MOVW R18,R30
                 ; 0009 0349             if(res < 0){
005a41 2333      	TST  R19
005a42 f432      	BRPL _0x1200A2
                 ; 0009 034A                 printDebug("<ETH_processPacket> logManipulationCmdParser() failed\r\n");
005a43 940e c5d1 	CALL SUBOPT_0x199
                 ; 0009 034B                 free( (void *) payload );
005a45 01da      	MOVW R26,R20
005a46 940e a0bd 	CALL _free
                 ; 0009 034C                 return;
005a48 c181      	RJMP _0x20E007F
                 ; 0009 034D             }
                 ; 0009 034E 
                 ; 0009 034F             printDebug("\r\n--logManipulationAckParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200A2:
                +
005a49 e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 3563 ) )
005a4a e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3563 ) )
005a4b e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3563 ) )
005a4c e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3563 ) )
                 	__POINTD1FN _0x120000,3563
005a4d 940e c548 	CALL SUBOPT_0x180
                 ; 0009 0350             printDebug("accd            [0x%02X]\r\n",  ((struct log_mania_st *)payload)->accd);
005a4f 940e c594 	CALL SUBOPT_0x18D
                 ; 0009 0351             printDebug("status          [%ld]\r\n",     ((struct log_mania_st *)payload)->status);
                +
005a51 e7e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 3609 ) )
005a52 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3609 ) )
005a53 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3609 ) )
005a54 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3609 ) )
                 	__POINTD1FN _0x120000,3609
005a55 940e c599 	CALL SUBOPT_0x18E
                 ; 0009 0352 
                 ; 0009 0353             free( (void *) payload );
005a57 01da      	MOVW R26,R20
005a58 940e a0bd 	CALL _free
                 ; 0009 0354             ETH_removeWaitQueue(frameID);
005a5a 2fa0      	MOV  R26,R16
005a5b 940e 68cc 	CALL _ETH_removeWaitQueue
                 ; 0009 0355             break;
005a5d c16c      	RJMP _0x12005E
                 ; 0009 0356         case NETMAINC  :     // -- Network Maintenance COMMAND
                 _0x12009F:
005a5e 37ea      	CPI  R30,LOW(0x7A)
005a5f e0a0      	LDI  R26,HIGH(0x7A)
005a60 07fa      	CPC  R31,R26
005a61 f011      	BREQ PC+3
005a62 940c 5aec 	JMP _0x1200A3
                 ; 0009 0357             if( len < (2 + sizeof(struct netw_man_st) - (sizeof(unsigned int) + sizeof(unsigned char *)) + 1 ) ){
005a64 940e c513 	CALL SUBOPT_0x178
005a66 971c      	SBIW R26,12
005a67 f44c      	BRGE _0x1200A4
                 ; 0009 0358                 printDebug("<ETH_processPacket> network maintenance invalid length (%d)\r\n",len);
                +
005a68 e8eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 3633 ) )
005a69 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3633 ) )
005a6a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3633 ) )
005a6b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3633 ) )
                 	__POINTD1FN _0x120000,3633
005a6c 940e c51a 	CALL SUBOPT_0x179
                 ; 0009 0359                 ETH_sendNack(frameID,INVALID_LENGTH);
005a6e 940e c523 	CALL SUBOPT_0x17A
                 ; 0009 035A                 return;
005a70 c159      	RJMP _0x20E007F
                 ; 0009 035B             }
                 ; 0009 035C 
                 ; 0009 035D             payload = (int) malloc (sizeof(struct netw_man_st));
                 _0x1200A4:
005a71 e0ad      	LDI  R26,LOW(13)
005a72 940e c585 	CALL SUBOPT_0x189
                 ; 0009 035E             if(payload == NULL){
005a74 f439      	BRNE _0x1200A5
                 ; 0009 035F                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct netw_man_st));
005a75 940e c587 	CALL SUBOPT_0x18A
005a77 940e c5f6 	CALL SUBOPT_0x19F
                 ; 0009 0360                 ETH_sendNack(frameID,NOT_READY);
005a79 940e c52d 	CALL SUBOPT_0x17C
                 ; 0009 0361                 return;
005a7b c14e      	RJMP _0x20E007F
                 ; 0009 0362             }
                 ; 0009 0363 
                 ; 0009 0364             res = networkMaintenanceParser(ptr2frame+2,len-2,(struct netw_man_st *)payload);
                 _0x1200A5:
005a7c 940e c592 	CALL SUBOPT_0x18C
005a7e 940e 6137 	CALL _networkMaintenanceParser
005a80 019f      	MOVW R18,R30
                 ; 0009 0365             if(res < 0){
005a81 2333      	TST  R19
005a82 f44a      	BRPL _0x1200A6
                 ; 0009 0366                 printDebug("<ETH_processPacket> networkMaintenanceParser() failed\r\n");
                +
005a83 ece9     +LDI R30 , LOW ( 2 * _0x120000 + ( 3695 ) )
005a84 e2fd     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3695 ) )
005a85 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3695 ) )
005a86 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3695 ) )
                 	__POINTD1FN _0x120000,3695
005a87 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0367                 free( (void *) payload );
005a89 940e c541 	CALL SUBOPT_0x17F
                 ; 0009 0368                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 0369                 return;
005a8b c13e      	RJMP _0x20E007F
                 ; 0009 036A             }
                 ; 0009 036B 
                 ; 0009 036C             printDebug("\r\n--networkMaintenanceParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200A6:
                +
005a8c e0e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3751 ) )
005a8d e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3751 ) )
005a8e e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3751 ) )
005a8f e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3751 ) )
                 	__POINTD1FN _0x120000,3751
005a90 940e c548 	CALL SUBOPT_0x180
                 ; 0009 036D             printDebug("cmd             [0x%02X]\r\n",  ((struct netw_man_st *)payload)->cmd);
005a92 940e c5fb 	CALL SUBOPT_0x1A0
                 ; 0009 036E             printDebug("dataLen         [%d]\r\n",      ((struct netw_man_st *)payload)->dataLen);
                +
005a94 e4ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 3824 ) )
005a95 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3824 ) )
005a96 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3824 ) )
005a97 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3824 ) )
                 	__POINTD1FN _0x120000,3824
005a98 940e c553 	CALL SUBOPT_0x182
005a9a 940e c58e 	CALL SUBOPT_0x18B
                 ; 0009 036F             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005a9c 01fa      	MOVW R30,R20
005a9d 940e c600 	CALL SUBOPT_0x1A1
005a9f f4a8      	BRSH _0x1200A7
                 ; 0009 0370                 printDebug("data ---        \r\n");
                +
005aa0 e6e1     +LDI R30 , LOW ( 2 * _0x120000 + ( 3847 ) )
005aa1 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3847 ) )
005aa2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3847 ) )
005aa3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3847 ) )
                 	__POINTD1FN _0x120000,3847
005aa4 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0371                 print_payload(((struct netw_man_st *)payload)->data,((struct netw_man_st *)payload)->dataLen);
005aa6 01fa      	MOVW R30,R20
005aa7 85a3      	LDD  R26,Z+11
005aa8 85b4      	LDD  R27,Z+12
005aa9 93ba      	ST   -Y,R27
005aaa 93aa      	ST   -Y,R26
005aab 85a1      	LDD  R26,Z+9
005aac 85b2      	LDD  R27,Z+10
005aad 940e 9b56 	CALL _print_payload
                 ; 0009 0372                 printDebug("--------\r\n");
                +
005aaf e7e4     +LDI R30 , LOW ( 2 * _0x120000 + ( 3866 ) )
005ab0 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3866 ) )
005ab1 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3866 ) )
005ab2 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3866 ) )
                 	__POINTD1FN _0x120000,3866
005ab3 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0373             }
                 ; 0009 0374 
                 ; 0009 0375             switch(((struct netw_man_st *)payload)->cmd){
                 _0x1200A7:
005ab5 940e c59f 	CALL SUBOPT_0x18F
                 ; 0009 0376                 case NETW_TIME_SYNC :   res = setTimeSyncSchema( ((struct netw_man_st *)payload)->data );
005ab7 f529      	BRNE _0x1200AE
005ab8 01fa      	MOVW R30,R20
005ab9 85a3      	LDD  R26,Z+11
005aba 85b4      	LDD  R27,Z+12
005abb 940e 67e9 	CALL _setTimeSyncSchema
005abd 019f      	MOVW R18,R30
                 ; 0009 0377                                         if(res < 0){
005abe 2333      	TST  R19
005abf f47a      	BRPL _0x1200AC
                 ; 0009 0378                                             printDebug("<ETH_processPacket> setTimeSyncSchema() failed\r\n");
                +
005ac0 e7ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3877 ) )
005ac1 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3877 ) )
005ac2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3877 ) )
005ac3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3877 ) )
                 	__POINTD1FN _0x120000,3877
005ac4 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0379                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005ac6 940e c605 	CALL SUBOPT_0x1A2
                 ; 0009 037A                                             free_networkMaintenance((struct netw_man_st *)payload);
005ac8 01da      	MOVW R26,R20
005ac9 940e 620a 	CALL _free_networkMaintenance
                 ; 0009 037B                                             free( (void *) payload );
005acb 01da      	MOVW R26,R20
005acc 940e a0bd 	CALL _free
                 ; 0009 037C                                             return;
005ace c0fb      	RJMP _0x20E007F
                 ; 0009 037D                                         }
                 ; 0009 037E 
                 ; 0009 037F                                         res = ETH_sendNetworkMaintenanceAck(frameID,((struct netw_man_st *)payload)->cmd,SUCCESS);
                 _0x1200AC:
005acf 940e c565 	CALL SUBOPT_0x185
005ad1 e0a0      	LDI  R26,LOW(0)
005ad2 da11      	RCALL _ETH_sendNetworkMaintenanceAck
005ad3 019f      	MOVW R18,R30
                 ; 0009 0380 
                 ; 0009 0381                                         if(res < 0){
005ad4 2333      	TST  R19
005ad5 f432      	BRPL _0x1200AD
                 ; 0009 0382                                             printDebug("WARN : <ETH_processPacket> NETW_TIME_SYNC : ETH_sendNetworkMaintenanceAck() failed\r\n");
                +
005ad6 ebe0     +LDI R30 , LOW ( 2 * _0x120000 + ( 3926 ) )
005ad7 e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3926 ) )
005ad8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3926 ) )
005ad9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3926 ) )
                 	__POINTD1FN _0x120000,3926
005ada 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0383                                         }
                 ; 0009 0384 
                 ; 0009 0385                                         break;
                 _0x1200AD:
005adc c004      	RJMP _0x1200AA
                 ; 0009 0386                 default :               // -- Shouldn't reach here -- //
                 _0x1200AE:
                 ; 0009 0387                                         printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 0388                                                         ((struct netw_man_st *)payload)->cmd );
005add 940e c5cc 	CALL SUBOPT_0x198
                 ; 0009 0389                                         ETH_sendNack(frameID,INVALID_PARAMETER);
005adf 940e c605 	CALL SUBOPT_0x1A2
                 ; 0009 038A                                         break;
                 ; 0009 038B             }
                 _0x1200AA:
                 ; 0009 038C 
                 ; 0009 038D             if( ((struct netw_man_st *)payload)->dataLen > 0 ){
005ae1 01fa      	MOVW R30,R20
005ae2 940e c600 	CALL SUBOPT_0x1A1
005ae4 f418      	BRSH _0x1200AF
                 ; 0009 038E                 free_networkMaintenance((struct netw_man_st *)payload);
005ae5 01da      	MOVW R26,R20
005ae6 940e 620a 	CALL _free_networkMaintenance
                 ; 0009 038F             }
                 ; 0009 0390 
                 ; 0009 0391             free( (void *) payload );
                 _0x1200AF:
005ae8 01da      	MOVW R26,R20
005ae9 940e a0bd 	CALL _free
                 ; 0009 0392 
                 ; 0009 0393             break;
005aeb c0de      	RJMP _0x12005E
                 ; 0009 0394         case RMDCTRLC  :     // -- Remote Device Control COMMAND
                 _0x1200A3:
005aec 38ea      	CPI  R30,LOW(0x8A)
005aed e0a0      	LDI  R26,HIGH(0x8A)
005aee 07fa      	CPC  R31,R26
005aef f011      	BREQ PC+3
005af0 940c 5b55 	JMP _0x1200B0
                 ; 0009 0395             if( len < (2 + sizeof(struct rem_dev_ctrl_st)) ){
005af2 940e c513 	CALL SUBOPT_0x178
005af4 971f      	SBIW R26,15
005af5 f44c      	BRGE _0x1200B1
                 ; 0009 0396                 printDebug("<ETH_processPacket> remote device control invalid length (%d)\r\n",len);
                +
005af6 e0e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4011 ) )
005af7 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4011 ) )
005af8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4011 ) )
005af9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4011 ) )
                 	__POINTD1FN _0x120000,4011
005afa 940e c51a 	CALL SUBOPT_0x179
                 ; 0009 0397                 ETH_sendNack(frameID,INVALID_LENGTH);
005afc 940e c523 	CALL SUBOPT_0x17A
                 ; 0009 0398                 return;
005afe c0cb      	RJMP _0x20E007F
                 ; 0009 0399             }
                 ; 0009 039A 
                 ; 0009 039B             payload = (int) malloc (sizeof(struct rem_dev_ctrl_st));
                 _0x1200B1:
005aff e0ad      	LDI  R26,LOW(13)
005b00 940e c585 	CALL SUBOPT_0x189
                 ; 0009 039C             if(payload == NULL){
005b02 f439      	BRNE _0x1200B2
                 ; 0009 039D                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct rem_dev_ctrl_st));
005b03 940e c587 	CALL SUBOPT_0x18A
005b05 940e c5f6 	CALL SUBOPT_0x19F
                 ; 0009 039E                 ETH_sendNack(frameID,NOT_READY);
005b07 940e c52d 	CALL SUBOPT_0x17C
                 ; 0009 039F                 return;
005b09 c0c0      	RJMP _0x20E007F
                 ; 0009 03A0             }
                 ; 0009 03A1 
                 ; 0009 03A2             res = remoteDeviceControlParser(ptr2frame+2,(struct rem_dev_ctrl_st *)payload);
                 _0x1200B2:
005b0a 940e c5f0 	CALL SUBOPT_0x19E
005b0c 940e 6190 	CALL _remoteDeviceControlParser
005b0e 019f      	MOVW R18,R30
                 ; 0009 03A3             if(res < 0){
005b0f 2333      	TST  R19
005b10 f44a      	BRPL _0x1200B3
                 ; 0009 03A4                 printDebug("<ETH_processPacket> remoteDeviceControlParser() failed\r\n");
                +
005b11 e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4075 ) )
005b12 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4075 ) )
005b13 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4075 ) )
005b14 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4075 ) )
                 	__POINTD1FN _0x120000,4075
005b15 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 03A5                 free( (void *) payload );
005b17 940e c541 	CALL SUBOPT_0x17F
                 ; 0009 03A6                 ETH_sendNack(frameID,INVALID_PARAMETER);
                 ; 0009 03A7                 return;
005b19 c0b0      	RJMP _0x20E007F
                 ; 0009 03A8             }
                 ; 0009 03A9 
                 ; 0009 03AA             printDebug("\r\n--remoteDeviceControlParser-- CMD [0x%02X]\r\n",frameID);
                 _0x1200B3:
                +
005b1a e7ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4132 ) )
005b1b e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4132 ) )
005b1c e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4132 ) )
005b1d e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4132 ) )
                 	__POINTD1FN _0x120000,4132
005b1e 940e c548 	CALL SUBOPT_0x180
                 ; 0009 03AB             printDebug("cmd             [0x%02X]\r\n",  ((struct rem_dev_ctrl_st *)payload)->cmd);
005b20 940e c5fb 	CALL SUBOPT_0x1A0
                 ; 0009 03AC             printDebug("value           [%ld]\r\n",      ((struct rem_dev_ctrl_st *)payload)->value);
                +
005b22 eaed     +LDI R30 , LOW ( 2 * _0x120000 + ( 4179 ) )
005b23 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4179 ) )
005b24 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4179 ) )
005b25 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4179 ) )
                 	__POINTD1FN _0x120000,4179
005b26 940e c5d7 	CALL SUBOPT_0x19A
                 ; 0009 03AD 
                 ; 0009 03AE             switch(((struct rem_dev_ctrl_st *)payload)->cmd){
005b28 940e c59f 	CALL SUBOPT_0x18F
                 ; 0009 03AF                 case DEVCTRL_MUTE_ALARM :   res = setMuteAlarm( ((struct rem_dev_ctrl_st *)payload)->value );
005b2a f511      	BRNE _0x1200BA
005b2b 01fa      	MOVW R30,R20
005b2c 940e c5e6 	CALL SUBOPT_0x19C
005b2e 940e 681b 	CALL _setMuteAlarm
005b30 019f      	MOVW R18,R30
                 ; 0009 03B0                                             if(res < 0){
005b31 2333      	TST  R19
005b32 f462      	BRPL _0x1200B8
                 ; 0009 03B1                                                 printDebug("<ETH_processPacket> setTimeSyncSchema(%ld) failed\r\n",((struct rem_dev_ctrl_st *)payload)->value);
                +
005b33 ece5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4203 ) )
005b34 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4203 ) )
005b35 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4203 ) )
005b36 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4203 ) )
                 	__POINTD1FN _0x120000,4203
005b37 940e c5d7 	CALL SUBOPT_0x19A
                 ; 0009 03B2                                                 ETH_sendNack(frameID,INVALID_PARAMETER);
005b39 940e c605 	CALL SUBOPT_0x1A2
                 ; 0009 03B3                                                 free( (void *) payload );
005b3b 01da      	MOVW R26,R20
005b3c 940e a0bd 	CALL _free
                 ; 0009 03B4                                                 return;
005b3e c08b      	RJMP _0x20E007F
                 ; 0009 03B5                                             }
                 ; 0009 03B6 
                 ; 0009 03B7                                             res = ETH_remoteDeviceControlAck(frameID,((struct rem_dev_ctrl_st *)payload)->cmd,SUCCESS);
                 _0x1200B8:
005b3f 940e c565 	CALL SUBOPT_0x185
005b41 e0a0      	LDI  R26,LOW(0)
005b42 d9bd      	RCALL _ETH_remoteDeviceControlAck
005b43 019f      	MOVW R18,R30
                 ; 0009 03B8 
                 ; 0009 03B9                                             if(res < 0){
005b44 2333      	TST  R19
005b45 f432      	BRPL _0x1200B9
                 ; 0009 03BA                                                 printDebug("WARN : <ETH_processPacket> DEVCTRL_MUTE_ALARM : ETH_remoteDeviceControlAck() failed\r\n");
                +
005b46 efe9     +LDI R30 , LOW ( 2 * _0x120000 + ( 4255 ) )
005b47 e2ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4255 ) )
005b48 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4255 ) )
005b49 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4255 ) )
                 	__POINTD1FN _0x120000,4255
005b4a 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 03BB                                             }
                 ; 0009 03BC                                             break;
                 _0x1200B9:
005b4c c004      	RJMP _0x1200B6
                 ; 0009 03BD                 default :                   // -- Shouldn't reach here -- //
                 _0x1200BA:
                 ; 0009 03BE                                             printDebug("<ETH_processPacket> unknown type for config->accd [0x%02X]\r\n",
                 ; 0009 03BF                                                             ((struct netw_man_st *)payload)->cmd );
005b4d 940e c5cc 	CALL SUBOPT_0x198
                 ; 0009 03C0                                             ETH_sendNack(frameID,INVALID_PARAMETER);
005b4f 940e c605 	CALL SUBOPT_0x1A2
                 ; 0009 03C1                                             break;
                 ; 0009 03C2             }
                 _0x1200B6:
                 ; 0009 03C3 
                 ; 0009 03C4             free( (void *) payload );
005b51 01da      	MOVW R26,R20
005b52 940e a0bd 	CALL _free
                 ; 0009 03C5             break;
005b54 c075      	RJMP _0x12005E
                 ; 0009 03C6         case CLRLISTA  :     // -- Clear List ACKNOWLEDGE
                 _0x1200B0:
005b55 39eb      	CPI  R30,LOW(0x9B)
005b56 e0a0      	LDI  R26,HIGH(0x9B)
005b57 07fa      	CPC  R31,R26
005b58 f011      	BREQ PC+3
005b59 940c 5bb6 	JMP _0x1200BB
                 ; 0009 03C7             if( len < (2 + sizeof(struct clr_lst_st)) ){
005b5b 940e c513 	CALL SUBOPT_0x178
005b5d 971c      	SBIW R26,12
005b5e f43c      	BRGE _0x1200BC
                 ; 0009 03C8                 printDebug("<ETH_processPacket> clear list ACK invalid length (%d)\r\n",len);
                +
005b5f e4ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 4341 ) )
005b60 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4341 ) )
005b61 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4341 ) )
005b62 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4341 ) )
                 	__POINTD1FN _0x120000,4341
005b63 940e c51a 	CALL SUBOPT_0x179
                 ; 0009 03C9                 return;
005b65 c064      	RJMP _0x20E007F
                 ; 0009 03CA             }
                 ; 0009 03CB 
                 ; 0009 03CC             payload = (int) malloc (sizeof(struct clr_lst_st));
                 _0x1200BC:
005b66 e0aa      	LDI  R26,LOW(10)
005b67 940e c585 	CALL SUBOPT_0x189
                 ; 0009 03CD             if(payload == NULL){
005b69 f429      	BRNE _0x1200BD
                 ; 0009 03CE                 printDebug("<ETH_processPacket> payload malloc(%d) failed\r\n",sizeof(struct clr_lst_st));
005b6a 940e c587 	CALL SUBOPT_0x18A
005b6c 940e c5eb 	CALL SUBOPT_0x19D
                 ; 0009 03CF                 return;
005b6e c05b      	RJMP _0x20E007F
                 ; 0009 03D0             }
                 ; 0009 03D1 
                 ; 0009 03D2             res = clearListParser(ptr2frame+2,(struct clr_lst_st *)payload);
                 _0x1200BD:
005b6f 940e c5f0 	CALL SUBOPT_0x19E
005b71 d667      	RCALL _clearListParser
005b72 019f      	MOVW R18,R30
                 ; 0009 03D3             if(res < 0){
005b73 2333      	TST  R19
005b74 f452      	BRPL _0x1200BE
                 ; 0009 03D4                 printDebug("<ETH_processPacket> clearListParser() failed\r\n");
                +
005b75 e8e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 4398 ) )
005b76 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4398 ) )
005b77 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4398 ) )
005b78 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4398 ) )
                 	__POINTD1FN _0x120000,4398
005b79 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 03D5                 free( (void *) payload );
005b7b 01da      	MOVW R26,R20
005b7c 940e a0bd 	CALL _free
                 ; 0009 03D6                 return;
005b7e c04b      	RJMP _0x20E007F
                 ; 0009 03D7             }
                 ; 0009 03D8 
                 ; 0009 03D9             printDebug("\r\n--clearListParser-- ACK [0x%02X]\r\n",frameID);
                 _0x1200BE:
                +
005b7f ebe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4445 ) )
005b80 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4445 ) )
005b81 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4445 ) )
005b82 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4445 ) )
                 	__POINTD1FN _0x120000,4445
005b83 940e c548 	CALL SUBOPT_0x180
                 ; 0009 03DA             printDebug("cmd             [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->cmd);
005b85 940e c5fb 	CALL SUBOPT_0x1A0
                 ; 0009 03DB             printDebug("status          [0x%02X]\r\n",  ((struct clr_lst_st *)payload)->status);
                +
005b87 edec     +LDI R30 , LOW ( 2 * _0x120000 + ( 4482 ) )
005b88 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4482 ) )
005b89 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4482 ) )
005b8a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4482 ) )
                 	__POINTD1FN _0x120000,4482
005b8b 940e c599 	CALL SUBOPT_0x18E
                 ; 0009 03DC 
                 ; 0009 03DD             switch(((struct clr_lst_st *)payload)->cmd){
005b8d 01fa      	MOVW R30,R20
005b8e 940e c609 	CALL SUBOPT_0x1A3
                 ; 0009 03DE                 case CLR_DUPLIST :  if(((struct clr_lst_st *)payload)->status == 0x00)
005b90 30e1      	CPI  R30,LOW(0x1)
005b91 e0a0      	LDI  R26,HIGH(0x1)
005b92 07fa      	CPC  R31,R26
005b93 f4c1      	BRNE _0x1200C5
005b94 01fa      	MOVW R30,R20
005b95 85e1      	LDD  R30,Z+9
005b96 30e0      	CPI  R30,0
005b97 f469      	BRNE _0x1200C3
                 ; 0009 03DF                                     {
                 ; 0009 03E0                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) SUCCESS!!\r\n");
                +
005b98 efe7     +LDI R30 , LOW ( 2 * _0x120000 + ( 4509 ) )
005b99 e3f0     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4509 ) )
005b9a e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4509 ) )
005b9b e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4509 ) )
                 	__POINTD1FN _0x120000,4509
005b9c 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 03E1                                         duplicateListClear = 1;
005b9e e0e1      	LDI  R30,LOW(1)
005b9f 93e0 1425 	STS  _duplicateListClear,R30
                 ; 0009 03E2                                         free( (void *) payload );
005ba1 01da      	MOVW R26,R20
005ba2 940e a0bd 	CALL _free
                 ; 0009 03E3                                         return;
005ba4 c025      	RJMP _0x20E007F
                 ; 0009 03E4                                     }
                 ; 0009 03E5                                     else
                 _0x1200C3:
                 ; 0009 03E6                                     {
                 ; 0009 03E7                                         printDebug("<ETH_processPacket> clear duplicate request (ACK) FAILED[0x%02X]!!\r\n",
                 ; 0009 03E8                                                     ((struct clr_lst_st *)payload)->status);
                +
005ba5 e3e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4571 ) )
005ba6 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4571 ) )
005ba7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4571 ) )
005ba8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4571 ) )
                 	__POINTD1FN _0x120000,4571
005ba9 940e c599 	CALL SUBOPT_0x18E
                 ; 0009 03E9                                     }
                 ; 0009 03EA                                     break;
005bab c006      	RJMP _0x1200C1
                 ; 0009 03EB                 default         :   // -- Shouldn't reach here -- //
                 _0x1200C5:
                 ; 0009 03EC                                     printDebug("<ETH_processPacket> unknown type for clr_lst_st->cmd [0x%02X]\r\n",
                 ; 0009 03ED                                                     ((struct clr_lst_st *)payload)->cmd );
                +
005bac e7ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4640 ) )
005bad e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4640 ) )
005bae e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4640 ) )
005baf e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4640 ) )
                 	__POINTD1FN _0x120000,4640
005bb0 940e c54d 	CALL SUBOPT_0x181
                 ; 0009 03EE                                     break;
                 ; 0009 03EF             }
                 _0x1200C1:
                 ; 0009 03F0 
                 ; 0009 03F1             free( (void *) payload );
005bb2 01da      	MOVW R26,R20
005bb3 940e a0bd 	CALL _free
                 ; 0009 03F2             break;
005bb5 c014      	RJMP _0x12005E
                 ; 0009 03F3         case FMWUPLDC  :     // -- Firmware Upload COMMAND (Reserved)
                 _0x1200BB:
005bb6 3fea      	CPI  R30,LOW(0xFA)
005bb7 e0a0      	LDI  R26,HIGH(0xFA)
005bb8 07fa      	CPC  R31,R26
005bb9 f439      	BRNE _0x1200C7
                 ; 0009 03F4             printDebug("<ETH_processPacket> firmware upload hasn't supported yet\r\n");
                +
005bba ebea     +LDI R30 , LOW ( 2 * _0x120000 + ( 4704 ) )
005bbb e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4704 ) )
005bbc e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4704 ) )
005bbd e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4704 ) )
                 	__POINTD1FN _0x120000,4704
005bbe 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 03F5             break;
005bc0 c009      	RJMP _0x12005E
                 ; 0009 03F6         default:
                 _0x1200C7:
                 ; 0009 03F7             printDebug("\r\n<ETH_processPacket> invalid frame type ( %02X )!!\r\n",frameType);
                +
005bc1 efe5     +LDI R30 , LOW ( 2 * _0x120000 + ( 4763 ) )
005bc2 e3f1     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4763 ) )
005bc3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4763 ) )
005bc4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4763 ) )
                 	__POINTD1FN _0x120000,4763
005bc5 940e da29 	CALL __PUTPARD1
005bc7 2fe1      	MOV  R30,R17
005bc8 940e bccc 	CALL SUBOPT_0x29
                 ; 0009 03F8             break;
                 ; 0009 03F9     }
                 _0x12005E:
                 ; 0009 03FA 
                 ; 0009 03FB     return;
                 _0x20E007F:
005bca 940e daa0 	CALL __LOADLOCR6
005bcc 96e0      	ADIW R28,48
005bcd 5fde      	SUBI R29,-2
005bce 9508      	RET
                 ; 0009 03FC }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************* Low level Communication Management *************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void ETH_receive()
                 ; 0009 0404 {
                 _ETH_receive:
                 ; 0009 0405     unsigned char   *ptr;
                 ; 0009 0406     int             size=0;
                 ; 0009 0407 
                 ; 0009 0408     // -- for packet validation -- //
                 ; 0009 0409     int     offset=0;
                 ; 0009 040A     int     len = 0x0000;
                 ; 0009 040B     int     total=0;
                 ; 0009 040C 
                 ; 0009 040D     // --------------- Process Xbee Data ---------------- // UART0
                 ; 0009 040E     do{
005bcf 940e c60c 	CALL SUBOPT_0x1A4
005bd1 940e da99 	CALL __SAVELOCR6
                 ;	*ptr -> R16,R17
                 ;	size -> R18,R19
                 ;	offset -> R20,R21
                 ;	len -> Y+8
                 ;	total -> Y+6
005bd3 940e bba6 	CALL SUBOPT_0x0
                 _0x1200C9:
                 ; 0009 040F         ptr = (char *) malloc (RX_BUFFER_SIZE0);
005bd5 efa4      	LDI  R26,LOW(500)
005bd6 e0b1      	LDI  R27,HIGH(500)
005bd7 940e a0a2 	CALL _malloc
005bd9 018f      	MOVW R16,R30
                 ; 0009 0410         if(ptr == NULL){
005bda 2e00      	MOV  R0,R16
005bdb 2a01      	OR   R0,R17
005bdc f431      	BRNE _0x1200CB
                 ; 0009 0411             printDebug("<ETH_receive> malloc..FAILED..\r\n");
                +
005bdd e2eb     +LDI R30 , LOW ( 2 * _0x120000 + ( 4817 ) )
005bde e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4817 ) )
005bdf e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4817 ) )
005be0 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4817 ) )
                 	__POINTD1FN _0x120000,4817
005be1 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0412         }
                 ; 0009 0413     }while(ptr == NULL);
                 _0x1200CB:
005be3 2e00      	MOV  R0,R16
005be4 2a01      	OR   R0,R17
005be5 f379      	BREQ _0x1200C9
                 ; 0009 0414     size = read_uart0(ptr,RX_BUFFER_SIZE0-1,10);
005be6 931a      	ST   -Y,R17
005be7 930a      	ST   -Y,R16
005be8 efe3      	LDI  R30,LOW(499)
005be9 e0f1      	LDI  R31,HIGH(499)
005bea 93fa      	ST   -Y,R31
005beb 93ea      	ST   -Y,R30
005bec e0aa      	LDI  R26,LOW(10)
005bed e0b0      	LDI  R27,0
005bee 940e 3f20 	CALL _read_uart0
005bf0 019f      	MOVW R18,R30
                 ; 0009 0415 
                 ; 0009 0416     if(size <= 0){
005bf1 2400      	CLR  R0
005bf2 1602      	CP   R0,R18
005bf3 0603      	CPC  R0,R19
005bf4 f00c      	BRLT _0x1200CC
                 ; 0009 0417         free( ptr );
005bf5 c066      	RJMP _0x20E007E
                 ; 0009 0418         return;
                 ; 0009 0419     }
                 ; 0009 041A 
                 ; 0009 041B //    printDebug("\r\n\r\n+++++++ Raw buffer +++++++\r\n");
                 ; 0009 041C //    print_payload(ptr,size);
                 ; 0009 041D 
                 ; 0009 041E     do{
                 _0x1200CC:
                 _0x1200CE:
                 ; 0009 041F         //printDebug("<ETH_receive> ptr");
                 ; 0009 0420         offset += strcspn(&ptr[offset],"\x7e");                                   // seach for header
005bf6 01fa      	MOVW R30,R20
005bf7 940e c613 	CALL SUBOPT_0x1A5
                +
005bf9 e6ac     +LDI R26 , LOW ( _0x1200D0 + ( 0 ) )
005bfa e0bd     +LDI R27 , HIGH ( _0x1200D0 + ( 0 ) )
                 	__POINTW2MN _0x1200D0,0
005bfb 940e a155 	CALL _strcspn
                +
005bfd 0f4e     +ADD R20 , R30
005bfe 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 0421         if(offset == size){
                +
005bff 1724     +CP R18 , R20
005c00 0735     +CPC R19 , R21
                 	__CPWRR 18,19,20,21
005c01 f409      	BRNE _0x1200D1
                 ; 0009 0422 //            printDebug("<ETH_receive> invalid packet 0x7E not found\r\n");    // not found Start Delimiter 0x7E
                 ; 0009 0423             break;
005c02 c059      	RJMP _0x1200CF
                 ; 0009 0424         }
                 ; 0009 0425         len = (ptr[offset+1] & 0xffff) << 8;                                    // check packet length (MSB)
                 _0x1200D1:
005c03 01fa      	MOVW R30,R20
005c04 9631      	ADIW R30,1
005c05 0fe0      	ADD  R30,R16
005c06 1ff1      	ADC  R31,R17
005c07 81e0      	LD   R30,Z
005c08 e0f0      	LDI  R31,0
005c09 2ffe      	MOV  R31,R30
005c0a e0e0      	LDI  R30,0
005c0b 87e8      	STD  Y+8,R30
005c0c 87f9      	STD  Y+8+1,R31
                 ; 0009 0426         len |= ptr[offset+2];                                                   // check packet length (LSB)
005c0d 01fa      	MOVW R30,R20
005c0e 940e c337 	CALL SUBOPT_0x12C
005c10 85a8      	LDD  R26,Y+8
005c11 85b9      	LDD  R27,Y+8+1
005c12 e0f0      	LDI  R31,0
005c13 2bea      	OR   R30,R26
005c14 2bfb      	OR   R31,R27
005c15 940e c5b4 	CALL SUBOPT_0x193
                 ; 0009 0427 //        printDebug("len = [0x%04X](%d)\r\n",len,len);
                 ; 0009 0428 
                 ; 0009 0429         total += len;                                                           // update total analyse
005c17 940e c618 	CALL SUBOPT_0x1A6
005c19 83ee      	STD  Y+6,R30
005c1a 83ff      	STD  Y+6+1,R31
                 ; 0009 042A         if (total > size){                                                      //check length validation
005c1b 81ae      	LDD  R26,Y+6
005c1c 81bf      	LDD  R27,Y+6+1
005c1d 172a      	CP   R18,R26
005c1e 073b      	CPC  R19,R27
005c1f f45c      	BRGE _0x1200D2
                 ; 0009 042B             offset++;
                +
005c20 5f4f     +SUBI R20 , LOW ( - 1 )
005c21 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 042C             total = offset;                                                     // roll back total analyse
                +
005c22 834e     +STD Y + 6 , R20
005c23 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 042D             printDebug("\r\ninvalid length!!\r\n");
                +
005c24 e4ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 4852 ) )
005c25 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4852 ) )
005c26 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4852 ) )
005c27 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4852 ) )
                 	__POINTD1FN _0x120000,4852
005c28 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 042E             continue;
005c2a c02b      	RJMP _0x1200CD
                 ; 0009 042F         }
                 ; 0009 0430 
                 ; 0009 0431 //        printDebug("\r\n****** packet checksum ******\r\n");
                 ; 0009 0432 //        print_payload(&ptr[offset+3],len);
                 ; 0009 0433         if(ETH_checksum(&ptr[offset+3],len) != ptr[offset+3+len]){              // checksum error detection
                 _0x1200D2:
005c2b 01fa      	MOVW R30,R20
005c2c 9633      	ADIW R30,3
005c2d 940e c613 	CALL SUBOPT_0x1A5
005c2f 85aa      	LDD  R26,Y+10
005c30 85bb      	LDD  R27,Y+10+1
005c31 d0c9      	RCALL _ETH_checksum
005c32 010f      	MOVW R0,R30
005c33 01fa      	MOVW R30,R20
005c34 9633      	ADIW R30,3
005c35 85a8      	LDD  R26,Y+8
005c36 85b9      	LDD  R27,Y+8+1
005c37 0fea      	ADD  R30,R26
005c38 1ffb      	ADC  R31,R27
005c39 0fe0      	ADD  R30,R16
005c3a 1ff1      	ADC  R31,R17
005c3b 81e0      	LD   R30,Z
005c3c 940e c61d 	CALL SUBOPT_0x1A7
005c3e f059      	BREQ _0x1200D3
                 ; 0009 0434             printDebug("<ETH_receive> checksum error\r\n");
                +
005c3f e6e3     +LDI R30 , LOW ( 2 * _0x120000 + ( 4873 ) )
005c40 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4873 ) )
005c41 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4873 ) )
005c42 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4873 ) )
                 	__POINTD1FN _0x120000,4873
005c43 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0435             offset++;
                +
005c45 5f4f     +SUBI R20 , LOW ( - 1 )
005c46 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0009 0436             total = offset;                                                     // roll back total analyse
                +
005c47 834e     +STD Y + 6 , R20
005c48 835f     +STD Y + 6 + 1 , R21
                 	__PUTWSR 20,21,6
                 ; 0009 0437         }
                 ; 0009 0438         else{                                                                   // got a valid packet
005c49 c00c      	RJMP _0x1200D4
                 _0x1200D3:
                 ; 0009 0439 //            printDebug("\r\n****** checksum correct ******\r\n");
                 ; 0009 043A //            print_payload(&ptr[offset+3],len);
                 ; 0009 043B //            printDebug("\r\n******************\r\n");
                 ; 0009 043C 
                 ; 0009 043D             ETH_processPacket(&ptr[offset+3],len);                              // analyse API-specific Structure
005c4a 01fa      	MOVW R30,R20
005c4b 9633      	ADIW R30,3
005c4c 940e c613 	CALL SUBOPT_0x1A5
005c4e 85aa      	LDD  R26,Y+10
005c4f 85bb      	LDD  R27,Y+10+1
005c50 da7b      	RCALL _ETH_processPacket
                 ; 0009 043E             offset += 3+len;
005c51 85e8      	LDD  R30,Y+8
005c52 85f9      	LDD  R31,Y+8+1
005c53 9633      	ADIW R30,3
                +
005c54 0f4e     +ADD R20 , R30
005c55 1f5f     +ADC R21 , R31
                 	__ADDWRR 20,21,30,31
                 ; 0009 043F         }
                 _0x1200D4:
                 ; 0009 0440 	}while( total < size);						                                // loop if still unread byte
                 _0x1200CD:
005c56 81ae      	LDD  R26,Y+6
005c57 81bf      	LDD  R27,Y+6+1
005c58 17a2      	CP   R26,R18
005c59 07b3      	CPC  R27,R19
005c5a f40c      	BRGE _0x1200CF
005c5b cf9a      	RJMP _0x1200CE
                 _0x1200CF:
                 ; 0009 0441 
                 ; 0009 0442 
                 ; 0009 0443 
                 ; 0009 0444     free( ptr );
                 _0x20E007E:
005c5c 01d8      	MOVW R26,R16
005c5d 940e a0bd 	CALL _free
                 ; 0009 0445 }
005c5f 940e daa0 	CALL __LOADLOCR6
005c61 962a      	ADIW R28,10
005c62 9508      	RET
                 
                 	.DSEG
                 _0x1200D0:
000d6c           	.BYTE 0x2
                 ;/*============================================================*/
                 ;int ETH_send(char *frameData, int frameLen, char frameID, int timeout)
                 ; 0009 0448 {
                 
                 	.CSEG
                 _ETH_send:
                 ; 0009 0449     int     res;
                 ; 0009 044A     char    *sendPacket;
                 ; 0009 044B     int     packetLen   = 0;
                 ; 0009 044C 
                 ; 0009 044D     frameLen++;     // -- + frameID (1 Byte) -- //
005c63 940e c622 	CALL SUBOPT_0x1A8
                 ;	*frameData -> Y+11
                 ;	frameLen -> Y+9
                 ;	frameID -> Y+8
                 ;	timeout -> Y+6
                 ;	res -> R16,R17
                 ;	*sendPacket -> R18,R19
                 ;	packetLen -> R20,R21
                +
005c65 e040     +LDI R20 , LOW ( 0 )
005c66 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
005c67 85e9      	LDD  R30,Y+9
005c68 85fa      	LDD  R31,Y+9+1
005c69 9631      	ADIW R30,1
005c6a 87e9      	STD  Y+9,R30
005c6b 87fa      	STD  Y+9+1,R31
                 ; 0009 044E 
                 ; 0009 044F     packetLen   = frameLen + 2 + 1 + 1;       // length(2 bytes) + frameID(1 byte) + header(1 byte) + sum(1 byte)
005c6c 9634      	ADIW R30,4
005c6d 01af      	MOVW R20,R30
                 ; 0009 0450 
                 ; 0009 0451     if(packetLen > MAX_MTU){
                +
005c6e 3f45     +CPI R20 , LOW ( 501 )
005c6f e0e1     +LDI R30 , HIGH ( 501 )
005c70 075e     +CPC R21 , R30
                 	__CPWRN 20,21,501
005c71 f04c      	BRLT _0x1200D5
                 ; 0009 0452         printDebug("<ETH_send> WARNING : Packet is too long(%d bytes)\r\n",packetLen);
                +
005c72 e8e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 4904 ) )
005c73 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4904 ) )
005c74 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4904 ) )
005c75 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4904 ) )
                 	__POINTD1FN _0x120000,4904
005c76 940e bdac 	CALL SUBOPT_0x49
                 ; 0009 0453         return -1;
005c78 efef      	LDI  R30,LOW(65535)
005c79 efff      	LDI  R31,HIGH(65535)
005c7a c07c      	RJMP _0x20E007D
                 ; 0009 0454     }
                 ; 0009 0455 
                 ; 0009 0456     sendPacket  = (char *) malloc ( packetLen );
                 _0x1200D5:
005c7b 01da      	MOVW R26,R20
005c7c 940e a0a2 	CALL _malloc
005c7e 019f      	MOVW R18,R30
                 ; 0009 0457     if(sendPacket == NULL){
005c7f 2e02      	MOV  R0,R18
005c80 2a03      	OR   R0,R19
005c81 f449      	BRNE _0x1200D6
                 ; 0009 0458         printDebug("<ETH_send> WARNING : ETH_send malloc failed (%d)\r\n",packetLen);
                +
005c82 ebe6     +LDI R30 , LOW ( 2 * _0x120000 + ( 4956 ) )
005c83 e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 4956 ) )
005c84 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 4956 ) )
005c85 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 4956 ) )
                 	__POINTD1FN _0x120000,4956
005c86 940e bdac 	CALL SUBOPT_0x49
                 ; 0009 0459         return -1;
005c88 efef      	LDI  R30,LOW(65535)
005c89 efff      	LDI  R31,HIGH(65535)
005c8a c06c      	RJMP _0x20E007D
                 ; 0009 045A     }
                 ; 0009 045B 
                 ; 0009 045C     memset(sendPacket,'\0',packetLen);
                 _0x1200D6:
005c8b 933a      	ST   -Y,R19
005c8c 932a      	ST   -Y,R18
005c8d e0e0      	LDI  R30,LOW(0)
005c8e 93ea      	ST   -Y,R30
005c8f 01da      	MOVW R26,R20
005c90 940e a124 	CALL _memset
                 ; 0009 045D 
                 ; 0009 045E     sendPacket[0] = 0x7E;
005c92 01d9      	MOVW R26,R18
005c93 e7ee      	LDI  R30,LOW(126)
005c94 93ec      	ST   X,R30
                 ; 0009 045F     sendPacket[1] = (frameLen >> 8) & 0xFF;
005c95 85e9      	LDD  R30,Y+9
005c96 85fa      	LDD  R31,Y+9+1
005c97 940e d904 	CALL __ASRW8
                +
005c99 01d9     +MOVW R26 , R18
005c9a 9611     +ADIW R26 , 1
005c9b 93ec     +ST X , R30
                 	__PUTB1RNS 18,1
                 ; 0009 0460     sendPacket[2] = frameLen & 0xFF;
005c9c 85e9      	LDD  R30,Y+9
                +
005c9d 01d9     +MOVW R26 , R18
005c9e 9612     +ADIW R26 , 2
005c9f 93ec     +ST X , R30
                 	__PUTB1RNS 18,2
                 ; 0009 0461 
                 ; 0009 0462     if(frameID == 0x00){
005ca0 85e8      	LDD  R30,Y+8
005ca1 30e0      	CPI  R30,0
005ca2 f419      	BRNE _0x1200D7
                 ; 0009 0463         frameID         = ETH_generateId();
005ca3 940e 6943 	CALL _ETH_generateId
005ca5 87e8      	STD  Y+8,R30
                 ; 0009 0464         //printDebug("<ETH_send> ETH_generateId() return 0x%02X\r\n",frameID);
                 ; 0009 0465     }
                 ; 0009 0466 
                 ; 0009 0467     sendPacket[3] = frameID;
                 _0x1200D7:
005ca6 85e8      	LDD  R30,Y+8
                +
005ca7 01d9     +MOVW R26 , R18
005ca8 9613     +ADIW R26 , 3
005ca9 93ec     +ST X , R30
                 	__PUTB1RNS 18,3
                 ; 0009 0468 
                 ; 0009 0469     memcpy(&sendPacket[4],frameData,frameLen);
005caa 01f9      	MOVW R30,R18
005cab 9634      	ADIW R30,4
005cac 93fa      	ST   -Y,R31
005cad 93ea      	ST   -Y,R30
005cae 85ed      	LDD  R30,Y+13
005caf 85fe      	LDD  R31,Y+13+1
005cb0 93fa      	ST   -Y,R31
005cb1 93ea      	ST   -Y,R30
005cb2 85ad      	LDD  R26,Y+13
005cb3 85be      	LDD  R27,Y+13+1
005cb4 940e a0df 	CALL _memcpy
                 ; 0009 046A     sendPacket[packetLen-1] = ETH_checksum(&sendPacket[3],frameLen);
005cb6 01fa      	MOVW R30,R20
005cb7 9731      	SBIW R30,1
005cb8 0fe2      	ADD  R30,R18
005cb9 1ff3      	ADC  R31,R19
005cba 93ff      	PUSH R31
005cbb 93ef      	PUSH R30
005cbc 01f9      	MOVW R30,R18
005cbd 9633      	ADIW R30,3
005cbe 93fa      	ST   -Y,R31
005cbf 93ea      	ST   -Y,R30
005cc0 85ab      	LDD  R26,Y+11
005cc1 85bc      	LDD  R27,Y+11+1
005cc2 d038      	RCALL _ETH_checksum
005cc3 91af      	POP  R26
005cc4 91bf      	POP  R27
005cc5 93ec      	ST   X,R30
                 ; 0009 046B 
                 ; 0009 046C     //printDebug("<ETH_send> checksum = 0x%02X\r\n",sendPacket[packetLen-1]);
                 ; 0009 046D 
                 ; 0009 046E     if((timeout > 0) && (frameID != 0xFF)){
005cc6 81ae      	LDD  R26,Y+6
005cc7 81bf      	LDD  R27,Y+6+1
005cc8 940e da81 	CALL __CPW02
005cca f41c      	BRGE _0x1200D9
005ccb 85a8      	LDD  R26,Y+8
005ccc 3faf      	CPI  R26,LOW(0xFF)
005ccd f409      	BRNE _0x1200DA
                 _0x1200D9:
005cce c01a      	RJMP _0x1200D8
                 _0x1200DA:
                 ; 0009 046F         res = ETH_addWaitQueue(frameID, &sendPacket[0], packetLen, timeout);
005ccf 85e8      	LDD  R30,Y+8
005cd0 93ea      	ST   -Y,R30
005cd1 933a      	ST   -Y,R19
005cd2 932a      	ST   -Y,R18
005cd3 935a      	ST   -Y,R21
005cd4 934a      	ST   -Y,R20
005cd5 85ab      	LDD  R26,Y+11
005cd6 85bc      	LDD  R27,Y+11+1
005cd7 940e 6863 	CALL _ETH_addWaitQueue
005cd9 018f      	MOVW R16,R30
                 ; 0009 0470         if(res < 0){
005cda 2311      	TST  R17
005cdb f46a      	BRPL _0x1200DB
                 ; 0009 0471             printDebug("<ETH_send> ETH_addWaitQueue() failed [id:0x%02X]\r\n",frameID);
                +
005cdc eee9     +LDI R30 , LOW ( 2 * _0x120000 + ( 5007 ) )
005cdd e3f2     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5007 ) )
005cde e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5007 ) )
005cdf e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5007 ) )
                 	__POINTD1FN _0x120000,5007
005ce0 940e da29 	CALL __PUTPARD1
005ce2 85ec      	LDD  R30,Y+12
005ce3 940e bccc 	CALL SUBOPT_0x29
                 ; 0009 0472             free(sendPacket);
005ce5 01d9      	MOVW R26,R18
005ce6 940e bdb4 	CALL SUBOPT_0x4A
                 ; 0009 0473             return -1;
005ce8 c00e      	RJMP _0x20E007D
                 ; 0009 0474         }
                 ; 0009 0475     }
                 _0x1200DB:
                 ; 0009 0476 
                 ; 0009 0477 
                 ; 0009 0478 //    if((commLostTimer == 0xFFFFFFFF) || (commLostTimer == 0)){
                 ; 0009 0479 //        TIMER_setTimer(&commLostTimer,30);
                 ; 0009 047A //    }
                 ; 0009 047B 
                 ; 0009 047C //    printDebug("\r\n--Transmitting [0x%02X]\r\n",frameID);
                 ; 0009 047D //    print_payload(sendPacket,packetLen);
                 ; 0009 047E     write_uart0(sendPacket,packetLen);
                 _0x1200D8:
005ce9 933a      	ST   -Y,R19
005cea 932a      	ST   -Y,R18
005ceb 01da      	MOVW R26,R20
005cec 940e 3f71 	CALL _write_uart0
                 ; 0009 047F     free(sendPacket);
005cee 01d9      	MOVW R26,R18
005cef 940e a0bd 	CALL _free
                 ; 0009 0480 
                 ; 0009 0481     //printDebug("-- Completed --\r\n");
                 ; 0009 0482     delay_ms(7);
005cf1 940e bbf9 	CALL SUBOPT_0xA
005cf3 940e d6dd 	CALL _delay_ms
                 ; 0009 0483 
                 ; 0009 0484     return 0;
005cf5 e0e0      	LDI  R30,LOW(0)
005cf6 e0f0      	LDI  R31,HIGH(0)
                 _0x20E007D:
005cf7 940e daa0 	CALL __LOADLOCR6
005cf9 962d      	ADIW R28,13
005cfa 9508      	RET
                 ; 0009 0485 }
                 ;/*============================================================*/
                 ;int ETH_checksum(char buf[],int len)
                 ; 0009 0488 {
                 _ETH_checksum:
                 ; 0009 0489     int i;
                 ; 0009 048A     char sum = 0;
                 ; 0009 048B 
                 ; 0009 048C     //printDebug("<checksum> \r\n");
                 ; 0009 048D     for (i=0;i<len;i++){
005cfb 940e bf1b 	CALL SUBOPT_0x7F
                 ;	buf -> Y+6
                 ;	len -> Y+4
                 ;	i -> R16,R17
                 ;	sum -> R19
005cfd e030      	LDI  R19,0
                +
005cfe e000     +LDI R16 , LOW ( 0 )
005cff e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200DD:
005d00 81ec      	LDD  R30,Y+4
005d01 81fd      	LDD  R31,Y+4+1
005d02 170e      	CP   R16,R30
005d03 071f      	CPC  R17,R31
005d04 f43c      	BRGE _0x1200DE
                 ; 0009 048E         sum += buf[i];
005d05 01f8      	MOVW R30,R16
005d06 940e c627 	CALL SUBOPT_0x1A9
005d08 0f3e      	ADD  R19,R30
                 ; 0009 048F         //printDebug("<0x%02X> -> [0x%02X]\r\n",buf[i],sum);
                 ; 0009 0490     }
                +
005d09 5f0f     +SUBI R16 , LOW ( - 1 )
005d0a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005d0b cff4      	RJMP _0x1200DD
                 _0x1200DE:
                 ; 0009 0491     return (0xff - (sum & 0xff));
005d0c 2fe3      	MOV  R30,R19
005d0d 940e bfed 	CALL SUBOPT_0x9D
005d0f efaf      	LDI  R26,LOW(255)
005d10 e0b0      	LDI  R27,HIGH(255)
005d11 940e da41 	CALL __SWAPW12
005d13 1bea      	SUB  R30,R26
005d14 0bfb      	SBC  R31,R27
005d15 940e daa2 	CALL __LOADLOCR4
005d17 9628      	ADIW R28,8
005d18 9508      	RET
                 ; 0009 0492 
                 ; 0009 0493 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/***************** Ethernet Hardare Management ****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;char ETH_current_mode;
                 ;char ETH_switchMode(char mode)
                 ; 0009 049C {
                 _ETH_switchMode:
                 ; 0009 049D     if(mode == MODE_CONF){
005d19 93aa      	ST   -Y,R26
                 ;	mode -> Y+0
005d1a 81e8      	LD   R30,Y
005d1b 30e0      	CPI  R30,0
005d1c f451      	BRNE _0x1200DF
                 ; 0009 049E         printDebug("<ETH_switchMode> switch to Config mode\r\n");
                +
005d1d e1ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 5058 ) )
005d1e e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5058 ) )
005d1f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5058 ) )
005d20 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5058 ) )
                 	__POINTD1FN _0x120000,5058
005d21 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 049F         ETH_CONF;
005d23 91e0 0102 	LDS  R30,258
005d25 68e0      	ORI  R30,0x80
005d26 c009      	RJMP _0x12011C
                 ; 0009 04A0     }
                 ; 0009 04A1     else{
                 _0x1200DF:
                 ; 0009 04A2         printDebug("<ETH_switchMode> switch to Normal mode\r\n");
                +
005d27 e4e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 5099 ) )
005d28 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5099 ) )
005d29 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5099 ) )
005d2a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5099 ) )
                 	__POINTD1FN _0x120000,5099
005d2b 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 04A3         ETH_NORM;
005d2d 91e0 0102 	LDS  R30,258
005d2f 77ef      	ANDI R30,0x7F
                 _0x12011C:
005d30 93e0 0102 	STS  258,R30
                 ; 0009 04A4     }
                 ; 0009 04A5 
                 ; 0009 04A6     delay_ms(5);
005d32 940e bfc9 	CALL SUBOPT_0x98
                 ; 0009 04A7 
                 ; 0009 04A8     ETH_current_mode = mode;
005d34 81e8      	LD   R30,Y
005d35 93e0 1420 	STS  _ETH_current_mode,R30
                 ; 0009 04A9 
                 ; 0009 04AA     delay_ms(5);
005d37 940e bfc9 	CALL SUBOPT_0x98
                 ; 0009 04AB     ETH_OFF;
005d39 98a4      	CBI  0x14,4
                 ; 0009 04AC     delay_ms(1500);
005d3a edac      	LDI  R26,LOW(1500)
005d3b e0b5      	LDI  R27,HIGH(1500)
005d3c 940e d6dd 	CALL _delay_ms
                 ; 0009 04AD     ETH_ON;
005d3e 9aa4      	SBI  0x14,4
                 ; 0009 04AE     #asm("wdr")
005d3f 95a8      	wdr
                 ; 0009 04AF     delay_ms(2000);
005d40 eda0      	LDI  R26,LOW(2000)
005d41 e0b7      	LDI  R27,HIGH(2000)
005d42 940e d6dd 	CALL _delay_ms
                 ; 0009 04B0 
                 ; 0009 04B1     return ETH_MODE;
005d44 91e0 0102 	LDS  R30,258
005d46 78e0      	ANDI R30,LOW(0x80)
005d47 9621      	ADIW R28,1
005d48 9508      	RET
                 ; 0009 04B2 }
                 ;/*============================================================*/
                 ;int ETH_getConfig(unsigned char *ptr, unsigned int *buflen)
                 ; 0009 04B5 {
                 _ETH_getConfig:
                 ; 0009 04B6     TIMER   timeout;
                 ; 0009 04B7     char    getInfoCmd[] = ">R\r";
                 ; 0009 04B8     int     i=0;
                 ; 0009 04B9 
                 ; 0009 04BA     ETH_switchMode((unsigned char) MODE_CONF);
005d49 93ba      	ST   -Y,R27
005d4a 93aa      	ST   -Y,R26
005d4b 9728      	SBIW R28,8
005d4c e3ee      	LDI  R30,LOW(62)
005d4d 83e8      	ST   Y,R30
005d4e e5e2      	LDI  R30,LOW(82)
005d4f 83e9      	STD  Y+1,R30
005d50 e0ed      	LDI  R30,LOW(13)
005d51 83ea      	STD  Y+2,R30
005d52 e0e0      	LDI  R30,LOW(0)
005d53 83eb      	STD  Y+3,R30
005d54 940e bfe8 	CALL SUBOPT_0x9C
                 ;	*ptr -> Y+12
                 ;	*buflen -> Y+10
                 ;	timeout -> Y+6
                 ;	getInfoCmd -> Y+2
                 ;	i -> R16,R17
005d56 e0a0      	LDI  R26,LOW(0)
005d57 dfc1      	RCALL _ETH_switchMode
                 ; 0009 04BB     /*
                 ; 0009 04BC     if(mode != MODE_CONF){
                 ; 0009 04BD         printDebug("<ETH_getConfig> ETH_switchMode(MODE_CONF) failed\r\n");
                 ; 0009 04BE         return -1;
                 ; 0009 04BF     }
                 ; 0009 04C0     */
                 ; 0009 04C1 
                 ; 0009 04C2     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005d58 e000     +LDI R16 , LOW ( 0 )
005d59 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E2:
                +
005d5a 3405     +CPI R16 , LOW ( 325 )
005d5b e0e1     +LDI R30 , HIGH ( 325 )
005d5c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005d5d f42c      	BRGE _0x1200E3
                 ; 0009 04C3         configRd[i] = 0x00;
005d5e 940e c62d 	CALL SUBOPT_0x1AA
                 ; 0009 04C4     }
                +
005d60 5f0f     +SUBI R16 , LOW ( - 1 )
005d61 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005d62 cff7      	RJMP _0x1200E2
                 _0x1200E3:
                 ; 0009 04C5     configLen       = 0;
005d63 940e bf15 	CALL SUBOPT_0x7E
                 ; 0009 04C6     config_start    = 0;
005d65 940e c630 	CALL SUBOPT_0x1AB
                 ; 0009 04C7     config_ready    = 0;
                 ; 0009 04C8     config_end      = 0;
                 ; 0009 04C9     config_response = 0;
                 ; 0009 04CA 
                 ; 0009 04CB     printDebug("<ETH_getConfig> Write to uart 0 :");
                +
005d67 e6ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5140 ) )
005d68 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5140 ) )
005d69 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5140 ) )
005d6a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5140 ) )
                 	__POINTD1FN _0x120000,5140
005d6b 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 04CC     for(i=0;i<strlen(getInfoCmd);i++){
                +
005d6d e000     +LDI R16 , LOW ( 0 )
005d6e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E5:
005d6f 940e c63a 	CALL SUBOPT_0x1AC
005d71 f440      	BRSH _0x1200E6
                 ; 0009 04CD         putchar3(getInfoCmd[i]);
005d72 940e c31e 	CALL SUBOPT_0x127
005d74 91ac      	LD   R26,X
005d75 940e 3fe3 	CALL _putchar3
                 ; 0009 04CE     }
                +
005d77 5f0f     +SUBI R16 , LOW ( - 1 )
005d78 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005d79 cff5      	RJMP _0x1200E5
                 _0x1200E6:
                 ; 0009 04CF     printDebug("\r\n");
005d7a 940e c641 	CALL SUBOPT_0x1AD
                 ; 0009 04D0 
                 ; 0009 04D1     for(i=0;i<strlen(getInfoCmd);i++){
                +
005d7c e000     +LDI R16 , LOW ( 0 )
005d7d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200E8:
005d7e 940e c63a 	CALL SUBOPT_0x1AC
005d80 f440      	BRSH _0x1200E9
                 ; 0009 04D2         putchar0(getInfoCmd[i]);
005d81 940e c31e 	CALL SUBOPT_0x127
005d83 91ac      	LD   R26,X
005d84 940e 3f17 	CALL _putchar0
                 ; 0009 04D3     }
                +
005d86 5f0f     +SUBI R16 , LOW ( - 1 )
005d87 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005d88 cff5      	RJMP _0x1200E8
                 _0x1200E9:
                 ; 0009 04D4 
                 ; 0009 04D5     TIMER_setTimer(&timeout, 7);
005d89 940e be01 	CALL SUBOPT_0x56
005d8b 940e c647 	CALL SUBOPT_0x1AE
                 ; 0009 04D6 
                 ; 0009 04D7     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200EA:
005d8d 91e0 10f1 	LDS  R30,_config_ready
005d8f 30e0      	CPI  R30,0
005d90 f431      	BRNE _0x1200ED
005d91 940e be1e 	CALL SUBOPT_0x59
005d93 940e 405d 	CALL _TIMER_checkTimerExceed
005d95 9730      	SBIW R30,0
005d96 f009      	BREQ _0x1200EE
                 _0x1200ED:
005d97 c004      	RJMP _0x1200EC
                 _0x1200EE:
                 ; 0009 04D8        delay_ms(50);
005d98 940e bef2 	CALL SUBOPT_0x7A
                 ; 0009 04D9        #asm("wdr")
005d9a 95a8      	wdr
                 ; 0009 04DA     }
005d9b cff1      	RJMP _0x1200EA
                 _0x1200EC:
                 ; 0009 04DB 
                 ; 0009 04DC     memcpy(ptr,&configRd[0],configLen);
005d9c 940e c64d 	CALL SUBOPT_0x1AF
005d9e 940e c652 	CALL SUBOPT_0x1B0
                 ; 0009 04DD 
                 ; 0009 04DE     *buflen    = configLen;
005da0 91e0 10ee 	LDS  R30,_configLen
005da2 91f0 10ef 	LDS  R31,_configLen+1
005da4 85aa      	LDD  R26,Y+10
005da5 85bb      	LDD  R27,Y+10+1
005da6 93ed      	ST   X+,R30
005da7 93fc      	ST   X,R31
                 ; 0009 04DF 
                 ; 0009 04E0     ETH_switchMode(MODE_NORM);
005da8 e8a0      	LDI  R26,LOW(128)
005da9 df6f      	RCALL _ETH_switchMode
                 ; 0009 04E1 
                 ; 0009 04E2     /*
                 ; 0009 04E3     if(mode != MODE_NORM){
                 ; 0009 04E4         printDebug("<ETH_getConfig> ETH_switchMode(MODE_NORM) failed\r\n");
                 ; 0009 04E5         return -1;
                 ; 0009 04E6     }
                 ; 0009 04E7     */
                 ; 0009 04E8 
                 ; 0009 04E9     if(config_response == 'S'){
005daa 91a0 10f3 	LDS  R26,_config_response
005dac 35a3      	CPI  R26,LOW(0x53)
005dad f419      	BRNE _0x1200EF
                 ; 0009 04EA         return 0;
005dae e0e0      	LDI  R30,LOW(0)
005daf e0f0      	LDI  R31,HIGH(0)
005db0 c002      	RJMP _0x20E007C
                 ; 0009 04EB     }
                 ; 0009 04EC     else{
                 _0x1200EF:
                 ; 0009 04ED         return -1;
005db1 efef      	LDI  R30,LOW(65535)
005db2 efff      	LDI  R31,HIGH(65535)
                 ; 0009 04EE     }
                 ; 0009 04EF }
                 _0x20E007C:
005db3 8119      	LDD  R17,Y+1
005db4 8108      	LDD  R16,Y+0
005db5 962e      	ADIW R28,14
005db6 9508      	RET
                 ;/*============================================================*/
                 ;int ETH_setConfig(char *ip, char *mask, char *gw, char *server)
                 ; 0009 04F2 {
                 _ETH_setConfig:
                 ; 0009 04F3     TIMER   timeout;
                 ; 0009 04F4     char    getInfoCmd[] = ">R\r";
                 ; 0009 04F5     char    setInfoCmd[] = ">W";
                 ; 0009 04F6     int     i=0;
                 ; 0009 04F7     char    setStr[30];
                 ; 0009 04F8     int     readLen=0;
                 ; 0009 04F9     char    *ptr;
                 ; 0009 04FA 
                 ; 0009 04FB     ptr = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
005db7 93ba      	ST   -Y,R27
005db8 93aa      	ST   -Y,R26
005db9 97a9      	SBIW R28,41
005dba e3ee      	LDI  R30,LOW(62)
005dbb 8fee      	STD  Y+30,R30
005dbc e5e7      	LDI  R30,LOW(87)
005dbd 8fef      	STD  Y+31,R30
005dbe e0e0      	LDI  R30,LOW(0)
005dbf a3e8      	STD  Y+32,R30
005dc0 e3ee      	LDI  R30,LOW(62)
005dc1 a3e9      	STD  Y+33,R30
005dc2 e5e2      	LDI  R30,LOW(82)
005dc3 a3ea      	STD  Y+34,R30
005dc4 e0ed      	LDI  R30,LOW(13)
005dc5 a3eb      	STD  Y+35,R30
005dc6 e0e0      	LDI  R30,LOW(0)
005dc7 a3ec      	STD  Y+36,R30
005dc8 940e bd9f 	CALL SUBOPT_0x46
                 ;	*ip -> Y+53
                 ;	*mask -> Y+51
                 ;	*gw -> Y+49
                 ;	*server -> Y+47
                 ;	timeout -> Y+43
                 ;	getInfoCmd -> Y+39
                 ;	setInfoCmd -> Y+36
                 ;	i -> R16,R17
                 ;	setStr -> Y+6
                 ;	readLen -> R18,R19
                 ;	*ptr -> R20,R21
                +
005dca e020     +LDI R18 , LOW ( 0 )
005dcb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
005dcc e4a5      	LDI  R26,LOW(325)
005dcd e0b1      	LDI  R27,HIGH(325)
005dce 940e c527 	CALL SUBOPT_0x17B
                 ; 0009 04FC     if(ptr == NULL){
005dd0 f449      	BRNE _0x1200F1
                 ; 0009 04FD         printDebug("<ETH_setConfig> malloc(CONF_READ_BUFFER) failed\r\n");
                +
005dd1 e9e0     +LDI R30 , LOW ( 2 * _0x120000 + ( 5174 ) )
005dd2 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5174 ) )
005dd3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5174 ) )
005dd4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5174 ) )
                 	__POINTD1FN _0x120000,5174
005dd5 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 04FE         return -1;
005dd7 efef      	LDI  R30,LOW(65535)
005dd8 efff      	LDI  R31,HIGH(65535)
005dd9 c1c7      	RJMP _0x20E007B
                 ; 0009 04FF     }
                 ; 0009 0500 
                 ; 0009 0501     ETH_switchMode((unsigned char) MODE_CONF);
                 _0x1200F1:
005dda e0a0      	LDI  R26,LOW(0)
005ddb df3d      	RCALL _ETH_switchMode
                 ; 0009 0502 
                 ; 0009 0503     // ------------------------- Read Old Configuration --------------------------- //
                 ; 0009 0504     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005ddc e000     +LDI R16 , LOW ( 0 )
005ddd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F3:
                +
005dde 3405     +CPI R16 , LOW ( 325 )
005ddf e0e1     +LDI R30 , HIGH ( 325 )
005de0 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005de1 f42c      	BRGE _0x1200F4
                 ; 0009 0505         configRd[i] = 0x00;
005de2 940e c62d 	CALL SUBOPT_0x1AA
                 ; 0009 0506     }
                +
005de4 5f0f     +SUBI R16 , LOW ( - 1 )
005de5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005de6 cff7      	RJMP _0x1200F3
                 _0x1200F4:
                 ; 0009 0507     configLen       = 0;
005de7 940e bf15 	CALL SUBOPT_0x7E
                 ; 0009 0508     config_start    = 0;
005de9 940e c630 	CALL SUBOPT_0x1AB
                 ; 0009 0509     config_ready    = 0;
                 ; 0009 050A     config_end      = 0;
                 ; 0009 050B     config_response = 0;
                 ; 0009 050C 
                 ; 0009 050D     printDebug("<ETH_setConfig> Write to uart 0 :");
                +
005deb ece2     +LDI R30 , LOW ( 2 * _0x120000 + ( 5224 ) )
005dec e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5224 ) )
005ded e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5224 ) )
005dee e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5224 ) )
                 	__POINTD1FN _0x120000,5224
005def 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 050E     for(i=0;i<strlen(getInfoCmd);i++){
                +
005df1 e000     +LDI R16 , LOW ( 0 )
005df2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F6:
005df3 940e c659 	CALL SUBOPT_0x1B1
005df5 f450      	BRSH _0x1200F7
                 ; 0009 050F         putchar3(getInfoCmd[i]);
005df6 01de      	MOVW R26,R28
005df7 9697      	ADIW R26,39
005df8 0fa0      	ADD  R26,R16
005df9 1fb1      	ADC  R27,R17
005dfa 91ac      	LD   R26,X
005dfb 940e 3fe3 	CALL _putchar3
                 ; 0009 0510     }
                +
005dfd 5f0f     +SUBI R16 , LOW ( - 1 )
005dfe 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005dff cff3      	RJMP _0x1200F6
                 _0x1200F7:
                 ; 0009 0511     printDebug("\r\n");
005e00 940e c641 	CALL SUBOPT_0x1AD
                 ; 0009 0512 
                 ; 0009 0513     for(i=0;i<strlen(getInfoCmd);i++){
                +
005e02 e000     +LDI R16 , LOW ( 0 )
005e03 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1200F9:
005e04 940e c659 	CALL SUBOPT_0x1B1
005e06 f450      	BRSH _0x1200FA
                 ; 0009 0514         putchar0(getInfoCmd[i]);
005e07 01de      	MOVW R26,R28
005e08 9697      	ADIW R26,39
005e09 0fa0      	ADD  R26,R16
005e0a 1fb1      	ADC  R27,R17
005e0b 91ac      	LD   R26,X
005e0c 940e 3f17 	CALL _putchar0
                 ; 0009 0515     }
                +
005e0e 5f0f     +SUBI R16 , LOW ( - 1 )
005e0f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005e10 cff3      	RJMP _0x1200F9
                 _0x1200FA:
                 ; 0009 0516 
                 ; 0009 0517     TIMER_setTimer(&timeout, 7);
005e11 01fe      	MOVW R30,R28
005e12 96bb      	ADIW R30,43
005e13 93fa      	ST   -Y,R31
005e14 93ea      	ST   -Y,R30
005e15 940e c647 	CALL SUBOPT_0x1AE
                 ; 0009 0518 
                 ; 0009 0519     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x1200FB:
005e17 91e0 10f1 	LDS  R30,_config_ready
005e19 30e0      	CPI  R30,0
005e1a f419      	BRNE _0x1200FE
005e1b 940e c660 	CALL SUBOPT_0x1B2
005e1d f009      	BREQ _0x1200FF
                 _0x1200FE:
005e1e c004      	RJMP _0x1200FD
                 _0x1200FF:
                 ; 0009 051A        delay_ms(50);
005e1f 940e bef2 	CALL SUBOPT_0x7A
                 ; 0009 051B        #asm("wdr")
005e21 95a8      	wdr
                 ; 0009 051C     }
005e22 cff4      	RJMP _0x1200FB
                 _0x1200FD:
                 ; 0009 051D 
                 ; 0009 051E     memcpy(ptr,&configRd[0],configLen);
005e23 935a      	ST   -Y,R21
005e24 934a      	ST   -Y,R20
005e25 940e c652 	CALL SUBOPT_0x1B0
                 ; 0009 051F     readLen = configLen;
                +
005e27 9120 10ee+LDS R18 , 0 + ( _configLen )
005e29 9130 10ef+LDS R19 , 0 + ( _configLen ) + 1
                 	__GETWRMN 18,19,0,_configLen
                 ; 0009 0520 
                 ; 0009 0521     if(config_response != 'S'){
005e2b 91a0 10f3 	LDS  R26,_config_response
005e2d 35a3      	CPI  R26,LOW(0x53)
005e2e f051      	BREQ _0x120100
                 ; 0009 0522         printDebug("<ETH_setConfig> read config from ETH module failed\r\n");
                +
005e2f eee4     +LDI R30 , LOW ( 2 * _0x120000 + ( 5258 ) )
005e30 e3f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5258 ) )
005e31 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5258 ) )
005e32 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5258 ) )
                 	__POINTD1FN _0x120000,5258
005e33 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0523         free( ptr );
005e35 01da      	MOVW R26,R20
005e36 940e bdb4 	CALL SUBOPT_0x4A
                 ; 0009 0524         return -1;
005e38 c168      	RJMP _0x20E007B
                 ; 0009 0525     }
                 ; 0009 0526 
                 ; 0009 0527     // ------------------------- Update Configuration --------------------------- //
                 ; 0009 0528     sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 _0x120100:
                 ; 0009 0529                 (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ; 0009 052A                 (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ; 0009 052B                 (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ; 0009 052C                 (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ; 0009 052D                 (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ; 0009 052E                 (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ; 0009 052F                 (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ; 0009 0530                 (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ; 0009 0531                 (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ; 0009 0532                 (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ; 0009 0533                 (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ; 0009 0534                 (gw[9]    *100) + (gw[10]    *10) + gw[11]);
005e39 940e be01 	CALL SUBOPT_0x56
                +
005e3b e1e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 5311 ) )
005e3c e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5311 ) )
005e3d e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5311 ) )
005e3e e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5311 ) )
                 	__POINTD1FN _0x120000,5311
005e3f 940e da29 	CALL __PUTPARD1
005e41 adab      	LDD  R26,Y+59
005e42 adbc      	LDD  R27,Y+59+1
005e43 940e c668 	CALL SUBOPT_0x1B3
005e45 adeb      	LDD  R30,Y+59
005e46 adfc      	LDD  R31,Y+59+1
005e47 940e c66d 	CALL SUBOPT_0x1B4
005e49 adeb      	LDD  R30,Y+59
005e4a adfc      	LDD  R31,Y+59+1
005e4b 940e c675 	CALL SUBOPT_0x1B5
005e4d 940e c67e 	CALL SUBOPT_0x1B6
005e4f 940e c685 	CALL SUBOPT_0x1B7
005e51 940e c67e 	CALL SUBOPT_0x1B6
005e53 940e c68a 	CALL SUBOPT_0x1B8
005e55 940e c67e 	CALL SUBOPT_0x1B6
005e57 940e c692 	CALL SUBOPT_0x1B9
005e59 940e c69b 	CALL SUBOPT_0x1BA
005e5b 940e c6a2 	CALL SUBOPT_0x1BB
005e5d 940e c69b 	CALL SUBOPT_0x1BA
005e5f 940e c6a7 	CALL SUBOPT_0x1BC
005e61 940e c69b 	CALL SUBOPT_0x1BA
005e63 940e c609 	CALL SUBOPT_0x1A3
005e65 940e c6af 	CALL SUBOPT_0x1BD
005e67 940e c6b6 	CALL SUBOPT_0x1BE
005e69 940e c6bd 	CALL SUBOPT_0x1BF
005e6b 940e c6b6 	CALL SUBOPT_0x1BE
005e6d 940e c6c2 	CALL SUBOPT_0x1C0
005e6f 940e c6b6 	CALL SUBOPT_0x1BE
005e71 940e c6ca 	CALL SUBOPT_0x1C1
                +
005e73 01de     +MOVW R26 , R28
005e74 5ba7     +SUBI R26 , LOW ( - 73 )
005e75 4fbf     +SBCI R27 , HIGH ( - 73 )
005e76 900d     +LD R0 , X +
005e77 91bc     +LD R27 , X
005e78 2da0     +MOV R26 , R0
                 	__GETW2SX 73
005e79 940e c668 	CALL SUBOPT_0x1B3
005e7b 940e c6cd 	CALL SUBOPT_0x1C2
005e7d 940e c66d 	CALL SUBOPT_0x1B4
005e7f 940e c6cd 	CALL SUBOPT_0x1C2
005e81 940e c675 	CALL SUBOPT_0x1B5
005e83 940e c6d4 	CALL SUBOPT_0x1C3
005e85 940e c685 	CALL SUBOPT_0x1B7
005e87 940e c6d4 	CALL SUBOPT_0x1C3
005e89 940e c68a 	CALL SUBOPT_0x1B8
005e8b 940e c6d4 	CALL SUBOPT_0x1C3
005e8d 940e c692 	CALL SUBOPT_0x1B9
005e8f 940e c6db 	CALL SUBOPT_0x1C4
005e91 940e c6a2 	CALL SUBOPT_0x1BB
005e93 940e c6db 	CALL SUBOPT_0x1C4
005e95 940e c6a7 	CALL SUBOPT_0x1BC
005e97 940e c6db 	CALL SUBOPT_0x1C4
005e99 940e c609 	CALL SUBOPT_0x1A3
005e9b 940e c6af 	CALL SUBOPT_0x1BD
005e9d 940e bcb4 	CALL SUBOPT_0x26
005e9f 940e c6bd 	CALL SUBOPT_0x1BF
005ea1 940e bcb4 	CALL SUBOPT_0x26
005ea3 940e c6c2 	CALL SUBOPT_0x1C0
005ea5 940e bcb4 	CALL SUBOPT_0x26
005ea7 940e c6ca 	CALL SUBOPT_0x1C1
                +
005ea9 01de     +MOVW R26 , R28
005eaa 5aa9     +SUBI R26 , LOW ( - 87 )
005eab 4fbf     +SBCI R27 , HIGH ( - 87 )
005eac 900d     +LD R0 , X +
005ead 91bc     +LD R27 , X
005eae 2da0     +MOV R26 , R0
                 	__GETW2SX 87
005eaf 940e c668 	CALL SUBOPT_0x1B3
005eb1 940e c6e2 	CALL SUBOPT_0x1C5
005eb3 940e c66d 	CALL SUBOPT_0x1B4
005eb5 940e c6e2 	CALL SUBOPT_0x1C5
005eb7 940e c675 	CALL SUBOPT_0x1B5
005eb9 940e c6e9 	CALL SUBOPT_0x1C6
005ebb 940e c685 	CALL SUBOPT_0x1B7
005ebd 940e c6e9 	CALL SUBOPT_0x1C6
005ebf 940e c68a 	CALL SUBOPT_0x1B8
005ec1 940e c6e9 	CALL SUBOPT_0x1C6
005ec3 940e c692 	CALL SUBOPT_0x1B9
005ec5 940e c6f0 	CALL SUBOPT_0x1C7
005ec7 940e c6a2 	CALL SUBOPT_0x1BB
005ec9 940e c6f0 	CALL SUBOPT_0x1C7
005ecb 940e c6a7 	CALL SUBOPT_0x1BC
005ecd 940e c6f0 	CALL SUBOPT_0x1C7
005ecf 940e c609 	CALL SUBOPT_0x1A3
005ed1 940e c6af 	CALL SUBOPT_0x1BD
005ed3 940e c6f7 	CALL SUBOPT_0x1C8
005ed5 940e c6bd 	CALL SUBOPT_0x1BF
005ed7 940e c6f7 	CALL SUBOPT_0x1C8
005ed9 940e c6c2 	CALL SUBOPT_0x1C0
005edb 940e c6f7 	CALL SUBOPT_0x1C8
005edd 940e c6ca 	CALL SUBOPT_0x1C1
005edf e380      	LDI  R24,48
005ee0 940e bace 	CALL _sprintf
005ee2 96e6      	ADIW R28,54
                 ; 0009 0535 
                 ; 0009 0536     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
005ee3 940e c6fe 	CALL SUBOPT_0x1C9
005ee5 940e bc2c 	CALL SUBOPT_0x12
                 ; 0009 0537 
                 ; 0009 0538     memcpy((ptr+14),&setStr[0],24);
005ee7 01fa      	MOVW R30,R20
005ee8 963e      	ADIW R30,14
005ee9 940e c708 	CALL SUBOPT_0x1CA
005eeb e1a8      	LDI  R26,LOW(24)
005eec 940e c70f 	CALL SUBOPT_0x1CB
                 ; 0009 0539 
                 ; 0009 053A     sprintf(setStr,"%02X%02X%02X%02X",
                 ; 0009 053B                 (server[0]*100) + (server[1] *10) + server[2],
                 ; 0009 053C                 (server[3]*100) + (server[4] *10) + server[5],
                 ; 0009 053D                 (server[6]*100) + (server[7] *10) + server[8],
                 ; 0009 053E                 (server[9]*100) + (server[10]*10) + server[11]);
005eee 940e be01 	CALL SUBOPT_0x56
                +
005ef0 e3e9     +LDI R30 , LOW ( 2 * _0x120000 + ( 5343 ) )
005ef1 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5343 ) )
005ef2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5343 ) )
005ef3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5343 ) )
                 	__POINTD1FN _0x120000,5343
005ef4 940e da29 	CALL __PUTPARD1
005ef6 a9ad      	LDD  R26,Y+53
005ef7 a9be      	LDD  R27,Y+53+1
005ef8 940e c668 	CALL SUBOPT_0x1B3
005efa a9ed      	LDD  R30,Y+53
005efb a9fe      	LDD  R31,Y+53+1
005efc 940e c66d 	CALL SUBOPT_0x1B4
005efe a9ed      	LDD  R30,Y+53
005eff a9fe      	LDD  R31,Y+53+1
005f00 940e c675 	CALL SUBOPT_0x1B5
005f02 ade9      	LDD  R30,Y+57
005f03 adfa      	LDD  R31,Y+57+1
005f04 940e c685 	CALL SUBOPT_0x1B7
005f06 ade9      	LDD  R30,Y+57
005f07 adfa      	LDD  R31,Y+57+1
005f08 940e c68a 	CALL SUBOPT_0x1B8
005f0a ade9      	LDD  R30,Y+57
005f0b adfa      	LDD  R31,Y+57+1
005f0c 940e c692 	CALL SUBOPT_0x1B9
005f0e aded      	LDD  R30,Y+61
005f0f adfe      	LDD  R31,Y+61+1
005f10 940e c6a2 	CALL SUBOPT_0x1BB
005f12 aded      	LDD  R30,Y+61
005f13 adfe      	LDD  R31,Y+61+1
005f14 940e c6a7 	CALL SUBOPT_0x1BC
005f16 aded      	LDD  R30,Y+61
005f17 adfe      	LDD  R31,Y+61+1
005f18 940e c609 	CALL SUBOPT_0x1A3
005f1a 940e c6af 	CALL SUBOPT_0x1BD
005f1c 940e c712 	CALL SUBOPT_0x1CC
005f1e 940e c6bd 	CALL SUBOPT_0x1BF
005f20 940e c712 	CALL SUBOPT_0x1CC
005f22 940e c6c2 	CALL SUBOPT_0x1C0
005f24 940e c712 	CALL SUBOPT_0x1CC
005f26 940e c6ca 	CALL SUBOPT_0x1C1
005f28 e180      	LDI  R24,16
005f29 940e bace 	CALL _sprintf
005f2b 9666      	ADIW R28,22
                 ; 0009 053F 
                 ; 0009 0540     printDebug("<ETH_setConfig> Set String [%s]\r\n",setStr);
005f2c 940e c6fe 	CALL SUBOPT_0x1C9
005f2e 940e bc2c 	CALL SUBOPT_0x12
                 ; 0009 0541 
                 ; 0009 0542     memcpy((ptr+42),&setStr[0],8);
005f30 01fa      	MOVW R30,R20
005f31 96ba      	ADIW R30,42
005f32 940e c708 	CALL SUBOPT_0x1CA
005f34 e0a8      	LDI  R26,LOW(8)
005f35 940e c70f 	CALL SUBOPT_0x1CB
                 ; 0009 0543 
                 ; 0009 0544 //    printDebug("<ETH_setConfig> Modified setting msg ---\r\n");
                 ; 0009 0545 //    for(i=0;i<configLen;i++){
                 ; 0009 0546 //        putchar3(ptr[i]);
                 ; 0009 0547 //    }
                 ; 0009 0548 //    printDebug("\r\n\---\r\n");
                 ; 0009 0549 
                 ; 0009 054A     // ------------------------- Set New Configuration --------------------------- //
                 ; 0009 054B     for(i=0;i<CONF_READ_BUFFER;i++){
                +
005f37 e000     +LDI R16 , LOW ( 0 )
005f38 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120102:
                +
005f39 3405     +CPI R16 , LOW ( 325 )
005f3a e0e1     +LDI R30 , HIGH ( 325 )
005f3b 071e     +CPC R17 , R30
                 	__CPWRN 16,17,325
005f3c f42c      	BRGE _0x120103
                 ; 0009 054C         configRd[i] = 0x00;
005f3d 940e c62d 	CALL SUBOPT_0x1AA
                 ; 0009 054D     }
                +
005f3f 5f0f     +SUBI R16 , LOW ( - 1 )
005f40 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f41 cff7      	RJMP _0x120102
                 _0x120103:
                 ; 0009 054E     configLen       = 0;
005f42 940e bf15 	CALL SUBOPT_0x7E
                 ; 0009 054F     config_start    = 0;
005f44 940e c630 	CALL SUBOPT_0x1AB
                 ; 0009 0550     config_ready    = 0;
                 ; 0009 0551     config_end      = 0;
                 ; 0009 0552     config_response = 0;
                 ; 0009 0553 
                 ; 0009 0554     printDebug("<ETH_setConfig> Setting msg ---\r\n");
                +
005f46 e6ec     +LDI R30 , LOW ( 2 * _0x120000 + ( 5394 ) )
005f47 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5394 ) )
005f48 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5394 ) )
005f49 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5394 ) )
                 	__POINTD1FN _0x120000,5394
005f4a 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0555     for(i=0;i<strlen(setInfoCmd);i++){
                +
005f4c e000     +LDI R16 , LOW ( 0 )
005f4d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x120105:
005f4e 01de      	MOVW R26,R28
005f4f 9694      	ADIW R26,36
005f50 940e a16b 	CALL _strlen
005f52 170e      	CP   R16,R30
005f53 071f      	CPC  R17,R31
005f54 f488      	BRSH _0x120106
                 ; 0009 0556         putchar0(setInfoCmd[i]);
005f55 01de      	MOVW R26,R28
005f56 9694      	ADIW R26,36
005f57 0fa0      	ADD  R26,R16
005f58 1fb1      	ADC  R27,R17
005f59 91ac      	LD   R26,X
005f5a 940e 3f17 	CALL _putchar0
                 ; 0009 0557         putchar3(setInfoCmd[i]);
005f5c 01de      	MOVW R26,R28
005f5d 9694      	ADIW R26,36
005f5e 0fa0      	ADD  R26,R16
005f5f 1fb1      	ADC  R27,R17
005f60 91ac      	LD   R26,X
005f61 940e 3fe3 	CALL _putchar3
                 ; 0009 0558     }
                +
005f63 5f0f     +SUBI R16 , LOW ( - 1 )
005f64 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f65 cfe8      	RJMP _0x120105
                 _0x120106:
                 ; 0009 0559     for(i=12;i<readLen;i++){
                +
005f66 e00c     +LDI R16 , LOW ( 12 )
005f67 e010     +LDI R17 , HIGH ( 12 )
                 	__GETWRN 16,17,12
                 _0x120108:
                +
005f68 1702     +CP R16 , R18
005f69 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
005f6a f47c      	BRGE _0x120109
                 ; 0009 055A         putchar0(ptr[i]);
005f6b 01f8      	MOVW R30,R16
005f6c 0fe4      	ADD  R30,R20
005f6d 1ff5      	ADC  R31,R21
005f6e 81a0      	LD   R26,Z
005f6f 940e 3f17 	CALL _putchar0
                 ; 0009 055B         putchar3(ptr[i]);
005f71 01f8      	MOVW R30,R16
005f72 0fe4      	ADD  R30,R20
005f73 1ff5      	ADC  R31,R21
005f74 81a0      	LD   R26,Z
005f75 940e 3fe3 	CALL _putchar3
                 ; 0009 055C     }
                +
005f77 5f0f     +SUBI R16 , LOW ( - 1 )
005f78 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005f79 cfee      	RJMP _0x120108
                 _0x120109:
                 ; 0009 055D     putchar0('\r');
005f7a e0ad      	LDI  R26,LOW(13)
005f7b 940e 3f17 	CALL _putchar0
                 ; 0009 055E     printDebug("\r\n\---\r\n");
                +
005f7d e8ee     +LDI R30 , LOW ( 2 * _0x120000 + ( 5428 ) )
005f7e e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5428 ) )
005f7f e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5428 ) )
005f80 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5428 ) )
                 	__POINTD1FN _0x120000,5428
005f81 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 055F 
                 ; 0009 0560     TIMER_setTimer(&timeout, 10);
005f83 01fe      	MOVW R30,R28
005f84 96bb      	ADIW R30,43
005f85 940e bcbb 	CALL SUBOPT_0x27
                 ; 0009 0561 
                 ; 0009 0562     while( (!config_ready) && !TIMER_checkTimerExceed(timeout)){
                 _0x12010A:
005f87 91e0 10f1 	LDS  R30,_config_ready
005f89 30e0      	CPI  R30,0
005f8a f419      	BRNE _0x12010D
005f8b 940e c660 	CALL SUBOPT_0x1B2
005f8d f009      	BREQ _0x12010E
                 _0x12010D:
005f8e c004      	RJMP _0x12010C
                 _0x12010E:
                 ; 0009 0563        delay_ms(50);
005f8f 940e bef2 	CALL SUBOPT_0x7A
                 ; 0009 0564        #asm("wdr")
005f91 95a8      	wdr
                 ; 0009 0565     }
005f92 cff4      	RJMP _0x12010A
                 _0x12010C:
                 ; 0009 0566 
                 ; 0009 0567     ETH_switchMode(MODE_NORM);
005f93 e8a0      	LDI  R26,LOW(128)
005f94 dd84      	RCALL _ETH_switchMode
                 ; 0009 0568 
                 ; 0009 0569     free( ptr );
005f95 01da      	MOVW R26,R20
005f96 940e a0bd 	CALL _free
                 ; 0009 056A 
                 ; 0009 056B     if(config_response == 'S'){
005f98 91a0 10f3 	LDS  R26,_config_response
005f9a 35a3      	CPI  R26,LOW(0x53)
005f9b f419      	BRNE _0x12010F
                 ; 0009 056C         return 0;
005f9c e0e0      	LDI  R30,LOW(0)
005f9d e0f0      	LDI  R31,HIGH(0)
005f9e c002      	RJMP _0x20E007B
                 ; 0009 056D     }
                 ; 0009 056E     else{
                 _0x12010F:
                 ; 0009 056F         return -1;
005f9f efef      	LDI  R30,LOW(65535)
005fa0 efff      	LDI  R31,HIGH(65535)
                 ; 0009 0570     }
                 ; 0009 0571 }
                 _0x20E007B:
005fa1 940e daa0 	CALL __LOADLOCR6
005fa3 96e7      	ADIW R28,55
005fa4 9508      	RET
                 ;/*============================================================*/
                 ;void ETH_reset(void)
                 ; 0009 0574 {
                 _ETH_reset:
                 ; 0009 0575     printDebug("<ETH_reset> Resetting Ethernet Module, please wait.");
                +
005fa5 e9e6     +LDI R30 , LOW ( 2 * _0x120000 + ( 5436 ) )
005fa6 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5436 ) )
005fa7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5436 ) )
005fa8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5436 ) )
                 	__POINTD1FN _0x120000,5436
005fa9 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 0576     ETH_RESET   = 0;
005fab 9872      	CBI  0xE,2
                 ; 0009 0577     delay_ms(3000);
005fac eba8      	LDI  R26,LOW(3000)
005fad e0bb      	LDI  R27,HIGH(3000)
005fae 940e d6dd 	CALL _delay_ms
                 ; 0009 0578     ETH_RESET   = 1;
005fb0 9a72      	SBI  0xE,2
                 ; 0009 0579     delay_ms(1);
005fb1 940e bee0 	CALL SUBOPT_0x75
005fb3 940e d6dd 	CALL _delay_ms
                 ; 0009 057A     printDebug("...Done\r\n");
                +
005fb5 ecea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5488 ) )
005fb6 e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5488 ) )
005fb7 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5488 ) )
005fb8 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5488 ) )
                 	__POINTD1FN _0x120000,5488
005fb9 940e bbba 	CALL SUBOPT_0x3
                 ; 0009 057B }
005fbb 9508      	RET
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include "ethparser.h"
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int statusRequestParser(unsigned char *pkt, int len, struct stat_req_st *st)
                 ; 000A 0007 {
                 
                 	.CSEG
                 _statusRequestParser:
                 ; 000A 0008     int     i,k=0;
                 ; 000A 0009 
                 ; 000A 000A     for(i=0;i<sizeof(st->nid);i++){
005fbc 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
005fbe 940e c719 	CALL SUBOPT_0x1CD
                 _0x140004:
                +
005fc0 3008     +CPI R16 , LOW ( 8 )
005fc1 e0e0     +LDI R30 , HIGH ( 8 )
005fc2 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
005fc3 f444      	BRGE _0x140005
                 ; 000A 000B         st->nid[0]  =   pkt[k++];
005fc4 940e c71e 	CALL SUBOPT_0x1CE
005fc6 81ac      	LDD  R26,Y+4
005fc7 81bd      	LDD  R27,Y+4+1
005fc8 93ec      	ST   X,R30
                 ; 000A 000C     }
                +
005fc9 5f0f     +SUBI R16 , LOW ( - 1 )
005fca 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
005fcb cff4      	RJMP _0x140004
                 _0x140005:
                 ; 000A 000D 
                 ; 000A 000E     st->accm        =   pkt[k++];
005fcc 940e c71e 	CALL SUBOPT_0x1CE
005fce 940e c727 	CALL SUBOPT_0x1CF
                 ; 000A 000F 
                 ; 000A 0010     st->intv        =   ((pkt[k++] & 0x00ff) << 8) |
                 ; 000A 0011                         ((pkt[k++] & 0x00ff));
005fd0 940e bfed 	CALL SUBOPT_0x9D
005fd2 2ffe      	MOV  R31,R30
005fd3 e0e0      	LDI  R30,0
005fd4 010f      	MOVW R0,R30
005fd5 940e c71e 	CALL SUBOPT_0x1CE
005fd7 940e bfed 	CALL SUBOPT_0x9D
005fd9 29e0      	OR   R30,R0
005fda 29f1      	OR   R31,R1
005fdb 940e c72c 	CALL SUBOPT_0x1D0
                 ; 000A 0012 
                 ; 000A 0013     if(st->accm >= 0x30){
005fdd 85a0      	LDD  R26,Z+8
005fde 33a0      	CPI  R26,LOW(0x30)
005fdf f008      	BRLO _0x140006
                 ; 000A 0014         return 0;
005fe0 c1a9      	RJMP _0x20E007A
                 ; 000A 0015     }
                 ; 000A 0016 
                 ; 000A 0017     st->parLen      =   len - k;
                 _0x140006:
005fe1 81ee      	LDD  R30,Y+6
005fe2 81ff      	LDD  R31,Y+6+1
005fe3 1be2      	SUB  R30,R18
005fe4 0bf3      	SBC  R31,R19
                +
005fe5 81ac     +LDD R26 , Y + 4
005fe6 81bd     +LDD R27 , Y + 4 + 1
005fe7 961b     +ADIW R26 , 11
005fe8 93ed     +ST X + , R30
005fe9 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 0018 
                 ; 000A 0019     st->parlst      =   malloc((st->parLen) * sizeof(char));
005fea 81ec      	LDD  R30,Y+4
005feb 81fd      	LDD  R31,Y+4+1
005fec 85a3      	LDD  R26,Z+11
005fed 85b4      	LDD  R27,Z+12
005fee 940e c734 	CALL SUBOPT_0x1D1
                +
005ff0 81ac     +LDD R26 , Y + 4
005ff1 81bd     +LDD R27 , Y + 4 + 1
005ff2 961d     +ADIW R26 , 13
005ff3 93ed     +ST X + , R30
005ff4 93fc     +ST X , R31
                 	__PUTW1SNS 4,13
                 ; 000A 001A     if(st->parlst == NULL)
005ff5 81ac      	LDD  R26,Y+4
005ff6 81bd      	LDD  R27,Y+4+1
005ff7 961d      	ADIW R26,13
005ff8 940e d9f0 	CALL __GETW1P
005ffa 9730      	SBIW R30,0
005ffb f449      	BRNE _0x140007
                 ; 000A 001B     {
                 ; 000A 001C         printDebug("<statusRequestParser> malloc failed\r\n");
                +
005ffc ede4     +LDI R30 , LOW ( 2 * _0x140000 + ( 0 ) )
005ffd e3f4     +LDI R31 , HIGH ( 2 * _0x140000 + ( 0 ) )
005ffe e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 0 ) )
005fff e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 0 ) )
                 	__POINTD1FN _0x140000,0
006000 940e bbba 	CALL SUBOPT_0x3
                 ; 000A 001D         return -1;
006002 efef      	LDI  R30,LOW(65535)
006003 efff      	LDI  R31,HIGH(65535)
006004 c187      	RJMP _0x20E0079
                 ; 000A 001E     }
                 ; 000A 001F 
                 ; 000A 0020     for( i=0 ; i<(st->parLen) ; i++ )
                 _0x140007:
                +
006005 e000     +LDI R16 , LOW ( 0 )
006006 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140009:
006007 81ac      	LDD  R26,Y+4
006008 81bd      	LDD  R27,Y+4+1
006009 961b      	ADIW R26,11
00600a 940e c73b 	CALL SUBOPT_0x1D2
00600c f450      	BRSH _0x14000A
                 ; 000A 0021     {
                 ; 000A 0022         (st->parlst)[i]      = pkt[i+k];
00600d 81ec      	LDD  R30,Y+4
00600e 81fd      	LDD  R31,Y+4+1
00600f 85a5      	LDD  R26,Z+13
006010 85b6      	LDD  R27,Z+14
006011 940e c740 	CALL SUBOPT_0x1D3
006013 93ec      	ST   X,R30
                 ; 000A 0023     }
                +
006014 5f0f     +SUBI R16 , LOW ( - 1 )
006015 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006016 cff0      	RJMP _0x140009
                 _0x14000A:
                 ; 000A 0024 
                 ; 000A 0025     return 0;
006017 c172      	RJMP _0x20E007A
                 ; 000A 0026 }
                 ;/*============================================================*/
                 ;int statusReportParser(unsigned char *pkt, unsigned long int *time)
                 ; 000A 0029 {
                 ; 000A 002A     int i,k=0;
                 ; 000A 002B 
                 ; 000A 002C     k               +=  8;
                 ;	*pkt -> Y+6
                 ;	*time -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                 ; 000A 002D 
                 ; 000A 002E     *time           =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 002F                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0030                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0031                         (((long)pkt[k++] & 0x000000FF));
                 ; 000A 0032 
                 ; 000A 0033     return 0;
                 ; 000A 0034 }
                 ;/*============================================================*/
                 ;int configManageParser(unsigned char *pkt, int len, struct conf_man_st *st)
                 ; 000A 0037 {
                 _configManageParser:
                 ; 000A 0038     int i,k=0;
                 ; 000A 0039 
                 ; 000A 003A     printDebug("<configManageParser>\r\n");
006018 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
                +
00601a e020     +LDI R18 , LOW ( 0 )
00601b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00601c efea     +LDI R30 , LOW ( 2 * _0x140000 + ( 38 ) )
00601d e3f4     +LDI R31 , HIGH ( 2 * _0x140000 + ( 38 ) )
00601e e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 38 ) )
00601f e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 38 ) )
                 	__POINTD1FN _0x140000,38
006020 940e bbba 	CALL SUBOPT_0x3
                 ; 000A 003B     print_payload(pkt,len);
006022 940e c5b7 	CALL SUBOPT_0x194
006024 85a8      	LDD  R26,Y+8
006025 85b9      	LDD  R27,Y+8+1
006026 940e 9b56 	CALL _print_payload
                 ; 000A 003C 
                 ; 000A 003D     for(i=0;i<sizeof(st->nid);i++){
                +
006028 e000     +LDI R16 , LOW ( 0 )
006029 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x14000C:
                +
00602a 3008     +CPI R16 , LOW ( 8 )
00602b e0e0     +LDI R30 , HIGH ( 8 )
00602c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00602d f444      	BRGE _0x14000D
                 ; 000A 003E         st->nid[0]  =   pkt[k++];
00602e 940e c71e 	CALL SUBOPT_0x1CE
006030 81ac      	LDD  R26,Y+4
006031 81bd      	LDD  R27,Y+4+1
006032 93ec      	ST   X,R30
                 ; 000A 003F     }
                +
006033 5f0f     +SUBI R16 , LOW ( - 1 )
006034 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006035 cff4      	RJMP _0x14000C
                 _0x14000D:
                 ; 000A 0040 
                 ; 000A 0041     st->accd        =   pkt[k++];
006036 940e c71e 	CALL SUBOPT_0x1CE
006038 940e c727 	CALL SUBOPT_0x1CF
                 ; 000A 0042 
                 ; 000A 0043     st->cnfg        =   pkt[k++];
                +
00603a 81ac     +LDD R26 , Y + 4
00603b 81bd     +LDD R27 , Y + 4 + 1
00603c 9619     +ADIW R26 , 9
00603d 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 0044 
                 ; 000A 0045     if(st->accd == CONF_RD_CMD){
00603e 81ec      	LDD  R30,Y+4
00603f 81fd      	LDD  R31,Y+4+1
006040 85a0      	LDD  R26,Z+8
006041 31a0      	CPI  R26,LOW(0x10)
006042 f489      	BRNE _0x14000E
                 ; 000A 0046         printDebug("<configManageParser> READING\r\n");
                +
006043 e1e1     +LDI R30 , LOW ( 2 * _0x140000 + ( 61 ) )
006044 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 61 ) )
006045 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 61 ) )
006046 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 61 ) )
                 	__POINTD1FN _0x140000,61
006047 940e bbba 	CALL SUBOPT_0x3
                 ; 000A 0047         st->confLen     =   0;
006049 81ac      	LDD  R26,Y+4
00604a 81bd      	LDD  R27,Y+4+1
00604b 961a      	ADIW R26,10
00604c 940e c2b0 	CALL SUBOPT_0x115
                 ; 000A 0048         st->confSpec    =   NULL;
00604e 81ac      	LDD  R26,Y+4
00604f 81bd      	LDD  R27,Y+4+1
006050 961c      	ADIW R26,12
006051 940e c2b0 	CALL SUBOPT_0x115
                 ; 000A 0049         return 0;
006053 c136      	RJMP _0x20E007A
                 ; 000A 004A     }
                 ; 000A 004B     printDebug("<configManageParser> WRITING\r\n");
                 _0x14000E:
                +
006054 e3e0     +LDI R30 , LOW ( 2 * _0x140000 + ( 92 ) )
006055 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 92 ) )
006056 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 92 ) )
006057 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 92 ) )
                 	__POINTD1FN _0x140000,92
006058 940e bbba 	CALL SUBOPT_0x3
                 ; 000A 004C 
                 ; 000A 004D     st->confLen     =   len - k;
00605a 81ee      	LDD  R30,Y+6
00605b 81ff      	LDD  R31,Y+6+1
00605c 1be2      	SUB  R30,R18
00605d 0bf3      	SBC  R31,R19
                +
00605e 81ac     +LDD R26 , Y + 4
00605f 81bd     +LDD R27 , Y + 4 + 1
006060 961a     +ADIW R26 , 10
006061 93ed     +ST X + , R30
006062 93fc     +ST X , R31
                 	__PUTW1SNS 4,10
                 ; 000A 004E 
                 ; 000A 004F     printDebug("<configManageParser> confLen = %d\r\n",st->confLen);
                +
006063 e4ef     +LDI R30 , LOW ( 2 * _0x140000 + ( 123 ) )
006064 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 123 ) )
006065 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 123 ) )
006066 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 123 ) )
                 	__POINTD1FN _0x140000,123
006067 940e da29 	CALL __PUTPARD1
006069 85a8      	LDD  R26,Y+8
00606a 85b9      	LDD  R27,Y+8+1
00606b 961a      	ADIW R26,10
00606c 940e bc7b 	CALL SUBOPT_0x1D
00606e 940e c58e 	CALL SUBOPT_0x18B
                 ; 000A 0050 
                 ; 000A 0051 
                 ; 000A 0052     st->confSpec    =   malloc((st->confLen) * sizeof(char));
006070 81ec      	LDD  R30,Y+4
006071 81fd      	LDD  R31,Y+4+1
006072 85a2      	LDD  R26,Z+10
006073 85b3      	LDD  R27,Z+11
006074 940e c734 	CALL SUBOPT_0x1D1
                +
006076 81ac     +LDD R26 , Y + 4
006077 81bd     +LDD R27 , Y + 4 + 1
006078 961c     +ADIW R26 , 12
006079 93ed     +ST X + , R30
00607a 93fc     +ST X , R31
                 	__PUTW1SNS 4,12
                 ; 000A 0053     if(st->confSpec == NULL)
00607b 81ac      	LDD  R26,Y+4
00607c 81bd      	LDD  R27,Y+4+1
00607d 961c      	ADIW R26,12
00607e 940e d9f0 	CALL __GETW1P
006080 9730      	SBIW R30,0
006081 f449      	BRNE _0x14000F
                 ; 000A 0054     {
                 ; 000A 0055         printDebug("<configManageParser> malloc failed\r\n");
                +
006082 e7e3     +LDI R30 , LOW ( 2 * _0x140000 + ( 159 ) )
006083 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 159 ) )
006084 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 159 ) )
006085 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 159 ) )
                 	__POINTD1FN _0x140000,159
006086 940e bbba 	CALL SUBOPT_0x3
                 ; 000A 0056         return -1;
006088 efef      	LDI  R30,LOW(65535)
006089 efff      	LDI  R31,HIGH(65535)
00608a c101      	RJMP _0x20E0079
                 ; 000A 0057     }
                 ; 000A 0058 
                 ; 000A 0059     for( i=0 ; i<(st->confLen) ; i++ )
                 _0x14000F:
                +
00608b e000     +LDI R16 , LOW ( 0 )
00608c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140011:
00608d 81ac      	LDD  R26,Y+4
00608e 81bd      	LDD  R27,Y+4+1
00608f 961a      	ADIW R26,10
006090 940e c73b 	CALL SUBOPT_0x1D2
006092 f450      	BRSH _0x140012
                 ; 000A 005A     {
                 ; 000A 005B         (st->confSpec)[i]      = pkt[i+k];
006093 81ec      	LDD  R30,Y+4
006094 81fd      	LDD  R31,Y+4+1
006095 85a4      	LDD  R26,Z+12
006096 85b5      	LDD  R27,Z+13
006097 940e c740 	CALL SUBOPT_0x1D3
006099 93ec      	ST   X,R30
                 ; 000A 005C     }
                +
00609a 5f0f     +SUBI R16 , LOW ( - 1 )
00609b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00609c cff0      	RJMP _0x140011
                 _0x140012:
                 ; 000A 005D 
                 ; 000A 005E     return 0;
00609d c0ec      	RJMP _0x20E007A
                 ; 000A 005F 
                 ; 000A 0060 }
                 ;/*============================================================*/
                 ;/*
                 ;int dataReportParser(unsigned char *pkt, int len, unsigned char *frameID)
                 ;{
                 ;    *frameID        =   pkt[0];
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int logManipulationCmdParser(unsigned char *pkt, int len, struct log_manic_st *st)
                 ; 000A 006B {
                 _logManipulationCmdParser:
                 ; 000A 006C     int i,k=0;
                 ; 000A 006D 
                 ; 000A 006E     for(i=0;i<sizeof(st->nid);i++){
00609e 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0060a0 940e c719 	CALL SUBOPT_0x1CD
                 _0x140014:
                +
0060a2 3008     +CPI R16 , LOW ( 8 )
0060a3 e0e0     +LDI R30 , HIGH ( 8 )
0060a4 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0060a5 f444      	BRGE _0x140015
                 ; 000A 006F         st->nid[0]  =   pkt[k++];
0060a6 940e c71e 	CALL SUBOPT_0x1CE
0060a8 81ac      	LDD  R26,Y+4
0060a9 81bd      	LDD  R27,Y+4+1
0060aa 93ec      	ST   X,R30
                 ; 000A 0070     }
                +
0060ab 5f0f     +SUBI R16 , LOW ( - 1 )
0060ac 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0060ad cff4      	RJMP _0x140014
                 _0x140015:
                 ; 000A 0071 
                 ; 000A 0072     st->accd        =   pkt[k++];
0060ae 940e c71e 	CALL SUBOPT_0x1CE
0060b0 940e c74a 	CALL SUBOPT_0x1D4
                 ; 000A 0073 
                 ; 000A 0074     if(len > 6){
0060b2 81ae      	LDD  R26,Y+6
0060b3 81bf      	LDD  R27,Y+6+1
0060b4 9717      	SBIW R26,7
0060b5 f414      	BRGE PC+3
0060b6 940c 6125 	JMP _0x140016
                 ; 000A 0075         st->tStart  =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 0076                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 0077                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 0078                         (((long)pkt[k++] & 0x000000FF));
0060b8 940e c71e 	CALL SUBOPT_0x1CE
0060ba 940e c74f 	CALL SUBOPT_0x1D5
0060bc 940e c757 	CALL SUBOPT_0x1D6
0060be 937f      	PUSH R23
0060bf 936f      	PUSH R22
0060c0 93ff      	PUSH R31
0060c1 93ef      	PUSH R30
0060c2 940e c71e 	CALL SUBOPT_0x1CE
0060c4 940e c74f 	CALL SUBOPT_0x1D5
0060c6 940e d90e 	CALL __LSLD16
0060c8 91af      	POP  R26
0060c9 91bf      	POP  R27
0060ca 918f      	POP  R24
0060cb 919f      	POP  R25
0060cc 940e d8ad 	CALL __ORD12
0060ce 937f      	PUSH R23
0060cf 936f      	PUSH R22
0060d0 93ff      	PUSH R31
0060d1 93ef      	PUSH R30
0060d2 940e c71e 	CALL SUBOPT_0x1CE
0060d4 940e c74f 	CALL SUBOPT_0x1D5
0060d6 940e c75d 	CALL SUBOPT_0x1D7
0060d8 91af      	POP  R26
0060d9 91bf      	POP  R27
0060da 918f      	POP  R24
0060db 919f      	POP  R25
0060dc 940e d8ad 	CALL __ORD12
0060de 937f      	PUSH R23
0060df 936f      	PUSH R22
0060e0 93ff      	PUSH R31
0060e1 93ef      	PUSH R30
0060e2 940e c71e 	CALL SUBOPT_0x1CE
0060e4 940e c74f 	CALL SUBOPT_0x1D5
0060e6 91af      	POP  R26
0060e7 91bf      	POP  R27
0060e8 918f      	POP  R24
0060e9 919f      	POP  R25
0060ea 940e c763 	CALL SUBOPT_0x1D8
                 ; 000A 0079 
                 ; 000A 007A         st->tStop   =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 007B                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 007C                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 007D                         (((long)pkt[k++] & 0x000000FF));
0060ec 940e c71e 	CALL SUBOPT_0x1CE
0060ee 940e c74f 	CALL SUBOPT_0x1D5
0060f0 940e c757 	CALL SUBOPT_0x1D6
0060f2 937f      	PUSH R23
0060f3 936f      	PUSH R22
0060f4 93ff      	PUSH R31
0060f5 93ef      	PUSH R30
0060f6 940e c71e 	CALL SUBOPT_0x1CE
0060f8 940e c74f 	CALL SUBOPT_0x1D5
0060fa 940e d90e 	CALL __LSLD16
0060fc 91af      	POP  R26
0060fd 91bf      	POP  R27
0060fe 918f      	POP  R24
0060ff 919f      	POP  R25
006100 940e d8ad 	CALL __ORD12
006102 937f      	PUSH R23
006103 936f      	PUSH R22
006104 93ff      	PUSH R31
006105 93ef      	PUSH R30
006106 940e c71e 	CALL SUBOPT_0x1CE
006108 940e c74f 	CALL SUBOPT_0x1D5
00610a 940e c75d 	CALL SUBOPT_0x1D7
00610c 91af      	POP  R26
00610d 91bf      	POP  R27
00610e 918f      	POP  R24
00610f 919f      	POP  R25
006110 940e d8ad 	CALL __ORD12
006112 937f      	PUSH R23
006113 936f      	PUSH R22
006114 93ff      	PUSH R31
006115 93ef      	PUSH R30
006116 940e c71e 	CALL SUBOPT_0x1CE
006118 940e c74f 	CALL SUBOPT_0x1D5
00611a 91af      	POP  R26
00611b 91bf      	POP  R27
00611c 918f      	POP  R24
00611d 919f      	POP  R25
00611e 940e d8ad 	CALL __ORD12
                +
006120 81ac     +LDD R26 , Y + 4
006121 81bd     +LDD R27 , Y + 4 + 1
006122 961d     +ADIW R26 , 13
006123 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 4,13
                 ; 000A 007E     }
                 ; 000A 007F 
                 ; 000A 0080     return 0;
                 _0x140016:
006125 c064      	RJMP _0x20E007A
                 ; 000A 0081 }
                 ;/*============================================================*/
                 ;int logManipulationAckParser(unsigned char *pkt, struct log_mania_st *st)
                 ; 000A 0084 {
                 _logManipulationAckParser:
                 ; 000A 0085     int i,k=0;
                 ; 000A 0086 
                 ; 000A 0087     for(i=0;i<sizeof(st->nid);i++){
006126 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006128 940e c719 	CALL SUBOPT_0x1CD
                 _0x140018:
                +
00612a 3008     +CPI R16 , LOW ( 8 )
00612b e0e0     +LDI R30 , HIGH ( 8 )
00612c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00612d f444      	BRGE _0x140019
                 ; 000A 0088         st->nid[0]  =   pkt[k++];
00612e 940e c76b 	CALL SUBOPT_0x1D9
006130 81ac      	LDD  R26,Y+4
006131 81bd      	LDD  R27,Y+4+1
006132 93ec      	ST   X,R30
                 ; 000A 0089     }
                +
006133 5f0f     +SUBI R16 , LOW ( - 1 )
006134 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006135 cff4      	RJMP _0x140018
                 _0x140019:
                 ; 000A 008A 
                 ; 000A 008B     st->accd        =   pkt[k++];
006136 c0b2      	RJMP _0x20E0078
                 ; 000A 008C     st->status      =   pkt[k++];
                 ; 000A 008D 
                 ; 000A 008E     return 0;
                 ; 000A 008F }
                 ;/*============================================================*/
                 ;int networkMaintenanceParser(unsigned char *pkt, int len, struct netw_man_st *st)
                 ; 000A 0092 {
                 _networkMaintenanceParser:
                 ; 000A 0093     int i,k=0;
                 ; 000A 0094 
                 ; 000A 0095     for(i=0;i<sizeof(st->nid);i++){
006137 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+8
                 ;	len -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006139 940e c719 	CALL SUBOPT_0x1CD
                 _0x14001B:
                +
00613b 3008     +CPI R16 , LOW ( 8 )
00613c e0e0     +LDI R30 , HIGH ( 8 )
00613d 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
00613e f444      	BRGE _0x14001C
                 ; 000A 0096         st->nid[0]  =   pkt[k++];
00613f 940e c71e 	CALL SUBOPT_0x1CE
006141 81ac      	LDD  R26,Y+4
006142 81bd      	LDD  R27,Y+4+1
006143 93ec      	ST   X,R30
                 ; 000A 0097     }
                +
006144 5f0f     +SUBI R16 , LOW ( - 1 )
006145 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006146 cff4      	RJMP _0x14001B
                 _0x14001C:
                 ; 000A 0098 
                 ; 000A 0099     st->cmd         =   pkt[k++];
006147 940e c71e 	CALL SUBOPT_0x1CE
006149 940e c74a 	CALL SUBOPT_0x1D4
                 ; 000A 009A 
                 ; 000A 009B     st->dataLen     =   len - 2;
00614b 81ee      	LDD  R30,Y+6
00614c 81ff      	LDD  R31,Y+6+1
00614d 9732      	SBIW R30,2
00614e 940e c72c 	CALL SUBOPT_0x1D0
                 ; 000A 009C 
                 ; 000A 009D     if( st->dataLen > 0 ){
006150 940e c600 	CALL SUBOPT_0x1A1
006152 f5b8      	BRSH _0x14001D
                 ; 000A 009E 
                 ; 000A 009F         st->data    =   malloc((st->dataLen) * sizeof(char));
006153 81ec      	LDD  R30,Y+4
006154 81fd      	LDD  R31,Y+4+1
006155 85a1      	LDD  R26,Z+9
006156 85b2      	LDD  R27,Z+10
006157 940e c734 	CALL SUBOPT_0x1D1
                +
006159 81ac     +LDD R26 , Y + 4
00615a 81bd     +LDD R27 , Y + 4 + 1
00615b 961b     +ADIW R26 , 11
00615c 93ed     +ST X + , R30
00615d 93fc     +ST X , R31
                 	__PUTW1SNS 4,11
                 ; 000A 00A0         if(st->data == NULL)
00615e 81ac      	LDD  R26,Y+4
00615f 81bd      	LDD  R27,Y+4+1
006160 961b      	ADIW R26,11
006161 940e d9f0 	CALL __GETW1P
006163 9730      	SBIW R30,0
006164 f499      	BRNE _0x14001E
                 ; 000A 00A1         {
                 ; 000A 00A2             printDebug("<networkMaintenanceParser> malloc failed (%d)\r\n",((st->dataLen) * sizeof(char)));
                +
006165 e9e8     +LDI R30 , LOW ( 2 * _0x140000 + ( 196 ) )
006166 e3f5     +LDI R31 , HIGH ( 2 * _0x140000 + ( 196 ) )
006167 e060     +LDI R22 , BYTE3 ( 2 * _0x140000 + ( 196 ) )
006168 e070     +LDI R23 , BYTE4 ( 2 * _0x140000 + ( 196 ) )
                 	__POINTD1FN _0x140000,196
006169 940e c76f 	CALL SUBOPT_0x1DA
00616b 85a1      	LDD  R26,Z+9
00616c 85b2      	LDD  R27,Z+10
00616d e0e1      	LDI  R30,LOW(1)
00616e e0f0      	LDI  R31,HIGH(1)
00616f 940e d932 	CALL __MULW12U
006171 940e bd18 	CALL SUBOPT_0x34
006173 940e bc2c 	CALL SUBOPT_0x12
                 ; 000A 00A3             return -1;
006175 efef      	LDI  R30,LOW(65535)
006176 efff      	LDI  R31,HIGH(65535)
006177 c014      	RJMP _0x20E0079
                 ; 000A 00A4         }
                 ; 000A 00A5 
                 ; 000A 00A6         for( i=0 ; i<(st->dataLen) ; i++ )
                 _0x14001E:
                +
006178 e000     +LDI R16 , LOW ( 0 )
006179 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x140020:
00617a 81ac      	LDD  R26,Y+4
00617b 81bd      	LDD  R27,Y+4+1
00617c 9619      	ADIW R26,9
00617d 940e c73b 	CALL SUBOPT_0x1D2
00617f f450      	BRSH _0x140021
                 ; 000A 00A7         {
                 ; 000A 00A8             (st->data)[i]      = pkt[i+k];
006180 81ec      	LDD  R30,Y+4
006181 81fd      	LDD  R31,Y+4+1
006182 85a3      	LDD  R26,Z+11
006183 85b4      	LDD  R27,Z+12
006184 940e c740 	CALL SUBOPT_0x1D3
006186 93ec      	ST   X,R30
                 ; 000A 00A9         }
                +
006187 5f0f     +SUBI R16 , LOW ( - 1 )
006188 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006189 cff0      	RJMP _0x140020
                 _0x140021:
                 ; 000A 00AA 
                 ; 000A 00AB     }
                 ; 000A 00AC 
                 ; 000A 00AD     return 0;
                 _0x14001D:
                 _0x20E007A:
00618a e0e0      	LDI  R30,LOW(0)
00618b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0079:
00618c 940e daa2 	CALL __LOADLOCR4
00618e 962a      	ADIW R28,10
00618f 9508      	RET
                 ; 000A 00AE }
                 ;/*============================================================*/
                 ;int remoteDeviceControlParser(unsigned char *pkt, struct rem_dev_ctrl_st *st)
                 ; 000A 00B1 {
                 _remoteDeviceControlParser:
                 ; 000A 00B2     int i,k=0;
                 ; 000A 00B3 
                 ; 000A 00B4     for(i=0;i<sizeof(st->nid);i++){
006190 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
006192 940e c719 	CALL SUBOPT_0x1CD
                 _0x140023:
                +
006194 3008     +CPI R16 , LOW ( 8 )
006195 e0e0     +LDI R30 , HIGH ( 8 )
006196 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
006197 f444      	BRGE _0x140024
                 ; 000A 00B5         st->nid[0]  =   pkt[k++];
006198 940e c76b 	CALL SUBOPT_0x1D9
00619a 81ac      	LDD  R26,Y+4
00619b 81bd      	LDD  R27,Y+4+1
00619c 93ec      	ST   X,R30
                 ; 000A 00B6     }
                +
00619d 5f0f     +SUBI R16 , LOW ( - 1 )
00619e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00619f cff4      	RJMP _0x140023
                 _0x140024:
                 ; 000A 00B7 
                 ; 000A 00B8     st->cmd         =   pkt[k++];
0061a0 940e c76b 	CALL SUBOPT_0x1D9
0061a2 940e c74a 	CALL SUBOPT_0x1D4
                 ; 000A 00B9 
                 ; 000A 00BA     st->value       =   (((long)pkt[k++] & 0x000000FF) << 24) |
                 ; 000A 00BB                         (((long)pkt[k++] & 0x000000FF) << 16) |
                 ; 000A 00BC                         (((long)pkt[k++] & 0x000000FF) << 8)  |
                 ; 000A 00BD                         (((long)pkt[k++] & 0x000000FF));
0061a4 940e c76b 	CALL SUBOPT_0x1D9
0061a6 940e c74f 	CALL SUBOPT_0x1D5
0061a8 940e c757 	CALL SUBOPT_0x1D6
0061aa 937f      	PUSH R23
0061ab 936f      	PUSH R22
0061ac 93ff      	PUSH R31
0061ad 93ef      	PUSH R30
0061ae 940e c76b 	CALL SUBOPT_0x1D9
0061b0 940e c74f 	CALL SUBOPT_0x1D5
0061b2 940e d90e 	CALL __LSLD16
0061b4 91af      	POP  R26
0061b5 91bf      	POP  R27
0061b6 918f      	POP  R24
0061b7 919f      	POP  R25
0061b8 940e d8ad 	CALL __ORD12
0061ba 937f      	PUSH R23
0061bb 936f      	PUSH R22
0061bc 93ff      	PUSH R31
0061bd 93ef      	PUSH R30
0061be 940e c76b 	CALL SUBOPT_0x1D9
0061c0 940e c74f 	CALL SUBOPT_0x1D5
0061c2 940e c75d 	CALL SUBOPT_0x1D7
0061c4 91af      	POP  R26
0061c5 91bf      	POP  R27
0061c6 918f      	POP  R24
0061c7 919f      	POP  R25
0061c8 940e d8ad 	CALL __ORD12
0061ca 937f      	PUSH R23
0061cb 936f      	PUSH R22
0061cc 93ff      	PUSH R31
0061cd 93ef      	PUSH R30
0061ce 940e c76b 	CALL SUBOPT_0x1D9
0061d0 940e c74f 	CALL SUBOPT_0x1D5
0061d2 91af      	POP  R26
0061d3 91bf      	POP  R27
0061d4 918f      	POP  R24
0061d5 919f      	POP  R25
0061d6 940e c763 	CALL SUBOPT_0x1D8
                 ; 000A 00BE 
                 ; 000A 00BF     return 0;
0061d8 c01d      	RJMP _0x20E0077
                 ; 000A 00C0 }
                 ;/*============================================================*/
                 ;int clearListParser(unsigned char *pkt, struct clr_lst_st *st)
                 ; 000A 00C3 {
                 _clearListParser:
                 ; 000A 00C4     int i,k=0;
                 ; 000A 00C5 
                 ; 000A 00C6     for(i=0;i<sizeof(st->nid);i++){
0061d9 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*pkt -> Y+6
                 ;	*st -> Y+4
                 ;	i -> R16,R17
                 ;	k -> R18,R19
0061db 940e c719 	CALL SUBOPT_0x1CD
                 _0x140026:
                +
0061dd 3008     +CPI R16 , LOW ( 8 )
0061de e0e0     +LDI R30 , HIGH ( 8 )
0061df 071e     +CPC R17 , R30
                 	__CPWRN 16,17,8
0061e0 f444      	BRGE _0x140027
                 ; 000A 00C7         st->nid[0]  =   pkt[k++];
0061e1 940e c76b 	CALL SUBOPT_0x1D9
0061e3 81ac      	LDD  R26,Y+4
0061e4 81bd      	LDD  R27,Y+4+1
0061e5 93ec      	ST   X,R30
                 ; 000A 00C8     }
                +
0061e6 5f0f     +SUBI R16 , LOW ( - 1 )
0061e7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0061e8 cff4      	RJMP _0x140026
                 _0x140027:
                 ; 000A 00C9 
                 ; 000A 00CA     st->cmd         =   pkt[k++];
                 _0x20E0078:
0061e9 01f9      	MOVW R30,R18
                +
0061ea 5f2f     +SUBI R18 , LOW ( - 1 )
0061eb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0061ec 940e c627 	CALL SUBOPT_0x1A9
0061ee 940e c74a 	CALL SUBOPT_0x1D4
                 ; 000A 00CB     st->status      =   pkt[k++];
0061f0 940e c76b 	CALL SUBOPT_0x1D9
                +
0061f2 81ac     +LDD R26 , Y + 4
0061f3 81bd     +LDD R27 , Y + 4 + 1
0061f4 9619     +ADIW R26 , 9
0061f5 93ec     +ST X , R30
                 	__PUTB1SNS 4,9
                 ; 000A 00CC 
                 ; 000A 00CD     return 0;
                 _0x20E0077:
0061f6 e0e0      	LDI  R30,LOW(0)
0061f7 e0f0      	LDI  R31,HIGH(0)
0061f8 940e daa2 	CALL __LOADLOCR4
0061fa 9628      	ADIW R28,8
0061fb 9508      	RET
                 ; 000A 00CE }
                 ;/*============================================================*/
                 ;void free_statusRequest(struct stat_req_st *st)
                 ; 000A 00D1 {
                 _free_statusRequest:
                 ; 000A 00D2     free ( st->parlst );
0061fc 940e bfb0 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
0061fe 85a5      	LDD  R26,Z+13
0061ff 85b6      	LDD  R27,Z+14
006200 940e a0bd 	CALL _free
                 ; 000A 00D3 }
006202 c05e      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_configManage(struct conf_man_st *st)
                 ; 000A 00D6 {
                 _free_configManage:
                 ; 000A 00D7     free ( st->confSpec );
006203 940e bfb0 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
006205 85a4      	LDD  R26,Z+12
006206 85b5      	LDD  R27,Z+13
006207 940e a0bd 	CALL _free
                 ; 000A 00D8 }
006209 c057      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;void free_networkMaintenance(struct netw_man_st *st)
                 ; 000A 00DB {
                 _free_networkMaintenance:
                 ; 000A 00DC     free ( st->data );
00620a 940e bfb0 	CALL SUBOPT_0x95
                 ;	*st -> Y+0
00620c 85a3      	LDD  R26,Z+11
00620d 85b4      	LDD  R27,Z+12
00620e 940e a0bd 	CALL _free
                 ; 000A 00DD }
006210 c050      	RJMP _0x20E0076
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethservice.h"
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;/*============================================================*/
                 ;int getConfigLen(unsigned char cnfg)
                 ; 000B 000A {
                 
                 	.CSEG
                 _getConfigLen:
                 ; 000B 000B     unsigned char   type = cnfg & 0xF0;;
                 ; 000B 000C 
                 ; 000B 000D     switch( type ){
006211 93aa      	ST   -Y,R26
006212 931a      	ST   -Y,R17
                 ;	cnfg -> Y+1
                 ;	type -> R17
006213 81e9      	LDD  R30,Y+1
006214 7fe0      	ANDI R30,LOW(0xF0)
006215 2f1e      	MOV  R17,R30
006216 2fe1      	MOV  R30,R17
006217 940e bda4 	CALL SUBOPT_0x47
                 ; 000B 000E         case CONF_PROPERTIES    :   return sizeof(struct prop_cnfg_st);
006219 f419      	BRNE _0x160006
00621a eae1      	LDI  R30,LOW(161)
00621b e0f0      	LDI  R31,HIGH(161)
00621c c043      	RJMP _0x20E0075
                 ; 000B 000F         case CONF_OPERATE       :   return sizeof(struct oper_cnfg_st);
                 _0x160006:
00621d 32e0      	CPI  R30,LOW(0x20)
00621e e0a0      	LDI  R26,HIGH(0x20)
00621f 07fa      	CPC  R31,R26
006220 f419      	BRNE _0x160007
006221 e0e8      	LDI  R30,LOW(8)
006222 e0f0      	LDI  R31,HIGH(8)
006223 c03c      	RJMP _0x20E0075
                 ; 000B 0010         case CONF_SENSOR        :   return sizeof(struct sens_cnfg_st);
                 _0x160007:
006224 33e0      	CPI  R30,LOW(0x30)
006225 e0a0      	LDI  R26,HIGH(0x30)
006226 07fa      	CPC  R31,R26
006227 f419      	BRNE _0x160008
006228 e1ed      	LDI  R30,LOW(29)
006229 e0f0      	LDI  R31,HIGH(29)
00622a c035      	RJMP _0x20E0075
                 ; 000B 0011         case CONF_AUXDI         :   return sizeof(struct din_cnfg_st);
                 _0x160008:
00622b 34e0      	CPI  R30,LOW(0x40)
00622c e0a0      	LDI  R26,HIGH(0x40)
00622d 07fa      	CPC  R31,R26
00622e f419      	BRNE _0x160009
00622f e0e3      	LDI  R30,LOW(3)
006230 e0f0      	LDI  R31,HIGH(3)
006231 c02e      	RJMP _0x20E0075
                 ; 000B 0012         case CONF_AUXDO         :   return sizeof(struct dout_cnfg_st);
                 _0x160009:
006232 35e0      	CPI  R30,LOW(0x50)
006233 e0a0      	LDI  R26,HIGH(0x50)
006234 07fa      	CPC  R31,R26
006235 f419      	BRNE _0x16000A
006236 e2e6      	LDI  R30,LOW(38)
006237 e0f0      	LDI  R31,HIGH(38)
006238 c027      	RJMP _0x20E0075
                 ; 000B 0013         case CONF_AUXAI         :   return sizeof(struct ain_cnfg_st);
                 _0x16000A:
006239 36e0      	CPI  R30,LOW(0x60)
00623a e0a0      	LDI  R26,HIGH(0x60)
00623b 07fa      	CPC  R31,R26
00623c f419      	BRNE _0x16000B
00623d e0e5      	LDI  R30,LOW(5)
00623e e0f0      	LDI  R31,HIGH(5)
00623f c020      	RJMP _0x20E0075
                 ; 000B 0014         case CONF_AUXAO         :   return sizeof(struct aout_cnfg_st);
                 _0x16000B:
006240 37e0      	CPI  R30,LOW(0x70)
006241 e0a0      	LDI  R26,HIGH(0x70)
006242 07fa      	CPC  R31,R26
006243 f419      	BRNE _0x16000C
006244 e2e9      	LDI  R30,LOW(41)
006245 e0f0      	LDI  R31,HIGH(41)
006246 c019      	RJMP _0x20E0075
                 ; 000B 0015         case CONF_BUZZER        :   return sizeof(struct buzz_cnfg_st);
                 _0x16000C:
006247 38e0      	CPI  R30,LOW(0x80)
006248 e0a0      	LDI  R26,HIGH(0x80)
006249 07fa      	CPC  R31,R26
00624a f419      	BRNE _0x16000D
00624b e2e5      	LDI  R30,LOW(37)
00624c e0f0      	LDI  R31,HIGH(37)
00624d c012      	RJMP _0x20E0075
                 ; 000B 0016         case CONF_ENVALARM      :   return sizeof(struct alm_cnfg_st);
                 _0x16000D:
00624e 39e0      	CPI  R30,LOW(0x90)
00624f e0a0      	LDI  R26,HIGH(0x90)
006250 07fa      	CPC  R31,R26
006251 f419      	BRNE _0x16000F
006252 e1e2      	LDI  R30,LOW(18)
006253 e0f0      	LDI  R31,HIGH(18)
006254 c00b      	RJMP _0x20E0075
                 ; 000B 0017         default                 :   printDebug("<getConfigLen> unknown configuration type [0x%02X]\r\n",type);
                 _0x16000F:
                +
006255 ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 0 ) )
006256 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 0 ) )
006257 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 0 ) )
006258 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 0 ) )
                 	__POINTD1FN _0x160000,0
006259 940e da29 	CALL __PUTPARD1
00625b 2fe1      	MOV  R30,R17
00625c 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0018                                     return -1;
00625e efef      	LDI  R30,LOW(65535)
00625f efff      	LDI  R31,HIGH(65535)
                 ; 000B 0019     }
                 ; 000B 001A }
                 _0x20E0075:
006260 8118      	LDD  R17,Y+0
                 _0x20E0076:
006261 9622      	ADIW R28,2
006262 9508      	RET
                 ;/*============================================================*/
                 ;int configRead(unsigned char cnfg, unsigned char *ptr)
                 ; 000B 001D {
                 _configRead:
                 ; 000B 001E     int i = 0;
                 ; 000B 001F     int res = 0;
                 ; 000B 0020     unsigned char   type            = 0x00;
                 ; 000B 0021     int             channel         = 0;
                 ; 000B 0022     void            *cnfgStrc       = NULL;
                 ; 000B 0023 
                 ; 000B 0024     type    =   cnfg & 0xF0;
006263 940e c774 	CALL SUBOPT_0x1DB
006265 940e bd9f 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+12
                 ;	*ptr -> Y+10
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	type -> R21
                 ;	channel -> Y+8
                 ;	*cnfgStrc -> Y+6
                +
006267 e020     +LDI R18 , LOW ( 0 )
006268 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
006269 e050      	LDI  R21,0
00626a 85ec      	LDD  R30,Y+12
00626b 7fe0      	ANDI R30,LOW(0xF0)
00626c 2f5e      	MOV  R21,R30
                 ; 000B 0025 
                 ; 000B 0026 
                 ; 000B 0027     switch( type ){
00626d 2fe5      	MOV  R30,R21
00626e 940e bda4 	CALL SUBOPT_0x47
                 ; 000B 0028         case CONF_PROPERTIES    :   cnfgStrc = malloc (sizeof(struct prop_cnfg_st));
006270 f011      	BREQ PC+3
006271 940c 62e1 	JMP _0x160013
006273 940e c20b 	CALL SUBOPT_0xF9
006275 940e c777 	CALL SUBOPT_0x1DC
                 ; 000B 0029                                     if(cnfgStrc == NULL){
006277 f479      	BRNE _0x160014
                 ; 000B 002A                                         printDebug("<configRead> CONF_PROPERTIES malloc1 failed (%d bytes)\r\n",sizeof(struct prop_cnfg_st));
                +
006278 efed     +LDI R30 , LOW ( 2 * _0x160000 + ( 53 ) )
006279 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 53 ) )
00627a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 53 ) )
00627b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 53 ) )
                 	__POINTD1FN _0x160000,53
00627c 940e da29 	CALL __PUTPARD1
                +
00627e eae1     +LDI R30 , LOW ( 0xA1 )
00627f e0f0     +LDI R31 , HIGH ( 0xA1 )
006280 e060     +LDI R22 , BYTE3 ( 0xA1 )
006281 e070     +LDI R23 , BYTE4 ( 0xA1 )
                 	__GETD1N 0xA1
006282 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 002B                                         return -2;
006284 efee      	LDI  R30,LOW(65534)
006285 efff      	LDI  R31,HIGH(65534)
006286 c408      	RJMP _0x20E0074
                 ; 000B 002C                                     }
                 ; 000B 002D 
                 ; 000B 002E                                     res = getPropertiesConfig((struct prop_cnfg_st *) cnfgStrc);
                 _0x160014:
006287 81ae      	LDD  R26,Y+6
006288 81bf      	LDD  R27,Y+6+1
006289 940e 47be 	CALL _getPropertiesConfig
00628b 019f      	MOVW R18,R30
                 ; 000B 002F                                     if(res < 0){
00628c 2333      	TST  R19
00628d f45a      	BRPL _0x160015
                 ; 000B 0030                                         printDebug("<configRead> getPropertiesConfig() failed\r\n");
                +
00628e e3e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 110 ) )
00628f e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 110 ) )
006290 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 110 ) )
006291 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 110 ) )
                 	__POINTD1FN _0x160000,110
006292 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0031                                         free ( cnfgStrc );
006294 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 0032                                         return -3;
006296 efed      	LDI  R30,LOW(65533)
006297 efff      	LDI  R31,HIGH(65533)
006298 c3f6      	RJMP _0x20E0074
                 ; 000B 0033                                     }
                 ; 000B 0034 
                 ; 000B 0035                                     printDebug("\r\n--- READ CONF_PROPERTIES ---\r\n");
                 _0x160015:
                +
006299 e6e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 154 ) )
00629a e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 154 ) )
00629b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 154 ) )
00629c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 154 ) )
                 	__POINTD1FN _0x160000,154
00629d 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0036                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceType);
00629f 940e c77d 	CALL SUBOPT_0x1DD
0062a1 940e bd18 	CALL SUBOPT_0x34
0062a3 940e bc2c 	CALL SUBOPT_0x12
                 ; 000B 0037                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->firmwareVersion);
0062a5 940e c77d 	CALL SUBOPT_0x1DD
0062a7 9674      	ADIW R30,20
0062a8 940e bd18 	CALL SUBOPT_0x34
0062aa 940e bc2c 	CALL SUBOPT_0x12
                 ; 000B 0038                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceName);
0062ac 940e c77d 	CALL SUBOPT_0x1DD
0062ae 96b8      	ADIW R30,40
0062af 940e bd18 	CALL SUBOPT_0x34
0062b1 940e bc2c 	CALL SUBOPT_0x12
                 ; 000B 0039                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->deviceID);
0062b3 940e c77d 	CALL SUBOPT_0x1DD
0062b5 5be0      	SUBI R30,LOW(-80)
0062b6 4fff      	SBCI R31,HIGH(-80)
0062b7 940e bd18 	CALL SUBOPT_0x34
0062b9 940e bc2c 	CALL SUBOPT_0x12
                 ; 000B 003A                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostName);
0062bb 940e c77d 	CALL SUBOPT_0x1DD
0062bd 59ec      	SUBI R30,LOW(-100)
0062be 4fff      	SBCI R31,HIGH(-100)
0062bf 940e bd18 	CALL SUBOPT_0x34
0062c1 940e bc2c 	CALL SUBOPT_0x12
                 ; 000B 003B                                     printDebug("%s\r\n",((struct prop_cnfg_st *)cnfgStrc)->hostID);
0062c3 940e c77d 	CALL SUBOPT_0x1DD
0062c5 57e4      	SUBI R30,LOW(-140)
0062c6 4fff      	SBCI R31,HIGH(-140)
0062c7 940e bd18 	CALL SUBOPT_0x34
0062c9 940e bc2c 	CALL SUBOPT_0x12
                 ; 000B 003C                                     printDebug("%d\r\n",(signed char) (((struct prop_cnfg_st *)cnfgStrc)->timeZone));
                +
0062cb e8e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 192 ) )
0062cc e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 192 ) )
0062cd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 192 ) )
0062ce e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 192 ) )
                 	__POINTD1FN _0x160000,192
0062cf 940e c328 	CALL SUBOPT_0x129
0062d1 56a0      	SUBI R26,LOW(-160)
0062d2 4fbf      	SBCI R27,HIGH(-160)
0062d3 91ec      	LD   R30,X
0062d4 940e d913 	CALL __CBD1
0062d6 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 003D 
                 ; 000B 003E //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 003F //                                    print_payload((char *)cnfgStrc, sizeof(struct prop_cnfg_st));
                 ; 000B 0040 
                 ; 000B 0041                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct prop_cnfg_st));
0062d8 940e c782 	CALL SUBOPT_0x1DE
0062da 940e c20b 	CALL SUBOPT_0xF9
0062dc 940e c787 	CALL SUBOPT_0x1DF
                 ; 000B 0042 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0043 //                                    print_payload((char *)ptr, sizeof(struct prop_cnfg_st));
                 ; 000B 0044 
                 ; 000B 0045                                     free ( cnfgStrc );
                 ; 000B 0046 
                 ; 000B 0047                                     return sizeof(struct prop_cnfg_st);
0062de eae1      	LDI  R30,LOW(161)
0062df e0f0      	LDI  R31,HIGH(161)
0062e0 c3ae      	RJMP _0x20E0074
                 ; 000B 0048 
                 ; 000B 0049         case CONF_OPERATE       :   cnfgStrc = malloc (sizeof(struct oper_cnfg_st));
                 _0x160013:
0062e1 32e0      	CPI  R30,LOW(0x20)
0062e2 e0a0      	LDI  R26,HIGH(0x20)
0062e3 07fa      	CPC  R31,R26
0062e4 f011      	BREQ PC+3
0062e5 940c 634e 	JMP _0x160016
0062e7 940e c78a 	CALL SUBOPT_0x1E0
0062e9 940e c777 	CALL SUBOPT_0x1DC
                 ; 000B 004A                                     if(cnfgStrc == NULL){
0062eb f479      	BRNE _0x160017
                 ; 000B 004B                                         printDebug("<configRead> CONF_OPERATE malloc1 failed (%d bytes)\r\n",sizeof(struct oper_cnfg_st));
                +
0062ec e8ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 197 ) )
0062ed e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 197 ) )
0062ee e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 197 ) )
0062ef e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 197 ) )
                 	__POINTD1FN _0x160000,197
0062f0 940e da29 	CALL __PUTPARD1
                +
0062f2 e0e8     +LDI R30 , LOW ( 0x8 )
0062f3 e0f0     +LDI R31 , HIGH ( 0x8 )
0062f4 e060     +LDI R22 , BYTE3 ( 0x8 )
0062f5 e070     +LDI R23 , BYTE4 ( 0x8 )
                 	__GETD1N 0x8
0062f6 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 004C                                         return -2;
0062f8 efee      	LDI  R30,LOW(65534)
0062f9 efff      	LDI  R31,HIGH(65534)
0062fa c394      	RJMP _0x20E0074
                 ; 000B 004D                                     }
                 ; 000B 004E 
                 ; 000B 004F                                     res = getOperatingConfig((struct oper_cnfg_st *) cnfgStrc);
                 _0x160017:
0062fb 81ae      	LDD  R26,Y+6
0062fc 81bf      	LDD  R27,Y+6+1
0062fd 940e 4853 	CALL _getOperatingConfig
0062ff 019f      	MOVW R18,R30
                 ; 000B 0050                                     if(res < 0){
006300 2333      	TST  R19
006301 f45a      	BRPL _0x160018
                 ; 000B 0051                                         printDebug("<configRead> getOperatingConfig() failed\r\n");
                +
006302 ece3     +LDI R30 , LOW ( 2 * _0x160000 + ( 251 ) )
006303 e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 251 ) )
006304 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 251 ) )
006305 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 251 ) )
                 	__POINTD1FN _0x160000,251
006306 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0052                                         free ( cnfgStrc );
006308 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 0053                                         return -3;
00630a efed      	LDI  R30,LOW(65533)
00630b efff      	LDI  R31,HIGH(65533)
00630c c382      	RJMP _0x20E0074
                 ; 000B 0054                                     }
                 ; 000B 0055 
                 ; 000B 0056                                     printDebug("\r\n--- READ CONF_OPERATE ---\r\n");
                 _0x160018:
                +
00630d eeee     +LDI R30 , LOW ( 2 * _0x160000 + ( 294 ) )
00630e e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 294 ) )
00630f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 294 ) )
006310 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 294 ) )
                 	__POINTD1FN _0x160000,294
006311 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0057                                     printDebug("mode            [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->mode);
                +
006313 e0ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 324 ) )
006314 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 324 ) )
006315 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 324 ) )
006316 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 324 ) )
                 	__POINTD1FN _0x160000,324
006317 940e c328 	CALL SUBOPT_0x129
006319 91ec      	LD   R30,X
00631a 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0058                                     printDebug("deviceEnable    [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->deviceEnable);
                +
00631c e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 351 ) )
00631d e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 351 ) )
00631e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 351 ) )
00631f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 351 ) )
                 	__POINTD1FN _0x160000,351
006320 940e c32d 	CALL SUBOPT_0x12A
006322 81e1      	LDD  R30,Z+1
006323 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0059                                     printDebug("alarmEnable     [0x%02X]\r\n",((struct oper_cnfg_st *)cnfgStrc)->alarmEnable);
006325 940e c78d 	CALL SUBOPT_0x1E1
006327 81e2      	LDD  R30,Z+2
006328 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 005A                                     printDebug("sensorEnable    ");
                +
00632a e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 405 ) )
00632b e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 405 ) )
00632c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 405 ) )
00632d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 405 ) )
                 	__POINTD1FN _0x160000,405
00632e 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 005B                                     for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
006330 e000     +LDI R16 , LOW ( 0 )
006331 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x16001A:
                +
006332 3005     +CPI R16 , LOW ( 5 )
006333 e0e0     +LDI R30 , HIGH ( 5 )
006334 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
006335 f474      	BRGE _0x16001B
                 ; 000B 005C                                         printDebug("[0x%02X]",((struct oper_cnfg_st *)cnfgStrc)->sensorEnable[i]);
006336 940e c792 	CALL SUBOPT_0x1E2
006338 940e c268 	CALL SUBOPT_0x108
                 ; 000B 005D                                         if(i == (MAX_SENS_CHANNEL-1)){
00633a e0e4      	LDI  R30,LOW(4)
00633b e0f0      	LDI  R31,HIGH(4)
00633c 17e0      	CP   R30,R16
00633d 07f1      	CPC  R31,R17
00633e f411      	BRNE _0x16001C
                 ; 000B 005E                                             printDebug("\r\n");
00633f 940e c797 	CALL SUBOPT_0x1E3
                 ; 000B 005F                                         }
                 ; 000B 0060                                     }
                 _0x16001C:
                +
006341 5f0f     +SUBI R16 , LOW ( - 1 )
006342 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006343 cfee      	RJMP _0x16001A
                 _0x16001B:
                 ; 000B 0061 
                 ; 000B 0062 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0063 //                                    print_payload((char *)cnfgStrc, sizeof(struct oper_cnfg_st));
                 ; 000B 0064 
                 ; 000B 0065                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct oper_cnfg_st));
006344 940e c782 	CALL SUBOPT_0x1DE
006346 e0a8      	LDI  R26,LOW(8)
006347 940e c70f 	CALL SUBOPT_0x1CB
                 ; 000B 0066 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0067 //                                    print_payload((char *)ptr, sizeof(struct oper_cnfg_st));
                 ; 000B 0068 
                 ; 000B 0069                                     free ( cnfgStrc );
006349 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 006A 
                 ; 000B 006B                                     return sizeof(struct oper_cnfg_st);
00634b e0e8      	LDI  R30,LOW(8)
00634c e0f0      	LDI  R31,HIGH(8)
00634d c341      	RJMP _0x20E0074
                 ; 000B 006C 
                 ; 000B 006D         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160016:
00634e 33e0      	CPI  R30,LOW(0x30)
00634f e0a0      	LDI  R26,HIGH(0x30)
006350 07fa      	CPC  R31,R26
006351 f011      	BREQ PC+3
006352 940c 640f 	JMP _0x16001D
006354 940e c79d 	CALL SUBOPT_0x1E4
                 ; 000B 006E 
                 ; 000B 006F                                     cnfgStrc = malloc (sizeof(struct sens_cnfg_st));
006356 e1ad      	LDI  R26,LOW(29)
006357 940e c7a4 	CALL SUBOPT_0x1E5
                 ; 000B 0070                                     if(cnfgStrc == NULL){
006359 f479      	BRNE _0x16001E
                 ; 000B 0071                                         printDebug("<configRead> CONF_SENSOR malloc1 failed (%d bytes)\r\n",sizeof(struct sens_cnfg_st));
                +
00635a e7e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 431 ) )
00635b e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 431 ) )
00635c e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 431 ) )
00635d e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 431 ) )
                 	__POINTD1FN _0x160000,431
00635e 940e da29 	CALL __PUTPARD1
                +
006360 e1ed     +LDI R30 , LOW ( 0x1D )
006361 e0f0     +LDI R31 , HIGH ( 0x1D )
006362 e060     +LDI R22 , BYTE3 ( 0x1D )
006363 e070     +LDI R23 , BYTE4 ( 0x1D )
                 	__GETD1N 0x1D
006364 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 0072                                         return -2;
006366 efee      	LDI  R30,LOW(65534)
006367 efff      	LDI  R31,HIGH(65534)
006368 c326      	RJMP _0x20E0074
                 ; 000B 0073                                     }
                 ; 000B 0074 
                 ; 000B 0075                                     res = getSensorConfig(channel, (struct sens_cnfg_st *) cnfgStrc);
                 _0x16001E:
006369 940e c5b7 	CALL SUBOPT_0x194
00636b 85a8      	LDD  R26,Y+8
00636c 85b9      	LDD  R27,Y+8+1
00636d 940e 48c1 	CALL _getSensorConfig
00636f 019f      	MOVW R18,R30
                 ; 000B 0076                                     if(res < 0){
006370 2333      	TST  R19
006371 f45a      	BRPL _0x16001F
                 ; 000B 0077                                         printDebug("<configRead> getSensorConfig() failed\r\n");
                +
006372 eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 484 ) )
006373 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 484 ) )
006374 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 484 ) )
006375 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 484 ) )
                 	__POINTD1FN _0x160000,484
006376 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0078                                         free ( cnfgStrc );
006378 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 0079                                         return -3;
00637a efed      	LDI  R30,LOW(65533)
00637b efff      	LDI  R31,HIGH(65533)
00637c c312      	RJMP _0x20E0074
                 ; 000B 007A                                     }
                 ; 000B 007B 
                 ; 000B 007C                                     printDebug("\r\n--- READ CONF_SENSOR [%d]---\r\n",channel);
                 _0x16001F:
                +
00637d ede4     +LDI R30 , LOW ( 2 * _0x160000 + ( 524 ) )
00637e e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 524 ) )
00637f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 524 ) )
006380 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 524 ) )
                 	__POINTD1FN _0x160000,524
006381 940e c7a6 	CALL SUBOPT_0x1E6
                 ; 000B 007D                                     printDebug("samplingRate    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->samplingRate);
                +
006383 efe5     +LDI R30 , LOW ( 2 * _0x160000 + ( 557 ) )
006384 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 557 ) )
006385 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 557 ) )
006386 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 557 ) )
                 	__POINTD1FN _0x160000,557
006387 940e c328 	CALL SUBOPT_0x129
006389 940e bc7b 	CALL SUBOPT_0x1D
00638b 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 007E                                     printDebug("reOccurrence    [0x%04X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->reOccurrence);
                +
00638d e0ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 580 ) )
00638e e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 580 ) )
00638f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 580 ) )
006390 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 580 ) )
                 	__POINTD1FN _0x160000,580
006391 940e c328 	CALL SUBOPT_0x129
006393 9612      	ADIW R26,2
006394 940e bc7b 	CALL SUBOPT_0x1D
006396 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 007F                                     printDebug("timeStartHour   [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartHour);
                +
006398 e2e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 607 ) )
006399 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 607 ) )
00639a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 607 ) )
00639b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 607 ) )
                 	__POINTD1FN _0x160000,607
00639c 940e c32d 	CALL SUBOPT_0x12A
00639e 81e4      	LDD  R30,Z+4
00639f 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0080                                     printDebug("timeStartMin    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStartMin);
                +
0063a1 e3ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 630 ) )
0063a2 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 630 ) )
0063a3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 630 ) )
0063a4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 630 ) )
                 	__POINTD1FN _0x160000,630
0063a5 940e c32d 	CALL SUBOPT_0x12A
0063a7 81e5      	LDD  R30,Z+5
0063a8 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0081                                     printDebug("timeStopHour    [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopHour);
                +
0063aa e5e5     +LDI R30 , LOW ( 2 * _0x160000 + ( 653 ) )
0063ab e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 653 ) )
0063ac e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 653 ) )
0063ad e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 653 ) )
                 	__POINTD1FN _0x160000,653
0063ae 940e c32d 	CALL SUBOPT_0x12A
0063b0 81e6      	LDD  R30,Z+6
0063b1 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0082                                     printDebug("timeStopMin     [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->timeStopMin);
                +
0063b3 e6ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 676 ) )
0063b4 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 676 ) )
0063b5 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 676 ) )
0063b6 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 676 ) )
                 	__POINTD1FN _0x160000,676
0063b7 940e c32d 	CALL SUBOPT_0x12A
0063b9 81e7      	LDD  R30,Z+7
0063ba 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0083                                     printDebug("alarmEnable     [0x%02X]\r\n",  ((struct sens_cnfg_st *)cnfgStrc)->alarmEnable);
0063bc 940e c78d 	CALL SUBOPT_0x1E1
0063be 85e0      	LDD  R30,Z+8
0063bf 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0084                                     printDebug("lowerLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerLimit);
                +
0063c1 e8e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 699 ) )
0063c2 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 699 ) )
0063c3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 699 ) )
0063c4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 699 ) )
                 	__POINTD1FN _0x160000,699
0063c5 940e c32d 	CALL SUBOPT_0x12A
0063c7 940e c5e6 	CALL SUBOPT_0x19C
0063c9 940e c5e2 	CALL SUBOPT_0x19B
                 ; 000B 0085                                     printDebug("lowerDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerDelay);
                +
0063cb e9ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 722 ) )
0063cc e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 722 ) )
0063cd e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 722 ) )
0063ce e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 722 ) )
                 	__POINTD1FN _0x160000,722
0063cf 940e c328 	CALL SUBOPT_0x129
0063d1 961d      	ADIW R26,13
0063d2 940e bc7b 	CALL SUBOPT_0x1D
0063d4 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 0086                                     printDebug("lowerExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->lowerExtreme);
                +
0063d6 ebe1     +LDI R30 , LOW ( 2 * _0x160000 + ( 745 ) )
0063d7 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 745 ) )
0063d8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 745 ) )
0063d9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 745 ) )
                 	__POINTD1FN _0x160000,745
0063da 940e c32d 	CALL SUBOPT_0x12A
                +
0063dc 85a7     +LDD R26 , Z + 15
0063dd 89b0     +LDD R27 , Z + 15 + 1
0063de 8981     +LDD R24 , Z + 15 + 2
0063df 8992     +LDD R25 , Z + 15 + 3
                 	__GETD2Z 15
0063e0 940e c5e2 	CALL SUBOPT_0x19B
                 ; 000B 0087                                     printDebug("upperLimit      [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperLimit);
                +
0063e2 ece8     +LDI R30 , LOW ( 2 * _0x160000 + ( 768 ) )
0063e3 e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 768 ) )
0063e4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 768 ) )
0063e5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 768 ) )
                 	__POINTD1FN _0x160000,768
0063e6 940e c32d 	CALL SUBOPT_0x12A
                +
0063e8 89a3     +LDD R26 , Z + 19
0063e9 89b4     +LDD R27 , Z + 19 + 1
0063ea 8985     +LDD R24 , Z + 19 + 2
0063eb 8996     +LDD R25 , Z + 19 + 3
                 	__GETD2Z 19
0063ec 940e c5e2 	CALL SUBOPT_0x19B
                 ; 000B 0088                                     printDebug("upperDelay      [%d]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperDelay);
                +
0063ee edef     +LDI R30 , LOW ( 2 * _0x160000 + ( 791 ) )
0063ef e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 791 ) )
0063f0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 791 ) )
0063f1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 791 ) )
                 	__POINTD1FN _0x160000,791
0063f2 940e c328 	CALL SUBOPT_0x129
0063f4 9657      	ADIW R26,23
0063f5 940e bc7b 	CALL SUBOPT_0x1D
0063f7 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 0089                                     printDebug("upperExtreme    [%f]\r\n",      ((struct sens_cnfg_st *)cnfgStrc)->upperExtreme);
                +
0063f9 efe6     +LDI R30 , LOW ( 2 * _0x160000 + ( 814 ) )
0063fa e3f8     +LDI R31 , HIGH ( 2 * _0x160000 + ( 814 ) )
0063fb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 814 ) )
0063fc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 814 ) )
                 	__POINTD1FN _0x160000,814
0063fd 940e c32d 	CALL SUBOPT_0x12A
                +
0063ff 8da1     +LDD R26 , Z + 25
006400 8db2     +LDD R27 , Z + 25 + 1
006401 8d83     +LDD R24 , Z + 25 + 2
006402 8d94     +LDD R25 , Z + 25 + 3
                 	__GETD2Z 25
006403 940e c5e2 	CALL SUBOPT_0x19B
                 ; 000B 008A 
                 ; 000B 008B //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 008C //                                    print_payload((char *)cnfgStrc, sizeof(struct sens_cnfg_st));
                 ; 000B 008D 
                 ; 000B 008E                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct sens_cnfg_st));
006405 940e c782 	CALL SUBOPT_0x1DE
006407 e1ad      	LDI  R26,LOW(29)
006408 940e c70f 	CALL SUBOPT_0x1CB
                 ; 000B 008F //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0090 //                                    print_payload((char *)ptr, sizeof(struct sens_cnfg_st));
                 ; 000B 0091 
                 ; 000B 0092                                     free ( cnfgStrc );
00640a 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 0093 
                 ; 000B 0094                                     return sizeof(struct sens_cnfg_st);
00640c e1ed      	LDI  R30,LOW(29)
00640d e0f0      	LDI  R31,HIGH(29)
00640e c280      	RJMP _0x20E0074
                 ; 000B 0095 
                 ; 000B 0096         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x16001D:
00640f 34e0      	CPI  R30,LOW(0x40)
006410 e0a0      	LDI  R26,HIGH(0x40)
006411 07fa      	CPC  R31,R26
006412 f011      	BREQ PC+3
006413 940c 6458 	JMP _0x160020
006415 940e c79d 	CALL SUBOPT_0x1E4
                 ; 000B 0097 
                 ; 000B 0098                                     cnfgStrc = malloc (sizeof(struct din_cnfg_st));
006417 940e bee3 	CALL SUBOPT_0x76
006419 940e c777 	CALL SUBOPT_0x1DC
                 ; 000B 0099                                     if(cnfgStrc == NULL){
00641b f449      	BRNE _0x160021
                 ; 000B 009A                                         printDebug("<configRead> CONF_AUXDI malloc1 failed (%d bytes)\r\n",sizeof(struct din_cnfg_st));
                +
00641c e0ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 837 ) )
00641d e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 837 ) )
00641e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 837 ) )
00641f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 837 ) )
                 	__POINTD1FN _0x160000,837
006420 940e c7ab 	CALL SUBOPT_0x1E7
                 ; 000B 009B                                         return -2;
006422 efee      	LDI  R30,LOW(65534)
006423 efff      	LDI  R31,HIGH(65534)
006424 c26a      	RJMP _0x20E0074
                 ; 000B 009C                                     }
                 ; 000B 009D 
                 ; 000B 009E                                     res = getAuxDinConfig(channel, (struct din_cnfg_st *) cnfgStrc);
                 _0x160021:
006425 940e c5b7 	CALL SUBOPT_0x194
006427 85a8      	LDD  R26,Y+8
006428 85b9      	LDD  R27,Y+8+1
006429 940e 49a9 	CALL _getAuxDinConfig
00642b 019f      	MOVW R18,R30
                 ; 000B 009F                                     if(res < 0){
00642c 2333      	TST  R19
00642d f45a      	BRPL _0x160022
                 ; 000B 00A0                                         printDebug("<configRead> getAuxDinConfig() failed\r\n");
                +
00642e e4e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 889 ) )
00642f e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 889 ) )
006430 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 889 ) )
006431 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 889 ) )
                 	__POINTD1FN _0x160000,889
006432 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 00A1                                         free ( cnfgStrc );
006434 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 00A2                                         return -3;
006436 efed      	LDI  R30,LOW(65533)
006437 efff      	LDI  R31,HIGH(65533)
006438 c256      	RJMP _0x20E0074
                 ; 000B 00A3                                     }
                 ; 000B 00A4 
                 ; 000B 00A5                                     printDebug("\r\n--- READ CONF_AUXDI [%d]---\r\n",channel);
                 _0x160022:
                +
006439 e6e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 929 ) )
00643a e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 929 ) )
00643b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 929 ) )
00643c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 929 ) )
                 	__POINTD1FN _0x160000,929
00643d 940e c7a6 	CALL SUBOPT_0x1E6
                 ; 000B 00A6                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct din_cnfg_st *)cnfgStrc)->channelEnable);
00643f 940e c7b2 	CALL SUBOPT_0x1E8
006441 91ec      	LD   R30,X
006442 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 00A7                                     printDebug("alarmDelay       [%d]\r\n",     ((struct din_cnfg_st *)cnfgStrc)->alarmDelay);
                +
006444 eae5     +LDI R30 , LOW ( 2 * _0x160000 + ( 989 ) )
006445 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 989 ) )
006446 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 989 ) )
006447 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 989 ) )
                 	__POINTD1FN _0x160000,989
006448 940e c328 	CALL SUBOPT_0x129
00644a 9611      	ADIW R26,1
00644b 940e bc7b 	CALL SUBOPT_0x1D
00644d 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 00A8 
                 ; 000B 00A9 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00AA //                                    print_payload((char *)cnfgStrc, sizeof(struct din_cnfg_st));
                 ; 000B 00AB 
                 ; 000B 00AC                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct din_cnfg_st));
00644f 940e c782 	CALL SUBOPT_0x1DE
006451 940e bee3 	CALL SUBOPT_0x76
006453 940e c787 	CALL SUBOPT_0x1DF
                 ; 000B 00AD //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00AE //                                    print_payload((char *)ptr, sizeof(struct din_cnfg_st));
                 ; 000B 00AF 
                 ; 000B 00B0                                     free ( cnfgStrc );
                 ; 000B 00B1 
                 ; 000B 00B2                                     return sizeof(struct din_cnfg_st);
006455 e0e3      	LDI  R30,LOW(3)
006456 e0f0      	LDI  R31,HIGH(3)
006457 c237      	RJMP _0x20E0074
                 ; 000B 00B3 
                 ; 000B 00B4         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x160020:
006458 35e0      	CPI  R30,LOW(0x50)
006459 e0a0      	LDI  R26,HIGH(0x50)
00645a 07fa      	CPC  R31,R26
00645b f011      	BREQ PC+3
00645c 940c 64be 	JMP _0x160023
00645e 940e c79d 	CALL SUBOPT_0x1E4
                 ; 000B 00B5 
                 ; 000B 00B6                                     cnfgStrc = malloc (sizeof(struct dout_cnfg_st));
006460 e2a6      	LDI  R26,LOW(38)
006461 940e c7a4 	CALL SUBOPT_0x1E5
                 ; 000B 00B7                                     if(cnfgStrc == NULL){
006463 f479      	BRNE _0x160024
                 ; 000B 00B8                                         printDebug("<configRead> CONF_AUXDO malloc1 failed (%d bytes)\r\n",sizeof(struct dout_cnfg_st));
                +
006464 ebed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1013 ) )
006465 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1013 ) )
006466 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1013 ) )
006467 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1013 ) )
                 	__POINTD1FN _0x160000,1013
006468 940e da29 	CALL __PUTPARD1
                +
00646a e2e6     +LDI R30 , LOW ( 0x26 )
00646b e0f0     +LDI R31 , HIGH ( 0x26 )
00646c e060     +LDI R22 , BYTE3 ( 0x26 )
00646d e070     +LDI R23 , BYTE4 ( 0x26 )
                 	__GETD1N 0x26
00646e 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 00B9                                         return -2;
006470 efee      	LDI  R30,LOW(65534)
006471 efff      	LDI  R31,HIGH(65534)
006472 c21c      	RJMP _0x20E0074
                 ; 000B 00BA                                     }
                 ; 000B 00BB 
                 ; 000B 00BC                                     res = getAuxDoutConfig(channel, (struct dout_cnfg_st *) cnfgStrc);
                 _0x160024:
006473 940e c5b7 	CALL SUBOPT_0x194
006475 85a8      	LDD  R26,Y+8
006476 85b9      	LDD  R27,Y+8+1
006477 940e 49df 	CALL _getAuxDoutConfig
006479 019f      	MOVW R18,R30
                 ; 000B 00BD                                     if(res < 0){
00647a 2333      	TST  R19
00647b f45a      	BRPL _0x160025
                 ; 000B 00BE                                         printDebug("<configRead> getAuxDoutConfig() failed\r\n");
                +
00647c efe1     +LDI R30 , LOW ( 2 * _0x160000 + ( 1065 ) )
00647d e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1065 ) )
00647e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1065 ) )
00647f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1065 ) )
                 	__POINTD1FN _0x160000,1065
006480 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 00BF                                         free ( cnfgStrc );
006482 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 00C0                                         return -3;
006484 efed      	LDI  R30,LOW(65533)
006485 efff      	LDI  R31,HIGH(65533)
006486 c208      	RJMP _0x20E0074
                 ; 000B 00C1                                     }
                 ; 000B 00C2 
                 ; 000B 00C3                                     printDebug("\r\n--- READ CONF_AUXDO [%d]---\r\n",channel);
                 _0x160025:
                +
006487 e1ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1106 ) )
006488 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1106 ) )
006489 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1106 ) )
00648a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1106 ) )
                 	__POINTD1FN _0x160000,1106
00648b 940e c7a6 	CALL SUBOPT_0x1E6
                 ; 000B 00C4                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct dout_cnfg_st *)cnfgStrc)->channelEnable);
00648d 940e c7b7 	CALL SUBOPT_0x1E9
00648f 91ec      	LD   R30,X
006490 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 00C5                                     printDebug("stateOnEvent      [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->stateOnEvent);
                +
006492 e5e7     +LDI R30 , LOW ( 2 * _0x160000 + ( 1167 ) )
006493 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1167 ) )
006494 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1167 ) )
006495 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1167 ) )
                 	__POINTD1FN _0x160000,1167
006496 940e c32d 	CALL SUBOPT_0x12A
006498 81e1      	LDD  R30,Z+1
006499 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 00C6                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct dout_cnfg_st *)cnfgStrc)->eventSourceNumber);
00649b 940e c7bc 	CALL SUBOPT_0x1EA
00649d 81e2      	LDD  R30,Z+2
00649e 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 00C7 
                 ; 000B 00C8                                     printDebug("eventSource       ");
0064a0 940e c7c1 	CALL SUBOPT_0x1EB
                 ; 000B 00C9                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0064a2 e000     +LDI R16 , LOW ( 0 )
0064a3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160027:
                +
0064a4 3203     +CPI R16 , LOW ( 35 )
0064a5 e0e0     +LDI R30 , HIGH ( 35 )
0064a6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0064a7 f464      	BRGE _0x160028
                 ; 000B 00CA                                         printDebug("[0x%02X]",((struct dout_cnfg_st *)cnfgStrc)->eventSource[i]);
0064a8 940e c792 	CALL SUBOPT_0x1E2
0064aa 940e c268 	CALL SUBOPT_0x108
                 ; 000B 00CB                                         if(i == (MAX_EVENT_SOURCE-1)){
0064ac 940e c7c7 	CALL SUBOPT_0x1EC
0064ae f411      	BRNE _0x160029
                 ; 000B 00CC                                             printDebug("\r\n");
0064af 940e c797 	CALL SUBOPT_0x1E3
                 ; 000B 00CD                                         }
                 ; 000B 00CE                                     }
                 _0x160029:
                +
0064b1 5f0f     +SUBI R16 , LOW ( - 1 )
0064b2 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0064b3 cff0      	RJMP _0x160027
                 _0x160028:
                 ; 000B 00CF 
                 ; 000B 00D0 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00D1 //                                    print_payload((char *)cnfgStrc, sizeof(struct dout_cnfg_st));
                 ; 000B 00D2 
                 ; 000B 00D3                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct dout_cnfg_st));
0064b4 940e c782 	CALL SUBOPT_0x1DE
0064b6 e2a6      	LDI  R26,LOW(38)
0064b7 940e c70f 	CALL SUBOPT_0x1CB
                 ; 000B 00D4 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00D5 //                                    print_payload((char *)ptr, sizeof(struct dout_cnfg_st));
                 ; 000B 00D6 
                 ; 000B 00D7                                     free ( cnfgStrc );
0064b9 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 00D8 
                 ; 000B 00D9                                     return sizeof(struct dout_cnfg_st);
0064bb e2e6      	LDI  R30,LOW(38)
0064bc e0f0      	LDI  R31,HIGH(38)
0064bd c1d1      	RJMP _0x20E0074
                 ; 000B 00DA 
                 ; 000B 00DB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x160023:
0064be 36e0      	CPI  R30,LOW(0x60)
0064bf e0a0      	LDI  R26,HIGH(0x60)
0064c0 07fa      	CPC  R31,R26
0064c1 f011      	BREQ PC+3
0064c2 940c 650a 	JMP _0x16002A
0064c4 940e c79d 	CALL SUBOPT_0x1E4
                 ; 000B 00DC 
                 ; 000B 00DD                                     cnfgStrc = malloc (sizeof(struct ain_cnfg_st));
0064c6 e0a5      	LDI  R26,LOW(5)
0064c7 940e c7a4 	CALL SUBOPT_0x1E5
                 ; 000B 00DE                                     if(cnfgStrc == NULL){
0064c9 f479      	BRNE _0x16002B
                 ; 000B 00DF                                         printDebug("<configRead> CONF_AUXAI malloc1 failed (%d bytes)\r\n",sizeof(struct ain_cnfg_st));
                +
0064ca e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 1236 ) )
0064cb e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1236 ) )
0064cc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1236 ) )
0064cd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1236 ) )
                 	__POINTD1FN _0x160000,1236
0064ce 940e da29 	CALL __PUTPARD1
                +
0064d0 e0e5     +LDI R30 , LOW ( 0x5 )
0064d1 e0f0     +LDI R31 , HIGH ( 0x5 )
0064d2 e060     +LDI R22 , BYTE3 ( 0x5 )
0064d3 e070     +LDI R23 , BYTE4 ( 0x5 )
                 	__GETD1N 0x5
0064d4 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 00E0                                         return -2;
0064d6 efee      	LDI  R30,LOW(65534)
0064d7 efff      	LDI  R31,HIGH(65534)
0064d8 c1b6      	RJMP _0x20E0074
                 ; 000B 00E1                                     }
                 ; 000B 00E2 
                 ; 000B 00E3                                     res = getAuxAinConfig(channel, (struct ain_cnfg_st *) cnfgStrc);
                 _0x16002B:
0064d9 940e c5b7 	CALL SUBOPT_0x194
0064db 85a8      	LDD  R26,Y+8
0064dc 85b9      	LDD  R27,Y+8+1
0064dd 940e 4a79 	CALL _getAuxAinConfig
0064df 019f      	MOVW R18,R30
                 ; 000B 00E4                                     if(res < 0){
0064e0 2333      	TST  R19
0064e1 f45a      	BRPL _0x16002C
                 ; 000B 00E5                                         printDebug("<configRead> getAuxAinConfig() failed\r\n");
                +
0064e2 ede0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1288 ) )
0064e3 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1288 ) )
0064e4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1288 ) )
0064e5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1288 ) )
                 	__POINTD1FN _0x160000,1288
0064e6 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 00E6                                         free ( cnfgStrc );
0064e8 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 00E7                                         return -3;
0064ea efed      	LDI  R30,LOW(65533)
0064eb efff      	LDI  R31,HIGH(65533)
0064ec c1a2      	RJMP _0x20E0074
                 ; 000B 00E8                                     }
                 ; 000B 00E9 
                 ; 000B 00EA                                     printDebug("\r\n--- READ CONF_AUXAI [%d]---\r\n",channel);
                 _0x16002C:
                +
0064ed efe8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1328 ) )
0064ee e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1328 ) )
0064ef e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1328 ) )
0064f0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1328 ) )
                 	__POINTD1FN _0x160000,1328
0064f1 940e c7a6 	CALL SUBOPT_0x1E6
                 ; 000B 00EB                                     printDebug("channelEnable    [0x%02X]\r\n", ((struct ain_cnfg_st *)cnfgStrc)->channelEnable);
0064f3 940e c7b2 	CALL SUBOPT_0x1E8
0064f5 91ec      	LD   R30,X
0064f6 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 00EC                                     printDebug("alarmDelay       [%f]\r\n",     ((struct ain_cnfg_st *)cnfgStrc)->alarmLevel);
                +
0064f8 e1e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1360 ) )
0064f9 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1360 ) )
0064fa e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1360 ) )
0064fb e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1360 ) )
                 	__POINTD1FN _0x160000,1360
0064fc 940e c32d 	CALL SUBOPT_0x12A
0064fe 940e c7cc 	CALL SUBOPT_0x1ED
                 ; 000B 00ED 
                 ; 000B 00EE //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 00EF //                                    print_payload((char *)cnfgStrc, sizeof(struct ain_cnfg_st));
                 ; 000B 00F0 
                 ; 000B 00F1                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct ain_cnfg_st));
006500 940e c782 	CALL SUBOPT_0x1DE
006502 e0a5      	LDI  R26,LOW(5)
006503 940e c70f 	CALL SUBOPT_0x1CB
                 ; 000B 00F2 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 00F3 //                                    print_payload((char *)ptr, sizeof(struct ain_cnfg_st));
                 ; 000B 00F4 
                 ; 000B 00F5                                     free ( cnfgStrc );
006505 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 00F6 
                 ; 000B 00F7                                     return sizeof(struct ain_cnfg_st);
006507 e0e5      	LDI  R30,LOW(5)
006508 e0f0      	LDI  R31,HIGH(5)
006509 c185      	RJMP _0x20E0074
                 ; 000B 00F8 
                 ; 000B 00F9         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16002A:
00650a 37e0      	CPI  R30,LOW(0x70)
00650b e0a0      	LDI  R26,HIGH(0x70)
00650c 07fa      	CPC  R31,R26
00650d f011      	BREQ PC+3
00650e 940c 6573 	JMP _0x16002D
006510 940e c79d 	CALL SUBOPT_0x1E4
                 ; 000B 00FA 
                 ; 000B 00FB                                     cnfgStrc = malloc (sizeof(struct aout_cnfg_st));
006512 e2a9      	LDI  R26,LOW(41)
006513 940e c7a4 	CALL SUBOPT_0x1E5
                 ; 000B 00FC                                     if(cnfgStrc == NULL){
006515 f479      	BRNE _0x16002E
                 ; 000B 00FD                                         printDebug("<configRead> CONF_AUXAO malloc1 failed (%d bytes)\r\n",sizeof(struct aout_cnfg_st));
                +
006516 e3e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1384 ) )
006517 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1384 ) )
006518 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1384 ) )
006519 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1384 ) )
                 	__POINTD1FN _0x160000,1384
00651a 940e da29 	CALL __PUTPARD1
                +
00651c e2e9     +LDI R30 , LOW ( 0x29 )
00651d e0f0     +LDI R31 , HIGH ( 0x29 )
00651e e060     +LDI R22 , BYTE3 ( 0x29 )
00651f e070     +LDI R23 , BYTE4 ( 0x29 )
                 	__GETD1N 0x29
006520 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 00FE                                         return -2;
006522 efee      	LDI  R30,LOW(65534)
006523 efff      	LDI  R31,HIGH(65534)
006524 c16a      	RJMP _0x20E0074
                 ; 000B 00FF                                     }
                 ; 000B 0100 
                 ; 000B 0101                                     res = getAuxAoutConfig(channel, (struct aout_cnfg_st *) cnfgStrc);
                 _0x16002E:
006525 940e c5b7 	CALL SUBOPT_0x194
006527 85a8      	LDD  R26,Y+8
006528 85b9      	LDD  R27,Y+8+1
006529 940e 4ab4 	CALL _getAuxAoutConfig
00652b 019f      	MOVW R18,R30
                 ; 000B 0102                                     if(res < 0){
00652c 2333      	TST  R19
00652d f45a      	BRPL _0x16002F
                 ; 000B 0103                                         printDebug("<configRead> getAuxAoutConfig() failed\r\n");
                +
00652e e6e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1436 ) )
00652f e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1436 ) )
006530 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1436 ) )
006531 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1436 ) )
                 	__POINTD1FN _0x160000,1436
006532 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0104                                         free ( cnfgStrc );
006534 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 0105                                         return -3;
006536 efed      	LDI  R30,LOW(65533)
006537 efff      	LDI  R31,HIGH(65533)
006538 c156      	RJMP _0x20E0074
                 ; 000B 0106                                     }
                 ; 000B 0107 
                 ; 000B 0108                                     printDebug("\r\n--- READ CONF_AUXAO [%d]---\r\n",channel);
                 _0x16002F:
                +
006539 e8ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1477 ) )
00653a e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1477 ) )
00653b e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1477 ) )
00653c e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1477 ) )
                 	__POINTD1FN _0x160000,1477
00653d 940e c7a6 	CALL SUBOPT_0x1E6
                 ; 000B 0109                                     printDebug("channelEnable     [0x%02X]\r\n",    ((struct aout_cnfg_st *)cnfgStrc)->channelEnable);
00653f 940e c7b7 	CALL SUBOPT_0x1E9
006541 91ec      	LD   R30,X
006542 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 010A                                     printDebug("levelOnEvent      [%f]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->levelOnEvent);
                +
006544 eaed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1509 ) )
006545 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1509 ) )
006546 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1509 ) )
006547 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1509 ) )
                 	__POINTD1FN _0x160000,1509
006548 940e c32d 	CALL SUBOPT_0x12A
00654a 940e c7cc 	CALL SUBOPT_0x1ED
                 ; 000B 010B                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct aout_cnfg_st *)cnfgStrc)->eventSourceNumber);
00654c 940e c7bc 	CALL SUBOPT_0x1EA
00654e 81e5      	LDD  R30,Z+5
00654f 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 010C 
                 ; 000B 010D                                     printDebug("eventSource       ");
006551 940e c7c1 	CALL SUBOPT_0x1EB
                 ; 000B 010E                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
006553 e000     +LDI R16 , LOW ( 0 )
006554 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160031:
                +
006555 3203     +CPI R16 , LOW ( 35 )
006556 e0e0     +LDI R30 , HIGH ( 35 )
006557 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
006558 f484      	BRGE _0x160032
                 ; 000B 010F                                         printDebug("[0x%02X]",((struct aout_cnfg_st *)cnfgStrc)->eventSource[i]);
006559 940e c792 	CALL SUBOPT_0x1E2
00655b 9636      	ADIW R30,6
00655c 0fe0      	ADD  R30,R16
00655d 1ff1      	ADC  R31,R17
00655e 81e0      	LD   R30,Z
00655f 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0110                                         if(i == (MAX_EVENT_SOURCE-1)){
006561 940e c7c7 	CALL SUBOPT_0x1EC
006563 f411      	BRNE _0x160033
                 ; 000B 0111                                             printDebug("\r\n");
006564 940e c797 	CALL SUBOPT_0x1E3
                 ; 000B 0112                                         }
                 ; 000B 0113                                     }
                 _0x160033:
                +
006566 5f0f     +SUBI R16 , LOW ( - 1 )
006567 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006568 cfec      	RJMP _0x160031
                 _0x160032:
                 ; 000B 0114 
                 ; 000B 0115 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0116 //                                    print_payload((char *)cnfgStrc, sizeof(struct aout_cnfg_st));
                 ; 000B 0117 
                 ; 000B 0118                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct aout_cnfg_st));
006569 940e c782 	CALL SUBOPT_0x1DE
00656b e2a9      	LDI  R26,LOW(41)
00656c 940e c70f 	CALL SUBOPT_0x1CB
                 ; 000B 0119 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 011A //                                    print_payload((char *)ptr, sizeof(struct aout_cnfg_st));
                 ; 000B 011B 
                 ; 000B 011C                                     free ( cnfgStrc );
00656e 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 011D 
                 ; 000B 011E                                     return sizeof(struct aout_cnfg_st);
006570 e2e9      	LDI  R30,LOW(41)
006571 e0f0      	LDI  R31,HIGH(41)
006572 c11c      	RJMP _0x20E0074
                 ; 000B 011F 
                 ; 000B 0120         case CONF_BUZZER        :   cnfgStrc = malloc (sizeof(struct buzz_cnfg_st));
                 _0x16002D:
006573 38e0      	CPI  R30,LOW(0x80)
006574 e0a0      	LDI  R26,HIGH(0x80)
006575 07fa      	CPC  R31,R26
006576 f011      	BREQ PC+3
006577 940c 65d2 	JMP _0x160034
006579 e2a5      	LDI  R26,LOW(37)
00657a 940e c7a4 	CALL SUBOPT_0x1E5
                 ; 000B 0121                                     if(cnfgStrc == NULL){
00657c f479      	BRNE _0x160035
                 ; 000B 0122                                         printDebug("<configRead> CONF_BUZZER malloc1 failed (%d bytes)\r\n",sizeof(struct buzz_cnfg_st));
                +
00657d ece6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1534 ) )
00657e e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1534 ) )
00657f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1534 ) )
006580 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1534 ) )
                 	__POINTD1FN _0x160000,1534
006581 940e da29 	CALL __PUTPARD1
                +
006583 e2e5     +LDI R30 , LOW ( 0x25 )
006584 e0f0     +LDI R31 , HIGH ( 0x25 )
006585 e060     +LDI R22 , BYTE3 ( 0x25 )
006586 e070     +LDI R23 , BYTE4 ( 0x25 )
                 	__GETD1N 0x25
006587 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 0123                                         return -2;
006589 efee      	LDI  R30,LOW(65534)
00658a efff      	LDI  R31,HIGH(65534)
00658b c103      	RJMP _0x20E0074
                 ; 000B 0124                                     }
                 ; 000B 0125 
                 ; 000B 0126                                     res = getBuzzerConfig((struct buzz_cnfg_st *) cnfgStrc);
                 _0x160035:
00658c 81ae      	LDD  R26,Y+6
00658d 81bf      	LDD  R27,Y+6+1
00658e 940e 4b39 	CALL _getBuzzerConfig
006590 019f      	MOVW R18,R30
                 ; 000B 0127                                     if(res < 0){
006591 2333      	TST  R19
006592 f45a      	BRPL _0x160036
                 ; 000B 0128                                         printDebug("<configRead> getBuzzerConfig() failed\r\n");
                +
006593 efeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 1587 ) )
006594 e3fb     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1587 ) )
006595 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1587 ) )
006596 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1587 ) )
                 	__POINTD1FN _0x160000,1587
006597 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0129                                         free ( cnfgStrc );
006599 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 012A                                         return -3;
00659b efed      	LDI  R30,LOW(65533)
00659c efff      	LDI  R31,HIGH(65533)
00659d c0f1      	RJMP _0x20E0074
                 ; 000B 012B                                     }
                 ; 000B 012C 
                 ; 000B 012D                                     printDebug("\r\n--- READ CONF_BUZZER ---\r\n");
                 _0x160036:
                +
00659e e2e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1627 ) )
00659f e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1627 ) )
0065a0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1627 ) )
0065a1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1627 ) )
                 	__POINTD1FN _0x160000,1627
0065a2 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 012E                                     printDebug("enable            [0x%02X]\r\n",    ((struct buzz_cnfg_st *)cnfgStrc)->enable);
                +
0065a4 e4e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1656 ) )
0065a5 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1656 ) )
0065a6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1656 ) )
0065a7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1656 ) )
                 	__POINTD1FN _0x160000,1656
0065a8 940e c328 	CALL SUBOPT_0x129
0065aa 91ec      	LD   R30,X
0065ab 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 012F                                     printDebug("eventSourceNumber [%d]\r\n",        ((struct buzz_cnfg_st *)cnfgStrc)->eventSourceNumber);
0065ad 940e c7bc 	CALL SUBOPT_0x1EA
0065af 81e1      	LDD  R30,Z+1
0065b0 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0130 
                 ; 000B 0131                                     printDebug("eventSource       ");
0065b2 940e c7c1 	CALL SUBOPT_0x1EB
                 ; 000B 0132                                     for(i=0;i<MAX_EVENT_SOURCE;i++){
                +
0065b4 e000     +LDI R16 , LOW ( 0 )
0065b5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x160038:
                +
0065b6 3203     +CPI R16 , LOW ( 35 )
0065b7 e0e0     +LDI R30 , HIGH ( 35 )
0065b8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,35
0065b9 f474      	BRGE _0x160039
                 ; 000B 0133                                         printDebug("[0x%02X]",((struct buzz_cnfg_st *)cnfgStrc)->eventSource[i]);
0065ba 940e c792 	CALL SUBOPT_0x1E2
0065bc 940e c337 	CALL SUBOPT_0x12C
0065be 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0134                                         if(i == (MAX_EVENT_SOURCE - 1)){
0065c0 940e c7c7 	CALL SUBOPT_0x1EC
0065c2 f411      	BRNE _0x16003A
                 ; 000B 0135                                             printDebug("\r\n");
0065c3 940e c797 	CALL SUBOPT_0x1E3
                 ; 000B 0136                                         }
                 ; 000B 0137                                     }
                 _0x16003A:
                +
0065c5 5f0f     +SUBI R16 , LOW ( - 1 )
0065c6 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0065c7 cfee      	RJMP _0x160038
                 _0x160039:
                 ; 000B 0138 
                 ; 000B 0139 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 013A //                                    print_payload((char *)cnfgStrc, sizeof(struct buzz_cnfg_st));
                 ; 000B 013B 
                 ; 000B 013C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct buzz_cnfg_st));
0065c8 940e c782 	CALL SUBOPT_0x1DE
0065ca e2a5      	LDI  R26,LOW(37)
0065cb 940e c70f 	CALL SUBOPT_0x1CB
                 ; 000B 013D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 013E //                                    print_payload((char *)ptr, sizeof(struct buzz_cnfg_st));
                 ; 000B 013F 
                 ; 000B 0140                                     free ( cnfgStrc );
0065cd 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 0141 
                 ; 000B 0142                                     return sizeof(struct buzz_cnfg_st);
0065cf e2e5      	LDI  R30,LOW(37)
0065d0 e0f0      	LDI  R31,HIGH(37)
0065d1 c0bd      	RJMP _0x20E0074
                 ; 000B 0143 
                 ; 000B 0144         case CONF_ENVALARM      :   cnfgStrc = malloc (sizeof(struct alm_cnfg_st));
                 _0x160034:
0065d2 39e0      	CPI  R30,LOW(0x90)
0065d3 e0a0      	LDI  R26,HIGH(0x90)
0065d4 07fa      	CPC  R31,R26
0065d5 f011      	BREQ PC+3
0065d6 940c 6642 	JMP _0x16003B
0065d8 e1a2      	LDI  R26,LOW(18)
0065d9 940e c7a4 	CALL SUBOPT_0x1E5
                 ; 000B 0145                                     if(cnfgStrc == NULL){
0065db f479      	BRNE _0x16003C
                 ; 000B 0146                                         printDebug("<configRead> CONF_ENVALARM malloc1 failed (%d bytes)\r\n",sizeof(struct alm_cnfg_st));
                +
0065dc e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 1685 ) )
0065dd e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1685 ) )
0065de e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1685 ) )
0065df e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1685 ) )
                 	__POINTD1FN _0x160000,1685
0065e0 940e da29 	CALL __PUTPARD1
                +
0065e2 e1e2     +LDI R30 , LOW ( 0x12 )
0065e3 e0f0     +LDI R31 , HIGH ( 0x12 )
0065e4 e060     +LDI R22 , BYTE3 ( 0x12 )
0065e5 e070     +LDI R23 , BYTE4 ( 0x12 )
                 	__GETD1N 0x12
0065e6 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 0147                                         return -2;
0065e8 efee      	LDI  R30,LOW(65534)
0065e9 efff      	LDI  R31,HIGH(65534)
0065ea c0a4      	RJMP _0x20E0074
                 ; 000B 0148                                     }
                 ; 000B 0149 
                 ; 000B 014A                                     res = getEnvAlarmConfig((struct alm_cnfg_st *) cnfgStrc);
                 _0x16003C:
0065eb 81ae      	LDD  R26,Y+6
0065ec 81bf      	LDD  R27,Y+6+1
0065ed 940e 4bd0 	CALL _getEnvAlarmConfig
0065ef 019f      	MOVW R18,R30
                 ; 000B 014B                                     if(res < 0){
0065f0 2333      	TST  R19
0065f1 f45a      	BRPL _0x16003D
                 ; 000B 014C                                         printDebug("<configRead> getEnvAlarmConfig() failed\r\n");
                +
0065f2 e9e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 1740 ) )
0065f3 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1740 ) )
0065f4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1740 ) )
0065f5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1740 ) )
                 	__POINTD1FN _0x160000,1740
0065f6 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 014D                                         free ( cnfgStrc );
0065f8 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 014E                                         return -3;
0065fa efed      	LDI  R30,LOW(65533)
0065fb efff      	LDI  R31,HIGH(65533)
0065fc c092      	RJMP _0x20E0074
                 ; 000B 014F                                     }
                 ; 000B 0150 
                 ; 000B 0151                                     printDebug("\r\n--- READ CONF_ENVALARM ---\r\n");
                 _0x16003D:
                +
0065fd ebee     +LDI R30 , LOW ( 2 * _0x160000 + ( 1782 ) )
0065fe e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1782 ) )
0065ff e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1782 ) )
006600 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1782 ) )
                 	__POINTD1FN _0x160000,1782
006601 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0152                                     printDebug("gsmRSSILevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmRSSILevel);
                +
006603 eded     +LDI R30 , LOW ( 2 * _0x160000 + ( 1813 ) )
006604 e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1813 ) )
006605 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1813 ) )
006606 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1813 ) )
                 	__POINTD1FN _0x160000,1813
006607 940e c328 	CALL SUBOPT_0x129
006609 940e c341 	CALL SUBOPT_0x12E
                 ; 000B 0153                                     printDebug("gsmCreditBalance  [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->gsmCreditBalance);
                +
00660b efe6     +LDI R30 , LOW ( 2 * _0x160000 + ( 1838 ) )
00660c e3fc     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1838 ) )
00660d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1838 ) )
00660e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1838 ) )
                 	__POINTD1FN _0x160000,1838
00660f 940e c328 	CALL SUBOPT_0x129
006611 9614      	ADIW R26,4
006612 940e c346 	CALL SUBOPT_0x12F
                 ; 000B 0154                                     printDebug("batteryLevel      [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->batteryLevel);
                +
006614 e0ef     +LDI R30 , LOW ( 2 * _0x160000 + ( 1863 ) )
006615 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1863 ) )
006616 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1863 ) )
006617 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1863 ) )
                 	__POINTD1FN _0x160000,1863
006618 940e c32d 	CALL SUBOPT_0x12A
00661a 940e c34e 	CALL SUBOPT_0x131
                 ; 000B 0155                                     printDebug("commSignalLevel   [%f]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commSignalLevel);
                +
00661c e2e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 1888 ) )
00661d e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1888 ) )
00661e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1888 ) )
00661f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1888 ) )
                 	__POINTD1FN _0x160000,1888
006620 940e c32d 	CALL SUBOPT_0x12A
006622 940e c355 	CALL SUBOPT_0x132
                 ; 000B 0156                                     printDebug("commLostDelay     [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->commLostDelay);
                +
006624 e4e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 1913 ) )
006625 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1913 ) )
006626 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1913 ) )
006627 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1913 ) )
                 	__POINTD1FN _0x160000,1913
006628 940e c328 	CALL SUBOPT_0x129
00662a 961e      	ADIW R26,14
00662b 940e c346 	CALL SUBOPT_0x12F
                 ; 000B 0157                                     printDebug("memoryMin         [%d]\r\n",((struct alm_cnfg_st *)cnfgStrc)->memoryMin);
                +
00662d e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1938 ) )
00662e e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1938 ) )
00662f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1938 ) )
006630 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1938 ) )
                 	__POINTD1FN _0x160000,1938
006631 940e c328 	CALL SUBOPT_0x129
006633 9650      	ADIW R26,16
006634 940e bc7b 	CALL SUBOPT_0x1D
006636 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 0158 
                 ; 000B 0159 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 015A //                                    print_payload((char *)cnfgStrc, sizeof(struct alm_cnfg_st));
                 ; 000B 015B 
                 ; 000B 015C                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct alm_cnfg_st));
006638 940e c782 	CALL SUBOPT_0x1DE
00663a e1a2      	LDI  R26,LOW(18)
00663b 940e c70f 	CALL SUBOPT_0x1CB
                 ; 000B 015D //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 015E //                                    print_payload((char *)ptr, sizeof(struct alm_cnfg_st));
                 ; 000B 015F 
                 ; 000B 0160                                     free ( cnfgStrc );
00663d 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 0161 
                 ; 000B 0162                                     return sizeof(struct alm_cnfg_st);
00663f e1e2      	LDI  R30,LOW(18)
006640 e0f0      	LDI  R31,HIGH(18)
006641 c04d      	RJMP _0x20E0074
                 ; 000B 0163         case CONF_STATREPORT    :   cnfgStrc = malloc (sizeof(struct stat_cnfg_st));
                 _0x16003B:
006642 3ae0      	CPI  R30,LOW(0xA0)
006643 e0a0      	LDI  R26,HIGH(0xA0)
006644 07fa      	CPC  R31,R26
006645 f011      	BREQ PC+3
006646 940c 6688 	JMP _0x160041
006648 940e bee3 	CALL SUBOPT_0x76
00664a 940e c777 	CALL SUBOPT_0x1DC
                 ; 000B 0164                                     if(cnfgStrc == NULL){
00664c f449      	BRNE _0x16003F
                 ; 000B 0165                                         printDebug("<configRead> CONF_STATREPORT malloc1 failed (%d bytes)\r\n",sizeof(struct stat_cnfg_st));
                +
00664d e7e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 1963 ) )
00664e e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1963 ) )
00664f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1963 ) )
006650 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1963 ) )
                 	__POINTD1FN _0x160000,1963
006651 940e c7ab 	CALL SUBOPT_0x1E7
                 ; 000B 0166                                         return -2;
006653 efee      	LDI  R30,LOW(65534)
006654 efff      	LDI  R31,HIGH(65534)
006655 c039      	RJMP _0x20E0074
                 ; 000B 0167                                     }
                 ; 000B 0168 
                 ; 000B 0169                                     res = getStatusReportConfig((struct stat_cnfg_st *) cnfgStrc);
                 _0x16003F:
006656 81ae      	LDD  R26,Y+6
006657 81bf      	LDD  R27,Y+6+1
006658 940e 4c63 	CALL _getStatusReportConfig
00665a 019f      	MOVW R18,R30
                 ; 000B 016A                                     if(res < 0){
00665b 2333      	TST  R19
00665c f45a      	BRPL _0x160040
                 ; 000B 016B                                         printDebug("<configRead> getStatusReportConfig() failed\r\n");
                +
00665d eaec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2020 ) )
00665e e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2020 ) )
00665f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2020 ) )
006660 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2020 ) )
                 	__POINTD1FN _0x160000,2020
006661 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 016C                                         free ( cnfgStrc );
006663 940e c466 	CALL SUBOPT_0x15E
                 ; 000B 016D                                         return -3;
006665 efed      	LDI  R30,LOW(65533)
006666 efff      	LDI  R31,HIGH(65533)
006667 c027      	RJMP _0x20E0074
                 ; 000B 016E                                     }
                 ; 000B 016F 
                 ; 000B 0170                                     printDebug("\r\n--- READ CONF_STATREPORT ---\r\n");
                 _0x160040:
                +
006668 edea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2066 ) )
006669 e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2066 ) )
00666a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2066 ) )
00666b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2066 ) )
                 	__POINTD1FN _0x160000,2066
00666c 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0171                                     printDebug("accm      [0x%02X]\r\n",((struct stat_cnfg_st *)cnfgStrc)->accm);
                +
00666e efeb     +LDI R30 , LOW ( 2 * _0x160000 + ( 2099 ) )
00666f e3fd     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2099 ) )
006670 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2099 ) )
006671 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2099 ) )
                 	__POINTD1FN _0x160000,2099
006672 940e c328 	CALL SUBOPT_0x129
006674 91ec      	LD   R30,X
006675 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 0172                                     printDebug("intv      [%d]\r\n",    ((struct stat_cnfg_st *)cnfgStrc)->intv);
                +
006677 e1e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2120 ) )
006678 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2120 ) )
006679 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2120 ) )
00667a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2120 ) )
                 	__POINTD1FN _0x160000,2120
00667b 940e c328 	CALL SUBOPT_0x129
00667d 9611      	ADIW R26,1
00667e 940e bc7b 	CALL SUBOPT_0x1D
006680 940e c58e 	CALL SUBOPT_0x18B
                 ; 000B 0173 
                 ; 000B 0174 //                                    printDebug("\r\n--- cnfgStrc ---\r\n");
                 ; 000B 0175 //                                    print_payload((char *)cnfgStrc, sizeof(struct stat_cnfg_st));
                 ; 000B 0176 
                 ; 000B 0177                                     memcpy(ptr,(char *) cnfgStrc,sizeof(struct stat_cnfg_st));
006682 940e c782 	CALL SUBOPT_0x1DE
006684 940e bee3 	CALL SUBOPT_0x76
006686 940e c787 	CALL SUBOPT_0x1DF
                 ; 000B 0178 //                                    printDebug("\r\n--- ptr ---\r\n");
                 ; 000B 0179 //                                    print_payload((char *)ptr, sizeof(struct stat_cnfg_st));
                 ; 000B 017A 
                 ; 000B 017B                                     free ( cnfgStrc );
                 ; 000B 017C         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160041:
006688 940e c7d1 	CALL SUBOPT_0x1EE
00668a 2fe5      	MOV  R30,R21
00668b 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 017D                                     return -1;
00668d efef      	LDI  R30,LOW(65535)
00668e efff      	LDI  R31,HIGH(65535)
                 ; 000B 017E     }
                 ; 000B 017F 
                 ; 000B 0180     return 0;
                 _0x20E0074:
00668f 940e daa0 	CALL __LOADLOCR6
006691 962d      	ADIW R28,13
006692 9508      	RET
                 ; 000B 0181 
                 ; 000B 0182 }
                 ;/*============================================================*/
                 ;int configWrite(unsigned char cnfg, unsigned char *conf, int len)
                 ; 000B 0185 {
                 _configWrite:
                 ; 000B 0186     int res = 0;
                 ; 000B 0187     unsigned char   type            = 0x00;
                 ; 000B 0188     int             channel         = 0;
                 ; 000B 0189 
                 ; 000B 018A     type    =   cnfg & 0xF0;
006693 93ba      	ST   -Y,R27
006694 93aa      	ST   -Y,R26
006695 940e bd9f 	CALL SUBOPT_0x46
                 ;	cnfg -> Y+10
                 ;	*conf -> Y+8
                 ;	len -> Y+6
                 ;	res -> R16,R17
                 ;	type -> R19
                 ;	channel -> R20,R21
006697 e030      	LDI  R19,0
                +
006698 e040     +LDI R20 , LOW ( 0 )
006699 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00669a 85ea      	LDD  R30,Y+10
00669b 7fe0      	ANDI R30,LOW(0xF0)
00669c 2f3e      	MOV  R19,R30
                 ; 000B 018B 
                 ; 000B 018C     printDebug("\r\n --- WRITE CONFIG packet (%d)--- \r\n",len);
                +
00669d e5e4     +LDI R30 , LOW ( 2 * _0x160000 + ( 2188 ) )
00669e e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2188 ) )
00669f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2188 ) )
0066a0 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2188 ) )
                 	__POINTD1FN _0x160000,2188
0066a1 940e c32d 	CALL SUBOPT_0x12A
0066a3 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000B 018D     print_payload(conf,len);
0066a5 940e c5b7 	CALL SUBOPT_0x194
0066a7 85a8      	LDD  R26,Y+8
0066a8 85b9      	LDD  R27,Y+8+1
0066a9 940e 9b56 	CALL _print_payload
                 ; 000B 018E 
                 ; 000B 018F     switch( type ){
0066ab 2fe3      	MOV  R30,R19
0066ac 940e bda4 	CALL SUBOPT_0x47
                 ; 000B 0190         case CONF_PROPERTIES    :   printDebug("\r\n--- Write CONF_PROPERTIES ---");
0066ae f4b9      	BRNE _0x160045
                +
0066af e7ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2226 ) )
0066b0 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2226 ) )
0066b1 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2226 ) )
0066b2 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2226 ) )
                 	__POINTD1FN _0x160000,2226
0066b3 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0191 
                 ; 000B 0192                                     res = setPropertiesConfig((struct prop_cnfg_st *)conf);
0066b5 85a8      	LDD  R26,Y+8
0066b6 85b9      	LDD  R27,Y+8+1
0066b7 940e 4ca0 	CALL _setPropertiesConfig
0066b9 018f      	MOVW R16,R30
                 ; 000B 0193                                     if(res < 0){
0066ba 2311      	TST  R17
0066bb f44a      	BRPL _0x160046
                 ; 000B 0194                                         printDebug("<configWrite> setPropertiesConfig() failed\r\n");
                +
0066bc e9ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2258 ) )
0066bd e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2258 ) )
0066be e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2258 ) )
0066bf e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2258 ) )
                 	__POINTD1FN _0x160000,2258
0066c0 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0195                                         return -3;
0066c2 efed      	LDI  R30,LOW(65533)
0066c3 efff      	LDI  R31,HIGH(65533)
0066c4 c107      	RJMP _0x20E0073
                 ; 000B 0196                                     }
                 ; 000B 0197                                     break;
                 _0x160046:
0066c5 c104      	RJMP _0x160044
                 ; 000B 0198         case CONF_OPERATE       :   printDebug("\r\n--- Write CONF_OPERATE ---");
                 _0x160045:
0066c6 32e0      	CPI  R30,LOW(0x20)
0066c7 e0a0      	LDI  R26,HIGH(0x20)
0066c8 07fa      	CPC  R31,R26
0066c9 f4b9      	BRNE _0x160047
                +
0066ca ece7     +LDI R30 , LOW ( 2 * _0x160000 + ( 2303 ) )
0066cb e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2303 ) )
0066cc e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2303 ) )
0066cd e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2303 ) )
                 	__POINTD1FN _0x160000,2303
0066ce 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0199 
                 ; 000B 019A                                     res = setOperatingConfig((struct oper_cnfg_st *)conf);
0066d0 85a8      	LDD  R26,Y+8
0066d1 85b9      	LDD  R27,Y+8+1
0066d2 940e 4d17 	CALL _setOperatingConfig
0066d4 018f      	MOVW R16,R30
                 ; 000B 019B                                     if(res < 0){
0066d5 2311      	TST  R17
0066d6 f44a      	BRPL _0x160048
                 ; 000B 019C                                         printDebug("<configWrite> setOperatingConfig() failed\r\n");
                +
0066d7 eee4     +LDI R30 , LOW ( 2 * _0x160000 + ( 2332 ) )
0066d8 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2332 ) )
0066d9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2332 ) )
0066da e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2332 ) )
                 	__POINTD1FN _0x160000,2332
0066db 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 019D                                         return -3;
0066dd efed      	LDI  R30,LOW(65533)
0066de efff      	LDI  R31,HIGH(65533)
0066df c0ec      	RJMP _0x20E0073
                 ; 000B 019E                                     }
                 ; 000B 019F                                     break;
                 _0x160048:
0066e0 c0e9      	RJMP _0x160044
                 ; 000B 01A0         case CONF_SENSOR        :   channel =   (int)cnfg & 0x000F;
                 _0x160047:
0066e1 33e0      	CPI  R30,LOW(0x30)
0066e2 e0a0      	LDI  R26,HIGH(0x30)
0066e3 07fa      	CPC  R31,R26
0066e4 f4c9      	BRNE _0x160049
0066e5 940e c7d8 	CALL SUBOPT_0x1EF
                 ; 000B 01A1                                     printDebug("\r\n--- Write CONF_SENSOR (%d) ---",channel);
                +
0066e7 e1e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2376 ) )
0066e8 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2376 ) )
0066e9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2376 ) )
0066ea e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2376 ) )
                 	__POINTD1FN _0x160000,2376
0066eb 940e bdac 	CALL SUBOPT_0x49
                 ; 000B 01A2 
                 ; 000B 01A3                                     res = setSensorConfig(channel,(struct sens_cnfg_st *)conf);
0066ed 940e c7de 	CALL SUBOPT_0x1F0
0066ef 940e 4d8d 	CALL _setSensorConfig
0066f1 018f      	MOVW R16,R30
                 ; 000B 01A4                                     if(res < 0){
0066f2 2311      	TST  R17
0066f3 f44a      	BRPL _0x16004A
                 ; 000B 01A5                                         printDebug("<configWrite> setSensorConfig() failed\r\n");
                +
0066f4 e3e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2409 ) )
0066f5 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2409 ) )
0066f6 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2409 ) )
0066f7 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2409 ) )
                 	__POINTD1FN _0x160000,2409
0066f8 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01A6                                         return -3;
0066fa efed      	LDI  R30,LOW(65533)
0066fb efff      	LDI  R31,HIGH(65533)
0066fc c0cf      	RJMP _0x20E0073
                 ; 000B 01A7                                     }
                 ; 000B 01A8                                     break;
                 _0x16004A:
0066fd c0cc      	RJMP _0x160044
                 ; 000B 01A9         case CONF_AUXDI         :   channel =   (int)cnfg & 0x000F;
                 _0x160049:
0066fe 34e0      	CPI  R30,LOW(0x40)
0066ff e0a0      	LDI  R26,HIGH(0x40)
006700 07fa      	CPC  R31,R26
006701 f4c9      	BRNE _0x16004B
006702 940e c7d8 	CALL SUBOPT_0x1EF
                 ; 000B 01AA                                     printDebug("\r\n--- Write CONF_AUXDI (%d) ---",channel);
                +
006704 e5ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2450 ) )
006705 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2450 ) )
006706 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2450 ) )
006707 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2450 ) )
                 	__POINTD1FN _0x160000,2450
006708 940e bdac 	CALL SUBOPT_0x49
                 ; 000B 01AB 
                 ; 000B 01AC                                     res = setAuxDinConfig(channel,(struct din_cnfg_st *)conf);
00670a 940e c7de 	CALL SUBOPT_0x1F0
00670c 940e 4ee8 	CALL _setAuxDinConfig
00670e 018f      	MOVW R16,R30
                 ; 000B 01AD                                     if(res < 0){
00670f 2311      	TST  R17
006710 f44a      	BRPL _0x16004C
                 ; 000B 01AE                                         printDebug("<configWrite> setAuxDinConfig() failed\r\n");
                +
006711 e7ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 2482 ) )
006712 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2482 ) )
006713 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2482 ) )
006714 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2482 ) )
                 	__POINTD1FN _0x160000,2482
006715 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01AF                                         return -3;
006717 efed      	LDI  R30,LOW(65533)
006718 efff      	LDI  R31,HIGH(65533)
006719 c0b2      	RJMP _0x20E0073
                 ; 000B 01B0                                     }
                 ; 000B 01B1                                     break;
                 _0x16004C:
00671a c0af      	RJMP _0x160044
                 ; 000B 01B2         case CONF_AUXDO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004B:
00671b 35e0      	CPI  R30,LOW(0x50)
00671c e0a0      	LDI  R26,HIGH(0x50)
00671d 07fa      	CPC  R31,R26
00671e f4c9      	BRNE _0x16004D
00671f 940e c7d8 	CALL SUBOPT_0x1EF
                 ; 000B 01B3                                     printDebug("\r\n--- Write CONF_AUXDO (%d) ---",channel);
                +
006721 eae3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2523 ) )
006722 e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2523 ) )
006723 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2523 ) )
006724 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2523 ) )
                 	__POINTD1FN _0x160000,2523
006725 940e bdac 	CALL SUBOPT_0x49
                 ; 000B 01B4 
                 ; 000B 01B5                                     res = setAuxDoutConfig(channel,(struct dout_cnfg_st *)conf);
006727 940e c7de 	CALL SUBOPT_0x1F0
006729 940e 4f30 	CALL _setAuxDoutConfig
00672b 018f      	MOVW R16,R30
                 ; 000B 01B6                                     if(res < 0){
00672c 2311      	TST  R17
00672d f44a      	BRPL _0x16004E
                 ; 000B 01B7                                         printDebug("<configWrite> setAuxDoutConfig() failed\r\n");
                +
00672e ece3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2555 ) )
00672f e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2555 ) )
006730 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2555 ) )
006731 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2555 ) )
                 	__POINTD1FN _0x160000,2555
006732 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01B8                                         return -3;
006734 efed      	LDI  R30,LOW(65533)
006735 efff      	LDI  R31,HIGH(65533)
006736 c095      	RJMP _0x20E0073
                 ; 000B 01B9                                     }
                 ; 000B 01BA                                     break;
                 _0x16004E:
006737 c092      	RJMP _0x160044
                 ; 000B 01BB         case CONF_AUXAI         :   channel =   (int)cnfg & 0x000F;
                 _0x16004D:
006738 36e0      	CPI  R30,LOW(0x60)
006739 e0a0      	LDI  R26,HIGH(0x60)
00673a 07fa      	CPC  R31,R26
00673b f4c9      	BRNE _0x16004F
00673c 940e c7d8 	CALL SUBOPT_0x1EF
                 ; 000B 01BC                                     printDebug("\r\n--- Write CONF_AUXAI (%d) ---",channel);
                +
00673e eeed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2597 ) )
00673f e3ff     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2597 ) )
006740 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2597 ) )
006741 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2597 ) )
                 	__POINTD1FN _0x160000,2597
006742 940e bdac 	CALL SUBOPT_0x49
                 ; 000B 01BD 
                 ; 000B 01BE                                     res = setAuxAinConfig(channel,(struct ain_cnfg_st *)conf);
006744 940e c7de 	CALL SUBOPT_0x1F0
006746 940e 4fb6 	CALL _setAuxAinConfig
006748 018f      	MOVW R16,R30
                 ; 000B 01BF                                     if(res < 0){
006749 2311      	TST  R17
00674a f44a      	BRPL _0x160050
                 ; 000B 01C0                                         printDebug("<configWrite> setAuxAinConfig() failed\r\n");
                +
00674b e0ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2629 ) )
00674c e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2629 ) )
00674d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2629 ) )
00674e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2629 ) )
                 	__POINTD1FN _0x160000,2629
00674f 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01C1                                         return -3;
006751 efed      	LDI  R30,LOW(65533)
006752 efff      	LDI  R31,HIGH(65533)
006753 c078      	RJMP _0x20E0073
                 ; 000B 01C2                                     }
                 ; 000B 01C3                                     break;
                 _0x160050:
006754 c075      	RJMP _0x160044
                 ; 000B 01C4         case CONF_AUXAO         :   channel =   (int)cnfg & 0x000F;
                 _0x16004F:
006755 37e0      	CPI  R30,LOW(0x70)
006756 e0a0      	LDI  R26,HIGH(0x70)
006757 07fa      	CPC  R31,R26
006758 f4c9      	BRNE _0x160051
006759 940e c7d8 	CALL SUBOPT_0x1EF
                 ; 000B 01C5                                     printDebug("\r\n--- Write CONF_AUXAO (%d) ---",channel);
                +
00675b e3e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2670 ) )
00675c e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2670 ) )
00675d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2670 ) )
00675e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2670 ) )
                 	__POINTD1FN _0x160000,2670
00675f 940e bdac 	CALL SUBOPT_0x49
                 ; 000B 01C6 
                 ; 000B 01C7                                     res = setAuxAoutConfig(channel,(struct aout_cnfg_st *)conf);
006761 940e c7de 	CALL SUBOPT_0x1F0
006763 940e 4ff6 	CALL _setAuxAoutConfig
006765 018f      	MOVW R16,R30
                 ; 000B 01C8                                     if(res < 0){
006766 2311      	TST  R17
006767 f44a      	BRPL _0x160052
                 ; 000B 01C9                                         printDebug("<configWrite> setAuxAoutConfig() failed\r\n");
                +
006768 e5e6     +LDI R30 , LOW ( 2 * _0x160000 + ( 2702 ) )
006769 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2702 ) )
00676a e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2702 ) )
00676b e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2702 ) )
                 	__POINTD1FN _0x160000,2702
00676c 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01CA                                         return -3;
00676e efed      	LDI  R30,LOW(65533)
00676f efff      	LDI  R31,HIGH(65533)
006770 c05b      	RJMP _0x20E0073
                 ; 000B 01CB                                     }
                 ; 000B 01CC                                     break;
                 _0x160052:
006771 c058      	RJMP _0x160044
                 ; 000B 01CD         case CONF_BUZZER        :   printDebug("\r\n--- Write CONF_BUZZER ---");
                 _0x160051:
006772 38e0      	CPI  R30,LOW(0x80)
006773 e0a0      	LDI  R26,HIGH(0x80)
006774 07fa      	CPC  R31,R26
006775 f4b9      	BRNE _0x160053
                +
006776 e8e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 2744 ) )
006777 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2744 ) )
006778 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2744 ) )
006779 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2744 ) )
                 	__POINTD1FN _0x160000,2744
00677a 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01CE 
                 ; 000B 01CF                                     res = setBuzzerConfig((struct buzz_cnfg_st *)conf);
00677c 85a8      	LDD  R26,Y+8
00677d 85b9      	LDD  R27,Y+8+1
00677e 940e 5089 	CALL _setBuzzerConfig
006780 018f      	MOVW R16,R30
                 ; 000B 01D0                                     if(res < 0){
006781 2311      	TST  R17
006782 f44a      	BRPL _0x160054
                 ; 000B 01D1                                         printDebug("<configWrite> setBuzzerConfig() failed\r\n");
                +
006783 e9ec     +LDI R30 , LOW ( 2 * _0x160000 + ( 2772 ) )
006784 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2772 ) )
006785 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2772 ) )
006786 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2772 ) )
                 	__POINTD1FN _0x160000,2772
006787 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01D2                                         return -3;
006789 efed      	LDI  R30,LOW(65533)
00678a efff      	LDI  R31,HIGH(65533)
00678b c040      	RJMP _0x20E0073
                 ; 000B 01D3                                     }
                 ; 000B 01D4                                     break;
                 _0x160054:
00678c c03d      	RJMP _0x160044
                 ; 000B 01D5         case CONF_ENVALARM      :   printDebug("\r\n--- Write CONF_ENVALARM ---");
                 _0x160053:
00678d 39e0      	CPI  R30,LOW(0x90)
00678e e0a0      	LDI  R26,HIGH(0x90)
00678f 07fa      	CPC  R31,R26
006790 f4b9      	BRNE _0x160055
                +
006791 ece5     +LDI R30 , LOW ( 2 * _0x160000 + ( 2813 ) )
006792 e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2813 ) )
006793 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2813 ) )
006794 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2813 ) )
                 	__POINTD1FN _0x160000,2813
006795 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01D6 
                 ; 000B 01D7                                     res = setEnvAlarmConfig((struct alm_cnfg_st *)conf);
006797 85a8      	LDD  R26,Y+8
006798 85b9      	LDD  R27,Y+8+1
006799 940e 50ef 	CALL _setEnvAlarmConfig
00679b 018f      	MOVW R16,R30
                 ; 000B 01D8                                     if(res < 0){
00679c 2311      	TST  R17
00679d f44a      	BRPL _0x160056
                 ; 000B 01D9                                         printDebug("<configWrite> setEnvAlarmConfig() failed\r\n");
                +
00679e eee3     +LDI R30 , LOW ( 2 * _0x160000 + ( 2843 ) )
00679f e4f0     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2843 ) )
0067a0 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2843 ) )
0067a1 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2843 ) )
                 	__POINTD1FN _0x160000,2843
0067a2 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01DA                                         return -3;
0067a4 efed      	LDI  R30,LOW(65533)
0067a5 efff      	LDI  R31,HIGH(65533)
0067a6 c025      	RJMP _0x20E0073
                 ; 000B 01DB                                     }
                 ; 000B 01DC                                     break;
                 _0x160056:
0067a7 c022      	RJMP _0x160044
                 ; 000B 01DD         case CONF_STATREPORT    :   printDebug("\r\n--- Write CONF_STATREPORT ---");
                 _0x160055:
0067a8 3ae0      	CPI  R30,LOW(0xA0)
0067a9 e0a0      	LDI  R26,HIGH(0xA0)
0067aa 07fa      	CPC  R31,R26
0067ab f4b1      	BRNE _0x160059
                +
0067ac e0ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 2886 ) )
0067ad e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2886 ) )
0067ae e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2886 ) )
0067af e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2886 ) )
                 	__POINTD1FN _0x160000,2886
0067b0 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01DE 
                 ; 000B 01DF                                     res = setStatusReportConfig((struct stat_cnfg_st *)conf);
0067b2 85a8      	LDD  R26,Y+8
0067b3 85b9      	LDD  R27,Y+8+1
0067b4 940e 516c 	CALL _setStatusReportConfig
0067b6 018f      	MOVW R16,R30
                 ; 000B 01E0                                     if(res < 0){
0067b7 2311      	TST  R17
0067b8 f44a      	BRPL _0x160058
                 ; 000B 01E1                                         printDebug("<configWrite> setStatusReportConfig() failed\r\n");
                +
0067b9 e2ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 2918 ) )
0067ba e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2918 ) )
0067bb e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2918 ) )
0067bc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2918 ) )
                 	__POINTD1FN _0x160000,2918
0067bd 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01E2                                         return -3;
0067bf efed      	LDI  R30,LOW(65533)
0067c0 efff      	LDI  R31,HIGH(65533)
0067c1 c00a      	RJMP _0x20E0073
                 ; 000B 01E3                                     }
                 ; 000B 01E4 
                 ; 000B 01E5         default                 :   printDebug("<configRead> unknown configuration type [0x%02X]\r\n",type);
                 _0x160058:
                 _0x160059:
0067c2 940e c7d1 	CALL SUBOPT_0x1EE
0067c4 2fe3      	MOV  R30,R19
0067c5 940e bccc 	CALL SUBOPT_0x29
                 ; 000B 01E6                                     return -1;
0067c7 efef      	LDI  R30,LOW(65535)
0067c8 efff      	LDI  R31,HIGH(65535)
0067c9 c002      	RJMP _0x20E0073
                 ; 000B 01E7     }
                 _0x160044:
                 ; 000B 01E8     return 0;
0067ca e0e0      	LDI  R30,LOW(0)
0067cb e0f0      	LDI  R31,HIGH(0)
                 _0x20E0073:
0067cc 940e daa0 	CALL __LOADLOCR6
0067ce 962b      	ADIW R28,11
0067cf 9508      	RET
                 ; 000B 01E9 }
                 ;/*============================================================*/
                 ;int setLogManipulateSchema(unsigned char accd, unsigned long int tStart, unsigned long int tStop)
                 ; 000B 01EC {
                 _setLogManipulateSchema:
                 ; 000B 01ED     if(tStop < tStart){
0067d0 940e da2e 	CALL __PUTPARD2
                 ;	accd -> Y+8
                 ;	tStart -> Y+4
                 ;	tStop -> Y+0
0067d2 940e bf59 	CALL SUBOPT_0x89
0067d4 940e bf6c 	CALL SUBOPT_0x8C
0067d6 940e da94 	CALL __CPD21
0067d8 f468      	BRSH _0x16005A
                 ; 000B 01EE         printDebug("<setLogManipulateSchema> time period error start[%ld] - stop[%ld]\r\n",tStart,tStop);
                +
0067d9 e5ed     +LDI R30 , LOW ( 2 * _0x160000 + ( 2965 ) )
0067da e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2965 ) )
0067db e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2965 ) )
0067dc e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2965 ) )
                 	__POINTD1FN _0x160000,2965
0067dd 940e c7e3 	CALL SUBOPT_0x1F1
0067df 940e c7e3 	CALL SUBOPT_0x1F1
0067e1 940e bc8a 	CALL SUBOPT_0x20
                 ; 000B 01EF         return -1;
0067e3 efef      	LDI  R30,LOW(65535)
0067e4 efff      	LDI  R31,HIGH(65535)
0067e5 c0e4      	RJMP _0x20E0070
                 ; 000B 01F0     }
                 ; 000B 01F1 
                 ; 000B 01F2     return 0;
                 _0x16005A:
0067e6 e0e0      	LDI  R30,LOW(0)
0067e7 e0f0      	LDI  R31,HIGH(0)
0067e8 c0e1      	RJMP _0x20E0070
                 ; 000B 01F3 }
                 ;/*============================================================*/
                 ;int setTimeSyncSchema(unsigned char *timeData)
                 ; 000B 01F6 {
                 _setTimeSyncSchema:
                 ; 000B 01F7     int res;
                 ; 000B 01F8     unsigned long int unixTime = 0x00000000;
                 ; 000B 01F9 
                 ; 000B 01FA     memcpy(&unixTime,timeData,sizeof(unixTime));
0067e9 940e c774 	CALL SUBOPT_0x1DB
0067eb 931a      	ST   -Y,R17
0067ec 930a      	ST   -Y,R16
                 ;	*timeData -> Y+6
                 ;	res -> R16,R17
                 ;	unixTime -> Y+2
0067ed 940e c7e7 	CALL SUBOPT_0x1F2
0067ef 85e8      	LDD  R30,Y+8
0067f0 85f9      	LDD  R31,Y+8+1
0067f1 940e bdc6 	CALL SUBOPT_0x4D
                 ; 000B 01FB 
                 ; 000B 01FC     if(unixTime == 0){
0067f3 940e c7ec 	CALL SUBOPT_0x1F3
0067f5 f449      	BRNE _0x16005B
                 ; 000B 01FD         printDebug("<setTimeSyncSchema> Got 0 Unix time stamp\r\n");
                +
0067f6 eae1     +LDI R30 , LOW ( 2 * _0x160000 + ( 3033 ) )
0067f7 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3033 ) )
0067f8 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3033 ) )
0067f9 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3033 ) )
                 	__POINTD1FN _0x160000,3033
0067fa 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 01FE         return -1;
0067fc efef      	LDI  R30,LOW(65535)
0067fd efff      	LDI  R31,HIGH(65535)
0067fe c018      	RJMP _0x20E0072
                 ; 000B 01FF     }
                 ; 000B 0200 
                 ; 000B 0201     printDebug("<setTimeSyncSchema> Received time sync. packet %ld\r\n",unixTime);
                 _0x16005B:
                +
0067ff eced     +LDI R30 , LOW ( 2 * _0x160000 + ( 3077 ) )
006800 e4f1     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3077 ) )
006801 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3077 ) )
006802 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3077 ) )
                 	__POINTD1FN _0x160000,3077
006803 940e c7f0 	CALL SUBOPT_0x1F4
                 ; 000B 0202 
                 ; 000B 0203     res = RTC_setBinary( unixTime );
006805 940e c07c 	CALL SUBOPT_0xB6
006807 940e 465e 	CALL _RTC_setBinary
006809 018f      	MOVW R16,R30
                 ; 000B 0204     if( res < 0 ){
00680a 2311      	TST  R17
00680b f44a      	BRPL _0x16005C
                 ; 000B 0205         printDebug("<setTimeSyncSchema> RTC_setBinary(%ld) failed\r\n", unixTime);
                +
00680c e0e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 3130 ) )
00680d e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3130 ) )
00680e e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3130 ) )
00680f e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3130 ) )
                 	__POINTD1FN _0x160000,3130
006810 940e c7f0 	CALL SUBOPT_0x1F4
                 ; 000B 0206         return -1;
006812 efef      	LDI  R30,LOW(65535)
006813 efff      	LDI  R31,HIGH(65535)
006814 c002      	RJMP _0x20E0072
                 ; 000B 0207     }
                 ; 000B 0208 
                 ; 000B 0209     return 0;
                 _0x16005C:
006815 e0e0      	LDI  R30,LOW(0)
006816 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0072:
006817 8119      	LDD  R17,Y+1
006818 8108      	LDD  R16,Y+0
006819 9628      	ADIW R28,8
00681a 9508      	RET
                 ; 000B 020A }
                 ;/*============================================================*/
                 ;int setMuteAlarm(unsigned long int period)
                 ; 000B 020D {
                 _setMuteAlarm:
                 ; 000B 020E     int res;
                 ; 000B 020F 
                 ; 000B 0210     if(period == 0){
00681b 940e c7f4 	CALL SUBOPT_0x1F5
                 ;	period -> Y+2
                 ;	res -> R16,R17
00681d 940e c7ec 	CALL SUBOPT_0x1F3
00681f f439      	BRNE _0x16005D
                 ; 000B 0211         printDebug("<setMuteAlarm> permanent mute alarm\r\n");
                +
006820 e3e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 3178 ) )
006821 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3178 ) )
006822 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3178 ) )
006823 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3178 ) )
                 	__POINTD1FN _0x160000,3178
006824 940e bbba 	CALL SUBOPT_0x3
                 ; 000B 0212     }
                 ; 000B 0213     else if(((period < 300) || (period > 86400))){
006826 c023      	RJMP _0x16005E
                 _0x16005D:
006827 940e c07c 	CALL SUBOPT_0xB6
                +
006829 32ac     +CPI R26 , LOW ( 0x12C )
00682a e0e1     +LDI R30 , HIGH ( 0x12C )
00682b 07be     +CPC R27 , R30
00682c e0e0     +LDI R30 , BYTE3 ( 0x12C )
00682d 078e     +CPC R24 , R30
00682e e0e0     +LDI R30 , BYTE4 ( 0x12C )
00682f 079e     +CPC R25 , R30
                 	__CPD2N 0x12C
006830 f050      	BRLO _0x160060
006831 940e c07c 	CALL SUBOPT_0xB6
                +
006833 38a1     +CPI R26 , LOW ( 0x15181 )
006834 e5e1     +LDI R30 , HIGH ( 0x15181 )
006835 07be     +CPC R27 , R30
006836 e0e1     +LDI R30 , BYTE3 ( 0x15181 )
006837 078e     +CPC R24 , R30
006838 e0e0     +LDI R30 , BYTE4 ( 0x15181 )
006839 079e     +CPC R25 , R30
                 	__CPD2N 0x15181
00683a f048      	BRLO _0x16005F
                 _0x160060:
                 ; 000B 0214         printDebug("<setMuteAlarm> invalid period (%ld)\r\n", period);
                +
00683b e5e8     +LDI R30 , LOW ( 2 * _0x160000 + ( 3216 ) )
00683c e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3216 ) )
00683d e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3216 ) )
00683e e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3216 ) )
                 	__POINTD1FN _0x160000,3216
00683f 940e c7f0 	CALL SUBOPT_0x1F4
                 ; 000B 0215         return -1;
006841 efef      	LDI  R30,LOW(65535)
006842 efff      	LDI  R31,HIGH(65535)
006843 c018      	RJMP _0x20E0071
                 ; 000B 0216     }
                 ; 000B 0217     else{
                 _0x16005F:
                 ; 000B 0218         printDebug("<setMuteAlarm> mute alarm for %ld second\r\n",period);
                +
006844 e7ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 3254 ) )
006845 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3254 ) )
006846 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3254 ) )
006847 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3254 ) )
                 	__POINTD1FN _0x160000,3254
006848 940e c7f0 	CALL SUBOPT_0x1F4
                 ; 000B 0219     }
                 _0x16005E:
                 ; 000B 021A 
                 ; 000B 021B     res = ALARM_mute( period );
00684a 940e c07c 	CALL SUBOPT_0xB6
00684c 940e 79ee 	CALL _ALARM_mute
00684e 018f      	MOVW R16,R30
                 ; 000B 021C     if( res < 0 ){
00684f 2311      	TST  R17
006850 f44a      	BRPL _0x160063
                 ; 000B 021D         printDebug("<setMuteAlarm> ALARM_mute(%ld) failed\r\n", period);
                +
006851 eae9     +LDI R30 , LOW ( 2 * _0x160000 + ( 3297 ) )
006852 e4f2     +LDI R31 , HIGH ( 2 * _0x160000 + ( 3297 ) )
006853 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 3297 ) )
006854 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 3297 ) )
                 	__POINTD1FN _0x160000,3297
006855 940e c7f0 	CALL SUBOPT_0x1F4
                 ; 000B 021E         return -1;
006857 efef      	LDI  R30,LOW(65535)
006858 efff      	LDI  R31,HIGH(65535)
006859 c002      	RJMP _0x20E0071
                 ; 000B 021F     }
                 ; 000B 0220 
                 ; 000B 0221     return 0;
                 _0x160063:
00685a e0e0      	LDI  R30,LOW(0)
00685b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0071:
00685c 8119      	LDD  R17,Y+1
00685d 8108      	LDD  R16,Y+0
00685e 9626      	ADIW R28,6
00685f 9508      	RET
                 ; 000B 0222 }
                 ;/*============================================================*/
                 ;int configConfirm(void)
                 ; 000B 0225 {
                 _configConfirm:
                 ; 000B 0226     return 0;
006860 e0e0      	LDI  R30,LOW(0)
006861 e0f0      	LDI  R31,HIGH(0)
006862 9508      	RET
                 ; 000B 0227 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "ethqueue.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "debug.h"
                 ;
                 ;#define MAX_SESS_LIST   100
                 ;
                 ;struct ethqueue eth_waitQueue[ETH_MAX_WAIT_QUEUE];
                 ;char   ETH_waitQCount = 0;
                 ;
                 ;char   sess_list[MAX_SESS_LIST];
                 ;int    last_sess_id = 0;
                 ;
                 ;/*============================================================*/
                 ;int ETH_addWaitQueue(char id, char *pktptr, int len, int timeout)
                 ; 000C 0011 {
                 
                 	.CSEG
                 _ETH_addWaitQueue:
                 ; 000C 0012     int slot;
                 ; 000C 0013 
                 ; 000C 0014     slot = ETH_findFreeSlotWaitQueue();
006863 940e bf27 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*pktptr -> Y+6
                 ;	len -> Y+4
                 ;	timeout -> Y+2
                 ;	slot -> R16,R17
006865 d0cd      	RCALL _ETH_findFreeSlotWaitQueue
006866 2f0e      	MOV  R16,R30
006867 2711      	CLR  R17
                 ; 000C 0015     if(slot < 0){
006868 2311      	TST  R17
006869 f44a      	BRPL _0x180003
                 ; 000C 0016         printDebug("\r\n\r\n<ETH_addWaitQueue> WARNING : Wait queue FULL\r\n\r\n");
                +
00686a ede6     +LDI R30 , LOW ( 2 * _0x180000 + ( 0 ) )
00686b e4f2     +LDI R31 , HIGH ( 2 * _0x180000 + ( 0 ) )
00686c e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 0 ) )
00686d e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 0 ) )
                 	__POINTD1FN _0x180000,0
00686e 940e bbba 	CALL SUBOPT_0x3
                 ; 000C 0017         return -1;
006870 efef      	LDI  R30,LOW(65535)
006871 efff      	LDI  R31,HIGH(65535)
006872 c055      	RJMP _0x20E006F
                 ; 000C 0018     }
                 ; 000C 0019 
                 ; 000C 001A 
                 ; 000C 001B     eth_waitQueue[slot].packetData = (char *) malloc(len);
                 _0x180003:
006873 940e c4c9 	CALL SUBOPT_0x16F
                +
006875 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
006876 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
006877 93ff      	PUSH R31
006878 93ef      	PUSH R30
006879 81ac      	LDD  R26,Y+4
00687a 81bd      	LDD  R27,Y+4+1
00687b 940e a0a2 	CALL _malloc
00687d 91af      	POP  R26
00687e 91bf      	POP  R27
00687f 93ed      	ST   X+,R30
006880 93fc      	ST   X,R31
                 ; 000C 001C     if(eth_waitQueue[slot].packetData == NULL)
006881 940e c4c9 	CALL SUBOPT_0x16F
006883 940e c506 	CALL SUBOPT_0x176
006885 9730      	SBIW R30,0
006886 f449      	BRNE _0x180004
                 ; 000C 001D     {
                 ; 000C 001E         printDebug("<ETH_addWaitQueue> malloc(%d) failed\r\n",len);
                +
006887 e0eb     +LDI R30 , LOW ( 2 * _0x180000 + ( 53 ) )
006888 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 53 ) )
006889 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 53 ) )
00688a e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 53 ) )
                 	__POINTD1FN _0x180000,53
00688b 940e c2ca 	CALL SUBOPT_0x119
                 ; 000C 001F         return -1;
00688d efef      	LDI  R30,LOW(65535)
00688e efff      	LDI  R31,HIGH(65535)
00688f c038      	RJMP _0x20E006F
                 ; 000C 0020     }
                 ; 000C 0021 
                 ; 000C 0022     memcpy( eth_waitQueue[slot].packetData, pktptr, len );
                 _0x180004:
006890 940e c4c9 	CALL SUBOPT_0x16F
006892 940e c506 	CALL SUBOPT_0x176
006894 93fa      	ST   -Y,R31
006895 93ea      	ST   -Y,R30
006896 940e c5b7 	CALL SUBOPT_0x194
006898 85a8      	LDD  R26,Y+8
006899 85b9      	LDD  R27,Y+8+1
00689a 940e a0df 	CALL _memcpy
                 ; 000C 0023 
                 ; 000C 0024     eth_waitQueue[slot].packetLen   = len;
00689c 940e c4c9 	CALL SUBOPT_0x16F
                +
00689e 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00689f 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
0068a0 81ac      	LDD  R26,Y+4
0068a1 83a0      	STD  Z+0,R26
                 ; 000C 0025     eth_waitQueue[slot].packetID    = id;
0068a2 940e c4c9 	CALL SUBOPT_0x16F
                +
0068a4 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
0068a5 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
0068a6 85a8      	LDD  R26,Y+8
0068a7 83a0      	STD  Z+0,R26
                 ; 000C 0026     eth_waitQueue[slot].retryCount  = 0;
0068a8 940e c4c9 	CALL SUBOPT_0x16F
0068aa 940e c7f9 	CALL SUBOPT_0x1F6
                 ; 000C 0027     eth_waitQueue[slot].timeout     = timeout;
0068ac 940e c4c9 	CALL SUBOPT_0x16F
                +
0068ae 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
0068af 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
0068b0 81aa      	LDD  R26,Y+2
0068b1 81bb      	LDD  R27,Y+2+1
0068b2 83a0      	STD  Z+0,R26
0068b3 83b1      	STD  Z+1,R27
                 ; 000C 0028 
                 ; 000C 0029     //eth_waitQueue[slot].retryTime   = 0;
                 ; 000C 002A     TIMER_setTimer(&(eth_waitQueue[slot].retryTime), eth_waitQueue[slot].timeout);
0068b4 940e c4c9 	CALL SUBOPT_0x16F
0068b6 940e c4f8 	CALL SUBOPT_0x174
0068b8 940e c4fd 	CALL SUBOPT_0x175
                 ; 000C 002B 
                 ; 000C 002C     ETH_waitQCount++;
0068ba 9473      	INC  R7
                 ; 000C 002D     printDebug("\r\n                                     Added (%02X) to eth_waitQueue[%d]\r\n", id, slot);
                +
0068bb e3e2     +LDI R30 , LOW ( 2 * _0x180000 + ( 92 ) )
0068bc e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 92 ) )
0068bd e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 92 ) )
0068be e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 92 ) )
                 	__POINTD1FN _0x180000,92
0068bf 940e c7fe 	CALL SUBOPT_0x1F7
0068c1 01f8      	MOVW R30,R16
0068c2 940e d919 	CALL __CWD1
0068c4 940e bc8a 	CALL SUBOPT_0x20
                 ; 000C 002E     //print_payload(eth_waitQueue[slot].packetData,eth_waitQueue[slot].packetLen);
                 ; 000C 002F     return ETH_waitQCount;
0068c6 2de7      	MOV  R30,R7
0068c7 e0f0      	LDI  R31,0
                 _0x20E006F:
0068c8 8119      	LDD  R17,Y+1
0068c9 8108      	LDD  R16,Y+0
                 _0x20E0070:
0068ca 9629      	ADIW R28,9
0068cb 9508      	RET
                 ; 000C 0030 }
                 ;/*============================================================*/
                 ;int ETH_removeWaitQueue(char id)
                 ; 000C 0033 {
                 _ETH_removeWaitQueue:
                 ; 000C 0034     char i;
                 ; 000C 0035     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0068cc 93aa      	ST   -Y,R26
0068cd 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
0068ce e010      	LDI  R17,LOW(0)
                 _0x180006:
0068cf 301f      	CPI  R17,15
0068d0 f4f8      	BRSH _0x180007
                 ; 000C 0036         if(id == eth_waitQueue[i].packetID){        // scan id in eth_waitQueue
0068d1 940e c803 	CALL SUBOPT_0x1F8
0068d3 81e0      	LD   R30,Z
0068d4 81a9      	LDD  R26,Y+1
0068d5 17ea      	CP   R30,R26
0068d6 f4b9      	BRNE _0x180008
                 ; 000C 0037             //printDebug("                                 Removing (%02X) from eth_waitQueue\r\n", id);
                 ; 000C 0038             //print_payload(eth_waitQueue[i].packetData,eth_waitQueue[i].packetLen);
                 ; 000C 0039             //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 003A             free(eth_waitQueue[i].packetData);
0068d7 e0ab      	LDI  R26,LOW(11)
0068d8 9f1a      	MUL  R17,R26
0068d9 01f0      	MOVW R30,R0
0068da 940e c506 	CALL SUBOPT_0x176
0068dc 940e c809 	CALL SUBOPT_0x1F9
                 ; 000C 003B             eth_waitQueue[i].packetData  = NULL;
                 ; 000C 003C             eth_waitQueue[i].packetLen   = 0;
                 ; 000C 003D             eth_waitQueue[i].packetID    = 0;
0068de 940e c81d 	CALL SUBOPT_0x1FA
                 ; 000C 003E             eth_waitQueue[i].retryCount  = 0;
                 ; 000C 003F             eth_waitQueue[i].timeout     = 0;
0068e0 940e c823 	CALL SUBOPT_0x1FB
                 ; 000C 0040             eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0041             ETH_waitQCount--;
0068e2 947a      	DEC  R7
                 ; 000C 0042             //printDebug("Removed\r\n");
                 ; 000C 0043             printDebug("\r\n                                     Removed (%02X) to eth_waitQueue[%d]\r\n", id, i);
                +
0068e3 e7ed     +LDI R30 , LOW ( 2 * _0x180000 + ( 167 ) )
0068e4 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 167 ) )
0068e5 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 167 ) )
0068e6 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 167 ) )
                 	__POINTD1FN _0x180000,167
0068e7 940e c836 	CALL SUBOPT_0x1FC
0068e9 940e c83b 	CALL SUBOPT_0x1FD
                 ; 000C 0044             return ETH_waitQCount;
0068eb 2de7      	MOV  R30,R7
0068ec e0f0      	LDI  R31,0
0068ed c042      	RJMP _0x20E006D
                 ; 000C 0045         }
                 ; 000C 0046     }
                 _0x180008:
0068ee 5f1f      	SUBI R17,-1
0068ef cfdf      	RJMP _0x180006
                 _0x180007:
                 ; 000C 0047     printDebug("\r\n\r\nWARNING : ETH_removeWaitQueue(%02X) not found!!\r\n\r\n",id);
                +
0068f0 ecea     +LDI R30 , LOW ( 2 * _0x180000 + ( 244 ) )
0068f1 e4f3     +LDI R31 , HIGH ( 2 * _0x180000 + ( 244 ) )
0068f2 e060     +LDI R22 , BYTE3 ( 2 * _0x180000 + ( 244 ) )
0068f3 e070     +LDI R23 , BYTE4 ( 2 * _0x180000 + ( 244 ) )
                 	__POINTD1FN _0x180000,244
0068f4 940e da29 	CALL __PUTPARD1
0068f6 81ed      	LDD  R30,Y+5
0068f7 940e bccc 	CALL SUBOPT_0x29
                 ; 000C 0048     return -1;
0068f9 efef      	LDI  R30,LOW(65535)
0068fa efff      	LDI  R31,HIGH(65535)
0068fb c034      	RJMP _0x20E006D
                 ; 000C 0049 }
                 ;/*============================================================*/
                 ;void ETH_initWaitQueue(void)
                 ; 000C 004C {
                 _ETH_initWaitQueue:
                 ; 000C 004D     char i;
                 ; 000C 004E 
                 ; 000C 004F     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
0068fc 931a      	ST   -Y,R17
                 ;	i -> R17
0068fd e010      	LDI  R17,LOW(0)
                 _0x18000A:
0068fe 301f      	CPI  R17,15
0068ff f468      	BRSH _0x18000B
                 ; 000C 0050         //memset( eth_waitQueue[i].packetData, '\0', ETH_MAX_PKT_LEN );
                 ; 000C 0051         free(eth_waitQueue[i].packetData);
006900 e0ab      	LDI  R26,LOW(11)
006901 9f1a      	MUL  R17,R26
006902 01f0      	MOVW R30,R0
006903 940e c506 	CALL SUBOPT_0x176
006905 940e c809 	CALL SUBOPT_0x1F9
                 ; 000C 0052         eth_waitQueue[i].packetData  = NULL;
                 ; 000C 0053         eth_waitQueue[i].packetLen   = 0;
                 ; 000C 0054         eth_waitQueue[i].packetID    = 0;
006907 940e c81d 	CALL SUBOPT_0x1FA
                 ; 000C 0055         eth_waitQueue[i].retryCount  = 0;
                 ; 000C 0056         eth_waitQueue[i].timeout     = 0;
006909 940e c823 	CALL SUBOPT_0x1FB
                 ; 000C 0057         eth_waitQueue[i].retryTime   = 0;
                 ; 000C 0058     }
00690b 5f1f      	SUBI R17,-1
00690c cff1      	RJMP _0x18000A
                 _0x18000B:
                 ; 000C 0059     return;
00690d c050      	RJMP _0x20E006B
                 ; 000C 005A }
                 ;/*============================================================*/
                 ;char ETH_isIdExist(char id)
                 ; 000C 005D {
                 _ETH_isIdExist:
                 ; 000C 005E     char i;
                 ; 000C 005F 
                 ; 000C 0060     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
00690e 93aa      	ST   -Y,R26
00690f 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006910 e010      	LDI  R17,LOW(0)
                 _0x18000D:
006911 301f      	CPI  R17,15
006912 f450      	BRSH _0x18000E
                 ; 000C 0061         if(id == eth_waitQueue[i].packetID){
006913 940e c803 	CALL SUBOPT_0x1F8
006915 81e0      	LD   R30,Z
006916 81a9      	LDD  R26,Y+1
006917 17ea      	CP   R30,R26
006918 f411      	BRNE _0x18000F
                 ; 000C 0062             return 1;                           // found id in eth_waitQueue
006919 e0e1      	LDI  R30,LOW(1)
00691a c015      	RJMP _0x20E006D
                 ; 000C 0063         }
                 ; 000C 0064     }
                 _0x18000F:
00691b 5f1f      	SUBI R17,-1
00691c cff4      	RJMP _0x18000D
                 _0x18000E:
                 ; 000C 0065     return 0;
00691d c011      	RJMP _0x20E006E
                 ; 000C 0066 }
                 ;/*============================================================*/
                 ;char ETH_isIdUsed(char id)
                 ; 000C 0069 {
                 _ETH_isIdUsed:
                 ; 000C 006A     char i;
                 ; 000C 006B 
                 ; 000C 006C     for(i=0;i<MAX_SESS_LIST;i++){
00691e 93aa      	ST   -Y,R26
00691f 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
006920 e010      	LDI  R17,LOW(0)
                 _0x180011:
006921 3614      	CPI  R17,100
006922 f460      	BRSH _0x180012
                 ; 000C 006D         if(id == sess_list[i]){
006923 940e c055 	CALL SUBOPT_0xAE
006925 51e4      	SUBI R30,LOW(-_sess_list)
006926 4efb      	SBCI R31,HIGH(-_sess_list)
006927 81e0      	LD   R30,Z
006928 81a9      	LDD  R26,Y+1
006929 17ea      	CP   R30,R26
00692a f411      	BRNE _0x180013
                 ; 000C 006E             return 1;                           // found id in eth_waitQueue
00692b e0e1      	LDI  R30,LOW(1)
00692c c003      	RJMP _0x20E006D
                 ; 000C 006F         }
                 ; 000C 0070     }
                 _0x180013:
00692d 5f1f      	SUBI R17,-1
00692e cff2      	RJMP _0x180011
                 _0x180012:
                 ; 000C 0071     return 0;
                 _0x20E006E:
00692f e0e0      	LDI  R30,LOW(0)
                 _0x20E006D:
006930 8118      	LDD  R17,Y+0
006931 9622      	ADIW R28,2
006932 9508      	RET
                 ; 000C 0072 }
                 ;/*============================================================*/
                 ;char ETH_findFreeSlotWaitQueue(void)
                 ; 000C 0075 {
                 _ETH_findFreeSlotWaitQueue:
                 ; 000C 0076     char i;
                 ; 000C 0077     for(i=0;i<ETH_MAX_WAIT_QUEUE;i++){
006933 931a      	ST   -Y,R17
                 ;	i -> R17
006934 e010      	LDI  R17,LOW(0)
                 _0x180015:
006935 301f      	CPI  R17,15
006936 f450      	BRSH _0x180016
                 ; 000C 0078         if(eth_waitQueue[i].packetLen == 0){
006937 e0ab      	LDI  R26,LOW(11)
006938 9f1a      	MUL  R17,R26
006939 01f0      	MOVW R30,R0
                +
00693a 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00693b 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00693c 81e0      	LD   R30,Z
00693d 30e0      	CPI  R30,0
00693e f0f1      	BREQ _0x20E006C
                 ; 000C 0079             return i;
                 ; 000C 007A         }
                 ; 000C 007B     }
00693f 5f1f      	SUBI R17,-1
006940 cff4      	RJMP _0x180015
                 _0x180016:
                 ; 000C 007C     return -1;
006941 efef      	LDI  R30,LOW(255)
006942 c01b      	RJMP _0x20E006B
                 ; 000C 007D }
                 ;/*============================================================*/
                 ;char ETH_generateId(void)
                 ; 000C 0080 {
                 _ETH_generateId:
                 ; 000C 0081     char id;
                 ; 000C 0082 
                 ; 000C 0083     do{
006943 931a      	ST   -Y,R17
                 ;	id -> R17
                 _0x180019:
                 ; 000C 0084         id = (rand() % 256) & 0xFF;
006944 940e 9fed 	CALL _rand
006946 2f1e      	MOV  R17,R30
                 ; 000C 0085     }while(ETH_isIdExist(id) || (id == 0) || (id == 0xFF) || ETH_isIdUsed(id));
006947 2fa1      	MOV  R26,R17
006948 dfc5      	RCALL _ETH_isIdExist
006949 30e0      	CPI  R30,0
00694a f441      	BRNE _0x18001B
00694b 3010      	CPI  R17,0
00694c f031      	BREQ _0x18001B
00694d 3f1f      	CPI  R17,255
00694e f021      	BREQ _0x18001B
00694f 2fa1      	MOV  R26,R17
006950 dfcd      	RCALL _ETH_isIdUsed
006951 30e0      	CPI  R30,0
006952 f009      	BREQ _0x18001A
                 _0x18001B:
006953 cff0      	RJMP _0x180019
                 _0x18001A:
                 ; 000C 0086     sess_list[last_sess_id] = id;
006954 01f4      	MOVW R30,R8
006955 51e4      	SUBI R30,LOW(-_sess_list)
006956 4efb      	SBCI R31,HIGH(-_sess_list)
006957 8310      	ST   Z,R17
                 ; 000C 0087     last_sess_id = (last_sess_id + 1) % MAX_SESS_LIST;
006958 01d4      	MOVW R26,R8
006959 9611      	ADIW R26,1
00695a 940e c841 	CALL SUBOPT_0x1FE
00695c 014f      	MOVW R8,R30
                 ; 000C 0088 
                 ; 000C 0089     return id;
                 _0x20E006C:
00695d 2fe1      	MOV  R30,R17
                 _0x20E006B:
00695e 9119      	LD   R17,Y+
00695f 9508      	RET
                 ; 000C 008A }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdio.h>
                 ;#include <delay.h>
                 ;#include "sensor.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "gaussian.h"
                 ;#include "debug.h"
                 ;
                 ;struct sens_val_st      sensor[5];
                 ;
                 ;/******************
                 ;Y = mX + c
                 ;temp = (epFactor_B * adc) + epFactor_C
                 ;******************/
                 ;
                 ;eeprom float            epFactor_A[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_B[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epFactor_C[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet1[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef1[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef1[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet2[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef2[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef2[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epIsPointSet3[5]        = { 0,      0,      0,      0,      0       };
                 ;eeprom float            epADCRef3[5]            = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;eeprom float            epTempRef3[5]           = { 0.0,    0.0,    0.0,    0.0,    0.0     };
                 ;
                 ;eeprom char             epCalType[5]            = {CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT,CAL_DEFAULT};
                 ;
                 ;flash float             epTMECTempSlope         = -0.1114;
                 ;flash float             epTMECTempOffset        = 63.73;
                 ;
                 ;flash float             epPT100TempSlope         = 1.0938;
                 ;flash float             epPT100TempOffset        = -208.42;
                 ;
                 ;//flash float             epPT100Temp_A           = 0.00005;
                 ;//flash float             epPT100Temp_B           = 0.1308;
                 ;//flash float             epPT100Temp_C           = -221.71;
                 ;
                 ;flash float             epPT100Temp_A           = 0.000633;
                 ;flash float             epPT100Temp_B           = 0.162124;
                 ;flash float             epPT100Temp_C           = -180.886306;
                 ;
                 ;// Parameter for sensor pt100
                 ;flash float             tempTable[15]           = {-80.0, -70.0, -60.0, -50.0, -40.0, -30.0, -20.0, -10.0, 0.0, 10.0, 20.0, 30.0, 40.0, 50.0, 60.0};
                 ;//flash float             voltTable[13]           = {0.7276, 0.7734, 0.8176, 0.8604, 0.9019, 0.9420, 0.9810, 1.0188, 1.0556, 1.0912, 1.1259, 1.1596, 1.1924};
                 ;flash float             adcTable[15]            = {290.7750, 309.0467, 326.7189, 343.8240, 360.3923, 376.4502, 392.0239,
                 ;                                                    407.1367, 421.8099, 436.0630, 449.9139, 463.3793, 476.4748, 489.2156, 501.6149};
                 ;
                 ;
                 ;/*============================================================*/
                 ;void updateSensorADC(int ch)
                 ; 000D 003B {
                 
                 	.CSEG
                 _updateSensorADC:
                 ; 000D 003C     int adc_raw                                     = 0;
                 ; 000D 003D 
                 ; 000D 003E     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006960 940e bf27 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	adc_raw -> R16,R17
                +
006962 e000     +LDI R16 , LOW ( 0 )
006963 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
006964 940e bce8 	CALL SUBOPT_0x2E
006966 f021      	BREQ _0x1A0004
006967 940e bce8 	CALL SUBOPT_0x2E
006969 30e3      	CPI  R30,LOW(0x3)
00696a f411      	BRNE _0x1A0003
                 _0x1A0004:
                 ; 000D 003F         adc_raw     = read_adc(8);
00696b e0a8      	LDI  R26,LOW(8)
00696c c009      	RJMP _0x1A008B
                 ; 000D 0040     }
                 ; 000D 0041     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x1A0003:
00696d 940e bfb5 	CALL SUBOPT_0x96
00696f f021      	BREQ _0x1A0008
006970 940e bce8 	CALL SUBOPT_0x2E
006972 30e2      	CPI  R30,LOW(0x2)
006973 f429      	BRNE _0x1A0007
                 _0x1A0008:
                 ; 000D 0042         adc_raw     = read_adc(8+ch);
006974 81aa      	LDD  R26,Y+2
006975 5fa8      	SUBI R26,-LOW(8)
                 _0x1A008B:
006976 940e 42cc 	CALL _read_adc
006978 018f      	MOVW R16,R30
                 ; 000D 0043     }
                 ; 000D 0044 
                 ; 000D 0045     if( fabs(adcData[ch] - adc_raw) < 10){
                 _0x1A0007:
006979 940e c846 	CALL SUBOPT_0x1FF
00697b 940e c84a 	CALL SUBOPT_0x200
00697d 940e c281 	CALL SUBOPT_0x10D
00697f 940e d870 	CALL __CMPF12
006981 f4e8      	BRSH _0x1A000A
                 ; 000D 0046         adcData[ch] = (float)((adcData[ch] * 9.9) + (float)(adc_raw * 0.1))/10;           // Temp Sensor Low-Pass Filter
006982 940e c85c 	CALL SUBOPT_0x201
006984 93ff      	PUSH R31
006985 93ef      	PUSH R30
006986 940e c846 	CALL SUBOPT_0x1FF
                +
006988 e6a6     +LDI R26 , LOW ( 0x411E6666 )
006989 e6b6     +LDI R27 , HIGH ( 0x411E6666 )
00698a e18e     +LDI R24 , BYTE3 ( 0x411E6666 )
00698b e491     +LDI R25 , BYTE4 ( 0x411E6666 )
                 	__GETD2N 0x411E6666
00698c 940e d7dd 	CALL __MULF12
00698e 937f      	PUSH R23
00698f 936f      	PUSH R22
006990 93ff      	PUSH R31
006991 93ef      	PUSH R30
006992 940e c860 	CALL SUBOPT_0x202
006994 940e bffe 	CALL SUBOPT_0xA0
006996 91af      	POP  R26
006997 91bf      	POP  R27
006998 918f      	POP  R24
006999 919f      	POP  R25
00699a 940e c005 	CALL SUBOPT_0xA1
00699c 91af      	POP  R26
00699d 91bf      	POP  R27
00699e c09a      	RJMP _0x1A008C
                 ; 000D 0047         //printDebug("<updateSensorADC>        < 10\r\n");
                 ; 000D 0048     }
                 ; 000D 0049     else if( fabs(adcData[ch] - adc_raw) < 30){
                 _0x1A000A:
00699f 940e c846 	CALL SUBOPT_0x1FF
0069a1 940e c84a 	CALL SUBOPT_0x200
                +
0069a3 e0e0     +LDI R30 , LOW ( 0x41F00000 )
0069a4 e0f0     +LDI R31 , HIGH ( 0x41F00000 )
0069a5 ef60     +LDI R22 , BYTE3 ( 0x41F00000 )
0069a6 e471     +LDI R23 , BYTE4 ( 0x41F00000 )
                 	__GETD1N 0x41F00000
0069a7 940e d870 	CALL __CMPF12
0069a9 f4f8      	BRSH _0x1A000C
                 ; 000D 004A         adcData[ch] = (float)((adcData[ch] * 9.5) + (float)(adc_raw * 0.5))/10;           // Temp Sensor Low-Pass Filter
0069aa 940e c85c 	CALL SUBOPT_0x201
0069ac 93ff      	PUSH R31
0069ad 93ef      	PUSH R30
0069ae 940e c846 	CALL SUBOPT_0x1FF
                +
0069b0 e0a0     +LDI R26 , LOW ( 0x41180000 )
0069b1 e0b0     +LDI R27 , HIGH ( 0x41180000 )
0069b2 e188     +LDI R24 , BYTE3 ( 0x41180000 )
0069b3 e491     +LDI R25 , BYTE4 ( 0x41180000 )
                 	__GETD2N 0x41180000
0069b4 940e d7dd 	CALL __MULF12
0069b6 937f      	PUSH R23
0069b7 936f      	PUSH R22
0069b8 93ff      	PUSH R31
0069b9 93ef      	PUSH R30
0069ba 940e c860 	CALL SUBOPT_0x202
0069bc 940e c866 	CALL SUBOPT_0x203
0069be 940e d7dd 	CALL __MULF12
0069c0 91af      	POP  R26
0069c1 91bf      	POP  R27
0069c2 918f      	POP  R24
0069c3 919f      	POP  R25
0069c4 940e c005 	CALL SUBOPT_0xA1
0069c6 91af      	POP  R26
0069c7 91bf      	POP  R27
0069c8 c070      	RJMP _0x1A008C
                 ; 000D 004B         //printDebug("<updateSensorADC>                < 30\r\n");
                 ; 000D 004C     }
                 ; 000D 004D     else if( fabs(adcData[ch] - adc_raw) < 50){
                 _0x1A000C:
0069c9 940e c846 	CALL SUBOPT_0x1FF
0069cb 940e c84a 	CALL SUBOPT_0x200
                +
0069cd e0e0     +LDI R30 , LOW ( 0x42480000 )
0069ce e0f0     +LDI R31 , HIGH ( 0x42480000 )
0069cf e468     +LDI R22 , BYTE3 ( 0x42480000 )
0069d0 e472     +LDI R23 , BYTE4 ( 0x42480000 )
                 	__GETD1N 0x42480000
0069d1 940e d870 	CALL __CMPF12
0069d3 f508      	BRSH _0x1A000E
                 ; 000D 004E         adcData[ch] = (float)((adcData[ch] * 8.5) + (float)(adc_raw * 1.5))/10;           // Temp Sensor Low-Pass Filter
0069d4 940e c85c 	CALL SUBOPT_0x201
0069d6 93ff      	PUSH R31
0069d7 93ef      	PUSH R30
0069d8 940e c846 	CALL SUBOPT_0x1FF
                +
0069da e0a0     +LDI R26 , LOW ( 0x41080000 )
0069db e0b0     +LDI R27 , HIGH ( 0x41080000 )
0069dc e088     +LDI R24 , BYTE3 ( 0x41080000 )
0069dd e491     +LDI R25 , BYTE4 ( 0x41080000 )
                 	__GETD2N 0x41080000
0069de 940e d7dd 	CALL __MULF12
0069e0 937f      	PUSH R23
0069e1 936f      	PUSH R22
0069e2 93ff      	PUSH R31
0069e3 93ef      	PUSH R30
0069e4 940e c860 	CALL SUBOPT_0x202
                +
0069e6 e0a0     +LDI R26 , LOW ( 0x3FC00000 )
0069e7 e0b0     +LDI R27 , HIGH ( 0x3FC00000 )
0069e8 ec80     +LDI R24 , BYTE3 ( 0x3FC00000 )
0069e9 e39f     +LDI R25 , BYTE4 ( 0x3FC00000 )
                 	__GETD2N 0x3FC00000
0069ea 940e d7dd 	CALL __MULF12
0069ec 91af      	POP  R26
0069ed 91bf      	POP  R27
0069ee 918f      	POP  R24
0069ef 919f      	POP  R25
0069f0 940e c005 	CALL SUBOPT_0xA1
0069f2 91af      	POP  R26
0069f3 91bf      	POP  R27
0069f4 c044      	RJMP _0x1A008C
                 ; 000D 004F         //printDebug("<updateSensorADC>                            < 50\r\n");
                 ; 000D 0050     }
                 ; 000D 0051     else if( fabs(adcData[ch] - adc_raw) < 100){
                 _0x1A000E:
0069f5 940e c846 	CALL SUBOPT_0x1FF
0069f7 940e c84a 	CALL SUBOPT_0x200
                +
0069f9 e0e0     +LDI R30 , LOW ( 0x42C80000 )
0069fa e0f0     +LDI R31 , HIGH ( 0x42C80000 )
0069fb ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
0069fc e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
0069fd 940e d870 	CALL __CMPF12
0069ff f508      	BRSH _0x1A0010
                 ; 000D 0052         adcData[ch] = (float)((adcData[ch] * 7.0) + (float)(adc_raw * 3.0))/10;           // Temp Sensor Low-Pass Filter
006a00 940e c85c 	CALL SUBOPT_0x201
006a02 93ff      	PUSH R31
006a03 93ef      	PUSH R30
006a04 940e c846 	CALL SUBOPT_0x1FF
                +
006a06 e0a0     +LDI R26 , LOW ( 0x40E00000 )
006a07 e0b0     +LDI R27 , HIGH ( 0x40E00000 )
006a08 ee80     +LDI R24 , BYTE3 ( 0x40E00000 )
006a09 e490     +LDI R25 , BYTE4 ( 0x40E00000 )
                 	__GETD2N 0x40E00000
006a0a 940e d7dd 	CALL __MULF12
006a0c 937f      	PUSH R23
006a0d 936f      	PUSH R22
006a0e 93ff      	PUSH R31
006a0f 93ef      	PUSH R30
006a10 940e c860 	CALL SUBOPT_0x202
                +
006a12 e0a0     +LDI R26 , LOW ( 0x40400000 )
006a13 e0b0     +LDI R27 , HIGH ( 0x40400000 )
006a14 e480     +LDI R24 , BYTE3 ( 0x40400000 )
006a15 e490     +LDI R25 , BYTE4 ( 0x40400000 )
                 	__GETD2N 0x40400000
006a16 940e d7dd 	CALL __MULF12
006a18 91af      	POP  R26
006a19 91bf      	POP  R27
006a1a 918f      	POP  R24
006a1b 919f      	POP  R25
006a1c 940e c005 	CALL SUBOPT_0xA1
006a1e 91af      	POP  R26
006a1f 91bf      	POP  R27
006a20 c018      	RJMP _0x1A008C
                 ; 000D 0053         //printDebug("<updateSensorADC>                                    < 100\r\n");
                 ; 000D 0054     }
                 ; 000D 0055     else{
                 _0x1A0010:
                 ; 000D 0056         adcData[ch] = (float)((adcData[ch] * 5.0) + (float)(adc_raw * 5.0))/10;           // Temp Sensor Low-Pass Filter
006a21 940e c85c 	CALL SUBOPT_0x201
006a23 93ff      	PUSH R31
006a24 93ef      	PUSH R30
006a25 940e c846 	CALL SUBOPT_0x1FF
006a27 940e c86b 	CALL SUBOPT_0x204
006a29 937f      	PUSH R23
006a2a 936f      	PUSH R22
006a2b 93ff      	PUSH R31
006a2c 93ef      	PUSH R30
006a2d 940e c860 	CALL SUBOPT_0x202
006a2f 940e c86b 	CALL SUBOPT_0x204
006a31 91af      	POP  R26
006a32 91bf      	POP  R27
006a33 918f      	POP  R24
006a34 919f      	POP  R25
006a35 940e c005 	CALL SUBOPT_0xA1
006a37 91af      	POP  R26
006a38 91bf      	POP  R27
                 _0x1A008C:
006a39 940e d9ff 	CALL __PUTDP1
                 ; 000D 0057         //printDebug("<updateSensorADC>                                            >= 100\r\n");
                 ; 000D 0058     }
                 ; 000D 0059 
                 ; 000D 005A     return;
006a3b 8119      	LDD  R17,Y+1
006a3c 8108      	LDD  R16,Y+0
006a3d 9624      	ADIW R28,4
006a3e 9508      	RET
                 ; 000D 005B }
                 ;/*============================================================*/
                 ;int sensorRead(int ch, struct sens_val_st *sensor)
                 ; 000D 005E {
                 _sensorRead:
                 ; 000D 005F     static TIMER t[MAX_SENS_CHANNEL]                = {0,0,0,0,0};
                 ; 000D 0060     static char lastCheck[MAX_SENS_CHANNEL]         = {0xFF,0xFF,0xFF,0xFF,0xFF};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000D 0061     static char steadyState[MAX_SENS_CHANNEL]       = {0,0,0,0,0};
                 ; 000D 0062     char channelConnect                             = 0;
                 ; 000D 0063     float x_1 = 0.0;
                 ; 000D 0064     float x_2 = 0.0;
                 ; 000D 0065     float y_1 = 0.0;
                 ; 000D 0066     float y_2 = 0.0;
                 ; 000D 0067 
                 ; 000D 0068     if( (ch<0) || (ch>=MAX_SENS_CHANNEL) ){
006a3f 93ba      	ST   -Y,R27
006a40 93aa      	ST   -Y,R26
006a41 9760      	SBIW R28,16
006a42 e180      	LDI  R24,16
006a43 e0a0      	LDI  R26,LOW(0)
006a44 e0b0      	LDI  R27,HIGH(0)
006a45 e0e8      	LDI  R30,LOW(_0x1A0013*2)
006a46 e4f4      	LDI  R31,HIGH(_0x1A0013*2)
006a47 e060      	LDI  R22,BYTE3(_0x1A0013*2)
006a48 940e daa7 	CALL __INITLOCB
006a4a 931a      	ST   -Y,R17
                 ;	ch -> Y+19
                 ;	*sensor -> Y+17
                 ;	channelConnect -> R17
                 ;	x_1 -> Y+13
                 ;	x_2 -> Y+9
                 ;	y_1 -> Y+5
                 ;	y_2 -> Y+1
006a4b e010      	LDI  R17,0
006a4c 89ac      	LDD  R26,Y+20
006a4d 23aa      	TST  R26
006a4e f022      	BRMI _0x1A0015
006a4f 89ab      	LDD  R26,Y+19
006a50 89bc      	LDD  R27,Y+19+1
006a51 9715      	SBIW R26,5
006a52 f04c      	BRLT _0x1A0014
                 _0x1A0015:
                 ; 000D 0069         printDebug("<sensorRead> ERR: ch value out of range\r\n");
                +
006a53 e1e8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 0 ) )
006a54 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 0 ) )
006a55 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 0 ) )
006a56 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 0 ) )
                 	__POINTD1FN _0x1A0000,0
006a57 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 006A         return -3;
006a59 efed      	LDI  R30,LOW(65533)
006a5a efff      	LDI  R31,HIGH(65533)
006a5b c1e5      	RJMP _0x20E006A
                 ; 000D 006B     }
                 ; 000D 006C 
                 ; 000D 006D     // ----- Check Sensor Status (Connected-Disconnected) ----- //
                 ; 000D 006E     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0014:
006a5c 940e bce8 	CALL SUBOPT_0x2E
006a5e f021      	BREQ _0x1A0018
006a5f 940e bce8 	CALL SUBOPT_0x2E
006a61 30e3      	CPI  R30,LOW(0x3)
006a62 f449      	BRNE _0x1A0017
                 _0x1A0018:
                 ; 000D 006F         SENSOR_SELECT(ch);
006a63 940e c015 	CALL SUBOPT_0xA3
006a65 89eb      	LDD  R30,Y+19
006a66 940e c01f 	CALL SUBOPT_0xA4
                 ; 000D 0070         delay_ms(20);                                               // -- for multiplex stable -- //
                 ; 000D 0071         channelConnect = SENSOR_CONNECT;
006a68 940e bcf3 	CALL SUBOPT_0x2F
006a6a 2f1e      	MOV  R17,R30
                 ; 000D 0072     }
                 ; 000D 0073     else if(TEMP_SEL == TEMP_TMEC){
006a6b c045      	RJMP _0x1A001A
                 _0x1A0017:
006a6c 940e bce8 	CALL SUBOPT_0x2E
006a6e 30e1      	CPI  R30,LOW(0x1)
006a6f f4f9      	BRNE _0x1A001B
                 ; 000D 0074 
                 ; 000D 0075         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006a70 940e c872 	CALL SUBOPT_0x205
                 ; 000D 0076 
                 ; 000D 0077         if(adcData[ch] < TMEC_SHORT_LIMIT){
006a72 01df      	MOVW R26,R30
006a73 01cb      	MOVW R24,R22
                +
006a74 e0e0     +LDI R30 , LOW ( 0x40000000 )
006a75 e0f0     +LDI R31 , HIGH ( 0x40000000 )
006a76 e060     +LDI R22 , BYTE3 ( 0x40000000 )
006a77 e470     +LDI R23 , BYTE4 ( 0x40000000 )
                 	__GETD1N 0x40000000
006a78 940e d870 	CALL __CMPF12
006a7a f410      	BRSH _0x1A001C
                 ; 000D 0078             channelConnect  = SENS_ERR_SHORT;
006a7b e910      	LDI  R17,LOW(144)
                 ; 000D 0079         }
                 ; 000D 007A         else if(adcData[ch] > TMEC_OPEN_LIMIT){
006a7c c011      	RJMP _0x1A001D
                 _0x1A001C:
006a7d 940e c87a 	CALL SUBOPT_0x206
006a7f 01df      	MOVW R26,R30
006a80 01cb      	MOVW R24,R22
                +
006a81 e0e0     +LDI R30 , LOW ( 0x447F4000 )
006a82 e4f0     +LDI R31 , HIGH ( 0x447F4000 )
006a83 e76f     +LDI R22 , BYTE3 ( 0x447F4000 )
006a84 e474     +LDI R23 , BYTE4 ( 0x447F4000 )
                 	__GETD1N 0x447F4000
006a85 940e d870 	CALL __CMPF12
006a87 f009      	BREQ PC+2
006a88 f410      	BRCC PC+3
006a89 940c 6a8d 	JMP  _0x1A001E
                 ; 000D 007B             channelConnect  = SENS_ERR_DISCONNECT;
006a8b e814      	LDI  R17,LOW(132)
                 ; 000D 007C         }
                 ; 000D 007D         else{
006a8c c001      	RJMP _0x1A001F
                 _0x1A001E:
                 ; 000D 007E             channelConnect  = SENS_NORMAL;
006a8d e010      	LDI  R17,LOW(0)
                 ; 000D 007F         }
                 _0x1A001F:
                 _0x1A001D:
                 ; 000D 0080     }
                 ; 000D 0081     else if(TEMP_SEL == TEMP_PT100){
006a8e c022      	RJMP _0x1A0020
                 _0x1A001B:
006a8f 940e bce8 	CALL SUBOPT_0x2E
006a91 30e2      	CPI  R30,LOW(0x2)
006a92 f4f1      	BRNE _0x1A0021
                 ; 000D 0082 
                 ; 000D 0083         updateSensorADC(ch);                    // -- update adcData[ch] -- //
006a93 940e c872 	CALL SUBOPT_0x205
                 ; 000D 0084 
                 ; 000D 0085         if(adcData[ch] < PT100_SHORT_LIMIT){
006a95 01df      	MOVW R26,R30
006a96 01cb      	MOVW R24,R22
                +
006a97 e0e0     +LDI R30 , LOW ( 0x41000000 )
006a98 e0f0     +LDI R31 , HIGH ( 0x41000000 )
006a99 e060     +LDI R22 , BYTE3 ( 0x41000000 )
006a9a e471     +LDI R23 , BYTE4 ( 0x41000000 )
                 	__GETD1N 0x41000000
006a9b 940e d870 	CALL __CMPF12
006a9d f410      	BRSH _0x1A0022
                 ; 000D 0086             channelConnect  = SENS_ERR_SHORT;
006a9e e910      	LDI  R17,LOW(144)
                 ; 000D 0087         }
                 ; 000D 0088         else if(adcData[ch] > PT100_OPEN_LIMIT){
006a9f c011      	RJMP _0x1A0023
                 _0x1A0022:
006aa0 940e c87a 	CALL SUBOPT_0x206
006aa2 01df      	MOVW R26,R30
006aa3 01cb      	MOVW R24,R22
                +
006aa4 e0e0     +LDI R30 , LOW ( 0x44728000 )
006aa5 e8f0     +LDI R31 , HIGH ( 0x44728000 )
006aa6 e762     +LDI R22 , BYTE3 ( 0x44728000 )
006aa7 e474     +LDI R23 , BYTE4 ( 0x44728000 )
                 	__GETD1N 0x44728000
006aa8 940e d870 	CALL __CMPF12
006aaa f009      	BREQ PC+2
006aab f410      	BRCC PC+3
006aac 940c 6ab0 	JMP  _0x1A0024
                 ; 000D 0089             channelConnect  = SENS_ERR_DISCONNECT;
006aae e814      	LDI  R17,LOW(132)
                 ; 000D 008A         }
                 ; 000D 008B         else{
006aaf c001      	RJMP _0x1A0025
                 _0x1A0024:
                 ; 000D 008C             channelConnect  = SENS_NORMAL;
006ab0 e010      	LDI  R17,LOW(0)
                 ; 000D 008D         }
                 _0x1A0025:
                 _0x1A0023:
                 ; 000D 008E     }
                 ; 000D 008F 
                 ; 000D 0090     // ----- Confirm Sensor Status Stable ----- //
                 ; 000D 0091     if(channelConnect != lastCheck[ch])
                 _0x1A0021:
                 _0x1A0020:
                 _0x1A001A:
006ab1 89eb      	LDD  R30,Y+19
006ab2 89fc      	LDD  R31,Y+19+1
006ab3 59ec      	SUBI R30,LOW(-_lastCheck_S00D0001000)
006ab4 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0001000)
006ab5 81e0      	LD   R30,Z
006ab6 17e1      	CP   R30,R17
006ab7 f089      	BREQ _0x1A0026
                 ; 000D 0092     {
                 ; 000D 0093         TIMER_setTimer(&t[ch],5);
006ab8 89eb      	LDD  R30,Y+19
006ab9 89fc      	LDD  R31,Y+19+1
006aba e5a0      	LDI  R26,LOW(_t_S00D0001000)
006abb e1b5      	LDI  R27,HIGH(_t_S00D0001000)
006abc 940e bc76 	CALL SUBOPT_0x1C
006abe 940e c87e 	CALL SUBOPT_0x207
                 ; 000D 0094         lastCheck[ch]       = channelConnect;
006ac0 89eb      	LDD  R30,Y+19
006ac1 89fc      	LDD  R31,Y+19+1
006ac2 59ec      	SUBI R30,LOW(-_lastCheck_S00D0001000)
006ac3 4efa      	SBCI R31,HIGH(-_lastCheck_S00D0001000)
006ac4 8310      	ST   Z,R17
                 ; 000D 0095         steadyState[ch]     = 0;
006ac5 940e c886 	CALL SUBOPT_0x208
006ac7 e0a0      	LDI  R26,LOW(0)
006ac8 c011      	RJMP _0x1A008D
                 ; 000D 0096     }
                 ; 000D 0097     else if(!steadyState[ch])
                 _0x1A0026:
006ac9 940e c886 	CALL SUBOPT_0x208
006acb 81e0      	LD   R30,Z
006acc 30e0      	CPI  R30,0
006acd f469      	BRNE _0x1A0028
                 ; 000D 0098     {
                 ; 000D 0099         if(TIMER_checkTimerExceed(t[ch])){
006ace 89eb      	LDD  R30,Y+19
006acf 89fc      	LDD  R31,Y+19+1
006ad0 e5a0      	LDI  R26,LOW(_t_S00D0001000)
006ad1 e1b5      	LDI  R27,HIGH(_t_S00D0001000)
006ad2 940e bc69 	CALL SUBOPT_0x1A
006ad4 940e bc70 	CALL SUBOPT_0x1B
006ad6 f021      	BREQ _0x1A0029
                 ; 000D 009A             steadyState[ch] = 1;
006ad7 940e c886 	CALL SUBOPT_0x208
006ad9 e0a1      	LDI  R26,LOW(1)
                 _0x1A008D:
006ada 83a0      	STD  Z+0,R26
                 ; 000D 009B         }
                 ; 000D 009C     }
                 _0x1A0029:
                 ; 000D 009D 
                 ; 000D 009E     if(!steadyState[ch])
                 _0x1A0028:
006adb 940e c886 	CALL SUBOPT_0x208
006add 81e0      	LD   R30,Z
006ade 30e0      	CPI  R30,0
006adf f441      	BRNE _0x1A002A
                 ; 000D 009F     {
                 ; 000D 00A0         //printDebug("<sensorRead> sensor %d state unstable\r\n",ch+1);
                 ; 000D 00A1         sensor->status  = SENS_ERR_UNKNOWN;
006ae0 89a9      	LDD  R26,Y+17
006ae1 89ba      	LDD  R27,Y+17+1
006ae2 9614      	ADIW R26,4
006ae3 efef      	LDI  R30,LOW(255)
006ae4 93ec      	ST   X,R30
                 ; 000D 00A2         return -9;
006ae5 efe7      	LDI  R30,LOW(65527)
006ae6 efff      	LDI  R31,HIGH(65527)
006ae7 c159      	RJMP _0x20E006A
                 ; 000D 00A3     }
                 ; 000D 00A4 
                 ; 000D 00A5     // ----- Return if Sensor Data is not available ----- //
                 ; 000D 00A6     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED))
                 _0x1A002A:
006ae8 940e bce8 	CALL SUBOPT_0x2E
006aea f021      	BREQ _0x1A002C
006aeb 940e bce8 	CALL SUBOPT_0x2E
006aed 30e3      	CPI  R30,LOW(0x3)
006aee f459      	BRNE _0x1A002B
                 _0x1A002C:
                 ; 000D 00A7     {
                 ; 000D 00A8         if(!channelConnect){
006aef 3010      	CPI  R17,0
006af0 f441      	BRNE _0x1A002E
                 ; 000D 00A9             sensor->status  = SENS_ERR_DISCONNECT;
006af1 89a9      	LDD  R26,Y+17
006af2 89ba      	LDD  R27,Y+17+1
006af3 9614      	ADIW R26,4
006af4 e8e4      	LDI  R30,LOW(132)
006af5 93ec      	ST   X,R30
                 ; 000D 00AA             return -2;
006af6 efee      	LDI  R30,LOW(65534)
006af7 efff      	LDI  R31,HIGH(65534)
006af8 c148      	RJMP _0x20E006A
                 ; 000D 00AB         }
                 ; 000D 00AC 
                 ; 000D 00AD         updateSensorADC(ch);                            // -- update adcData[ch] -- //
                 _0x1A002E:
006af9 c011      	RJMP _0x1A008E
                 ; 000D 00AE     }
                 ; 000D 00AF     else if((TEMP_SEL == TEMP_TMEC) || (TEMP_SEL == TEMP_PT100)){
                 _0x1A002B:
006afa 940e bfb5 	CALL SUBOPT_0x96
006afc f021      	BREQ _0x1A0031
006afd 940e bce8 	CALL SUBOPT_0x2E
006aff 30e2      	CPI  R30,LOW(0x2)
006b00 f469      	BRNE _0x1A0030
                 _0x1A0031:
                 ; 000D 00B0         if(channelConnect != SENS_NORMAL){
006b01 3010      	CPI  R17,0
006b02 f041      	BREQ _0x1A0033
                 ; 000D 00B1             sensor->status  = channelConnect;
006b03 2fe1      	MOV  R30,R17
                +
006b04 89a9     +LDD R26 , Y + 17
006b05 89ba     +LDD R27 , Y + 17 + 1
006b06 9614     +ADIW R26 , 4
006b07 93ec     +ST X , R30
                 	__PUTB1SNS 17,4
                 ; 000D 00B2             return -2;
006b08 efee      	LDI  R30,LOW(65534)
006b09 efff      	LDI  R31,HIGH(65534)
006b0a c136      	RJMP _0x20E006A
                 ; 000D 00B3         }
                 ; 000D 00B4 
                 ; 000D 00B5         updateSensorADC(ch);                            // -- update adcData[ch] -- again ^_^ --- //
                 _0x1A0033:
                 _0x1A008E:
006b0b 89ab      	LDD  R26,Y+19
006b0c 89bc      	LDD  R27,Y+19+1
006b0d de52      	RCALL _updateSensorADC
                 ; 000D 00B6     }
                 ; 000D 00B7 
                 ; 000D 00B8     switch(epCalType[ch]){
                 _0x1A0030:
006b0e 89ab      	LDD  R26,Y+19
006b0f 89bc      	LDD  R27,Y+19+1
006b10 5aa8      	SUBI R26,LOW(-_epCalType)
006b11 4fb9      	SBCI R27,HIGH(-_epCalType)
006b12 940e da50 	CALL __EEPROMRDB
006b14 940e c88b 	CALL SUBOPT_0x209
                 ; 000D 00B9         case CAL_SELFCOMPARE    :   // --- Same as CAL_EXTOFFSET --- //
006b16 f031      	BREQ _0x1A0038
                 ; 000D 00BA         case CAL_EXTOFFSET      :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006b17 30e2      	CPI  R30,LOW(0x2)
006b18 e0a0      	LDI  R26,HIGH(0x2)
006b19 07fa      	CPC  R31,R26
006b1a f011      	BREQ PC+3
006b1b 940c 6b85 	JMP _0x1A0039
                 _0x1A0038:
006b1d 940e bce8 	CALL SUBOPT_0x2E
006b1f f021      	BREQ _0x1A003B
006b20 940e bce8 	CALL SUBOPT_0x2E
006b22 30e3      	CPI  R30,LOW(0x3)
006b23 f4d9      	BRNE _0x1A003A
                 _0x1A003B:
                 ; 000D 00BB                                         sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]) + epFactor_C[ch];
006b24 940e bd04 	CALL SUBOPT_0x32
006b26 940e bd11 	CALL SUBOPT_0x33
006b28 937f      	PUSH R23
006b29 936f      	PUSH R22
006b2a 93ff      	PUSH R31
006b2b 93ef      	PUSH R30
006b2c 940e c87a 	CALL SUBOPT_0x206
006b2e 91af      	POP  R26
006b2f 91bf      	POP  R27
006b30 918f      	POP  R24
006b31 919f      	POP  R25
006b32 940e d7dd 	CALL __MULF12
006b34 937f      	PUSH R23
006b35 936f      	PUSH R22
006b36 93ff      	PUSH R31
006b37 93ef      	PUSH R30
006b38 940e c890 	CALL SUBOPT_0x20A
006b3a 91af      	POP  R26
006b3b 91bf      	POP  R27
006b3c 918f      	POP  R24
006b3d 919f      	POP  R25
006b3e c03f      	RJMP _0x1A008F
                 ; 000D 00BC                                     }
                 ; 000D 00BD                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A003A:
006b3f 940e bce8 	CALL SUBOPT_0x2E
006b41 30e1      	CPI  R30,LOW(0x1)
006b42 f479      	BRNE _0x1A003E
                 ; 000D 00BE                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epFactor_C[ch];
006b43 940e c87a 	CALL SUBOPT_0x206
006b45 940e c89b 	CALL SUBOPT_0x20B
006b47 937f      	PUSH R23
006b48 936f      	PUSH R22
006b49 93ff      	PUSH R31
006b4a 93ef      	PUSH R30
006b4b 940e c890 	CALL SUBOPT_0x20A
006b4d 91af      	POP  R26
006b4e 91bf      	POP  R27
006b4f 918f      	POP  R24
006b50 919f      	POP  R25
006b51 c02c      	RJMP _0x1A008F
                 ; 000D 00BF                                     }
                 ; 000D 00C0                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A003E:
006b52 940e bce8 	CALL SUBOPT_0x2E
006b54 30e2      	CPI  R30,LOW(0x2)
006b55 f571      	BRNE _0x1A0040
                 ; 000D 00C1                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 00C2                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 00C3                                                              epFactor_C[ch];
006b56 940e c87a 	CALL SUBOPT_0x206
006b58 940e c8a2 	CALL SUBOPT_0x20C
006b5a 937f      	PUSH R23
006b5b 936f      	PUSH R22
006b5c 93ff      	PUSH R31
006b5d 93ef      	PUSH R30
006b5e 940e c87a 	CALL SUBOPT_0x206
006b60 91af      	POP  R26
006b61 91bf      	POP  R27
006b62 918f      	POP  R24
006b63 919f      	POP  R25
006b64 940e d7dd 	CALL __MULF12
006b66 937f      	PUSH R23
006b67 936f      	PUSH R22
006b68 93ff      	PUSH R31
006b69 93ef      	PUSH R30
006b6a 940e c87a 	CALL SUBOPT_0x206
006b6c 940e c8a9 	CALL SUBOPT_0x20D
006b6e 91af      	POP  R26
006b6f 91bf      	POP  R27
006b70 918f      	POP  R24
006b71 919f      	POP  R25
006b72 940e d78d 	CALL __ADDF12
006b74 937f      	PUSH R23
006b75 936f      	PUSH R22
006b76 93ff      	PUSH R31
006b77 93ef      	PUSH R30
006b78 940e c890 	CALL SUBOPT_0x20A
006b7a 91af      	POP  R26
006b7b 91bf      	POP  R27
006b7c 918f      	POP  R24
006b7d 919f      	POP  R25
                 _0x1A008F:
006b7e 940e d78d 	CALL __ADDF12
006b80 89a9      	LDD  R26,Y+17
006b81 89ba      	LDD  R27,Y+17+1
006b82 940e d9ff 	CALL __PUTDP1
                 ; 000D 00C4 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epFactor_C[ch];
                 ; 000D 00C5                                     }
                 ; 000D 00C6                                     break;
                 _0x1A0040:
006b84 c0b5      	RJMP _0x1A0036
                 ; 000D 00C7         case CAL_EXTLINEAR      :   sensor->value   =   (epFactor_B[ch]   * adcData[ch]) + epFactor_C[ch];
                 _0x1A0039:
006b85 30e3      	CPI  R30,LOW(0x3)
006b86 e0a0      	LDI  R26,HIGH(0x3)
006b87 07fa      	CPC  R31,R26
006b88 f4c9      	BRNE _0x1A0041
006b89 940e c8b0 	CALL SUBOPT_0x20E
006b8b 937f      	PUSH R23
006b8c 936f      	PUSH R22
006b8d 93ff      	PUSH R31
006b8e 93ef      	PUSH R30
006b8f 940e c87a 	CALL SUBOPT_0x206
006b91 91af      	POP  R26
006b92 91bf      	POP  R27
006b93 918f      	POP  R24
006b94 919f      	POP  R25
006b95 940e d7dd 	CALL __MULF12
006b97 937f      	PUSH R23
006b98 936f      	PUSH R22
006b99 93ff      	PUSH R31
006b9a 93ef      	PUSH R30
006b9b 940e c890 	CALL SUBOPT_0x20A
006b9d 91af      	POP  R26
006b9e 91bf      	POP  R27
006b9f 918f      	POP  R24
006ba0 919f      	POP  R25
006ba1 c092      	RJMP _0x1A0090
                 ; 000D 00C8                                     break;
                 ; 000D 00C9         case CAL_EXTPOLYNOMIAL  :   sensor->value   =   (epFactor_A[ch]   * adcData[ch] * adcData[ch]) +
                 _0x1A0041:
006ba2 30e4      	CPI  R30,LOW(0x4)
006ba3 e0a0      	LDI  R26,HIGH(0x4)
006ba4 07fa      	CPC  R31,R26
006ba5 f011      	BREQ PC+3
006ba6 940c 6be9 	JMP _0x1A0043
                 ; 000D 00CA                                                         (epFactor_B[ch]   * adcData[ch]) +
                 ; 000D 00CB                                                          epFactor_C[ch];
006ba8 89eb      	LDD  R30,Y+19
006ba9 89fc      	LDD  R31,Y+19+1
006baa 940e c8bb 	CALL SUBOPT_0x20F
006bac 940e da48 	CALL __EEPROMRDD
006bae 937f      	PUSH R23
006baf 936f      	PUSH R22
006bb0 93ff      	PUSH R31
006bb1 93ef      	PUSH R30
006bb2 940e c87a 	CALL SUBOPT_0x206
006bb4 91af      	POP  R26
006bb5 91bf      	POP  R27
006bb6 918f      	POP  R24
006bb7 919f      	POP  R25
006bb8 940e d7dd 	CALL __MULF12
006bba 937f      	PUSH R23
006bbb 936f      	PUSH R22
006bbc 93ff      	PUSH R31
006bbd 93ef      	PUSH R30
006bbe 940e c87a 	CALL SUBOPT_0x206
006bc0 91af      	POP  R26
006bc1 91bf      	POP  R27
006bc2 918f      	POP  R24
006bc3 919f      	POP  R25
006bc4 940e d7dd 	CALL __MULF12
006bc6 937f      	PUSH R23
006bc7 936f      	PUSH R22
006bc8 93ff      	PUSH R31
006bc9 93ef      	PUSH R30
006bca 940e c8b0 	CALL SUBOPT_0x20E
006bcc 937f      	PUSH R23
006bcd 936f      	PUSH R22
006bce 93ff      	PUSH R31
006bcf 93ef      	PUSH R30
006bd0 940e c87a 	CALL SUBOPT_0x206
006bd2 91af      	POP  R26
006bd3 91bf      	POP  R27
006bd4 918f      	POP  R24
006bd5 919f      	POP  R25
006bd6 940e d7dd 	CALL __MULF12
006bd8 91af      	POP  R26
006bd9 91bf      	POP  R27
006bda 918f      	POP  R24
006bdb 919f      	POP  R25
006bdc 940e d78d 	CALL __ADDF12
006bde 937f      	PUSH R23
006bdf 936f      	PUSH R22
006be0 93ff      	PUSH R31
006be1 93ef      	PUSH R30
006be2 940e c890 	CALL SUBOPT_0x20A
006be4 91af      	POP  R26
006be5 91bf      	POP  R27
006be6 918f      	POP  R24
006be7 919f      	POP  R25
006be8 c04b      	RJMP _0x1A0090
                 ; 000D 00CC                                     break;
                 ; 000D 00CD         default                 :   if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
                 _0x1A0043:
006be9 940e bce8 	CALL SUBOPT_0x2E
006beb f021      	BREQ _0x1A0045
006bec 940e bce8 	CALL SUBOPT_0x2E
006bee 30e3      	CPI  R30,LOW(0x3)
006bef f489      	BRNE _0x1A0044
                 _0x1A0045:
                 ; 000D 00CE                                         sensor->value   =   (ADC_CONV_FAC*100 * adcData[ch]);
006bf0 940e bd04 	CALL SUBOPT_0x32
006bf2 940e bd11 	CALL SUBOPT_0x33
006bf4 937f      	PUSH R23
006bf5 936f      	PUSH R22
006bf6 93ff      	PUSH R31
006bf7 93ef      	PUSH R30
006bf8 940e c87a 	CALL SUBOPT_0x206
006bfa 91af      	POP  R26
006bfb 91bf      	POP  R27
006bfc 918f      	POP  R24
006bfd 919f      	POP  R25
006bfe 940e d7dd 	CALL __MULF12
006c00 c035      	RJMP _0x1A0091
                 ; 000D 00CF                                     }
                 ; 000D 00D0                                     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0044:
006c01 940e bce8 	CALL SUBOPT_0x2E
006c03 30e1      	CPI  R30,LOW(0x1)
006c04 f449      	BRNE _0x1A0048
                 ; 000D 00D1                                         sensor->value   =   (epTMECTempSlope  * adcData[ch]) + epTMECTempOffset;
006c05 940e c87a 	CALL SUBOPT_0x206
006c07 940e c89b 	CALL SUBOPT_0x20B
                +
006c09 e8a5     +LDI R26 , LOW ( 0x427EEB85 )
006c0a eebb     +LDI R27 , HIGH ( 0x427EEB85 )
006c0b e78e     +LDI R24 , BYTE3 ( 0x427EEB85 )
006c0c e492     +LDI R25 , BYTE4 ( 0x427EEB85 )
                 	__GETD2N 0x427EEB85
006c0d c026      	RJMP _0x1A0090
                 ; 000D 00D2                                     }
                 ; 000D 00D3                                     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0048:
006c0e 940e bce8 	CALL SUBOPT_0x2E
006c10 30e2      	CPI  R30,LOW(0x2)
006c11 f541      	BRNE _0x1A004A
                 ; 000D 00D4                                         sensor->value   =   (epPT100Temp_A    * adcData[ch] * adcData[ch]) +
                 ; 000D 00D5                                                             (epPT100Temp_B    * adcData[ch]) +
                 ; 000D 00D6                                                              epPT100Temp_C;
006c12 940e c87a 	CALL SUBOPT_0x206
006c14 940e c8a2 	CALL SUBOPT_0x20C
006c16 937f      	PUSH R23
006c17 936f      	PUSH R22
006c18 93ff      	PUSH R31
006c19 93ef      	PUSH R30
006c1a 940e c87a 	CALL SUBOPT_0x206
006c1c 91af      	POP  R26
006c1d 91bf      	POP  R27
006c1e 918f      	POP  R24
006c1f 919f      	POP  R25
006c20 940e d7dd 	CALL __MULF12
006c22 937f      	PUSH R23
006c23 936f      	PUSH R22
006c24 93ff      	PUSH R31
006c25 93ef      	PUSH R30
006c26 940e c87a 	CALL SUBOPT_0x206
006c28 940e c8a9 	CALL SUBOPT_0x20D
006c2a 91af      	POP  R26
006c2b 91bf      	POP  R27
006c2c 918f      	POP  R24
006c2d 919f      	POP  R25
006c2e 940e d78d 	CALL __ADDF12
                +
006c30 eea5     +LDI R26 , LOW ( 0xC334E2E5 )
006c31 eeb2     +LDI R27 , HIGH ( 0xC334E2E5 )
006c32 e384     +LDI R24 , BYTE3 ( 0xC334E2E5 )
006c33 ec93     +LDI R25 , BYTE4 ( 0xC334E2E5 )
                 	__GETD2N 0xC334E2E5
                 _0x1A0090:
006c34 940e d78d 	CALL __ADDF12
                 _0x1A0091:
006c36 89a9      	LDD  R26,Y+17
006c37 89ba      	LDD  R27,Y+17+1
006c38 940e d9ff 	CALL __PUTDP1
                 ; 000D 00D7 //                                        sensor->value = (epPT100TempSlope * adcData[ch]) + epPT100TempOffset;
                 ; 000D 00D8 //                                        getInterval(adcData[ch], &x_1, &x_2, &y_1, &y_2);
                 ; 000D 00D9 //                                        sensor->value = (((adcData[ch] - x_1) * (y_2 - y_1)) / (x_2 - x_1)) + y_1;
                 ; 000D 00DA 
                 ; 000D 00DB                                         // test
                 ; 000D 00DC                                         //printDebug("ADC: %f, Value: %f \r\n", adcData[ch], sensor->value);
                 ; 000D 00DD                                         //
                 ; 000D 00DE                                     }
                 ; 000D 00DF                                     break;
                 _0x1A004A:
                 ; 000D 00E0     }
                 _0x1A0036:
                 ; 000D 00E1 
                 ; 000D 00E2     sensor->status  = SENS_NORMAL;
006c3a 89a9      	LDD  R26,Y+17
006c3b 89ba      	LDD  R27,Y+17+1
006c3c 9614      	ADIW R26,4
006c3d e0e0      	LDI  R30,LOW(0)
006c3e 93ec      	ST   X,R30
                 ; 000D 00E3 
                 ; 000D 00E4     return 0;
006c3f e0e0      	LDI  R30,LOW(0)
006c40 e0f0      	LDI  R31,HIGH(0)
                 _0x20E006A:
006c41 8118      	LDD  R17,Y+0
006c42 9665      	ADIW R28,21
006c43 9508      	RET
                 ; 000D 00E5 }
                 ;/*============================================================*/
                 ;void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 00E7 void getInterval(float adcRaw, float *x1, float *x2, float *y1, float *y2) {
                 ; 000D 00E8 
                 ; 000D 00E9     int i = 0;
                 ; 000D 00EA 
                 ; 000D 00EB     for(i = 0; i < 15; i++) {
                 ;	adcRaw -> Y+10
                 ;	*x1 -> Y+8
                 ;	*x2 -> Y+6
                 ;	*y1 -> Y+4
                 ;	*y2 -> Y+2
                 ;	i -> R16,R17
                 ; 000D 00EC         if(adcRaw <= adcTable[i]) {
                 ; 000D 00ED             *x1 = adcTable[i-1];
                 ; 000D 00EE             *y1 = tempTable[i-1];
                 ; 000D 00EF             *x2 = adcTable[i];
                 ; 000D 00F0             *y2 = tempTable[i];
                 ; 000D 00F1             break;
                 ; 000D 00F2         }
                 ; 000D 00F3     }
                 ; 000D 00F4 
                 ; 000D 00F5     return;
                 ; 000D 00F6 }
                 ;/*============================================================*/
                 ;int sensorCalibrate1(int p1, int p2)
                 ; 000D 00F9 {
                 _sensorCalibrate1:
                 ; 000D 00FA     float p2_raw;
                 ; 000D 00FB 
                 ; 000D 00FC     if(operating_config.sensorEnable[p1] != 0x01){
006c44 93ba      	ST   -Y,R27
006c45 93aa      	ST   -Y,R26
006c46 9724      	SBIW R28,4
                 ;	p1 -> Y+6
                 ;	p2 -> Y+4
                 ;	p2_raw -> Y+0
                +
006c47 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006c48 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006c49 940e c8c2 	CALL SUBOPT_0x210
006c4b 91ac      	LD   R26,X
006c4c 30a1      	CPI  R26,LOW(0x1)
006c4d f061      	BREQ _0x1A004F
                 ; 000D 00FD         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p1+1);
                +
006c4e e4e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 42 ) )
006c4f e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 42 ) )
006c50 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 42 ) )
006c51 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 42 ) )
                 	__POINTD1FN _0x1A0000,42
006c52 940e c32d 	CALL SUBOPT_0x12A
006c54 9631      	ADIW R30,1
006c55 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000D 00FE         return -1;
006c57 efef      	LDI  R30,LOW(65535)
006c58 efff      	LDI  R31,HIGH(65535)
006c59 c0ac      	RJMP _0x20E0069
                 ; 000D 00FF     }
                 ; 000D 0100     if(operating_config.sensorEnable[p2] != 0x01){
                 _0x1A004F:
                +
006c5a ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
006c5b e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
006c5c 81ac      	LDD  R26,Y+4
006c5d 81bd      	LDD  R27,Y+4+1
006c5e 940e c8c7 	CALL SUBOPT_0x211
006c60 f061      	BREQ _0x1A0050
                 ; 000D 0101         printDebug("<sensorCalibrate1> ABORT: sensor ch %d is disable\r\n",p2+1);
                +
006c61 e4e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 42 ) )
006c62 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 42 ) )
006c63 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 42 ) )
006c64 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 42 ) )
                 	__POINTD1FN _0x1A0000,42
006c65 940e c76f 	CALL SUBOPT_0x1DA
006c67 9631      	ADIW R30,1
006c68 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000D 0102         return -1;
006c6a efef      	LDI  R30,LOW(65535)
006c6b efff      	LDI  R31,HIGH(65535)
006c6c c099      	RJMP _0x20E0069
                 ; 000D 0103     }
                 ; 000D 0104 
                 ; 000D 0105     if(sensor[p1].status != SENS_NORMAL){
                 _0x1A0050:
006c6d 81ae      	LDD  R26,Y+6
006c6e 81bf      	LDD  R27,Y+6+1
006c6f 940e c8cc 	CALL SUBOPT_0x212
006c71 30e0      	CPI  R30,0
006c72 f089      	BREQ _0x1A0051
                 ; 000D 0106         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p1+1,sensor[p1].status);
                +
006c73 e7e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006c74 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006c75 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006c76 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006c77 940e c32d 	CALL SUBOPT_0x12A
006c79 940e c8d3 	CALL SUBOPT_0x213
006c7b 85ae      	LDD  R26,Y+14
006c7c 85bf      	LDD  R27,Y+14+1
006c7d 940e c8cc 	CALL SUBOPT_0x212
006c7f 940e c8d9 	CALL SUBOPT_0x214
                 ; 000D 0107         return -1;
006c81 efef      	LDI  R30,LOW(65535)
006c82 efff      	LDI  R31,HIGH(65535)
006c83 c082      	RJMP _0x20E0069
                 ; 000D 0108     }
                 ; 000D 0109     if(sensor[p2].status != SENS_NORMAL){
                 _0x1A0051:
006c84 81ac      	LDD  R26,Y+4
006c85 81bd      	LDD  R27,Y+4+1
006c86 940e c8cc 	CALL SUBOPT_0x212
006c88 30e0      	CPI  R30,0
006c89 f089      	BREQ _0x1A0052
                 ; 000D 010A         printDebug("<sensorCalibrate1> ABORT: sensor ch %d error(0x%02X)\r\n",p2+1,sensor[p2].status);
                +
006c8a e7e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 94 ) )
006c8b e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 94 ) )
006c8c e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 94 ) )
006c8d e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 94 ) )
                 	__POINTD1FN _0x1A0000,94
006c8e 940e c76f 	CALL SUBOPT_0x1DA
006c90 940e c8d3 	CALL SUBOPT_0x213
006c92 85ac      	LDD  R26,Y+12
006c93 85bd      	LDD  R27,Y+12+1
006c94 940e c8cc 	CALL SUBOPT_0x212
006c96 940e c8d9 	CALL SUBOPT_0x214
                 ; 000D 010B         return -1;
006c98 efef      	LDI  R30,LOW(65535)
006c99 efff      	LDI  R31,HIGH(65535)
006c9a c06b      	RJMP _0x20E0069
                 ; 000D 010C     }
                 ; 000D 010D 
                 ; 000D 010E     epCalType[p2]   = CAL_SELFCOMPARE;
                 _0x1A0052:
006c9b 81ac      	LDD  R26,Y+4
006c9c 81bd      	LDD  R27,Y+4+1
006c9d 5aa8      	SUBI R26,LOW(-_epCalType)
006c9e 4fb9      	SBCI R27,HIGH(-_epCalType)
006c9f e0e1      	LDI  R30,LOW(1)
006ca0 940e da6c 	CALL __EEPROMWRB
                 ; 000D 010F 
                 ; 000D 0110     if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006ca2 940e bce8 	CALL SUBOPT_0x2E
006ca4 f021      	BREQ _0x1A0054
006ca5 940e bce8 	CALL SUBOPT_0x2E
006ca7 30e3      	CPI  R30,LOW(0x3)
006ca8 f489      	BRNE _0x1A0053
                 _0x1A0054:
                 ; 000D 0111         p2_raw          = (ADC_CONV_FAC*100 * adcData[p2]);
006ca9 940e bd04 	CALL SUBOPT_0x32
006cab 940e bd11 	CALL SUBOPT_0x33
006cad 937f      	PUSH R23
006cae 936f      	PUSH R22
006caf 93ff      	PUSH R31
006cb0 93ef      	PUSH R30
006cb1 940e c8de 	CALL SUBOPT_0x215
006cb3 91af      	POP  R26
006cb4 91bf      	POP  R27
006cb5 918f      	POP  R24
006cb6 919f      	POP  R25
006cb7 940e d7dd 	CALL __MULF12
006cb9 c02b      	RJMP _0x1A0092
                 ; 000D 0112     }
                 ; 000D 0113     else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A0053:
006cba 940e bce8 	CALL SUBOPT_0x2E
006cbc 30e1      	CPI  R30,LOW(0x1)
006cbd f429      	BRNE _0x1A0057
                 ; 000D 0114         p2_raw          = epTMECTempSlope   * adcData[p2];
006cbe 940e c8de 	CALL SUBOPT_0x215
006cc0 940e c89b 	CALL SUBOPT_0x20B
006cc2 c022      	RJMP _0x1A0092
                 ; 000D 0115     }
                 ; 000D 0116     else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0057:
006cc3 940e bce8 	CALL SUBOPT_0x2E
006cc5 30e2      	CPI  R30,LOW(0x2)
006cc6 f501      	BRNE _0x1A0059
                 ; 000D 0117         p2_raw          = (epPT100Temp_A    * adcData[p2] * adcData[p2]) +
                 ; 000D 0118                           (epPT100Temp_B    * adcData[p2]);
006cc7 940e c8de 	CALL SUBOPT_0x215
006cc9 940e c8a2 	CALL SUBOPT_0x20C
006ccb 937f      	PUSH R23
006ccc 936f      	PUSH R22
006ccd 93ff      	PUSH R31
006cce 93ef      	PUSH R30
006ccf 940e c8de 	CALL SUBOPT_0x215
006cd1 91af      	POP  R26
006cd2 91bf      	POP  R27
006cd3 918f      	POP  R24
006cd4 919f      	POP  R25
006cd5 940e d7dd 	CALL __MULF12
006cd7 937f      	PUSH R23
006cd8 936f      	PUSH R22
006cd9 93ff      	PUSH R31
006cda 93ef      	PUSH R30
006cdb 940e c8de 	CALL SUBOPT_0x215
006cdd 940e c8a9 	CALL SUBOPT_0x20D
006cdf 91af      	POP  R26
006ce0 91bf      	POP  R27
006ce1 918f      	POP  R24
006ce2 919f      	POP  R25
006ce3 940e d78d 	CALL __ADDF12
                 _0x1A0092:
006ce5 940e da1a 	CALL __PUTD1S0
                 ; 000D 0119     }
                 ; 000D 011A 
                 ; 000D 011B     epFactor_A[p2]  = 0;
                 _0x1A0059:
006ce7 81ec      	LDD  R30,Y+4
006ce8 81fd      	LDD  R31,Y+4+1
006ce9 940e c8bb 	CALL SUBOPT_0x20F
006ceb 940e c8e2 	CALL SUBOPT_0x216
                 ; 000D 011C     epFactor_B[p2]  = 0;
006ced 940e c8eb 	CALL SUBOPT_0x217
006cef 940e c8e2 	CALL SUBOPT_0x216
                 ; 000D 011D     epFactor_C[p2]  = sensor[p1].value - p2_raw;
006cf1 940e c8f2 	CALL SUBOPT_0x218
006cf3 93ff      	PUSH R31
006cf4 93ef      	PUSH R30
006cf5 81ae      	LDD  R26,Y+6
006cf6 81bf      	LDD  R27,Y+6+1
006cf7 e0e5      	LDI  R30,LOW(5)
006cf8 940e d95a 	CALL __MULB1W2U
006cfa 940e bc84 	CALL SUBOPT_0x1F
006cfc 940e bf6c 	CALL SUBOPT_0x8C
006cfe 940e d786 	CALL __SUBF12
006d00 91af      	POP  R26
006d01 91bf      	POP  R27
006d02 940e da5c 	CALL __EEPROMWRD
                 ; 000D 011E 
                 ; 000D 011F     return 0;
006d04 e0e0      	LDI  R30,LOW(0)
006d05 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0069:
006d06 9628      	ADIW R28,8
006d07 9508      	RET
                 ; 000D 0120 }
                 ;/*============================================================*/
                 ;int sensorCalibrate2(int prbId)
                 ; 000D 0123 {
                 _sensorCalibrate2:
                 ; 000D 0124     float p2_raw;
                 ; 000D 0125     float tmpA,tmpB,tmpC;
                 ; 000D 0126 
                 ; 000D 0127     if(epIsPointSet1[prbId] == 0){
006d08 93ba      	ST   -Y,R27
006d09 93aa      	ST   -Y,R26
006d0a 9760      	SBIW R28,16
                 ;	prbId -> Y+16
                 ;	p2_raw -> Y+12
                 ;	tmpA -> Y+8
                 ;	tmpB -> Y+4
                 ;	tmpC -> Y+0
006d0b 89a8      	LDD  R26,Y+16
006d0c 89b9      	LDD  R27,Y+16+1
006d0d 52af      	SUBI R26,LOW(-_epIsPointSet1)
006d0e 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
006d0f 940e da50 	CALL __EEPROMRDB
006d11 30e0      	CPI  R30,0
006d12 f461      	BRNE _0x1A005A
                 ; 000D 0128         printDebug("<sensorCalibrate2> ABORT: sensor ch %d No set point found\r\n",prbId+1);
                +
006d13 eaed     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 149 ) )
006d14 e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 149 ) )
006d15 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 149 ) )
006d16 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 149 ) )
                 	__POINTD1FN _0x1A0000,149
006d17 940e c1c9 	CALL SUBOPT_0xEB
006d19 9631      	ADIW R30,1
006d1a 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000D 0129         return -1;
006d1c efef      	LDI  R30,LOW(65535)
006d1d efff      	LDI  R31,HIGH(65535)
006d1e c166      	RJMP _0x20E0068
                 ; 000D 012A     }
                 ; 000D 012B 
                 ; 000D 012C     if(epIsPointSet2[prbId] == 0){
                 _0x1A005A:
006d1f 89a8      	LDD  R26,Y+16
006d20 89b9      	LDD  R27,Y+16+1
006d21 50a2      	SUBI R26,LOW(-_epIsPointSet2)
006d22 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
006d23 940e da50 	CALL __EEPROMRDB
006d25 30e0      	CPI  R30,0
006d26 f011      	BREQ PC+3
006d27 940c 6d9c 	JMP _0x1A005B
                 ; 000D 012D         printDebug("<sensorCalibrate2> -- CAL_EXTOFFSET --\r\n");
                +
006d29 eee9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 209 ) )
006d2a e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 209 ) )
006d2b e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 209 ) )
006d2c e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 209 ) )
                 	__POINTD1FN _0x1A0000,209
006d2d 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 012E         epFactor_A[prbId]   = 0;
006d2f 89e8      	LDD  R30,Y+16
006d30 89f9      	LDD  R31,Y+16+1
006d31 940e c8bb 	CALL SUBOPT_0x20F
006d33 940e c8f6 	CALL SUBOPT_0x219
                 ; 000D 012F         epFactor_B[prbId]   = 0;
006d35 89e8      	LDD  R30,Y+16
006d36 89f9      	LDD  R31,Y+16+1
006d37 940e c8eb 	CALL SUBOPT_0x217
006d39 940e c8f6 	CALL SUBOPT_0x219
                 ; 000D 0130 
                 ; 000D 0131         if((TEMP_SEL == TEMP_TYPE_K) || (TEMP_SEL == TEMP_RESERVED)){
006d3b 940e bce8 	CALL SUBOPT_0x2E
006d3d f021      	BREQ _0x1A005D
006d3e 940e bce8 	CALL SUBOPT_0x2E
006d40 30e3      	CPI  R30,LOW(0x3)
006d41 f489      	BRNE _0x1A005C
                 _0x1A005D:
                 ; 000D 0132             p2_raw          = (ADC_CONV_FAC*100 * epADCRef1[prbId]);
006d42 940e bd04 	CALL SUBOPT_0x32
006d44 940e bd11 	CALL SUBOPT_0x33
006d46 937f      	PUSH R23
006d47 936f      	PUSH R22
006d48 93ff      	PUSH R31
006d49 93ef      	PUSH R30
006d4a 940e c8fd 	CALL SUBOPT_0x21A
006d4c 91af      	POP  R26
006d4d 91bf      	POP  R27
006d4e 918f      	POP  R24
006d4f 919f      	POP  R25
006d50 940e d7dd 	CALL __MULF12
006d52 c02b      	RJMP _0x1A0093
                 ; 000D 0133         }
                 ; 000D 0134         else if(TEMP_SEL == TEMP_TMEC){
                 _0x1A005C:
006d53 940e bce8 	CALL SUBOPT_0x2E
006d55 30e1      	CPI  R30,LOW(0x1)
006d56 f429      	BRNE _0x1A0060
                 ; 000D 0135             p2_raw          = epTMECTempSlope   * epADCRef1[prbId];
006d57 940e c8fd 	CALL SUBOPT_0x21A
006d59 940e c89b 	CALL SUBOPT_0x20B
006d5b c022      	RJMP _0x1A0093
                 ; 000D 0136         }
                 ; 000D 0137         else if(TEMP_SEL == TEMP_PT100){
                 _0x1A0060:
006d5c 940e bce8 	CALL SUBOPT_0x2E
006d5e 30e2      	CPI  R30,LOW(0x2)
006d5f f511      	BRNE _0x1A0062
                 ; 000D 0138             p2_raw          = (epPT100Temp_A    * epADCRef1[prbId] * epADCRef1[prbId]) +
                 ; 000D 0139                               (epPT100Temp_B    * epADCRef1[prbId]);
006d60 940e c8fd 	CALL SUBOPT_0x21A
006d62 940e c8a2 	CALL SUBOPT_0x20C
006d64 937f      	PUSH R23
006d65 936f      	PUSH R22
006d66 93ff      	PUSH R31
006d67 93ef      	PUSH R30
006d68 940e c8fd 	CALL SUBOPT_0x21A
006d6a 91af      	POP  R26
006d6b 91bf      	POP  R27
006d6c 918f      	POP  R24
006d6d 919f      	POP  R25
006d6e 940e d7dd 	CALL __MULF12
006d70 937f      	PUSH R23
006d71 936f      	PUSH R22
006d72 93ff      	PUSH R31
006d73 93ef      	PUSH R30
006d74 940e c8fd 	CALL SUBOPT_0x21A
006d76 940e c8a9 	CALL SUBOPT_0x20D
006d78 91af      	POP  R26
006d79 91bf      	POP  R27
006d7a 918f      	POP  R24
006d7b 919f      	POP  R25
006d7c 940e d78d 	CALL __ADDF12
                 _0x1A0093:
                +
006d7e 87ec     +STD Y + 12 , R30
006d7f 87fd     +STD Y + 12 + 1 , R31
006d80 876e     +STD Y + 12 + 2 , R22
006d81 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
                 ; 000D 013A         }
                 ; 000D 013B 
                 ; 000D 013C         epFactor_C[prbId]   = epTempRef1[prbId] - p2_raw;
                 _0x1A0062:
006d82 89e8      	LDD  R30,Y+16
006d83 89f9      	LDD  R31,Y+16+1
006d84 940e c8f2 	CALL SUBOPT_0x218
006d86 93ff      	PUSH R31
006d87 93ef      	PUSH R30
006d88 940e c908 	CALL SUBOPT_0x21B
006d8a 940e bbfc 	CALL SUBOPT_0xB
006d8c 940e d786 	CALL __SUBF12
006d8e 91af      	POP  R26
006d8f 91bf      	POP  R27
006d90 940e da5c 	CALL __EEPROMWRD
                 ; 000D 013D         epCalType[prbId]    = CAL_EXTOFFSET;
006d92 940e c913 	CALL SUBOPT_0x21C
006d94 e0e2      	LDI  R30,LOW(2)
006d95 940e da6c 	CALL __EEPROMWRB
                 ; 000D 013E         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
006d97 940e c918 	CALL SUBOPT_0x21D
006d99 940e c91d 	CALL SUBOPT_0x21E
                 ; 000D 013F         return 0;
006d9b c0e7      	RJMP _0x20E0067
                 ; 000D 0140     }
                 ; 000D 0141 
                 ; 000D 0142     if(epIsPointSet3[prbId] == 0){
                 _0x1A005B:
006d9c 89a8      	LDD  R26,Y+16
006d9d 89b9      	LDD  R27,Y+16+1
006d9e 5da5      	SUBI R26,LOW(-_epIsPointSet3)
006d9f 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
006da0 940e da50 	CALL __EEPROMRDB
006da2 30e0      	CPI  R30,0
006da3 f011      	BREQ PC+3
006da4 940c 6e1a 	JMP _0x1A0063
                 ; 000D 0143         printDebug("<sensorCalibrate2> -- CAL_EXTLINEAR --\r\n");
                +
006da6 e3e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 281 ) )
006da7 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 281 ) )
006da8 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 281 ) )
006da9 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 281 ) )
                 	__POINTD1FN _0x1A0000,281
006daa 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 0144         epFactor_A[prbId]   = 0;
006dac 89e8      	LDD  R30,Y+16
006dad 89f9      	LDD  R31,Y+16+1
006dae 940e c8bb 	CALL SUBOPT_0x20F
006db0 940e c8f6 	CALL SUBOPT_0x219
                 ; 000D 0145 
                 ; 000D 0146         epFactor_B[prbId]   = (epTempRef2[prbId] - epTempRef1[prbId])/(epADCRef2[prbId] - epADCRef1[prbId]);
006db2 89e8      	LDD  R30,Y+16
006db3 89f9      	LDD  R31,Y+16+1
006db4 eaa9      	LDI  R26,LOW(_epFactor_B)
006db5 e0b5      	LDI  R27,HIGH(_epFactor_B)
006db6 940e bc76 	CALL SUBOPT_0x1C
006db8 93ff      	PUSH R31
006db9 93ef      	PUSH R30
006dba 940e c924 	CALL SUBOPT_0x21F
006dbc 937f      	PUSH R23
006dbd 936f      	PUSH R22
006dbe 93ff      	PUSH R31
006dbf 93ef      	PUSH R30
006dc0 940e c908 	CALL SUBOPT_0x21B
006dc2 91af      	POP  R26
006dc3 91bf      	POP  R27
006dc4 918f      	POP  R24
006dc5 919f      	POP  R25
006dc6 940e c92f 	CALL SUBOPT_0x220
006dc8 937f      	PUSH R23
006dc9 936f      	PUSH R22
006dca 93ff      	PUSH R31
006dcb 93ef      	PUSH R30
006dcc 940e c934 	CALL SUBOPT_0x221
006dce 937f      	PUSH R23
006dcf 936f      	PUSH R22
006dd0 93ff      	PUSH R31
006dd1 93ef      	PUSH R30
006dd2 940e c8fd 	CALL SUBOPT_0x21A
006dd4 91af      	POP  R26
006dd5 91bf      	POP  R27
006dd6 918f      	POP  R24
006dd7 919f      	POP  R25
006dd8 940e c92f 	CALL SUBOPT_0x220
006dda 91af      	POP  R26
006ddb 91bf      	POP  R27
006ddc 918f      	POP  R24
006ddd 919f      	POP  R25
006dde 940e d82b 	CALL __DIVF21
006de0 91af      	POP  R26
006de1 91bf      	POP  R27
006de2 940e da5c 	CALL __EEPROMWRD
                 ; 000D 0147         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
006de4 940e c93f 	CALL SUBOPT_0x222
006de6 940e c8eb 	CALL SUBOPT_0x217
006de8 940e c3e6 	CALL SUBOPT_0x14D
                 ; 000D 0148 
                 ; 000D 0149         epFactor_C[prbId]   = epTempRef2[prbId] - (epFactor_B[prbId] * epADCRef2[prbId]);
006dea 89e8      	LDD  R30,Y+16
006deb 89f9      	LDD  R31,Y+16+1
006dec 940e c8f2 	CALL SUBOPT_0x218
006dee 93ff      	PUSH R31
006def 93ef      	PUSH R30
006df0 940e c924 	CALL SUBOPT_0x21F
006df2 937f      	PUSH R23
006df3 936f      	PUSH R22
006df4 93ff      	PUSH R31
006df5 93ef      	PUSH R30
006df6 89e8      	LDD  R30,Y+16
006df7 89f9      	LDD  R31,Y+16+1
006df8 940e c8eb 	CALL SUBOPT_0x217
006dfa 940e da48 	CALL __EEPROMRDD
006dfc 937f      	PUSH R23
006dfd 936f      	PUSH R22
006dfe 93ff      	PUSH R31
006dff 93ef      	PUSH R30
006e00 940e c934 	CALL SUBOPT_0x221
006e02 91af      	POP  R26
006e03 91bf      	POP  R27
006e04 918f      	POP  R24
006e05 919f      	POP  R25
006e06 940e d7dd 	CALL __MULF12
006e08 91af      	POP  R26
006e09 91bf      	POP  R27
006e0a 918f      	POP  R24
006e0b 919f      	POP  R25
006e0c 940e c92f 	CALL SUBOPT_0x220
006e0e 91af      	POP  R26
006e0f 91bf      	POP  R27
006e10 940e da5c 	CALL __EEPROMWRD
                 ; 000D 014A         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
006e12 940e c918 	CALL SUBOPT_0x21D
006e14 940e c91d 	CALL SUBOPT_0x21E
                 ; 000D 014B 
                 ; 000D 014C         epCalType[prbId]    = CAL_EXTLINEAR;
006e16 940e c913 	CALL SUBOPT_0x21C
006e18 e0e3      	LDI  R30,LOW(3)
006e19 c067      	RJMP _0x1A0094
                 ; 000D 014D     }
                 ; 000D 014E     else{
                 _0x1A0063:
                 ; 000D 014F         printDebug("<sensorCalibrate2> -- CAL_EXTPOLYNOMIAL --\r\n");
                +
006e1a e7e9     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 353 ) )
006e1b e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 353 ) )
006e1c e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 353 ) )
006e1d e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 353 ) )
                 	__POINTD1FN _0x1A0000,353
006e1e 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 0150 
                 ; 000D 0151         gaussian(epADCRef1[prbId],  epADCRef2[prbId],  epADCRef3[prbId],
                 ; 000D 0152                  epTempRef1[prbId], epTempRef2[prbId], epTempRef3[prbId],
                 ; 000D 0153                  &tmpA, &tmpB, &tmpC);
006e20 940e c8fd 	CALL SUBOPT_0x21A
006e22 940e c1c9 	CALL SUBOPT_0xEB
006e24 e0a3      	LDI  R26,LOW(_epADCRef2)
006e25 e0b6      	LDI  R27,HIGH(_epADCRef2)
006e26 940e c944 	CALL SUBOPT_0x223
006e28 940e c94b 	CALL SUBOPT_0x224
006e2a e3a0      	LDI  R26,LOW(_epADCRef3)
006e2b e0b6      	LDI  R27,HIGH(_epADCRef3)
006e2c 940e c944 	CALL SUBOPT_0x223
006e2e 940e c1f3 	CALL SUBOPT_0xF4
006e30 940e c950 	CALL SUBOPT_0x225
006e32 940e da29 	CALL __PUTPARD1
006e34 a1e8      	LDD  R30,Y+32
006e35 a1f9      	LDD  R31,Y+32+1
006e36 940e c953 	CALL SUBOPT_0x226
006e38 940e da29 	CALL __PUTPARD1
006e3a a1ec      	LDD  R30,Y+36
006e3b a1fd      	LDD  R31,Y+36+1
006e3c 940e c956 	CALL SUBOPT_0x227
006e3e 940e da29 	CALL __PUTPARD1
006e40 01fe      	MOVW R30,R28
006e41 96b0      	ADIW R30,32
006e42 93fa      	ST   -Y,R31
006e43 93ea      	ST   -Y,R30
006e44 01fe      	MOVW R30,R28
006e45 967e      	ADIW R30,30
006e46 93fa      	ST   -Y,R31
006e47 93ea      	ST   -Y,R30
006e48 01de      	MOVW R26,R28
006e49 965c      	ADIW R26,28
006e4a 940e 9cbd 	CALL _gaussian
                 ; 000D 0154 
                 ; 000D 0155         epFactor_A[prbId]   = tmpA;
006e4c 89e8      	LDD  R30,Y+16
006e4d 89f9      	LDD  R31,Y+16+1
006e4e e9a5      	LDI  R26,LOW(_epFactor_A)
006e4f e0b5      	LDI  R27,HIGH(_epFactor_A)
006e50 940e d8e3 	CALL __LSLW2
006e52 0fae      	ADD  R26,R30
006e53 1fbf      	ADC  R27,R31
006e54 940e bdd3 	CALL SUBOPT_0x4F
006e56 940e da5c 	CALL __EEPROMWRD
                 ; 000D 0156         epFactor_B[prbId]   = tmpB;
006e58 89e8      	LDD  R30,Y+16
006e59 89f9      	LDD  R31,Y+16+1
006e5a eaa9      	LDI  R26,LOW(_epFactor_B)
006e5b e0b5      	LDI  R27,HIGH(_epFactor_B)
006e5c 940e d8e3 	CALL __LSLW2
006e5e 0fae      	ADD  R26,R30
006e5f 1fbf      	ADC  R27,R31
006e60 940e bf59 	CALL SUBOPT_0x89
006e62 940e da5c 	CALL __EEPROMWRD
                 ; 000D 0157         epFactor_C[prbId]   = tmpC;
006e64 89e8      	LDD  R30,Y+16
006e65 89f9      	LDD  R31,Y+16+1
006e66 ebad      	LDI  R26,LOW(_epFactor_C)
006e67 e0b5      	LDI  R27,HIGH(_epFactor_C)
006e68 940e c959 	CALL SUBOPT_0x228
                 ; 000D 0158 
                 ; 000D 0159         printDebug("<sensorCalibrate2> --A--> %f\r\n", epFactor_A[prbId]);
                +
006e6a eae6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 398 ) )
006e6b e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 398 ) )
006e6c e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 398 ) )
006e6d e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 398 ) )
                 	__POINTD1FN _0x1A0000,398
006e6e 940e c1c9 	CALL SUBOPT_0xEB
006e70 940e c8bb 	CALL SUBOPT_0x20F
006e72 940e c3e6 	CALL SUBOPT_0x14D
                 ; 000D 015A         printDebug("<sensorCalibrate2> --B--> %f\r\n", epFactor_B[prbId]);
006e74 940e c93f 	CALL SUBOPT_0x222
006e76 940e c8eb 	CALL SUBOPT_0x217
006e78 940e c3e6 	CALL SUBOPT_0x14D
                 ; 000D 015B         printDebug("<sensorCalibrate2> --C--> %f\r\n", epFactor_C[prbId]);
006e7a 940e c918 	CALL SUBOPT_0x21D
006e7c 940e c91d 	CALL SUBOPT_0x21E
                 ; 000D 015C 
                 ; 000D 015D 
                 ; 000D 015E 
                 ; 000D 015F         epCalType[prbId]    = CAL_EXTPOLYNOMIAL;
006e7e 940e c913 	CALL SUBOPT_0x21C
006e80 e0e4      	LDI  R30,LOW(4)
                 _0x1A0094:
006e81 940e da6c 	CALL __EEPROMWRB
                 ; 000D 0160     }
                 ; 000D 0161 
                 ; 000D 0162     return 0;
                 _0x20E0067:
006e83 e0e0      	LDI  R30,LOW(0)
006e84 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0068:
006e85 9662      	ADIW R28,18
006e86 9508      	RET
                 ; 000D 0163 }
                 ;/*============================================================*/
                 ;int sensorGetCurrentSetPoint(int ch,int pnt, unsigned char *buf)
                 ; 000D 0166 {
                 _sensorGetCurrentSetPoint:
                 ; 000D 0167     unsigned char   valStr[10];
                 ; 000D 0168     float           valTmp;
                 ; 000D 0169     //signed int      val;
                 ; 000D 016A     int             i;
                 ; 000D 016B 
                 ; 000D 016C     if(pnt == CALPOINT(1)){
006e87 93ba      	ST   -Y,R27
006e88 93aa      	ST   -Y,R26
006e89 972e      	SBIW R28,14
006e8a 931a      	ST   -Y,R17
006e8b 930a      	ST   -Y,R16
                 ;	ch -> Y+20
                 ;	pnt -> Y+18
                 ;	*buf -> Y+16
                 ;	valStr -> Y+6
                 ;	valTmp -> Y+2
                 ;	i -> R16,R17
006e8c 89aa      	LDD  R26,Y+18
006e8d 89bb      	LDD  R27,Y+18+1
006e8e 36a5      	CPI  R26,LOW(0x65)
006e8f e0e0      	LDI  R30,HIGH(0x65)
006e90 07be      	CPC  R27,R30
006e91 f551      	BRNE _0x1A0065
                 ; 000D 016D         if(epIsPointSet1[ch] == 1){
006e92 89ac      	LDD  R26,Y+20
006e93 89bd      	LDD  R27,Y+20+1
006e94 52af      	SUBI R26,LOW(-_epIsPointSet1)
006e95 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
006e96 940e da50 	CALL __EEPROMRDB
006e98 30e1      	CPI  R30,LOW(0x1)
006e99 f4b9      	BRNE _0x1A0066
                 ; 000D 016E             valTmp  = epTempRef1[ch];
006e9a 89ec      	LDD  R30,Y+20
006e9b 89fd      	LDD  R31,Y+20+1
006e9c 940e c950 	CALL SUBOPT_0x225
006e9e 940e c072 	CALL SUBOPT_0xB4
                 ; 000D 016F             printDebug("<sensorGetCurrentSetPoint> tempRef1 = [%f][%f]\r\n",epTempRef1[ch],valTmp);
                +
006ea0 ece5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 429 ) )
006ea1 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 429 ) )
006ea2 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 429 ) )
006ea3 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 429 ) )
                 	__POINTD1FN _0x1A0000,429
006ea4 940e c94b 	CALL SUBOPT_0x224
006ea6 940e c950 	CALL SUBOPT_0x225
006ea8 940e be06 	CALL SUBOPT_0x57
006eaa 940e bc8a 	CALL SUBOPT_0x20
                 ; 000D 0170             ftoa(valTmp,2,valStr);
006eac 940e c1ef 	CALL SUBOPT_0xF3
006eae 940e c962 	CALL SUBOPT_0x229
                 ; 000D 0171             //val = (epTempRef1[ch] * 100);
                 ; 000D 0172         }
                 ; 000D 0173         else{
006eb0 c00a      	RJMP _0x1A0067
                 _0x1A0066:
                 ; 000D 0174             printDebug("<sensorGetCurrentSetPoint> tempRef1 not set [0.00]\r\n");
                +
006eb1 efe6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 478 ) )
006eb2 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 478 ) )
006eb3 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 478 ) )
006eb4 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 478 ) )
                 	__POINTD1FN _0x1A0000,478
006eb5 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 0175             sprintf(valStr,"0.00");                 //val = 0;
006eb7 940e be01 	CALL SUBOPT_0x56
006eb9 940e c968 	CALL SUBOPT_0x22A
                 ; 000D 0176         }
                 _0x1A0067:
                 ; 000D 0177     }
                 ; 000D 0178     else if(pnt == CALPOINT(2)){
006ebb c06d      	RJMP _0x1A0068
                 _0x1A0065:
006ebc 89aa      	LDD  R26,Y+18
006ebd 89bb      	LDD  R27,Y+18+1
006ebe 36a6      	CPI  R26,LOW(0x66)
006ebf e0e0      	LDI  R30,HIGH(0x66)
006ec0 07be      	CPC  R27,R30
006ec1 f551      	BRNE _0x1A0069
                 ; 000D 0179         if(epIsPointSet2[ch] == 1){
006ec2 89ac      	LDD  R26,Y+20
006ec3 89bd      	LDD  R27,Y+20+1
006ec4 50a2      	SUBI R26,LOW(-_epIsPointSet2)
006ec5 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
006ec6 940e da50 	CALL __EEPROMRDB
006ec8 30e1      	CPI  R30,LOW(0x1)
006ec9 f4b9      	BRNE _0x1A006A
                 ; 000D 017A             valTmp  = epTempRef2[ch];
006eca 89ec      	LDD  R30,Y+20
006ecb 89fd      	LDD  R31,Y+20+1
006ecc 940e c953 	CALL SUBOPT_0x226
006ece 940e c072 	CALL SUBOPT_0xB4
                 ; 000D 017B             printDebug("<sensorGetCurrentSetPoint> tempRef2 = [%f][%f]\r\n",epTempRef2[ch],valTmp);
                +
006ed0 e3e0     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 536 ) )
006ed1 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 536 ) )
006ed2 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 536 ) )
006ed3 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 536 ) )
                 	__POINTD1FN _0x1A0000,536
006ed4 940e c94b 	CALL SUBOPT_0x224
006ed6 940e c953 	CALL SUBOPT_0x226
006ed8 940e be06 	CALL SUBOPT_0x57
006eda 940e bc8a 	CALL SUBOPT_0x20
                 ; 000D 017C             ftoa(valTmp,2,valStr);
006edc 940e c1ef 	CALL SUBOPT_0xF3
006ede 940e c962 	CALL SUBOPT_0x229
                 ; 000D 017D             //val = (epTempRef1[ch] * 100);
                 ; 000D 017E         }
                 ; 000D 017F         else{
006ee0 c00a      	RJMP _0x1A006B
                 _0x1A006A:
                 ; 000D 0180             printDebug("<sensorGetCurrentSetPoint> tempRef2 not set [0.00]\r\n");
                +
006ee1 e6e1     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 585 ) )
006ee2 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 585 ) )
006ee3 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 585 ) )
006ee4 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 585 ) )
                 	__POINTD1FN _0x1A0000,585
006ee5 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 0181             sprintf(valStr,"0.00");                 //val = 0;
006ee7 940e be01 	CALL SUBOPT_0x56
006ee9 940e c968 	CALL SUBOPT_0x22A
                 ; 000D 0182         }
                 _0x1A006B:
                 ; 000D 0183         /*
                 ; 000D 0184         if(epIsPointSet2[ch] == 1){ val = (epTempRef2[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef2[ch]);}
                 ; 000D 0185         else{                       val = 0;        }
                 ; 000D 0186         */
                 ; 000D 0187     }
                 ; 000D 0188     else if(pnt == CALPOINT(3)){
006eeb c03d      	RJMP _0x1A006C
                 _0x1A0069:
006eec 89aa      	LDD  R26,Y+18
006eed 89bb      	LDD  R27,Y+18+1
006eee 36a7      	CPI  R26,LOW(0x67)
006eef e0e0      	LDI  R30,HIGH(0x67)
006ef0 07be      	CPC  R27,R30
006ef1 f551      	BRNE _0x1A006D
                 ; 000D 0189         if(epIsPointSet3[ch] == 1){
006ef2 89ac      	LDD  R26,Y+20
006ef3 89bd      	LDD  R27,Y+20+1
006ef4 5da5      	SUBI R26,LOW(-_epIsPointSet3)
006ef5 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
006ef6 940e da50 	CALL __EEPROMRDB
006ef8 30e1      	CPI  R30,LOW(0x1)
006ef9 f4b9      	BRNE _0x1A006E
                 ; 000D 018A             valTmp  = epTempRef3[ch];
006efa 89ec      	LDD  R30,Y+20
006efb 89fd      	LDD  R31,Y+20+1
006efc 940e c956 	CALL SUBOPT_0x227
006efe 940e c072 	CALL SUBOPT_0xB4
                 ; 000D 018B             printDebug("<sensorGetCurrentSetPoint> tempRef3 = [%f][%f]\r\n",epTempRef3[ch],valTmp);
                +
006f00 e9e6     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 638 ) )
006f01 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 638 ) )
006f02 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 638 ) )
006f03 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 638 ) )
                 	__POINTD1FN _0x1A0000,638
006f04 940e c94b 	CALL SUBOPT_0x224
006f06 940e c956 	CALL SUBOPT_0x227
006f08 940e be06 	CALL SUBOPT_0x57
006f0a 940e bc8a 	CALL SUBOPT_0x20
                 ; 000D 018C             ftoa(valTmp,2,valStr);
006f0c 940e c1ef 	CALL SUBOPT_0xF3
006f0e 940e c962 	CALL SUBOPT_0x229
                 ; 000D 018D             //val = (epTempRef1[ch] * 100);
                 ; 000D 018E         }
                 ; 000D 018F         else{
006f10 c00a      	RJMP _0x1A006F
                 _0x1A006E:
                 ; 000D 0190             printDebug("<sensorGetCurrentSetPoint> tempRef3 not set [0.00]\r\n");
                +
006f11 ece7     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 687 ) )
006f12 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 687 ) )
006f13 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 687 ) )
006f14 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 687 ) )
                 	__POINTD1FN _0x1A0000,687
006f15 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 0191             sprintf(valStr,"0.00");                 //val = 0;
006f17 940e be01 	CALL SUBOPT_0x56
006f19 940e c968 	CALL SUBOPT_0x22A
                 ; 000D 0192         }
                 _0x1A006F:
                 ; 000D 0193         /*
                 ; 000D 0194         if(epIsPointSet3[ch] == 1){ val = (epTempRef3[ch] * 100);   printDebug("<sensorGetCurrentSetPoint> tempRef = [%f]\r\n",epTempRef3[ch]);}
                 ; 000D 0195         else{                       val = 0;        }
                 ; 000D 0196         */
                 ; 000D 0197     }
                 ; 000D 0198     else{
006f1b c00d      	RJMP _0x1A0070
                 _0x1A006D:
                 ; 000D 0199         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
                +
006f1c efec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 740 ) )
006f1d e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 740 ) )
006f1e e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 740 ) )
006f1f e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 740 ) )
                 	__POINTD1FN _0x1A0000,740
006f20 940e da29 	CALL __PUTPARD1
006f22 89ee      	LDD  R30,Y+22
006f23 89ff      	LDD  R31,Y+22+1
006f24 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000D 019A         return -1;
006f26 efef      	LDI  R30,LOW(65535)
006f27 efff      	LDI  R31,HIGH(65535)
006f28 c0d8      	RJMP _0x20E0066
                 ; 000D 019B     }
                 _0x1A0070:
                 _0x1A006C:
                 _0x1A0068:
                 ; 000D 019C     //printDebug("<sensorGetCurrentSetPoint> read val = [%d]\r\n",val);
                 ; 000D 019D     printDebug("<sensorGetCurrentSetPoint> read val(%d) = [%s]\r\n",strlen(valStr),valStr);
                +
006f29 e3e4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 796 ) )
006f2a e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 796 ) )
006f2b e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 796 ) )
006f2c e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 796 ) )
                 	__POINTD1FN _0x1A0000,796
006f2d 940e da29 	CALL __PUTPARD1
006f2f 01de      	MOVW R26,R28
006f30 961a      	ADIW R26,10
006f31 940e a16b 	CALL _strlen
006f33 940e bd18 	CALL SUBOPT_0x34
006f35 01fe      	MOVW R30,R28
006f36 963e      	ADIW R30,14
006f37 940e c39b 	CALL SUBOPT_0x140
                 ; 000D 019E 
                 ; 000D 019F     if(valStr[0] == '-'){
006f39 81ae      	LDD  R26,Y+6
006f3a 32ad      	CPI  R26,LOW(0x2D)
006f3b f011      	BREQ PC+3
006f3c 940c 6f8f 	JMP _0x1A0071
                 ; 000D 01A0         buf[0] = 1;
006f3e 89a8      	LDD  R26,Y+16
006f3f 89b9      	LDD  R27,Y+16+1
006f40 e0e1      	LDI  R30,LOW(1)
006f41 93ec      	ST   X,R30
                 ; 000D 01A1         if(strlen(valStr) == 7){
006f42 940e c973 	CALL SUBOPT_0x22B
006f44 30e7      	CPI  R30,LOW(0x7)
006f45 e0a0      	LDI  R26,HIGH(0x7)
006f46 07fa      	CPC  R31,R26
006f47 f499      	BRNE _0x1A0072
                 ; 000D 01A2             buf[1]  = valStr[1] - 0x30;     buf[2]  = valStr[2] - 0x30;     buf[3]  = valStr[3] - 0x30;
006f48 81ef      	LDD  R30,Y+7
006f49 53e0      	SUBI R30,LOW(48)
                +
006f4a 89a8     +LDD R26 , Y + 16
006f4b 89b9     +LDD R27 , Y + 16 + 1
006f4c 9611     +ADIW R26 , 1
006f4d 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
006f4e 85e8      	LDD  R30,Y+8
006f4f 940e c977 	CALL SUBOPT_0x22C
006f51 85e9      	LDD  R30,Y+9
006f52 940e c97d 	CALL SUBOPT_0x22D
                 ; 000D 01A3             buf[4]  = valStr[5] - 0x30;     buf[5]  = valStr[6] - 0x30;
006f54 85eb      	LDD  R30,Y+11
006f55 940e c983 	CALL SUBOPT_0x22E
006f57 85ec      	LDD  R30,Y+12
006f58 940e c989 	CALL SUBOPT_0x22F
                 ; 000D 01A4         }
                 ; 000D 01A5         else if(strlen(valStr) == 6){
006f5a c033      	RJMP _0x1A0073
                 _0x1A0072:
006f5b 940e c973 	CALL SUBOPT_0x22B
006f5d 30e6      	CPI  R30,LOW(0x6)
006f5e e0a0      	LDI  R26,HIGH(0x6)
006f5f 07fa      	CPC  R31,R26
006f60 f479      	BRNE _0x1A0074
                 ; 000D 01A6             buf[1]  = 0;                    buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
006f61 940e c98f 	CALL SUBOPT_0x230
006f63 81ef      	LDD  R30,Y+7
006f64 940e c977 	CALL SUBOPT_0x22C
006f66 85e8      	LDD  R30,Y+8
006f67 940e c97d 	CALL SUBOPT_0x22D
                 ; 000D 01A7             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
006f69 85ea      	LDD  R30,Y+10
006f6a 940e c983 	CALL SUBOPT_0x22E
006f6c 85eb      	LDD  R30,Y+11
006f6d 940e c989 	CALL SUBOPT_0x22F
                 ; 000D 01A8         }
                 ; 000D 01A9         else if(strlen(valStr) == 5){
006f6f c01e      	RJMP _0x1A0075
                 _0x1A0074:
006f70 940e c973 	CALL SUBOPT_0x22B
006f72 30e5      	CPI  R30,LOW(0x5)
006f73 e0a0      	LDI  R26,HIGH(0x5)
006f74 07fa      	CPC  R31,R26
006f75 f489      	BRNE _0x1A0076
                 ; 000D 01AA             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[1] - 0x30;
006f76 940e c98f 	CALL SUBOPT_0x230
006f78 89a8      	LDD  R26,Y+16
006f79 89b9      	LDD  R27,Y+16+1
006f7a 9612      	ADIW R26,2
006f7b e0e0      	LDI  R30,LOW(0)
006f7c 93ec      	ST   X,R30
006f7d 81ef      	LDD  R30,Y+7
006f7e 940e c97d 	CALL SUBOPT_0x22D
                 ; 000D 01AB             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
006f80 85e9      	LDD  R30,Y+9
006f81 940e c983 	CALL SUBOPT_0x22E
006f83 85ea      	LDD  R30,Y+10
006f84 940e c989 	CALL SUBOPT_0x22F
                 ; 000D 01AC         }
                 ; 000D 01AD         else{
006f86 c007      	RJMP _0x1A0077
                 _0x1A0076:
                 ; 000D 01AE             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
006f87 940e c995 	CALL SUBOPT_0x231
006f89 940e bc2c 	CALL SUBOPT_0x12
                 ; 000D 01AF             return -1;
006f8b efef      	LDI  R30,LOW(65535)
006f8c efff      	LDI  R31,HIGH(65535)
006f8d c073      	RJMP _0x20E0066
                 ; 000D 01B0         }
                 _0x1A0077:
                 _0x1A0075:
                 _0x1A0073:
                 ; 000D 01B1     }
                 ; 000D 01B2     else{
006f8e c050      	RJMP _0x1A0078
                 _0x1A0071:
                 ; 000D 01B3         buf[0] = 0;
006f8f 89a8      	LDD  R26,Y+16
006f90 89b9      	LDD  R27,Y+16+1
006f91 e0e0      	LDI  R30,LOW(0)
006f92 93ec      	ST   X,R30
                 ; 000D 01B4         if(strlen(valStr) == 6){
006f93 940e c973 	CALL SUBOPT_0x22B
006f95 30e6      	CPI  R30,LOW(0x6)
006f96 e0a0      	LDI  R26,HIGH(0x6)
006f97 07fa      	CPC  R31,R26
006f98 f499      	BRNE _0x1A0079
                 ; 000D 01B5             buf[1]  = valStr[0] - 0x30;     buf[2]  = valStr[1] - 0x30;     buf[3]  = valStr[2] - 0x30;
006f99 81ee      	LDD  R30,Y+6
006f9a 53e0      	SUBI R30,LOW(48)
                +
006f9b 89a8     +LDD R26 , Y + 16
006f9c 89b9     +LDD R27 , Y + 16 + 1
006f9d 9611     +ADIW R26 , 1
006f9e 93ec     +ST X , R30
                 	__PUTB1SNS 16,1
006f9f 81ef      	LDD  R30,Y+7
006fa0 940e c977 	CALL SUBOPT_0x22C
006fa2 85e8      	LDD  R30,Y+8
006fa3 940e c97d 	CALL SUBOPT_0x22D
                 ; 000D 01B6             buf[4]  = valStr[4] - 0x30;     buf[5]  = valStr[5] - 0x30;
006fa5 85ea      	LDD  R30,Y+10
006fa6 940e c983 	CALL SUBOPT_0x22E
006fa8 85eb      	LDD  R30,Y+11
006fa9 940e c989 	CALL SUBOPT_0x22F
                 ; 000D 01B7         }
                 ; 000D 01B8         else if(strlen(valStr) == 5){
006fab c033      	RJMP _0x1A007A
                 _0x1A0079:
006fac 940e c973 	CALL SUBOPT_0x22B
006fae 30e5      	CPI  R30,LOW(0x5)
006faf e0a0      	LDI  R26,HIGH(0x5)
006fb0 07fa      	CPC  R31,R26
006fb1 f479      	BRNE _0x1A007B
                 ; 000D 01B9             buf[1]  = 0;                    buf[2]  = valStr[0] - 0x30;     buf[3]  = valStr[1] - 0x30;
006fb2 940e c98f 	CALL SUBOPT_0x230
006fb4 81ee      	LDD  R30,Y+6
006fb5 940e c977 	CALL SUBOPT_0x22C
006fb7 81ef      	LDD  R30,Y+7
006fb8 940e c97d 	CALL SUBOPT_0x22D
                 ; 000D 01BA             buf[4]  = valStr[3] - 0x30;     buf[5]  = valStr[4] - 0x30;
006fba 85e9      	LDD  R30,Y+9
006fbb 940e c983 	CALL SUBOPT_0x22E
006fbd 85ea      	LDD  R30,Y+10
006fbe 940e c989 	CALL SUBOPT_0x22F
                 ; 000D 01BB         }
                 ; 000D 01BC         else if(strlen(valStr) == 4){
006fc0 c01e      	RJMP _0x1A007C
                 _0x1A007B:
006fc1 940e c973 	CALL SUBOPT_0x22B
006fc3 30e4      	CPI  R30,LOW(0x4)
006fc4 e0a0      	LDI  R26,HIGH(0x4)
006fc5 07fa      	CPC  R31,R26
006fc6 f489      	BRNE _0x1A007D
                 ; 000D 01BD             buf[1]  = 0;                    buf[2]  = 0;                    buf[3]  = valStr[0] - 0x30;
006fc7 940e c98f 	CALL SUBOPT_0x230
006fc9 89a8      	LDD  R26,Y+16
006fca 89b9      	LDD  R27,Y+16+1
006fcb 9612      	ADIW R26,2
006fcc e0e0      	LDI  R30,LOW(0)
006fcd 93ec      	ST   X,R30
006fce 81ee      	LDD  R30,Y+6
006fcf 940e c97d 	CALL SUBOPT_0x22D
                 ; 000D 01BE             buf[4]  = valStr[2] - 0x30;     buf[5]  = valStr[3] - 0x30;
006fd1 85e8      	LDD  R30,Y+8
006fd2 940e c983 	CALL SUBOPT_0x22E
006fd4 85e9      	LDD  R30,Y+9
006fd5 940e c989 	CALL SUBOPT_0x22F
                 ; 000D 01BF         }
                 ; 000D 01C0         else{
006fd7 c007      	RJMP _0x1A007E
                 _0x1A007D:
                 ; 000D 01C1             printDebug("<sensorGetCurrentSetPoint> out of condition valStr = '%s'",valStr);
006fd8 940e c995 	CALL SUBOPT_0x231
006fda 940e bc2c 	CALL SUBOPT_0x12
                 ; 000D 01C2             return -1;
006fdc efef      	LDI  R30,LOW(65535)
006fdd efff      	LDI  R31,HIGH(65535)
006fde c022      	RJMP _0x20E0066
                 ; 000D 01C3         }
                 _0x1A007E:
                 _0x1A007C:
                 _0x1A007A:
                 ; 000D 01C4     }
                 _0x1A0078:
                 ; 000D 01C5 
                 ; 000D 01C6     printDebug("<sensorGetCurrentSetPoint> buf read");
                +
006fdf e9ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 903 ) )
006fe0 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 903 ) )
006fe1 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 903 ) )
006fe2 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 903 ) )
                 	__POINTD1FN _0x1A0000,903
006fe3 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 01C7     for(i=0;i<6;i++){
                +
006fe5 e000     +LDI R16 , LOW ( 0 )
006fe6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1A0080:
                +
006fe7 3006     +CPI R16 , LOW ( 6 )
006fe8 e0e0     +LDI R30 , HIGH ( 6 )
006fe9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
006fea f474      	BRGE _0x1A0081
                 ; 000D 01C8         printDebug("[%d]",buf[i]);
                +
006feb ece3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 939 ) )
006fec e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 939 ) )
006fed e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 939 ) )
006fee e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 939 ) )
                 	__POINTD1FN _0x1A0000,939
006fef 940e da29 	CALL __PUTPARD1
006ff1 01f8      	MOVW R30,R16
006ff2 89ac      	LDD  R26,Y+20
006ff3 89bd      	LDD  R27,Y+20+1
006ff4 940e c560 	CALL SUBOPT_0x184
                 ; 000D 01C9     }
                +
006ff6 5f0f     +SUBI R16 , LOW ( - 1 )
006ff7 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
006ff8 cfee      	RJMP _0x1A0080
                 _0x1A0081:
                 ; 000D 01CA     printDebug("\r\n");
                +
006ff9 e3ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 39 ) )
006ffa e4f4     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 39 ) )
006ffb e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 39 ) )
006ffc e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 39 ) )
                 	__POINTD1FN _0x1A0000,39
006ffd 940e bbba 	CALL SUBOPT_0x3
                 ; 000D 01CB 
                 ; 000D 01CC     return 0;
006fff e0e0      	LDI  R30,LOW(0)
007000 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0066:
007001 8119      	LDD  R17,Y+1
007002 8108      	LDD  R16,Y+0
007003 9666      	ADIW R28,22
007004 9508      	RET
                 ; 000D 01CD }
                 ;/*============================================================*/
                 ;int sensorSetCurrentSetPoint(int ch,int pnt,unsigned char *buf)
                 ; 000D 01D0 {
                 _sensorSetCurrentSetPoint:
                 ; 000D 01D1     float   val=0;
                 ; 000D 01D2 
                 ; 000D 01D3     if(operating_config.sensorEnable[ch] != 0x01){
007005 940e c774 	CALL SUBOPT_0x1DB
                 ;	ch -> Y+8
                 ;	pnt -> Y+6
                 ;	*buf -> Y+4
                 ;	val -> Y+0
                +
007007 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
007008 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
007009 85a8      	LDD  R26,Y+8
00700a 85b9      	LDD  R27,Y+8+1
00700b 940e c8c7 	CALL SUBOPT_0x211
00700d f069      	BREQ _0x1A0082
                 ; 000D 01D4         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d is disable\r\n",ch+1);
                +
00700e ece8     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 944 ) )
00700f e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 944 ) )
007010 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 944 ) )
007011 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 944 ) )
                 	__POINTD1FN _0x1A0000,944
007012 940e c99f 	CALL SUBOPT_0x232
007014 9631      	ADIW R30,1
007015 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000D 01D5         return -1;
007017 efef      	LDI  R30,LOW(65535)
007018 efff      	LDI  R31,HIGH(65535)
007019 962a      	ADIW R28,10
00701a 9508      	RET
                 ; 000D 01D6     }
                 ; 000D 01D7 
                 ; 000D 01D8     if(sensor[ch].status != SENS_NORMAL){
                 _0x1A0082:
00701b 85a8      	LDD  R26,Y+8
00701c 85b9      	LDD  R27,Y+8+1
00701d 940e c8cc 	CALL SUBOPT_0x212
00701f 30e0      	CPI  R30,0
007020 f091      	BREQ _0x1A0083
                 ; 000D 01D9         printDebug("<sensorSetCurrentSetPoint> ABORT: sensor ch %d error(0x%02X)\r\n",ch+1,sensor[ch].status);
                +
007021 e0e4     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1004 ) )
007022 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1004 ) )
007023 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1004 ) )
007024 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1004 ) )
                 	__POINTD1FN _0x1A0000,1004
007025 940e c99f 	CALL SUBOPT_0x232
007027 940e c8d3 	CALL SUBOPT_0x213
007029 89a8      	LDD  R26,Y+16
00702a 89b9      	LDD  R27,Y+16+1
00702b 940e c8cc 	CALL SUBOPT_0x212
00702d 940e c8d9 	CALL SUBOPT_0x214
                 ; 000D 01DA         return -1;
00702f efef      	LDI  R30,LOW(65535)
007030 efff      	LDI  R31,HIGH(65535)
007031 940c 74fd 	JMP  _0x20E005C
                 ; 000D 01DB     }
                 ; 000D 01DC 
                 ; 000D 01DD     printDebug("<sensorSetCurrentSetPoint> buf: [%d]/[%d][%d][%d][%d][%d]\r\n",
                 _0x1A0083:
                 ; 000D 01DE                                         buf[0],buf[1],buf[2],buf[3],buf[4],buf[5]);
                +
007033 e4e3     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1067 ) )
007034 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1067 ) )
007035 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1067 ) )
007036 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1067 ) )
                 	__POINTD1FN _0x1A0000,1067
007037 940e da29 	CALL __PUTPARD1
007039 85a8      	LDD  R26,Y+8
00703a 85b9      	LDD  R27,Y+8+1
00703b 91ec      	LD   R30,X
00703c 940e be67 	CALL SUBOPT_0x65
00703e 85ec      	LDD  R30,Y+12
00703f 85fd      	LDD  R31,Y+12+1
007040 81e1      	LDD  R30,Z+1
007041 940e be67 	CALL SUBOPT_0x65
007043 89e8      	LDD  R30,Y+16
007044 89f9      	LDD  R31,Y+16+1
007045 81e2      	LDD  R30,Z+2
007046 940e be67 	CALL SUBOPT_0x65
007048 89ec      	LDD  R30,Y+20
007049 89fd      	LDD  R31,Y+20+1
00704a 81e3      	LDD  R30,Z+3
00704b 940e be67 	CALL SUBOPT_0x65
00704d 8de8      	LDD  R30,Y+24
00704e 8df9      	LDD  R31,Y+24+1
00704f 81e4      	LDD  R30,Z+4
007050 940e be67 	CALL SUBOPT_0x65
007052 8dec      	LDD  R30,Y+28
007053 8dfd      	LDD  R31,Y+28+1
007054 81e5      	LDD  R30,Z+5
007055 940e be67 	CALL SUBOPT_0x65
007057 e188      	LDI  R24,24
007058 940e 9ad2 	CALL _printDebug
00705a 966c      	ADIW R28,28
                 ; 000D 01DF 
                 ; 000D 01E0     val =  (float) (0.0);
00705b e0e0      	LDI  R30,LOW(0)
00705c 940e da24 	CALL __CLRD1S0
                 ; 000D 01E1     val += (float) (buf[1] * 100);
00705e 81ec      	LDD  R30,Y+4
00705f 81fd      	LDD  R31,Y+4+1
007060 81e1      	LDD  R30,Z+1
007061 e6a4      	LDI  R26,LOW(100)
007062 940e c9a4 	CALL SUBOPT_0x233
                 ; 000D 01E2     val += (float) (buf[2] * 10);
007064 81e2      	LDD  R30,Z+2
007065 e0aa      	LDI  R26,LOW(10)
007066 940e c9a4 	CALL SUBOPT_0x233
                 ; 000D 01E3     val += (float) (buf[3]);
007068 81e3      	LDD  R30,Z+3
007069 27ff      	CLR  R31
00706a 2766      	CLR  R22
00706b 2777      	CLR  R23
00706c 940e d753 	CALL __CDF1
00706e 940e c9b3 	CALL SUBOPT_0x234
                 ; 000D 01E4     val += (float) (buf[4] * 0.1);
007070 81e4      	LDD  R30,Z+4
007071 940e c9bc 	CALL SUBOPT_0x235
007073 940e bffe 	CALL SUBOPT_0xA0
007075 940e c9b3 	CALL SUBOPT_0x234
                 ; 000D 01E5     val += (float) (buf[5] * 0.01);
007077 81e5      	LDD  R30,Z+5
007078 940e c9bc 	CALL SUBOPT_0x235
                +
00707a e0aa     +LDI R26 , LOW ( 0x3C23D70A )
00707b edb7     +LDI R27 , HIGH ( 0x3C23D70A )
00707c e283     +LDI R24 , BYTE3 ( 0x3C23D70A )
00707d e39c     +LDI R25 , BYTE4 ( 0x3C23D70A )
                 	__GETD2N 0x3C23D70A
00707e 940e d7dd 	CALL __MULF12
007080 940e bf6c 	CALL SUBOPT_0x8C
007082 940e d78d 	CALL __ADDF12
007084 940e c158 	CALL SUBOPT_0xD9
                 ; 000D 01E6     if(buf[0] == 1){    val *= (float) (-1.0);  }
007086 81ac      	LDD  R26,Y+4
007087 81bd      	LDD  R27,Y+4+1
007088 91ac      	LD   R26,X
007089 30a1      	CPI  R26,LOW(0x1)
00708a f441      	BRNE _0x1A0084
00708b 940e bf6c 	CALL SUBOPT_0x8C
                +
00708d e0e0     +LDI R30 , LOW ( 0xBF800000 )
00708e e0f0     +LDI R31 , HIGH ( 0xBF800000 )
00708f e860     +LDI R22 , BYTE3 ( 0xBF800000 )
007090 eb7f     +LDI R23 , BYTE4 ( 0xBF800000 )
                 	__GETD1N 0xBF800000
007091 940e c010 	CALL SUBOPT_0xA2
                 ; 000D 01E7 
                 ; 000D 01E8     printDebug("<sensorSetCurrentSetPoint> sensor %1d, point %1d, set to [%f]",ch+1,pnt,val);
                 _0x1A0084:
                +
007093 e7ef     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 1127 ) )
007094 e4f8     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 1127 ) )
007095 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 1127 ) )
007096 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 1127 ) )
                 	__POINTD1FN _0x1A0000,1127
007097 940e c99f 	CALL SUBOPT_0x232
007099 940e c8d3 	CALL SUBOPT_0x213
00709b 85ee      	LDD  R30,Y+14
00709c 85ff      	LDD  R31,Y+14+1
00709d 940e d919 	CALL __CWD1
00709f 940e bf6f 	CALL SUBOPT_0x8D
0070a1 940e bf76 	CALL SUBOPT_0x8E
                 ; 000D 01E9 
                 ; 000D 01EA     if(pnt == CALPOINT(1)){
0070a3 81ae      	LDD  R26,Y+6
0070a4 81bf      	LDD  R27,Y+6+1
0070a5 36a5      	CPI  R26,LOW(0x65)
0070a6 e0e0      	LDI  R30,HIGH(0x65)
0070a7 07be      	CPC  R27,R30
0070a8 f501      	BRNE _0x1A0085
                 ; 000D 01EB         epTempRef1[ch]      = val;
0070a9 85e8      	LDD  R30,Y+8
0070aa 85f9      	LDD  R31,Y+8+1
0070ab eeaa      	LDI  R26,LOW(_epTempRef1)
0070ac e0b5      	LDI  R27,HIGH(_epTempRef1)
0070ad 940e c959 	CALL SUBOPT_0x228
                 ; 000D 01EC         epADCRef1[ch]       = adcData[ch];
0070af 85e8      	LDD  R30,Y+8
0070b0 85f9      	LDD  R31,Y+8+1
0070b1 eda6      	LDI  R26,LOW(_epADCRef1)
0070b2 e0b5      	LDI  R27,HIGH(_epADCRef1)
0070b3 940e bc76 	CALL SUBOPT_0x1C
0070b5 940e c9c2 	CALL SUBOPT_0x236
0070b7 940e c9c7 	CALL SUBOPT_0x237
                 ; 000D 01ED         epIsPointSet1[ch]   = 1;
0070b9 52af      	SUBI R26,LOW(-_epIsPointSet1)
0070ba 4fba      	SBCI R27,HIGH(-_epIsPointSet1)
0070bb e0e1      	LDI  R30,LOW(1)
0070bc 940e c9cd 	CALL SUBOPT_0x238
                 ; 000D 01EE         epIsPointSet2[ch]   = 0;                        // -- reset cal_point 2 -- //
0070be 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0070bf 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0070c0 e0e0      	LDI  R30,LOW(0)
0070c1 940e c9cd 	CALL SUBOPT_0x238
                 ; 000D 01EF         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
0070c3 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0070c4 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0070c5 e0e0      	LDI  R30,LOW(0)
0070c6 940e da6c 	CALL __EEPROMWRB
                 ; 000D 01F0     }
                 ; 000D 01F1     else if(pnt == CALPOINT(2)){
0070c8 c049      	RJMP _0x1A0086
                 _0x1A0085:
0070c9 81ae      	LDD  R26,Y+6
0070ca 81bf      	LDD  R27,Y+6+1
0070cb 36a6      	CPI  R26,LOW(0x66)
0070cc e0e0      	LDI  R30,HIGH(0x66)
0070cd 07be      	CPC  R27,R30
0070ce f4d9      	BRNE _0x1A0087
                 ; 000D 01F2         epTempRef2[ch]      = val;
0070cf 85e8      	LDD  R30,Y+8
0070d0 85f9      	LDD  R31,Y+8+1
0070d1 e1a7      	LDI  R26,LOW(_epTempRef2)
0070d2 e0b6      	LDI  R27,HIGH(_epTempRef2)
0070d3 940e c959 	CALL SUBOPT_0x228
                 ; 000D 01F3         epADCRef2[ch]       = adcData[ch];
0070d5 85e8      	LDD  R30,Y+8
0070d6 85f9      	LDD  R31,Y+8+1
0070d7 e0a3      	LDI  R26,LOW(_epADCRef2)
0070d8 e0b6      	LDI  R27,HIGH(_epADCRef2)
0070d9 940e bc76 	CALL SUBOPT_0x1C
0070db 940e c9c2 	CALL SUBOPT_0x236
0070dd 940e c9c7 	CALL SUBOPT_0x237
                 ; 000D 01F4         epIsPointSet2[ch]   = 1;
0070df 50a2      	SUBI R26,LOW(-_epIsPointSet2)
0070e0 4fba      	SBCI R27,HIGH(-_epIsPointSet2)
0070e1 e0e1      	LDI  R30,LOW(1)
0070e2 940e c9cd 	CALL SUBOPT_0x238
                 ; 000D 01F5         epIsPointSet3[ch]   = 0;                        // -- reset cal_point 3 -- //
0070e4 5da5      	SUBI R26,LOW(-_epIsPointSet3)
0070e5 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
0070e6 e0e0      	LDI  R30,LOW(0)
0070e7 940e da6c 	CALL __EEPROMWRB
                 ; 000D 01F6     }
                 ; 000D 01F7     else if(pnt == CALPOINT(3)){
0070e9 c028      	RJMP _0x1A0088
                 _0x1A0087:
0070ea 81ae      	LDD  R26,Y+6
0070eb 81bf      	LDD  R27,Y+6+1
0070ec 36a7      	CPI  R26,LOW(0x67)
0070ed e0e0      	LDI  R30,HIGH(0x67)
0070ee 07be      	CPC  R27,R30
0070ef f4b1      	BRNE _0x1A0089
                 ; 000D 01F8         epTempRef3[ch]      = val;
0070f0 85e8      	LDD  R30,Y+8
0070f1 85f9      	LDD  R31,Y+8+1
0070f2 e4a4      	LDI  R26,LOW(_epTempRef3)
0070f3 e0b6      	LDI  R27,HIGH(_epTempRef3)
0070f4 940e c959 	CALL SUBOPT_0x228
                 ; 000D 01F9         epADCRef3[ch]       = adcData[ch];
0070f6 85e8      	LDD  R30,Y+8
0070f7 85f9      	LDD  R31,Y+8+1
0070f8 e3a0      	LDI  R26,LOW(_epADCRef3)
0070f9 e0b6      	LDI  R27,HIGH(_epADCRef3)
0070fa 940e bc76 	CALL SUBOPT_0x1C
0070fc 940e c9c2 	CALL SUBOPT_0x236
0070fe 940e c9c7 	CALL SUBOPT_0x237
                 ; 000D 01FA         epIsPointSet3[ch]   = 1;
007100 5da5      	SUBI R26,LOW(-_epIsPointSet3)
007101 4fb9      	SBCI R27,HIGH(-_epIsPointSet3)
007102 e0e1      	LDI  R30,LOW(1)
007103 940e da6c 	CALL __EEPROMWRB
                 ; 000D 01FB     }
                 ; 000D 01FC     else{
007105 c00c      	RJMP _0x1A008A
                 _0x1A0089:
                 ; 000D 01FD         printDebug("<sensorGetCurrentSetPoint> invalid paramter pnt->[%d]\r\n",pnt);
                +
007106 efec     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 740 ) )
007107 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 740 ) )
007108 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 740 ) )
007109 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 740 ) )
                 	__POINTD1FN _0x1A0000,740
00710a 940e c32d 	CALL SUBOPT_0x12A
00710c 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000D 01FE         return -1;
00710e efef      	LDI  R30,LOW(65535)
00710f efff      	LDI  R31,HIGH(65535)
007110 940c 74fd 	JMP  _0x20E005C
                 ; 000D 01FF     }
                 _0x1A008A:
                 _0x1A0088:
                 _0x1A0086:
                 ; 000D 0200 
                 ; 000D 0201     return 0;
007112 e0e0      	LDI  R30,LOW(0)
007113 e0f0      	LDI  R31,HIGH(0)
007114 940c 74fd 	JMP  _0x20E005C
                 ; 000D 0202 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "dataqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct data_record_st dataQ[MAX_DATA_QUEUE];
                 ;int last_wr_dataQ = 0;
                 ;int last_rd_dataQ = 0;
                 ;int dataQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addDataQueue(unsigned long int timestamp, unsigned int channel, float value)
                 ; 000E 000D {
                 
                 	.CSEG
                 _addDataQueue:
                 ; 000E 000E     if(dataQ_len == MAX_DATA_QUEUE){
007116 940e da2e 	CALL __PUTPARD2
                 ;	timestamp -> Y+6
                 ;	channel -> Y+4
                 ;	value -> Y+0
007118 91a0 15d2 	LDS  R26,_dataQ_len
00711a 91b0 15d3 	LDS  R27,_dataQ_len+1
00711c 971a      	SBIW R26,10
00711d f421      	BRNE _0x1C0003
                 ; 000E 000F         return -1;
00711e efef      	LDI  R30,LOW(65535)
00711f efff      	LDI  R31,HIGH(65535)
007120 940c 74fd 	JMP  _0x20E005C
                 ; 000E 0010     }
                 ; 000E 0011 
                 ; 000E 0012     dataQ[last_wr_dataQ].timestamp      = timestamp;
                 _0x1C0003:
007122 940e c9d2 	CALL SUBOPT_0x239
007124 59e2      	SUBI R30,LOW(-_dataQ)
007125 4efa      	SBCI R31,HIGH(-_dataQ)
007126 940e c9d8 	CALL SUBOPT_0x23A
                 ; 000E 0013     dataQ[last_wr_dataQ].channel        = channel;
007128 940e c9d2 	CALL SUBOPT_0x239
                +
00712a 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
00712b 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
00712c 81ac      	LDD  R26,Y+4
00712d 81bd      	LDD  R27,Y+4+1
00712e 83a0      	STD  Z+0,R26
00712f 83b1      	STD  Z+1,R27
                 ; 000E 0014     dataQ[last_wr_dataQ].value          = value;
007130 940e c9d2 	CALL SUBOPT_0x239
                +
007132 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
007133 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
007134 940e bf6c 	CALL SUBOPT_0x8C
007136 940e c9dd 	CALL SUBOPT_0x23B
                 ; 000E 0015 
                 ; 000E 0016     last_wr_dataQ = (last_wr_dataQ + 1) % MAX_DATA_QUEUE;
007138 01d5      	MOVW R26,R10
007139 9611      	ADIW R26,1
00713a 940e c9e0 	CALL SUBOPT_0x23C
00713c 015f      	MOVW R10,R30
                 ; 000E 0017 
                 ; 000E 0018     dataQ_len++;
00713d eda2      	LDI  R26,LOW(_dataQ_len)
00713e e1b5      	LDI  R27,HIGH(_dataQ_len)
00713f 940e bf0a 	CALL SUBOPT_0x7C
                 ; 000E 0019 
                 ; 000E 001A     return 0;
007141 e0e0      	LDI  R30,LOW(0)
007142 e0f0      	LDI  R31,HIGH(0)
007143 940c 74fd 	JMP  _0x20E005C
                 ; 000E 001B }
                 ;/*============================================================*/
                 ;int fetchDataQueue(unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 000E 001E {
                 _fetchDataQueue:
                 ; 000E 001F     if(dataQ_len == 0){
007145 93ba      	ST   -Y,R27
007146 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*channel -> Y+2
                 ;	*value -> Y+0
007147 91e0 15d2 	LDS  R30,_dataQ_len
007149 91f0 15d3 	LDS  R31,_dataQ_len+1
00714b 9730      	SBIW R30,0
00714c f421      	BRNE _0x1C0004
                 ; 000E 0020         return -1;
00714d efef      	LDI  R30,LOW(65535)
00714e efff      	LDI  R31,HIGH(65535)
00714f 940c 74e0 	JMP  _0x20E005D
                 ; 000E 0021     }
                 ; 000E 0022 
                 ; 000E 0023     *timestamp  =   dataQ[last_rd_dataQ].timestamp;
                 _0x1C0004:
007151 940e c9e5 	CALL SUBOPT_0x23D
007153 59e2      	SUBI R30,LOW(-_dataQ)
007154 4efa      	SBCI R31,HIGH(-_dataQ)
007155 940e c9eb 	CALL SUBOPT_0x23E
                 ; 000E 0024     *channel    =   dataQ[last_rd_dataQ].channel;
007157 940e c9e5 	CALL SUBOPT_0x23D
                +
007159 58ee     +SUBI R30 , LOW ( - _dataQ - ( 4 ) )
00715a 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 4 ) )
                 	__ADDW1MN _dataQ,4
00715b 01df      	MOVW R26,R30
00715c 940e d9f0 	CALL __GETW1P
00715e 81aa      	LDD  R26,Y+2
00715f 81bb      	LDD  R27,Y+2+1
007160 93ed      	ST   X+,R30
007161 93fc      	ST   X,R31
                 ; 000E 0025     *value      =   dataQ[last_rd_dataQ].value;
007162 940e c9e5 	CALL SUBOPT_0x23D
                +
007164 58ec     +SUBI R30 , LOW ( - _dataQ - ( 6 ) )
007165 4efa     +SBCI R31 , HIGH ( - _dataQ - ( 6 ) )
                 	__ADDW1MN _dataQ,6
007166 01df      	MOVW R26,R30
007167 940e d9f4 	CALL __GETD1P
007169 81a8      	LD   R26,Y
00716a 81b9      	LDD  R27,Y+1
00716b 940e d9ff 	CALL __PUTDP1
                 ; 000E 0026 
                 ; 000E 0027     last_rd_dataQ = (last_rd_dataQ + 1) % MAX_DATA_QUEUE;
00716d 01d6      	MOVW R26,R12
00716e 9611      	ADIW R26,1
00716f 940e c9e0 	CALL SUBOPT_0x23C
007171 016f      	MOVW R12,R30
                 ; 000E 0028 
                 ; 000E 0029     dataQ_len--;
007172 eda2      	LDI  R26,LOW(_dataQ_len)
007173 e1b5      	LDI  R27,HIGH(_dataQ_len)
007174 940c 74d9 	JMP  _0x20E005F
                 ; 000E 002A     return 0;
                 ; 000E 002B }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "status.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorStatus[MAX_SENS_CHANNEL]                  = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};
                 ;/*eeprom*/ char dataStatus[MAX_SENS_CHANNEL]                    = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};
                 ;char mtncStatus                                             = MTNC_NORMAL;
                 ;char powerSrcStatus                                         = PWR_NORMAL;
                 ;char batteryStatus                                          = BATT_NORMAL;
                 ;char dinStatus[USE_DIN]                                     = {UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;char doutStatus[USE_DIN]                                    = {UNKNOWN,UNKNOWN};
                 ;char serverCommStatus                                       = UNKNOWN;
                 ;char lanStatus                                              = 0;
                 ;char memoryStatus                                           = MEM_NORMAL;
                 ;
                 ;float batteryVolt                                           = 0.0;
                 ;
                 ;/*
                 ;char dataLowerStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataLowerExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperStatus[MAX_SENS_CHANNEL]           = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperDelayStatus[MAX_SENS_CHANNEL]      = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;char dataUpperExtremeStatus[MAX_SENS_CHANNEL]    = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;*/
                 ;
                 ;/****
                 ;*  "sensor.h" -> struct sens_val_st sensor[]
                 ;*
                 ;****/
                 ;/*============================================================*/
                 ;int updateMIPStatus(void)
                 ; 000F 0025 {
                 
                 	.CSEG
                 ; 000F 0026     // -- depend on menu -- //
                 ; 000F 0027     return 0;
                 ; 000F 0028 }
                 ;/*============================================================*/
                 ;int updateBatteryStatus(void)
                 ; 000F 002B {
                 _updateBatteryStatus:
                 ; 000F 002C     static TIMER    t               = 0;
                 ; 000F 002D     static char     t_flag          = 0;
                 ; 000F 002E     static char     lastCheck       = 0;
                 ; 000F 002F     char            current_status  = 0;
                 ; 000F 0030 
                 ; 000F 0031     if(MAIN_POWER_CONNECT){
007176 931a      	ST   -Y,R17
                 ;	current_status -> R17
007177 e010      	LDI  R17,0
007178 91e0 0103 	LDS  R30,259
00717a 78e0      	ANDI R30,LOW(0x80)
00717b e0f0      	LDI  R31,0
00717c 940e d8ea 	CALL __ASRW3
00717e 940e d8e8 	CALL __ASRW4
007180 9730      	SBIW R30,0
007181 f461      	BRNE _0x1E0006
                 ; 000F 0032         powerSrcStatus      =   PWR_NORMAL;
007182 e0e0      	LDI  R30,LOW(0)
007183 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0033         batteryStatus       =   BATT_NORMAL;
007185 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 0034         batteryVolt         =   4.2;
                +
007187 e6e6     +LDI R30 , LOW ( 0x40866666 )
007188 e6f6     +LDI R31 , HIGH ( 0x40866666 )
007189 e866     +LDI R22 , BYTE3 ( 0x40866666 )
00718a e470     +LDI R23 , BYTE4 ( 0x40866666 )
                 	__GETD1N 0x40866666
00718b 940e c9f3 	CALL SUBOPT_0x23F
                 ; 000F 0035         return 0;
00718d c041      	RJMP _0x20E0065
                 ; 000F 0036     }
                 ; 000F 0037     else{
                 _0x1E0006:
                 ; 000F 0038         powerSrcStatus      =   PWR_DOWN;
00718e e0e1      	LDI  R30,LOW(1)
00718f 93e0 147a 	STS  _powerSrcStatus,R30
                 ; 000F 0039         batteryVolt         =   readBattery();
007191 940e 4318 	CALL _readBattery
007193 940e c9f3 	CALL SUBOPT_0x23F
                 ; 000F 003A 
                 ; 000F 003B         if(env_config.batteryLevel == 0)    // -- battery alarm disable --> always BATT_NORMAL -- //
007195 940e c9fc 	CALL SUBOPT_0x240
007197 940e da7d 	CALL __CPD10
007199 f421      	BRNE _0x1E0008
                 ; 000F 003C         {
                 ; 000F 003D             batteryStatus = BATT_NORMAL;
00719a e0e0      	LDI  R30,LOW(0)
00719b 93e0 147b 	STS  _batteryStatus,R30
                 ; 000F 003E         }
                 ; 000F 003F         else
00719d c02e      	RJMP _0x1E0009
                 _0x1E0008:
                 ; 000F 0040         {
                 ; 000F 0041             if(batteryVolt < env_config.batteryLevel)
00719e 940e c9fc 	CALL SUBOPT_0x240
0071a0 940e bcdf 	CALL SUBOPT_0x2D
0071a2 940e d870 	CALL __CMPF12
0071a4 f410      	BRSH _0x1E000A
                 ; 000F 0042             {
                 ; 000F 0043                 current_status      = BATT_LOW;
0071a5 e011      	LDI  R17,LOW(1)
                 ; 000F 0044             }
                 ; 000F 0045             else
0071a6 c001      	RJMP _0x1E000B
                 _0x1E000A:
                 ; 000F 0046             {
                 ; 000F 0047                 current_status      = BATT_NORMAL;
0071a7 e010      	LDI  R17,LOW(0)
                 ; 000F 0048             }
                 _0x1E000B:
                 ; 000F 0049 
                 ; 000F 004A             if(lastCheck != current_status)
0071a8 91a0 15d9 	LDS  R26,_lastCheck_S00F0001000
0071aa 171a      	CP   R17,R26
0071ab f029      	BREQ _0x1E000C
                 ; 000F 004B             {
                 ; 000F 004C                 t_flag              = 0;
0071ac e0e0      	LDI  R30,LOW(0)
0071ad 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 004D                 lastCheck           = current_status;
0071af 9310 15d9 	STS  _lastCheck_S00F0001000,R17
                 ; 000F 004E             }
                 ; 000F 004F 
                 ; 000F 0050             if(!t_flag)
                 _0x1E000C:
0071b1 91e0 15d8 	LDS  R30,_t_flag_S00F0001000
0071b3 30e0      	CPI  R30,0
0071b4 f431      	BRNE _0x1E000D
                 ; 000F 0051             {
                 ; 000F 0052                 TIMER_setTimer(&t,10);
0071b5 ede4      	LDI  R30,LOW(_t_S00F0001000)
0071b6 e1f5      	LDI  R31,HIGH(_t_S00F0001000)
0071b7 940e bcbb 	CALL SUBOPT_0x27
                 ; 000F 0053                 t_flag              = 1;
0071b9 e0e1      	LDI  R30,LOW(1)
0071ba c00f      	RJMP _0x1E005D
                 ; 000F 0054             }
                 ; 000F 0055             else
                 _0x1E000D:
                 ; 000F 0056             {
                 ; 000F 0057                 if(TIMER_checkTimerExceed(t))
0071bb 91a0 15d4 	LDS  R26,_t_S00F0001000
0071bd 91b0 15d5 	LDS  R27,_t_S00F0001000+1
0071bf 9180 15d6 	LDS  R24,_t_S00F0001000+2
0071c1 9190 15d7 	LDS  R25,_t_S00F0001000+3
0071c3 940e 405d 	CALL _TIMER_checkTimerExceed
0071c5 9730      	SBIW R30,0
0071c6 f029      	BREQ _0x1E000F
                 ; 000F 0058                 {
                 ; 000F 0059                     batteryStatus   = current_status;
0071c7 9310 147b 	STS  _batteryStatus,R17
                 ; 000F 005A                     t_flag          = 0;
0071c9 e0e0      	LDI  R30,LOW(0)
                 _0x1E005D:
0071ca 93e0 15d8 	STS  _t_flag_S00F0001000,R30
                 ; 000F 005B                 }
                 ; 000F 005C             }
                 _0x1E000F:
                 ; 000F 005D         }// -- battery alarm enable -- //
                 _0x1E0009:
                 ; 000F 005E         return 1;
0071cc e0e1      	LDI  R30,LOW(1)
0071cd e0f0      	LDI  R31,HIGH(1)
0071ce c002      	RJMP _0x20E0064
                 ; 000F 005F     }// -- main power disconnect -- //
                 ; 000F 0060 
                 ; 000F 0061     return 0;
                 _0x20E0065:
0071cf e0e0      	LDI  R30,LOW(0)
0071d0 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0064:
0071d1 9119      	LD   R17,Y+
0071d2 9508      	RET
                 ; 000F 0062 }
                 ;/*============================================================*/
                 ;int updateCommStatus(void)
                 ; 000F 0065 {
                 _updateCommStatus:
                 ; 000F 0066     int res;
                 ; 000F 0067 
                 ; 000F 0068     if(!IO_LAN_CONNECT){
0071d3 931a      	ST   -Y,R17
0071d4 930a      	ST   -Y,R16
                 ;	res -> R16,R17
0071d5 91e0 0100 	LDS  R30,256
0071d7 940e ca05 	CALL SUBOPT_0x241
0071d9 9730      	SBIW R30,0
0071da f091      	BREQ _0x1E0010
                 ; 000F 0069         lanStatus                       = COMM_LAN_DISCONNECT;
0071db e0e1      	LDI  R30,LOW(1)
0071dc 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 006A 
                 ; 000F 006B         serverCommStatus                = UNKNOWN;
0071de efef      	LDI  R30,LOW(255)
0071df 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 006C 
                 ; 000F 006D         commLostTimer                   = 0;                // -- re-initial -- //
0071e1 e0e0      	LDI  R30,LOW(0)
0071e2 93e0 1421 	STS  _commLostTimer,R30
0071e4 93e0 1422 	STS  _commLostTimer+1,R30
0071e6 93e0 1423 	STS  _commLostTimer+2,R30
0071e8 93e0 1424 	STS  _commLostTimer+3,R30
                 ; 000F 006E         return 1;
0071ea e0e1      	LDI  R30,LOW(1)
0071eb e0f0      	LDI  R31,HIGH(1)
0071ec c047      	RJMP _0x20E0063
                 ; 000F 006F     }
                 ; 000F 0070     else{
                 _0x1E0010:
                 ; 000F 0071         lanStatus                       = COMM_LAN_CONNECT;
0071ed e0e0      	LDI  R30,LOW(0)
0071ee 93e0 1481 	STS  _lanStatus,R30
                 ; 000F 0072 
                 ; 000F 0073         if((commLostTimer != 0xFFFFFFFF) && (commLostTimer != 0)){
0071f0 940e c4da 	CALL SUBOPT_0x171
0071f2 940e bd3e 	CALL SUBOPT_0x3A
0071f4 f029      	BREQ _0x1E0013
0071f5 940e c4da 	CALL SUBOPT_0x171
0071f7 940e da89 	CALL __CPD02
0071f9 f409      	BRNE _0x1E0014
                 _0x1E0013:
0071fa c00a      	RJMP _0x1E0012
                 _0x1E0014:
                 ; 000F 0074             printDebug("<updateCommStatus> LostTimer time left = %ld(%lX)\r\n",(commLostTimer-baseCounter),(commLostTimer-baseCounter));
                +
0071fb ecea     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 0 ) )
0071fc e4f8     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 0 ) )
0071fd e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 0 ) )
0071fe e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 0 ) )
                 	__POINTD1FN _0x1E0000,0
0071ff 940e c4ea 	CALL SUBOPT_0x173
007201 940e c4ea 	CALL SUBOPT_0x173
007203 940e bc8a 	CALL SUBOPT_0x20
                 ; 000F 0075         }
                 ; 000F 0076 
                 ; 000F 0077         res = TIMER_checkTimerExceed(commLostTimer);
                 _0x1E0012:
007205 940e c4da 	CALL SUBOPT_0x171
007207 940e 405d 	CALL _TIMER_checkTimerExceed
007209 018f      	MOVW R16,R30
                 ; 000F 0078         if(res < 0){
00720a 2311      	TST  R17
00720b f432      	BRPL _0x1E0015
                 ; 000F 0079             serverCommStatus            = UNKNOWN;              // -- unknown -- //
00720c efef      	LDI  R30,LOW(255)
00720d 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 007A             return 0;
00720f e0e0      	LDI  R30,LOW(0)
007210 e0f0      	LDI  R31,HIGH(0)
007211 c022      	RJMP _0x20E0063
                 ; 000F 007B         }
                 ; 000F 007C         else{
                 _0x1E0015:
                 ; 000F 007D             if(res){
007212 2e00      	MOV  R0,R16
007213 2a01      	OR   R0,R17
007214 f081      	BREQ _0x1E0017
                 ; 000F 007E                 if(serverCommStatus != COMM_LOST){
007215 91a0 1480 	LDS  R26,_serverCommStatus
007217 30a2      	CPI  R26,LOW(0x2)
007218 f031      	BREQ _0x1E0018
                 ; 000F 007F                     printDebug("<updateCommStatus> Server Down!!!\r\n");
                +
007219 efee     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 52 ) )
00721a e4f8     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 52 ) )
00721b e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 52 ) )
00721c e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 52 ) )
                 	__POINTD1FN _0x1E0000,52
00721d 940e bbba 	CALL SUBOPT_0x3
                 ; 000F 0080                 }
                 ; 000F 0081                 serverCommStatus        = COMM_LOST;            // -- disconnect -- //
                 _0x1E0018:
00721f e0e2      	LDI  R30,LOW(2)
007220 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0082                 return 1;
007222 e0e1      	LDI  R30,LOW(1)
007223 e0f0      	LDI  R31,HIGH(1)
007224 c00f      	RJMP _0x20E0063
                 ; 000F 0083             }
                 ; 000F 0084             else{
                 _0x1E0017:
                 ; 000F 0085                 if(serverCommStatus != COMM_NORMAL){
007225 91e0 1480 	LDS  R30,_serverCommStatus
007227 30e0      	CPI  R30,0
007228 f031      	BREQ _0x1E001A
                 ; 000F 0086                     printDebug("<updateCommStatus> Server Up!!!\r\n");
                +
007229 e2e2     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 88 ) )
00722a e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 88 ) )
00722b e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 88 ) )
00722c e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 88 ) )
                 	__POINTD1FN _0x1E0000,88
00722d 940e bbba 	CALL SUBOPT_0x3
                 ; 000F 0087                 }
                 ; 000F 0088                 serverCommStatus        = COMM_NORMAL;          // -- connect -- //
                 _0x1E001A:
00722f e0e0      	LDI  R30,LOW(0)
007230 93e0 1480 	STS  _serverCommStatus,R30
                 ; 000F 0089                 return 0;
007232 e0e0      	LDI  R30,LOW(0)
007233 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 008A             }
                 ; 000F 008B         }
                 ; 000F 008C     }
                 ; 000F 008D }
                 _0x20E0063:
007234 9109      	LD   R16,Y+
007235 9119      	LD   R17,Y+
007236 9508      	RET
                 ;/*============================================================*/
                 ;int updateMemoryStatus(void)
                 ; 000F 0090 {
                 _updateMemoryStatus:
                 ; 000F 0091 //    if(env_config.memoryMin == 0)    // -- memory alarm disable --> always MEM_NORMAL -- //
                 ; 000F 0092 //    {
                 ; 000F 0093 //            memoryStatus        = MEM_NORMAL;
                 ; 000F 0094 //    }
                 ; 000F 0095 //    else
                 ; 000F 0096 //    {
                 ; 000F 0097         if(sdFreeSpace == 0)
007237 940e ca0a 	CALL SUBOPT_0x242
007239 f411      	BRNE _0x1E001B
                 ; 000F 0098         {
                 ; 000F 0099             memoryStatus    = MEM_ERROR;
00723a e0e2      	LDI  R30,LOW(2)
00723b c013      	RJMP _0x1E005E
                 ; 000F 009A         }
                 ; 000F 009B         else if((int)(sdFreeSpace/1024) < env_config.memoryMin)
                 _0x1E001B:
00723c 940e bcc3 	CALL SUBOPT_0x28
                +
00723e e0e0     +LDI R30 , LOW ( 0x400 )
00723f e0f4     +LDI R31 , HIGH ( 0x400 )
007240 e060     +LDI R22 , BYTE3 ( 0x400 )
007241 e070     +LDI R23 , BYTE4 ( 0x400 )
                 	__GETD1N 0x400
007242 940e d990 	CALL __DIVD21U
007244 01df      	MOVW R26,R30
                +
007245 91e0 1375+LDS R30 , _env_config + ( 16 )
007247 91f0 1376+LDS R31 , _env_config + ( 16 ) + 1
                 	__GETW1MN _env_config,16
007249 17ae      	CP   R26,R30
00724a 07bf      	CPC  R27,R31
00724b f410      	BRSH _0x1E001D
                 ; 000F 009C         {
                 ; 000F 009D             memoryStatus    = MEM_LOW;
00724c e0e1      	LDI  R30,LOW(1)
00724d c001      	RJMP _0x1E005E
                 ; 000F 009E         }
                 ; 000F 009F         else
                 _0x1E001D:
                 ; 000F 00A0         {
                 ; 000F 00A1             memoryStatus    = MEM_NORMAL;
00724e e0e0      	LDI  R30,LOW(0)
                 _0x1E005E:
00724f 93e0 1482 	STS  _memoryStatus,R30
                 ; 000F 00A2         }
                 ; 000F 00A3 //    }// -- memory alarm enable -- //
                 ; 000F 00A4 
                 ; 000F 00A5     if( memoryStatus != MEM_NORMAL ){
007251 30e0      	CPI  R30,0
007252 f019      	BREQ _0x1E001F
                 ; 000F 00A6         return 1;
007253 e0e1      	LDI  R30,LOW(1)
007254 e0f0      	LDI  R31,HIGH(1)
007255 9508      	RET
                 ; 000F 00A7     }
                 ; 000F 00A8     else{
                 _0x1E001F:
                 ; 000F 00A9         return 0;
007256 c1ac      	RJMP _0x20E0060
                 ; 000F 00AA     }
                 ; 000F 00AB }
                 ;/*============================================================*/
                 ;int updateSensorStatus(int ch)
                 ; 000F 00AE {
                 _updateSensorStatus:
                 ; 000F 00AF     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
007257 93ba      	ST   -Y,R27
007258 93aa      	ST   -Y,R26
                 ;	ch -> Y+0
007259 81a9      	LDD  R26,Y+1
00725a 23aa      	TST  R26
00725b f022      	BRMI _0x1E0022
00725c 81a8      	LD   R26,Y
00725d 81b9      	LDD  R27,Y+1
00725e 9715      	SBIW R26,5
00725f f05c      	BRLT _0x1E0021
                 _0x1E0022:
                 ; 000F 00B0         printDebug("<checkProbeAlarm> sensor channel out of range (%d)\r\n",ch);
                +
007260 e4e4     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 122 ) )
007261 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 122 ) )
007262 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 122 ) )
007263 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 122 ) )
                 	__POINTD1FN _0x1E0000,122
007264 940e c349 	CALL SUBOPT_0x130
007266 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000F 00B1         return 0;
007268 e0e0      	LDI  R30,LOW(0)
007269 e0f0      	LDI  R31,HIGH(0)
00726a c01d      	RJMP _0x20E0062
                 ; 000F 00B2     }
                 ; 000F 00B3 
                 ; 000F 00B4     sensorStatus[ch] = sensor[ch].status;
                 _0x1E0021:
00726b 940e ca15 	CALL SUBOPT_0x243
                +
00726d 2f7e     +MOV R23 , R30
00726e 2f8f     +MOV R24 , R31
                 	__PUTW1R 23,24
00726f 81a8      	LD   R26,Y
007270 81b9      	LDD  R27,Y+1
007271 940e c8cc 	CALL SUBOPT_0x212
                +
007273 2fa7     +MOV R26 , R23
007274 2fb8     +MOV R27 , R24
                 	__GETW2R 23,24
007275 93ec      	ST   X,R30
                 ; 000F 00B5 
                 ; 000F 00B6     if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
007276 940e ca15 	CALL SUBOPT_0x243
007278 81a0      	LD   R26,Z
007279 3faf      	CPI  R26,LOW(0xFF)
00727a f419      	BRNE _0x1E0024
                 ; 000F 00B7         return 0;
00727b e0e0      	LDI  R30,LOW(0)
00727c e0f0      	LDI  R31,HIGH(0)
00727d c00a      	RJMP _0x20E0062
                 ; 000F 00B8     }
                 ; 000F 00B9     else if(sensorStatus[ch] != SENS_NORMAL){
                 _0x1E0024:
00727e 940e ca15 	CALL SUBOPT_0x243
007280 81e0      	LD   R30,Z
007281 30e0      	CPI  R30,0
007282 f019      	BREQ _0x1E0026
                 ; 000F 00BA         //printDebug("<checkProbeAlarm> Channel %d ERR\r\n",ch);
                 ; 000F 00BB         return 1;
007283 e0e1      	LDI  R30,LOW(1)
007284 e0f0      	LDI  R31,HIGH(1)
007285 c002      	RJMP _0x20E0062
                 ; 000F 00BC     }
                 ; 000F 00BD     else{
                 _0x1E0026:
                 ; 000F 00BE         //printDebug("<checkProbeAlarm> Channel %d OK\r\n",ch);
                 ; 000F 00BF         return 0;
007286 e0e0      	LDI  R30,LOW(0)
007287 e0f0      	LDI  R31,HIGH(0)
                 ; 000F 00C0     }
                 ; 000F 00C1 }
                 _0x20E0062:
007288 9622      	ADIW R28,2
007289 9508      	RET
                 ;/*============================================================*/
                 ;int updateDataStatus(int ch)
                 ; 000F 00C4 {
                 _updateDataStatus:
                 ; 000F 00C5     static TIMER t[MAX_SENS_CHANNEL];
                 ; 000F 00C6     static char flag_lower[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C7     static char flag_upper[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 000F 00C8     int res = 0;
                 ; 000F 00C9 
                 ; 000F 00CA     if((ch<0) || (ch>=MAX_SENS_CHANNEL)){
00728a 940e bf27 	CALL SUBOPT_0x81
                 ;	ch -> Y+2
                 ;	res -> R16,R17
                +
00728c e000     +LDI R16 , LOW ( 0 )
00728d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00728e 81ab      	LDD  R26,Y+3
00728f 23aa      	TST  R26
007290 f022      	BRMI _0x1E0029
007291 81aa      	LDD  R26,Y+2
007292 81bb      	LDD  R27,Y+2+1
007293 9715      	SBIW R26,5
007294 f05c      	BRLT _0x1E0028
                 _0x1E0029:
                 ; 000F 00CB         printDebug("<updateDataStatus> ABORT: sensor channel out of range (%d)\r\n",ch);
                +
007295 e7e9     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 175 ) )
007296 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 175 ) )
007297 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 175 ) )
007298 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 175 ) )
                 	__POINTD1FN _0x1E0000,175
007299 940e c25e 	CALL SUBOPT_0x106
00729b 940e c1ce 	CALL SUBOPT_0xEC
                 ; 000F 00CC         return 0;
00729d e0e0      	LDI  R30,LOW(0)
00729e e0f0      	LDI  R31,HIGH(0)
00729f c0cf      	RJMP _0x20E0061
                 ; 000F 00CD     }
                 ; 000F 00CE 
                 ; 000F 00CF     if(sensor[ch].status != SENS_NORMAL){
                 _0x1E0028:
0072a0 940e c2fa 	CALL SUBOPT_0x121
                +
0072a2 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
0072a3 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
0072a4 81e0      	LD   R30,Z
0072a5 30e0      	CPI  R30,0
0072a6 f019      	BREQ _0x1E002B
                 ; 000F 00D0         //printDebug("<updateDataStatus> ABORT: sensor (%d) error\r\n",ch);
                 ; 000F 00D1         return 0;
0072a7 e0e0      	LDI  R30,LOW(0)
0072a8 e0f0      	LDI  R31,HIGH(0)
0072a9 c0c5      	RJMP _0x20E0061
                 ; 000F 00D2     }
                 ; 000F 00D3 
                 ; 000F 00D4     if(sensor[ch].value < sensor_config[ch].lowerLimit){
                 _0x1E002B:
0072aa 940e c2fa 	CALL SUBOPT_0x121
0072ac 940e bc84 	CALL SUBOPT_0x1F
0072ae 937f      	PUSH R23
0072af 936f      	PUSH R22
0072b0 93ff      	PUSH R31
0072b1 93ef      	PUSH R30
0072b2 940e c286 	CALL SUBOPT_0x10E
                +
0072b4 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
0072b5 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
0072b6 01df      	MOVW R26,R30
0072b7 940e d9f4 	CALL __GETD1P
0072b9 91af      	POP  R26
0072ba 91bf      	POP  R27
0072bb 918f      	POP  R24
0072bc 919f      	POP  R25
0072bd 940e d870 	CALL __CMPF12
0072bf f508      	BRSH _0x1E002C
                 ; 000F 00D5 
                 ; 000F 00D6         if(!flag_lower[ch])
0072c0 940e ca1a 	CALL SUBOPT_0x244
0072c2 81e0      	LD   R30,Z
0072c3 30e0      	CPI  R30,0
0072c4 f479      	BRNE _0x1E002D
                 ; 000F 00D7         {
                 ; 000F 00D8             TIMER_setTimer(&t[ch],sensor_config[ch].lowerDelay);
0072c5 940e ca1f 	CALL SUBOPT_0x245
0072c7 940e bc76 	CALL SUBOPT_0x1C
0072c9 940e ca24 	CALL SUBOPT_0x246
0072cb 940e ca2c 	CALL SUBOPT_0x247
0072cd 940e bc80 	CALL SUBOPT_0x1E
                 ; 000F 00D9             flag_lower[ch] = 1;
0072cf 940e ca1a 	CALL SUBOPT_0x244
0072d1 e0a1      	LDI  R26,LOW(1)
0072d2 83a0      	STD  Z+0,R26
                 ; 000F 00DA         }
                 ; 000F 00DB         else
0072d3 c00b      	RJMP _0x1E002E
                 _0x1E002D:
                 ; 000F 00DC         {
                 ; 000F 00DD             if(TIMER_checkTimerExceed(t[ch]))
0072d4 940e ca1f 	CALL SUBOPT_0x245
0072d6 940e bc69 	CALL SUBOPT_0x1A
0072d8 940e bc70 	CALL SUBOPT_0x1B
0072da f021      	BREQ _0x1E002F
                 ; 000F 00DE             {
                 ; 000F 00DF                 dataStatus[ch]              |=  DATA_LOWER_LIMIT;
0072db 940e ca31 	CALL SUBOPT_0x248
0072dd 60e1      	ORI  R30,1
0072de 93ec      	ST   X,R30
                 ; 000F 00E0                 //printDebug("<updateDataStatus> Probe %d lowerDelayLimit[%02X]\r\n", ch+1, dataStatus[ch]);   /////
                 ; 000F 00E1             }
                 ; 000F 00E2         }
                 _0x1E002F:
                 _0x1E002E:
                 ; 000F 00E3         //dataStatus[ch]                      |=  DATA_LOWER_LIMIT;
                 ; 000F 00E4         res |= 1;
0072df 6001      	ORI  R16,LOW(1)
                 ; 000F 00E5 
                 ; 000F 00E6         //printDebug("<updateDataStatus> Probe %d lowerLimit[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00E7         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerLimit);
                 ; 000F 00E8     }
                 ; 000F 00E9     else{
0072e0 c008      	RJMP _0x1E0030
                 _0x1E002C:
                 ; 000F 00EA         flag_lower[ch] = 0;
0072e1 940e ca1a 	CALL SUBOPT_0x244
0072e3 e0a0      	LDI  R26,LOW(0)
0072e4 83a0      	STD  Z+0,R26
                 ; 000F 00EB         dataStatus[ch]                      &=  ~DATA_LOWER_LIMIT;
0072e5 940e ca31 	CALL SUBOPT_0x248
0072e7 7fee      	ANDI R30,0xFE
0072e8 93ec      	ST   X,R30
                 ; 000F 00EC         //dataStatus[ch]                      &=  ~DATA_LOWER_DELAY;
                 ; 000F 00ED     }
                 _0x1E0030:
                 ; 000F 00EE 
                 ; 000F 00EF     if(sensor[ch].value < sensor_config[ch].lowerExtreme)
0072e9 940e c2fa 	CALL SUBOPT_0x121
0072eb 940e bc84 	CALL SUBOPT_0x1F
0072ed 937f      	PUSH R23
0072ee 936f      	PUSH R22
0072ef 93ff      	PUSH R31
0072f0 93ef      	PUSH R30
0072f1 940e c286 	CALL SUBOPT_0x10E
                +
0072f3 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
0072f4 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
0072f5 01df      	MOVW R26,R30
0072f6 940e d9f4 	CALL __GETD1P
0072f8 91af      	POP  R26
0072f9 91bf      	POP  R27
0072fa 918f      	POP  R24
0072fb 919f      	POP  R25
0072fc 940e d870 	CALL __CMPF12
0072fe f430      	BRSH _0x1E0031
                 ; 000F 00F0     {
                 ; 000F 00F1         dataStatus[ch]                      |=  DATA_LOWER_EXTREME;
0072ff 940e ca31 	CALL SUBOPT_0x248
007301 60e2      	ORI  R30,2
007302 93ec      	ST   X,R30
                 ; 000F 00F2         res |= 1;
007303 6001      	ORI  R16,LOW(1)
                 ; 000F 00F3 
                 ; 000F 00F4         //printDebug("<updateDataStatus> Probe %d lowerExtreme[%02X] -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 00F5         //                ch+1,dataStatus[ch],sensor[ch].value,sensor_config[ch].lowerExtreme);
                 ; 000F 00F6     }
                 ; 000F 00F7     else
007304 c004      	RJMP _0x1E0032
                 _0x1E0031:
                 ; 000F 00F8     {
                 ; 000F 00F9         dataStatus[ch]                      &=  ~DATA_LOWER_EXTREME;
007305 940e ca31 	CALL SUBOPT_0x248
007307 7fed      	ANDI R30,0xFD
007308 93ec      	ST   X,R30
                 ; 000F 00FA     }
                 _0x1E0032:
                 ; 000F 00FB 
                 ; 000F 00FC     if(sensor[ch].value > sensor_config[ch].upperLimit)
007309 940e c2fa 	CALL SUBOPT_0x121
00730b 940e bc84 	CALL SUBOPT_0x1F
00730d 937f      	PUSH R23
00730e 936f      	PUSH R22
00730f 93ff      	PUSH R31
007310 93ef      	PUSH R30
007311 940e c286 	CALL SUBOPT_0x10E
                +
007313 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
007314 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
007315 01df      	MOVW R26,R30
007316 940e d9f4 	CALL __GETD1P
007318 91af      	POP  R26
007319 91bf      	POP  R27
00731a 918f      	POP  R24
00731b 919f      	POP  R25
00731c 940e d870 	CALL __CMPF12
00731e f009      	BREQ PC+2
00731f f410      	BRCC PC+3
007320 940c 7343 	JMP  _0x1E0033
                 ; 000F 00FD     {
                 ; 000F 00FE         if(!flag_upper[ch])
007322 940e ca37 	CALL SUBOPT_0x249
007324 81e0      	LD   R30,Z
007325 30e0      	CPI  R30,0
007326 f479      	BRNE _0x1E0034
                 ; 000F 00FF         {
                 ; 000F 0100             TIMER_setTimer(&t[ch],sensor_config[ch].upperDelay);
007327 940e ca1f 	CALL SUBOPT_0x245
007329 940e bc76 	CALL SUBOPT_0x1C
00732b 940e ca24 	CALL SUBOPT_0x246
00732d 940e ca3c 	CALL SUBOPT_0x24A
00732f 940e bc80 	CALL SUBOPT_0x1E
                 ; 000F 0101             flag_upper[ch] = 1;
007331 940e ca37 	CALL SUBOPT_0x249
007333 e0a1      	LDI  R26,LOW(1)
007334 83a0      	STD  Z+0,R26
                 ; 000F 0102         }
                 ; 000F 0103         else
007335 c00b      	RJMP _0x1E0035
                 _0x1E0034:
                 ; 000F 0104         {
                 ; 000F 0105             if(TIMER_checkTimerExceed(t[ch]))
007336 940e ca1f 	CALL SUBOPT_0x245
007338 940e bc69 	CALL SUBOPT_0x1A
00733a 940e bc70 	CALL SUBOPT_0x1B
00733c f021      	BREQ _0x1E0036
                 ; 000F 0106             {
                 ; 000F 0107                 dataStatus[ch]              |=  DATA_UPPER_LIMIT;
00733d 940e ca31 	CALL SUBOPT_0x248
00733f 60e4      	ORI  R30,4
007340 93ec      	ST   X,R30
                 ; 000F 0108             }
                 ; 000F 0109         }
                 _0x1E0036:
                 _0x1E0035:
                 ; 000F 010A         //dataStatus[ch]                      |=  DATA_UPPER_LIMIT;
                 ; 000F 010B         res |= 1;
007341 6001      	ORI  R16,LOW(1)
                 ; 000F 010C 
                 ; 000F 010D         //printDebug("<updateDataStatus> Probe %d upperLimit -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 010E         //                ch+1,sensor[ch].value,sensor_config[ch].upperLimit);
                 ; 000F 010F     }
                 ; 000F 0110     else
007342 c008      	RJMP _0x1E0037
                 _0x1E0033:
                 ; 000F 0111     {
                 ; 000F 0112         flag_upper[ch] = 0;
007343 940e ca37 	CALL SUBOPT_0x249
007345 e0a0      	LDI  R26,LOW(0)
007346 83a0      	STD  Z+0,R26
                 ; 000F 0113         dataStatus[ch]                      &=  ~DATA_UPPER_LIMIT;
007347 940e ca31 	CALL SUBOPT_0x248
007349 7feb      	ANDI R30,0xFB
00734a 93ec      	ST   X,R30
                 ; 000F 0114         //dataStatus[ch]                      &=  ~DATA_UPPER_DELAY;
                 ; 000F 0115     }
                 _0x1E0037:
                 ; 000F 0116 
                 ; 000F 0117     if(sensor[ch].value > sensor_config[ch].upperExtreme)
00734b 940e c2fa 	CALL SUBOPT_0x121
00734d 940e bc84 	CALL SUBOPT_0x1F
00734f 937f      	PUSH R23
007350 936f      	PUSH R22
007351 93ff      	PUSH R31
007352 93ef      	PUSH R30
007353 940e c286 	CALL SUBOPT_0x10E
                +
007355 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
007356 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
007357 01df      	MOVW R26,R30
007358 940e d9f4 	CALL __GETD1P
00735a 91af      	POP  R26
00735b 91bf      	POP  R27
00735c 918f      	POP  R24
00735d 919f      	POP  R25
00735e 940e d870 	CALL __CMPF12
007360 f009      	BREQ PC+2
007361 f410      	BRCC PC+3
007362 940c 736a 	JMP  _0x1E0038
                 ; 000F 0118     {
                 ; 000F 0119         dataStatus[ch]                      |=  DATA_UPPER_EXTREME;
007364 940e ca31 	CALL SUBOPT_0x248
007366 60e8      	ORI  R30,8
007367 93ec      	ST   X,R30
                 ; 000F 011A         res |= 1;
007368 6001      	ORI  R16,LOW(1)
                 ; 000F 011B 
                 ; 000F 011C         //printDebug("<updateDataStatus> Probe %d upperExtreme -- sensor[%f] vs config[%f]\r\n",
                 ; 000F 011D         //                ch+1,sensor[ch].value,sensor_config[ch].upperExtreme);
                 ; 000F 011E     }
                 ; 000F 011F     else
007369 c004      	RJMP _0x1E0039
                 _0x1E0038:
                 ; 000F 0120     {
                 ; 000F 0121         dataStatus[ch]                      &=  ~DATA_UPPER_EXTREME;
00736a 940e ca31 	CALL SUBOPT_0x248
00736c 7fe7      	ANDI R30,0XF7
00736d 93ec      	ST   X,R30
                 ; 000F 0122     }
                 _0x1E0039:
                 ; 000F 0123 
                 ; 000F 0124     return res;
00736e 01f8      	MOVW R30,R16
                 _0x20E0061:
00736f 8119      	LDD  R17,Y+1
007370 8108      	LDD  R16,Y+0
007371 9624      	ADIW R28,4
007372 9508      	RET
                 ; 000F 0125 }
                 ;/*============================================================*/
                 ;int updateDinStatus(void)
                 ; 000F 0128 {
                 _updateDinStatus:
                 ; 000F 0129     static TIMER    t[USE_DIN]                  = {0,0};
                 ; 000F 012A     static char     lastDinCheck[USE_DIN]       = {UNKNOWN,UNKNOWN};   // -- initial with unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 000F 012B     static char     steadyState[USE_DIN]        = {0,0};
                 ; 000F 012C     char            currentState                = UNKNOWN;
                 ; 000F 012D     int             ch                          = 0;
                 ; 000F 012E     int             ret                         = 0;
                 ; 000F 012F 
                 ; 000F 0130     for(ch=0;ch<USE_DIN;ch++)
007373 940e da99 	CALL __SAVELOCR6
                 ;	currentState -> R17
                 ;	ch -> R18,R19
                 ;	ret -> R20,R21
007375 ef1f      	LDI  R17,255
007376 940e bba6 	CALL SUBOPT_0x0
                +
007378 e020     +LDI R18 , LOW ( 0 )
007379 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x1E003C:
                +
00737a 3022     +CPI R18 , LOW ( 2 )
00737b e0e0     +LDI R30 , HIGH ( 2 )
00737c 073e     +CPC R19 , R30
                 	__CPWRN 18,19,2
00737d f014      	BRLT PC+3
00737e 940c 73ed 	JMP _0x1E003D
                 ; 000F 0131     {
                 ; 000F 0132         if(din_config[ch].channelEnable == 0x01)
007380 940e bc3e 	CALL SUBOPT_0x15
007382 81a0      	LD   R26,Z
007383 30a1      	CPI  R26,LOW(0x1)
007384 f011      	BREQ PC+3
007385 940c 73ea 	JMP _0x1E003E
                 ; 000F 0133         {
                 ; 000F 0134             switch(ch){
007387 01f9      	MOVW R30,R18
                 ; 000F 0135                 case 0  : currentState = DIN1;  break;
007388 9730      	SBIW R30,0
007389 f441      	BRNE _0x1E0042
00738a 91e0 0103 	LDS  R30,259
00738c 940e ca05 	CALL SUBOPT_0x241
00738e 940e d92d 	CALL __LNEGW1
007390 2f1e      	MOV  R17,R30
007391 c01b      	RJMP _0x1E0041
                 ; 000F 0136                 case 1  : currentState = DIN2;  break;
                 _0x1E0042:
007392 30e1      	CPI  R30,LOW(0x1)
007393 e0a0      	LDI  R26,HIGH(0x1)
007394 07fa      	CPC  R31,R26
007395 f451      	BRNE _0x1E0044
007396 91e0 0103 	LDS  R30,259
007398 70e8      	ANDI R30,LOW(0x8)
007399 e0f0      	LDI  R31,0
00739a 940e d8ea 	CALL __ASRW3
00739c 940e d92d 	CALL __LNEGW1
00739e 2f1e      	MOV  R17,R30
00739f c00d      	RJMP _0x1E0041
                 ; 000F 0137                 default : printDebug("<updateDinStatus> channel[%d] out of range\r\n",ch); return 0;
                 _0x1E0044:
                +
0073a0 ebe6     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 236 ) )
0073a1 e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 236 ) )
0073a2 e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 236 ) )
0073a3 e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 236 ) )
                 	__POINTD1FN _0x1E0000,236
0073a4 940e bc24 	CALL SUBOPT_0x11
0073a6 940e bc2c 	CALL SUBOPT_0x12
0073a8 e0e0      	LDI  R30,LOW(0)
0073a9 e0f0      	LDI  R31,HIGH(0)
0073aa 940e daa0 	CALL __LOADLOCR6
0073ac c133      	RJMP _0x20E005D
                 ; 000F 0138             }
                 _0x1E0041:
                 ; 000F 0139 
                 ; 000F 013A             if(currentState != lastDinCheck[ch])
0073ad e0a0      	LDI  R26,LOW(_lastDinCheck_S00F0006000)
0073ae e1b6      	LDI  R27,HIGH(_lastDinCheck_S00F0006000)
0073af 0fa2      	ADD  R26,R18
0073b0 1fb3      	ADC  R27,R19
0073b1 91ec      	LD   R30,X
0073b2 17e1      	CP   R30,R17
0073b3 f091      	BREQ _0x1E0045
                 ; 000F 013B             {
                 ; 000F 013C                 TIMER_setTimer(&t[ch],1);
0073b4 01f9      	MOVW R30,R18
0073b5 efa8      	LDI  R26,LOW(_t_S00F0006000)
0073b6 e1b5      	LDI  R27,HIGH(_t_S00F0006000)
0073b7 940e bc76 	CALL SUBOPT_0x1C
0073b9 93fa      	ST   -Y,R31
0073ba 93ea      	ST   -Y,R30
                +
0073bb e0a1     +LDI R26 , LOW ( 0x1 )
0073bc e0b0     +LDI R27 , HIGH ( 0x1 )
0073bd e080     +LDI R24 , BYTE3 ( 0x1 )
0073be e090     +LDI R25 , BYTE4 ( 0x1 )
                 	__GETD2N 0x1
0073bf 940e 4073 	CALL _TIMER_setTimer
                 ; 000F 013D                 lastDinCheck[ch]    = currentState;
0073c1 01f9      	MOVW R30,R18
0073c2 50e0      	SUBI R30,LOW(-_lastDinCheck_S00F0006000)
0073c3 4efa      	SBCI R31,HIGH(-_lastDinCheck_S00F0006000)
0073c4 8310      	ST   Z,R17
                 ; 000F 013E                 steadyState[ch]     = 0;
0073c5 c020      	RJMP _0x1E005F
                 ; 000F 013F             }
                 ; 000F 0140             else if(!steadyState[ch])
                 _0x1E0045:
0073c6 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0073c7 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0073c8 940e bc16 	CALL SUBOPT_0xF
0073ca f4f9      	BRNE _0x1E0047
                 ; 000F 0141             {
                 ; 000F 0142                 if(TIMER_checkTimerExceed(t[ch])){
0073cb 01f9      	MOVW R30,R18
0073cc efa8      	LDI  R26,LOW(_t_S00F0006000)
0073cd e1b5      	LDI  R27,HIGH(_t_S00F0006000)
0073ce 940e bc69 	CALL SUBOPT_0x1A
0073d0 940e bc70 	CALL SUBOPT_0x1B
0073d2 f099      	BREQ _0x1E0048
                 ; 000F 0143 
                 ; 000F 0144                     steadyState[ch] = 1;
0073d3 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0073d4 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0073d5 0fa2      	ADD  R26,R18
0073d6 1fb3      	ADC  R27,R19
0073d7 e0e1      	LDI  R30,LOW(1)
0073d8 93ec      	ST   X,R30
                 ; 000F 0145 
                 ; 000F 0146                     if(currentState){
0073d9 3010      	CPI  R17,0
0073da f021      	BREQ _0x1E0049
                 ; 000F 0147                         dinStatus[ch]   = DIN_RISING;
0073db 940e bcd2 	CALL SUBOPT_0x2A
0073dd e0e1      	LDI  R30,LOW(1)
0073de c003      	RJMP _0x1E0060
                 ; 000F 0148                     }
                 ; 000F 0149                     else{
                 _0x1E0049:
                 ; 000F 014A                         dinStatus[ch]   = DIN_FALLING;
0073df 940e bcd2 	CALL SUBOPT_0x2A
0073e1 e0e0      	LDI  R30,LOW(0)
                 _0x1E0060:
0073e2 93ec      	ST   X,R30
                 ; 000F 014B                     }
                 ; 000F 014C 
                 ; 000F 014D                     ret += 1;
                +
0073e3 5f4f     +SUBI R20 , LOW ( - 1 )
0073e4 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 000F 014E                 }
                 ; 000F 014F                 else{
0073e5 c004      	RJMP _0x1E004B
                 _0x1E0048:
                 ; 000F 0150                     steadyState[ch] = 0;
                 _0x1E005F:
0073e6 e0a2      	LDI  R26,LOW(_steadyState_S00F0006000)
0073e7 e1b6      	LDI  R27,HIGH(_steadyState_S00F0006000)
0073e8 940e bc31 	CALL SUBOPT_0x13
                 ; 000F 0151                 }
                 _0x1E004B:
                 ; 000F 0152             }
                 ; 000F 0153         }
                 _0x1E0047:
                 ; 000F 0154     }
                 _0x1E003E:
                +
0073ea 5f2f     +SUBI R18 , LOW ( - 1 )
0073eb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
0073ec cf8d      	RJMP _0x1E003C
                 _0x1E003D:
                 ; 000F 0155 
                 ; 000F 0156     return ret;
0073ed 01fa      	MOVW R30,R20
0073ee 940e daa0 	CALL __LOADLOCR6
0073f0 c0ef      	RJMP _0x20E005D
                 ; 000F 0157 }
                 ;/*============================================================*/
                 ;int updateDoutStatus(void)
                 ; 000F 015A {
                 _updateDoutStatus:
                 ; 000F 015B     if(d_out[0]){   doutStatus[0]        = DOUT_HIGH; }
0073f1 91e0 1434 	LDS  R30,_d_out
0073f3 30e0      	CPI  R30,0
0073f4 f011      	BREQ _0x1E004C
0073f5 e0e1      	LDI  R30,LOW(1)
0073f6 c001      	RJMP _0x1E0061
                 ; 000F 015C     else{           doutStatus[0]        = DOUT_LOW; }
                 _0x1E004C:
0073f7 e0e0      	LDI  R30,LOW(0)
                 _0x1E0061:
0073f8 93e0 147e 	STS  _doutStatus,R30
                 ; 000F 015D 
                 ; 000F 015E     if(d_out[1]){   doutStatus[1]        = DOUT_HIGH; }
                +
0073fa 91e0 1435+LDS R30 , _d_out + ( 1 )
                 	__GETB1MN _d_out,1
0073fc 30e0      	CPI  R30,0
0073fd f011      	BREQ _0x1E004E
0073fe e0e1      	LDI  R30,LOW(1)
0073ff c001      	RJMP _0x1E0062
                 ; 000F 015F     else{           doutStatus[1]        = DOUT_LOW; }
                 _0x1E004E:
007400 e0e0      	LDI  R30,LOW(0)
                 _0x1E0062:
                +
007401 93e0 147f+STS _doutStatus + ( 1 ) , R30
                 	__PUTB1MN _doutStatus,1
                 ; 000F 0160 
                 ; 000F 0161     return 0;
                 _0x20E0060:
007403 e0e0      	LDI  R30,LOW(0)
007404 e0f0      	LDI  R31,HIGH(0)
007405 9508      	RET
                 ; 000F 0162 }
                 ;/*============================================================*/
                 ;int getDeviceState(unsigned short *state)
                 ; 000F 0165 {
                 _getDeviceState:
                 ; 000F 0166     int     i   = 0;
                 ; 000F 0167 
                 ; 000F 0168     *state      = 0x00;
007406 940e bf27 	CALL SUBOPT_0x81
                 ;	*state -> Y+2
                 ;	i -> R16,R17
                +
007408 e000     +LDI R16 , LOW ( 0 )
007409 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00740a 81aa      	LDD  R26,Y+2
00740b 81bb      	LDD  R27,Y+2+1
00740c 940e c2b0 	CALL SUBOPT_0x115
                 ; 000F 0169 
                 ; 000F 016A     if(isDeviceConfig()){
00740e 940e 519d 	CALL _isDeviceConfig
007410 9730      	SBIW R30,0
007411 f031      	BREQ _0x1E0050
                 ; 000F 016B         *state |= (1 << 15);
007412 81aa      	LDD  R26,Y+2
007413 81bb      	LDD  R27,Y+2+1
007414 91ed      	LD   R30,X+
007415 91fd      	LD   R31,X+
007416 68f0      	ORI  R31,HIGH(0x8000)
007417 c005      	RJMP _0x1E0063
                 ; 000F 016C     }
                 ; 000F 016D     else{
                 _0x1E0050:
                 ; 000F 016E         *state &= ~(1 << 15);
007418 81aa      	LDD  R26,Y+2
007419 81bb      	LDD  R27,Y+2+1
00741a 91ed      	LD   R30,X+
00741b 91fd      	LD   R31,X+
00741c 77ff      	ANDI R31,HIGH(0x7FFF)
                 _0x1E0063:
00741d 93fe      	ST   -X,R31
00741e 93ee      	ST   -X,R30
                 ; 000F 016F     }
                 ; 000F 0170 
                 ; 000F 0171     if(operating_config.deviceEnable){
                +
00741f 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
007421 30e0      	CPI  R30,0
007422 f031      	BREQ _0x1E0052
                 ; 000F 0172         *state |= (1 << 14);
007423 81aa      	LDD  R26,Y+2
007424 81bb      	LDD  R27,Y+2+1
007425 91ed      	LD   R30,X+
007426 91fd      	LD   R31,X+
007427 64f0      	ORI  R31,HIGH(0x4000)
007428 c005      	RJMP _0x1E0064
                 ; 000F 0173     }
                 ; 000F 0174     else{
                 _0x1E0052:
                 ; 000F 0175         *state &= ~(1 << 14);
007429 81aa      	LDD  R26,Y+2
00742a 81bb      	LDD  R27,Y+2+1
00742b 91ed      	LD   R30,X+
00742c 91fd      	LD   R31,X+
00742d 7bff      	ANDI R31,HIGH(0xBFFF)
                 _0x1E0064:
00742e 93fe      	ST   -X,R31
00742f 93ee      	ST   -X,R30
                 ; 000F 0176     }
                 ; 000F 0177 
                 ; 000F 0178     if(operating_config.mode == MODE_REALTIME){
007430 91a0 11b6 	LDS  R26,_operating_config
007432 31a0      	CPI  R26,LOW(0x10)
007433 f431      	BRNE _0x1E0054
                 ; 000F 0179         *state |= (2 << 10);
007434 81aa      	LDD  R26,Y+2
007435 81bb      	LDD  R27,Y+2+1
007436 91ed      	LD   R30,X+
007437 91fd      	LD   R31,X+
007438 60f8      	ORI  R31,HIGH(0x800)
007439 c005      	RJMP _0x1E0065
                 ; 000F 017A     }
                 ; 000F 017B     else{
                 _0x1E0054:
                 ; 000F 017C         *state |= (1 << 10);
00743a 81aa      	LDD  R26,Y+2
00743b 81bb      	LDD  R27,Y+2+1
00743c 91ed      	LD   R30,X+
00743d 91fd      	LD   R31,X+
00743e 60f4      	ORI  R31,HIGH(0x400)
                 _0x1E0065:
00743f 93fe      	ST   -X,R31
007440 93ee      	ST   -X,R30
                 ; 000F 017D     }
                 ; 000F 017E 
                 ; 000F 017F     if(operating_config.alarmEnable){
                +
007441 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
007443 30e0      	CPI  R30,0
007444 f031      	BREQ _0x1E0056
                 ; 000F 0180         *state |= (2 << 8);
007445 81aa      	LDD  R26,Y+2
007446 81bb      	LDD  R27,Y+2+1
007447 91ed      	LD   R30,X+
007448 91fd      	LD   R31,X+
007449 60f2      	ORI  R31,HIGH(0x200)
00744a c005      	RJMP _0x1E0066
                 ; 000F 0181     }
                 ; 000F 0182     else{
                 _0x1E0056:
                 ; 000F 0183         *state |= (1 << 8);
00744b 81aa      	LDD  R26,Y+2
00744c 81bb      	LDD  R27,Y+2+1
00744d 91ed      	LD   R30,X+
00744e 91fd      	LD   R31,X+
00744f 60f1      	ORI  R31,HIGH(0x100)
                 _0x1E0066:
007450 93fe      	ST   -X,R31
007451 93ee      	ST   -X,R30
                 ; 000F 0184     }
                 ; 000F 0185 
                 ; 000F 0186     for(i=0;i<MAX_SENS_CHANNEL;i++)
                +
007452 e000     +LDI R16 , LOW ( 0 )
007453 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x1E0059:
                +
007454 3005     +CPI R16 , LOW ( 5 )
007455 e0e0     +LDI R30 , HIGH ( 5 )
007456 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007457 f4a4      	BRGE _0x1E005A
                 ; 000F 0187     {
                 ; 000F 0188         if(operating_config.sensorEnable[i]){
007458 940e ca41 	CALL SUBOPT_0x24B
00745a f029      	BREQ _0x1E005B
                 ; 000F 0189             *state |= (1 << (4-i) );
00745b 940e ca48 	CALL SUBOPT_0x24C
00745d 2be6      	OR   R30,R22
00745e 2bf7      	OR   R31,R23
00745f c006      	RJMP _0x1E0067
                 ; 000F 018A         }
                 ; 000F 018B         else{
                 _0x1E005B:
                 ; 000F 018C             *state &= ~(1 << (4-i) );
007460 940e ca48 	CALL SUBOPT_0x24C
007462 95e0      	COM  R30
007463 95f0      	COM  R31
007464 23e6      	AND  R30,R22
007465 23f7      	AND  R31,R23
                 _0x1E0067:
007466 01dc      	MOVW R26,R24
007467 93ed      	ST   X+,R30
007468 93fc      	ST   X,R31
                 ; 000F 018D         }
                 ; 000F 018E     }
                +
007469 5f0f     +SUBI R16 , LOW ( - 1 )
00746a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00746b cfe8      	RJMP _0x1E0059
                 _0x1E005A:
                 ; 000F 018F 
                 ; 000F 0190     printDebug("<getDeviceState> state = [0x%04X]\r\n",*state);
                +
00746c eee3     +LDI R30 , LOW ( 2 * _0x1E0000 + ( 281 ) )
00746d e4f9     +LDI R31 , HIGH ( 2 * _0x1E0000 + ( 281 ) )
00746e e060     +LDI R22 , BYTE3 ( 2 * _0x1E0000 + ( 281 ) )
00746f e070     +LDI R23 , BYTE4 ( 2 * _0x1E0000 + ( 281 ) )
                 	__POINTD1FN _0x1E0000,281
007470 940e c3b7 	CALL SUBOPT_0x145
007472 940e bc7b 	CALL SUBOPT_0x1D
007474 940e c58e 	CALL SUBOPT_0x18B
                 ; 000F 0191 
                 ; 000F 0192     return 0;
007476 940e c153 	CALL SUBOPT_0xD8
007478 940c 79ec 	JMP  _0x20E0058
                 ; 000F 0193 }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "eventqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_record_st eventQ[MAX_EVENT_QUEUE];
                 ;int last_wr_eventQ = 0;
                 ;int last_rd_eventQ = 0;
                 ;int eventQ_len = 0;
                 ;
                 ;/*============================================================*/
                 ;int addEventQueue(unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0010 000D {
                 
                 	.CSEG
                 _addEventQueue:
                 ; 0010 000E     if(eventQ_len == MAX_EVENT_QUEUE){
00747a 93aa      	ST   -Y,R26
                 ;	timestamp -> Y+2
                 ;	eventID -> Y+1
                 ;	eventStatus -> Y+0
00747b 91a0 1680 	LDS  R26,_eventQ_len
00747d 91b0 1681 	LDS  R27,_eventQ_len+1
00747f 9754      	SBIW R26,20
007480 f419      	BRNE _0x200003
                 ; 0010 000F         return -1;
007481 efef      	LDI  R30,LOW(65535)
007482 efff      	LDI  R31,HIGH(65535)
007483 c05c      	RJMP _0x20E005D
                 ; 0010 0010     }
                 ; 0010 0011 
                 ; 0010 0012     eventQ[last_wr_eventQ].timestamp        = timestamp;
                 _0x200003:
007484 940e ca56 	CALL SUBOPT_0x24D
007486 5fec      	SUBI R30,LOW(-_eventQ)
007487 4ef9      	SBCI R31,HIGH(-_eventQ)
007488 940e c07c 	CALL SUBOPT_0xB6
00748a 940e c9dd 	CALL SUBOPT_0x23B
                 ; 0010 0013     eventQ[last_wr_eventQ].eventID          = eventID;
00748c 940e ca56 	CALL SUBOPT_0x24D
                +
00748e 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
00748f 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
007490 81a9      	LDD  R26,Y+1
007491 83a0      	STD  Z+0,R26
                 ; 0010 0014     eventQ[last_wr_eventQ].eventStatus      = eventStatus;
007492 940e ca56 	CALL SUBOPT_0x24D
                +
007494 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
007495 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
007496 81a8      	LD   R26,Y
007497 83a0      	STD  Z+0,R26
                 ; 0010 0015 
                 ; 0010 0016     last_wr_eventQ = (last_wr_eventQ + 1) % MAX_EVENT_QUEUE;
007498 91a0 167c 	LDS  R26,_last_wr_eventQ
00749a 91b0 167d 	LDS  R27,_last_wr_eventQ+1
00749c 9611      	ADIW R26,1
00749d e1e4      	LDI  R30,LOW(20)
00749e e0f0      	LDI  R31,HIGH(20)
00749f 940e d9c4 	CALL __MODW21
0074a1 93e0 167c 	STS  _last_wr_eventQ,R30
0074a3 93f0 167d 	STS  _last_wr_eventQ+1,R31
                 ; 0010 0017 
                 ; 0010 0018     eventQ_len++;
0074a5 e8a0      	LDI  R26,LOW(_eventQ_len)
0074a6 e1b6      	LDI  R27,HIGH(_eventQ_len)
0074a7 91ed      	LD   R30,X+
0074a8 91fd      	LD   R31,X+
0074a9 9631      	ADIW R30,1
0074aa c031      	RJMP _0x20E005E
                 ; 0010 0019 
                 ; 0010 001A     return 0;
                 ; 0010 001B }
                 ;/*============================================================*/
                 ;int fetchEventQueue(unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0010 001E {
                 _fetchEventQueue:
                 ; 0010 001F     if(eventQ_len == 0){
0074ab 93ba      	ST   -Y,R27
0074ac 93aa      	ST   -Y,R26
                 ;	*timestamp -> Y+4
                 ;	*eventID -> Y+2
                 ;	*eventStatus -> Y+0
0074ad 91e0 1680 	LDS  R30,_eventQ_len
0074af 91f0 1681 	LDS  R31,_eventQ_len+1
0074b1 9730      	SBIW R30,0
0074b2 f419      	BRNE _0x200004
                 ; 0010 0020         return -1;
0074b3 efef      	LDI  R30,LOW(65535)
0074b4 efff      	LDI  R31,HIGH(65535)
0074b5 c02a      	RJMP _0x20E005D
                 ; 0010 0021     }
                 ; 0010 0022 
                 ; 0010 0023     *timestamp      =   eventQ[last_rd_eventQ].timestamp;
                 _0x200004:
0074b6 940e ca5e 	CALL SUBOPT_0x24E
0074b8 5fec      	SUBI R30,LOW(-_eventQ)
0074b9 4ef9      	SBCI R31,HIGH(-_eventQ)
0074ba 940e c9eb 	CALL SUBOPT_0x23E
                 ; 0010 0024     *eventID        =   eventQ[last_rd_eventQ].eventID;
0074bc 940e ca5e 	CALL SUBOPT_0x24E
                +
0074be 5fe8     +SUBI R30 , LOW ( - _eventQ - ( 4 ) )
0074bf 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 4 ) )
                 	__ADDW1MN _eventQ,4
0074c0 81e0      	LD   R30,Z
0074c1 81aa      	LDD  R26,Y+2
0074c2 81bb      	LDD  R27,Y+2+1
0074c3 93ec      	ST   X,R30
                 ; 0010 0025     *eventStatus    =   eventQ[last_rd_eventQ].eventStatus;
0074c4 940e ca5e 	CALL SUBOPT_0x24E
                +
0074c6 5fe7     +SUBI R30 , LOW ( - _eventQ - ( 5 ) )
0074c7 4ef9     +SBCI R31 , HIGH ( - _eventQ - ( 5 ) )
                 	__ADDW1MN _eventQ,5
0074c8 940e ca66 	CALL SUBOPT_0x24F
                 ; 0010 0026 
                 ; 0010 0027     last_rd_eventQ  = (last_rd_eventQ + 1) % MAX_EVENT_QUEUE;
0074ca 91a0 167e 	LDS  R26,_last_rd_eventQ
0074cc 91b0 167f 	LDS  R27,_last_rd_eventQ+1
0074ce 9611      	ADIW R26,1
0074cf e1e4      	LDI  R30,LOW(20)
0074d0 e0f0      	LDI  R31,HIGH(20)
0074d1 940e d9c4 	CALL __MODW21
0074d3 93e0 167e 	STS  _last_rd_eventQ,R30
0074d5 93f0 167f 	STS  _last_rd_eventQ+1,R31
                 ; 0010 0028 
                 ; 0010 0029     eventQ_len--;
0074d7 e8a0      	LDI  R26,LOW(_eventQ_len)
0074d8 e1b6      	LDI  R27,HIGH(_eventQ_len)
                 _0x20E005F:
0074d9 91ed      	LD   R30,X+
0074da 91fd      	LD   R31,X+
0074db 9731      	SBIW R30,1
                 _0x20E005E:
0074dc 93fe      	ST   -X,R31
0074dd 93ee      	ST   -X,R30
                 ; 0010 002A     return 0;
0074de e0e0      	LDI  R30,LOW(0)
0074df e0f0      	LDI  R31,HIGH(0)
                 _0x20E005D:
0074e0 9626      	ADIW R28,6
0074e1 9508      	RET
                 ; 0010 002B }
                 ;/*============================================================*/
                 ;#include <stdlib.h>
                 ;#include <stdio.h>
                 ;#include "alarm.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;/*eeprom*/ char sensorAlarm[MAX_SENS_CHANNEL]   = {SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL,SENS_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dataAlarm[MAX_SENS_CHANNEL]     = {DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL,DATA_NORMAL};        // -- oled -- //
                 ;/*eeprom*/ char dinAlarm[MAX_DI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,     // -- oled -- //
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 
                 	.DSEG
                 ;/*eeprom*/ char ainAlarm[MAX_AI_CHANNEL]        = {UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,
                 ;                                               UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN,UNKNOWN};
                 ;/*eeprom*/ char muteAlarm                       = UNKNOWN;
                 ;/*eeprom*/ char mtncAlarm                       = MTNC_NORMAL;
                 ;/*eeprom*/ char powerSrcAlarm                   = PWR_NORMAL;
                 ;/*eeprom*/ char batteryAlarm                    = BATT_NORMAL;                                                          // -- oled -- //
                 ;/*eeprom*/ char communicationAlarm              = COMM_NORMAL;
                 ;/*eeprom*/ char memoryAlarm                     = MEM_NORMAL;                                                           // -- oled -- //
                 ;/*eeprom*/ char gsmAlarm                        = GSM_NORMAL;
                 ;/*eeprom*/ char gsmBalanceAlarm                 = GBAL_NORMAL;
                 ;
                 ;/*============================================================*/
                 ;/**************************************************************/
                 ;/**************** Alarm Indicating decision *******************/
                 ;/**************************************************************/
                 ;int checkAlarm(char *srcList,int srcLen)
                 ; 0011 001B {
                 
                 	.CSEG
                 _checkAlarm:
                 ; 0011 001C     int i=0, res=0, tmp=0;
                 ; 0011 001D 
                 ; 0011 001E     for(i=0;i<srcLen;i++)
0074e2 93ba      	ST   -Y,R27
0074e3 93aa      	ST   -Y,R26
0074e4 940e bd26 	CALL SUBOPT_0x37
                 ;	*srcList -> Y+8
                 ;	srcLen -> Y+6
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                 ;	tmp -> R20,R21
                +
0074e6 e000     +LDI R16 , LOW ( 0 )
0074e7 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x220006:
0074e8 81ee      	LDD  R30,Y+6
0074e9 81ff      	LDD  R31,Y+6+1
0074ea 170e      	CP   R16,R30
0074eb 071f      	CPC  R17,R31
0074ec f46c      	BRGE _0x220007
                 ; 0011 001F     {
                 ; 0011 0020         tmp  = checkAlarmFromSrc(srcList[i]);
0074ed 01f8      	MOVW R30,R16
0074ee 85a8      	LDD  R26,Y+8
0074ef 85b9      	LDD  R27,Y+8+1
0074f0 0fae      	ADD  R26,R30
0074f1 1fbf      	ADC  R27,R31
0074f2 91ac      	LD   R26,X
0074f3 d00b      	RCALL _checkAlarmFromSrc
0074f4 01af      	MOVW R20,R30
                 ; 0011 0021         res |= tmp;
                +
0074f5 2b24     +OR R18 , R20
0074f6 2b35     +OR R19 , R21
                 	__ORWRR 18,19,20,21
                 ; 0011 0022         //printDebug("<checkAlarm> SRC[0x%02X] -> %d\r\n",srcList[i],tmp);
                 ; 0011 0023     }
                +
0074f7 5f0f     +SUBI R16 , LOW ( - 1 )
0074f8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0074f9 cfee      	RJMP _0x220006
                 _0x220007:
                 ; 0011 0024 
                 ; 0011 0025     return res;
0074fa 01f9      	MOVW R30,R18
0074fb 940e daa0 	CALL __LOADLOCR6
                 _0x20E005C:
0074fd 962a      	ADIW R28,10
0074fe 9508      	RET
                 ; 0011 0026 }
                 ;/*============================================================*/
                 ;int checkAlarmFromSrc(char alarmSrc)
                 ; 0011 0029 {
                 _checkAlarmFromSrc:
                 ; 0011 002A     int i   = 0;
                 ; 0011 002B     int res = 0;
                 ; 0011 002C 
                 ; 0011 002D     switch(alarmSrc)
0074ff 93aa      	ST   -Y,R26
007500 940e ca6b 	CALL SUBOPT_0x250
                 ;	alarmSrc -> Y+4
                 ;	i -> R16,R17
                 ;	res -> R18,R19
                +
007502 e020     +LDI R18 , LOW ( 0 )
007503 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
007504 81ec      	LDD  R30,Y+4
007505 e0f0      	LDI  R31,0
                 ; 0011 002E     {
                 ; 0011 002F         case SRC_SENS1_EVENT             :  if(((sensorStatus[0]!= SENS_NORMAL) && (sensorStatus[0] != SENS_ERR_UNKNOWN)) ||
007506 3ce0      	CPI  R30,LOW(0xC0)
007507 e0a0      	LDI  R26,HIGH(0xC0)
007508 07fa      	CPC  R31,R26
007509 f469      	BRNE _0x22000B
                 ; 0011 0030                                                 (dataStatus[0]  != DATA_NORMAL))        res = 1;    break;
00750a 91a0 146f 	LDS  R26,_sensorStatus
00750c 30a0      	CPI  R26,LOW(0x0)
00750d f011      	BREQ _0x22000D
00750e 3faf      	CPI  R26,LOW(0xFF)
00750f f421      	BRNE _0x22000F
                 _0x22000D:
007510 91a0 1474 	LDS  R26,_dataStatus
007512 30a0      	CPI  R26,LOW(0x0)
007513 f011      	BREQ _0x22000C
                 _0x22000F:
                +
007514 e021     +LDI R18 , LOW ( 1 )
007515 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22000C:
007516 c2b5      	RJMP _0x22000A
                 ; 0011 0031         case SRC_SENS1_LOWER             :  if(dataStatus[0]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22000B:
007517 3ce1      	CPI  R30,LOW(0xC1)
007518 e0a0      	LDI  R26,HIGH(0xC1)
007519 07fa      	CPC  R31,R26
00751a f439      	BRNE _0x220011
00751b 91e0 1474 	LDS  R30,_dataStatus
00751d 70e1      	ANDI R30,LOW(0x1)
00751e f011      	BREQ _0x220012
                +
00751f e021     +LDI R18 , LOW ( 1 )
007520 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220012:
007521 c2aa      	RJMP _0x22000A
                 ; 0011 0032         case SRC_SENS1_LOWERDELAY        :  if(dataStatus[0]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220011:
007522 3ce2      	CPI  R30,LOW(0xC2)
007523 e0a0      	LDI  R26,HIGH(0xC2)
007524 07fa      	CPC  R31,R26
007525 f439      	BRNE _0x220013
007526 91e0 1474 	LDS  R30,_dataStatus
007528 71e1      	ANDI R30,LOW(0x11)
007529 f011      	BREQ _0x220014
                +
00752a e021     +LDI R18 , LOW ( 1 )
00752b e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220014:
00752c c29f      	RJMP _0x22000A
                 ; 0011 0033         case SRC_SENS1_LOWEREXTREME      :  if(dataStatus[0]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220013:
00752d 3ce3      	CPI  R30,LOW(0xC3)
00752e e0a0      	LDI  R26,HIGH(0xC3)
00752f 07fa      	CPC  R31,R26
007530 f439      	BRNE _0x220015
007531 91e0 1474 	LDS  R30,_dataStatus
007533 70e2      	ANDI R30,LOW(0x2)
007534 f011      	BREQ _0x220016
                +
007535 e021     +LDI R18 , LOW ( 1 )
007536 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220016:
007537 c294      	RJMP _0x22000A
                 ; 0011 0034         case SRC_SENS1_UPPER             :  if(dataStatus[0]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220015:
007538 3ce4      	CPI  R30,LOW(0xC4)
007539 e0a0      	LDI  R26,HIGH(0xC4)
00753a 07fa      	CPC  R31,R26
00753b f439      	BRNE _0x220017
00753c 91e0 1474 	LDS  R30,_dataStatus
00753e 70e4      	ANDI R30,LOW(0x4)
00753f f011      	BREQ _0x220018
                +
007540 e021     +LDI R18 , LOW ( 1 )
007541 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220018:
007542 c289      	RJMP _0x22000A
                 ; 0011 0035         case SRC_SENS1_UPPERDELAY        :  if(dataStatus[0]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220017:
007543 3ce5      	CPI  R30,LOW(0xC5)
007544 e0a0      	LDI  R26,HIGH(0xC5)
007545 07fa      	CPC  R31,R26
007546 f439      	BRNE _0x220019
007547 91e0 1474 	LDS  R30,_dataStatus
007549 71e4      	ANDI R30,LOW(0x14)
00754a f011      	BREQ _0x22001A
                +
00754b e021     +LDI R18 , LOW ( 1 )
00754c e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001A:
00754d c27e      	RJMP _0x22000A
                 ; 0011 0036         case SRC_SENS1_UPPEREXTREME      :  if(dataStatus[0]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220019:
00754e 3ce6      	CPI  R30,LOW(0xC6)
00754f e0a0      	LDI  R26,HIGH(0xC6)
007550 07fa      	CPC  R31,R26
007551 f439      	BRNE _0x22001B
007552 91e0 1474 	LDS  R30,_dataStatus
007554 70e8      	ANDI R30,LOW(0x8)
007555 f011      	BREQ _0x22001C
                +
007556 e021     +LDI R18 , LOW ( 1 )
007557 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001C:
007558 c273      	RJMP _0x22000A
                 ; 0011 0037         case SRC_SENS1_ERROR             :  if((sensorStatus[0] != SENS_NORMAL) &&
                 _0x22001B:
007559 3ce7      	CPI  R30,LOW(0xC7)
00755a e0a0      	LDI  R26,HIGH(0xC7)
00755b 07fa      	CPC  R31,R26
00755c f451      	BRNE _0x22001D
                 ; 0011 0038                                                (sensorStatus[0] != SENS_ERR_UNKNOWN))   res = 1;    break;
00755d 91a0 146f 	LDS  R26,_sensorStatus
00755f 30a0      	CPI  R26,LOW(0x0)
007560 f011      	BREQ _0x22001F
007561 3faf      	CPI  R26,LOW(0xFF)
007562 f409      	BRNE _0x220020
                 _0x22001F:
007563 c002      	RJMP _0x22001E
                 _0x220020:
                +
007564 e021     +LDI R18 , LOW ( 1 )
007565 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22001E:
007566 c265      	RJMP _0x22000A
                 ; 0011 0039 
                 ; 0011 003A         case SRC_SENS2_EVENT             :  if(((sensorStatus[1]!= SENS_NORMAL) && (sensorStatus[1] != SENS_ERR_UNKNOWN)) ||
                 _0x22001D:
007567 3ce8      	CPI  R30,LOW(0xC8)
007568 e0a0      	LDI  R26,HIGH(0xC8)
007569 07fa      	CPC  R31,R26
00756a f479      	BRNE _0x220021
                 ; 0011 003B                                                 (dataStatus[1]  != DATA_NORMAL))        res = 1;    break;
                +
00756b 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
00756d 30a0      	CPI  R26,LOW(0x0)
00756e f021      	BREQ _0x220023
                +
00756f 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
007571 3faf      	CPI  R26,LOW(0xFF)
007572 f421      	BRNE _0x220025
                 _0x220023:
                +
007573 91a0 1475+LDS R26 , _dataStatus + ( 1 )
                 	__GETB2MN _dataStatus,1
007575 30a0      	CPI  R26,LOW(0x0)
007576 f011      	BREQ _0x220022
                 _0x220025:
                +
007577 e021     +LDI R18 , LOW ( 1 )
007578 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220022:
007579 c252      	RJMP _0x22000A
                 ; 0011 003C         case SRC_SENS2_LOWER             :  if(dataStatus[1]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220021:
00757a 3ce9      	CPI  R30,LOW(0xC9)
00757b e0a0      	LDI  R26,HIGH(0xC9)
00757c 07fa      	CPC  R31,R26
00757d f439      	BRNE _0x220027
                +
00757e 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
007580 70e1      	ANDI R30,LOW(0x1)
007581 f011      	BREQ _0x220028
                +
007582 e021     +LDI R18 , LOW ( 1 )
007583 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220028:
007584 c247      	RJMP _0x22000A
                 ; 0011 003D         case SRC_SENS2_LOWERDELAY        :  if(dataStatus[1]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220027:
007585 3cea      	CPI  R30,LOW(0xCA)
007586 e0a0      	LDI  R26,HIGH(0xCA)
007587 07fa      	CPC  R31,R26
007588 f439      	BRNE _0x220029
                +
007589 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
00758b 71e1      	ANDI R30,LOW(0x11)
00758c f011      	BREQ _0x22002A
                +
00758d e021     +LDI R18 , LOW ( 1 )
00758e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002A:
00758f c23c      	RJMP _0x22000A
                 ; 0011 003E         case SRC_SENS2_LOWEREXTREME      :  if(dataStatus[1]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220029:
007590 3ceb      	CPI  R30,LOW(0xCB)
007591 e0a0      	LDI  R26,HIGH(0xCB)
007592 07fa      	CPC  R31,R26
007593 f439      	BRNE _0x22002B
                +
007594 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
007596 70e2      	ANDI R30,LOW(0x2)
007597 f011      	BREQ _0x22002C
                +
007598 e021     +LDI R18 , LOW ( 1 )
007599 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002C:
00759a c231      	RJMP _0x22000A
                 ; 0011 003F         case SRC_SENS2_UPPER             :  if(dataStatus[1]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22002B:
00759b 3cec      	CPI  R30,LOW(0xCC)
00759c e0a0      	LDI  R26,HIGH(0xCC)
00759d 07fa      	CPC  R31,R26
00759e f439      	BRNE _0x22002D
                +
00759f 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075a1 70e4      	ANDI R30,LOW(0x4)
0075a2 f011      	BREQ _0x22002E
                +
0075a3 e021     +LDI R18 , LOW ( 1 )
0075a4 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22002E:
0075a5 c226      	RJMP _0x22000A
                 ; 0011 0040         case SRC_SENS2_UPPERDELAY        :  if(dataStatus[1]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22002D:
0075a6 3ced      	CPI  R30,LOW(0xCD)
0075a7 e0a0      	LDI  R26,HIGH(0xCD)
0075a8 07fa      	CPC  R31,R26
0075a9 f439      	BRNE _0x22002F
                +
0075aa 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075ac 71e4      	ANDI R30,LOW(0x14)
0075ad f011      	BREQ _0x220030
                +
0075ae e021     +LDI R18 , LOW ( 1 )
0075af e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220030:
0075b0 c21b      	RJMP _0x22000A
                 ; 0011 0041         case SRC_SENS2_UPPEREXTREME      :  if(dataStatus[1]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22002F:
0075b1 3cee      	CPI  R30,LOW(0xCE)
0075b2 e0a0      	LDI  R26,HIGH(0xCE)
0075b3 07fa      	CPC  R31,R26
0075b4 f439      	BRNE _0x220031
                +
0075b5 91e0 1475+LDS R30 , _dataStatus + ( 1 )
                 	__GETB1MN _dataStatus,1
0075b7 70e8      	ANDI R30,LOW(0x8)
0075b8 f011      	BREQ _0x220032
                +
0075b9 e021     +LDI R18 , LOW ( 1 )
0075ba e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220032:
0075bb c210      	RJMP _0x22000A
                 ; 0011 0042         case SRC_SENS2_ERROR             :  if((sensorStatus[1] != SENS_NORMAL) &&
                 _0x220031:
0075bc 3cef      	CPI  R30,LOW(0xCF)
0075bd e0a0      	LDI  R26,HIGH(0xCF)
0075be 07fa      	CPC  R31,R26
0075bf f461      	BRNE _0x220033
                 ; 0011 0043                                                (sensorStatus[1] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0075c0 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0075c2 30a0      	CPI  R26,LOW(0x0)
0075c3 f021      	BREQ _0x220035
                +
0075c4 91a0 1470+LDS R26 , _sensorStatus + ( 1 )
                 	__GETB2MN _sensorStatus,1
0075c6 3faf      	CPI  R26,LOW(0xFF)
0075c7 f409      	BRNE _0x220036
                 _0x220035:
0075c8 c002      	RJMP _0x220034
                 _0x220036:
                +
0075c9 e021     +LDI R18 , LOW ( 1 )
0075ca e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220034:
0075cb c200      	RJMP _0x22000A
                 ; 0011 0044 
                 ; 0011 0045         case SRC_SENS3_EVENT             :  if(((sensorStatus[2]!= SENS_NORMAL) && (sensorStatus[2] != SENS_ERR_UNKNOWN)) ||
                 _0x220033:
0075cc 3de0      	CPI  R30,LOW(0xD0)
0075cd e0a0      	LDI  R26,HIGH(0xD0)
0075ce 07fa      	CPC  R31,R26
0075cf f479      	BRNE _0x220037
                 ; 0011 0046                                                 (dataStatus[2]  != DATA_NORMAL))        res = 1;    break;
                +
0075d0 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0075d2 30a0      	CPI  R26,LOW(0x0)
0075d3 f021      	BREQ _0x220039
                +
0075d4 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
0075d6 3faf      	CPI  R26,LOW(0xFF)
0075d7 f421      	BRNE _0x22003B
                 _0x220039:
                +
0075d8 91a0 1476+LDS R26 , _dataStatus + ( 2 )
                 	__GETB2MN _dataStatus,2
0075da 30a0      	CPI  R26,LOW(0x0)
0075db f011      	BREQ _0x220038
                 _0x22003B:
                +
0075dc e021     +LDI R18 , LOW ( 1 )
0075dd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220038:
0075de c1ed      	RJMP _0x22000A
                 ; 0011 0047         case SRC_SENS3_LOWER             :  if(dataStatus[2]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220037:
0075df 3de1      	CPI  R30,LOW(0xD1)
0075e0 e0a0      	LDI  R26,HIGH(0xD1)
0075e1 07fa      	CPC  R31,R26
0075e2 f439      	BRNE _0x22003D
                +
0075e3 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0075e5 70e1      	ANDI R30,LOW(0x1)
0075e6 f011      	BREQ _0x22003E
                +
0075e7 e021     +LDI R18 , LOW ( 1 )
0075e8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22003E:
0075e9 c1e2      	RJMP _0x22000A
                 ; 0011 0048         case SRC_SENS3_LOWERDELAY        :  if(dataStatus[2]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x22003D:
0075ea 3de2      	CPI  R30,LOW(0xD2)
0075eb e0a0      	LDI  R26,HIGH(0xD2)
0075ec 07fa      	CPC  R31,R26
0075ed f439      	BRNE _0x22003F
                +
0075ee 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0075f0 71e1      	ANDI R30,LOW(0x11)
0075f1 f011      	BREQ _0x220040
                +
0075f2 e021     +LDI R18 , LOW ( 1 )
0075f3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220040:
0075f4 c1d7      	RJMP _0x22000A
                 ; 0011 0049         case SRC_SENS3_LOWEREXTREME      :  if(dataStatus[2]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22003F:
0075f5 3de3      	CPI  R30,LOW(0xD3)
0075f6 e0a0      	LDI  R26,HIGH(0xD3)
0075f7 07fa      	CPC  R31,R26
0075f8 f439      	BRNE _0x220041
                +
0075f9 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
0075fb 70e2      	ANDI R30,LOW(0x2)
0075fc f011      	BREQ _0x220042
                +
0075fd e021     +LDI R18 , LOW ( 1 )
0075fe e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220042:
0075ff c1cc      	RJMP _0x22000A
                 ; 0011 004A         case SRC_SENS3_UPPER             :  if(dataStatus[2]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220041:
007600 3de4      	CPI  R30,LOW(0xD4)
007601 e0a0      	LDI  R26,HIGH(0xD4)
007602 07fa      	CPC  R31,R26
007603 f439      	BRNE _0x220043
                +
007604 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007606 70e4      	ANDI R30,LOW(0x4)
007607 f011      	BREQ _0x220044
                +
007608 e021     +LDI R18 , LOW ( 1 )
007609 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220044:
00760a c1c1      	RJMP _0x22000A
                 ; 0011 004B         case SRC_SENS3_UPPERDELAY        :  if(dataStatus[2]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220043:
00760b 3de5      	CPI  R30,LOW(0xD5)
00760c e0a0      	LDI  R26,HIGH(0xD5)
00760d 07fa      	CPC  R31,R26
00760e f439      	BRNE _0x220045
                +
00760f 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
007611 71e4      	ANDI R30,LOW(0x14)
007612 f011      	BREQ _0x220046
                +
007613 e021     +LDI R18 , LOW ( 1 )
007614 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220046:
007615 c1b6      	RJMP _0x22000A
                 ; 0011 004C         case SRC_SENS3_UPPEREXTREME      :  if(dataStatus[2]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220045:
007616 3de6      	CPI  R30,LOW(0xD6)
007617 e0a0      	LDI  R26,HIGH(0xD6)
007618 07fa      	CPC  R31,R26
007619 f439      	BRNE _0x220047
                +
00761a 91e0 1476+LDS R30 , _dataStatus + ( 2 )
                 	__GETB1MN _dataStatus,2
00761c 70e8      	ANDI R30,LOW(0x8)
00761d f011      	BREQ _0x220048
                +
00761e e021     +LDI R18 , LOW ( 1 )
00761f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220048:
007620 c1ab      	RJMP _0x22000A
                 ; 0011 004D         case SRC_SENS3_ERROR             :  if((sensorStatus[2] != SENS_NORMAL) &&
                 _0x220047:
007621 3de7      	CPI  R30,LOW(0xD7)
007622 e0a0      	LDI  R26,HIGH(0xD7)
007623 07fa      	CPC  R31,R26
007624 f461      	BRNE _0x220049
                 ; 0011 004E                                                (sensorStatus[2] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
007625 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
007627 30a0      	CPI  R26,LOW(0x0)
007628 f021      	BREQ _0x22004B
                +
007629 91a0 1471+LDS R26 , _sensorStatus + ( 2 )
                 	__GETB2MN _sensorStatus,2
00762b 3faf      	CPI  R26,LOW(0xFF)
00762c f409      	BRNE _0x22004C
                 _0x22004B:
00762d c002      	RJMP _0x22004A
                 _0x22004C:
                +
00762e e021     +LDI R18 , LOW ( 1 )
00762f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004A:
007630 c19b      	RJMP _0x22000A
                 ; 0011 004F 
                 ; 0011 0050         case SRC_SENS4_EVENT             :  if(((sensorStatus[3]!= SENS_NORMAL) && (sensorStatus[3] != SENS_ERR_UNKNOWN)) ||
                 _0x220049:
007631 3de8      	CPI  R30,LOW(0xD8)
007632 e0a0      	LDI  R26,HIGH(0xD8)
007633 07fa      	CPC  R31,R26
007634 f479      	BRNE _0x22004D
                 ; 0011 0051                                                 (dataStatus[3]  != DATA_NORMAL))        res = 1;    break;
                +
007635 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007637 30a0      	CPI  R26,LOW(0x0)
007638 f021      	BREQ _0x22004F
                +
007639 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
00763b 3faf      	CPI  R26,LOW(0xFF)
00763c f421      	BRNE _0x220051
                 _0x22004F:
                +
00763d 91a0 1477+LDS R26 , _dataStatus + ( 3 )
                 	__GETB2MN _dataStatus,3
00763f 30a0      	CPI  R26,LOW(0x0)
007640 f011      	BREQ _0x22004E
                 _0x220051:
                +
007641 e021     +LDI R18 , LOW ( 1 )
007642 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22004E:
007643 c188      	RJMP _0x22000A
                 ; 0011 0052         case SRC_SENS4_LOWER             :  if(dataStatus[3]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x22004D:
007644 3de9      	CPI  R30,LOW(0xD9)
007645 e0a0      	LDI  R26,HIGH(0xD9)
007646 07fa      	CPC  R31,R26
007647 f439      	BRNE _0x220053
                +
007648 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
00764a 70e1      	ANDI R30,LOW(0x1)
00764b f011      	BREQ _0x220054
                +
00764c e021     +LDI R18 , LOW ( 1 )
00764d e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220054:
00764e c17d      	RJMP _0x22000A
                 ; 0011 0053         case SRC_SENS4_LOWERDELAY        :  if(dataStatus[3]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220053:
00764f 3dea      	CPI  R30,LOW(0xDA)
007650 e0a0      	LDI  R26,HIGH(0xDA)
007651 07fa      	CPC  R31,R26
007652 f439      	BRNE _0x220055
                +
007653 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007655 71e1      	ANDI R30,LOW(0x11)
007656 f011      	BREQ _0x220056
                +
007657 e021     +LDI R18 , LOW ( 1 )
007658 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220056:
007659 c172      	RJMP _0x22000A
                 ; 0011 0054         case SRC_SENS4_LOWEREXTREME      :  if(dataStatus[3]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x220055:
00765a 3deb      	CPI  R30,LOW(0xDB)
00765b e0a0      	LDI  R26,HIGH(0xDB)
00765c 07fa      	CPC  R31,R26
00765d f439      	BRNE _0x220057
                +
00765e 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007660 70e2      	ANDI R30,LOW(0x2)
007661 f011      	BREQ _0x220058
                +
007662 e021     +LDI R18 , LOW ( 1 )
007663 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220058:
007664 c167      	RJMP _0x22000A
                 ; 0011 0055         case SRC_SENS4_UPPER             :  if(dataStatus[3]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x220057:
007665 3dec      	CPI  R30,LOW(0xDC)
007666 e0a0      	LDI  R26,HIGH(0xDC)
007667 07fa      	CPC  R31,R26
007668 f439      	BRNE _0x220059
                +
007669 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
00766b 70e4      	ANDI R30,LOW(0x4)
00766c f011      	BREQ _0x22005A
                +
00766d e021     +LDI R18 , LOW ( 1 )
00766e e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005A:
00766f c15c      	RJMP _0x22000A
                 ; 0011 0056         case SRC_SENS4_UPPERDELAY        :  if(dataStatus[3]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x220059:
007670 3ded      	CPI  R30,LOW(0xDD)
007671 e0a0      	LDI  R26,HIGH(0xDD)
007672 07fa      	CPC  R31,R26
007673 f439      	BRNE _0x22005B
                +
007674 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007676 71e4      	ANDI R30,LOW(0x14)
007677 f011      	BREQ _0x22005C
                +
007678 e021     +LDI R18 , LOW ( 1 )
007679 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005C:
00767a c151      	RJMP _0x22000A
                 ; 0011 0057         case SRC_SENS4_UPPEREXTREME      :  if(dataStatus[3]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x22005B:
00767b 3dee      	CPI  R30,LOW(0xDE)
00767c e0a0      	LDI  R26,HIGH(0xDE)
00767d 07fa      	CPC  R31,R26
00767e f439      	BRNE _0x22005D
                +
00767f 91e0 1477+LDS R30 , _dataStatus + ( 3 )
                 	__GETB1MN _dataStatus,3
007681 70e8      	ANDI R30,LOW(0x8)
007682 f011      	BREQ _0x22005E
                +
007683 e021     +LDI R18 , LOW ( 1 )
007684 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22005E:
007685 c146      	RJMP _0x22000A
                 ; 0011 0058         case SRC_SENS4_ERROR             :  if((sensorStatus[3] != SENS_NORMAL) &&
                 _0x22005D:
007686 3def      	CPI  R30,LOW(0xDF)
007687 e0a0      	LDI  R26,HIGH(0xDF)
007688 07fa      	CPC  R31,R26
007689 f461      	BRNE _0x22005F
                 ; 0011 0059                                                (sensorStatus[3] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
00768a 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
00768c 30a0      	CPI  R26,LOW(0x0)
00768d f021      	BREQ _0x220061
                +
00768e 91a0 1472+LDS R26 , _sensorStatus + ( 3 )
                 	__GETB2MN _sensorStatus,3
007690 3faf      	CPI  R26,LOW(0xFF)
007691 f409      	BRNE _0x220062
                 _0x220061:
007692 c002      	RJMP _0x220060
                 _0x220062:
                +
007693 e021     +LDI R18 , LOW ( 1 )
007694 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220060:
007695 c136      	RJMP _0x22000A
                 ; 0011 005A 
                 ; 0011 005B         case SRC_SENS5_EVENT             :  if(((sensorStatus[4]!= SENS_NORMAL) && (sensorStatus[4] != SENS_ERR_UNKNOWN)) ||
                 _0x22005F:
007696 3ee0      	CPI  R30,LOW(0xE0)
007697 e0a0      	LDI  R26,HIGH(0xE0)
007698 07fa      	CPC  R31,R26
007699 f479      	BRNE _0x220063
                 ; 0011 005C                                                 (dataStatus[4]  != DATA_NORMAL))        res = 1;    break;
                +
00769a 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
00769c 30a0      	CPI  R26,LOW(0x0)
00769d f021      	BREQ _0x220065
                +
00769e 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0076a0 3faf      	CPI  R26,LOW(0xFF)
0076a1 f421      	BRNE _0x220067
                 _0x220065:
                +
0076a2 91a0 1478+LDS R26 , _dataStatus + ( 4 )
                 	__GETB2MN _dataStatus,4
0076a4 30a0      	CPI  R26,LOW(0x0)
0076a5 f011      	BREQ _0x220064
                 _0x220067:
                +
0076a6 e021     +LDI R18 , LOW ( 1 )
0076a7 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220064:
0076a8 c123      	RJMP _0x22000A
                 ; 0011 005D         case SRC_SENS5_LOWER             :  if(dataStatus[4]    &  DATA_LOWER_LIMIT)    res = 1;    break;
                 _0x220063:
0076a9 3ee1      	CPI  R30,LOW(0xE1)
0076aa e0a0      	LDI  R26,HIGH(0xE1)
0076ab 07fa      	CPC  R31,R26
0076ac f439      	BRNE _0x220069
                +
0076ad 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076af 70e1      	ANDI R30,LOW(0x1)
0076b0 f011      	BREQ _0x22006A
                +
0076b1 e021     +LDI R18 , LOW ( 1 )
0076b2 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006A:
0076b3 c118      	RJMP _0x22000A
                 ; 0011 005E         case SRC_SENS5_LOWERDELAY        :  if(dataStatus[4]    &  DATA_LOWER_DELAY)    res = 1;    break;
                 _0x220069:
0076b4 3ee2      	CPI  R30,LOW(0xE2)
0076b5 e0a0      	LDI  R26,HIGH(0xE2)
0076b6 07fa      	CPC  R31,R26
0076b7 f439      	BRNE _0x22006B
                +
0076b8 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076ba 71e1      	ANDI R30,LOW(0x11)
0076bb f011      	BREQ _0x22006C
                +
0076bc e021     +LDI R18 , LOW ( 1 )
0076bd e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006C:
0076be c10d      	RJMP _0x22000A
                 ; 0011 005F         case SRC_SENS5_LOWEREXTREME      :  if(dataStatus[4]    &  DATA_LOWER_EXTREME)  res = 1;    break;
                 _0x22006B:
0076bf 3ee3      	CPI  R30,LOW(0xE3)
0076c0 e0a0      	LDI  R26,HIGH(0xE3)
0076c1 07fa      	CPC  R31,R26
0076c2 f439      	BRNE _0x22006D
                +
0076c3 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076c5 70e2      	ANDI R30,LOW(0x2)
0076c6 f011      	BREQ _0x22006E
                +
0076c7 e021     +LDI R18 , LOW ( 1 )
0076c8 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22006E:
0076c9 c102      	RJMP _0x22000A
                 ; 0011 0060         case SRC_SENS5_UPPER             :  if(dataStatus[4]    &  DATA_UPPER_LIMIT)    res = 1;    break;
                 _0x22006D:
0076ca 3ee4      	CPI  R30,LOW(0xE4)
0076cb e0a0      	LDI  R26,HIGH(0xE4)
0076cc 07fa      	CPC  R31,R26
0076cd f439      	BRNE _0x22006F
                +
0076ce 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076d0 70e4      	ANDI R30,LOW(0x4)
0076d1 f011      	BREQ _0x220070
                +
0076d2 e021     +LDI R18 , LOW ( 1 )
0076d3 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220070:
0076d4 c0f7      	RJMP _0x22000A
                 ; 0011 0061         case SRC_SENS5_UPPERDELAY        :  if(dataStatus[4]    &  DATA_UPPER_DELAY)    res = 1;    break;
                 _0x22006F:
0076d5 3ee5      	CPI  R30,LOW(0xE5)
0076d6 e0a0      	LDI  R26,HIGH(0xE5)
0076d7 07fa      	CPC  R31,R26
0076d8 f439      	BRNE _0x220071
                +
0076d9 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076db 71e4      	ANDI R30,LOW(0x14)
0076dc f011      	BREQ _0x220072
                +
0076dd e021     +LDI R18 , LOW ( 1 )
0076de e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220072:
0076df c0ec      	RJMP _0x22000A
                 ; 0011 0062         case SRC_SENS5_UPPEREXTREME      :  if(dataStatus[4]    &  DATA_UPPER_EXTREME)  res = 1;    break;
                 _0x220071:
0076e0 3ee6      	CPI  R30,LOW(0xE6)
0076e1 e0a0      	LDI  R26,HIGH(0xE6)
0076e2 07fa      	CPC  R31,R26
0076e3 f439      	BRNE _0x220073
                +
0076e4 91e0 1478+LDS R30 , _dataStatus + ( 4 )
                 	__GETB1MN _dataStatus,4
0076e6 70e8      	ANDI R30,LOW(0x8)
0076e7 f011      	BREQ _0x220074
                +
0076e8 e021     +LDI R18 , LOW ( 1 )
0076e9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220074:
0076ea c0e1      	RJMP _0x22000A
                 ; 0011 0063         case SRC_SENS5_ERROR             :  if((sensorStatus[4] != SENS_NORMAL) &&
                 _0x220073:
0076eb 3ee7      	CPI  R30,LOW(0xE7)
0076ec e0a0      	LDI  R26,HIGH(0xE7)
0076ed 07fa      	CPC  R31,R26
0076ee f461      	BRNE _0x220075
                 ; 0011 0064                                                (sensorStatus[4] != SENS_ERR_UNKNOWN))   res = 1;    break;
                +
0076ef 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0076f1 30a0      	CPI  R26,LOW(0x0)
0076f2 f021      	BREQ _0x220077
                +
0076f3 91a0 1473+LDS R26 , _sensorStatus + ( 4 )
                 	__GETB2MN _sensorStatus,4
0076f5 3faf      	CPI  R26,LOW(0xFF)
0076f6 f409      	BRNE _0x220078
                 _0x220077:
0076f7 c002      	RJMP _0x220076
                 _0x220078:
                +
0076f8 e021     +LDI R18 , LOW ( 1 )
0076f9 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220076:
0076fa c0d1      	RJMP _0x22000A
                 ; 0011 0065 
                 ; 0011 0066         case SRC_DI_EVENT_ANY            :  break;
                 _0x220075:
0076fb 37e1      	CPI  R30,LOW(0x71)
0076fc e0a0      	LDI  R26,HIGH(0x71)
0076fd 07fa      	CPC  R31,R26
0076fe f409      	BRNE _0x220079
0076ff c0cc      	RJMP _0x22000A
                 ; 0011 0067         case SRC_DI_RISING_ANY           :  for(i=0;i<USE_DIN;i++){
                 _0x220079:
007700 37e2      	CPI  R30,LOW(0x72)
007701 e0a0      	LDI  R26,HIGH(0x72)
007702 07fa      	CPC  R31,R26
007703 f481      	BRNE _0x22007A
                +
007704 e000     +LDI R16 , LOW ( 0 )
007705 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
007706 3002     +CPI R16 , LOW ( 2 )
007707 e0e0     +LDI R30 , HIGH ( 2 )
007708 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
007709 f44c      	BRGE _0x22007D
                 ; 0011 0068                                                 if(dinStatus[i] == DIN_RISING)          res = 1;    break;
00770a e7ac      	LDI  R26,LOW(_dinStatus)
00770b e1b4      	LDI  R27,HIGH(_dinStatus)
00770c 0fa0      	ADD  R26,R16
00770d 1fb1      	ADC  R27,R17
00770e 91ac      	LD   R26,X
00770f 30a1      	CPI  R26,LOW(0x1)
007710 f411      	BRNE _0x22007E
                +
007711 e021     +LDI R18 , LOW ( 1 )
007712 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22007E:
                 ; 0011 0069                                             }
                 _0x22007D:
                 ; 0011 006A                                             break;
007713 c0b8      	RJMP _0x22000A
                 ; 0011 006B         case SRC_DI_FALLING_ANY          :  for(i=0;i<USE_DIN;i++){
                 _0x22007A:
007714 37e3      	CPI  R30,LOW(0x73)
007715 e0a0      	LDI  R26,HIGH(0x73)
007716 07fa      	CPC  R31,R26
007717 f471      	BRNE _0x22007F
                +
007718 e000     +LDI R16 , LOW ( 0 )
007719 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00771a 3002     +CPI R16 , LOW ( 2 )
00771b e0e0     +LDI R30 , HIGH ( 2 )
00771c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00771d f43c      	BRGE _0x220082
                 ; 0011 006C                                                 if(dinStatus[i] == DIN_FALLING)         res = 1;    break;
00771e e7ac      	LDI  R26,LOW(_dinStatus)
00771f e1b4      	LDI  R27,HIGH(_dinStatus)
007720 940e ca70 	CALL SUBOPT_0x251
007722 f411      	BRNE _0x220083
                +
007723 e021     +LDI R18 , LOW ( 1 )
007724 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220083:
                 ; 0011 006D                                             }
                 _0x220082:
                 ; 0011 006E                                             break;
007725 c0a6      	RJMP _0x22000A
                 ; 0011 006F 
                 ; 0011 0070         case SRC_DI_EVENT(0)             :  break;
                 _0x22007F:
007726 34e0      	CPI  R30,LOW(0x40)
007727 e0a0      	LDI  R26,HIGH(0x40)
007728 07fa      	CPC  R31,R26
007729 f409      	BRNE _0x220084
00772a c0a1      	RJMP _0x22000A
                 ; 0011 0071         case SRC_DI_RISING(0)            :  if(dinStatus[0] == DIN_RISING) {
                 _0x220084:
00772b 35e0      	CPI  R30,LOW(0x50)
00772c e0a0      	LDI  R26,HIGH(0x50)
00772d 07fa      	CPC  R31,R26
00772e f439      	BRNE _0x220085
00772f 91a0 147c 	LDS  R26,_dinStatus
007731 30a1      	CPI  R26,LOW(0x1)
007732 f411      	BRNE _0x220086
                 ; 0011 0072                                                 res = 1;
                +
007733 e021     +LDI R18 , LOW ( 1 )
007734 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0073 //                                                printDebug("DIN1 Rising Alarm \r\n");
                 ; 0011 0074                                             }
                 ; 0011 0075                                             break;
                 _0x220086:
007735 c096      	RJMP _0x22000A
                 ; 0011 0076         case SRC_DI_FALLING(0)           :  if(dinStatus[0]     == DIN_FALLING)         res = 1;    break;
                 _0x220085:
007736 36e0      	CPI  R30,LOW(0x60)
007737 e0a0      	LDI  R26,HIGH(0x60)
007738 07fa      	CPC  R31,R26
007739 f439      	BRNE _0x220087
00773a 91e0 147c 	LDS  R30,_dinStatus
00773c 30e0      	CPI  R30,0
00773d f411      	BRNE _0x220088
                +
00773e e021     +LDI R18 , LOW ( 1 )
00773f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220088:
007740 c08b      	RJMP _0x22000A
                 ; 0011 0077 
                 ; 0011 0078         case SRC_DI_EVENT(1)             :  break;
                 _0x220087:
007741 34e1      	CPI  R30,LOW(0x41)
007742 e0a0      	LDI  R26,HIGH(0x41)
007743 07fa      	CPC  R31,R26
007744 f409      	BRNE _0x220089
007745 c086      	RJMP _0x22000A
                 ; 0011 0079         case SRC_DI_RISING(1)            :  if(dinStatus[1]     == DIN_RISING)          res = 1;    break;
                 _0x220089:
007746 35e1      	CPI  R30,LOW(0x51)
007747 e0a0      	LDI  R26,HIGH(0x51)
007748 07fa      	CPC  R31,R26
007749 f439      	BRNE _0x22008A
                +
00774a 91a0 147d+LDS R26 , _dinStatus + ( 1 )
                 	__GETB2MN _dinStatus,1
00774c 30a1      	CPI  R26,LOW(0x1)
00774d f411      	BRNE _0x22008B
                +
00774e e021     +LDI R18 , LOW ( 1 )
00774f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008B:
007750 c07b      	RJMP _0x22000A
                 ; 0011 007A         case SRC_DI_FALLING(1)           :  if(dinStatus[1]     == DIN_FALLING)         res = 1;    break;
                 _0x22008A:
007751 36e1      	CPI  R30,LOW(0x61)
007752 e0a0      	LDI  R26,HIGH(0x61)
007753 07fa      	CPC  R31,R26
007754 f439      	BRNE _0x22008C
                +
007755 91e0 147d+LDS R30 , _dinStatus + ( 1 )
                 	__GETB1MN _dinStatus,1
007757 30e0      	CPI  R30,0
007758 f411      	BRNE _0x22008D
                +
007759 e021     +LDI R18 , LOW ( 1 )
00775a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x22008D:
00775b c070      	RJMP _0x22000A
                 ; 0011 007B 
                 ; 0011 007C         case SRC_MUTE_ALARM              :  break;
                 _0x22008C:
00775c 38e0      	CPI  R30,LOW(0x80)
00775d e0a0      	LDI  R26,HIGH(0x80)
00775e 07fa      	CPC  R31,R26
00775f f409      	BRNE _0x22008E
007760 c06b      	RJMP _0x22000A
                 ; 0011 007D         case SRC_MIP                     :  // --- wait for menu MIP --- //
                 _0x22008E:
007761 38e1      	CPI  R30,LOW(0x81)
007762 e0a0      	LDI  R26,HIGH(0x81)
007763 07fa      	CPC  R31,R26
007764 f409      	BRNE _0x22008F
                 ; 0011 007E                                             break;
007765 c066      	RJMP _0x22000A
                 ; 0011 007F         case SRC_POWER_DOWN              :  if(powerSrcStatus   == PWR_DOWN)            res = 1;    break;
                 _0x22008F:
007766 38e2      	CPI  R30,LOW(0x82)
007767 e0a0      	LDI  R26,HIGH(0x82)
007768 07fa      	CPC  R31,R26
007769 f439      	BRNE _0x220090
00776a 91a0 147a 	LDS  R26,_powerSrcStatus
00776c 30a1      	CPI  R26,LOW(0x1)
00776d f411      	BRNE _0x220091
                +
00776e e021     +LDI R18 , LOW ( 1 )
00776f e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220091:
007770 c05b      	RJMP _0x22000A
                 ; 0011 0080         case SRC_LOW_BATTERY             :  if(batteryStatus    == BATT_LOW)            res = 1;    break;
                 _0x220090:
007771 38e3      	CPI  R30,LOW(0x83)
007772 e0a0      	LDI  R26,HIGH(0x83)
007773 07fa      	CPC  R31,R26
007774 f439      	BRNE _0x220092
007775 91a0 147b 	LDS  R26,_batteryStatus
007777 30a1      	CPI  R26,LOW(0x1)
007778 f411      	BRNE _0x220093
                +
007779 e021     +LDI R18 , LOW ( 1 )
00777a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220093:
00777b c050      	RJMP _0x22000A
                 ; 0011 0081         case SRC_LOW_COMM_SIGNAL         :  break;
                 _0x220092:
00777c 38e4      	CPI  R30,LOW(0x84)
00777d e0a0      	LDI  R26,HIGH(0x84)
00777e 07fa      	CPC  R31,R26
00777f f409      	BRNE _0x220094
007780 c04b      	RJMP _0x22000A
                 ; 0011 0082         case SRC_LOW_MEMORY              :  if(memoryAlarm      == MEM_LOW)             res = 1;    break;
                 _0x220094:
007781 38e5      	CPI  R30,LOW(0x85)
007782 e0a0      	LDI  R26,HIGH(0x85)
007783 07fa      	CPC  R31,R26
007784 f439      	BRNE _0x220095
007785 91a0 14a7 	LDS  R26,_memoryAlarm
007787 30a1      	CPI  R26,LOW(0x1)
007788 f411      	BRNE _0x220096
                +
007789 e021     +LDI R18 , LOW ( 1 )
00778a e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220096:
00778b c040      	RJMP _0x22000A
                 ; 0011 0083         case SRC_MEMORY_ERROR            :  if(memoryAlarm      == MEM_ERROR)           res = 1;    break;
                 _0x220095:
00778c 38e6      	CPI  R30,LOW(0x86)
00778d e0a0      	LDI  R26,HIGH(0x86)
00778e 07fa      	CPC  R31,R26
00778f f439      	BRNE _0x220097
007790 91a0 14a7 	LDS  R26,_memoryAlarm
007792 30a2      	CPI  R26,LOW(0x2)
007793 f411      	BRNE _0x220098
                +
007794 e021     +LDI R18 , LOW ( 1 )
007795 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 _0x220098:
007796 c035      	RJMP _0x22000A
                 ; 0011 0084         case SRC_LOST_OF_COMM            :  if(serverCommStatus == COMM_LOST) {
                 _0x220097:
007797 38e7      	CPI  R30,LOW(0x87)
007798 e0a0      	LDI  R26,HIGH(0x87)
007799 07fa      	CPC  R31,R26
00779a f439      	BRNE _0x220099
00779b 91a0 1480 	LDS  R26,_serverCommStatus
00779d 30a2      	CPI  R26,LOW(0x2)
00779e f411      	BRNE _0x22009A
                 ; 0011 0085                                                 res = 1;
                +
00779f e021     +LDI R18 , LOW ( 1 )
0077a0 e030     +LDI R19 , HIGH ( 1 )
                 	__GETWRN 18,19,1
                 ; 0011 0086 //                                                printDebug("Comm Lost Alarm \r\n");
                 ; 0011 0087                                             }
                 ; 0011 0088 //                                            printDebug("Check Comm Lost \r\n");
                 ; 0011 0089                                             break;
                 _0x22009A:
0077a1 c02a      	RJMP _0x22000A
                 ; 0011 008A         case SRC_GSM_LOW_SIGNAL          :
                 _0x220099:
0077a2 39e0      	CPI  R30,LOW(0x90)
0077a3 e0a0      	LDI  R26,HIGH(0x90)
0077a4 07fa      	CPC  R31,R26
0077a5 f021      	BREQ _0x22009C
                 ; 0011 008B         case SRC_GSM_DATE_EXPIRED        :
0077a6 39e1      	CPI  R30,LOW(0x91)
0077a7 e0a0      	LDI  R26,HIGH(0x91)
0077a8 07fa      	CPC  R31,R26
0077a9 f409      	BRNE _0x22009D
                 _0x22009C:
                 ; 0011 008C         case SRC_GSM_NO_OPERATOR         :
0077aa c004      	RJMP _0x22009E
                 _0x22009D:
0077ab 39e2      	CPI  R30,LOW(0x92)
0077ac e0a0      	LDI  R26,HIGH(0x92)
0077ad 07fa      	CPC  R31,R26
0077ae f409      	BRNE _0x22009F
                 _0x22009E:
                 ; 0011 008D         case SRC_GSM_TOP_UP              :
0077af c004      	RJMP _0x2200A0
                 _0x22009F:
0077b0 39e3      	CPI  R30,LOW(0x93)
0077b1 e0a0      	LDI  R26,HIGH(0x93)
0077b2 07fa      	CPC  R31,R26
0077b3 f409      	BRNE _0x2200A1
                 _0x2200A0:
                 ; 0011 008E         case SRC_GSM_LOW_BALANCE         :
0077b4 c004      	RJMP _0x2200A2
                 _0x2200A1:
0077b5 39e4      	CPI  R30,LOW(0x94)
0077b6 e0a0      	LDI  R26,HIGH(0x94)
0077b7 07fa      	CPC  R31,R26
0077b8 f409      	BRNE _0x2200A3
                 _0x2200A2:
                 ; 0011 008F         case SRC_GSM_UNKNOWN_FAILURE     :  printDebug("<checkAlarmFromSrc> GSM Not support yet [0x%02X]\r\n",alarmSrc);
0077b9 c004      	RJMP _0x2200A4
                 _0x2200A3:
0077ba 39ef      	CPI  R30,LOW(0x9F)
0077bb e0a0      	LDI  R26,HIGH(0x9F)
0077bc 07fa      	CPC  R31,R26
0077bd f429      	BRNE _0x2200A6
                 _0x2200A4:
                +
0077be e3ea     +LDI R30 , LOW ( 2 * _0x220000 + ( 0 ) )
0077bf e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 0 ) )
0077c0 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 0 ) )
0077c1 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 0 ) )
                 	__POINTD1FN _0x220000,0
0077c2 c004      	RJMP _0x2200F1
                 ; 0011 0090                                             break;
                 ; 0011 0091 
                 ; 0011 0092         default                          :  printDebug("<checkAlarmFromSrc> alarmSrc unknown [0x%02X]\r\n",alarmSrc);
                 _0x2200A6:
                +
0077c3 e6ed     +LDI R30 , LOW ( 2 * _0x220000 + ( 51 ) )
0077c4 e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 51 ) )
0077c5 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 51 ) )
0077c6 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 51 ) )
                 	__POINTD1FN _0x220000,51
                 _0x2200F1:
0077c7 940e da29 	CALL __PUTPARD1
0077c9 85e8      	LDD  R30,Y+8
0077ca 940e bccc 	CALL SUBOPT_0x29
                 ; 0011 0093                                             break;
                 ; 0011 0094     }
                 _0x22000A:
                 ; 0011 0095 
                 ; 0011 0096     return res;
0077cc 01f9      	MOVW R30,R18
0077cd 940e daa2 	CALL __LOADLOCR4
0077cf 940c 7b51 	JMP  _0x20E0055
                 ; 0011 0097 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Send Alarm Detection **********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int checkSendMIPAlarm(unsigned char *code)
                 ; 0011 009F {
                 _checkSendMIPAlarm:
                 ; 0011 00A0     if(mtncStatus != mtncAlarm)
0077d1 93ba      	ST   -Y,R27
0077d2 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
0077d3 91e0 1692 	LDS  R30,_mtncAlarm
0077d5 91a0 1479 	LDS  R26,_mtncStatus
0077d7 17ea      	CP   R30,R26
0077d8 f061      	BREQ _0x2200A7
                 ; 0011 00A1     {
                 ; 0011 00A2         mtncAlarm   = mtncStatus;
0077d9 91e0 1479 	LDS  R30,_mtncStatus
0077db 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 00A3         *code       = mtncStatus;
0077dd 91e0 1479 	LDS  R30,_mtncStatus
0077df 81a8      	LD   R26,Y
0077e0 81b9      	LDD  R27,Y+1
0077e1 93ec      	ST   X,R30
                 ; 0011 00A4         return 1;
0077e2 e0e1      	LDI  R30,LOW(1)
0077e3 e0f0      	LDI  R31,HIGH(1)
0077e4 c0ee      	RJMP _0x20E005A
                 ; 0011 00A5     }
                 ; 0011 00A6 
                 ; 0011 00A7     return 0;
                 _0x2200A7:
0077e5 c0eb      	RJMP _0x20E005B
                 ; 0011 00A8 }
                 ;/*============================================================*/
                 ;int checkSendPowerAlarm(unsigned char *code)
                 ; 0011 00AB {
                 _checkSendPowerAlarm:
                 ; 0011 00AC     static TIMER    t           = 0;
                 ; 0011 00AD     static char     t_flag      = 0;
                 ; 0011 00AE     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00AF 
                 ; 0011 00B0     if(powerSrcStatus != powerSrcAlarm)
0077e6 93ba      	ST   -Y,R27
0077e7 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
0077e8 91e0 1693 	LDS  R30,_powerSrcAlarm
0077ea 91a0 147a 	LDS  R26,_powerSrcStatus
0077ec 17ea      	CP   R30,R26
0077ed f1e1      	BREQ _0x2200A9
                 ; 0011 00B1     {
                 ; 0011 00B2         if(powerSrcStatus != lastCheck){
0077ee 91e0 169c 	LDS  R30,_lastCheck_S0110003000
0077f0 17ea      	CP   R30,R26
0077f1 f039      	BREQ _0x2200AA
                 ; 0011 00B3             t_flag      = 0;
0077f2 e0e0      	LDI  R30,LOW(0)
0077f3 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00B4             lastCheck   = powerSrcStatus;
0077f5 91e0 147a 	LDS  R30,_powerSrcStatus
0077f7 93e0 169c 	STS  _lastCheck_S0110003000,R30
                 ; 0011 00B5         }
                 ; 0011 00B6 
                 ; 0011 00B7         if(!t_flag){
                 _0x2200AA:
0077f9 91e0 169b 	LDS  R30,_t_flag_S0110003000
0077fb 30e0      	CPI  R30,0
0077fc f499      	BRNE _0x2200AB
                 ; 0011 00B8             if(powerSrcStatus == PWR_DOWN){
0077fd 91a0 147a 	LDS  R26,_powerSrcStatus
0077ff 30a1      	CPI  R26,LOW(0x1)
007800 f429      	BRNE _0x2200AC
                 ; 0011 00B9                 TIMER_setTimer(&t,30);
007801 e9e7      	LDI  R30,LOW(_t_S0110003000)
007802 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007803 940e c4e3 	CALL SUBOPT_0x172
007805 c004      	RJMP _0x2200F2
                 ; 0011 00BA             }
                 ; 0011 00BB             else{
                 _0x2200AC:
                 ; 0011 00BC                 TIMER_setTimer(&t,3);
007806 e9e7      	LDI  R30,LOW(_t_S0110003000)
007807 e1f6      	LDI  R31,HIGH(_t_S0110003000)
007808 940e ca75 	CALL SUBOPT_0x252
                 _0x2200F2:
00780a 940e 4073 	CALL _TIMER_setTimer
                 ; 0011 00BD             }
                 ; 0011 00BE             t_flag              = 1;
00780c e0e1      	LDI  R30,LOW(1)
00780d 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00BF         }
                 ; 0011 00C0         else{
00780f c019      	RJMP _0x2200AE
                 _0x2200AB:
                 ; 0011 00C1             if(TIMER_checkTimerExceed(t))
007810 91a0 1697 	LDS  R26,_t_S0110003000
007812 91b0 1698 	LDS  R27,_t_S0110003000+1
007814 9180 1699 	LDS  R24,_t_S0110003000+2
007816 9190 169a 	LDS  R25,_t_S0110003000+3
007818 940e 405d 	CALL _TIMER_checkTimerExceed
00781a 9730      	SBIW R30,0
00781b f069      	BREQ _0x2200AF
                 ; 0011 00C2             {
                 ; 0011 00C3                 powerSrcAlarm   = powerSrcStatus;
00781c 91e0 147a 	LDS  R30,_powerSrcStatus
00781e 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 00C4 
                 ; 0011 00C5                 *code           = powerSrcStatus;
007820 91e0 147a 	LDS  R30,_powerSrcStatus
007822 940e ca7c 	CALL SUBOPT_0x253
                 ; 0011 00C6 
                 ; 0011 00C7                 t_flag          = 0;
007824 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00C8                 return 1;
007826 e0e1      	LDI  R30,LOW(1)
007827 e0f0      	LDI  R31,HIGH(1)
007828 c0aa      	RJMP _0x20E005A
                 ; 0011 00C9             }
                 ; 0011 00CA         }
                 _0x2200AF:
                 _0x2200AE:
                 ; 0011 00CB     }
                 ; 0011 00CC     else
007829 c003      	RJMP _0x2200B0
                 _0x2200A9:
                 ; 0011 00CD     {
                 ; 0011 00CE         t_flag = 0;
00782a e0e0      	LDI  R30,LOW(0)
00782b 93e0 169b 	STS  _t_flag_S0110003000,R30
                 ; 0011 00CF     }
                 _0x2200B0:
                 ; 0011 00D0 
                 ; 0011 00D1     return 0;
00782d c0a3      	RJMP _0x20E005B
                 ; 0011 00D2 }
                 ;/*============================================================*/
                 ;int checkSendBatteryAlarm(unsigned char *code)
                 ; 0011 00D5 {
                 _checkSendBatteryAlarm:
                 ; 0011 00D6     static TIMER    t           = 0;
                 ; 0011 00D7     static char     t_flag      = 0;
                 ; 0011 00D8     static char     lastCheck   = 0x69;   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 00D9 
                 ; 0011 00DA     if(env_config.batteryLevel > 0)
00782e 93ba      	ST   -Y,R27
00782f 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007830 940e ca81 	CALL SUBOPT_0x254
007832 f5dc      	BRGE _0x2200B2
                 ; 0011 00DB     {
                 ; 0011 00DC         if(batteryStatus != batteryAlarm)
007833 91e0 14a6 	LDS  R30,_batteryAlarm
007835 91a0 147b 	LDS  R26,_batteryStatus
007837 17ea      	CP   R30,R26
007838 f189      	BREQ _0x2200B3
                 ; 0011 00DD         {
                 ; 0011 00DE             if(batteryStatus != lastCheck)
007839 91e0 16a2 	LDS  R30,_lastCheck_S0110004000
00783b 17ea      	CP   R30,R26
00783c f039      	BREQ _0x2200B4
                 ; 0011 00DF             {
                 ; 0011 00E0                 t_flag      = 0;
00783d e0e0      	LDI  R30,LOW(0)
00783e 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00E1                 lastCheck   = batteryStatus;
007840 91e0 147b 	LDS  R30,_batteryStatus
007842 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 00E2             }
                 ; 0011 00E3 
                 ; 0011 00E4             if(!t_flag)
                 _0x2200B4:
007844 91e0 16a1 	LDS  R30,_t_flag_S0110004000
007846 30e0      	CPI  R30,0
007847 f441      	BRNE _0x2200B5
                 ; 0011 00E5             {
                 ; 0011 00E6                 if(batteryStatus == BATT_LOW){
                 ; 0011 00E7                     TIMER_setTimer(&t,10);
                 ; 0011 00E8                 }
                 ; 0011 00E9                 else{
                 ; 0011 00EA                     TIMER_setTimer(&t,10);
                 _0x2200F3:
007848 e9ed      	LDI  R30,LOW(_t_S0110004000)
007849 e1f6      	LDI  R31,HIGH(_t_S0110004000)
00784a 940e bcbb 	CALL SUBOPT_0x27
                 ; 0011 00EB                 }
                 ; 0011 00EC                 t_flag              = 1;
00784c e0e1      	LDI  R30,LOW(1)
00784d 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00ED             }
                 ; 0011 00EE             else
00784f c019      	RJMP _0x2200B8
                 _0x2200B5:
                 ; 0011 00EF             {
                 ; 0011 00F0                 if(TIMER_checkTimerExceed(t))
007850 91a0 169d 	LDS  R26,_t_S0110004000
007852 91b0 169e 	LDS  R27,_t_S0110004000+1
007854 9180 169f 	LDS  R24,_t_S0110004000+2
007856 9190 16a0 	LDS  R25,_t_S0110004000+3
007858 940e 405d 	CALL _TIMER_checkTimerExceed
00785a 9730      	SBIW R30,0
00785b f069      	BREQ _0x2200B9
                 ; 0011 00F1                 {
                 ; 0011 00F2                     batteryAlarm   = batteryStatus;
00785c 91e0 147b 	LDS  R30,_batteryStatus
00785e 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 00F3 
                 ; 0011 00F4                     *code           = batteryStatus;
007860 91e0 147b 	LDS  R30,_batteryStatus
007862 940e ca7c 	CALL SUBOPT_0x253
                 ; 0011 00F5 
                 ; 0011 00F6                     t_flag          = 0;
007864 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00F7                     return 1;
007866 e0e1      	LDI  R30,LOW(1)
007867 e0f0      	LDI  R31,HIGH(1)
007868 c06a      	RJMP _0x20E005A
                 ; 0011 00F8                 }
                 ; 0011 00F9             }
                 _0x2200B9:
                 _0x2200B8:
                 ; 0011 00FA         }
                 ; 0011 00FB         else
007869 c003      	RJMP _0x2200BA
                 _0x2200B3:
                 ; 0011 00FC         {
                 ; 0011 00FD             t_flag = 0;
00786a e0e0      	LDI  R30,LOW(0)
00786b 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 00FE         }
                 _0x2200BA:
                 ; 0011 00FF     }
                 ; 0011 0100     else                                // -- battery alarm disable -- //
00786d c018      	RJMP _0x2200BB
                 _0x2200B2:
                 ; 0011 0101     {
                 ; 0011 0102         t           = 0;
00786e e0e0      	LDI  R30,LOW(0)
00786f 93e0 169d 	STS  _t_S0110004000,R30
007871 93e0 169e 	STS  _t_S0110004000+1,R30
007873 93e0 169f 	STS  _t_S0110004000+2,R30
007875 93e0 16a0 	STS  _t_S0110004000+3,R30
                 ; 0011 0103         t_flag      = 0;
007877 93e0 16a1 	STS  _t_flag_S0110004000,R30
                 ; 0011 0104         lastCheck   = 0x69;
007879 e6e9      	LDI  R30,LOW(105)
00787a 93e0 16a2 	STS  _lastCheck_S0110004000,R30
                 ; 0011 0105         if(batteryAlarm != BATT_NORMAL)
00787c 91e0 14a6 	LDS  R30,_batteryAlarm
00787e 30e0      	CPI  R30,0
00787f f031      	BREQ _0x2200BC
                 ; 0011 0106         {
                 ; 0011 0107             batteryAlarm    = BATT_NORMAL;
007880 e0e0      	LDI  R30,LOW(0)
007881 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 0108             *code           = BATT_NORMAL;
007883 940e ca8c 	CALL SUBOPT_0x255
                 ; 0011 0109             return 1;
007885 c04d      	RJMP _0x20E005A
                 ; 0011 010A         }
                 ; 0011 010B     }
                 _0x2200BC:
                 _0x2200BB:
                 ; 0011 010C 
                 ; 0011 010D     return 0;
007886 c04a      	RJMP _0x20E005B
                 ; 0011 010E }
                 ;/*============================================================*/
                 ;int checkSendMemoryAlarm(unsigned char *code)
                 ; 0011 0111 {
                 _checkSendMemoryAlarm:
                 ; 0011 0112     static TIMER    t      = 0;
                 ; 0011 0113     static char     t_flag = 0;
                 ; 0011 0114 
                 ; 0011 0115     if(env_config.memoryMin > 0)
007887 93ba      	ST   -Y,R27
007888 93aa      	ST   -Y,R26
                 ;	*code -> Y+0
007889 940e ca93 	CALL SUBOPT_0x256
00788b f580      	BRSH _0x2200BD
                 ; 0011 0116     {
                 ; 0011 0117         if(memoryStatus != memoryAlarm)
00788c 91e0 14a7 	LDS  R30,_memoryAlarm
00788e 91a0 1482 	LDS  R26,_memoryStatus
007890 17ea      	CP   R30,R26
007891 f131      	BREQ _0x2200BE
                 ; 0011 0118         {
                 ; 0011 0119             if(!t_flag){
007892 91e0 16a7 	LDS  R30,_t_flag_S0110005000
007894 30e0      	CPI  R30,0
007895 f441      	BRNE _0x2200BF
                 ; 0011 011A                 TIMER_setTimer(&t,15);
007896 eae3      	LDI  R30,LOW(_t_S0110005000)
007897 e1f6      	LDI  R31,HIGH(_t_S0110005000)
007898 940e bd46 	CALL SUBOPT_0x3B
                 ; 0011 011B                 t_flag          = 1;
00789a e0e1      	LDI  R30,LOW(1)
00789b 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 011C             }
                 ; 0011 011D             else{
00789d c019      	RJMP _0x2200C0
                 _0x2200BF:
                 ; 0011 011E                 if(TIMER_checkTimerExceed(t))
00789e 91a0 16a3 	LDS  R26,_t_S0110005000
0078a0 91b0 16a4 	LDS  R27,_t_S0110005000+1
0078a2 9180 16a5 	LDS  R24,_t_S0110005000+2
0078a4 9190 16a6 	LDS  R25,_t_S0110005000+3
0078a6 940e 405d 	CALL _TIMER_checkTimerExceed
0078a8 9730      	SBIW R30,0
0078a9 f069      	BREQ _0x2200C1
                 ; 0011 011F                 {
                 ; 0011 0120                     memoryAlarm     = memoryStatus;
0078aa 91e0 1482 	LDS  R30,_memoryStatus
0078ac 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0121 
                 ; 0011 0122                     *code           = memoryStatus;
0078ae 91e0 1482 	LDS  R30,_memoryStatus
0078b0 940e ca7c 	CALL SUBOPT_0x253
                 ; 0011 0123 
                 ; 0011 0124                     t_flag          = 0;
0078b2 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0125 
                 ; 0011 0126                     return 1;
0078b4 e0e1      	LDI  R30,LOW(1)
0078b5 e0f0      	LDI  R31,HIGH(1)
0078b6 c01c      	RJMP _0x20E005A
                 ; 0011 0127                 }
                 ; 0011 0128             }
                 _0x2200C1:
                 _0x2200C0:
                 ; 0011 0129         }
                 ; 0011 012A         else{
0078b7 c003      	RJMP _0x2200C2
                 _0x2200BE:
                 ; 0011 012B             t_flag              = 0;
0078b8 e0e0      	LDI  R30,LOW(0)
0078b9 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 012C         }
                 _0x2200C2:
                 ; 0011 012D     }
                 ; 0011 012E     else                                // -- battery alarm disable -- //
0078bb c015      	RJMP _0x2200C3
                 _0x2200BD:
                 ; 0011 012F     {
                 ; 0011 0130         t           = 0;
0078bc e0e0      	LDI  R30,LOW(0)
0078bd 93e0 16a3 	STS  _t_S0110005000,R30
0078bf 93e0 16a4 	STS  _t_S0110005000+1,R30
0078c1 93e0 16a5 	STS  _t_S0110005000+2,R30
0078c3 93e0 16a6 	STS  _t_S0110005000+3,R30
                 ; 0011 0131         t_flag      = 0;
0078c5 93e0 16a7 	STS  _t_flag_S0110005000,R30
                 ; 0011 0132         if(batteryAlarm != MEM_NORMAL)
0078c7 91e0 14a6 	LDS  R30,_batteryAlarm
0078c9 30e0      	CPI  R30,0
0078ca f031      	BREQ _0x2200C4
                 ; 0011 0133         {
                 ; 0011 0134             memoryAlarm     = MEM_NORMAL;
0078cb e0e0      	LDI  R30,LOW(0)
0078cc 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 0135             *code           = MEM_NORMAL;
0078ce 940e ca8c 	CALL SUBOPT_0x255
                 ; 0011 0136             return 1;
0078d0 c002      	RJMP _0x20E005A
                 ; 0011 0137         }
                 ; 0011 0138     }
                 _0x2200C4:
                 _0x2200C3:
                 ; 0011 0139 
                 ; 0011 013A     return 0;
                 _0x20E005B:
0078d1 e0e0      	LDI  R30,LOW(0)
0078d2 e0f0      	LDI  R31,HIGH(0)
                 _0x20E005A:
0078d3 9622      	ADIW R28,2
0078d4 9508      	RET
                 ; 0011 013B }
                 ;/*============================================================*/
                 ;int checkSendDinAlarm(int ch, unsigned char *code)
                 ; 0011 013E {
                 _checkSendDinAlarm:
                 ; 0011 013F     static TIMER    t[USE_DIN]         = {0,0};
                 ; 0011 0140     static char     t_flag[USE_DIN]    = {0,0};
                 ; 0011 0141     static char     lastCheck[USE_DIN] = {0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0142 
                 ; 0011 0143     if((ch < 0) || (ch >= USE_DIN)){
0078d5 940e c272 	CALL SUBOPT_0x10A
                 ;	ch -> Y+2
                 ;	*code -> Y+0
0078d7 f022      	BRMI _0x2200C7
0078d8 81aa      	LDD  R26,Y+2
0078d9 81bb      	LDD  R27,Y+2+1
0078da 9712      	SBIW R26,2
0078db f04c      	BRLT _0x2200C6
                 _0x2200C7:
                 ; 0011 0144         printDebug("<checkSendDinAlarm> channel out of range [%d]\r\n",ch);
                +
0078dc e9ed     +LDI R30 , LOW ( 2 * _0x220000 + ( 99 ) )
0078dd e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 99 ) )
0078de e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 99 ) )
0078df e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 99 ) )
                 	__POINTD1FN _0x220000,99
0078e0 940e c25e 	CALL SUBOPT_0x106
0078e2 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0011 0145         return 0;
0078e4 c105      	RJMP _0x20E0059
                 ; 0011 0146     }
                 ; 0011 0147 
                 ; 0011 0148     if(dinStatus[ch] != dinAlarm[ch])
                 _0x2200C6:
0078e5 940e ca9a 	CALL SUBOPT_0x257
0078e7 56ea      	SUBI R30,LOW(-_dinAlarm)
0078e8 4efb      	SBCI R31,HIGH(-_dinAlarm)
0078e9 81e0      	LD   R30,Z
0078ea 17ea      	CP   R30,R26
0078eb f411      	BRNE PC+3
0078ec 940c 792e 	JMP _0x2200C9
                 ; 0011 0149     {
                 ; 0011 014A         if(dinStatus[ch] != lastCheck[ch]){
0078ee 940e ca9a 	CALL SUBOPT_0x257
0078f0 54ee      	SUBI R30,LOW(-_lastCheck_S0110006000)
0078f1 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110006000)
0078f2 81e0      	LD   R30,Z
0078f3 17ea      	CP   R30,R26
0078f4 f051      	BREQ _0x2200CA
                 ; 0011 014B             t_flag[ch]          = 0;
0078f5 940e caa2 	CALL SUBOPT_0x258
0078f7 e0a0      	LDI  R26,LOW(0)
0078f8 83a0      	STD  Z+0,R26
                 ; 0011 014C             lastCheck[ch]       = dinStatus[ch];
0078f9 81aa      	LDD  R26,Y+2
0078fa 81bb      	LDD  R27,Y+2+1
0078fb 54ae      	SUBI R26,LOW(-_lastCheck_S0110006000)
0078fc 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110006000)
0078fd 940e caa7 	CALL SUBOPT_0x259
                 ; 0011 014D         }
                 ; 0011 014E 
                 ; 0011 014F         if(!t_flag[ch]){
                 _0x2200CA:
0078ff 940e caa2 	CALL SUBOPT_0x258
007901 81e0      	LD   R30,Z
007902 30e0      	CPI  R30,0
007903 f469      	BRNE _0x2200CB
                 ; 0011 0150             TIMER_setTimer(&t[ch],5);
007904 81ea      	LDD  R30,Y+2
007905 81fb      	LDD  R31,Y+2+1
007906 eaa8      	LDI  R26,LOW(_t_S0110006000)
007907 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007908 940e bc76 	CALL SUBOPT_0x1C
00790a 940e c87e 	CALL SUBOPT_0x207
                 ; 0011 0151             t_flag[ch]          = 1;
00790c 940e caa2 	CALL SUBOPT_0x258
00790e e0a1      	LDI  R26,LOW(1)
00790f 83a0      	STD  Z+0,R26
                 ; 0011 0152         }
                 ; 0011 0153         else{
007910 c01c      	RJMP _0x2200CC
                 _0x2200CB:
                 ; 0011 0154             if(TIMER_checkTimerExceed(t[ch]))
007911 81ea      	LDD  R30,Y+2
007912 81fb      	LDD  R31,Y+2+1
007913 eaa8      	LDI  R26,LOW(_t_S0110006000)
007914 e1b6      	LDI  R27,HIGH(_t_S0110006000)
007915 940e bc69 	CALL SUBOPT_0x1A
007917 940e bc70 	CALL SUBOPT_0x1B
007919 f099      	BREQ _0x2200CD
                 ; 0011 0155             {
                 ; 0011 0156                 dinAlarm[ch]    = dinStatus[ch];
00791a 81aa      	LDD  R26,Y+2
00791b 81bb      	LDD  R27,Y+2+1
00791c 56aa      	SUBI R26,LOW(-_dinAlarm)
00791d 4ebb      	SBCI R27,HIGH(-_dinAlarm)
00791e 940e caa7 	CALL SUBOPT_0x259
                 ; 0011 0157                 *code           = dinStatus[ch];
007920 81ea      	LDD  R30,Y+2
007921 81fb      	LDD  R31,Y+2+1
007922 58e4      	SUBI R30,LOW(-_dinStatus)
007923 4efb      	SBCI R31,HIGH(-_dinStatus)
007924 940e ca66 	CALL SUBOPT_0x24F
                 ; 0011 0158                 t_flag[ch]      = 0;
007926 940e caa2 	CALL SUBOPT_0x258
007928 e0a0      	LDI  R26,LOW(0)
007929 83a0      	STD  Z+0,R26
                 ; 0011 0159                 return 1;
00792a e0e1      	LDI  R30,LOW(1)
00792b e0f0      	LDI  R31,HIGH(1)
00792c c0bf      	RJMP _0x20E0058
                 ; 0011 015A             }
                 ; 0011 015B         }
                 _0x2200CD:
                 _0x2200CC:
                 ; 0011 015C     }
                 ; 0011 015D     else{
00792d c004      	RJMP _0x2200CE
                 _0x2200C9:
                 ; 0011 015E         t_flag[ch]              =   0;
00792e 940e caa2 	CALL SUBOPT_0x258
007930 e0a0      	LDI  R26,LOW(0)
007931 83a0      	STD  Z+0,R26
                 ; 0011 015F     }
                 _0x2200CE:
                 ; 0011 0160 
                 ; 0011 0161     return 0;
007932 c0b7      	RJMP _0x20E0059
                 ; 0011 0162 }
                 ;/*============================================================*/
                 ;int checkSendSensorAlarm(int ch, unsigned char *code)
                 ; 0011 0165 {
                 _checkSendSensorAlarm:
                 ; 0011 0166     static TIMER    t[MAX_SENS_CHANNEL]         = {0,0,0,0,0};
                 ; 0011 0167     static char     t_flag[MAX_SENS_CHANNEL]    = {0,0,0,0,0};
                 ; 0011 0168     static char     lastCheck[MAX_SENS_CHANNEL] = {0x69,0x69,0x69,0x69,0x69};   // -- initial with any unuse value -- //
                 
                 	.DSEG
                 
                 	.CSEG
                 ; 0011 0169 
                 ; 0011 016A     if(sensorStatus[ch] != sensorAlarm[ch])
007933 940e caae 	CALL SUBOPT_0x25A
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007935 59e1      	SUBI R30,LOW(-_sensorStatus)
007936 4efb      	SBCI R31,HIGH(-_sensorStatus)
007937 81a0      	LD   R26,Z
007938 81ea      	LDD  R30,Y+2
007939 81fb      	LDD  R31,Y+2+1
00793a 57e4      	SUBI R30,LOW(-_sensorAlarm)
00793b 4efb      	SBCI R31,HIGH(-_sensorAlarm)
00793c 81e0      	LD   R30,Z
00793d 17ea      	CP   R30,R26
00793e f411      	BRNE PC+3
00793f 940c 798e 	JMP _0x2200D0
                 ; 0011 016B     {
                 ; 0011 016C         if(sensorStatus[ch] != lastCheck[ch]){
007941 940e cab3 	CALL SUBOPT_0x25B
007943 81a0      	LD   R26,Z
007944 81ea      	LDD  R30,Y+2
007945 81fb      	LDD  R31,Y+2+1
007946 53e3      	SUBI R30,LOW(-_lastCheck_S0110007000)
007947 4ef9      	SBCI R31,HIGH(-_lastCheck_S0110007000)
007948 81e0      	LD   R30,Z
007949 17ea      	CP   R30,R26
00794a f061      	BREQ _0x2200D1
                 ; 0011 016D             t_flag[ch]          = 0;
00794b 940e cab8 	CALL SUBOPT_0x25C
00794d e0a0      	LDI  R26,LOW(0)
00794e 83a0      	STD  Z+0,R26
                 ; 0011 016E             lastCheck[ch]       = sensorStatus[ch];
00794f 81aa      	LDD  R26,Y+2
007950 81bb      	LDD  R27,Y+2+1
007951 53a3      	SUBI R26,LOW(-_lastCheck_S0110007000)
007952 4eb9      	SBCI R27,HIGH(-_lastCheck_S0110007000)
007953 940e cab3 	CALL SUBOPT_0x25B
007955 81e0      	LD   R30,Z
007956 93ec      	ST   X,R30
                 ; 0011 016F         }
                 ; 0011 0170 
                 ; 0011 0171         if(!t_flag[ch]){
                 _0x2200D1:
007957 940e cab8 	CALL SUBOPT_0x25C
007959 81e0      	LD   R30,Z
00795a 30e0      	CPI  R30,0
00795b f4a9      	BRNE _0x2200D2
                 ; 0011 0172             if(sensorStatus[ch] == SENS_ERR_UNKNOWN){
00795c 940e cab3 	CALL SUBOPT_0x25B
00795e 81a0      	LD   R26,Z
00795f 3faf      	CPI  R26,LOW(0xFF)
007960 f429      	BRNE _0x2200D3
                 ; 0011 0173                 TIMER_setTimer(&t[ch],30);
007961 940e cabd 	CALL SUBOPT_0x25D
007963 940e c4e3 	CALL SUBOPT_0x172
007965 c004      	RJMP _0x2200F4
                 ; 0011 0174             }
                 ; 0011 0175             else{
                 _0x2200D3:
                 ; 0011 0176                 TIMER_setTimer(&t[ch],3);
007966 940e cabd 	CALL SUBOPT_0x25D
007968 940e ca75 	CALL SUBOPT_0x252
                 _0x2200F4:
00796a 940e 4073 	CALL _TIMER_setTimer
                 ; 0011 0177             }
                 ; 0011 0178             t_flag[ch]          = 1;
00796c 940e cab8 	CALL SUBOPT_0x25C
00796e e0a1      	LDI  R26,LOW(1)
00796f 83a0      	STD  Z+0,R26
                 ; 0011 0179         }
                 ; 0011 017A         else{
007970 c01c      	RJMP _0x2200D5
                 _0x2200D2:
                 ; 0011 017B             if(TIMER_checkTimerExceed(t[ch]))
007971 81ea      	LDD  R30,Y+2
007972 81fb      	LDD  R31,Y+2+1
007973 eba4      	LDI  R26,LOW(_t_S0110007000)
007974 e1b6      	LDI  R27,HIGH(_t_S0110007000)
007975 940e bc69 	CALL SUBOPT_0x1A
007977 940e bc70 	CALL SUBOPT_0x1B
007979 f099      	BREQ _0x2200D6
                 ; 0011 017C             {
                 ; 0011 017D                 sensorAlarm[ch] = sensorStatus[ch];
00797a 81aa      	LDD  R26,Y+2
00797b 81bb      	LDD  R27,Y+2+1
00797c 57a4      	SUBI R26,LOW(-_sensorAlarm)
00797d 4ebb      	SBCI R27,HIGH(-_sensorAlarm)
00797e 940e cab3 	CALL SUBOPT_0x25B
007980 81e0      	LD   R30,Z
007981 93ec      	ST   X,R30
                 ; 0011 017E 
                 ; 0011 017F                 *code           = sensorStatus[ch];
007982 940e cab3 	CALL SUBOPT_0x25B
007984 940e ca66 	CALL SUBOPT_0x24F
                 ; 0011 0180 
                 ; 0011 0181                 t_flag[ch]      = 0;
007986 940e cab8 	CALL SUBOPT_0x25C
007988 e0a0      	LDI  R26,LOW(0)
007989 83a0      	STD  Z+0,R26
                 ; 0011 0182                 return 1;
00798a e0e1      	LDI  R30,LOW(1)
00798b e0f0      	LDI  R31,HIGH(1)
00798c c05f      	RJMP _0x20E0058
                 ; 0011 0183             }
                 ; 0011 0184         }
                 _0x2200D6:
                 _0x2200D5:
                 ; 0011 0185     }
                 ; 0011 0186     else{
00798d c004      	RJMP _0x2200D7
                 _0x2200D0:
                 ; 0011 0187         t_flag[ch]              =   0;
00798e 940e cab8 	CALL SUBOPT_0x25C
007990 e0a0      	LDI  R26,LOW(0)
007991 83a0      	STD  Z+0,R26
                 ; 0011 0188     }
                 _0x2200D7:
                 ; 0011 0189 
                 ; 0011 018A     return 0;
007992 c057      	RJMP _0x20E0059
                 ; 0011 018B 
                 ; 0011 018C     /*
                 ; 0011 018D     if(sensorStatus[ch] != sensorAlarm[ch])
                 ; 0011 018E     {
                 ; 0011 018F         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 0190 
                 ; 0011 0191         *code           = sensorStatus[ch];
                 ; 0011 0192 
                 ; 0011 0193         return 1;
                 ; 0011 0194     }
                 ; 0011 0195     */
                 ; 0011 0196 
                 ; 0011 0197     /*
                 ; 0011 0198     // -- mask for an error and compare with reported alarm -- //
                 ; 0011 0199     if((sensorStatus[ch] & SENS_ERR_LOWER_BOUND) != (sensorAlarm[ch] & SENS_ERR_LOWER_BOUND))
                 ; 0011 019A     {
                 ; 0011 019B         // -- check if it's an error or recover -- //
                 ; 0011 019C         if( (sensorStatus[ch] & SENS_ERR_LOWER_BOUND) == SENS_ERR_LOWER_BOUND )     // -- error -- //
                 ; 0011 019D         {
                 ; 0011 019E 
                 ; 0011 019F         }
                 ; 0011 01A0         else                                                                        // -- recover -- //
                 ; 0011 01A1         {
                 ; 0011 01A2 
                 ; 0011 01A3         }
                 ; 0011 01A4         sensorAlarm[ch] = sensorStatus[ch];
                 ; 0011 01A5 
                 ; 0011 01A6         *code           = sensorStatus[ch];
                 ; 0011 01A7 
                 ; 0011 01A8         return 1;
                 ; 0011 01A9     }
                 ; 0011 01AA 
                 ; 0011 01AB     return 0;
                 ; 0011 01AC     */
                 ; 0011 01AD }
                 ;/*============================================================*/
                 ;int checkSendDataAlarm(int ch, unsigned char *code)
                 ; 0011 01B0 {
                 _checkSendDataAlarm:
                 ; 0011 01B1     static TIMER    t[MAX_SENS_CHANNEL]      = {0,0,0,0,0};
                 ; 0011 01B2     static char     t_flag[MAX_SENS_CHANNEL] = {0,0,0,0,0};
                 ; 0011 01B3 
                 ; 0011 01B4     if(dataStatus[ch] != dataAlarm[ch])
007993 940e caae 	CALL SUBOPT_0x25A
                 ;	ch -> Y+2
                 ;	*code -> Y+0
007995 58ec      	SUBI R30,LOW(-_dataStatus)
007996 4efb      	SBCI R31,HIGH(-_dataStatus)
007997 81a0      	LD   R26,Z
007998 81ea      	LDD  R30,Y+2
007999 81fb      	LDD  R31,Y+2+1
00799a 56ef      	SUBI R30,LOW(-_dataAlarm)
00799b 4efb      	SBCI R31,HIGH(-_dataAlarm)
00799c 81e0      	LD   R30,Z
00799d 17ea      	CP   R30,R26
00799e f411      	BRNE PC+3
00799f 940c 79e6 	JMP _0x2200D8
                 ; 0011 01B5     {
                 ; 0011 01B6         if(!t_flag[ch]){
0079a1 940e cac3 	CALL SUBOPT_0x25E
0079a3 81e0      	LD   R30,Z
0079a4 30e0      	CPI  R30,0
0079a5 f479      	BRNE _0x2200D9
                 ; 0011 01B7             TIMER_setTimer(&t[ch],3);
0079a6 81ea      	LDD  R30,Y+2
0079a7 81fb      	LDD  R31,Y+2+1
0079a8 eda2      	LDI  R26,LOW(_t_S0110008000)
0079a9 e1b6      	LDI  R27,HIGH(_t_S0110008000)
0079aa 940e bc76 	CALL SUBOPT_0x1C
0079ac 940e ca75 	CALL SUBOPT_0x252
0079ae 940e 4073 	CALL _TIMER_setTimer
                 ; 0011 01B8             t_flag[ch]          = 1;
0079b0 940e cac3 	CALL SUBOPT_0x25E
0079b2 e0a1      	LDI  R26,LOW(1)
0079b3 83a0      	STD  Z+0,R26
                 ; 0011 01B9 //            printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X] != dataStatus[0x%02X]\r\n",ch+1,dataAlarm[ch],dataStatus[ch]);
                 ; 0011 01BA         }
                 ; 0011 01BB         else{
0079b4 c030      	RJMP _0x2200DA
                 _0x2200D9:
                 ; 0011 01BC             if(TIMER_checkTimerExceed(t[ch]))
0079b5 81ea      	LDD  R30,Y+2
0079b6 81fb      	LDD  R31,Y+2+1
0079b7 eda2      	LDI  R26,LOW(_t_S0110008000)
0079b8 e1b6      	LDI  R27,HIGH(_t_S0110008000)
0079b9 940e bc69 	CALL SUBOPT_0x1A
0079bb 940e bc70 	CALL SUBOPT_0x1B
0079bd f139      	BREQ _0x2200DB
                 ; 0011 01BD             {
                 ; 0011 01BE                 dataAlarm[ch]   = dataStatus[ch];
0079be 81aa      	LDD  R26,Y+2
0079bf 81bb      	LDD  R27,Y+2+1
0079c0 56af      	SUBI R26,LOW(-_dataAlarm)
0079c1 4ebb      	SBCI R27,HIGH(-_dataAlarm)
0079c2 81ea      	LDD  R30,Y+2
0079c3 81fb      	LDD  R31,Y+2+1
0079c4 58ec      	SUBI R30,LOW(-_dataStatus)
0079c5 4efb      	SBCI R31,HIGH(-_dataStatus)
0079c6 81e0      	LD   R30,Z
0079c7 93ec      	ST   X,R30
                 ; 0011 01BF 
                 ; 0011 01C0                 *code           = dataStatus[ch];
0079c8 81ea      	LDD  R30,Y+2
0079c9 81fb      	LDD  R31,Y+2+1
0079ca 58ec      	SUBI R30,LOW(-_dataStatus)
0079cb 4efb      	SBCI R31,HIGH(-_dataStatus)
0079cc 940e ca66 	CALL SUBOPT_0x24F
                 ; 0011 01C1 
                 ; 0011 01C2                 t_flag[ch]      = 0;
0079ce 940e cac3 	CALL SUBOPT_0x25E
0079d0 e0a0      	LDI  R26,LOW(0)
0079d1 83a0      	STD  Z+0,R26
                 ; 0011 01C3 
                 ; 0011 01C4                 printDebug("<checkSendDataAlarm> Probe %d dataAlarm[0x%02X]\r\n",ch+1,dataAlarm[ch]);
                +
0079d2 eced     +LDI R30 , LOW ( 2 * _0x220000 + ( 147 ) )
0079d3 e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 147 ) )
0079d4 e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 147 ) )
0079d5 e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 147 ) )
                 	__POINTD1FN _0x220000,147
0079d6 940e c25e 	CALL SUBOPT_0x106
0079d8 9631      	ADIW R30,1
0079d9 940e d919 	CALL __CWD1
0079db 940e c32d 	CALL SUBOPT_0x12A
0079dd 56ef      	SUBI R30,LOW(-_dataAlarm)
0079de 4efb      	SBCI R31,HIGH(-_dataAlarm)
0079df 81e0      	LD   R30,Z
0079e0 940e c8d9 	CALL SUBOPT_0x214
                 ; 0011 01C5 
                 ; 0011 01C6                 return 1;
0079e2 e0e1      	LDI  R30,LOW(1)
0079e3 e0f0      	LDI  R31,HIGH(1)
0079e4 c007      	RJMP _0x20E0058
                 ; 0011 01C7             }
                 ; 0011 01C8         }
                 _0x2200DB:
                 _0x2200DA:
                 ; 0011 01C9     }
                 ; 0011 01CA     else{
0079e5 c004      	RJMP _0x2200DC
                 _0x2200D8:
                 ; 0011 01CB         t_flag[ch]              = 0;
0079e6 940e cac3 	CALL SUBOPT_0x25E
0079e8 e0a0      	LDI  R26,LOW(0)
0079e9 83a0      	STD  Z+0,R26
                 ; 0011 01CC     }
                 _0x2200DC:
                 ; 0011 01CD 
                 ; 0011 01CE     return 0;
                 _0x20E0059:
0079ea e0e0      	LDI  R30,LOW(0)
0079eb e0f0      	LDI  R31,HIGH(0)
                 _0x20E0058:
0079ec 9624      	ADIW R28,4
0079ed 9508      	RET
                 ; 0011 01CF 
                 ; 0011 01D0     /*
                 ; 0011 01D1     if(dataStatus[ch] != dataAlarm[ch])
                 ; 0011 01D2     {
                 ; 0011 01D3         dataAlarm[ch]   = dataStatus[ch];
                 ; 0011 01D4 
                 ; 0011 01D5         *code           = dataStatus[ch];
                 ; 0011 01D6 
                 ; 0011 01D7         return 1;
                 ; 0011 01D8     }
                 ; 0011 01D9     */
                 ; 0011 01DA 
                 ; 0011 01DB }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Alarm Mute Management *********************/
                 ;/**************************************************************/
                 ;char muteMode   = 0;
                 ;TIMER muteAlarmExpired  = 0xFFFFFFFF;       // -- initial with maximum TIMER value -- //
                 
                 	.DSEG
                 ;/*============================================================*/
                 ;int ALARM_mute(unsigned long int period)
                 ; 0011 01E5 {
                 
                 	.CSEG
                 _ALARM_mute:
                 ; 0011 01E6     if(period == 0){
0079ee 940e bf46 	CALL SUBOPT_0x86
                 ;	period -> Y+0
0079f0 f431      	BRNE _0x2200DE
                 ; 0011 01E7         muteAlarmExpired    = 0xFFFFFFFF;
0079f1 940e bca6 	CALL SUBOPT_0x24
0079f3 940e bcab 	CALL SUBOPT_0x25
                 ; 0011 01E8         muteMode            = MUTE_PERMAMENT;
0079f5 e0e1      	LDI  R30,LOW(1)
0079f6 c009      	RJMP _0x2200F5
                 ; 0011 01E9     }
                 ; 0011 01EA     else{
                 _0x2200DE:
                 ; 0011 01EB         TIMER_setTimer(&muteAlarmExpired,period);
0079f7 e8e7      	LDI  R30,LOW(_muteAlarmExpired)
0079f8 e1f4      	LDI  R31,HIGH(_muteAlarmExpired)
0079f9 93fa      	ST   -Y,R31
0079fa 93ea      	ST   -Y,R30
0079fb 940e c07c 	CALL SUBOPT_0xB6
0079fd 940e 4073 	CALL _TIMER_setTimer
                 ; 0011 01EC         muteMode            = MUTE_TEMPORARY;
0079ff e0e2      	LDI  R30,LOW(2)
                 _0x2200F5:
007a00 93e0 148b 	STS  _muteMode,R30
                 ; 0011 01ED     }
                 ; 0011 01EE 
                 ; 0011 01EF     return 0;
007a02 e0e0      	LDI  R30,LOW(0)
007a03 e0f0      	LDI  R31,HIGH(0)
007a04 940c 7e9e 	JMP  _0x20E004B
                 ; 0011 01F0 }
                 ;/*============================================================*/
                 ;int ALARM_checkMuteExpired(void)
                 ; 0011 01F3 {
                 _ALARM_checkMuteExpired:
                 ; 0011 01F4     switch(muteMode){
007a06 91e0 148b 	LDS  R30,_muteMode
007a08 940e c88b 	CALL SUBOPT_0x209
                 ; 0011 01F5         case MUTE_PERMAMENT :   return 0;
007a0a f0f1      	BREQ _0x20E0056
                 ; 0011 01F6                                 break;
                 ; 0011 01F7         case MUTE_TEMPORARY :   if( TIMER_checkTimerExceed(muteAlarmExpired) ){
007a0b 30e2      	CPI  R30,LOW(0x2)
007a0c e0a0      	LDI  R26,HIGH(0x2)
007a0d 07fa      	CPC  R31,R26
007a0e f469      	BRNE _0x2200E7
007a0f 91a0 1487 	LDS  R26,_muteAlarmExpired
007a11 91b0 1488 	LDS  R27,_muteAlarmExpired+1
007a13 9180 1489 	LDS  R24,_muteAlarmExpired+2
007a15 9190 148a 	LDS  R25,_muteAlarmExpired+3
007a17 940e 405d 	CALL _TIMER_checkTimerExceed
007a19 9730      	SBIW R30,0
007a1a f459      	BRNE _0x20E0057
                 ; 0011 01F8                                     return 1;
                 ; 0011 01F9                                 }
                 ; 0011 01FA                                 else{
                 ; 0011 01FB                                     return 0;
007a1b c00d      	RJMP _0x20E0056
                 ; 0011 01FC                                 }
                 ; 0011 01FD                                 break;
                 ; 0011 01FE         default :               printDebug("<ALARM_checkMuteExpired> invalid muteMode (%d)\r\n", muteMode);
                 _0x2200E7:
                +
007a1c efef     +LDI R30 , LOW ( 2 * _0x220000 + ( 197 ) )
007a1d e4fa     +LDI R31 , HIGH ( 2 * _0x220000 + ( 197 ) )
007a1e e060     +LDI R22 , BYTE3 ( 2 * _0x220000 + ( 197 ) )
007a1f e070     +LDI R23 , BYTE4 ( 2 * _0x220000 + ( 197 ) )
                 	__POINTD1FN _0x220000,197
007a20 940e da29 	CALL __PUTPARD1
007a22 91e0 148b 	LDS  R30,_muteMode
007a24 940e bccc 	CALL SUBOPT_0x29
                 ; 0011 01FF                                 return 1;
                 _0x20E0057:
007a26 e0e1      	LDI  R30,LOW(1)
007a27 e0f0      	LDI  R31,HIGH(1)
007a28 9508      	RET
                 ; 0011 0200     }
                 ; 0011 0201     return 0;
                 _0x20E0056:
007a29 e0e0      	LDI  R30,LOW(0)
007a2a e0f0      	LDI  R31,HIGH(0)
007a2b 9508      	RET
                 ; 0011 0202 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Sevice Alarm Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void resetAlarm(void)
                 ; 0011 020A {
                 _resetAlarm:
                 ; 0011 020B     int i;
                 ; 0011 020C 
                 ; 0011 020D     for(i=0;i<MAX_SENS_CHANNEL;i++){
007a2c 940e bfe8 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x2200E9:
                +
007a2e 3005     +CPI R16 , LOW ( 5 )
007a2f e0e0     +LDI R30 , HIGH ( 5 )
007a30 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007a31 f45c      	BRGE _0x2200EA
                 ; 0011 020E         sensorAlarm[i]      =   SENS_NORMAL;
007a32 e8ac      	LDI  R26,LOW(_sensorAlarm)
007a33 e1b4      	LDI  R27,HIGH(_sensorAlarm)
007a34 940e c3ec 	CALL SUBOPT_0x14E
                 ; 0011 020F         dataAlarm[i]        =   DATA_NORMAL;
007a36 e9a1      	LDI  R26,LOW(_dataAlarm)
007a37 e1b4      	LDI  R27,HIGH(_dataAlarm)
007a38 940e c3ec 	CALL SUBOPT_0x14E
                 ; 0011 0210     }
                +
007a3a 5f0f     +SUBI R16 , LOW ( - 1 )
007a3b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007a3c cff1      	RJMP _0x2200E9
                 _0x2200EA:
                 ; 0011 0211     for(i=0;i<MAX_DI_CHANNEL;i++){
                +
007a3d e000     +LDI R16 , LOW ( 0 )
007a3e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EC:
                +
007a3f 3100     +CPI R16 , LOW ( 16 )
007a40 e0e0     +LDI R30 , HIGH ( 16 )
007a41 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007a42 f44c      	BRGE _0x2200ED
                 ; 0011 0212         dinAlarm[i]         =   UNKNOWN;
007a43 e9a6      	LDI  R26,LOW(_dinAlarm)
007a44 e1b4      	LDI  R27,HIGH(_dinAlarm)
007a45 0fa0      	ADD  R26,R16
007a46 1fb1      	ADC  R27,R17
007a47 efef      	LDI  R30,LOW(255)
007a48 93ec      	ST   X,R30
                 ; 0011 0213     }
                +
007a49 5f0f     +SUBI R16 , LOW ( - 1 )
007a4a 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007a4b cff3      	RJMP _0x2200EC
                 _0x2200ED:
                 ; 0011 0214     for(i=0;i<MAX_AI_CHANNEL;i++){
                +
007a4c e000     +LDI R16 , LOW ( 0 )
007a4d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2200EF:
                +
007a4e 3100     +CPI R16 , LOW ( 16 )
007a4f e0e0     +LDI R30 , HIGH ( 16 )
007a50 071e     +CPC R17 , R30
                 	__CPWRN 16,17,16
007a51 f44c      	BRGE _0x2200F0
                 ; 0011 0215         ainAlarm[i]         =   UNKNOWN;
007a52 e8a2      	LDI  R26,LOW(_ainAlarm)
007a53 e1b6      	LDI  R27,HIGH(_ainAlarm)
007a54 0fa0      	ADD  R26,R16
007a55 1fb1      	ADC  R27,R17
007a56 efef      	LDI  R30,LOW(255)
007a57 93ec      	ST   X,R30
                 ; 0011 0216     }
                +
007a58 5f0f     +SUBI R16 , LOW ( - 1 )
007a59 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007a5a cff3      	RJMP _0x2200EF
                 _0x2200F0:
                 ; 0011 0217     muteAlarm                       = UNKNOWN;
007a5b efef      	LDI  R30,LOW(255)
007a5c 2e6e      	MOV  R6,R30
                 ; 0011 0218     mtncAlarm                       = MTNC_NORMAL;
007a5d e0e0      	LDI  R30,LOW(0)
007a5e 93e0 1692 	STS  _mtncAlarm,R30
                 ; 0011 0219     powerSrcAlarm                   = PWR_NORMAL;
007a60 93e0 1693 	STS  _powerSrcAlarm,R30
                 ; 0011 021A     batteryAlarm                    = BATT_NORMAL;
007a62 93e0 14a6 	STS  _batteryAlarm,R30
                 ; 0011 021B     communicationAlarm              = COMM_NORMAL;
007a64 93e0 1694 	STS  _communicationAlarm,R30
                 ; 0011 021C     memoryAlarm                     = MEM_NORMAL;
007a66 93e0 14a7 	STS  _memoryAlarm,R30
                 ; 0011 021D     gsmAlarm                        = GSM_NORMAL;
007a68 93e0 1695 	STS  _gsmAlarm,R30
                 ; 0011 021E     gsmBalanceAlarm                 = GBAL_NORMAL;
007a6a 93e0 1696 	STS  _gsmBalanceAlarm,R30
                 ; 0011 021F 
                 ; 0011 0220 }
007a6c 940c 7ef0 	JMP  _0x20E0049
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <delay.h>
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "status.h"
                 ;#include "alarm.h"
                 ;#include "sensor.h"
                 ;#include "config.h"
                 ;#include "timer.h"
                 ;#include "debug.h"
                 ;
                 ;/**************************************************************/
                 ;/***************** OLED Service Page Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_showDateTime(int timezone)
                 ; 0012 0013 {
                 
                 	.CSEG
                 _OLED_showDateTime:
                 ; 0012 0014     struct  rtc_structure   currentTime;
                 ; 0012 0015 
                 ; 0012 0016     RTC_getDateTime(&currentTime,timezone);
007a6e 93ba      	ST   -Y,R27
007a6f 93aa      	ST   -Y,R26
007a70 976a      	SBIW R28,26
                 ;	timezone -> Y+26
                 ;	currentTime -> Y+0
007a71 940e bbf5 	CALL SUBOPT_0x9
007a73 8dac      	LDD  R26,Y+28
007a74 8dbd      	LDD  R27,Y+28+1
007a75 940e 4700 	CALL _RTC_getDateTime
                 ; 0012 0017     printOLED("DT%02d-%02d-%04d",currentTime.date,currentTime.month,currentTime.year);
                +
007a77 e3e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 0 ) )
007a78 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 0 ) )
007a79 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 0 ) )
007a7a e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 0 ) )
                 	__POINTD1FN _0x240000,0
007a7b 940e bf6f 	CALL SUBOPT_0x8D
007a7d 940e bf6f 	CALL SUBOPT_0x8D
007a7f 940e bf6f 	CALL SUBOPT_0x8D
007a81 940e da29 	CALL __PUTPARD1
007a83 e08c      	LDI  R24,12
007a84 d1de      	RCALL _printOLED
007a85 9660      	ADIW R28,16
                 ; 0012 0018     printOLED("TM%02d:%02d",currentTime.hour,currentTime.min);
                +
007a86 e4e1     +LDI R30 , LOW ( 2 * _0x240000 + ( 17 ) )
007a87 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 17 ) )
007a88 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 17 ) )
007a89 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 17 ) )
                 	__POINTD1FN _0x240000,17
007a8a 940e be28 	CALL SUBOPT_0x5B
007a8c 940e c1f8 	CALL SUBOPT_0xF5
007a8e 940e cac8 	CALL SUBOPT_0x25F
                 ; 0012 0019 
                 ; 0012 001A }
007a90 966c      	ADIW R28,28
007a91 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showSensorValue(void)
                 ; 0012 001D {
                 _OLED_showSensorValue:
                 ; 0012 001E     int i;
                 ; 0012 001F 
                 ; 0012 0020     for(i=0;i<MAX_SENS_CHANNEL;i++)
007a92 940e bfe8 	CALL SUBOPT_0x9C
                 ;	i -> R16,R17
                 _0x240004:
                +
007a94 3005     +CPI R16 , LOW ( 5 )
007a95 e0e0     +LDI R30 , HIGH ( 5 )
007a96 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007a97 f014      	BRLT PC+3
007a98 940c 7b0f 	JMP _0x240005
                 ; 0012 0021     {
                 ; 0012 0022 
                 ; 0012 0023         if( operating_config.sensorEnable[i] ){
007a9a 940e ca41 	CALL SUBOPT_0x24B
007a9c f411      	BRNE PC+3
007a9d 940c 7b04 	JMP _0x240006
                 ; 0012 0024 
                 ; 0012 0025             switch (sensor[i].status)
007a9f 940e cacd 	CALL SUBOPT_0x260
                +
007aa1 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007aa2 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007aa3 81e0      	LD   R30,Z
007aa4 940e bcd7 	CALL SUBOPT_0x2B
                 ; 0012 0026             {
                 ; 0012 0027                 case SENS_NORMAL            :   printOLED("DV%1d%.1f",i+1,sensor[i].value);
007aa6 f469      	BRNE _0x24000A
                +
007aa7 e4ed     +LDI R30 , LOW ( 2 * _0x240000 + ( 29 ) )
007aa8 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 29 ) )
007aa9 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 29 ) )
007aaa e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 29 ) )
                 	__POINTD1FN _0x240000,29
007aab 940e cad3 	CALL SUBOPT_0x261
007aad 940e cacd 	CALL SUBOPT_0x260
007aaf 940e bc84 	CALL SUBOPT_0x1F
007ab1 940e cad7 	CALL SUBOPT_0x262
                 ; 0012 0028                                                 break;
007ab3 c04f      	RJMP _0x240009
                 ; 0012 0029                 case SENS_ERR_LOWER_BOUND   :   printOLED("DV%1dERRLB",i+1);
                 _0x24000A:
007ab4 38e1      	CPI  R30,LOW(0x81)
007ab5 e0a0      	LDI  R26,HIGH(0x81)
007ab6 07fa      	CPC  R31,R26
007ab7 f449      	BRNE _0x24000B
                +
007ab8 e5e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 39 ) )
007ab9 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 39 ) )
007aba e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 39 ) )
007abb e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 39 ) )
                 	__POINTD1FN _0x240000,39
007abc 940e cad3 	CALL SUBOPT_0x261
007abe 940e cada 	CALL SUBOPT_0x263
                 ; 0012 002A                                                 break;
007ac0 c042      	RJMP _0x240009
                 ; 0012 002B                 case SENS_ERR_UPPER_BOUND   :   printOLED("DV%1dERRUB",i+1);
                 _0x24000B:
007ac1 38e2      	CPI  R30,LOW(0x82)
007ac2 e0a0      	LDI  R26,HIGH(0x82)
007ac3 07fa      	CPC  R31,R26
007ac4 f449      	BRNE _0x24000C
                +
007ac5 e6e2     +LDI R30 , LOW ( 2 * _0x240000 + ( 50 ) )
007ac6 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 50 ) )
007ac7 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 50 ) )
007ac8 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 50 ) )
                 	__POINTD1FN _0x240000,50
007ac9 940e cad3 	CALL SUBOPT_0x261
007acb 940e cada 	CALL SUBOPT_0x263
                 ; 0012 002C                                                 break;
007acd c035      	RJMP _0x240009
                 ; 0012 002D                 case SENS_ERR_DISCONNECT    :   printOLED("DV%1dERRNC",i+1);
                 _0x24000C:
007ace 38e4      	CPI  R30,LOW(0x84)
007acf e0a0      	LDI  R26,HIGH(0x84)
007ad0 07fa      	CPC  R31,R26
007ad1 f449      	BRNE _0x24000D
                +
007ad2 e6ed     +LDI R30 , LOW ( 2 * _0x240000 + ( 61 ) )
007ad3 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 61 ) )
007ad4 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 61 ) )
007ad5 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 61 ) )
                 	__POINTD1FN _0x240000,61
007ad6 940e cad3 	CALL SUBOPT_0x261
007ad8 940e cada 	CALL SUBOPT_0x263
                 ; 0012 002E                                                 break;
007ada c028      	RJMP _0x240009
                 ; 0012 002F                 case SENS_ERR_SHORT         :   printOLED("DV%1dERRSH",i+1);
                 _0x24000D:
007adb 39e0      	CPI  R30,LOW(0x90)
007adc e0a0      	LDI  R26,HIGH(0x90)
007add 07fa      	CPC  R31,R26
007ade f449      	BRNE _0x24000E
                +
007adf e7e8     +LDI R30 , LOW ( 2 * _0x240000 + ( 72 ) )
007ae0 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 72 ) )
007ae1 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 72 ) )
007ae2 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 72 ) )
                 	__POINTD1FN _0x240000,72
007ae3 940e cad3 	CALL SUBOPT_0x261
007ae5 940e cada 	CALL SUBOPT_0x263
                 ; 0012 0030                                                 break;
007ae7 c01b      	RJMP _0x240009
                 ; 0012 0031                 case SENS_ERR_UNKNOWN       :   printOLED("DV%1dDETECTING",i+1);
                 _0x24000E:
007ae8 3fef      	CPI  R30,LOW(0xFF)
007ae9 e0a0      	LDI  R26,HIGH(0xFF)
007aea 07fa      	CPC  R31,R26
007aeb f449      	BRNE _0x240010
                +
007aec e8e3     +LDI R30 , LOW ( 2 * _0x240000 + ( 83 ) )
007aed e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 83 ) )
007aee e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 83 ) )
007aef e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 83 ) )
                 	__POINTD1FN _0x240000,83
007af0 940e cad3 	CALL SUBOPT_0x261
007af2 940e cada 	CALL SUBOPT_0x263
                 ; 0012 0032                                                 break;
007af4 c00e      	RJMP _0x240009
                 ; 0012 0033                 default                     :   printDebug("<OLED_showSensorValue> sensor[%d].status unknown [0x%02X]\r\n",i+1,sensor[i].status);
                 _0x240010:
                +
007af5 e9e2     +LDI R30 , LOW ( 2 * _0x240000 + ( 98 ) )
007af6 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 98 ) )
007af7 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 98 ) )
007af8 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 98 ) )
                 	__POINTD1FN _0x240000,98
007af9 940e cad3 	CALL SUBOPT_0x261
007afb 940e cacd 	CALL SUBOPT_0x260
                +
007afd 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
007afe 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
007aff 81e0      	LD   R30,Z
007b00 940e c8d9 	CALL SUBOPT_0x214
                 ; 0012 0034                                                 return;
007b02 c3ed      	RJMP _0x20E0049
                 ; 0012 0035             }
                 _0x240009:
                 ; 0012 0036         }
                 ; 0012 0037         else{
007b03 c008      	RJMP _0x240011
                 _0x240006:
                 ; 0012 0038             printOLED("DV%1dN/A",i+1);
                +
007b04 ecee     +LDI R30 , LOW ( 2 * _0x240000 + ( 158 ) )
007b05 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 158 ) )
007b06 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 158 ) )
007b07 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 158 ) )
                 	__POINTD1FN _0x240000,158
007b08 940e cad3 	CALL SUBOPT_0x261
007b0a 940e cada 	CALL SUBOPT_0x263
                 ; 0012 0039         }
                 _0x240011:
                 ; 0012 003A     }
                +
007b0c 5f0f     +SUBI R16 , LOW ( - 1 )
007b0d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007b0e cf85      	RJMP _0x240004
                 _0x240005:
                 ; 0012 003B 
                 ; 0012 003C     return;
007b0f c3e0      	RJMP _0x20E0049
                 ; 0012 003D 
                 ; 0012 003E }
                 ;/*============================================================*/
                 ;void OLED_showPowerStatus(char pwrSrc,float batLevel)
                 ; 0012 0041 {
                 _OLED_showPowerStatus:
                 ; 0012 0042 
                 ; 0012 0043     if(pwrSrc == PWR_NORMAL){
007b10 940e da2e 	CALL __PUTPARD2
                 ;	pwrSrc -> Y+4
                 ;	batLevel -> Y+0
007b12 81ec      	LDD  R30,Y+4
007b13 30e0      	CPI  R30,0
007b14 f429      	BRNE _0x240012
                 ; 0012 0044         printOLED("CG1");
                +
007b15 ede7     +LDI R30 , LOW ( 2 * _0x240000 + ( 167 ) )
007b16 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 167 ) )
007b17 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 167 ) )
007b18 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 167 ) )
                 	__POINTD1FN _0x240000,167
007b19 c033      	RJMP _0x240056
                 ; 0012 0045     }
                 ; 0012 0046     else{
                 _0x240012:
                 ; 0012 0047         //printDebug("<OLED_showPowerStatus> batt = %f\r\n",batLevel);
                 ; 0012 0048         if(batLevel < 3.0){
007b1a 940e cadf 	CALL SUBOPT_0x264
007b1c f428      	BRSH _0x240014
                 ; 0012 0049             printOLED("BL0");
                +
007b1d edeb     +LDI R30 , LOW ( 2 * _0x240000 + ( 171 ) )
007b1e e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 171 ) )
007b1f e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 171 ) )
007b20 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 171 ) )
                 	__POINTD1FN _0x240000,171
007b21 c02b      	RJMP _0x240056
                 ; 0012 004A         }
                 ; 0012 004B         else if((batLevel >= 3.0) && (batLevel < 3.3)){
                 _0x240014:
007b22 940e cadf 	CALL SUBOPT_0x264
007b24 f018      	BRLO _0x240017
007b25 940e cae8 	CALL SUBOPT_0x265
007b27 f008      	BRLO _0x240018
                 _0x240017:
007b28 c005      	RJMP _0x240016
                 _0x240018:
                 ; 0012 004C             printOLED("BL1");
                +
007b29 edef     +LDI R30 , LOW ( 2 * _0x240000 + ( 175 ) )
007b2a e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 175 ) )
007b2b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 175 ) )
007b2c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 175 ) )
                 	__POINTD1FN _0x240000,175
007b2d c01f      	RJMP _0x240056
                 ; 0012 004D         }
                 ; 0012 004E         else if((batLevel >= 3.3) && (batLevel < 3.7)){
                 _0x240016:
007b2e 940e cae8 	CALL SUBOPT_0x265
007b30 f018      	BRLO _0x24001B
007b31 940e caf1 	CALL SUBOPT_0x266
007b33 f008      	BRLO _0x24001C
                 _0x24001B:
007b34 c005      	RJMP _0x24001A
                 _0x24001C:
                 ; 0012 004F             printOLED("BL2");
                +
007b35 eee3     +LDI R30 , LOW ( 2 * _0x240000 + ( 179 ) )
007b36 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 179 ) )
007b37 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 179 ) )
007b38 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 179 ) )
                 	__POINTD1FN _0x240000,179
007b39 c013      	RJMP _0x240056
                 ; 0012 0050         }
                 ; 0012 0051         else if((batLevel >= 3.7) && (batLevel < 4.0)){
                 _0x24001A:
007b3a 940e caf1 	CALL SUBOPT_0x266
007b3c f018      	BRLO _0x24001F
007b3d 940e cafa 	CALL SUBOPT_0x267
007b3f f008      	BRLO _0x240020
                 _0x24001F:
007b40 c005      	RJMP _0x24001E
                 _0x240020:
                 ; 0012 0052             printOLED("BL3");
                +
007b41 eee7     +LDI R30 , LOW ( 2 * _0x240000 + ( 183 ) )
007b42 e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 183 ) )
007b43 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 183 ) )
007b44 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 183 ) )
                 	__POINTD1FN _0x240000,183
007b45 c007      	RJMP _0x240056
                 ; 0012 0053         }
                 ; 0012 0054         else if(batLevel >= 4.0){
                 _0x24001E:
007b46 940e cafa 	CALL SUBOPT_0x267
007b48 f040      	BRLO _0x240022
                 ; 0012 0055             printOLED("BL4");
                +
007b49 eeeb     +LDI R30 , LOW ( 2 * _0x240000 + ( 187 ) )
007b4a e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 187 ) )
007b4b e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 187 ) )
007b4c e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 187 ) )
                 	__POINTD1FN _0x240000,187
                 _0x240056:
007b4d 940e da29 	CALL __PUTPARD1
007b4f 940e cb03 	CALL SUBOPT_0x268
                 ; 0012 0056         }
                 ; 0012 0057     }
                 _0x240022:
                 ; 0012 0058 }
                 _0x20E0055:
007b51 9625      	ADIW R28,5
007b52 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showInputStatus(int ch,char state)
                 ; 0012 005B {
                 _OLED_showInputStatus:
                 ; 0012 005C     if((ch < 0) || (ch >= 8)){
007b53 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007b54 81aa      	LDD  R26,Y+2
007b55 23aa      	TST  R26
007b56 f022      	BRMI _0x240024
007b57 81a9      	LDD  R26,Y+1
007b58 81ba      	LDD  R27,Y+1+1
007b59 9718      	SBIW R26,8
007b5a f03c      	BRLT _0x240023
                 _0x240024:
                 ; 0012 005D         printDebug("<OLED_showInputStatus> ERR: ch value out of range.!!\r\n");
                +
007b5b eeef     +LDI R30 , LOW ( 2 * _0x240000 + ( 191 ) )
007b5c e4fb     +LDI R31 , HIGH ( 2 * _0x240000 + ( 191 ) )
007b5d e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 191 ) )
007b5e e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 191 ) )
                 	__POINTD1FN _0x240000,191
007b5f 940e bbba 	CALL SUBOPT_0x3
                 ; 0012 005E         return;
007b61 c045      	RJMP _0x20E0053
                 ; 0012 005F     }
                 ; 0012 0060 
                 ; 0012 0061     if(din_config[ch].channelEnable != 0x01){
                 _0x240023:
007b62 81a9      	LDD  R26,Y+1
007b63 81ba      	LDD  R27,Y+1+1
007b64 e0e3      	LDI  R30,LOW(3)
007b65 940e d95a 	CALL __MULB1W2U
007b67 5be1      	SUBI R30,LOW(-_din_config)
007b68 4efd      	SBCI R31,HIGH(-_din_config)
007b69 81a0      	LD   R26,Z
007b6a 30a1      	CPI  R26,LOW(0x1)
007b6b f5d9      	BRNE _0x20E0053
                 ; 0012 0062         return;
                 ; 0012 0063     }
                 ; 0012 0064 
                 ; 0012 0065     if((state != DIN_FALLING) && (state != DIN_RISING)){
007b6c 81a8      	LD   R26,Y
007b6d 30a0      	CPI  R26,LOW(0x0)
007b6e f011      	BREQ _0x240028
007b6f 30a1      	CPI  R26,LOW(0x1)
007b70 f409      	BRNE _0x240029
                 _0x240028:
007b71 c001      	RJMP _0x240027
                 _0x240029:
                 ; 0012 0066         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 0067         return;
007b72 c034      	RJMP _0x20E0053
                 ; 0012 0068     }
                 ; 0012 0069 
                 ; 0012 006A     printOLED("IP%1d%1d",ch,state);
                 _0x240027:
                +
007b73 e2e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 246 ) )
007b74 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 246 ) )
007b75 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 246 ) )
007b76 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 246 ) )
                 	__POINTD1FN _0x240000,246
007b77 c024      	RJMP _0x20E0054
                 ; 0012 006B }
                 ;/*============================================================*/
                 ;void OLED_showOutputStatus(int ch,char state)
                 ; 0012 006E {
                 _OLED_showOutputStatus:
                 ; 0012 006F     if((ch < 0) || (ch >= 8)){
007b78 93aa      	ST   -Y,R26
                 ;	ch -> Y+1
                 ;	state -> Y+0
007b79 81aa      	LDD  R26,Y+2
007b7a 23aa      	TST  R26
007b7b f022      	BRMI _0x24002B
007b7c 81a9      	LDD  R26,Y+1
007b7d 81ba      	LDD  R27,Y+1+1
007b7e 9718      	SBIW R26,8
007b7f f03c      	BRLT _0x24002A
                 _0x24002B:
                 ; 0012 0070         printDebug("<OLED_showOutputStatus> ERR: ch value out of range.!!\r\n");
                +
007b80 e2ef     +LDI R30 , LOW ( 2 * _0x240000 + ( 255 ) )
007b81 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 255 ) )
007b82 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 255 ) )
007b83 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 255 ) )
                 	__POINTD1FN _0x240000,255
007b84 940e bbba 	CALL SUBOPT_0x3
                 ; 0012 0071         return;
007b86 c020      	RJMP _0x20E0053
                 ; 0012 0072     }
                 ; 0012 0073 
                 ; 0012 0074     if(dout_config[ch].channelEnable != 0x01){
                 _0x24002A:
007b87 81a9      	LDD  R26,Y+1
007b88 81ba      	LDD  R27,Y+1+1
007b89 e2e6      	LDI  R30,LOW(38)
007b8a 940e d95a 	CALL __MULB1W2U
007b8c 58e1      	SUBI R30,LOW(-_dout_config)
007b8d 4efd      	SBCI R31,HIGH(-_dout_config)
007b8e 81a0      	LD   R26,Z
007b8f 30a1      	CPI  R26,LOW(0x1)
007b90 f4b1      	BRNE _0x20E0053
                 ; 0012 0075         return;
                 ; 0012 0076     }
                 ; 0012 0077 
                 ; 0012 0078     if((state != LOW) && (state != HIGH)){
007b91 81a8      	LD   R26,Y
007b92 30a0      	CPI  R26,LOW(0x0)
007b93 f011      	BREQ _0x24002F
007b94 30a1      	CPI  R26,LOW(0x1)
007b95 f409      	BRNE _0x240030
                 _0x24002F:
007b96 c001      	RJMP _0x24002E
                 _0x240030:
                 ; 0012 0079         //printDebug("<OLED_showInputStatus> ERR: state invalid [0x%02X]!!\r\n",state);
                 ; 0012 007A         return;
007b97 c00f      	RJMP _0x20E0053
                 ; 0012 007B     }
                 ; 0012 007C 
                 ; 0012 007D     printOLED("OP%1d%1d",ch,state);
                 _0x24002E:
                +
007b98 e6e7     +LDI R30 , LOW ( 2 * _0x240000 + ( 311 ) )
007b99 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 311 ) )
007b9a e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 311 ) )
007b9b e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 311 ) )
                 	__POINTD1FN _0x240000,311
                 _0x20E0054:
007b9c 940e da29 	CALL __PUTPARD1
007b9e 81ed      	LDD  R30,Y+5
007b9f 81fe      	LDD  R31,Y+5+1
007ba0 940e cb08 	CALL SUBOPT_0x269
007ba2 85e8      	LDD  R30,Y+8
007ba3 940e be67 	CALL SUBOPT_0x65
007ba5 940e cac8 	CALL SUBOPT_0x25F
                 ; 0012 007E }
                 _0x20E0053:
007ba7 9623      	ADIW R28,3
007ba8 9508      	RET
                 ;/*============================================================*/
                 ;void OLED_showServerCommStatus(char state)
                 ; 0012 0081 {
                 _OLED_showServerCommStatus:
                 ; 0012 0082     printOLED("SC%1d",state);
007ba9 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007baa e7e0     +LDI R30 , LOW ( 2 * _0x240000 + ( 320 ) )
007bab e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 320 ) )
007bac e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 320 ) )
007bad e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 320 ) )
                 	__POINTD1FN _0x240000,320
007bae 940e cb0d 	CALL SUBOPT_0x26A
007bb0 940e cada 	CALL SUBOPT_0x263
                 ; 0012 0083 }
007bb2 c12e      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showLanStatus(char state)
                 ; 0012 0086 {
                 _OLED_showLanStatus:
                 ; 0012 0087     printOLED("LC%1d",state);
007bb3 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007bb4 e7e6     +LDI R30 , LOW ( 2 * _0x240000 + ( 326 ) )
007bb5 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 326 ) )
007bb6 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 326 ) )
007bb7 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 326 ) )
                 	__POINTD1FN _0x240000,326
007bb8 940e cb0d 	CALL SUBOPT_0x26A
007bba 940e cada 	CALL SUBOPT_0x263
                 ; 0012 0088 }
007bbc c124      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showBuzzerStatus(char state)
                 ; 0012 008B {
                 _OLED_showBuzzerStatus:
                 ; 0012 008C     printOLED("BZ%1d",state);
007bbd 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007bbe e7ec     +LDI R30 , LOW ( 2 * _0x240000 + ( 332 ) )
007bbf e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 332 ) )
007bc0 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 332 ) )
007bc1 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 332 ) )
                 	__POINTD1FN _0x240000,332
007bc2 940e cb0d 	CALL SUBOPT_0x26A
007bc4 940e cada 	CALL SUBOPT_0x263
                 ; 0012 008D }
007bc6 c11a      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showMemoryStatus(char state)
                 ; 0012 0090 {
                 _OLED_showMemoryStatus:
                 ; 0012 0091     printOLED("MS%1d",state);
007bc7 93aa      	ST   -Y,R26
                 ;	state -> Y+0
                +
007bc8 e8e2     +LDI R30 , LOW ( 2 * _0x240000 + ( 338 ) )
007bc9 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 338 ) )
007bca e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 338 ) )
007bcb e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 338 ) )
                 	__POINTD1FN _0x240000,338
007bcc 940e cb0d 	CALL SUBOPT_0x26A
007bce 940e cada 	CALL SUBOPT_0x263
                 ; 0012 0092 }
007bd0 c110      	RJMP _0x20E0052
                 ;/*============================================================*/
                 ;void OLED_showAlarmStatus(void)
                 ; 0012 0095 {
                 _OLED_showAlarmStatus:
                 ; 0012 0096     int     i=0;
                 ; 0012 0097     char    flagSens[5],flagData[5],flagBatt,flagMemo;
                 ; 0012 0098 
                 ; 0012 0099     for(i=0;i<MAX_SENS_CHANNEL;i++)
007bd1 972a      	SBIW R28,10
007bd2 940e ca6b 	CALL SUBOPT_0x250
                 ;	i -> R16,R17
                 ;	flagSens -> Y+9
                 ;	flagData -> Y+4
                 ;	flagBatt -> R19
                 ;	flagMemo -> R18
                +
007bd4 e000     +LDI R16 , LOW ( 0 )
007bd5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x240032:
                +
007bd6 3005     +CPI R16 , LOW ( 5 )
007bd7 e0e0     +LDI R30 , HIGH ( 5 )
007bd8 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
007bd9 f014      	BRLT PC+3
007bda 940c 7c1b 	JMP _0x240033
                 ; 0012 009A     {
                 ; 0012 009B         if(operating_config.sensorEnable[i]){
007bdc 940e ca41 	CALL SUBOPT_0x24B
007bde f189      	BREQ _0x240034
                 ; 0012 009C 
                 ; 0012 009D             flagSens[i]         = sensorAlarm[i] ? 1:0;
007bdf 01f8      	MOVW R30,R16
007be0 01de      	MOVW R26,R28
007be1 9619      	ADIW R26,9
007be2 0fea      	ADD  R30,R26
007be3 1ffb      	ADC  R31,R27
007be4 010f      	MOVW R0,R30
007be5 e8ac      	LDI  R26,LOW(_sensorAlarm)
007be6 e1b4      	LDI  R27,HIGH(_sensorAlarm)
007be7 940e ca70 	CALL SUBOPT_0x251
007be9 f011      	BREQ _0x240035
007bea e0e1      	LDI  R30,LOW(1)
007beb c001      	RJMP _0x240036
                 _0x240035:
007bec e0e0      	LDI  R30,LOW(0)
                 _0x240036:
007bed 01d0      	MOVW R26,R0
007bee 93ec      	ST   X,R30
                 ; 0012 009E 
                 ; 0012 009F             if(sensor_config[i].alarmEnable){
                +
007bef e1ad     +LDI R26 , 29
007bf0 9fa0     +MUL R26 , R16
007bf1 01f0     +MOVW R30 , R0
007bf2 9fa1     +MUL R26 , R17
007bf3 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,29
                +
007bf4 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
007bf5 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
007bf6 81e0      	LD   R30,Z
007bf7 30e0      	CPI  R30,0
007bf8 f081      	BREQ _0x240038
                 ; 0012 00A0                 flagData[i]     = dataAlarm[i] ? 1:0;
007bf9 01f8      	MOVW R30,R16
007bfa 01de      	MOVW R26,R28
007bfb 9614      	ADIW R26,4
007bfc 0fea      	ADD  R30,R26
007bfd 1ffb      	ADC  R31,R27
007bfe 010f      	MOVW R0,R30
007bff e9a1      	LDI  R26,LOW(_dataAlarm)
007c00 e1b4      	LDI  R27,HIGH(_dataAlarm)
007c01 940e ca70 	CALL SUBOPT_0x251
007c03 f011      	BREQ _0x240039
007c04 e0e1      	LDI  R30,LOW(1)
007c05 c001      	RJMP _0x24003A
                 _0x240039:
007c06 e0e0      	LDI  R30,LOW(0)
                 _0x24003A:
007c07 01d0      	MOVW R26,R0
007c08 c005      	RJMP _0x240057
                 ; 0012 00A1             }
                 ; 0012 00A2             else{
                 _0x240038:
                 ; 0012 00A3                 flagData[i]     = 0;
007c09 01de      	MOVW R26,R28
007c0a 9614      	ADIW R26,4
007c0b 0fa0      	ADD  R26,R16
007c0c 1fb1      	ADC  R27,R17
007c0d e0e0      	LDI  R30,LOW(0)
                 _0x240057:
007c0e 93ec      	ST   X,R30
                 ; 0012 00A4             }
                 ; 0012 00A5         }
                 ; 0012 00A6         else{
007c0f c008      	RJMP _0x24003D
                 _0x240034:
                 ; 0012 00A7             flagSens[i]         = 0;
007c10 01de      	MOVW R26,R28
007c11 9619      	ADIW R26,9
007c12 940e c3ec 	CALL SUBOPT_0x14E
                 ; 0012 00A8             flagData[i]         = 0;
007c14 01de      	MOVW R26,R28
007c15 9614      	ADIW R26,4
007c16 940e c3ec 	CALL SUBOPT_0x14E
                 ; 0012 00A9         }
                 _0x24003D:
                 ; 0012 00AA 
                 ; 0012 00AB     }
                +
007c18 5f0f     +SUBI R16 , LOW ( - 1 )
007c19 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
007c1a cfbb      	RJMP _0x240032
                 _0x240033:
                 ; 0012 00AC 
                 ; 0012 00AD     if(env_config.batteryLevel > 0){
007c1b 940e ca81 	CALL SUBOPT_0x254
007c1d f44c      	BRGE _0x24003E
                 ; 0012 00AE         flagBatt                = batteryAlarm ? 1:0;
007c1e 91e0 14a6 	LDS  R30,_batteryAlarm
007c20 30e0      	CPI  R30,0
007c21 f011      	BREQ _0x24003F
007c22 e0e1      	LDI  R30,LOW(1)
007c23 c001      	RJMP _0x240040
                 _0x24003F:
007c24 e0e0      	LDI  R30,LOW(0)
                 _0x240040:
007c25 2f3e      	MOV  R19,R30
                 ; 0012 00AF     }
                 ; 0012 00B0     else{
007c26 c001      	RJMP _0x240042
                 _0x24003E:
                 ; 0012 00B1         flagBatt                = 0;
007c27 e030      	LDI  R19,LOW(0)
                 ; 0012 00B2     }
                 _0x240042:
                 ; 0012 00B3 
                 ; 0012 00B4     if(env_config.memoryMin > 0){
007c28 940e ca93 	CALL SUBOPT_0x256
007c2a f448      	BRSH _0x240043
                 ; 0012 00B5         flagMemo                = memoryAlarm ? 1:0;
007c2b 91e0 14a7 	LDS  R30,_memoryAlarm
007c2d 30e0      	CPI  R30,0
007c2e f011      	BREQ _0x240044
007c2f e0e1      	LDI  R30,LOW(1)
007c30 c001      	RJMP _0x240045
                 _0x240044:
007c31 e0e0      	LDI  R30,LOW(0)
                 _0x240045:
007c32 2f2e      	MOV  R18,R30
                 ; 0012 00B6     }
                 ; 0012 00B7     else{
007c33 c001      	RJMP _0x240047
                 _0x240043:
                 ; 0012 00B8         flagMemo                = 0;
007c34 e020      	LDI  R18,LOW(0)
                 ; 0012 00B9     }
                 _0x240047:
                 ; 0012 00BA 
                 ; 0012 00BB     printOLED("AL%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d%1d",
                 ; 0012 00BC         flagSens[0],flagSens[1],flagSens[2],flagSens[3],flagSens[4],
                 ; 0012 00BD         flagData[0],flagData[1],flagData[2],flagData[3],flagData[4],
                 ; 0012 00BE         flagBatt,flagMemo);
                +
007c35 e8e8     +LDI R30 , LOW ( 2 * _0x240000 + ( 344 ) )
007c36 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 344 ) )
007c37 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 344 ) )
007c38 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 344 ) )
                 	__POINTD1FN _0x240000,344
007c39 940e da29 	CALL __PUTPARD1
007c3b 85ed      	LDD  R30,Y+13
007c3c 940e be67 	CALL SUBOPT_0x65
007c3e 89ea      	LDD  R30,Y+18
007c3f 940e be67 	CALL SUBOPT_0x65
007c41 89ef      	LDD  R30,Y+23
007c42 940e be67 	CALL SUBOPT_0x65
007c44 8dec      	LDD  R30,Y+28
007c45 940e be67 	CALL SUBOPT_0x65
007c47 a1e9      	LDD  R30,Y+33
007c48 940e be67 	CALL SUBOPT_0x65
007c4a 8dec      	LDD  R30,Y+28
007c4b 940e be67 	CALL SUBOPT_0x65
007c4d a1e9      	LDD  R30,Y+33
007c4e 940e be67 	CALL SUBOPT_0x65
007c50 a1ee      	LDD  R30,Y+38
007c51 940e be67 	CALL SUBOPT_0x65
007c53 a5eb      	LDD  R30,Y+43
007c54 940e be67 	CALL SUBOPT_0x65
007c56 a9e8      	LDD  R30,Y+48
007c57 940e be67 	CALL SUBOPT_0x65
007c59 2fe3      	MOV  R30,R19
007c5a 940e be67 	CALL SUBOPT_0x65
007c5c 2fe2      	MOV  R30,R18
007c5d 940e be67 	CALL SUBOPT_0x65
007c5f e380      	LDI  R24,48
007c60 d002      	RCALL _printOLED
007c61 96e4      	ADIW R28,52
                 ; 0012 00BF 
                 ; 0012 00C0     return;
007c62 c129      	RJMP _0x20E0050
                 ; 0012 00C1 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*************** OLED Low Level Communication *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void printOLED(flash char *fmtstr, ...)
                 ; 0012 00C9 {
                 _printOLED:
007c63 92ff      	PUSH R15
007c64 2ef8      	MOV  R15,R24
                 ; 0012 00CA     TIMER   timeout;
                 ; 0012 00CB 
                 ; 0012 00CC     char strcmd[60];
                 ; 0012 00CD 
                 ; 0012 00CE     va_list argptr;
                 ; 0012 00CF 
                 ; 0012 00D0     va_start(argptr, fmtstr);
007c65 97ef      	SBIW R28,63
007c66 9721      	SBIW R28,1
007c67 931a      	ST   -Y,R17
007c68 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+66
                 ;	timeout -> Y+62
                 ;	strcmd -> Y+2
                 ;	*argptr -> R16,R17
007c69 01de      	MOVW R26,R28
007c6a 96de      	ADIW R26,62
007c6b 940e d890 	CALL __ADDW2R15
007c6d 018d      	MOVW R16,R26
                 ; 0012 00D1     vsprintf(strcmd,fmtstr,argptr);
007c6e 940e c7e7 	CALL SUBOPT_0x1F2
007c70 01de      	MOVW R26,R28
007c71 5bac      	SUBI R26,LOW(-(68))
007c72 4fbf      	SBCI R27,HIGH(-(68))
007c73 940e cb12 	CALL SUBOPT_0x26B
                 ; 0012 00D2     va_end(argptr);
                 ; 0012 00D3 
                 ; 0012 00D4 //    if ( (strstr(strcmd,"DV") != NULL) ){
                 ; 0012 00D5 //        printDebug("\r\n--%s--\r\n",strcmd);
                 ; 0012 00D6 //    }
                 ; 0012 00D7 
                 ; 0012 00D8     flag_oled_ack = 0;
007c75 98f0      	CBI  0x1E,0
                 ; 0012 00D9 
                 ; 0012 00DA     putchar2(0x01);
007c76 e0a1      	LDI  R26,LOW(1)
007c77 940e 3fa5 	CALL _putchar2
                 ; 0012 00DB     send_uart(2,strcmd);
007c79 e0e2      	LDI  R30,LOW(2)
007c7a 93ea      	ST   -Y,R30
007c7b 01de      	MOVW R26,R28
007c7c 9613      	ADIW R26,3
007c7d 940e 3fed 	CALL _send_uart
                 ; 0012 00DC     putchar2(0x04);
007c7f e0a4      	LDI  R26,LOW(4)
007c80 940e 3fa5 	CALL _putchar2
                 ; 0012 00DD 
                 ; 0012 00DE     TIMER_setTimer(&timeout, 3);
007c82 01fe      	MOVW R30,R28
007c83 96fe      	ADIW R30,62
007c84 940e ca75 	CALL SUBOPT_0x252
007c86 940e 4073 	CALL _TIMER_setTimer
                 ; 0012 00DF 
                 ; 0012 00E0     while( (!flag_oled_ack) && !TIMER_checkTimerExceed(timeout));
                 _0x24004A:
007c88 99f0      	SBIC 0x1E,0
007c89 c00c      	RJMP _0x24004D
                +
007c8a 01de     +MOVW R26 , R28
007c8b 5ca2     +SUBI R26 , LOW ( - 62 )
007c8c 4fbf     +SBCI R27 , HIGH ( - 62 )
007c8d 900d     +LD R0 , X +
007c8e 901d     +LD R1 , X +
007c8f 918d     +LD R24 , X +
007c90 919c     +LD R25 , X
007c91 01d0     +MOVW R26 , R0
                 	__GETD2SX 62
007c92 940e 405d 	CALL _TIMER_checkTimerExceed
007c94 9730      	SBIW R30,0
007c95 f009      	BREQ _0x24004E
                 _0x24004D:
007c96 c001      	RJMP _0x24004C
                 _0x24004E:
007c97 cff0      	RJMP _0x24004A
                 _0x24004C:
                 ; 0012 00E1 
                 ; 0012 00E2     if(!flag_oled_ack){
007c98 99f0      	SBIC 0x1E,0
007c99 c006      	RJMP _0x24004F
                 ; 0012 00E3         printDebug("\r\n!!!! OLED Error !!!!\r\n");
                +
007c9a eaef     +LDI R30 , LOW ( 2 * _0x240000 + ( 383 ) )
007c9b e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 383 ) )
007c9c e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 383 ) )
007c9d e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 383 ) )
                 	__POINTD1FN _0x240000,383
007c9e 940e bbba 	CALL SUBOPT_0x3
                 ; 0012 00E4     }
                 ; 0012 00E5 
                 ; 0012 00E6 }
                 _0x24004F:
007ca0 8119      	LDD  R17,Y+1
007ca1 8108      	LDD  R16,Y+0
007ca2 96ef      	ADIW R28,63
007ca3 9623      	ADIW R28,3
007ca4 90ff      	POP  R15
007ca5 9508      	RET
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** OLED Hardare Management *******************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void OLED_reset(void)
                 ; 0012 00EE {
                 _OLED_reset:
                 ; 0012 00EF     OLED_RESET = 0;            // Active SOLED Reset
007ca6 98a5      	CBI  0x14,5
                 ; 0012 00F0     delay_ms(1);
007ca7 940e bee0 	CALL SUBOPT_0x75
007ca9 940e d6dd 	CALL _delay_ms
                 ; 0012 00F1     OLED_RESET = 1;            // Dective SOLED Reset for start use.
007cab 9aa5      	SBI  0x14,5
                 ; 0012 00F2     delay_ms(1);
007cac 940e bee0 	CALL SUBOPT_0x75
007cae 940e d6dd 	CALL _delay_ms
                 ; 0012 00F3 
                 ; 0012 00F4 }
007cb0 9508      	RET
                 ;/*============================================================*/
                 ;void init_oled(void)
                 ; 0012 00F7 {
                 _init_oled:
                 ; 0012 00F8     printDebug("Initializing OLED.. ");
                +
007cb1 ece8     +LDI R30 , LOW ( 2 * _0x240000 + ( 408 ) )
007cb2 e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 408 ) )
007cb3 e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 408 ) )
007cb4 e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 408 ) )
                 	__POINTD1FN _0x240000,408
007cb5 940e bbba 	CALL SUBOPT_0x3
                 ; 0012 00F9     flag_oled_ack = 0;
007cb7 98f0      	CBI  0x1E,0
                 ; 0012 00FA     OLED_reset();
007cb8 dfed      	RCALL _OLED_reset
                 ; 0012 00FB     printDebug("OK\r\n");
                +
007cb9 eded     +LDI R30 , LOW ( 2 * _0x240000 + ( 429 ) )
007cba e4fc     +LDI R31 , HIGH ( 2 * _0x240000 + ( 429 ) )
007cbb e060     +LDI R22 , BYTE3 ( 2 * _0x240000 + ( 429 ) )
007cbc e070     +LDI R23 , BYTE4 ( 2 * _0x240000 + ( 429 ) )
                 	__POINTD1FN _0x240000,429
007cbd 940e da29 	CALL __PUTPARD1
007cbf e080      	LDI  R24,0
007cc0 940e 9ad2 	CALL _printDebug
007cc2 c1db      	RJMP _0x20E004B
                 ; 0012 00FC }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <delay.h>
                 ;#include "memcard.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned long int sdFreeSpace = 0;
                 ;
                 ;/*============================================================*/
                 ;/* will hold the information for logical drive 0: */
                 ;FATFS fat;
                 ;/* pointer to the FATFS type structure */
                 ;FATFS *pfat;
                 ;/* root path */
                 ;char root_path[] = "0:/";
                 
                 	.DSEG
                 ;/*============================================================*/        /* error message list */
                 ;flash char * flash error_msg[]= {   "", /* not used */
                 ;                                    "FR_DISK_ERR",
                 ;                                    "FR_INT_ERR",
                 ;                                    "FR_NOT_READY",
                 ;                                    "FR_NO_FILE",
                 ;                                    "FR_NO_PATH",
                 ;                                    "FR_INVALID_NAME",
                 ;                                    "FR_DENIED",
                 ;                                    "FR_EXIST",
                 ;                                    "FR_INVALID_OBJECT",
                 ;                                    "FR_WRITE_PROTECTED",
                 ;                                    "FR_INVALID_DRIVE",
                 ;                                    "FR_NOT_ENABLED",
                 ;                                    "FR_NO_FILESYSTEM",
                 ;                                    "FR_MKFS_ABORTED",
                 ;                                    "FR_TIMEOUT"  };
                 ;/*============================================================*/        /* display error message and stop */
                 ;void error(FRESULT res)
                 ; 0013 0023 {
                 
                 	.CSEG
                 _error:
                 ; 0013 0024     if ((res>=FR_DISK_ERR) && (res<=FR_TIMEOUT))        printDebug("<ERR> %p.\r\n",error_msg[res]);     return;
007cc3 93aa      	ST   -Y,R26
                 ;	res -> Y+0
007cc4 81a8      	LD   R26,Y
007cc5 30a1      	CPI  R26,LOW(0x1)
007cc6 f010      	BRLO _0x260005
007cc7 31a0      	CPI  R26,LOW(0x10)
007cc8 f008      	BRLO _0x260006
                 _0x260005:
007cc9 c017      	RJMP _0x260004
                 _0x260006:
                +
007cca ebe5     +LDI R30 , LOW ( 2 * _0x260000 + ( 207 ) )
007ccb e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 207 ) )
007ccc e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 207 ) )
007ccd e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 207 ) )
                 	__POINTD1FN _0x260000,207
007cce 940e da29 	CALL __PUTPARD1
007cd0 81ec      	LDD  R30,Y+4
007cd1 e6aa      	LDI  R26,LOW(_error_msg*2)
007cd2 e0b1      	LDI  R27,HIGH(_error_msg*2)
007cd3 e080      	LDI  R24,BYTE3(_error_msg*2)
007cd4 27ff      	CLR  R31
007cd5 2766      	CLR  R22
007cd6 2777      	CLR  R23
007cd7 940e d8ff 	CALL __LSLD1
007cd9 940e d8ff 	CALL __LSLD1
007cdb 940e d894 	CALL __ADDD12
007cdd 940e da09 	CALL __GETD1PF
007cdf 940e c58e 	CALL SUBOPT_0x18B
                 _0x260004:
                 _0x20E0052:
007ce1 9621      	ADIW R28,1
007ce2 9508      	RET
                 ; 0013 0025 }
                 ;/*============================================================*/
                 ;int SD_writeData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0028 {
                 _SD_writeData:
                 ; 0013 0029     FRESULT         res;
                 ; 0013 002A     unsigned int    actual_write;
                 ; 0013 002B 
                 ; 0013 002C     if(sdFreeSpace == 0){ printDebug("<SD_writeData> SD Card not ready\r\n");       return -1;}
007ce3 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_write -> R18,R19
007ce5 940e ca0a 	CALL SUBOPT_0x242
007ce7 f449      	BRNE _0x260007
                +
007ce8 ece1     +LDI R30 , LOW ( 2 * _0x260000 + ( 219 ) )
007ce9 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 219 ) )
007cea e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 219 ) )
007ceb e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 219 ) )
                 	__POINTD1FN _0x260000,219
007cec 940e bbba 	CALL SUBOPT_0x3
007cee efef      	LDI  R30,LOW(65535)
007cef efff      	LDI  R31,HIGH(65535)
007cf0 c09b      	RJMP _0x20E0050
                 ; 0013 002D 
                 ; 0013 002E     res = f_lseek(file,start);
                 _0x260007:
007cf1 940e c64d 	CALL SUBOPT_0x1AF
007cf3 940e cb1b 	CALL SUBOPT_0x26C
                 ; 0013 002F     if(res != FR_OK){
007cf5 f059      	BREQ _0x260008
                 ; 0013 0030         printDebug("<SD_writeData> f_lseek(%u) failed!!\r\n", start);
                +
007cf6 eee4     +LDI R30 , LOW ( 2 * _0x260000 + ( 254 ) )
007cf7 e4fd     +LDI R31 , HIGH ( 2 * _0x260000 + ( 254 ) )
007cf8 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 254 ) )
007cf9 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 254 ) )
                 	__POINTD1FN _0x260000,254
007cfa 940e bf6f 	CALL SUBOPT_0x8D
007cfc 940e c58e 	CALL SUBOPT_0x18B
                 ; 0013 0031         error(res);
007cfe 940e cb22 	CALL SUBOPT_0x26D
                 ; 0013 0032         return -1;
007d00 c08b      	RJMP _0x20E0050
                 ; 0013 0033     }
                 ; 0013 0034 
                 ; 0013 0035     res = f_write(file,data,len,&actual_write);
                 _0x260008:
007d01 940e c64d 	CALL SUBOPT_0x1AF
007d03 940e c5b7 	CALL SUBOPT_0x194
007d05 940e c5b7 	CALL SUBOPT_0x194
007d07 b7ad      	IN   R26,SPL
007d08 b7be      	IN   R27,SPH
007d09 9711      	SBIW R26,1
007d0a 933f      	PUSH R19
007d0b 932f      	PUSH R18
007d0c 940e b2de 	CALL _f_write
007d0e 912f      	POP  R18
007d0f 913f      	POP  R19
007d10 2f1e      	MOV  R17,R30
                 ; 0013 0036     if(res != FR_OK){
007d11 3010      	CPI  R17,0
007d12 f089      	BREQ _0x260009
                 ; 0013 0037         printDebug("<SD_writeData> f_write() failed\r\n");
                +
007d13 e0ea     +LDI R30 , LOW ( 2 * _0x260000 + ( 292 ) )
007d14 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 292 ) )
007d15 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 292 ) )
007d16 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 292 ) )
                 	__POINTD1FN _0x260000,292
007d17 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 0038         print_payload(data,len);
007d19 940e c45c 	CALL SUBOPT_0x15C
007d1b 81ae      	LDD  R26,Y+6
007d1c 81bf      	LDD  R27,Y+6+1
007d1d 940e 9b56 	CALL _print_payload
                 ; 0013 0039         error(res);
007d1f 2fa1      	MOV  R26,R17
007d20 dfa2      	RCALL _error
                 ; 0013 003A         return -2;
007d21 efee      	LDI  R30,LOW(65534)
007d22 efff      	LDI  R31,HIGH(65534)
007d23 c068      	RJMP _0x20E0050
                 ; 0013 003B     }
                 ; 0013 003C 
                 ; 0013 003D     if(actual_write != len){
                 _0x260009:
007d24 81ec      	LDD  R30,Y+4
007d25 81fd      	LDD  R31,Y+4+1
007d26 17e2      	CP   R30,R18
007d27 07f3      	CPC  R31,R19
007d28 f081      	BREQ _0x26000A
                 ; 0013 003E         printDebug("<SD_writeData> actual_write[%u] != len[%u]\r\n",actual_write,len);
                +
007d29 e2ec     +LDI R30 , LOW ( 2 * _0x260000 + ( 326 ) )
007d2a e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 326 ) )
007d2b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 326 ) )
007d2c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 326 ) )
                 	__POINTD1FN _0x260000,326
007d2d 940e da29 	CALL __PUTPARD1
007d2f 01f9      	MOVW R30,R18
007d30 940e bd18 	CALL SUBOPT_0x34
007d32 85ec      	LDD  R30,Y+12
007d33 85fd      	LDD  R31,Y+12+1
007d34 940e c39b 	CALL SUBOPT_0x140
                 ; 0013 003F         return -3; // -- the caller should roll back the last data -- //
007d36 efed      	LDI  R30,LOW(65533)
007d37 efff      	LDI  R31,HIGH(65533)
007d38 c053      	RJMP _0x20E0050
                 ; 0013 0040     }
                 ; 0013 0041 
                 ; 0013 0042     return 0;
                 _0x26000A:
007d39 c050      	RJMP _0x20E0051
                 ; 0013 0043 }
                 ;/*============================================================*/
                 ;int SD_readData(FIL *file, unsigned long int start, unsigned char *data, unsigned int len)
                 ; 0013 0046 {
                 _SD_readData:
                 ; 0013 0047     FRESULT         res;
                 ; 0013 0048     unsigned int    actual_read;
                 ; 0013 0049 
                 ; 0013 004A     if(sdFreeSpace == 0){ printDebug("<SD_readData> SD Card not ready\r\n");       return -1;}
007d3a 940e bf1b 	CALL SUBOPT_0x7F
                 ;	*file -> Y+12
                 ;	start -> Y+8
                 ;	*data -> Y+6
                 ;	len -> Y+4
                 ;	res -> R17
                 ;	actual_read -> R18,R19
007d3c 940e ca0a 	CALL SUBOPT_0x242
007d3e f449      	BRNE _0x26000B
                +
007d3f e5e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 371 ) )
007d40 e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 371 ) )
007d41 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 371 ) )
007d42 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 371 ) )
                 	__POINTD1FN _0x260000,371
007d43 940e bbba 	CALL SUBOPT_0x3
007d45 efef      	LDI  R30,LOW(65535)
007d46 efff      	LDI  R31,HIGH(65535)
007d47 c044      	RJMP _0x20E0050
                 ; 0013 004B 
                 ; 0013 004C     res = f_lseek(file,start);
                 _0x26000B:
007d48 940e c64d 	CALL SUBOPT_0x1AF
007d4a 940e cb1b 	CALL SUBOPT_0x26C
                 ; 0013 004D     if(res != FR_OK){
007d4c f059      	BREQ _0x26000C
                 ; 0013 004E         printDebug("<SD_readData> f_lseek(%u) failed!!\r\n", start);
                +
007d4d e7eb     +LDI R30 , LOW ( 2 * _0x260000 + ( 405 ) )
007d4e e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 405 ) )
007d4f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 405 ) )
007d50 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 405 ) )
                 	__POINTD1FN _0x260000,405
007d51 940e bf6f 	CALL SUBOPT_0x8D
007d53 940e c58e 	CALL SUBOPT_0x18B
                 ; 0013 004F         error(res);
007d55 940e cb22 	CALL SUBOPT_0x26D
                 ; 0013 0050         return -1;
007d57 c034      	RJMP _0x20E0050
                 ; 0013 0051     }
                 ; 0013 0052 
                 ; 0013 0053     res = f_read(file,data,len,&actual_read);
                 _0x26000C:
007d58 940e c64d 	CALL SUBOPT_0x1AF
007d5a 940e c5b7 	CALL SUBOPT_0x194
007d5c 940e c5b7 	CALL SUBOPT_0x194
007d5e b7ad      	IN   R26,SPL
007d5f b7be      	IN   R27,SPH
007d60 9711      	SBIW R26,1
007d61 933f      	PUSH R19
007d62 932f      	PUSH R18
007d63 940e b179 	CALL _f_read
007d65 912f      	POP  R18
007d66 913f      	POP  R19
007d67 2f1e      	MOV  R17,R30
                 ; 0013 0054     if(res != FR_OK){
007d68 3010      	CPI  R17,0
007d69 f059      	BREQ _0x26000D
                 ; 0013 0055         printDebug("<SD_readData> f_read() failed\r\n");
                +
007d6a eae0     +LDI R30 , LOW ( 2 * _0x260000 + ( 442 ) )
007d6b e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 442 ) )
007d6c e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 442 ) )
007d6d e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 442 ) )
                 	__POINTD1FN _0x260000,442
007d6e 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 0056         error(res);
007d70 2fa1      	MOV  R26,R17
007d71 df51      	RCALL _error
                 ; 0013 0057         return -2;
007d72 efee      	LDI  R30,LOW(65534)
007d73 efff      	LDI  R31,HIGH(65534)
007d74 c017      	RJMP _0x20E0050
                 ; 0013 0058     }
                 ; 0013 0059 
                 ; 0013 005A     if(actual_read != len){
                 _0x26000D:
007d75 81ec      	LDD  R30,Y+4
007d76 81fd      	LDD  R31,Y+4+1
007d77 17e2      	CP   R30,R18
007d78 07f3      	CPC  R31,R19
007d79 f081      	BREQ _0x26000E
                 ; 0013 005B         printDebug("<SD_writeData> actual_read[%u] != len[%u]\r\n",actual_read,len);
                +
007d7a ece0     +LDI R30 , LOW ( 2 * _0x260000 + ( 474 ) )
007d7b e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 474 ) )
007d7c e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 474 ) )
007d7d e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 474 ) )
                 	__POINTD1FN _0x260000,474
007d7e 940e da29 	CALL __PUTPARD1
007d80 01f9      	MOVW R30,R18
007d81 940e bd18 	CALL SUBOPT_0x34
007d83 85ec      	LDD  R30,Y+12
007d84 85fd      	LDD  R31,Y+12+1
007d85 940e c39b 	CALL SUBOPT_0x140
                 ; 0013 005C         return -3; // -- the caller should roll back the last data -- //
007d87 efed      	LDI  R30,LOW(65533)
007d88 efff      	LDI  R31,HIGH(65533)
007d89 c002      	RJMP _0x20E0050
                 ; 0013 005D     }
                 ; 0013 005E 
                 ; 0013 005F     return 0;
                 _0x26000E:
                 _0x20E0051:
007d8a e0e0      	LDI  R30,LOW(0)
007d8b e0f0      	LDI  R31,HIGH(0)
                 _0x20E0050:
007d8c 940e daa2 	CALL __LOADLOCR4
007d8e 962e      	ADIW R28,14
007d8f 9508      	RET
                 ; 0013 0060 }
                 ;/*============================================================*/
                 ;int SD_readMemoryRemain(unsigned long *free_kbytes)
                 ; 0013 0063 {
                 _SD_readMemoryRemain:
                 ; 0013 0064     FRESULT         res;
                 ; 0013 0065     unsigned long   free_clusters;
                 ; 0013 0066 
                 ; 0013 0067     // ------ read available memory space ------- //
                 ; 0013 0068     // return as percentage!!! //
                 ; 0013 0069 
                 ; 0013 006A     /* get the number of free clusters */
                 ; 0013 006B     res = f_getfree(root_path,&free_clusters,&pfat);
007d90 940e c1e8 	CALL SUBOPT_0xF1
                 ;	*free_kbytes -> Y+5
                 ;	res -> R17
                 ;	free_clusters -> Y+1
007d92 e1ef      	LDI  R30,LOW(_root_path)
007d93 e1f9      	LDI  R31,HIGH(_root_path)
007d94 940e cb28 	CALL SUBOPT_0x26E
007d96 e1ad      	LDI  R26,LOW(_pfat)
007d97 e1b9      	LDI  R27,HIGH(_pfat)
007d98 940e b6a6 	CALL _f_getfree
007d9a 2f1e      	MOV  R17,R30
                 ; 0013 006C     if ( res != FR_OK){
007d9b 3010      	CPI  R17,0
007d9c f061      	BREQ _0x26000F
                 ; 0013 006D        /* an error occured, display it and stop */
                 ; 0013 006E        printDebug("<SD_readMemoryRemain> f_getfree(%s) error!!\r\n",root_path);
                +
007d9d eeec     +LDI R30 , LOW ( 2 * _0x260000 + ( 518 ) )
007d9e e4fe     +LDI R31 , HIGH ( 2 * _0x260000 + ( 518 ) )
007d9f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 518 ) )
007da0 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 518 ) )
                 	__POINTD1FN _0x260000,518
007da1 940e cb2f 	CALL SUBOPT_0x26F
007da3 940e bc2c 	CALL SUBOPT_0x12
                 ; 0013 006F        error(res);
007da5 2fa1      	MOV  R26,R17
007da6 940e cb35 	CALL SUBOPT_0x270
                 ; 0013 0070        sdFreeSpace = 0;
                 ; 0013 0071        return -1;
007da8 c012      	RJMP _0x20E004F
                 ; 0013 0072     }
                 ; 0013 0073 
                 ; 0013 0074     /* calculate the number of free bytes */
                 ; 0013 0075     *free_kbytes = free_clusters * pfat->csize / 2;
                 _0x26000F:
007da9 91e0 191d 	LDS  R30,_pfat
007dab 91f0 191e 	LDS  R31,_pfat+1
007dad 940e cb43 	CALL SUBOPT_0x271
007daf 940e cb46 	CALL SUBOPT_0x272
007db1 940e cb4b 	CALL SUBOPT_0x273
007db3 940e d8fa 	CALL __LSRD1
007db5 81ad      	LDD  R26,Y+5
007db6 81be      	LDD  R27,Y+5+1
007db7 940e d9ff 	CALL __PUTDP1
                 ; 0013 0076 
                 ; 0013 0077     return 0;
007db9 e0e0      	LDI  R30,LOW(0)
007dba e0f0      	LDI  R31,HIGH(0)
                 _0x20E004F:
007dbb 8118      	LDD  R17,Y+0
007dbc 9627      	ADIW R28,7
007dbd 9508      	RET
                 ; 0013 0078 }
                 ;/*============================================================*/
                 ;int SD_mount(void)
                 ; 0013 007B {
                 _SD_mount:
                 ; 0013 007C     FRESULT         res;
                 ; 0013 007D 
                 ; 0013 007E     /* mount logical drive 0: */
                 ; 0013 007F     res = f_mount(0,&fat);
007dbe 931a      	ST   -Y,R17
                 ;	res -> R17
007dbf e0e0      	LDI  R30,LOW(0)
007dc0 93ea      	ST   -Y,R30
007dc1 eeab      	LDI  R26,LOW(_fat)
007dc2 e1b6      	LDI  R27,HIGH(_fat)
007dc3 940e b021 	CALL _f_mount
007dc5 2f1e      	MOV  R17,R30
                 ; 0013 0080     if( res != FR_OK ){
007dc6 3010      	CPI  R17,0
007dc7 f049      	BREQ _0x260010
                 ; 0013 0081         printDebug("Logical drive 0: mounted ERROR\r\n");
                +
007dc8 e1ea     +LDI R30 , LOW ( 2 * _0x260000 + ( 564 ) )
007dc9 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 564 ) )
007dca e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 564 ) )
007dcb e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 564 ) )
                 	__POINTD1FN _0x260000,564
007dcc 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 0082         error(res);
007dce 940e cb22 	CALL SUBOPT_0x26D
                 ; 0013 0083         return -1;
007dd0 c008      	RJMP _0x20E004E
                 ; 0013 0084     }
                 ; 0013 0085 
                 ; 0013 0086     printDebug("Logical drive 0: mounted OK\r\n");
                 _0x260010:
                +
007dd1 e3eb     +LDI R30 , LOW ( 2 * _0x260000 + ( 597 ) )
007dd2 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 597 ) )
007dd3 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 597 ) )
007dd4 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 597 ) )
                 	__POINTD1FN _0x260000,597
007dd5 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 0087     return 0;
007dd7 e0e0      	LDI  R30,LOW(0)
007dd8 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004E:
007dd9 9119      	LD   R17,Y+
007dda 9508      	RET
                 ; 0013 0088 }
                 ;/*============================================================*/
                 ;int SD_unmount(void)
                 ; 0013 008B {
                 ; 0013 008C     FRESULT         res;
                 ; 0013 008D 
                 ; 0013 008E     /* unmount logical drive 0: */
                 ; 0013 008F     res = f_mount(0,NULL);
                 ;	res -> R17
                 ; 0013 0090     if( res != FR_OK ){
                 ; 0013 0091         printDebug("Logical drive 0: unmounted ERROR\r\n");
                 ; 0013 0092         error(res);
                 ; 0013 0093         return -1;
                 ; 0013 0094     }
                 ; 0013 0095 
                 ; 0013 0096     printDebug("Logical drive 0: unmounted OK\r\n");
                 ; 0013 0097     return 0;
                 ; 0013 0098 }
                 ;/*============================================================*/
                 ;int SD_remount(void)
                 ; 0013 009B {
                 ; 0013 009C     int res;
                 ; 0013 009D 
                 ; 0013 009E     res = SD_unmount();
                 ;	res -> R16,R17
                 ; 0013 009F     if(res < 0){
                 ; 0013 00A0         printDebug("<SD_remount> SD_unmount() failed\r\n");
                 ; 0013 00A1         return -1;
                 ; 0013 00A2     }
                 ; 0013 00A3     delay_ms(250);
                 ; 0013 00A4     res = SD_mount();
                 ; 0013 00A5     if(res < 0){
                 ; 0013 00A6         printDebug("<SD_remount> SD_mount() failed\r\n");
                 ; 0013 00A7         return -1;
                 ; 0013 00A8     }
                 ; 0013 00A9     delay_ms(250);
                 ; 0013 00AA //
                 ; 0013 00AB //    if(SD_createFile(LOG_PROTOCOL) < 0){
                 ; 0013 00AC //        printDebug("Error creating new log file (Remount failed)\r\n");
                 ; 0013 00AD //        return -1;
                 ; 0013 00AE //    }
                 ; 0013 00AF 
                 ; 0013 00B0     return 0;
                 ; 0013 00B1 }
                 ;/*============================================================*/
                 ;int SD_createFile(char *filename, unsigned char mode)
                 ; 0013 00B4 {
                 _SD_createFile:
                 ; 0013 00B5     FIL          file;
                 ; 0013 00B6     FRESULT      res;
                 ; 0013 00B7     char         filepath[50];
                 ; 0013 00B8 
                 ; 0013 00B9     if(sdFreeSpace == 0){ printDebug("<SD_createFile> SD Card not ready\r\n");      return -1;}
007ddb 93aa      	ST   -Y,R26
007ddc 97ef      	SBIW R28,63
007ddd 9763      	SBIW R28,19
007dde 50d2      	SUBI R29,2
007ddf 931a      	ST   -Y,R17
                 ;	*filename -> Y+596
                 ;	mode -> Y+595
                 ;	file -> Y+51
                 ;	res -> R17
                 ;	filepath -> Y+1
007de0 940e ca0a 	CALL SUBOPT_0x242
007de2 f449      	BRNE _0x260014
                +
007de3 eee0     +LDI R30 , LOW ( 2 * _0x260000 + ( 762 ) )
007de4 e4ff     +LDI R31 , HIGH ( 2 * _0x260000 + ( 762 ) )
007de5 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 762 ) )
007de6 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 762 ) )
                 	__POINTD1FN _0x260000,762
007de7 940e bbba 	CALL SUBOPT_0x3
007de9 efef      	LDI  R30,LOW(65535)
007dea efff      	LDI  R31,HIGH(65535)
007deb c048      	RJMP _0x20E004D
                 ; 0013 00BA 
                 ; 0013 00BB     sprintf(filepath,"%s%s",root_path,filename);
                 _0x260014:
007dec 01fe      	MOVW R30,R28
007ded 9631      	ADIW R30,1
007dee 93fa      	ST   -Y,R31
007def 93ea      	ST   -Y,R30
007df0 940e cb50 	CALL SUBOPT_0x274
                +
007df2 01fe     +MOVW R30 , R28
007df3 5ae2     +SUBI R30 , LOW ( - 606 )
007df4 4ffd     +SBCI R31 , HIGH ( - 606 )
007df5 9001     +LD R0 , Z +
007df6 81f0     +LD R31 , Z
007df7 2de0     +MOV R30 , R0
                 	__GETW1SX 606
007df8 940e bd18 	CALL SUBOPT_0x34
007dfa e088      	LDI  R24,8
007dfb 940e bace 	CALL _sprintf
007dfd 962e      	ADIW R28,14
                 ; 0013 00BC 
                 ; 0013 00BD     if(mode == SD_FORCE)        // -- replace old file if exist -- //
                +
007dfe 01de     +MOVW R26 , R28
007dff 5aad     +SUBI R26 , LOW ( - 595 )
007e00 4fbd     +SBCI R27 , HIGH ( - 595 )
007e01 91ac     +LD R26 , X
                 	__GETB2SX 595
007e02 30a1      	CPI  R26,LOW(0x1)
007e03 f431      	BRNE _0x260015
                 ; 0013 00BE     {
                 ; 0013 00BF         //printDebug("<SD_createFile> Force re-creating file %s.\r\n",filename);
                 ; 0013 00C0         res = f_open(   &file,
                 ; 0013 00C1                         filepath,
                 ; 0013 00C2                         FA_CREATE_ALWAYS | FA_WRITE );
007e04 01fe      	MOVW R30,R28
007e05 96f3      	ADIW R30,51
007e06 940e cb28 	CALL SUBOPT_0x26E
007e08 e0aa      	LDI  R26,LOW(10)
007e09 c005      	RJMP _0x260021
                 ; 0013 00C3     }
                 ; 0013 00C4     else                        // -- keep old file if exist -- //
                 _0x260015:
                 ; 0013 00C5     {
                 ; 0013 00C6         //printDebug("<SD_createFile> Try to creating file %s.\r\n",filename);
                 ; 0013 00C7         res = f_open(   &file,
                 ; 0013 00C8                         filepath,
                 ; 0013 00C9                         FA_CREATE_NEW | FA_WRITE );
007e0a 01fe      	MOVW R30,R28
007e0b 96f3      	ADIW R30,51
007e0c 940e cb28 	CALL SUBOPT_0x26E
007e0e e0a6      	LDI  R26,LOW(6)
                 _0x260021:
007e0f 940e b04c 	CALL _f_open
007e11 2f1e      	MOV  R17,R30
                 ; 0013 00CA     }
                 ; 0013 00CB 
                 ; 0013 00CC     if( res == FR_EXIST){
007e12 3018      	CPI  R17,8
007e13 f419      	BRNE _0x260017
                 ; 0013 00CD         //printDebug("<SD_createFile> %s already exist\r\n", filename);
                 ; 0013 00CE 
                 ; 0013 00CF //        res = f_close( &file );
                 ; 0013 00D0 //        if( res != FR_OK ){
                 ; 0013 00D1 //            printDebug("<SD_createFile> f_close() failed\r\n");
                 ; 0013 00D2 //            error(res);
                 ; 0013 00D3 //            return -1;
                 ; 0013 00D4 //        }
                 ; 0013 00D5 
                 ; 0013 00D6         return 0;       // -- return 0 indicated that a file is already exist -- //
007e14 e0e0      	LDI  R30,LOW(0)
007e15 e0f0      	LDI  R31,HIGH(0)
007e16 c01d      	RJMP _0x20E004D
                 ; 0013 00D7     }
                 ; 0013 00D8     else if( res != FR_OK){
                 _0x260017:
007e17 3010      	CPI  R17,0
007e18 f049      	BREQ _0x260019
                 ; 0013 00D9         printDebug("<SD_createFile> f_open() failed\r\n");
                +
007e19 e0e9     +LDI R30 , LOW ( 2 * _0x260000 + ( 803 ) )
007e1a e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 803 ) )
007e1b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 803 ) )
007e1c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 803 ) )
                 	__POINTD1FN _0x260000,803
007e1d 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 00DA         error(res);
007e1f 940e cb22 	CALL SUBOPT_0x26D
                 ; 0013 00DB         return -1;
007e21 c012      	RJMP _0x20E004D
                 ; 0013 00DC     }
                 ; 0013 00DD 
                 ; 0013 00DE     //printDebug("<SD_createFile> '%s' created!!\r\n",filename);
                 ; 0013 00DF 
                 ; 0013 00E0     res = f_close( &file );
                 _0x260019:
007e22 01de      	MOVW R26,R28
007e23 96d3      	ADIW R26,51
007e24 940e b4fb 	CALL _f_close
007e26 2f1e      	MOV  R17,R30
                 ; 0013 00E1     if( res != FR_OK ){
007e27 3010      	CPI  R17,0
007e28 f049      	BREQ _0x26001A
                 ; 0013 00E2         printDebug("<SD_createFile> f_close() failed\r\n");
                +
007e29 e2eb     +LDI R30 , LOW ( 2 * _0x260000 + ( 837 ) )
007e2a e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 837 ) )
007e2b e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 837 ) )
007e2c e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 837 ) )
                 	__POINTD1FN _0x260000,837
007e2d 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 00E3         error(res);
007e2f 940e cb22 	CALL SUBOPT_0x26D
                 ; 0013 00E4         return -1;
007e31 c002      	RJMP _0x20E004D
                 ; 0013 00E5     }
                 ; 0013 00E6 
                 ; 0013 00E7     return 1;   // -- return 1 indicated that it's a new file -- //
                 _0x26001A:
007e32 e0e1      	LDI  R30,LOW(1)
007e33 e0f0      	LDI  R31,HIGH(1)
                 _0x20E004D:
007e34 8118      	LDD  R17,Y+0
007e35 96ef      	ADIW R28,63
007e36 9667      	ADIW R28,23
007e37 5fde      	SUBI R29,-2
007e38 9508      	RET
                 ; 0013 00E8 }
                 ;/*============================================================*/
                 ;int SD_openFile(FIL *file, unsigned char *filename)
                 ; 0013 00EB {
                 _SD_openFile:
                 ; 0013 00EC     int     res;
                 ; 0013 00ED     char    filepath[50];
                 ; 0013 00EE 
                 ; 0013 00EF     if(sdFreeSpace == 0){ printDebug("<SD_openFile> SD Card not ready\r\n");    return -1;}
007e39 93ba      	ST   -Y,R27
007e3a 93aa      	ST   -Y,R26
007e3b 97e2      	SBIW R28,50
007e3c 931a      	ST   -Y,R17
007e3d 930a      	ST   -Y,R16
                 ;	*file -> Y+54
                 ;	*filename -> Y+52
                 ;	res -> R16,R17
                 ;	filepath -> Y+2
007e3e 940e ca0a 	CALL SUBOPT_0x242
007e40 f449      	BRNE _0x26001B
                +
007e41 e4ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 872 ) )
007e42 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 872 ) )
007e43 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 872 ) )
007e44 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 872 ) )
                 	__POINTD1FN _0x260000,872
007e45 940e bbba 	CALL SUBOPT_0x3
007e47 efef      	LDI  R30,LOW(65535)
007e48 efff      	LDI  R31,HIGH(65535)
007e49 c02a      	RJMP _0x20E004C
                 ; 0013 00F0 
                 ; 0013 00F1     sprintf(filepath,"%s%s",root_path,filename);
                 _0x26001B:
007e4a 940e c7e7 	CALL SUBOPT_0x1F2
007e4c 940e cb50 	CALL SUBOPT_0x274
007e4e adee      	LDD  R30,Y+62
007e4f adff      	LDD  R31,Y+62+1
007e50 940e bd18 	CALL SUBOPT_0x34
007e52 e088      	LDI  R24,8
007e53 940e bace 	CALL _sprintf
007e55 962e      	ADIW R28,14
                 ; 0013 00F2 
                 ; 0013 00F3     res = f_open( file, filepath, FA_WRITE | FA_READ | FA_OPEN_EXISTING);
007e56 a9ee      	LDD  R30,Y+54
007e57 a9ff      	LDD  R31,Y+54+1
007e58 940e cb55 	CALL SUBOPT_0x275
007e5a e0a3      	LDI  R26,LOW(3)
007e5b 940e b04c 	CALL _f_open
007e5d 2f0e      	MOV  R16,R30
007e5e 2711      	CLR  R17
                 ; 0013 00F4     if( res != FR_OK){
007e5f 2e00      	MOV  R0,R16
007e60 2a01      	OR   R0,R17
007e61 f081      	BREQ _0x26001C
                 ; 0013 00F5         printDebug("<SD_openFile> f_open() [%s] failed\r\n", filename);
                +
007e62 e7e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 906 ) )
007e63 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 906 ) )
007e64 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 906 ) )
007e65 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 906 ) )
                 	__POINTD1FN _0x260000,906
007e66 940e da29 	CALL __PUTPARD1
007e68 ade8      	LDD  R30,Y+56
007e69 adf9      	LDD  R31,Y+56+1
007e6a 940e bd18 	CALL SUBOPT_0x34
007e6c 940e bc2c 	CALL SUBOPT_0x12
                 ; 0013 00F6         error(res);
007e6e 2fa0      	MOV  R26,R16
007e6f 940e cb35 	CALL SUBOPT_0x270
                 ; 0013 00F7         sdFreeSpace = 0;
                 ; 0013 00F8         return -1;
007e71 c002      	RJMP _0x20E004C
                 ; 0013 00F9     }
                 ; 0013 00FA 
                 ; 0013 00FB     return 0;
                 _0x26001C:
007e72 e0e0      	LDI  R30,LOW(0)
007e73 e0f0      	LDI  R31,HIGH(0)
                 _0x20E004C:
007e74 8119      	LDD  R17,Y+1
007e75 8108      	LDD  R16,Y+0
007e76 96e8      	ADIW R28,56
007e77 9508      	RET
                 ; 0013 00FC }
                 ;/*============================================================*/
                 ;int SD_closeFile(FIL *file)
                 ; 0013 00FF {
                 _SD_closeFile:
                 ; 0013 0100     int res;
                 ; 0013 0101 
                 ; 0013 0102     if(sdFreeSpace == 0){ printDebug("<SD_closeFile> SD Card not ready\r\n");       return -1;}
007e78 940e bf27 	CALL SUBOPT_0x81
                 ;	*file -> Y+2
                 ;	res -> R16,R17
007e7a 940e ca0a 	CALL SUBOPT_0x242
007e7c f449      	BRNE _0x26001D
                +
007e7d e9e5     +LDI R30 , LOW ( 2 * _0x260000 + ( 943 ) )
007e7e e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 943 ) )
007e7f e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 943 ) )
007e80 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 943 ) )
                 	__POINTD1FN _0x260000,943
007e81 940e bbba 	CALL SUBOPT_0x3
007e83 efef      	LDI  R30,LOW(65535)
007e84 efff      	LDI  R31,HIGH(65535)
007e85 c016      	RJMP _0x20E004A
                 ; 0013 0103 
                 ; 0013 0104     res = f_close( file );
                 _0x26001D:
007e86 81aa      	LDD  R26,Y+2
007e87 81bb      	LDD  R27,Y+2+1
007e88 940e b4fb 	CALL _f_close
007e8a 2f0e      	MOV  R16,R30
007e8b 2711      	CLR  R17
                 ; 0013 0105     if( res != FR_OK ){
007e8c 2e00      	MOV  R0,R16
007e8d 2a01      	OR   R0,R17
007e8e f059      	BREQ _0x26001E
                 ; 0013 0106         printDebug("<SD_closeFile> f_close() failed\r\n");
                +
007e8f ebe8     +LDI R30 , LOW ( 2 * _0x260000 + ( 978 ) )
007e90 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 978 ) )
007e91 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 978 ) )
007e92 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 978 ) )
                 	__POINTD1FN _0x260000,978
007e93 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 0107         error(res);
007e95 2fa0      	MOV  R26,R16
007e96 de2c      	RCALL _error
                 ; 0013 0108         return -1;
007e97 efef      	LDI  R30,LOW(65535)
007e98 efff      	LDI  R31,HIGH(65535)
007e99 c002      	RJMP _0x20E004A
                 ; 0013 0109     }
                 ; 0013 010A 
                 ; 0013 010B     return 0;
                 _0x26001E:
007e9a e0e0      	LDI  R30,LOW(0)
007e9b e0f0      	LDI  R31,HIGH(0)
                 _0x20E004A:
007e9c 8119      	LDD  R17,Y+1
007e9d 8108      	LDD  R16,Y+0
                 _0x20E004B:
007e9e 9624      	ADIW R28,4
007e9f 9508      	RET
                 ; 0013 010C }
                 ;/*============================================================*/
                 ;int SD_init(void)
                 ; 0013 010F {
                 _SD_init:
                 ; 0013 0110     int                 err;
                 ; 0013 0111 
                 ; 0013 0112     printDebug("<SD_init> Start initial memory card\r\n");
007ea0 931a      	ST   -Y,R17
007ea1 930a      	ST   -Y,R16
                 ;	err -> R16,R17
                +
007ea2 edea     +LDI R30 , LOW ( 2 * _0x260000 + ( 1012 ) )
007ea3 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1012 ) )
007ea4 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1012 ) )
007ea5 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1012 ) )
                 	__POINTD1FN _0x260000,1012
007ea6 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 0113 
                 ; 0013 0114     /* point to the FATFS structure that holds
                 ; 0013 0115     information for the logical drive 0: */
                 ; 0013 0116     pfat=&fat;
007ea8 eeeb      	LDI  R30,LOW(_fat)
007ea9 e1f6      	LDI  R31,HIGH(_fat)
007eaa 93e0 191d 	STS  _pfat,R30
007eac 93f0 191e 	STS  _pfat+1,R31
                 ; 0013 0117 
                 ; 0013 0118     delay_ms(1000);
007eae eea8      	LDI  R26,LOW(1000)
007eaf e0b3      	LDI  R27,HIGH(1000)
007eb0 940e d6dd 	CALL _delay_ms
                 ; 0013 0119     printDebug("\r\n<SD_init> Mounting SD Card...");
                +
007eb2 e0e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 1050 ) )
007eb3 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1050 ) )
007eb4 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1050 ) )
007eb5 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1050 ) )
                 	__POINTD1FN _0x260000,1050
007eb6 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 011A     err = SD_mount();
007eb8 df05      	RCALL _SD_mount
007eb9 018f      	MOVW R16,R30
                 ; 0013 011B     if(err < 0){
007eba 2311      	TST  R17
007ebb f44a      	BRPL _0x26001F
                 ; 0013 011C         printDebug("<SD_init> SD_mount() failed\r\n");
                +
007ebc e2e0     +LDI R30 , LOW ( 2 * _0x260000 + ( 1082 ) )
007ebd e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1082 ) )
007ebe e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1082 ) )
007ebf e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1082 ) )
                 	__POINTD1FN _0x260000,1082
007ec0 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 011D         return -1;
007ec2 efef      	LDI  R30,LOW(65535)
007ec3 efff      	LDI  R31,HIGH(65535)
007ec4 c02b      	RJMP _0x20E0049
                 ; 0013 011E     }
                 ; 0013 011F 
                 ; 0013 0120 
                 ; 0013 0121     printDebug("\r\n<SD_init> Check Card Size...");
                 _0x26001F:
                +
007ec5 e3ee     +LDI R30 , LOW ( 2 * _0x260000 + ( 1112 ) )
007ec6 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1112 ) )
007ec7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1112 ) )
007ec8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1112 ) )
                 	__POINTD1FN _0x260000,1112
007ec9 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 0122 
                 ; 0013 0123     delay_ms(1000);
007ecb eea8      	LDI  R26,LOW(1000)
007ecc e0b3      	LDI  R27,HIGH(1000)
007ecd 940e d6dd 	CALL _delay_ms
                 ; 0013 0124 
                 ; 0013 0125     err = SD_readMemoryRemain(&sdFreeSpace);
007ecf e6ab      	LDI  R26,LOW(_sdFreeSpace)
007ed0 e1b4      	LDI  R27,HIGH(_sdFreeSpace)
007ed1 debe      	RCALL _SD_readMemoryRemain
007ed2 018f      	MOVW R16,R30
                 ; 0013 0126     if(err < 0){
007ed3 2311      	TST  R17
007ed4 f44a      	BRPL _0x260020
                 ; 0013 0127         printDebug("<SD_init> SD_readMemoryRemain() failed\r\n");
                +
007ed5 e5ed     +LDI R30 , LOW ( 2 * _0x260000 + ( 1143 ) )
007ed6 e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1143 ) )
007ed7 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1143 ) )
007ed8 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1143 ) )
                 	__POINTD1FN _0x260000,1143
007ed9 940e bbba 	CALL SUBOPT_0x3
                 ; 0013 0128         return -1;
007edb efef      	LDI  R30,LOW(65535)
007edc efff      	LDI  R31,HIGH(65535)
007edd c012      	RJMP _0x20E0049
                 ; 0013 0129     }
                 ; 0013 012A 
                 ; 0013 012B     /* display the number of free kbytes */
                 ; 0013 012C     printDebug("<SD_init> Free space on logical drive 0: %lu kbytes\r\n",sdFreeSpace);
                 _0x260020:
                +
007ede e8e6     +LDI R30 , LOW ( 2 * _0x260000 + ( 1184 ) )
007edf e5f1     +LDI R31 , HIGH ( 2 * _0x260000 + ( 1184 ) )
007ee0 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 1184 ) )
007ee1 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 1184 ) )
                 	__POINTD1FN _0x260000,1184
007ee2 940e da29 	CALL __PUTPARD1
007ee4 91e0 146b 	LDS  R30,_sdFreeSpace
007ee6 91f0 146c 	LDS  R31,_sdFreeSpace+1
007ee8 9160 146d 	LDS  R22,_sdFreeSpace+2
007eea 9170 146e 	LDS  R23,_sdFreeSpace+3
007eec 940e c58e 	CALL SUBOPT_0x18B
                 ; 0013 012D 
                 ; 0013 012E     return 0;
007eee e0e0      	LDI  R30,LOW(0)
007eef e0f0      	LDI  R31,HIGH(0)
                 _0x20E0049:
007ef0 9109      	LD   R16,Y+
007ef1 9119      	LD   R17,Y+
007ef2 9508      	RET
                 ; 0013 012F }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "log.h"
                 ;#include "debug.h"
                 ;
                 ;unsigned char LOGFILE_DATA[]            = "data.log";           // -- data log file name -- //
                 
                 	.DSEG
                 ;unsigned char LOGFILE_EVENT[]           = "event.log";          // -- event log file name -- //
                 ;unsigned char LOGFILE_ERROR[]           = "error.log";          // -- error log file name -- //
                 ;unsigned char LOG_INIT_STR[SIZE_RECORD] = {0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF};
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/************** Function Pointer to memcard.h *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int (*LOG_openFile)(FIL *, unsigned char *) = &SD_openFile;
                 ;int (*LOG_closeFile)(FIL *)                 = &SD_closeFile;
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Data Log Management **********************/
                 ;/**************************************************************/
                 ;char isDataLogEmpty     = 0;
                 ;/*============================================================*/
                 ;int LOG_insertData(FIL *file, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0014 001B {
                 
                 	.CSEG
                 _LOG_insertData:
                 ; 0014 001C     int                 res;
                 ; 0014 001D     unsigned long int   index;
                 ; 0014 001E     unsigned long int   startAddr;
                 ; 0014 001F     unsigned char       flag;
                 ; 0014 0020 
                 ; 0014 0021     res             = LOG_getLastInsert(file, &index);
007ef3 940e da2e 	CALL __PUTPARD2
007ef5 9728      	SBIW R28,8
007ef6 940e da9b 	CALL __SAVELOCR4
                 ;	*file -> Y+22
                 ;	timestamp -> Y+18
                 ;	channel -> Y+16
                 ;	value -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
007ef8 940e cb5c 	CALL SUBOPT_0x276
007efa 940e cb61 	CALL SUBOPT_0x277
                 ; 0014 0022     if(res < 0){    printDebug("<LOG_insertData> LOG_getLastInsert() failed\r\n");      return -1;  }
007efc f44a      	BRPL _0x280009
                +
007efd efe0     +LDI R30 , LOW ( 2 * _0x280000 + ( 0 ) )
007efe e5f1     +LDI R31 , HIGH ( 2 * _0x280000 + ( 0 ) )
007eff e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 0 ) )
007f00 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 0 ) )
                 	__POINTD1FN _0x280000,0
007f01 940e bbba 	CALL SUBOPT_0x3
007f03 efef      	LDI  R30,LOW(65535)
007f04 efff      	LDI  R31,HIGH(65535)
007f05 c078      	RJMP _0x20E0048
                 ; 0014 0023 
                 ; 0014 0024     flag            = 'P';
                 _0x280009:
007f06 e530      	LDI  R19,LOW(80)
                 ; 0014 0025 
                 ; 0014 0026     startAddr       = index2Addr(index,SIZE_LOG_DATA);
007f07 940e cb68 	CALL SUBOPT_0x278
007f09 940e cb6e 	CALL SUBOPT_0x279
                 ; 0014 0027 
                 ; 0014 0028     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
007f0b 940e cb5c 	CALL SUBOPT_0x276
007f0d 940e cb72 	CALL SUBOPT_0x27A
007f0f b7ed      	IN   R30,SPL
007f10 b7fe      	IN   R31,SPH
007f11 9731      	SBIW R30,1
007f12 93fa      	ST   -Y,R31
007f13 93ea      	ST   -Y,R30
007f14 934f      	PUSH R20
007f15 933f      	PUSH R19
007f16 940e bee0 	CALL SUBOPT_0x75
007f18 ddca      	RCALL _SD_writeData
007f19 913f      	POP  R19
007f1a 914f      	POP  R20
007f1b 018f      	MOVW R16,R30
                 ; 0014 0029     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(flag) failed\r\n");       return -1;  }
007f1c 2311      	TST  R17
007f1d f44a      	BRPL _0x28000A
                +
007f1e e1ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 46 ) )
007f1f e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 46 ) )
007f20 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 46 ) )
007f21 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 46 ) )
                 	__POINTD1FN _0x280000,46
007f22 940e bbba 	CALL SUBOPT_0x3
007f24 efef      	LDI  R30,LOW(65535)
007f25 efff      	LDI  R31,HIGH(65535)
007f26 c057      	RJMP _0x20E0048
                 ; 0014 002A 
                 ; 0014 002B     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x28000A:
007f27 940e cb5c 	CALL SUBOPT_0x276
007f29 940e cb77 	CALL SUBOPT_0x27B
007f2b 940e da29 	CALL __PUTPARD1
007f2d 01fe      	MOVW R30,R28
007f2e 9678      	ADIW R30,24
007f2f 940e cb7b 	CALL SUBOPT_0x27C
007f31 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 002C     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(timestamp) failed\r\n");  return -1;  }
007f33 f44a      	BRPL _0x28000B
                +
007f34 e4eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 91 ) )
007f35 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 91 ) )
007f36 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 91 ) )
007f37 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 91 ) )
                 	__POINTD1FN _0x280000,91
007f38 940e bbba 	CALL SUBOPT_0x3
007f3a efef      	LDI  R30,LOW(65535)
007f3b efff      	LDI  R31,HIGH(65535)
007f3c c041      	RJMP _0x20E0048
                 ; 0014 002D 
                 ; 0014 002E     res             = SD_writeData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) &channel,     SIZE_CHANNEL);
                 _0x28000B:
007f3d 940e cb5c 	CALL SUBOPT_0x276
007f3f 940e cb84 	CALL SUBOPT_0x27E
007f41 01fe      	MOVW R30,R28
007f42 9676      	ADIW R30,22
007f43 93fa      	ST   -Y,R31
007f44 93ea      	ST   -Y,R30
007f45 940e bed9 	CALL SUBOPT_0x73
007f47 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 002F     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(channel) failed\r\n");    return -1;  }
007f49 f44a      	BRPL _0x28000C
                +
007f4a e7ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 141 ) )
007f4b e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 141 ) )
007f4c e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 141 ) )
007f4d e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 141 ) )
                 	__POINTD1FN _0x280000,141
007f4e 940e bbba 	CALL SUBOPT_0x3
007f50 efef      	LDI  R30,LOW(65535)
007f51 efff      	LDI  R31,HIGH(65535)
007f52 c02b      	RJMP _0x20E0048
                 ; 0014 0030 
                 ; 0014 0031     res             = SD_writeData(file, startAddr+OFFSET_DATA_VALUE,   (unsigned char *) &value,       SIZE_VALUE);
                 _0x28000C:
007f53 940e cb5c 	CALL SUBOPT_0x276
007f55 940e cb8d 	CALL SUBOPT_0x27F
007f57 940e da29 	CALL __PUTPARD1
007f59 940e be91 	CALL SUBOPT_0x6C
007f5b 940e bee6 	CALL SUBOPT_0x77
007f5d 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 0032     if(res < 0){    printDebug("<LOG_insertData> SD_writeData(value) failed\r\n");      return -1;  }
007f5f f44a      	BRPL _0x28000D
                +
007f60 eaed     +LDI R30 , LOW ( 2 * _0x280000 + ( 189 ) )
007f61 e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 189 ) )
007f62 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 189 ) )
007f63 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 189 ) )
                 	__POINTD1FN _0x280000,189
007f64 940e bbba 	CALL SUBOPT_0x3
007f66 efef      	LDI  R30,LOW(65535)
007f67 efff      	LDI  R31,HIGH(65535)
007f68 c015      	RJMP _0x20E0048
                 ; 0014 0033 
                 ; 0014 0034     res = LOG_setLastInsert(file,++index);
                 _0x28000D:
007f69 940e cb5c 	CALL SUBOPT_0x276
007f6b 940e cb94 	CALL SUBOPT_0x280
                 ; 0014 0035     if(res < 0){    printDebug("<LOG_insertData> LOG_setLastInsert(%ld) failed\r\n",index);      return -1;  }
007f6d f45a      	BRPL _0x28000E
                +
007f6e edeb     +LDI R30 , LOW ( 2 * _0x280000 + ( 235 ) )
007f6f e5f2     +LDI R31 , HIGH ( 2 * _0x280000 + ( 235 ) )
007f70 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 235 ) )
007f71 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 235 ) )
                 	__POINTD1FN _0x280000,235
007f72 940e bf6f 	CALL SUBOPT_0x8D
007f74 940e c58e 	CALL SUBOPT_0x18B
007f76 efef      	LDI  R30,LOW(65535)
007f77 efff      	LDI  R31,HIGH(65535)
007f78 c005      	RJMP _0x20E0048
                 ; 0014 0036 
                 ; 0014 0037     isDataLogEmpty  = 0;
                 _0x28000E:
007f79 e0e0      	LDI  R30,LOW(0)
007f7a 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0038     return index;
007f7c 85e8      	LDD  R30,Y+8
007f7d 85f9      	LDD  R31,Y+8+1
                 _0x20E0048:
007f7e 940e daa2 	CALL __LOADLOCR4
007f80 9668      	ADIW R28,24
007f81 9508      	RET
                 ; 0014 0039 }
                 ;/*============================================================*/
                 ;int LOG_readData(FIL *file, unsigned long int *timestamp, unsigned int *channel, float *value, unsigned long int *index)
                 ; 0014 003C {
                 _LOG_readData:
                 ; 0014 003D     int                 res;
                 ; 0014 003E     unsigned long int   lastLogInsert;
                 ; 0014 003F     unsigned long int   lastLogSend;
                 ; 0014 0040     unsigned long int   startAddr;
                 ; 0014 0041     unsigned char       flag;
                 ; 0014 0042 
                 ; 0014 0043 
                 ; 0014 0044     res             = LOG_getLastInsert(file, &lastLogInsert);
007f82 940e c1c3 	CALL SUBOPT_0xEA
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*channel -> Y+20
                 ;	*value -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
007f84 940e cba3 	CALL SUBOPT_0x281
007f86 940e cba8 	CALL SUBOPT_0x282
                 ; 0014 0045     if(res < 0){    printDebug("<LOG_readData> LOG_getLastInsert() failed\r\n");        return -1;  }
007f88 f44a      	BRPL _0x28000F
                +
007f89 e0ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 284 ) )
007f8a e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 284 ) )
007f8b e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 284 ) )
007f8c e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 284 ) )
                 	__POINTD1FN _0x280000,284
007f8d 940e bbba 	CALL SUBOPT_0x3
007f8f efef      	LDI  R30,LOW(65535)
007f90 efff      	LDI  R31,HIGH(65535)
007f91 c1b9      	RJMP _0x20E0045
                 ; 0014 0046     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28000F:
007f92 940e cba3 	CALL SUBOPT_0x281
007f94 940e cbaf 	CALL SUBOPT_0x283
                 ; 0014 0047     if(res < 0){    printDebug("<LOG_readData> LOG_getLastSend() failed\r\n");          return -1;  }
007f96 f44a      	BRPL _0x280010
                +
007f97 e3e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 328 ) )
007f98 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 328 ) )
007f99 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 328 ) )
007f9a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 328 ) )
                 	__POINTD1FN _0x280000,328
007f9b 940e bbba 	CALL SUBOPT_0x3
007f9d efef      	LDI  R30,LOW(65535)
007f9e efff      	LDI  R31,HIGH(65535)
007f9f c1ab      	RJMP _0x20E0045
                 ; 0014 0048 
                 ; 0014 0049     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x280010:
007fa0 940e cbb6 	CALL SUBOPT_0x284
007fa2 940e cbbc 	CALL SUBOPT_0x285
                 ; 0014 004A 
                 ; 0014 004B     if(lastLogSend >= lastLogInsert)
007fa4 940e cbc2 	CALL SUBOPT_0x286
007fa6 f0b8      	BRLO _0x280011
                 ; 0014 004C     {
                 ; 0014 004D         printDebug("<LOG_readData> Log empty..!!\r\n");
                +
007fa7 e9e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 421 ) )
007fa8 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 421 ) )
007fa9 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 421 ) )
007faa e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 421 ) )
                 	__POINTD1FN _0x280000,421
007fab 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 004E 
                 ; 0014 004F         res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
007fad 940e cbc9 	CALL SUBOPT_0x287
                 ; 0014 0050         if(res < 0)
007faf f442      	BRPL _0x280012
                 ; 0014 0051         {
                 ; 0014 0052             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
                +
007fb0 ebe4     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
007fb1 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
007fb2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
007fb3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
007fb4 940e be40 	CALL SUBOPT_0x5F
007fb6 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 0053         }
                 ; 0014 0054 
                 ; 0014 0055         isDataLogEmpty  = 1;
                 _0x280012:
007fb8 e0e1      	LDI  R30,LOW(1)
007fb9 93e0 14dd 	STS  _isDataLogEmpty,R30
                 ; 0014 0056         return 0;
007fbb e0e0      	LDI  R30,LOW(0)
007fbc e0f0      	LDI  R31,HIGH(0)
007fbd c18d      	RJMP _0x20E0045
                 ; 0014 0057     }
                 ; 0014 0058 
                 ; 0014 0059     startAddr       = index2Addr(lastLogSend,SIZE_LOG_DATA);
                 _0x280011:
007fbe 940e cb68 	CALL SUBOPT_0x278
007fc0 940e cb6e 	CALL SUBOPT_0x279
                 ; 0014 005A 
                 ; 0014 005B     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
007fc2 940e cba3 	CALL SUBOPT_0x281
007fc4 940e cb72 	CALL SUBOPT_0x27A
007fc6 b7ed      	IN   R30,SPL
007fc7 b7fe      	IN   R31,SPH
007fc8 9731      	SBIW R30,1
007fc9 93fa      	ST   -Y,R31
007fca 93ea      	ST   -Y,R30
007fcb 934f      	PUSH R20
007fcc 933f      	PUSH R19
007fcd 940e bee0 	CALL SUBOPT_0x75
007fcf dd6a      	RCALL _SD_readData
007fd0 913f      	POP  R19
007fd1 914f      	POP  R20
007fd2 018f      	MOVW R16,R30
                 ; 0014 005C     if(res < 0){    printDebug("<LOG_readData> SD_readData(flag) failed\r\n");          return -1;  }
007fd3 2311      	TST  R17
007fd4 f44a      	BRPL _0x280013
                +
007fd5 eee5     +LDI R30 , LOW ( 2 * _0x280000 + ( 501 ) )
007fd6 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 501 ) )
007fd7 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 501 ) )
007fd8 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 501 ) )
                 	__POINTD1FN _0x280000,501
007fd9 940e bbba 	CALL SUBOPT_0x3
007fdb efef      	LDI  R30,LOW(65535)
007fdc efff      	LDI  R31,HIGH(65535)
007fdd c16d      	RJMP _0x20E0045
                 ; 0014 005D 
                 ; 0014 005E     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280013:
007fde 940e cba3 	CALL SUBOPT_0x281
007fe0 940e cb77 	CALL SUBOPT_0x27B
007fe2 940e c1f3 	CALL SUBOPT_0xF4
007fe4 940e cb7b 	CALL SUBOPT_0x27C
007fe6 940e cbda 	CALL SUBOPT_0x288
                 ; 0014 005F     if(res < 0){    printDebug("<LOG_readData> SD_readData(timestamp) failed\r\n");     return -1;  }
007fe8 f44a      	BRPL _0x280014
                +
007fe9 e0ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 543 ) )
007fea e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 543 ) )
007feb e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 543 ) )
007fec e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 543 ) )
                 	__POINTD1FN _0x280000,543
007fed 940e bbba 	CALL SUBOPT_0x3
007fef efef      	LDI  R30,LOW(65535)
007ff0 efff      	LDI  R31,HIGH(65535)
007ff1 c159      	RJMP _0x20E0045
                 ; 0014 0060 
                 ; 0014 0061     res             = SD_readData(file, startAddr+OFFSET_DATA_CHANNEL, (unsigned char *) channel,       SIZE_CHANNEL);
                 _0x280014:
007ff2 940e cba3 	CALL SUBOPT_0x281
007ff4 940e cb84 	CALL SUBOPT_0x27E
007ff6 8dea      	LDD  R30,Y+26
007ff7 8dfb      	LDD  R31,Y+26+1
007ff8 93fa      	ST   -Y,R31
007ff9 93ea      	ST   -Y,R30
007ffa 940e bed9 	CALL SUBOPT_0x73
007ffc 940e cbda 	CALL SUBOPT_0x288
                 ; 0014 0062     if(res < 0){    printDebug("<LOG_readData> SD_readData(channel) failed\r\n");       return -1;  }
007ffe f44a      	BRPL _0x280015
                +
007fff e3ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 590 ) )
008000 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 590 ) )
008001 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 590 ) )
008002 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 590 ) )
                 	__POINTD1FN _0x280000,590
008003 940e bbba 	CALL SUBOPT_0x3
008005 efef      	LDI  R30,LOW(65535)
008006 efff      	LDI  R31,HIGH(65535)
008007 c143      	RJMP _0x20E0045
                 ; 0014 0063 
                 ; 0014 0064     res             = SD_readData(file, startAddr+OFFSET_DATA_VALUE,    (unsigned char *) value,        SIZE_VALUE);
                 _0x280015:
008008 940e cba3 	CALL SUBOPT_0x281
00800a 940e cb8d 	CALL SUBOPT_0x27F
00800c 940e c94b 	CALL SUBOPT_0x224
00800e 940e cb7b 	CALL SUBOPT_0x27C
008010 940e cbda 	CALL SUBOPT_0x288
                 ; 0014 0065     if(res < 0){    printDebug("<LOG_readData> SD_readData(value) failed\r\n");         return -1;  }
008012 f44a      	BRPL _0x280016
                +
008013 e6eb     +LDI R30 , LOW ( 2 * _0x280000 + ( 635 ) )
008014 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 635 ) )
008015 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 635 ) )
008016 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 635 ) )
                 	__POINTD1FN _0x280000,635
008017 940e bbba 	CALL SUBOPT_0x3
008019 efef      	LDI  R30,LOW(65535)
00801a efff      	LDI  R31,HIGH(65535)
00801b c12f      	RJMP _0x20E0045
                 ; 0014 0066 
                 ; 0014 0067     *index          = lastLogSend;
                 _0x280016:
00801c c124      	RJMP _0x20E0046
                 ; 0014 0068 
                 ; 0014 0069     return 1;
                 ; 0014 006A }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Event Log Management *********************/
                 ;/**************************************************************/
                 ;char isEventLogEmpty    = 0;
                 ;/*============================================================*/
                 ;int LOG_insertEvent(FIL *file, unsigned long int timestamp, unsigned char id, unsigned char status)
                 ; 0014 0073 {
                 _LOG_insertEvent:
                 ; 0014 0074     int                 res;
                 ; 0014 0075     unsigned long int   index;
                 ; 0014 0076     unsigned long int   startAddr;
                 ; 0014 0077     unsigned char       flag;
                 ; 0014 0078 
                 ; 0014 0079     res = LOG_getLastInsert(file, &index);
00801d 93aa      	ST   -Y,R26
00801e 9728      	SBIW R28,8
00801f 940e da9b 	CALL __SAVELOCR4
                 ;	*file -> Y+18
                 ;	timestamp -> Y+14
                 ;	id -> Y+13
                 ;	status -> Y+12
                 ;	res -> R16,R17
                 ;	index -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
008021 940e cbdf 	CALL SUBOPT_0x289
008023 940e cb61 	CALL SUBOPT_0x277
                 ; 0014 007A     if(res < 0){    printDebug("<LOG_insertEvent> LOG_getLastInsert() failed\r\n");     return -1;  }
008025 f44a      	BRPL _0x280017
                +
008026 e9e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 678 ) )
008027 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 678 ) )
008028 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 678 ) )
008029 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 678 ) )
                 	__POINTD1FN _0x280000,678
00802a 940e bbba 	CALL SUBOPT_0x3
00802c efef      	LDI  R30,LOW(65535)
00802d efff      	LDI  R31,HIGH(65535)
00802e c076      	RJMP _0x20E0047
                 ; 0014 007B 
                 ; 0014 007C     flag            = 'P';
                 _0x280017:
00802f e530      	LDI  R19,LOW(80)
                 ; 0014 007D 
                 ; 0014 007E     startAddr       = index2Addr(index,SIZE_LOG_EVENT);
008030 940e cbe4 	CALL SUBOPT_0x28A
008032 940e cb6e 	CALL SUBOPT_0x279
                 ; 0014 007F 
                 ; 0014 0080     res             = SD_writeData(file, startAddr+OFFSET_FLAG,         (unsigned char *) &flag,        SIZE_FLAG);
008034 940e cbdf 	CALL SUBOPT_0x289
008036 940e cb72 	CALL SUBOPT_0x27A
008038 b7ed      	IN   R30,SPL
008039 b7fe      	IN   R31,SPH
00803a 9731      	SBIW R30,1
00803b 93fa      	ST   -Y,R31
00803c 93ea      	ST   -Y,R30
00803d 934f      	PUSH R20
00803e 933f      	PUSH R19
00803f 940e bee0 	CALL SUBOPT_0x75
008041 dca1      	RCALL _SD_writeData
008042 913f      	POP  R19
008043 914f      	POP  R20
008044 018f      	MOVW R16,R30
                 ; 0014 0081     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(flag) failed\r\n");      return -1;  }
008045 2311      	TST  R17
008046 f44a      	BRPL _0x280018
                +
008047 ece5     +LDI R30 , LOW ( 2 * _0x280000 + ( 725 ) )
008048 e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 725 ) )
008049 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 725 ) )
00804a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 725 ) )
                 	__POINTD1FN _0x280000,725
00804b 940e bbba 	CALL SUBOPT_0x3
00804d efef      	LDI  R30,LOW(65535)
00804e efff      	LDI  R31,HIGH(65535)
00804f c055      	RJMP _0x20E0047
                 ; 0014 0082 
                 ; 0014 0083     res             = SD_writeData(file, startAddr+OFFSET_TIMESTAMP,    (unsigned char *) &timestamp,   SIZE_TIMESTAMP);
                 _0x280018:
008050 940e cbdf 	CALL SUBOPT_0x289
008052 940e cb77 	CALL SUBOPT_0x27B
008054 940e da29 	CALL __PUTPARD1
008056 01fe      	MOVW R30,R28
008057 9674      	ADIW R30,20
008058 940e cb7b 	CALL SUBOPT_0x27C
00805a 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 0084     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(timestamp) failed\r\n"); return -1;  }
00805c f44a      	BRPL _0x280019
                +
00805d efe3     +LDI R30 , LOW ( 2 * _0x280000 + ( 771 ) )
00805e e5f4     +LDI R31 , HIGH ( 2 * _0x280000 + ( 771 ) )
00805f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 771 ) )
008060 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 771 ) )
                 	__POINTD1FN _0x280000,771
008061 940e bbba 	CALL SUBOPT_0x3
008063 efef      	LDI  R30,LOW(65535)
008064 efff      	LDI  R31,HIGH(65535)
008065 c03f      	RJMP _0x20E0047
                 ; 0014 0085 
                 ; 0014 0086     res             = SD_writeData(file, startAddr+OFFSET_EVENT_ID,     (unsigned char *) &id,          SIZE_ID);
                 _0x280019:
008066 940e cbdf 	CALL SUBOPT_0x289
008068 940e cb84 	CALL SUBOPT_0x27E
00806a 01fe      	MOVW R30,R28
00806b 9673      	ADIW R30,19
00806c 940e cbea 	CALL SUBOPT_0x28B
00806e 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 0087     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(id) failed\r\n");        return -1;  }
008070 f44a      	BRPL _0x28001A
                +
008071 e2e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 822 ) )
008072 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 822 ) )
008073 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 822 ) )
008074 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 822 ) )
                 	__POINTD1FN _0x280000,822
008075 940e bbba 	CALL SUBOPT_0x3
008077 efef      	LDI  R30,LOW(65535)
008078 efff      	LDI  R31,HIGH(65535)
008079 c02b      	RJMP _0x20E0047
                 ; 0014 0088 
                 ; 0014 0089     res             = SD_writeData(file, startAddr+OFFSET_EVENT_STATUS, (unsigned char *) &status,      SIZE_STATUS);
                 _0x28001A:
00807a 940e cbdf 	CALL SUBOPT_0x289
00807c 940e cbee 	CALL SUBOPT_0x28C
00807e 940e da29 	CALL __PUTPARD1
008080 940e be91 	CALL SUBOPT_0x6C
008082 940e bee0 	CALL SUBOPT_0x75
008084 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 008A     if(res < 0){    printDebug("<LOG_insertEvent> SD_writeData(status) failed\r\n");    return -1;  }
008086 f44a      	BRPL _0x28001B
                +
008087 e5e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 866 ) )
008088 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 866 ) )
008089 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 866 ) )
00808a e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 866 ) )
                 	__POINTD1FN _0x280000,866
00808b 940e bbba 	CALL SUBOPT_0x3
00808d efef      	LDI  R30,LOW(65535)
00808e efff      	LDI  R31,HIGH(65535)
00808f c015      	RJMP _0x20E0047
                 ; 0014 008B 
                 ; 0014 008C     res = LOG_setLastInsert(file,++index);
                 _0x28001B:
008090 940e cbdf 	CALL SUBOPT_0x289
008092 940e cb94 	CALL SUBOPT_0x280
                 ; 0014 008D     if(res < 0){    printDebug("<LOG_insertEvent> LOG_setLastInsert(%ld) failed\r\n",index);     return -1;  }
008094 f45a      	BRPL _0x28001C
                +
008095 e8e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 914 ) )
008096 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 914 ) )
008097 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 914 ) )
008098 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 914 ) )
                 	__POINTD1FN _0x280000,914
008099 940e bf6f 	CALL SUBOPT_0x8D
00809b 940e c58e 	CALL SUBOPT_0x18B
00809d efef      	LDI  R30,LOW(65535)
00809e efff      	LDI  R31,HIGH(65535)
00809f c005      	RJMP _0x20E0047
                 ; 0014 008E 
                 ; 0014 008F     isEventLogEmpty = 0;
                 _0x28001C:
0080a0 e0e0      	LDI  R30,LOW(0)
0080a1 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 0090 
                 ; 0014 0091     return index;
0080a3 85e8      	LDD  R30,Y+8
0080a4 85f9      	LDD  R31,Y+8+1
                 _0x20E0047:
0080a5 940e daa2 	CALL __LOADLOCR4
0080a7 9664      	ADIW R28,20
0080a8 9508      	RET
                 ; 0014 0092 }
                 ;/*============================================================*/
                 ;int LOG_readEvent(FIL *file, unsigned long int *timestamp, unsigned char *id, unsigned char *status, unsigned long int *index)
                 ; 0014 0095 {
                 _LOG_readEvent:
                 ; 0014 0096     int                 res;
                 ; 0014 0097     unsigned long int   lastLogInsert;
                 ; 0014 0098     unsigned long int   lastLogSend;
                 ; 0014 0099     unsigned long int   startAddr;
                 ; 0014 009A     unsigned char       flag;
                 ; 0014 009B 
                 ; 0014 009C 
                 ; 0014 009D     res             = LOG_getLastInsert(file, &lastLogInsert);
0080a9 940e c1c3 	CALL SUBOPT_0xEA
                 ;	*file -> Y+24
                 ;	*timestamp -> Y+22
                 ;	*id -> Y+20
                 ;	*status -> Y+18
                 ;	*index -> Y+16
                 ;	res -> R16,R17
                 ;	lastLogInsert -> Y+12
                 ;	lastLogSend -> Y+8
                 ;	startAddr -> Y+4
                 ;	flag -> R19
0080ab 940e cba3 	CALL SUBOPT_0x281
0080ad 940e cba8 	CALL SUBOPT_0x282
                 ; 0014 009E     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastInsert() failed\r\n");       return -1;  }
0080af f44a      	BRPL _0x28001D
                +
0080b0 ebe4     +LDI R30 , LOW ( 2 * _0x280000 + ( 964 ) )
0080b1 e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 964 ) )
0080b2 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 964 ) )
0080b3 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 964 ) )
                 	__POINTD1FN _0x280000,964
0080b4 940e bbba 	CALL SUBOPT_0x3
0080b6 efef      	LDI  R30,LOW(65535)
0080b7 efff      	LDI  R31,HIGH(65535)
0080b8 c092      	RJMP _0x20E0045
                 ; 0014 009F     res             = LOG_getLastSend(file, &lastLogSend);
                 _0x28001D:
0080b9 940e cba3 	CALL SUBOPT_0x281
0080bb 940e cbaf 	CALL SUBOPT_0x283
                 ; 0014 00A0     if(res < 0){    printDebug("<LOG_readEvent> LOG_getLastSend() failed\r\n");         return -1;  }
0080bd f44a      	BRPL _0x28001E
                +
0080be eee1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1009 ) )
0080bf e5f5     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1009 ) )
0080c0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1009 ) )
0080c1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1009 ) )
                 	__POINTD1FN _0x280000,1009
0080c2 940e bbba 	CALL SUBOPT_0x3
0080c4 efef      	LDI  R30,LOW(65535)
0080c5 efff      	LDI  R31,HIGH(65535)
0080c6 c084      	RJMP _0x20E0045
                 ; 0014 00A1 
                 ; 0014 00A2     printDebug("<LOG_readEvent> lastSend/lastInsert  --> %ld/%ld\r\n",lastLogSend,lastLogInsert);
                 _0x28001E:
0080c7 940e cbb6 	CALL SUBOPT_0x284
0080c9 940e cbbc 	CALL SUBOPT_0x285
                 ; 0014 00A3 
                 ; 0014 00A4     if(lastLogSend >= lastLogInsert)
0080cb 940e cbc2 	CALL SUBOPT_0x286
0080cd f0b8      	BRLO _0x28001F
                 ; 0014 00A5     {
                 ; 0014 00A6         printDebug("<LOG_readEvent> Log empty..!!\r\n");
                +
0080ce e0ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1052 ) )
0080cf e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1052 ) )
0080d0 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1052 ) )
0080d1 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1052 ) )
                 	__POINTD1FN _0x280000,1052
0080d2 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 00A7 
                 ; 0014 00A8         res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0080d4 940e cbf5 	CALL SUBOPT_0x28D
                 ; 0014 00A9         if(res < 0)
0080d6 f442      	BRPL _0x280020
                 ; 0014 00AA         {
                 ; 0014 00AB             printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
                +
0080d7 ebe4     +LDI R30 , LOW ( 2 * _0x280000 + ( 452 ) )
0080d8 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 452 ) )
0080d9 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 452 ) )
0080da e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 452 ) )
                 	__POINTD1FN _0x280000,452
0080db 940e be87 	CALL SUBOPT_0x6A
0080dd 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 00AC         }
                 ; 0014 00AD 
                 ; 0014 00AE         isEventLogEmpty     = 1;
                 _0x280020:
0080df e0e1      	LDI  R30,LOW(1)
0080e0 93e0 14de 	STS  _isEventLogEmpty,R30
                 ; 0014 00AF         return 0;
0080e2 e0e0      	LDI  R30,LOW(0)
0080e3 e0f0      	LDI  R31,HIGH(0)
0080e4 c066      	RJMP _0x20E0045
                 ; 0014 00B0     }
                 ; 0014 00B1 
                 ; 0014 00B2     startAddr       = index2Addr(lastLogSend,SIZE_LOG_EVENT);
                 _0x28001F:
0080e5 940e cbe4 	CALL SUBOPT_0x28A
0080e7 940e cb6e 	CALL SUBOPT_0x279
                 ; 0014 00B3 
                 ; 0014 00B4     res             = SD_readData(file, startAddr+OFFSET_FLAG,          (unsigned char *) &flag,        SIZE_FLAG);
0080e9 940e cba3 	CALL SUBOPT_0x281
0080eb 940e cb72 	CALL SUBOPT_0x27A
0080ed b7ed      	IN   R30,SPL
0080ee b7fe      	IN   R31,SPH
0080ef 9731      	SBIW R30,1
0080f0 93fa      	ST   -Y,R31
0080f1 93ea      	ST   -Y,R30
0080f2 934f      	PUSH R20
0080f3 933f      	PUSH R19
0080f4 940e bee0 	CALL SUBOPT_0x75
0080f6 dc43      	RCALL _SD_readData
0080f7 913f      	POP  R19
0080f8 914f      	POP  R20
0080f9 018f      	MOVW R16,R30
                 ; 0014 00B5     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(flag) failed\r\n");         return -1;  }
0080fa 2311      	TST  R17
0080fb f44a      	BRPL _0x280021
                +
0080fc e2ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1084 ) )
0080fd e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1084 ) )
0080fe e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1084 ) )
0080ff e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1084 ) )
                 	__POINTD1FN _0x280000,1084
008100 940e bbba 	CALL SUBOPT_0x3
008102 efef      	LDI  R30,LOW(65535)
008103 efff      	LDI  R31,HIGH(65535)
008104 c046      	RJMP _0x20E0045
                 ; 0014 00B6 
                 ; 0014 00B7     res             = SD_readData(file, startAddr+OFFSET_TIMESTAMP,     (unsigned char *) timestamp,    SIZE_TIMESTAMP);
                 _0x280021:
008105 940e cba3 	CALL SUBOPT_0x281
008107 940e cb77 	CALL SUBOPT_0x27B
008109 940e c1f3 	CALL SUBOPT_0xF4
00810b 940e cb7b 	CALL SUBOPT_0x27C
00810d 940e cbda 	CALL SUBOPT_0x288
                 ; 0014 00B8     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(timestamp) failed\r\n");    return -1;  }
00810f f44a      	BRPL _0x280022
                +
008110 e5e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1127 ) )
008111 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1127 ) )
008112 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1127 ) )
008113 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1127 ) )
                 	__POINTD1FN _0x280000,1127
008114 940e bbba 	CALL SUBOPT_0x3
008116 efef      	LDI  R30,LOW(65535)
008117 efff      	LDI  R31,HIGH(65535)
008118 c032      	RJMP _0x20E0045
                 ; 0014 00B9 
                 ; 0014 00BA     res             = SD_readData(file, startAddr+OFFSET_EVENT_ID,      (unsigned char *) id,           SIZE_ID);
                 _0x280022:
008119 940e cba3 	CALL SUBOPT_0x281
00811b 940e cb84 	CALL SUBOPT_0x27E
00811d 8dea      	LDD  R30,Y+26
00811e 8dfb      	LDD  R31,Y+26+1
00811f 940e cbea 	CALL SUBOPT_0x28B
008121 940e cbda 	CALL SUBOPT_0x288
                 ; 0014 00BB     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(id) failed\r\n");           return -1;  }
008123 f44a      	BRPL _0x280023
                +
008124 e8e7     +LDI R30 , LOW ( 2 * _0x280000 + ( 1175 ) )
008125 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1175 ) )
008126 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1175 ) )
008127 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1175 ) )
                 	__POINTD1FN _0x280000,1175
008128 940e bbba 	CALL SUBOPT_0x3
00812a efef      	LDI  R30,LOW(65535)
00812b efff      	LDI  R31,HIGH(65535)
00812c c01e      	RJMP _0x20E0045
                 ; 0014 00BC 
                 ; 0014 00BD     res             = SD_readData(file, startAddr+OFFSET_EVENT_STATUS,  (unsigned char *) status,       SIZE_STATUS);
                 _0x280023:
00812d 940e cba3 	CALL SUBOPT_0x281
00812f 940e cbee 	CALL SUBOPT_0x28C
008131 940e c94b 	CALL SUBOPT_0x224
008133 940e cbea 	CALL SUBOPT_0x28B
008135 940e cbda 	CALL SUBOPT_0x288
                 ; 0014 00BE     if(res < 0){    printDebug("<LOG_readEvent> SD_readData(status) failed\r\n");       return -1;  }
008137 f44a      	BRPL _0x280024
                +
008138 ebe0     +LDI R30 , LOW ( 2 * _0x280000 + ( 1216 ) )
008139 e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1216 ) )
00813a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1216 ) )
00813b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1216 ) )
                 	__POINTD1FN _0x280000,1216
00813c 940e bbba 	CALL SUBOPT_0x3
00813e efef      	LDI  R30,LOW(65535)
00813f efff      	LDI  R31,HIGH(65535)
008140 c00a      	RJMP _0x20E0045
                 ; 0014 00BF 
                 ; 0014 00C0     *index  = lastLogSend;
                 _0x280024:
                 _0x20E0046:
                +
008141 85e8     +LDD R30 , Y + 8
008142 85f9     +LDD R31 , Y + 8 + 1
008143 856a     +LDD R22 , Y + 8 + 2
008144 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
008145 89a8      	LDD  R26,Y+16
008146 89b9      	LDD  R27,Y+16+1
008147 940e d9ff 	CALL __PUTDP1
                 ; 0014 00C1     return 1;
008149 e0e1      	LDI  R30,LOW(1)
00814a e0f0      	LDI  R31,HIGH(1)
                 _0x20E0045:
00814b 940e daa2 	CALL __LOADLOCR4
00814d 966a      	ADIW R28,26
00814e 9508      	RET
                 ; 0014 00C2 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/******************* Log Indexing Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int LOG_getLastInsert(FIL *file, unsigned long int *index)
                 ; 0014 00CA {
                 _LOG_getLastInsert:
                 ; 0014 00CB     int             res;
                 ; 0014 00CC 
                 ; 0014 00CD     res = SD_readData(file, 0, (unsigned char *) index, sizeof(unsigned long int));
00814f 940e bf27 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
008151 940e cc06 	CALL SUBOPT_0x28E
008153 940e cc0b 	CALL SUBOPT_0x28F
008155 940e c5b7 	CALL SUBOPT_0x194
008157 940e bee6 	CALL SUBOPT_0x77
008159 940e cbda 	CALL SUBOPT_0x288
                 ; 0014 00CE     if(res < 0)
00815b f44a      	BRPL _0x280025
                 ; 0014 00CF     {
                 ; 0014 00D0         printDebug("<LOG_getLastInsert> SD_readData() failed\r\n");
                +
00815c eded     +LDI R30 , LOW ( 2 * _0x280000 + ( 1261 ) )
00815d e5f6     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1261 ) )
00815e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1261 ) )
00815f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1261 ) )
                 	__POINTD1FN _0x280000,1261
008160 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 00D1         return -1;
008162 efef      	LDI  R30,LOW(65535)
008163 efff      	LDI  R31,HIGH(65535)
008164 c048      	RJMP _0x20E0043
                 ; 0014 00D2     }
                 ; 0014 00D3 
                 ; 0014 00D4     printDebug("<LOG_getLastInsert> got %ld\r\n", *index);
                 _0x280025:
                +
008165 e0e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1304 ) )
008166 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1304 ) )
008167 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1304 ) )
008168 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1304 ) )
                 	__POINTD1FN _0x280000,1304
008169 c03b      	RJMP _0x20E0044
                 ; 0014 00D5 
                 ; 0014 00D6     return 0;
                 ; 0014 00D7 }
                 ;/*============================================================*/
                 ;int LOG_setLastInsert(FIL *file, unsigned long int index)
                 ; 0014 00DA {
                 _LOG_setLastInsert:
                 ; 0014 00DB     int             res;
                 ; 0014 00DC 
                 ; 0014 00DD     printDebug("<LOG_setLastInsert> writing %ld\r\n", index);
00816a 940e c7f4 	CALL SUBOPT_0x1F5
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
00816c e2e6     +LDI R30 , LOW ( 2 * _0x280000 + ( 1334 ) )
00816d e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1334 ) )
00816e e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1334 ) )
00816f e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1334 ) )
                 	__POINTD1FN _0x280000,1334
008170 940e c7f0 	CALL SUBOPT_0x1F4
                 ; 0014 00DE     print_payload((unsigned char *) &index, sizeof(unsigned long int));
008172 940e c7e7 	CALL SUBOPT_0x1F2
008174 940e bee6 	CALL SUBOPT_0x77
008176 940e c48d 	CALL SUBOPT_0x164
                 ; 0014 00DF 
                 ; 0014 00E0     res = SD_writeData(file, 0, (unsigned char *) &index, sizeof(unsigned long int));
008178 940e cc0b 	CALL SUBOPT_0x28F
00817a 01fe      	MOVW R30,R28
00817b 9638      	ADIW R30,8
00817c 940e cb7b 	CALL SUBOPT_0x27C
00817e 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 00E1     if(res < 0)
008180 f44a      	BRPL _0x280026
                 ; 0014 00E2     {
                 ; 0014 00E3         printDebug("<LOG_setLastInsert> SD_readData() failed\r\n");
                +
008181 e4e8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1368 ) )
008182 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1368 ) )
008183 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1368 ) )
008184 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1368 ) )
                 	__POINTD1FN _0x280000,1368
008185 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 00E4         return -1;
008187 efef      	LDI  R30,LOW(65535)
008188 efff      	LDI  R31,HIGH(65535)
008189 c049      	RJMP _0x20E0041
                 ; 0014 00E5     }
                 ; 0014 00E6 
                 ; 0014 00E7     return 0;
                 _0x280026:
00818a c046      	RJMP _0x20E0042
                 ; 0014 00E8 }
                 ;/*============================================================*/
                 ;int LOG_getLastSend(FIL *file, unsigned long int *index)
                 ; 0014 00EB {
                 _LOG_getLastSend:
                 ; 0014 00EC     int             res;
                 ; 0014 00ED 
                 ; 0014 00EE     res = SD_readData(file, 4, (unsigned char *) index, sizeof(unsigned long int));
00818b 940e bf27 	CALL SUBOPT_0x81
                 ;	*file -> Y+4
                 ;	*index -> Y+2
                 ;	res -> R16,R17
00818d 940e cc06 	CALL SUBOPT_0x28E
00818f 940e cc12 	CALL SUBOPT_0x290
008191 940e c5b7 	CALL SUBOPT_0x194
008193 940e bee6 	CALL SUBOPT_0x77
008195 940e cbda 	CALL SUBOPT_0x288
                 ; 0014 00EF     if(res < 0)
008197 f44a      	BRPL _0x280027
                 ; 0014 00F0     {
                 ; 0014 00F1         printDebug("<LOG_getLastSend> SD_readData() failed\r\n");
                +
008198 e7e3     +LDI R30 , LOW ( 2 * _0x280000 + ( 1411 ) )
008199 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1411 ) )
00819a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1411 ) )
00819b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1411 ) )
                 	__POINTD1FN _0x280000,1411
00819c 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 00F2         return -1;
00819e efef      	LDI  R30,LOW(65535)
00819f efff      	LDI  R31,HIGH(65535)
0081a0 c00c      	RJMP _0x20E0043
                 ; 0014 00F3     }
                 ; 0014 00F4 
                 ; 0014 00F5     printDebug("<LOG_getLastSend> got %ld\r\n", *index);
                 _0x280027:
                +
0081a1 e9ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1452 ) )
0081a2 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1452 ) )
0081a3 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1452 ) )
0081a4 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1452 ) )
                 	__POINTD1FN _0x280000,1452
                 _0x20E0044:
0081a5 940e da29 	CALL __PUTPARD1
0081a7 81ae      	LDD  R26,Y+6
0081a8 81bf      	LDD  R27,Y+6+1
0081a9 940e c341 	CALL SUBOPT_0x12E
                 ; 0014 00F6 
                 ; 0014 00F7     return 0;
0081ab e0e0      	LDI  R30,LOW(0)
0081ac e0f0      	LDI  R31,HIGH(0)
                 _0x20E0043:
0081ad 8119      	LDD  R17,Y+1
0081ae 8108      	LDD  R16,Y+0
0081af 9626      	ADIW R28,6
0081b0 9508      	RET
                 ; 0014 00F8 }
                 ;/*============================================================*/
                 ;int LOG_setLastSend(FIL *file, unsigned long int index)
                 ; 0014 00FB {
                 _LOG_setLastSend:
                 ; 0014 00FC     int             res;
                 ; 0014 00FD 
                 ; 0014 00FE     printDebug("<LOG_setLastSend> writing %ld\r\n", index);
0081b1 940e c7f4 	CALL SUBOPT_0x1F5
                 ;	*file -> Y+6
                 ;	index -> Y+2
                 ;	res -> R16,R17
                +
0081b3 ebe8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1480 ) )
0081b4 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1480 ) )
0081b5 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1480 ) )
0081b6 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1480 ) )
                 	__POINTD1FN _0x280000,1480
0081b7 940e c7f0 	CALL SUBOPT_0x1F4
                 ; 0014 00FF     print_payload((unsigned char *) &index, sizeof(unsigned long int));
0081b9 940e c7e7 	CALL SUBOPT_0x1F2
0081bb 940e bee6 	CALL SUBOPT_0x77
0081bd 940e c48d 	CALL SUBOPT_0x164
                 ; 0014 0100 
                 ; 0014 0101     res = SD_writeData(file, 4, (unsigned char *) &index, sizeof(unsigned long int));
0081bf 940e cc12 	CALL SUBOPT_0x290
0081c1 01fe      	MOVW R30,R28
0081c2 9638      	ADIW R30,8
0081c3 940e cb7b 	CALL SUBOPT_0x27C
0081c5 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 0102     if(res < 0)
0081c7 f44a      	BRPL _0x280028
                 ; 0014 0103     {
                 ; 0014 0104         printDebug("<LOG_setLastSend> SD_readData() failed\r\n");
                +
0081c8 ede8     +LDI R30 , LOW ( 2 * _0x280000 + ( 1512 ) )
0081c9 e5f7     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1512 ) )
0081ca e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1512 ) )
0081cb e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1512 ) )
                 	__POINTD1FN _0x280000,1512
0081cc 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 0105         return -1;
0081ce efef      	LDI  R30,LOW(65535)
0081cf efff      	LDI  R31,HIGH(65535)
0081d0 c002      	RJMP _0x20E0041
                 ; 0014 0106     }
                 ; 0014 0107 
                 ; 0014 0108     return 0;
                 _0x280028:
                 _0x20E0042:
0081d1 e0e0      	LDI  R30,LOW(0)
0081d2 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0041:
0081d3 8119      	LDD  R17,Y+1
0081d4 8108      	LDD  R16,Y+0
0081d5 9628      	ADIW R28,8
0081d6 9508      	RET
                 ; 0014 0109 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/********************* Support Function ***********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;unsigned long int index2Addr(unsigned long int index,int recordSize)
                 ; 0014 0111 {
                 _index2Addr:
                 ; 0014 0112     unsigned long int address=0;
                 ; 0014 0113 
                 ; 0014 0114     address = ( index * recordSize ) + SIZE_LAST_LOG_INDEX + SIZE_LAST_LOG_SENT + SIZE_PADDING;
0081d7 940e c774 	CALL SUBOPT_0x1DB
                 ;	index -> Y+6
                 ;	recordSize -> Y+4
                 ;	address -> Y+0
0081d9 81ec      	LDD  R30,Y+4
0081da 81fd      	LDD  R31,Y+4+1
0081db 940e be1e 	CALL SUBOPT_0x59
0081dd 940e cb4b 	CALL SUBOPT_0x273
                +
0081df 5fe0     +SUBI R30 , LOW ( - 16 )
0081e0 4fff     +SBCI R31 , HIGH ( - 16 )
0081e1 4f6f     +SBCI R22 , BYTE3 ( - 16 )
0081e2 4f7f     +SBCI R23 , BYTE4 ( - 16 )
                 	__ADDD1N 16
0081e3 940e c158 	CALL SUBOPT_0xD9
                 ; 0014 0115 
                 ; 0014 0116     return address;
0081e5 940e bf4d 	CALL SUBOPT_0x87
0081e7 962a      	ADIW R28,10
0081e8 9508      	RET
                 ; 0014 0117 }
                 ;/*============================================================*/
                 ;int LOG_createFile(unsigned char *filename, unsigned char mode, unsigned char *initString, unsigned int len)
                 ; 0014 011A {
                 _LOG_createFile:
                 ; 0014 011B     FIL         file;
                 ; 0014 011C     int         res;
                 ; 0014 011D 
                 ; 0014 011E     res = SD_createFile(filename,mode);
0081e9 93ba      	ST   -Y,R27
0081ea 93aa      	ST   -Y,R26
0081eb 97a0      	SBIW R28,32
0081ec 50d2      	SUBI R29,2
0081ed 931a      	ST   -Y,R17
0081ee 930a      	ST   -Y,R16
                 ;	*filename -> Y+551
                 ;	mode -> Y+550
                 ;	*initString -> Y+548
                 ;	len -> Y+546
                 ;	file -> Y+2
                 ;	res -> R16,R17
                +
0081ef 01fe     +MOVW R30 , R28
0081f0 5de9     +SUBI R30 , LOW ( - 551 )
0081f1 4ffd     +SBCI R31 , HIGH ( - 551 )
0081f2 9001     +LD R0 , Z +
0081f3 81f0     +LD R31 , Z
0081f4 2de0     +MOV R30 , R0
                 	__GETW1SX 551
0081f5 93fa      	ST   -Y,R31
0081f6 93ea      	ST   -Y,R30
                +
0081f7 01de     +MOVW R26 , R28
0081f8 5da8     +SUBI R26 , LOW ( - 552 )
0081f9 4fbd     +SBCI R27 , HIGH ( - 552 )
0081fa 91ac     +LD R26 , X
                 	__GETB2SX 552
0081fb dbdf      	RCALL _SD_createFile
0081fc 018f      	MOVW R16,R30
                 ; 0014 011F     if(res < 0){
0081fd 2311      	TST  R17
0081fe f45a      	BRPL _0x280029
                 ; 0014 0120         printDebug("<LOG_createFile> SD_createFile(%s) failed\r\n",filename);
                +
0081ff e0e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1553 ) )
008200 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1553 ) )
008201 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1553 ) )
008202 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1553 ) )
                 	__POINTD1FN _0x280000,1553
008203 940e cc19 	CALL SUBOPT_0x291
008205 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 0121         return -1;
008207 efef      	LDI  R30,LOW(65535)
008208 efff      	LDI  R31,HIGH(65535)
008209 c075      	RJMP _0x20E003F
                 ; 0014 0122     }
                 ; 0014 0123     else if(res == 0)
                 _0x280029:
00820a 2e00      	MOV  R0,R16
00820b 2a01      	OR   R0,R17
00820c f459      	BRNE _0x28002B
                 ; 0014 0124     {
                 ; 0014 0125         printDebug("<LOG_createFile> %s already exist\r\n", filename);
                +
00820d e2ed     +LDI R30 , LOW ( 2 * _0x280000 + ( 1597 ) )
00820e e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1597 ) )
00820f e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1597 ) )
008210 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1597 ) )
                 	__POINTD1FN _0x280000,1597
008211 940e cc19 	CALL SUBOPT_0x291
008213 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 0126         return 0;
008215 e0e0      	LDI  R30,LOW(0)
008216 e0f0      	LDI  R31,HIGH(0)
008217 c067      	RJMP _0x20E003F
                 ; 0014 0127     }
                 ; 0014 0128     else
                 _0x28002B:
                 ; 0014 0129     {
                 ; 0014 012A         printDebug("<LOG_createFile> %s created\r\n", filename);
                +
008218 e5e1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1633 ) )
008219 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1633 ) )
00821a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1633 ) )
00821b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1633 ) )
                 	__POINTD1FN _0x280000,1633
00821c 940e cc19 	CALL SUBOPT_0x291
00821e 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 012B         if(len == 0) // -- no initial data -- //
                +
008220 01fe     +MOVW R30 , R28
008221 5dee     +SUBI R30 , LOW ( - 546 )
008222 4ffd     +SBCI R31 , HIGH ( - 546 )
008223 9001     +LD R0 , Z +
008224 81f0     +LD R31 , Z
008225 2de0     +MOV R30 , R0
                 	__GETW1SX 546
008226 9730      	SBIW R30,0
008227 f439      	BRNE _0x28002D
                 ; 0014 012C         {
                 ; 0014 012D             printDebug("<LOG_createFile> %s contained no initial data\r\n");
                +
008228 e6ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1663 ) )
008229 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1663 ) )
00822a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1663 ) )
00822b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1663 ) )
                 	__POINTD1FN _0x280000,1663
00822c 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 012E             return 1;
00822e c04e      	RJMP _0x20E0040
                 ; 0014 012F         }
                 ; 0014 0130 
                 ; 0014 0131         // -- write the file initial data -- //
                 ; 0014 0132         res = SD_openFile(&file,filename);
                 _0x28002D:
00822f 940e c7e7 	CALL SUBOPT_0x1F2
                +
008231 01de     +MOVW R26 , R28
008232 5da7     +SUBI R26 , LOW ( - 553 )
008233 4fbd     +SBCI R27 , HIGH ( - 553 )
008234 900d     +LD R0 , X +
008235 91bc     +LD R27 , X
008236 2da0     +MOV R26 , R0
                 	__GETW2SX 553
008237 dc01      	RCALL _SD_openFile
008238 018f      	MOVW R16,R30
                 ; 0014 0133         if(res < 0)
008239 2311      	TST  R17
00823a f45a      	BRPL _0x28002E
                 ; 0014 0134         {
                 ; 0014 0135             printDebug("<LOG_createFile> SD_openFile(%s) failed\r\n",filename);
                +
00823b e9ef     +LDI R30 , LOW ( 2 * _0x280000 + ( 1711 ) )
00823c e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1711 ) )
00823d e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1711 ) )
00823e e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1711 ) )
                 	__POINTD1FN _0x280000,1711
00823f 940e cc19 	CALL SUBOPT_0x291
008241 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 0136             return -1;
008243 efef      	LDI  R30,LOW(65535)
008244 efff      	LDI  R31,HIGH(65535)
008245 c039      	RJMP _0x20E003F
                 ; 0014 0137         }
                 ; 0014 0138         else
                 _0x28002E:
                 ; 0014 0139         {
                 ; 0014 013A             printDebug("<LOG_createFile> writing initial data\r\n");
                +
008246 ece9     +LDI R30 , LOW ( 2 * _0x280000 + ( 1753 ) )
008247 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1753 ) )
008248 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1753 ) )
008249 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1753 ) )
                 	__POINTD1FN _0x280000,1753
00824a 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 013B             print_payload(initString,len);
00824c 940e cc23 	CALL SUBOPT_0x292
                 ; 0014 013C             res = SD_writeData(&file,0,initString,len);
00824e 940e c7e7 	CALL SUBOPT_0x1F2
008250 940e cc0b 	CALL SUBOPT_0x28F
                +
008252 01fe     +MOVW R30 , R28
008253 5de6     +SUBI R30 , LOW ( - 554 )
008254 4ffd     +SBCI R31 , HIGH ( - 554 )
008255 9001     +LD R0 , Z +
008256 81f0     +LD R31 , Z
008257 2de0     +MOV R30 , R0
                 	__GETW1SX 554
008258 93fa      	ST   -Y,R31
008259 93ea      	ST   -Y,R30
                +
00825a 01de     +MOVW R26 , R28
00825b 5da6     +SUBI R26 , LOW ( - 554 )
00825c 4fbd     +SBCI R27 , HIGH ( - 554 )
00825d 900d     +LD R0 , X +
00825e 91bc     +LD R27 , X
00825f 2da0     +MOV R26 , R0
                 	__GETW2SX 554
008260 940e cb7f 	CALL SUBOPT_0x27D
                 ; 0014 013D             if(res < 0)
008262 f45a      	BRPL _0x280030
                 ; 0014 013E             {
                 ; 0014 013F                 printDebug("<LOG_createFile> SD_writeData() failed Writing.. \r\n");
                +
008263 efe1     +LDI R30 , LOW ( 2 * _0x280000 + ( 1793 ) )
008264 e5f8     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1793 ) )
008265 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1793 ) )
008266 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1793 ) )
                 	__POINTD1FN _0x280000,1793
008267 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 0140                 print_payload(initString,len);
008269 940e cc23 	CALL SUBOPT_0x292
                 ; 0014 0141                 return -1;
00826b efef      	LDI  R30,LOW(65535)
00826c efff      	LDI  R31,HIGH(65535)
00826d c011      	RJMP _0x20E003F
                 ; 0014 0142             }
                 ; 0014 0143 
                 ; 0014 0144             res = SD_closeFile(&file);
                 _0x280030:
00826e 01de      	MOVW R26,R28
00826f 9612      	ADIW R26,2
008270 dc07      	RCALL _SD_closeFile
008271 018f      	MOVW R16,R30
                 ; 0014 0145             if(res < 0)
008272 2311      	TST  R17
008273 f44a      	BRPL _0x280031
                 ; 0014 0146             {
                 ; 0014 0147                 printDebug("<LOG_createFile> SD_closeFile() failed\r\n");
                +
008274 e2e5     +LDI R30 , LOW ( 2 * _0x280000 + ( 1845 ) )
008275 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1845 ) )
008276 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1845 ) )
008277 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1845 ) )
                 	__POINTD1FN _0x280000,1845
008278 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 0148                 return -1;
00827a efef      	LDI  R30,LOW(65535)
00827b efff      	LDI  R31,HIGH(65535)
00827c c002      	RJMP _0x20E003F
                 ; 0014 0149             }
                 ; 0014 014A         }
                 _0x280031:
                 ; 0014 014B     }
                 ; 0014 014C 
                 ; 0014 014D 
                 ; 0014 014E     return 1;
                 _0x20E0040:
00827d e0e1      	LDI  R30,LOW(1)
00827e e0f0      	LDI  R31,HIGH(1)
                 _0x20E003F:
00827f 8119      	LDD  R17,Y+1
008280 8108      	LDD  R16,Y+0
008281 96a9      	ADIW R28,41
008282 5fde      	SUBI R29,-2
008283 9508      	RET
                 ; 0014 014F }
                 ;/*============================================================*/
                 ;int LOG_init(void)
                 ; 0014 0152 {
                 _LOG_init:
                 ; 0014 0153     int         res,ret = 0;
                 ; 0014 0154 
                 ; 0014 0155     printDebug("<LOG_init> Initial log file\r\n");
008284 940e da9b 	CALL __SAVELOCR4
                 ;	res -> R16,R17
                 ;	ret -> R18,R19
                +
008286 e020     +LDI R18 , LOW ( 0 )
008287 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
008288 e4ee     +LDI R30 , LOW ( 2 * _0x280000 + ( 1886 ) )
008289 e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1886 ) )
00828a e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1886 ) )
00828b e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1886 ) )
                 	__POINTD1FN _0x280000,1886
00828c 940e bbba 	CALL SUBOPT_0x3
                 ; 0014 0156 
                 ; 0014 0157 
                 ; 0014 0158     res = LOG_createFile(LOGFILE_DATA,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
00828e eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00828f e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
008290 940e c206 	CALL SUBOPT_0xF8
008292 940e cc33 	CALL SUBOPT_0x293
                 ; 0014 0159     if(res < 0)
008294 f442      	BRPL _0x280032
                 ; 0014 015A     {
                 ; 0014 015B         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
008295 940e cc3e 	CALL SUBOPT_0x294
008297 940e be40 	CALL SUBOPT_0x5F
008299 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 015C         ret = ret-1;
                +
00829b 5021     +SUBI R18 , LOW ( 1 )
00829c 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 015D     }
                 ; 0014 015E 
                 ; 0014 015F     res = LOG_createFile(LOGFILE_EVENT,0,LOG_INIT_STR,sizeof(LOG_INIT_STR));
                 _0x280032:
00829d ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00829e e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00829f 940e c206 	CALL SUBOPT_0xF8
0082a1 940e cc33 	CALL SUBOPT_0x293
                 ; 0014 0160     if(res < 0)
0082a3 f442      	BRPL _0x280033
                 ; 0014 0161     {
                 ; 0014 0162         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
0082a4 940e cc3e 	CALL SUBOPT_0x294
0082a6 940e be87 	CALL SUBOPT_0x6A
0082a8 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 0163         ret = ret-1;
                +
0082aa 5021     +SUBI R18 , LOW ( 1 )
0082ab 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 0164     }
                 ; 0014 0165 
                 ; 0014 0166     res = LOG_createFile(LOGFILE_ERROR,0,NULL,0);
                 _0x280033:
0082ac ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
0082ad e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
0082ae 940e c206 	CALL SUBOPT_0xF8
0082b0 940e c5c1 	CALL SUBOPT_0x196
0082b2 df36      	RCALL _LOG_createFile
0082b3 018f      	MOVW R16,R30
                 ; 0014 0167     if(res < 0)
0082b4 2311      	TST  R17
0082b5 f442      	BRPL _0x280034
                 ; 0014 0168     {
                 ; 0014 0169         printDebug("<LOG_init> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
0082b6 940e cc3e 	CALL SUBOPT_0x294
0082b8 940e cc43 	CALL SUBOPT_0x295
0082ba 940e bc2c 	CALL SUBOPT_0x12
                 ; 0014 016A         ret = ret-1;
                +
0082bc 5021     +SUBI R18 , LOW ( 1 )
0082bd 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
                 ; 0014 016B     }
                 ; 0014 016C 
                 ; 0014 016D     return ret;
                 _0x280034:
0082be 01f9      	MOVW R30,R18
0082bf 940e daa2 	CALL __LOADLOCR4
0082c1 9624      	ADIW R28,4
0082c2 9508      	RET
                 ; 0014 016E }
                 ;/*============================================================*/
                 ;
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "logqueue.h"
                 ;#include "debug.h"
                 ;
                 ;struct event_log_st     eventLogQueue[MAX_EVENT_QUEUE];
                 ;char                    eventLogQCount  = 0;
                 ;
                 ;struct data_log_st      dataLogQueue[MAX_DATA_QUEUE];
                 ;char                    dataLogQCount   = 0;
                 ;/*============================================================*/
                 ;/* Data Log Queue */
                 ;/*============================================================*/
                 ;int addDataLogQueue(unsigned char id, unsigned long int timestamp, unsigned int channel, float value)
                 ; 0015 0010 {
                 
                 	.CSEG
                 _addDataLogQueue:
                 ; 0015 0011     int slot;
                 ; 0015 0012 
                 ; 0015 0013     slot = findFreeSlotDataLogQueue();
0082c3 940e c7f4 	CALL SUBOPT_0x1F5
                 ;	id -> Y+12
                 ;	timestamp -> Y+8
                 ;	channel -> Y+6
                 ;	value -> Y+2
                 ;	slot -> R16,R17
0082c5 d0b1      	RCALL _findFreeSlotDataLogQueue
0082c6 2f0e      	MOV  R16,R30
0082c7 2711      	CLR  R17
                 ; 0015 0014     if(slot < 0)
0082c8 2311      	TST  R17
0082c9 f44a      	BRPL _0x2A0003
                 ; 0015 0015     {
                 ; 0015 0016         printDebug("\r\n\r\n<addDataLogQueue> WARNING : dataLogQueue FULL\r\n\r\n");
                +
0082ca e9e4     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 0 ) )
0082cb e5f9     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 0 ) )
0082cc e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 0 ) )
0082cd e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 0 ) )
                 	__POINTD1FN _0x2A0000,0
0082ce 940e bbba 	CALL SUBOPT_0x3
                 ; 0015 0017         return -1;
0082d0 efef      	LDI  R30,LOW(65535)
0082d1 efff      	LDI  R31,HIGH(65535)
0082d2 c038      	RJMP _0x20E003E
                 ; 0015 0018     }
                 ; 0015 0019 
                 ; 0015 001A     dataLogQueue[slot].id                    = id;
                 _0x2A0003:
0082d3 940e c4c9 	CALL SUBOPT_0x16F
0082d5 55e0      	SUBI R30,LOW(-_dataLogQueue)
0082d6 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
0082d7 85ac      	LDD  R26,Y+12
0082d8 83a0      	STD  Z+0,R26
                 ; 0015 001B     dataLogQueue[slot].data.timestamp        = timestamp;
0082d9 940e c4c9 	CALL SUBOPT_0x16F
                +
0082db 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
0082dc 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
0082dd 940e c15d 	CALL SUBOPT_0xDB
0082df 940e c9dd 	CALL SUBOPT_0x23B
                 ; 0015 001C     dataLogQueue[slot].data.channel          = channel;
0082e1 940e c4c9 	CALL SUBOPT_0x16F
                +
0082e3 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
0082e4 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
0082e5 81ae      	LDD  R26,Y+6
0082e6 81bf      	LDD  R27,Y+6+1
0082e7 83a0      	STD  Z+0,R26
0082e8 83b1      	STD  Z+1,R27
                 ; 0015 001D     dataLogQueue[slot].data.value            = value;
0082e9 940e c4c9 	CALL SUBOPT_0x16F
                +
0082eb 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
0082ec 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
0082ed 940e c07c 	CALL SUBOPT_0xB6
0082ef 940e c9dd 	CALL SUBOPT_0x23B
                 ; 0015 001E 
                 ; 0015 001F     dataLogQCount++;
0082f1 91e0 1a1e 	LDS  R30,_dataLogQCount
0082f3 5fef      	SUBI R30,-LOW(1)
0082f4 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0020     printDebug("\r\n<addDataLogQueue>                           Added (%02X) to dataLogQueue[%d] Count = %d\r\n",id,slot,dataLogQCount);
                +
0082f6 ecea     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 54 ) )
0082f7 e5f9     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 54 ) )
0082f8 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 54 ) )
0082f9 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 54 ) )
                 	__POINTD1FN _0x2A0000,54
0082fa 940e da29 	CALL __PUTPARD1
0082fc 89e8      	LDD  R30,Y+16
0082fd 940e be67 	CALL SUBOPT_0x65
0082ff 01f8      	MOVW R30,R16
008300 940e cb08 	CALL SUBOPT_0x269
008302 91e0 1a1e 	LDS  R30,_dataLogQCount
008304 940e be67 	CALL SUBOPT_0x65
008306 940e be6d 	CALL SUBOPT_0x66
                 ; 0015 0021     return dataLogQCount;
008308 91e0 1a1e 	LDS  R30,_dataLogQCount
00830a e0f0      	LDI  R31,0
                 _0x20E003E:
00830b 8119      	LDD  R17,Y+1
00830c 8108      	LDD  R16,Y+0
00830d 962d      	ADIW R28,13
00830e 9508      	RET
                 ; 0015 0022 }
                 ;/*============================================================*/
                 ;int readDataLogQueue(unsigned char id, unsigned long int *timestamp, unsigned int *channel, float *value)
                 ; 0015 0025 {
                 _readDataLogQueue:
                 ; 0015 0026     int i;
                 ; 0015 0027 
                 ; 0015 0028     if(dataLogQCount == 0){
00830f 940e bf27 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*channel -> Y+4
                 ;	*value -> Y+2
                 ;	i -> R16,R17
008311 91e0 1a1e 	LDS  R30,_dataLogQCount
008313 30e0      	CPI  R30,0
008314 f439      	BRNE _0x2A0004
                 ; 0015 0029         printDebug("<readDataLogQueue> WARN: dataLogQueue empty!!\r\n");
                +
008315 e2e6     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 146 ) )
008316 e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 146 ) )
008317 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 146 ) )
008318 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 146 ) )
                 	__POINTD1FN _0x2A0000,146
008319 940e bbba 	CALL SUBOPT_0x3
                 ; 0015 002A         return -1;
00831b c0f5      	RJMP _0x20E003C
                 ; 0015 002B     }
                 ; 0015 002C 
                 ; 0015 002D     for(i=0;i<MAX_DATA_QUEUE;i++)
                 _0x2A0004:
                +
00831c e000     +LDI R16 , LOW ( 0 )
00831d e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0006:
                +
00831e 300a     +CPI R16 , LOW ( 10 )
00831f e0e0     +LDI R30 , HIGH ( 10 )
008320 071e     +CPC R17 , R30
                 	__CPWRN 16,17,10
008321 f54c      	BRGE _0x2A0007
                 ; 0015 002E     {
                 ; 0015 002F         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
008322 940e c4c9 	CALL SUBOPT_0x16F
008324 55e0      	SUBI R30,LOW(-_dataLogQueue)
008325 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
008326 81e0      	LD   R30,Z
008327 85a8      	LDD  R26,Y+8
008328 17ea      	CP   R30,R26
008329 f4f1      	BRNE _0x2A0008
                 ; 0015 0030         {
                 ; 0015 0031             *timestamp      =   dataLogQueue[i].data.timestamp;
00832a 940e c4c9 	CALL SUBOPT_0x16F
                +
00832c 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00832d 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00832e 940e cc49 	CALL SUBOPT_0x296
                 ; 0015 0032             *channel        =   dataLogQueue[i].data.channel;
008330 940e c4c9 	CALL SUBOPT_0x16F
                +
008332 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
008333 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
008334 01df      	MOVW R26,R30
008335 940e d9f0 	CALL __GETW1P
008337 81ac      	LDD  R26,Y+4
008338 81bd      	LDD  R27,Y+4+1
008339 93ed      	ST   X+,R30
00833a 93fc      	ST   X,R31
                 ; 0015 0033             *value          =   dataLogQueue[i].data.value;
00833b 940e c4c9 	CALL SUBOPT_0x16F
                +
00833d 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00833e 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00833f 01df      	MOVW R26,R30
008340 940e d9f4 	CALL __GETD1P
008342 81aa      	LDD  R26,Y+2
008343 81bb      	LDD  R27,Y+2+1
008344 940e d9ff 	CALL __PUTDP1
                 ; 0015 0034 
                 ; 0015 0035             return i;
008346 01f8      	MOVW R30,R16
008347 c0cb      	RJMP _0x20E003B
                 ; 0015 0036         }
                 ; 0015 0037     }
                 _0x2A0008:
                +
008348 5f0f     +SUBI R16 , LOW ( - 1 )
008349 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00834a cfd3      	RJMP _0x2A0006
                 _0x2A0007:
                 ; 0015 0038 
                 ; 0015 0039     printDebug("<readDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
00834b e5e6     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 194 ) )
00834c e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 194 ) )
00834d e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 194 ) )
00834e e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 194 ) )
                 	__POINTD1FN _0x2A0000,194
00834f c0bc      	RJMP _0x20E003D
                 ; 0015 003A     return -1;
                 ; 0015 003B }
                 ;/*============================================================*/
                 ;int removeDataLogQueue(unsigned char id)
                 ; 0015 003E {
                 _removeDataLogQueue:
                 ; 0015 003F     char i;
                 ; 0015 0040     for(i=0;i<MAX_DATA_QUEUE;i++)
008350 93aa      	ST   -Y,R26
008351 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
008352 e010      	LDI  R17,LOW(0)
                 _0x2A000A:
008353 301a      	CPI  R17,10
008354 f4e8      	BRSH _0x2A000B
                 ; 0015 0041     {
                 ; 0015 0042         if(id == dataLogQueue[i].id)                       // -- scan id in dataLogQueue
008355 940e cc51 	CALL SUBOPT_0x297
008357 81e0      	LD   R30,Z
008358 81a9      	LDD  R26,Y+1
008359 17ea      	CP   R30,R26
00835a f4a9      	BRNE _0x2A000C
                 ; 0015 0043         {
                 ; 0015 0044             dataLogQueue[i].id                  = 0x00;
00835b 940e cc51 	CALL SUBOPT_0x297
00835d 940e cc57 	CALL SUBOPT_0x298
                 ; 0015 0045             dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0046             dataLogQueue[i].data.channel        = 0;
                 ; 0015 0047             dataLogQueue[i].data.value          = 0;
                 ; 0015 0048             dataLogQCount--;
00835f 91e0 1a1e 	LDS  R30,_dataLogQCount
008361 50e1      	SUBI R30,LOW(1)
008362 93e0 1a1e 	STS  _dataLogQCount,R30
                 ; 0015 0049 
                 ; 0015 004A             printDebug("\r\n<removeDataLogQueue>                        Removed (%02X) from dataLogQueue[%d]\r\n", id, i);
                +
008364 e9e6     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 258 ) )
008365 e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 258 ) )
008366 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 258 ) )
008367 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 258 ) )
                 	__POINTD1FN _0x2A0000,258
008368 940e c836 	CALL SUBOPT_0x1FC
00836a 940e c83b 	CALL SUBOPT_0x1FD
                 ; 0015 004B             return dataLogQCount;
00836c 91e0 1a1e 	LDS  R30,_dataLogQCount
00836e e0f0      	LDI  R31,0
00836f c0da      	RJMP _0x20E0039
                 ; 0015 004C         }
                 ; 0015 004D     }
                 _0x2A000C:
008370 5f1f      	SUBI R17,-1
008371 cfe1      	RJMP _0x2A000A
                 _0x2A000B:
                 ; 0015 004E     printDebug("<removeDataLogQueue> WARN: not found id[0x%02X] in dataLogQueue\r\n", id);
                +
008372 eeeb     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 343 ) )
008373 e5fa     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 343 ) )
008374 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 343 ) )
008375 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 343 ) )
                 	__POINTD1FN _0x2A0000,343
008376 c0cc      	RJMP _0x20E003A
                 ; 0015 004F     return -1;
                 ; 0015 0050 }
                 ;/*============================================================*/
                 ;char findFreeSlotDataLogQueue(void)
                 ; 0015 0053 {
                 _findFreeSlotDataLogQueue:
                 ; 0015 0054     char i;
                 ; 0015 0055     for(i=0;i<MAX_DATA_QUEUE;i++){
008377 931a      	ST   -Y,R17
                 ;	i -> R17
008378 e010      	LDI  R17,LOW(0)
                 _0x2A000E:
008379 301a      	CPI  R17,10
00837a f448      	BRSH _0x2A000F
                 ; 0015 0056         if(dataLogQueue[i].id == 0x00){
00837b 940e cc51 	CALL SUBOPT_0x297
00837d 81e0      	LD   R30,Z
00837e 30e0      	CPI  R30,0
00837f f411      	BRNE _0x2A0010
                 ; 0015 0057             return i;
008380 2fe1      	MOV  R30,R17
008381 c0ea      	RJMP _0x20E0038
                 ; 0015 0058         }
                 ; 0015 0059     }
                 _0x2A0010:
008382 5f1f      	SUBI R17,-1
008383 cff5      	RJMP _0x2A000E
                 _0x2A000F:
                 ; 0015 005A     return -1;
008384 efef      	LDI  R30,LOW(255)
008385 c0e6      	RJMP _0x20E0038
                 ; 0015 005B }
                 ;/*============================================================*/
                 ;void initDataLogQueue(void)
                 ; 0015 005E {
                 _initDataLogQueue:
                 ; 0015 005F     char i;
                 ; 0015 0060 
                 ; 0015 0061     for(i=0;i<MAX_DATA_QUEUE;i++){
008386 931a      	ST   -Y,R17
                 ;	i -> R17
008387 e010      	LDI  R17,LOW(0)
                 _0x2A0012:
008388 301a      	CPI  R17,10
008389 f430      	BRSH _0x2A0013
                 ; 0015 0062         dataLogQueue[i].id                  = 0x00;
00838a 940e cc51 	CALL SUBOPT_0x297
00838c 940e cc57 	CALL SUBOPT_0x298
                 ; 0015 0063         dataLogQueue[i].data.timestamp      = 0;
                 ; 0015 0064         dataLogQueue[i].data.channel        = 0;
                 ; 0015 0065         dataLogQueue[i].data.value          = 0;
                 ; 0015 0066     }
00838e 5f1f      	SUBI R17,-1
00838f cff8      	RJMP _0x2A0012
                 _0x2A0013:
                 ; 0015 0067     return;
008390 c0db      	RJMP _0x20E0038
                 ; 0015 0068 }
                 ;/*============================================================*/
                 ;
                 ;/*============================================================*/
                 ;/* Event Log Queue */
                 ;/*============================================================*/
                 ;int addEventLogQueue(unsigned char id, unsigned long int timestamp, unsigned char eventID, unsigned char eventStatus)
                 ; 0015 006F {
                 _addEventLogQueue:
                 ; 0015 0070     int slot;
                 ; 0015 0071 
                 ; 0015 0072     slot = findFreeSlotEventLogQueue();
008391 93aa      	ST   -Y,R26
008392 931a      	ST   -Y,R17
008393 930a      	ST   -Y,R16
                 ;	id -> Y+8
                 ;	timestamp -> Y+4
                 ;	eventID -> Y+3
                 ;	eventStatus -> Y+2
                 ;	slot -> R16,R17
008394 d0b8      	RCALL _findFreeSlotEventLogQueue
008395 2f0e      	MOV  R16,R30
008396 2711      	CLR  R17
                 ; 0015 0073     if(slot < 0)
008397 2311      	TST  R17
008398 f43a      	BRPL _0x2A0014
                 ; 0015 0074     {
                 ; 0015 0075         printDebug("\r\n\r\n<addEventLogQueue> WARNING : eventLogQueue FULL\r\n\r\n");
                +
008399 e2ed     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 409 ) )
00839a e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 409 ) )
00839b e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 409 ) )
00839c e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 409 ) )
                 	__POINTD1FN _0x2A0000,409
00839d 940e bbba 	CALL SUBOPT_0x3
                 ; 0015 0076         return -1;
00839f c071      	RJMP _0x20E003C
                 ; 0015 0077     }
                 ; 0015 0078 
                 ; 0015 0079     eventLogQueue[slot].id                  = id;
                 _0x2A0014:
0083a0 940e cc72 	CALL SUBOPT_0x299
0083a2 5ded      	SUBI R30,LOW(-_eventLogQueue)
0083a3 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0083a4 85a8      	LDD  R26,Y+8
0083a5 83a0      	STD  Z+0,R26
                 ; 0015 007A     eventLogQueue[slot].event.timestamp     = timestamp;
0083a6 940e cc72 	CALL SUBOPT_0x299
                +
0083a8 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
0083a9 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
0083aa 940e c043 	CALL SUBOPT_0xAB
0083ac 940e c9dd 	CALL SUBOPT_0x23B
                 ; 0015 007B     eventLogQueue[slot].event.eventID       = eventID;
0083ae 940e cc72 	CALL SUBOPT_0x299
                +
0083b0 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
0083b1 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
0083b2 81ab      	LDD  R26,Y+3
0083b3 83a0      	STD  Z+0,R26
                 ; 0015 007C     eventLogQueue[slot].event.eventStatus   = eventStatus;
0083b4 940e cc72 	CALL SUBOPT_0x299
                +
0083b6 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0083b7 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0083b8 81aa      	LDD  R26,Y+2
0083b9 83a0      	STD  Z+0,R26
                 ; 0015 007D 
                 ; 0015 007E     eventLogQCount++;
0083ba 91e0 19af 	LDS  R30,_eventLogQCount
0083bc 5fef      	SUBI R30,-LOW(1)
0083bd 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 007F     printDebug("\r\n<addEventLogQueue>                         Added (%02X) to eventLogQueue[%d] Count = %d\r\n",id,slot,eventLogQCount);
                +
0083bf e6e5     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 465 ) )
0083c0 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 465 ) )
0083c1 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 465 ) )
0083c2 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 465 ) )
                 	__POINTD1FN _0x2A0000,465
0083c3 940e c7fe 	CALL SUBOPT_0x1F7
0083c5 01f8      	MOVW R30,R16
0083c6 940e cb08 	CALL SUBOPT_0x269
0083c8 91e0 19af 	LDS  R30,_eventLogQCount
0083ca 940e be67 	CALL SUBOPT_0x65
0083cc 940e be6d 	CALL SUBOPT_0x66
                 ; 0015 0080     return eventLogQCount;
0083ce 91e0 19af 	LDS  R30,_eventLogQCount
0083d0 e0f0      	LDI  R31,0
0083d1 c041      	RJMP _0x20E003B
                 ; 0015 0081 }
                 ;/*============================================================*/
                 ;int readEventLogQueue(unsigned char id, unsigned long int *timestamp, unsigned char *eventID, unsigned char *eventStatus)
                 ; 0015 0084 {
                 _readEventLogQueue:
                 ; 0015 0085     int i;
                 ; 0015 0086 
                 ; 0015 0087     if(eventLogQCount == 0){
0083d2 940e bf27 	CALL SUBOPT_0x81
                 ;	id -> Y+8
                 ;	*timestamp -> Y+6
                 ;	*eventID -> Y+4
                 ;	*eventStatus -> Y+2
                 ;	i -> R16,R17
0083d4 91e0 19af 	LDS  R30,_eventLogQCount
0083d6 30e0      	CPI  R30,0
0083d7 f439      	BRNE _0x2A0015
                 ; 0015 0088         printDebug("<readEventLogQueue> WARN: eventLogQueue empty!!\r\n");
                +
0083d8 ece1     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 557 ) )
0083d9 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 557 ) )
0083da e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 557 ) )
0083db e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 557 ) )
                 	__POINTD1FN _0x2A0000,557
0083dc 940e bbba 	CALL SUBOPT_0x3
                 ; 0015 0089         return -1;
0083de c032      	RJMP _0x20E003C
                 ; 0015 008A     }
                 ; 0015 008B 
                 ; 0015 008C     for(i=0;i<MAX_EVENT_QUEUE;i++)
                 _0x2A0015:
                +
0083df e000     +LDI R16 , LOW ( 0 )
0083e0 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2A0017:
                +
0083e1 3104     +CPI R16 , LOW ( 20 )
0083e2 e0e0     +LDI R30 , HIGH ( 20 )
0083e3 071e     +CPC R17 , R30
                 	__CPWRN 16,17,20
0083e4 f51c      	BRGE _0x2A0018
                 ; 0015 008D     {
                 ; 0015 008E         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
0083e5 940e cc72 	CALL SUBOPT_0x299
0083e7 5ded      	SUBI R30,LOW(-_eventLogQueue)
0083e8 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
0083e9 81e0      	LD   R30,Z
0083ea 85a8      	LDD  R26,Y+8
0083eb 17ea      	CP   R30,R26
0083ec f4c1      	BRNE _0x2A0019
                 ; 0015 008F         {
                 ; 0015 0090             *timestamp      =   eventLogQueue[i].event.timestamp;
0083ed 940e cc72 	CALL SUBOPT_0x299
                +
0083ef 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
0083f0 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
0083f1 940e cc49 	CALL SUBOPT_0x296
                 ; 0015 0091             *eventID        =   eventLogQueue[i].event.eventID;
0083f3 940e cc72 	CALL SUBOPT_0x299
                +
0083f5 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
0083f6 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
0083f7 81e0      	LD   R30,Z
0083f8 81ac      	LDD  R26,Y+4
0083f9 81bd      	LDD  R27,Y+4+1
0083fa 93ec      	ST   X,R30
                 ; 0015 0092             *eventStatus    =   eventLogQueue[i].event.eventStatus;
0083fb 940e cc72 	CALL SUBOPT_0x299
                +
0083fd 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
0083fe 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
0083ff 81e0      	LD   R30,Z
008400 81aa      	LDD  R26,Y+2
008401 81bb      	LDD  R27,Y+2+1
008402 93ec      	ST   X,R30
                 ; 0015 0093 
                 ; 0015 0094             return i;
008403 01f8      	MOVW R30,R16
008404 c00e      	RJMP _0x20E003B
                 ; 0015 0095         }
                 ; 0015 0096     }
                 _0x2A0019:
                +
008405 5f0f     +SUBI R16 , LOW ( - 1 )
008406 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008407 cfd9      	RJMP _0x2A0017
                 _0x2A0018:
                 ; 0015 0097 
                 ; 0015 0098     printDebug("<readEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
008408 efe3     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 607 ) )
008409 e5fb     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 607 ) )
00840a e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 607 ) )
00840b e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 607 ) )
                 	__POINTD1FN _0x2A0000,607
                 _0x20E003D:
00840c 940e da29 	CALL __PUTPARD1
00840e 85ec      	LDD  R30,Y+12
00840f 940e bccc 	CALL SUBOPT_0x29
                 ; 0015 0099     return -1;
                 _0x20E003C:
008411 efef      	LDI  R30,LOW(65535)
008412 efff      	LDI  R31,HIGH(65535)
                 _0x20E003B:
008413 8119      	LDD  R17,Y+1
008414 8108      	LDD  R16,Y+0
008415 9629      	ADIW R28,9
008416 9508      	RET
                 ; 0015 009A }
                 ;/*============================================================*/
                 ;int removeEventLogQueue(unsigned char id)
                 ; 0015 009D {
                 _removeEventLogQueue:
                 ; 0015 009E     char i;
                 ; 0015 009F     for(i=0;i<MAX_EVENT_QUEUE;i++)
008417 93aa      	ST   -Y,R26
008418 931a      	ST   -Y,R17
                 ;	id -> Y+1
                 ;	i -> R17
008419 e010      	LDI  R17,LOW(0)
                 _0x2A001B:
00841a 3114      	CPI  R17,20
00841b f518      	BRSH _0x2A001C
                 ; 0015 00A0     {
                 ; 0015 00A1         if(id == eventLogQueue[i].id)                       // -- scan id in eventLogQueue
00841c 940e cc78 	CALL SUBOPT_0x29A
00841e 81e0      	LD   R30,Z
00841f 81a9      	LDD  R26,Y+1
008420 17ea      	CP   R30,R26
008421 f4d9      	BRNE _0x2A001D
                 ; 0015 00A2         {
                 ; 0015 00A3             eventLogQueue[i].id                  = 0x00;
008422 940e cc78 	CALL SUBOPT_0x29A
008424 940e cc7e 	CALL SUBOPT_0x29B
                 ; 0015 00A4             eventLogQueue[i].event.timestamp     = 0;
008426 940e cc84 	CALL SUBOPT_0x29C
                 ; 0015 00A5             eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00A6             eventLogQueue[i].event.eventStatus   = 0;
                +
008428 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
008429 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
00842a e0a0      	LDI  R26,LOW(0)
00842b 83a0      	STD  Z+0,R26
                 ; 0015 00A7             eventLogQCount--;
00842c 91e0 19af 	LDS  R30,_eventLogQCount
00842e 50e1      	SUBI R30,LOW(1)
00842f 93e0 19af 	STS  _eventLogQCount,R30
                 ; 0015 00A8 
                 ; 0015 00A9             printDebug("\r\n<removeEventLogQueue>                      Removed (%02X) from eventLogQueue[%d]\r\n", id, i);
                +
008431 e3e5     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 673 ) )
008432 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 673 ) )
008433 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 673 ) )
008434 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 673 ) )
                 	__POINTD1FN _0x2A0000,673
008435 940e c836 	CALL SUBOPT_0x1FC
008437 940e c83b 	CALL SUBOPT_0x1FD
                 ; 0015 00AA             return eventLogQCount;
008439 91e0 19af 	LDS  R30,_eventLogQCount
00843b e0f0      	LDI  R31,0
00843c c00d      	RJMP _0x20E0039
                 ; 0015 00AB         }
                 ; 0015 00AC     }
                 _0x2A001D:
00843d 5f1f      	SUBI R17,-1
00843e cfdb      	RJMP _0x2A001B
                 _0x2A001C:
                 ; 0015 00AD     printDebug("<removeEventLogQueue> WARN: not found id[0x%02X] in eventLogQueue\r\n", id);
                +
00843f e8ea     +LDI R30 , LOW ( 2 * _0x2A0000 + ( 758 ) )
008440 e5fc     +LDI R31 , HIGH ( 2 * _0x2A0000 + ( 758 ) )
008441 e060     +LDI R22 , BYTE3 ( 2 * _0x2A0000 + ( 758 ) )
008442 e070     +LDI R23 , BYTE4 ( 2 * _0x2A0000 + ( 758 ) )
                 	__POINTD1FN _0x2A0000,758
                 _0x20E003A:
008443 940e da29 	CALL __PUTPARD1
008445 81ed      	LDD  R30,Y+5
008446 940e bccc 	CALL SUBOPT_0x29
                 ; 0015 00AE     return -1;
008448 efef      	LDI  R30,LOW(65535)
008449 efff      	LDI  R31,HIGH(65535)
                 _0x20E0039:
00844a 8118      	LDD  R17,Y+0
00844b 9622      	ADIW R28,2
00844c 9508      	RET
                 ; 0015 00AF }
                 ;/*============================================================*/
                 ;char findFreeSlotEventLogQueue(void)
                 ; 0015 00B2 {
                 _findFreeSlotEventLogQueue:
                 ; 0015 00B3     char i;
                 ; 0015 00B4     for(i=0;i<MAX_EVENT_QUEUE;i++){
00844d 931a      	ST   -Y,R17
                 ;	i -> R17
00844e e010      	LDI  R17,LOW(0)
                 _0x2A001F:
00844f 3114      	CPI  R17,20
008450 f448      	BRSH _0x2A0020
                 ; 0015 00B5         if(eventLogQueue[i].id == 0x00){
008451 940e cc78 	CALL SUBOPT_0x29A
008453 81e0      	LD   R30,Z
008454 30e0      	CPI  R30,0
008455 f411      	BRNE _0x2A0021
                 ; 0015 00B6             return i;
008456 2fe1      	MOV  R30,R17
008457 c014      	RJMP _0x20E0038
                 ; 0015 00B7         }
                 ; 0015 00B8     }
                 _0x2A0021:
008458 5f1f      	SUBI R17,-1
008459 cff5      	RJMP _0x2A001F
                 _0x2A0020:
                 ; 0015 00B9     return -1;
00845a efef      	LDI  R30,LOW(255)
00845b c010      	RJMP _0x20E0038
                 ; 0015 00BA }
                 ;/*============================================================*/
                 ;void initEventLogQueue(void)
                 ; 0015 00BD {
                 _initEventLogQueue:
                 ; 0015 00BE     char i;
                 ; 0015 00BF 
                 ; 0015 00C0     for(i=0;i<MAX_EVENT_QUEUE;i++){
00845c 931a      	ST   -Y,R17
                 ;	i -> R17
00845d e010      	LDI  R17,LOW(0)
                 _0x2A0023:
00845e 3114      	CPI  R17,20
00845f f460      	BRSH _0x2A0024
                 ; 0015 00C1         eventLogQueue[i].id                  = 0x00;
008460 940e cc78 	CALL SUBOPT_0x29A
008462 940e cc7e 	CALL SUBOPT_0x29B
                 ; 0015 00C2         eventLogQueue[i].event.timestamp     = 0;
008464 940e cc84 	CALL SUBOPT_0x29C
                 ; 0015 00C3         eventLogQueue[i].event.eventID       = 0;
                 ; 0015 00C4         eventLogQueue[i].event.eventStatus   = 0;
                +
008466 5de7     +SUBI R30 , LOW ( - _eventLogQueue - ( 6 ) )
008467 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 6 ) )
                 	__ADDW1MN _eventLogQueue,6
008468 e0a0      	LDI  R26,LOW(0)
008469 83a0      	STD  Z+0,R26
                 ; 0015 00C5     }
00846a 5f1f      	SUBI R17,-1
00846b cff2      	RJMP _0x2A0023
                 _0x2A0024:
                 ; 0015 00C6     return;
                 _0x20E0038:
00846c 9119      	LD   R17,Y+
00846d 9508      	RET
                 ; 0015 00C7 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include "menu.h"
                 ;#include "oled.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "io.h"
                 ;#include "alarm.h"
                 ;#include "config.h"
                 ;#include "debug.h"
                 ;
                 ;
                 ;eeprom char userPwd[4]              = {0,0,0,0};                    // -- default password for user permission -- //
                 ;eeprom char servicePwd[4]           = {2,4,7,5};                    // -- default password for sevice permission -- //
                 ;char currentPage                    = P_MONITOR;                    // -- track the currently displaying page -- //
                 ;
                 ;/**************************************************************/
                 ;/************* Menu (Finite State Machine) Function ***********/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void MENU_processKey(char key)
                 ; 0016 0015 {
                 
                 	.CSEG
                 _MENU_processKey:
                 ; 0016 0016     int  i,j,res;
                 ; 0016 0017     static signed char  cursor      = 0;
                 ; 0016 0018     static char         tmpNextPage = 0;
                 ; 0016 0019     static char         tmpPrevPage = 0;
                 ; 0016 001A     static signed char  entPwd[4]   = {0,0,0,0};
                 ; 0016 001B     static signed char  newPwd[4]   = {0,0,0,0};
                 ; 0016 001C     static signed char  confPwd[4]  = {0,0,0,0};
                 ; 0016 001D 
                 ; 0016 001E     static char setIp[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 001F     static char setMask[12]         = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0020     static char setGw[12]           = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0021     static char setServer[12]       = {0,0,0,0,0,0,0,0,0,0,0,0};
                 ; 0016 0022 
                 ; 0016 0023     unsigned char *msg;
                 ; 0016 0024     unsigned int  msg_len           = 0;
                 ; 0016 0025 
                 ; 0016 0026     static char devEn               = 0;
                 ; 0016 0027     static char almEn               = 0;
                 ; 0016 0028     static char prbEn[5]            = {0,0,0,0,0};
                 ; 0016 0029 
                 ; 0016 002A     static char mute                = 0;
                 ; 0016 002B 
                 ; 0016 002C     static char vRef[3]             = {0,0,0};
                 ; 0016 002D 
                 ; 0016 002E     static char prb1                = 0;
                 ; 0016 002F     static char prb2                = 0;
                 ; 0016 0030     static unsigned char calPnt[6]  = {0,0,0,0,0,0};
                 ; 0016 0031 
                 ; 0016 0032     char eeprom *uPwd = userPwd;
                 ; 0016 0033     char eeprom *sPwd = servicePwd;
                 ; 0016 0034 
                 ; 0016 0035     char str[20];
                 ; 0016 0036     char cmd[50];
                 ; 0016 0037     int  digit      = 0;
                 ; 0016 0038 
                 ; 0016 0039     if      ( currentPage == P_MONITOR )
00846e 93aa      	ST   -Y,R26
00846f 97ef      	SBIW R28,63
008470 9761      	SBIW R28,17
008471 e48e      	LDI  R24,78
008472 e0a0      	LDI  R26,LOW(0)
008473 e0b0      	LDI  R27,HIGH(0)
008474 ecee      	LDI  R30,LOW(_0x2C0003*2)
008475 e5fc      	LDI  R31,HIGH(_0x2C0003*2)
008476 e060      	LDI  R22,BYTE3(_0x2C0003*2)
008477 940e daa7 	CALL __INITLOCB
008479 940e da99 	CALL __SAVELOCR6
                 ;	key -> Y+86
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	res -> R20,R21
                 ;	*msg -> Y+84
                 ;	msg_len -> Y+82
                 ;	*uPwd -> Y+80
                 ;	*sPwd -> Y+78
                 ;	str -> Y+58
                 ;	cmd -> Y+8
                 ;	digit -> Y+6
00847b 91e0 14df 	LDS  R30,_currentPage
00847d 30e0      	CPI  R30,0
00847e f451      	BRNE _0x2C0004
                 ; 0016 003A     {
                 ; 0016 003B         if(key == KEY_MODE){
                +
00847f 01de     +MOVW R26 , R28
008480 5aaa     +SUBI R26 , LOW ( - 86 )
008481 4fbf     +SBCI R27 , HIGH ( - 86 )
008482 91ac     +LD R26 , X
                 	__GETB2SX 86
008483 30a1      	CPI  R26,LOW(0x1)
008484 f411      	BRNE _0x2C0005
                 ; 0016 003C             currentPage     = P_MAIN_MENU;
008485 940e cc8f 	CALL SUBOPT_0x29D
                 ; 0016 003D             cursor          = 0;
                 ; 0016 003E             printOLED("M1%1d",cursor);
                 ; 0016 003F         }
                 ; 0016 0040     }
                 _0x2C0005:
                 ; 0016 0041     else if ( currentPage == P_MAIN_MENU )
008487 940c 93ec 	JMP  _0x2C0006
                 _0x2C0004:
008489 91a0 14df 	LDS  R26,_currentPage
00848b 30a1      	CPI  R26,LOW(0x1)
00848c f011      	BREQ PC+3
00848d 940c 84e9 	JMP _0x2C0007
                 ; 0016 0042     {
                 ; 0016 0043         switch(key){
00848f 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0044         case KEY_MODE   :   currentPage = P_MONITOR;        cursor  = 0;        printOLED("M0");            break;
008491 f409      	BRNE _0x2C000B
008492 c04b      	RJMP _0x2C02B4
                 ; 0016 0045         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000B:
008493 30e2      	CPI  R30,LOW(0x2)
008494 e0a0      	LDI  R26,HIGH(0x2)
008495 07fa      	CPC  R31,R26
008496 f449      	BRNE _0x2C000C
008497 940e cca7 	CALL SUBOPT_0x29F
008499 f41c      	BRGE _0x2C000D
00849a e0e3      	LDI  R30,LOW(3)
00849b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000D:
00849d 940e ccae 	CALL SUBOPT_0x2A0
00849f c047      	RJMP _0x2C000A
                 ; 0016 0046         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C000C:
0084a0 30e3      	CPI  R30,LOW(0x3)
0084a1 e0a0      	LDI  R26,HIGH(0x3)
0084a2 07fa      	CPC  R31,R26
0084a3 f451      	BRNE _0x2C000E
0084a4 940e ccbb 	CALL SUBOPT_0x2A1
0084a6 30a4      	CPI  R26,LOW(0x4)
0084a7 f01c      	BRLT _0x2C000F
0084a8 e0e0      	LDI  R30,LOW(0)
0084a9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C000F:
0084ab 940e ccae 	CALL SUBOPT_0x2A0
0084ad c039      	RJMP _0x2C000A
                 ; 0016 0047         case KEY_OK     :   if(cursor == 0){            // -- Device Config
                 _0x2C000E:
0084ae 30e4      	CPI  R30,LOW(0x4)
0084af e0a0      	LDI  R26,HIGH(0x4)
0084b0 07fa      	CPC  R31,R26
0084b1 f5a9      	BRNE _0x2C000A
0084b2 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0084b4 30e0      	CPI  R30,0
0084b5 f419      	BRNE _0x2C0011
                 ; 0016 0048                                 currentPage = P_DEV_MENU;
0084b6 940e ccc1 	CALL SUBOPT_0x2A2
                 ; 0016 0049                                 cursor      = 0;
                 ; 0016 004A                                 printOLED("M2%1d",cursor);
                 ; 0016 004B                             }
                 ; 0016 004C                             else if(cursor == 1){       // -- Probe Config
0084b8 c02e      	RJMP _0x2C0012
                 _0x2C0011:
0084b9 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0084bb 30a1      	CPI  R26,LOW(0x1)
0084bc f431      	BRNE _0x2C0013
                 ; 0016 004D                                 currentPage = P_PRB_MENU;
0084bd e0ee      	LDI  R30,LOW(14)
0084be 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 004E                                 cursor      = 0;
                 ; 0016 004F                                 printOLED("M3%1d",cursor);
0084c0 940e ccda 	CALL SUBOPT_0x2A4
                 ; 0016 0050                             }
                 ; 0016 0051                             else if(cursor == 2){       // -- Management
0084c2 c024      	RJMP _0x2C0014
                 _0x2C0013:
0084c3 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0084c5 30a2      	CPI  R26,LOW(0x2)
0084c6 f431      	BRNE _0x2C0015
                 ; 0016 0052                                 currentPage = P_MANAGE_MENU;
0084c7 e1e1      	LDI  R30,LOW(17)
0084c8 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0053                                 cursor      = 0;
                 ; 0016 0054                                 printOLED("M4%1d",cursor);
0084ca 940e cce7 	CALL SUBOPT_0x2A5
                 ; 0016 0055                             }
                 ; 0016 0056                             else if(cursor == 3){       // -- Maintenance
0084cc c01a      	RJMP _0x2C0016
                 _0x2C0015:
0084cd 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0084cf 30a3      	CPI  R26,LOW(0x3)
0084d0 f469      	BRNE _0x2C0017
                 ; 0016 0057                                 currentPage = P_ENTER_M_PASS;
0084d1 e2e2      	LDI  R30,LOW(34)
0084d2 940e ccf4 	CALL SUBOPT_0x2A6
                 ; 0016 0058                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0059                                 tmpPrevPage = P_MAIN_MENU;
0084d4 e0e1      	LDI  R30,LOW(1)
0084d5 940e ccfa 	CALL SUBOPT_0x2A7
                 ; 0016 005A                                 memset(entPwd,0xFF,sizeof(entPwd));
0084d7 940e cd04 	CALL SUBOPT_0x2A8
                 ; 0016 005B                                 cursor      = 0;
                 ; 0016 005C                                 printOLED("P1");
                +
0084d9 e5e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 33 ) )
0084da e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 33 ) )
0084db e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 33 ) )
0084dc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 33 ) )
                 	__POINTD1FN _0x2C0000,33
0084dd c005      	RJMP _0x2C02B5
                 ; 0016 005D                             }
                 ; 0016 005E                             else{                       // -- Exit -- should not occur
                 _0x2C0017:
                 ; 0016 005F                                 currentPage = P_MONITOR;
                 _0x2C02B4:
0084de e0e0      	LDI  R30,LOW(0)
0084df 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0060                                 cursor      = 0;
                 ; 0016 0061                                 printOLED("M0");
0084e1 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02B5:
0084e3 940e da29 	CALL __PUTPARD1
0084e5 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 0062                             }
                 _0x2C0016:
                 _0x2C0014:
                 _0x2C0012:
                 ; 0016 0063             break;
                 ; 0016 0064         }
                 _0x2C000A:
                 ; 0016 0065     }
                 ; 0016 0066     else if ( currentPage == P_DEV_MENU )
0084e7 940c 93ec 	JMP  _0x2C0019
                 _0x2C0007:
0084e9 91a0 14df 	LDS  R26,_currentPage
0084eb 30a2      	CPI  R26,LOW(0x2)
0084ec f011      	BREQ PC+3
0084ed 940c 8538 	JMP _0x2C001A
                 ; 0016 0067     {
                 ; 0016 0068         switch(key){
0084ef 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0069         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 0;            printOLED("M1%1d",cursor);  break;
0084f1 f419      	BRNE _0x2C001E
0084f2 940e cc8f 	CALL SUBOPT_0x29D
0084f4 c041      	RJMP _0x2C001D
                 ; 0016 006A         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001E:
0084f5 30e2      	CPI  R30,LOW(0x2)
0084f6 e0a0      	LDI  R26,HIGH(0x2)
0084f7 07fa      	CPC  R31,R26
0084f8 f449      	BRNE _0x2C001F
0084f9 940e cca7 	CALL SUBOPT_0x29F
0084fb f41c      	BRGE _0x2C0020
0084fc e0e1      	LDI  R30,LOW(1)
0084fd 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0020:
0084ff 940e ccae 	CALL SUBOPT_0x2A0
008501 c034      	RJMP _0x2C001D
                 ; 0016 006B         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C001F:
008502 30e3      	CPI  R30,LOW(0x3)
008503 e0a0      	LDI  R26,HIGH(0x3)
008504 07fa      	CPC  R31,R26
008505 f451      	BRNE _0x2C0021
008506 940e ccbb 	CALL SUBOPT_0x2A1
008508 30a2      	CPI  R26,LOW(0x2)
008509 f01c      	BRLT _0x2C0022
00850a e0e0      	LDI  R30,LOW(0)
00850b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0022:
00850d 940e ccae 	CALL SUBOPT_0x2A0
00850f c026      	RJMP _0x2C001D
                 ; 0016 006C         case KEY_OK     :   if(cursor == 0){            // -- View Device Config
                 _0x2C0021:
008510 30e4      	CPI  R30,LOW(0x4)
008511 e0a0      	LDI  R26,HIGH(0x4)
008512 07fa      	CPC  R31,R26
008513 f511      	BRNE _0x2C001D
008514 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008516 30e0      	CPI  R30,0
008517 f431      	BRNE _0x2C0024
                 ; 0016 006D                                 currentPage = P_DEV_V_MENU;
008518 e0e3      	LDI  R30,LOW(3)
008519 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 006E                                 cursor      = 0;
                 ; 0016 006F                                 printOLED("M5%1d",cursor);
00851b 940e cd0f 	CALL SUBOPT_0x2AA
                 ; 0016 0070                             }
                 ; 0016 0071                             else if(cursor == 1){       // -- Set Device Config
00851d c018      	RJMP _0x2C0025
                 _0x2C0024:
00851e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008520 30a1      	CPI  R26,LOW(0x1)
008521 f459      	BRNE _0x2C0026
                 ; 0016 0072                                 currentPage = P_ENTER_U_PASS;
008522 e2e1      	LDI  R30,LOW(33)
008523 940e cd1c 	CALL SUBOPT_0x2AB
                 ; 0016 0073                                 tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0074                                 tmpPrevPage = P_DEV_MENU;
008525 e0e2      	LDI  R30,LOW(2)
008526 940e ccfa 	CALL SUBOPT_0x2A7
                 ; 0016 0075                                 memset(entPwd,0xFF,sizeof(entPwd));
008528 940e cd04 	CALL SUBOPT_0x2A8
                 ; 0016 0076                                 cursor      = 0;
                 ; 0016 0077                                 printOLED("P0");
00852a 940e cd22 	CALL SUBOPT_0x2AC
00852c c005      	RJMP _0x2C02B6
                 ; 0016 0078                             }
                 ; 0016 0079                             else{                       // -- Exit -- should not occur
                 _0x2C0026:
                 ; 0016 007A                                 currentPage = P_MONITOR;
00852d e0e0      	LDI  R30,LOW(0)
00852e 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 007B                                 cursor      = 0;
                 ; 0016 007C                                 printOLED("M0");
008530 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02B6:
008532 940e da29 	CALL __PUTPARD1
008534 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 007D                             }
                 _0x2C0025:
                 ; 0016 007E             break;
                 ; 0016 007F         }
                 _0x2C001D:
                 ; 0016 0080     }
                 ; 0016 0081     else if ( currentPage == P_DEV_V_MENU )
008536 940c 93ec 	JMP  _0x2C0028
                 _0x2C001A:
008538 91a0 14df 	LDS  R26,_currentPage
00853a 30a3      	CPI  R26,LOW(0x3)
00853b f011      	BREQ PC+3
00853c 940c 8715 	JMP _0x2C0029
                 ; 0016 0082     {
                 ; 0016 0083         switch(key){
00853e 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0084         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
008540 f419      	BRNE _0x2C002D
008541 940e ccc1 	CALL SUBOPT_0x2A2
008543 c1cf      	RJMP _0x2C002C
                 ; 0016 0085         /* // -- disable network view -- //
                 ; 0016 0086         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0087         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 ; 0016 0088         */
                 ; 0016 0089         // -- enable network view -- //
                 ; 0016 008A         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002D:
008544 30e2      	CPI  R30,LOW(0x2)
008545 e0a0      	LDI  R26,HIGH(0x2)
008546 07fa      	CPC  R31,R26
008547 f449      	BRNE _0x2C002E
008548 940e cca7 	CALL SUBOPT_0x29F
00854a f41c      	BRGE _0x2C002F
00854b e0e2      	LDI  R30,LOW(2)
00854c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C002F:
00854e 940e ccae 	CALL SUBOPT_0x2A0
008550 c1c2      	RJMP _0x2C002C
                 ; 0016 008B         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C002E:
008551 30e3      	CPI  R30,LOW(0x3)
008552 e0a0      	LDI  R26,HIGH(0x3)
008553 07fa      	CPC  R31,R26
008554 f451      	BRNE _0x2C0030
008555 940e ccbb 	CALL SUBOPT_0x2A1
008557 30a3      	CPI  R26,LOW(0x3)
008558 f01c      	BRLT _0x2C0031
008559 e0e0      	LDI  R30,LOW(0)
00855a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0031:
00855c 940e ccae 	CALL SUBOPT_0x2A0
00855e c1b4      	RJMP _0x2C002C
                 ; 0016 008C         case KEY_OK     :   if(cursor == 0){            // -- View Properties
                 _0x2C0030:
00855f 30e4      	CPI  R30,LOW(0x4)
008560 e0a0      	LDI  R26,HIGH(0x4)
008561 07fa      	CPC  R31,R26
008562 f011      	BREQ PC+3
008563 940c 8713 	JMP _0x2C002C
008565 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008567 30e0      	CPI  R30,0
008568 f531      	BRNE _0x2C0033
                 ; 0016 008D                                 currentPage = P_DEV_V_PROP;
008569 e0e4      	LDI  R30,LOW(4)
00856a 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 008E                                 cursor      = 0;
                 ; 0016 008F                                 printDebug("<MENU_processKey> VP%s,%s,%s,",  properties_config.deviceID,
                 ; 0016 0090                                                                             properties_config.hostID,
                 ; 0016 0091                                                                             properties_config.firmwareVersion);
                +
00856c e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 45 ) )
00856d e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 45 ) )
00856e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 45 ) )
00856f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 45 ) )
                 	__POINTD1FN _0x2C0000,45
008570 940e cd27 	CALL SUBOPT_0x2AD
                +
008572 eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
008573 e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
008574 940e bd18 	CALL SUBOPT_0x34
                +
008576 e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
008577 e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
008578 940e bd18 	CALL SUBOPT_0x34
00857a 940e be6d 	CALL SUBOPT_0x66
                 ; 0016 0092 
                 ; 0016 0093                                 printOLED("VP%s,%s,%s,", properties_config.deviceID,
                 ; 0016 0094                                                         properties_config.hostID,
                 ; 0016 0095                                                         properties_config.firmwareVersion);
                +
00857c e6ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 63 ) )
00857d e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 63 ) )
00857e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 63 ) )
00857f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 63 ) )
                 	__POINTD1FN _0x2C0000,63
008580 940e cd27 	CALL SUBOPT_0x2AD
                +
008582 eae1     +LDI R30 , LOW ( _properties_config + ( 140 ) )
008583 e1f1     +LDI R31 , HIGH ( _properties_config + ( 140 ) )
                 	__POINTW1MN _properties_config,140
008584 940e bd18 	CALL SUBOPT_0x34
                +
008586 e2e9     +LDI R30 , LOW ( _properties_config + ( 20 ) )
008587 e1f1     +LDI R31 , HIGH ( _properties_config + ( 20 ) )
                 	__POINTW1MN _properties_config,20
008588 940e bd18 	CALL SUBOPT_0x34
00858a e08c      	LDI  R24,12
00858b 940e 7c63 	CALL _printOLED
00858d 9660      	ADIW R28,16
                 ; 0016 0096                             }
                 ; 0016 0097                             else if(cursor == 1){       // -- View Operate Config
00858e c184      	RJMP _0x2C0034
                 _0x2C0033:
00858f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008591 30a1      	CPI  R26,LOW(0x1)
008592 f011      	BREQ PC+3
008593 940c 8639 	JMP _0x2C0035
                 ; 0016 0098                                 currentPage = P_DEV_V_OPER;
008595 e0e5      	LDI  R30,LOW(5)
008596 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0099                                 cursor      = 0;
                 ; 0016 009A 
                 ; 0016 009B                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
008598 01fe      	MOVW R30,R28
008599 9638      	ADIW R30,8
00859a 940e c206 	CALL SUBOPT_0xF8
00859c 940e cd2d 	CALL SUBOPT_0x2AE
                 ; 0016 009C                                 memset(str,'\0',sizeof(str));
00859e 940e cd40 	CALL SUBOPT_0x2AF
0085a0 940e cd44 	CALL SUBOPT_0x2B0
                 ; 0016 009D                                 if(     operating_config.mode == MODE_REALTIME){    sprintf(str,"Realtime,");   }
0085a2 91a0 11b6 	LDS  R26,_operating_config
0085a4 31a0      	CPI  R26,LOW(0x10)
0085a5 f439      	BRNE _0x2C0036
0085a6 940e cd48 	CALL SUBOPT_0x2B1
                +
0085a8 e7eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 75 ) )
0085a9 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 75 ) )
0085aa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 75 ) )
0085ab e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 75 ) )
                 	__POINTD1FN _0x2C0000,75
0085ac c011      	RJMP _0x2C02B7
                 ; 0016 009E                                 else if(operating_config.mode == MODE_DATALOGGER){  sprintf(str,"Datalogger,"); }
                 _0x2C0036:
0085ad 91a0 11b6 	LDS  R26,_operating_config
0085af 32a0      	CPI  R26,LOW(0x20)
0085b0 f439      	BRNE _0x2C0038
0085b1 940e cd48 	CALL SUBOPT_0x2B1
                +
0085b3 e8e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 85 ) )
0085b4 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 85 ) )
0085b5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 85 ) )
0085b6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 85 ) )
                 	__POINTD1FN _0x2C0000,85
0085b7 c006      	RJMP _0x2C02B7
                 ; 0016 009F                                 else{                                               sprintf(str,"Unknown,");    }
                 _0x2C0038:
0085b8 940e cd48 	CALL SUBOPT_0x2B1
                +
0085ba e9e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 97 ) )
0085bb e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 97 ) )
0085bc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 97 ) )
0085bd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 97 ) )
                 	__POINTD1FN _0x2C0000,97
                 _0x2C02B7:
0085be 940e da29 	CALL __PUTPARD1
0085c0 940e cd4d 	CALL SUBOPT_0x2B2
                 ; 0016 00A0                                 strcat(cmd,str);
0085c2 940e cd52 	CALL SUBOPT_0x2B3
                 ; 0016 00A1 
                 ; 0016 00A2                                 memset(str,'\0',sizeof(str));
0085c4 940e cd44 	CALL SUBOPT_0x2B0
                 ; 0016 00A3                                 if(     operating_config.deviceEnable == 0x01   ){  sprintf(str,"Enable,");     }
                +
0085c6 91a0 11b7+LDS R26 , _operating_config + ( 1 )
                 	__GETB2MN _operating_config,1
0085c8 30a1      	CPI  R26,LOW(0x1)
0085c9 f439      	BRNE _0x2C003A
0085ca 940e cd48 	CALL SUBOPT_0x2B1
                +
0085cc e9ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
0085cd e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
0085ce e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
0085cf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
0085d0 c006      	RJMP _0x2C02B8
                 ; 0016 00A4                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003A:
0085d1 940e cd48 	CALL SUBOPT_0x2B1
                +
0085d3 eae2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
0085d4 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
0085d5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
0085d6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B8:
0085d7 940e da29 	CALL __PUTPARD1
0085d9 940e cd4d 	CALL SUBOPT_0x2B2
                 ; 0016 00A5                                 strcat(cmd,str);
0085db 940e cd52 	CALL SUBOPT_0x2B3
                 ; 0016 00A6 
                 ; 0016 00A7                                 memset(str,'\0',sizeof(str));
0085dd 940e cd44 	CALL SUBOPT_0x2B0
                 ; 0016 00A8                                 if(     operating_config.alarmEnable  == 0x01   ){  sprintf(str,"Enable,");     }
                +
0085df 91a0 11b8+LDS R26 , _operating_config + ( 2 )
                 	__GETB2MN _operating_config,2
0085e1 30a1      	CPI  R26,LOW(0x1)
0085e2 f439      	BRNE _0x2C003C
0085e3 940e cd48 	CALL SUBOPT_0x2B1
                +
0085e5 e9ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 106 ) )
0085e6 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 106 ) )
0085e7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 106 ) )
0085e8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 106 ) )
                 	__POINTD1FN _0x2C0000,106
0085e9 c006      	RJMP _0x2C02B9
                 ; 0016 00A9                                 else{                                               sprintf(str,"Disable,");    }
                 _0x2C003C:
0085ea 940e cd48 	CALL SUBOPT_0x2B1
                +
0085ec eae2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 114 ) )
0085ed e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 114 ) )
0085ee e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 114 ) )
0085ef e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 114 ) )
                 	__POINTD1FN _0x2C0000,114
                 _0x2C02B9:
0085f0 940e da29 	CALL __PUTPARD1
0085f2 940e cd4d 	CALL SUBOPT_0x2B2
                 ; 0016 00AA                                 strcat(cmd,str);
0085f4 940e cd52 	CALL SUBOPT_0x2B3
                 ; 0016 00AB 
                 ; 0016 00AC                                 memset(str,'\0',sizeof(str));
0085f6 940e cd44 	CALL SUBOPT_0x2B0
                 ; 0016 00AD                                 for(i=0,j=0;i<MAX_SENS_CHANNEL;i++){
                +
0085f8 e000     +LDI R16 , LOW ( 0 )
0085f9 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
0085fa e020     +LDI R18 , LOW ( 0 )
0085fb e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x2C003F:
                +
0085fc 3005     +CPI R16 , LOW ( 5 )
0085fd e0e0     +LDI R30 , HIGH ( 5 )
0085fe 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
0085ff f4c4      	BRGE _0x2C0040
                 ; 0016 00AE                                     if(operating_config.sensorEnable[i]==0x01   ){  str[j++] = 'E';             }
008600 940e cd5b 	CALL SUBOPT_0x2B4
008602 81a0      	LD   R26,Z
008603 30a1      	CPI  R26,LOW(0x1)
008604 f421      	BRNE _0x2C0041
008605 940e cd60 	CALL SUBOPT_0x2B5
008607 e4e5      	LDI  R30,LOW(69)
008608 c003      	RJMP _0x2C02BA
                 ; 0016 00AF                                     else{                                           str[j++] = 'D';             }
                 _0x2C0041:
008609 940e cd60 	CALL SUBOPT_0x2B5
00860b e4e4      	LDI  R30,LOW(68)
                 _0x2C02BA:
00860c 93ec      	ST   X,R30
                 ; 0016 00B0                                     if( i < MAX_SENS_CHANNEL-1){
                +
00860d 3004     +CPI R16 , LOW ( 4 )
00860e e0e0     +LDI R30 , HIGH ( 4 )
00860f 071e     +CPC R17 , R30
                 	__CPWRN 16,17,4
008610 f424      	BRGE _0x2C0043
                 ; 0016 00B1                                         str[j++] = '/';
008611 940e cd60 	CALL SUBOPT_0x2B5
008613 e2ef      	LDI  R30,LOW(47)
008614 93ec      	ST   X,R30
                 ; 0016 00B2                                     }
                 ; 0016 00B3 
                 ; 0016 00B4                                 }
                 _0x2C0043:
                +
008615 5f0f     +SUBI R16 , LOW ( - 1 )
008616 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008617 cfe4      	RJMP _0x2C003F
                 _0x2C0040:
                 ; 0016 00B5                                 str[j++]    = ',';
008618 940e cd60 	CALL SUBOPT_0x2B5
00861a e2ec      	LDI  R30,LOW(44)
00861b 93ec      	ST   X,R30
                 ; 0016 00B6                                 str[j++]    = '\0';
00861c 940e cd60 	CALL SUBOPT_0x2B5
00861e e0e0      	LDI  R30,LOW(0)
00861f 93ec      	ST   X,R30
                 ; 0016 00B7                                 strcat(cmd,str);
008620 01fe      	MOVW R30,R28
008621 9638      	ADIW R30,8
008622 93fa      	ST   -Y,R31
008623 93ea      	ST   -Y,R30
008624 01de      	MOVW R26,R28
008625 96dc      	ADIW R26,60
008626 940e a134 	CALL _strcat
                 ; 0016 00B8 
                 ; 0016 00B9 
                 ; 0016 00BA                                 printDebug("<MENU_processKey> VO%s", cmd);
                +
008628 eaeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 123 ) )
008629 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 123 ) )
00862a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 123 ) )
00862b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 123 ) )
                 	__POINTD1FN _0x2C0000,123
00862c 940e cd68 	CALL SUBOPT_0x2B6
00862e 940e bc2c 	CALL SUBOPT_0x12
                 ; 0016 00BB                                 printOLED("VO%s", cmd);
                +
008630 ebed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 141 ) )
008631 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 141 ) )
008632 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 141 ) )
008633 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 141 ) )
                 	__POINTD1FN _0x2C0000,141
008634 940e cd68 	CALL SUBOPT_0x2B6
008636 940e cada 	CALL SUBOPT_0x263
                 ; 0016 00BC                             }
                 ; 0016 00BD                             else if(cursor == 2){       // -- View Network Config
008638 c0da      	RJMP _0x2C0044
                 _0x2C0035:
008639 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00863b 30a2      	CPI  R26,LOW(0x2)
00863c f011      	BREQ PC+3
00863d 940c 870c 	JMP _0x2C0045
                 ; 0016 00BE 
                 ; 0016 00BF                                 memset(cmd,'\0',sizeof(cmd));   sprintf(cmd,"");
00863f 01fe      	MOVW R30,R28
008640 9638      	ADIW R30,8
008641 940e c206 	CALL SUBOPT_0xF8
008643 940e cd2d 	CALL SUBOPT_0x2AE
                 ; 0016 00C0 
                 ; 0016 00C1                                 msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
008645 e4a5      	LDI  R26,LOW(325)
008646 e0b1      	LDI  R27,HIGH(325)
008647 940e a0a2 	CALL _malloc
                +
008649 01de     +MOVW R26 , R28
00864a 5aac     +SUBI R26 , LOW ( - 84 )
00864b 4fbf     +SBCI R27 , HIGH ( - 84 )
00864c 93ed     +ST X + , R30
00864d 93fc     +ST X , R31
                 	__PUTW1SX 84
                 ; 0016 00C2                                 if(msg == NULL){
00864e 940e cd6e 	CALL SUBOPT_0x2B7
008650 9730      	SBIW R30,0
008651 f449      	BRNE _0x2C0046
                 ; 0016 00C3                                     printDebug("<MENU_processKey> malloc(CONF_READ_BUFFER) failed\r\n");
                +
008652 ece2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 146 ) )
008653 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 146 ) )
008654 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 146 ) )
008655 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 146 ) )
                 	__POINTD1FN _0x2C0000,146
008656 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 00C4                                     currentPage = P_DEV_MENU;       cursor  = 0;            printOLED("M2%1d",cursor);  break;
008658 940e ccc1 	CALL SUBOPT_0x2A2
00865a c0b8      	RJMP _0x2C002C
                 ; 0016 00C5                                 }
                 ; 0016 00C6 
                 ; 0016 00C7                                 res = ETH_getConfig(msg,&msg_len);
                 _0x2C0046:
00865b 940e cd6e 	CALL SUBOPT_0x2B7
00865d 93fa      	ST   -Y,R31
00865e 93ea      	ST   -Y,R30
00865f 01de      	MOVW R26,R28
008660 5aac      	SUBI R26,LOW(-(84))
008661 4fbf      	SBCI R27,HIGH(-(84))
008662 940e 5d49 	CALL _ETH_getConfig
008664 01af      	MOVW R20,R30
                 ; 0016 00C8                                 if(res < 0){
008665 2355      	TST  R21
008666 f42a      	BRPL _0x2C0047
                 ; 0016 00C9                                     printDebug("<MENU_processKey> ETH_getConfig() failed\r\n");
                +
008667 efe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 198 ) )
008668 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 198 ) )
008669 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 198 ) )
00866a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 198 ) )
                 	__POINTD1FN _0x2C0000,198
00866b c02c      	RJMP _0x2C02BB
                 ; 0016 00CA                                 }
                 ; 0016 00CB                                 else{
                 _0x2C0047:
                 ; 0016 00CC                                     printDebug("<MENU_processKey> ETH_getConfig() success\r\n");
                +
00866c e2e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 241 ) )
00866d e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 241 ) )
00866e e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 241 ) )
00866f e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 241 ) )
                 	__POINTD1FN _0x2C0000,241
008670 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 00CD                                     printDebug("\r\n\r\n<MENU_processKey> read[%d] -->\r\n",msg_len);
                +
008672 e4ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 285 ) )
008673 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 285 ) )
008674 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 285 ) )
008675 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 285 ) )
                 	__POINTD1FN _0x2C0000,285
008676 940e da29 	CALL __PUTPARD1
                +
008678 01fe     +MOVW R30 , R28
008679 5aea     +SUBI R30 , LOW ( - 86 )
00867a 4fff     +SBCI R31 , HIGH ( - 86 )
00867b 9001     +LD R0 , Z +
00867c 81f0     +LD R31 , Z
00867d 2de0     +MOV R30 , R0
                 	__GETW1SX 86
00867e 940e bd18 	CALL SUBOPT_0x34
008680 940e bc2c 	CALL SUBOPT_0x12
                 ; 0016 00CE                                     for(i=0;i<msg_len;i++){
                +
008682 e000     +LDI R16 , LOW ( 0 )
008683 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C004A:
008684 940e cd75 	CALL SUBOPT_0x2B8
008686 170e      	CP   R16,R30
008687 071f      	CPC  R17,R31
008688 f458      	BRSH _0x2C004B
                 ; 0016 00CF                                         putchar3(msg[i]);
008689 01f8      	MOVW R30,R16
00868a 940e cd7c 	CALL SUBOPT_0x2B9
00868c 0fae      	ADD  R26,R30
00868d 1fbf      	ADC  R27,R31
00868e 91ac      	LD   R26,X
00868f 940e 3fe3 	CALL _putchar3
                 ; 0016 00D0                                     }
                +
008691 5f0f     +SUBI R16 , LOW ( - 1 )
008692 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008693 cff0      	RJMP _0x2C004A
                 _0x2C004B:
                 ; 0016 00D1                                     printDebug("\r\n");
                +
008694 efe3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
008695 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
008696 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
008697 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
                 _0x2C02BB:
008698 940e da29 	CALL __PUTPARD1
00869a 940e bd21 	CALL SUBOPT_0x36
                 ; 0016 00D2                                 }
                 ; 0016 00D3 
                 ; 0016 00D4                                 res = getNetworkInfo(msg,&setIp[0],&setMask[0],&setGw[0],&setServer[0]);
00869c 940e cd6e 	CALL SUBOPT_0x2B7
00869e 93fa      	ST   -Y,R31
00869f 93ea      	ST   -Y,R30
0086a0 940e cd83 	CALL SUBOPT_0x2BA
0086a2 940e 9612 	CALL _getNetworkInfo
0086a4 01af      	MOVW R20,R30
                 ; 0016 00D5                                 if(res<0){
0086a5 2355      	TST  R21
0086a6 f45a      	BRPL _0x2C004C
                 ; 0016 00D6                                     printDebug("<MENU_processKey> getNetworkInfo() failed\r\n");
                +
0086a7 e7e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 322 ) )
0086a8 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 322 ) )
0086a9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 322 ) )
0086aa e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 322 ) )
                 	__POINTD1FN _0x2C0000,322
0086ab 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 00D7                                     return;
0086ad 940e daa0 	CALL __LOADLOCR6
0086af 96ef      	ADIW R28,63
0086b0 9668      	ADIW R28,24
0086b1 9508      	RET
                 ; 0016 00D8                                 }
                 ; 0016 00D9 
                 ; 0016 00DA                                 currentPage = P_DEV_V_NETW;
                 _0x2C004C:
0086b2 e0e6      	LDI  R30,LOW(6)
0086b3 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 00DB                                 cursor      = 0;
                 ; 0016 00DC 
                 ; 0016 00DD                                 printDebug("<MENU_processKey> VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,\r\n",
                 ; 0016 00DE                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00DF                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00E0                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00E1                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00E2                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00E3                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00E4                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00E5                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00E6                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00E7                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00E8                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00E9                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00EA                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00EB                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00EC                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00ED                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
0086b5 e9ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 366 ) )
0086b6 e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 366 ) )
0086b7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 366 ) )
0086b8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 366 ) )
                 	__POINTD1FN _0x2C0000,366
0086b9 940e cd92 	CALL SUBOPT_0x2BB
0086bb 940e cda5 	CALL SUBOPT_0x2BC
0086bd 940e cdb6 	CALL SUBOPT_0x2BD
0086bf 940e cdc7 	CALL SUBOPT_0x2BE
0086c1 940e cdd8 	CALL SUBOPT_0x2BF
0086c3 940e cde9 	CALL SUBOPT_0x2C0
0086c5 940e cdfa 	CALL SUBOPT_0x2C1
0086c7 940e ce0b 	CALL SUBOPT_0x2C2
0086c9 940e ce1c 	CALL SUBOPT_0x2C3
0086cb 940e ce2d 	CALL SUBOPT_0x2C4
0086cd 940e ce3e 	CALL SUBOPT_0x2C5
0086cf 940e ce4f 	CALL SUBOPT_0x2C6
0086d1 940e ce60 	CALL SUBOPT_0x2C7
0086d3 940e ce72 	CALL SUBOPT_0x2C8
0086d5 940e ce84 	CALL SUBOPT_0x2C9
0086d7 940e ce96 	CALL SUBOPT_0x2CA
0086d9 e480      	LDI  R24,64
0086da 940e 9ad2 	CALL _printDebug
0086dc 96ef      	ADIW R28,63
0086dd 9625      	ADIW R28,5
                 ; 0016 00EE 
                 ; 0016 00EF                                 printOLED("VN%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 00F0                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 00F1                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 00F2                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 00F3                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 00F4                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 00F5                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 00F6                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 00F7                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 00F8                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 00F9                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 00FA                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 00FB                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 00FC                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 00FD                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 00FE                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 00FF                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
0086de eee5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 437 ) )
0086df e5fe     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 437 ) )
0086e0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 437 ) )
0086e1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 437 ) )
                 	__POINTD1FN _0x2C0000,437
0086e2 940e cd92 	CALL SUBOPT_0x2BB
0086e4 940e cda5 	CALL SUBOPT_0x2BC
0086e6 940e cdb6 	CALL SUBOPT_0x2BD
0086e8 940e cdc7 	CALL SUBOPT_0x2BE
0086ea 940e cdd8 	CALL SUBOPT_0x2BF
0086ec 940e cde9 	CALL SUBOPT_0x2C0
0086ee 940e cdfa 	CALL SUBOPT_0x2C1
0086f0 940e ce0b 	CALL SUBOPT_0x2C2
0086f2 940e ce1c 	CALL SUBOPT_0x2C3
0086f4 940e ce2d 	CALL SUBOPT_0x2C4
0086f6 940e ce3e 	CALL SUBOPT_0x2C5
0086f8 940e ce4f 	CALL SUBOPT_0x2C6
0086fa 940e ce60 	CALL SUBOPT_0x2C7
0086fc 940e ce72 	CALL SUBOPT_0x2C8
0086fe 940e ce84 	CALL SUBOPT_0x2C9
008700 940e ce96 	CALL SUBOPT_0x2CA
008702 e480      	LDI  R24,64
008703 940e 7c63 	CALL _printOLED
008705 96ef      	ADIW R28,63
008706 9625      	ADIW R28,5
                 ; 0016 0100                                 free( msg );
008707 940e cd7c 	CALL SUBOPT_0x2B9
008709 940e a0bd 	CALL _free
                 ; 0016 0101                             }
                 ; 0016 0102                             else{                       // -- Exit -- should not occur
00870b c007      	RJMP _0x2C004D
                 _0x2C0045:
                 ; 0016 0103                                 currentPage = P_MONITOR;
00870c e0e0      	LDI  R30,LOW(0)
00870d 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0104                                 cursor      = 0;
                 ; 0016 0105                                 printOLED("M0");
00870f 940e cd0a 	CALL SUBOPT_0x2A9
008711 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 0106                             }
                 _0x2C004D:
                 _0x2C0044:
                 _0x2C0034:
                 ; 0016 0107             break;
                 ; 0016 0108         }
                 _0x2C002C:
                 ; 0016 0109     }
                 ; 0016 010A     else if ( currentPage == P_DEV_V_PROP )
008713 940c 93ec 	JMP  _0x2C004E
                 _0x2C0029:
008715 91a0 14df 	LDS  R26,_currentPage
008717 30a4      	CPI  R26,LOW(0x4)
008718 f4b1      	BRNE _0x2C004F
                 ; 0016 010B     {
                 ; 0016 010C         switch(key){
008719 940e ceab 	CALL SUBOPT_0x2CC
                 ; 0016 010D         case KEY_UP     :   /* no operation */                                                                  break;
00871b f089      	BREQ _0x2C0052
                 ; 0016 010E         case KEY_DOWN   :   /* no operation */                                                                  break;
00871c 30e3      	CPI  R30,LOW(0x3)
00871d e0a0      	LDI  R26,HIGH(0x3)
00871e 07fa      	CPC  R31,R26
00871f f069      	BREQ _0x2C0052
                 ; 0016 010F         case KEY_MODE   :
008720 30e1      	CPI  R30,LOW(0x1)
008721 e0a0      	LDI  R26,HIGH(0x1)
008722 07fa      	CPC  R31,R26
008723 f021      	BREQ _0x2C0056
                 ; 0016 0110         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008724 30e4      	CPI  R30,LOW(0x4)
008725 e0a0      	LDI  R26,HIGH(0x4)
008726 07fa      	CPC  R31,R26
008727 f429      	BRNE _0x2C0052
                 _0x2C0056:
008728 e0e3      	LDI  R30,LOW(3)
008729 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0111                             cursor      = 0;
                 ; 0016 0112                             printOLED("M5%1d",cursor);
00872b 940e cd0f 	CALL SUBOPT_0x2AA
                 ; 0016 0113                         break;
                 ; 0016 0114         }
                 _0x2C0052:
                 ; 0016 0115     }
                 ; 0016 0116     else if ( currentPage == P_DEV_V_OPER )
00872d 940c 93ec 	JMP  _0x2C0058
                 _0x2C004F:
00872f 91a0 14df 	LDS  R26,_currentPage
008731 30a5      	CPI  R26,LOW(0x5)
008732 f4b1      	BRNE _0x2C0059
                 ; 0016 0117     {
                 ; 0016 0118         switch(key){
008733 940e ceab 	CALL SUBOPT_0x2CC
                 ; 0016 0119         case KEY_UP     :   /* no operation */                                                                  break;
008735 f089      	BREQ _0x2C005C
                 ; 0016 011A         case KEY_DOWN   :   /* no operation */                                                                  break;
008736 30e3      	CPI  R30,LOW(0x3)
008737 e0a0      	LDI  R26,HIGH(0x3)
008738 07fa      	CPC  R31,R26
008739 f069      	BREQ _0x2C005C
                 ; 0016 011B         case KEY_MODE   :
00873a 30e1      	CPI  R30,LOW(0x1)
00873b e0a0      	LDI  R26,HIGH(0x1)
00873c 07fa      	CPC  R31,R26
00873d f021      	BREQ _0x2C0060
                 ; 0016 011C         case KEY_OK     :   currentPage = P_DEV_V_MENU;
00873e 30e4      	CPI  R30,LOW(0x4)
00873f e0a0      	LDI  R26,HIGH(0x4)
008740 07fa      	CPC  R31,R26
008741 f429      	BRNE _0x2C005C
                 _0x2C0060:
008742 e0e3      	LDI  R30,LOW(3)
008743 940e ceb4 	CALL SUBOPT_0x2CD
                 ; 0016 011D                             cursor      = 1;
                 ; 0016 011E                             printOLED("M5%1d",cursor);
008745 940e cd0f 	CALL SUBOPT_0x2AA
                 ; 0016 011F                         break;
                 ; 0016 0120         }
                 _0x2C005C:
                 ; 0016 0121     }
                 ; 0016 0122     else if ( currentPage == P_DEV_V_NETW )
008747 940c 93ec 	JMP  _0x2C0062
                 _0x2C0059:
008749 91a0 14df 	LDS  R26,_currentPage
00874b 30a6      	CPI  R26,LOW(0x6)
00874c f4b1      	BRNE _0x2C0063
                 ; 0016 0123     {
                 ; 0016 0124         switch(key){
00874d 940e ceab 	CALL SUBOPT_0x2CC
                 ; 0016 0125         case KEY_UP     :   /* no operation */                                                                  break;
00874f f089      	BREQ _0x2C0066
                 ; 0016 0126         case KEY_DOWN   :   /* no operation */                                                                  break;
008750 30e3      	CPI  R30,LOW(0x3)
008751 e0a0      	LDI  R26,HIGH(0x3)
008752 07fa      	CPC  R31,R26
008753 f069      	BREQ _0x2C0066
                 ; 0016 0127         case KEY_MODE   :
008754 30e1      	CPI  R30,LOW(0x1)
008755 e0a0      	LDI  R26,HIGH(0x1)
008756 07fa      	CPC  R31,R26
008757 f021      	BREQ _0x2C006A
                 ; 0016 0128         case KEY_OK     :   currentPage = P_DEV_V_MENU;
008758 30e4      	CPI  R30,LOW(0x4)
008759 e0a0      	LDI  R26,HIGH(0x4)
00875a 07fa      	CPC  R31,R26
00875b f429      	BRNE _0x2C0066
                 _0x2C006A:
00875c e0e3      	LDI  R30,LOW(3)
00875d 940e ceba 	CALL SUBOPT_0x2CE
                 ; 0016 0129                             cursor      = 2;
                 ; 0016 012A                             printOLED("M5%1d",cursor);
00875f 940e cd0f 	CALL SUBOPT_0x2AA
                 ; 0016 012B                         break;
                 ; 0016 012C         }
                 _0x2C0066:
                 ; 0016 012D     }
                 ; 0016 012E     else if ( currentPage == P_DEV_S_MENU )
008761 940c 93ec 	JMP  _0x2C006C
                 _0x2C0063:
008763 91a0 14df 	LDS  R26,_currentPage
008765 30a7      	CPI  R26,LOW(0x7)
008766 f011      	BREQ PC+3
008767 940c 87ed 	JMP _0x2C006D
                 ; 0016 012F     {
                 ; 0016 0130         switch(key){
008769 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0131         case KEY_MODE   :   currentPage = P_DEV_MENU;       cursor  = 1;            printOLED("M2%1d",cursor);  break;
00876b f441      	BRNE _0x2C0071
00876c e0e2      	LDI  R30,LOW(2)
00876d 940e ceb4 	CALL SUBOPT_0x2CD
00876f 940e cec0 	CALL SUBOPT_0x2CF
008771 940e cec5 	CALL SUBOPT_0x2D0
008773 c077      	RJMP _0x2C0070
                 ; 0016 0132         //case KEY_UP     :   break;
                 ; 0016 0133         //case KEY_DOWN   :   break;
                 ; 0016 0134         // -- enable network configuration -- //
                 ; 0016 0135         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0071:
008774 30e2      	CPI  R30,LOW(0x2)
008775 e0a0      	LDI  R26,HIGH(0x2)
008776 07fa      	CPC  R31,R26
008777 f449      	BRNE _0x2C0072
008778 940e cca7 	CALL SUBOPT_0x29F
00877a f41c      	BRGE _0x2C0073
00877b e0e1      	LDI  R30,LOW(1)
00877c 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0073:
00877e 940e ccae 	CALL SUBOPT_0x2A0
008780 c06a      	RJMP _0x2C0070
                 ; 0016 0136         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0072:
008781 30e3      	CPI  R30,LOW(0x3)
008782 e0a0      	LDI  R26,HIGH(0x3)
008783 07fa      	CPC  R31,R26
008784 f451      	BRNE _0x2C0074
008785 940e ccbb 	CALL SUBOPT_0x2A1
008787 30a2      	CPI  R26,LOW(0x2)
008788 f01c      	BRLT _0x2C0075
008789 e0e0      	LDI  R30,LOW(0)
00878a 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0075:
00878c 940e ccae 	CALL SUBOPT_0x2A0
00878e c05c      	RJMP _0x2C0070
                 ; 0016 0137 
                 ; 0016 0138         case KEY_OK     :   if(cursor == 0){            // -- Set Operate Config
                 _0x2C0074:
00878f 30e4      	CPI  R30,LOW(0x4)
008790 e0a0      	LDI  R26,HIGH(0x4)
008791 07fa      	CPC  R31,R26
008792 f011      	BREQ PC+3
008793 940c 87eb 	JMP _0x2C0070
008795 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008797 30e0      	CPI  R30,0
008798 f561      	BRNE _0x2C0077
                 ; 0016 0139                                 currentPage = P_DEV_S_OPER;
008799 e0e8      	LDI  R30,LOW(8)
00879a 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 013A                                 cursor      = 0;
                 ; 0016 013B                                 devEn       = operating_config.deviceEnable;
                +
00879c 91e0 11b7+LDS R30 , _operating_config + ( 1 )
                 	__GETB1MN _operating_config,1
00879e 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 013C                                 almEn       = operating_config.alarmEnable;
                +
0087a0 91e0 11b8+LDS R30 , _operating_config + ( 2 )
                 	__GETB1MN _operating_config,2
0087a2 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 013D                                 printDebug("<MENU_processKey> devEn[%d] almEn[%d]",devEn,almEn);
                +
0087a4 e1e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 488 ) )
0087a5 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 488 ) )
0087a6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 488 ) )
0087a7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 488 ) )
                 	__POINTD1FN _0x2C0000,488
0087a8 940e cece 	CALL SUBOPT_0x2D1
0087aa 91e0 1a5f 	LDS  R30,_almEn_S0160000000
0087ac 940e c8d9 	CALL SUBOPT_0x214
                 ; 0016 013E                                 printOLED("SO%1d",cursor);
0087ae 940e ced4 	CALL SUBOPT_0x2D2
                 ; 0016 013F                                 printOLED("ED2%1d",devEn);
                +
0087b0 e4e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 532 ) )
0087b1 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 532 ) )
0087b2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 532 ) )
0087b3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 532 ) )
                 	__POINTD1FN _0x2C0000,532
0087b4 940e cece 	CALL SUBOPT_0x2D1
0087b6 940e cada 	CALL SUBOPT_0x263
                 ; 0016 0140                                 printOLED("ED3%1d",almEn);
                +
0087b8 e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 539 ) )
0087b9 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 539 ) )
0087ba e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 539 ) )
0087bb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 539 ) )
                 	__POINTD1FN _0x2C0000,539
0087bc 940e da29 	CALL __PUTPARD1
0087be 91e0 1a5f 	LDS  R30,_almEn_S0160000000
0087c0 940e be67 	CALL SUBOPT_0x65
0087c2 940e cada 	CALL SUBOPT_0x263
                 ; 0016 0141                             }
                 ; 0016 0142                             else if(cursor == 1){       // -- Set Network Config
0087c4 c026      	RJMP _0x2C0078
                 _0x2C0077:
0087c5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0087c7 30a1      	CPI  R26,LOW(0x1)
0087c8 f4d9      	BRNE _0x2C0079
                 ; 0016 0143                                 currentPage = P_DEV_S_IP;
0087c9 e0e9      	LDI  R30,LOW(9)
0087ca 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0144                                 cursor      = 0;
                 ; 0016 0145                                 printOLED("SI");
                +
0087cc e5e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
0087cd e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
0087ce e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
0087cf e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
0087d0 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 0146                                 for(i=0;i<12;i++){
                +
0087d2 e000     +LDI R16 , LOW ( 0 )
0087d3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C007B:
                +
0087d4 300c     +CPI R16 , LOW ( 12 )
0087d5 e0e0     +LDI R30 , HIGH ( 12 )
0087d6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
0087d7 f45c      	BRGE _0x2C007C
                 ; 0016 0147                                     printOLED("ID%1X%1d",i,setIp[i]);
0087d8 940e ced9 	CALL SUBOPT_0x2D3
0087da e2ae      	LDI  R26,LOW(_setIp_S0160000000)
0087db e1ba      	LDI  R27,HIGH(_setIp_S0160000000)
0087dc 940e cee1 	CALL SUBOPT_0x2D4
0087de 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0148                                 }
                +
0087e0 5f0f     +SUBI R16 , LOW ( - 1 )
0087e1 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0087e2 cff1      	RJMP _0x2C007B
                 _0x2C007C:
                 ; 0016 0149                             }
                 ; 0016 014A                             else{                       // -- Exit -- should not occur
0087e3 c007      	RJMP _0x2C007D
                 _0x2C0079:
                 ; 0016 014B                                 currentPage = P_MONITOR;
0087e4 e0e0      	LDI  R30,LOW(0)
0087e5 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 014C                                 cursor      = 0;
                 ; 0016 014D                                 printOLED("M0");
0087e7 940e cd0a 	CALL SUBOPT_0x2A9
0087e9 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 014E                             }
                 _0x2C007D:
                 _0x2C0078:
                 ; 0016 014F             break;
                 ; 0016 0150         }
                 _0x2C0070:
                 ; 0016 0151     }
                 ; 0016 0152     else if ( currentPage == P_DEV_S_OPER )
0087eb 940c 93ec 	JMP  _0x2C007E
                 _0x2C006D:
0087ed 91a0 14df 	LDS  R26,_currentPage
0087ef 30a8      	CPI  R26,LOW(0x8)
0087f0 f011      	BREQ PC+3
0087f1 940c 8885 	JMP _0x2C007F
                 ; 0016 0153     {
                 ; 0016 0154         switch(key){
0087f3 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0155         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 0;            printOLED("M6%1d",cursor);  break;
0087f5 f431      	BRNE _0x2C0083
0087f6 e0e7      	LDI  R30,LOW(7)
0087f7 940e ccd4 	CALL SUBOPT_0x2A3
0087f9 940e cee6 	CALL SUBOPT_0x2D5
0087fb c087      	RJMP _0x2C0082
                 ; 0016 0156         case KEY_UP     :   if(--cursor < 0){               cursor  = 2;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0083:
0087fc 30e2      	CPI  R30,LOW(0x2)
0087fd e0a0      	LDI  R26,HIGH(0x2)
0087fe 07fa      	CPC  R31,R26
0087ff f449      	BRNE _0x2C0084
008800 940e cca7 	CALL SUBOPT_0x29F
008802 f41c      	BRGE _0x2C0085
008803 e0e2      	LDI  R30,LOW(2)
008804 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0085:
008806 940e ced4 	CALL SUBOPT_0x2D2
008808 c07a      	RJMP _0x2C0082
                 ; 0016 0157         case KEY_DOWN   :   if(++cursor > 2){               cursor  = 0;    }       printOLED("SO%1d",cursor);  break;
                 _0x2C0084:
008809 30e3      	CPI  R30,LOW(0x3)
00880a e0a0      	LDI  R26,HIGH(0x3)
00880b 07fa      	CPC  R31,R26
00880c f451      	BRNE _0x2C0086
00880d 940e ccbb 	CALL SUBOPT_0x2A1
00880f 30a3      	CPI  R26,LOW(0x3)
008810 f01c      	BRLT _0x2C0087
008811 e0e0      	LDI  R30,LOW(0)
008812 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0087:
008814 940e ced4 	CALL SUBOPT_0x2D2
008816 c06c      	RJMP _0x2C0082
                 ; 0016 0158         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0086:
008817 30e4      	CPI  R30,LOW(0x4)
008818 e0a0      	LDI  R26,HIGH(0x4)
008819 07fa      	CPC  R31,R26
00881a f011      	BREQ PC+3
00881b 940c 8883 	JMP _0x2C0082
00881d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00881f 30e0      	CPI  R30,0
008820 f4c9      	BRNE _0x2C0089
                 ; 0016 0159                                 devEn       = !devEn;
008821 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008823 940e d928 	CALL __LNEGB1
008825 93e0 1a5e 	STS  _devEn_S0160000000,R30
                 ; 0016 015A                                 printDebug("<MENU_processKey> devEn -> ED%1d%1d",cursor+2,devEn);
                +
008827 e6e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 564 ) )
008828 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 564 ) )
008829 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 564 ) )
00882a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 564 ) )
                 	__POINTD1FN _0x2C0000,564
00882b 940e ceeb 	CALL SUBOPT_0x2D6
00882d 91e0 1a5e 	LDS  R30,_devEn_S0160000000
00882f 940e c8d9 	CALL SUBOPT_0x214
                 ; 0016 015B                                 printOLED("ED%1d%1d",cursor+2,devEn);
008831 940e cef4 	CALL SUBOPT_0x2D7
008833 91e0 1a5e 	LDS  R30,_devEn_S0160000000
008835 940e be67 	CALL SUBOPT_0x65
008837 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 015C                             }
                 ; 0016 015D                             else if(cursor == 1){       // -- Set Alarm Enable
008839 c049      	RJMP _0x2C008A
                 _0x2C0089:
00883a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00883c 30a1      	CPI  R26,LOW(0x1)
00883d f4c9      	BRNE _0x2C008B
                 ; 0016 015E                                 almEn       = !almEn;
00883e 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008840 940e d928 	CALL __LNEGB1
008842 93e0 1a5f 	STS  _almEn_S0160000000,R30
                 ; 0016 015F                                 printDebug("<MENU_processKey> almEn -> ED%1d%1d",cursor+2,almEn);
                +
008844 e8e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 600 ) )
008845 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 600 ) )
008846 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 600 ) )
008847 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 600 ) )
                 	__POINTD1FN _0x2C0000,600
008848 940e ceeb 	CALL SUBOPT_0x2D6
00884a 91e0 1a5f 	LDS  R30,_almEn_S0160000000
00884c 940e c8d9 	CALL SUBOPT_0x214
                 ; 0016 0160                                 printOLED("ED%1d%1d",cursor+2,almEn);
00884e 940e cef4 	CALL SUBOPT_0x2D7
008850 91e0 1a5f 	LDS  R30,_almEn_S0160000000
008852 940e be67 	CALL SUBOPT_0x65
008854 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0161                             }
                 ; 0016 0162                             else if(cursor == 2){       // -- Display Finish page
008856 c02c      	RJMP _0x2C008C
                 _0x2C008B:
008857 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008859 30a2      	CPI  R26,LOW(0x2)
00885a f509      	BRNE _0x2C008D
                 ; 0016 0163 
                 ; 0016 0164                                 operating_config.deviceEnable   = devEn;
00885b 91e0 1a5e 	LDS  R30,_devEn_S0160000000
                +
00885d 93e0 11b7+STS _operating_config + ( 1 ) , R30
                 	__PUTB1MN _operating_config,1
                 ; 0016 0165                                 operating_config.alarmEnable    = almEn;
00885f 91e0 1a5f 	LDS  R30,_almEn_S0160000000
                +
008861 93e0 11b8+STS _operating_config + ( 2 ) , R30
                 	__PUTB1MN _operating_config,2
                 ; 0016 0166                                 res = setOperatingConfig(&operating_config);
008863 940e cef9 	CALL SUBOPT_0x2D8
                 ; 0016 0167                                 if(res < 0){
008865 f452      	BRPL _0x2C008E
                 ; 0016 0168                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008866 940e cf00 	CALL SUBOPT_0x2D9
                 ; 0016 0169                                     currentPage = P_FAILED;
008868 e2e5      	LDI  R30,LOW(37)
008869 940e cd1c 	CALL SUBOPT_0x2AB
                 ; 0016 016A                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 016B                                     tmpPrevPage = P_DEV_S_OPER;
00886b 940e cf06 	CALL SUBOPT_0x2DA
                 ; 0016 016C                                     cursor      = 0;
                 ; 0016 016D                                     printOLED("FL");
00886d 940e cf0d 	CALL SUBOPT_0x2DB
00886f c007      	RJMP _0x2C02BC
                 ; 0016 016E                                 }
                 ; 0016 016F                                 else{
                 _0x2C008E:
                 ; 0016 0170                                     currentPage = P_FINISH;
008870 e2e4      	LDI  R30,LOW(36)
008871 940e cd1c 	CALL SUBOPT_0x2AB
                 ; 0016 0171                                     tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0172                                     tmpPrevPage = P_DEV_S_OPER;
008873 940e cf06 	CALL SUBOPT_0x2DA
                 ; 0016 0173                                     cursor      = 0;
                 ; 0016 0174                                     printOLED("FI");
008875 940e cf12 	CALL SUBOPT_0x2DC
                 _0x2C02BC:
008877 940e da29 	CALL __PUTPARD1
008879 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 0175                                 }
                 ; 0016 0176                             }
                 ; 0016 0177                             else{                       // -- Exit -- should not occur
00887b c007      	RJMP _0x2C0090
                 _0x2C008D:
                 ; 0016 0178                                 currentPage = P_MONITOR;
00887c e0e0      	LDI  R30,LOW(0)
00887d 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0179                                 cursor      = 0;
                 ; 0016 017A                                 printOLED("M0");
00887f 940e cd0a 	CALL SUBOPT_0x2A9
008881 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 017B                             }
                 _0x2C0090:
                 _0x2C008C:
                 _0x2C008A:
                 ; 0016 017C             break;
                 ; 0016 017D         }
                 _0x2C0082:
                 ; 0016 017E     }
                 ; 0016 017F     else if ( currentPage == P_DEV_S_IP )
008883 940c 93ec 	JMP  _0x2C0091
                 _0x2C007F:
008885 91a0 14df 	LDS  R26,_currentPage
008887 30a9      	CPI  R26,LOW(0x9)
008888 f011      	BREQ PC+3
008889 940c 88fe 	JMP _0x2C0092
                 ; 0016 0180     {
                 ; 0016 0181         switch(key){
00888b 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0182         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;            printOLED("M6%1d",cursor);              break;
00888d f431      	BRNE _0x2C0096
00888e e0e7      	LDI  R30,LOW(7)
00888f 940e ceb4 	CALL SUBOPT_0x2CD
008891 940e cee6 	CALL SUBOPT_0x2D5
008893 c068      	RJMP _0x2C0095
                 ; 0016 0183         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C0096:
008894 30e2      	CPI  R30,LOW(0x2)
008895 e0a0      	LDI  R26,HIGH(0x2)
008896 07fa      	CPC  R31,R26
008897 f451      	BRNE _0x2C0097
008898 940e ccbb 	CALL SUBOPT_0x2A1
00889a 30ad      	CPI  R26,LOW(0xD)
00889b f01c      	BRLT _0x2C0098
00889c e0e0      	LDI  R30,LOW(0)
00889d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0098:
00889f 940e cf17 	CALL SUBOPT_0x2DD
0088a1 c05a      	RJMP _0x2C0095
                 ; 0016 0184         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C0097:
0088a2 30e3      	CPI  R30,LOW(0x3)
0088a3 e0a0      	LDI  R26,HIGH(0x3)
0088a4 07fa      	CPC  R31,R26
0088a5 f449      	BRNE _0x2C0099
0088a6 940e cca7 	CALL SUBOPT_0x29F
0088a8 f41c      	BRGE _0x2C009A
0088a9 e0ec      	LDI  R30,LOW(12)
0088aa 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C009A:
0088ac 940e cf17 	CALL SUBOPT_0x2DD
0088ae c04d      	RJMP _0x2C0095
                 ; 0016 0185         case KEY_OK     :   if(cursor == 12){
                 _0x2C0099:
0088af 30e4      	CPI  R30,LOW(0x4)
0088b0 e0a0      	LDI  R26,HIGH(0x4)
0088b1 07fa      	CPC  R31,R26
0088b2 f011      	BREQ PC+3
0088b3 940c 88fc 	JMP _0x2C0095
0088b5 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0088b7 30ac      	CPI  R26,LOW(0xC)
0088b8 f4f1      	BRNE _0x2C009C
                 ; 0016 0186                                 cursor = 0;
0088b9 e0e0      	LDI  R30,LOW(0)
0088ba 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0187                                 currentPage = P_DEV_S_MASK;
0088bc e0ea      	LDI  R30,LOW(10)
0088bd 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0188                                 printOLED("SM");
                +
0088bf eee8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
0088c0 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
0088c1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
0088c2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
0088c3 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 0189                                 for(i=0;i<12;i++){
                +
0088c5 e000     +LDI R16 , LOW ( 0 )
0088c6 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C009E:
                +
0088c7 300c     +CPI R16 , LOW ( 12 )
0088c8 e0e0     +LDI R30 , HIGH ( 12 )
0088c9 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
0088ca f45c      	BRGE _0x2C009F
                 ; 0016 018A                                     printOLED("ID%1X%1d",i,setMask[i]);
0088cb 940e ced9 	CALL SUBOPT_0x2D3
0088cd e3aa      	LDI  R26,LOW(_setMask_S0160000000)
0088ce e1ba      	LDI  R27,HIGH(_setMask_S0160000000)
0088cf 940e cee1 	CALL SUBOPT_0x2D4
0088d1 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 018B                                 }
                +
0088d3 5f0f     +SUBI R16 , LOW ( - 1 )
0088d4 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0088d5 cff1      	RJMP _0x2C009E
                 _0x2C009F:
                 ; 0016 018C                             }
                 ; 0016 018D                             else if(cursor < 12){
0088d6 c025      	RJMP _0x2C00A0
                 _0x2C009C:
0088d7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0088d9 30ac      	CPI  R26,LOW(0xC)
0088da f4d4      	BRGE _0x2C00A1
                 ; 0016 018E                                 if((cursor%3) == 0){
0088db 940e cf1c 	CALL SUBOPT_0x2DE
0088dd f439      	BRNE _0x2C00A2
                 ; 0016 018F                                     if(++setIp[cursor] >2)  setIp[cursor] = 0;
0088de 940e cf27 	CALL SUBOPT_0x2DF
0088e0 30e3      	CPI  R30,LOW(0x3)
0088e1 f010      	BRLO _0x2C00A3
0088e2 940e cf30 	CALL SUBOPT_0x2E0
                 ; 0016 0190                                 }
                 _0x2C00A3:
                 ; 0016 0191                                 else{
0088e4 c006      	RJMP _0x2C00A4
                 _0x2C00A2:
                 ; 0016 0192                                     if(++setIp[cursor] >9)  setIp[cursor] = 0;
0088e5 940e cf27 	CALL SUBOPT_0x2DF
0088e7 30ea      	CPI  R30,LOW(0xA)
0088e8 f010      	BRLO _0x2C00A5
0088e9 940e cf30 	CALL SUBOPT_0x2E0
                 ; 0016 0193                                 }
                 _0x2C00A5:
                 _0x2C00A4:
                 ; 0016 0194                                 //if(++setIp[cursor] >9)  setIp[cursor] = 0;
                 ; 0016 0195                                 printOLED("ID%1X%1d",cursor, setIp[cursor]);
0088eb 940e cf38 	CALL SUBOPT_0x2E1
0088ed 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
0088ee 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
0088ef 81e0      	LD   R30,Z
0088f0 940e be67 	CALL SUBOPT_0x65
0088f2 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0196                             }
                 ; 0016 0197                             else{                       // -- Exit -- should not occur
0088f4 c007      	RJMP _0x2C00A6
                 _0x2C00A1:
                 ; 0016 0198                                 currentPage = P_MONITOR;
0088f5 e0e0      	LDI  R30,LOW(0)
0088f6 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0199                                 cursor      = 0;
                 ; 0016 019A                                 printOLED("M0");
0088f8 940e cd0a 	CALL SUBOPT_0x2A9
0088fa 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 019B                             }
                 _0x2C00A6:
                 _0x2C00A0:
                 ; 0016 019C             break;
                 ; 0016 019D         }
                 _0x2C0095:
                 ; 0016 019E     }
                 ; 0016 019F     else if ( currentPage == P_DEV_S_MASK )
0088fc 940c 93ec 	JMP  _0x2C00A7
                 _0x2C0092:
0088fe 91a0 14df 	LDS  R26,_currentPage
008900 30aa      	CPI  R26,LOW(0xA)
008901 f011      	BREQ PC+3
008902 940c 897b 	JMP _0x2C00A8
                 ; 0016 01A0     {
                 ; 0016 01A1         switch(key){
008904 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 01A2         case KEY_MODE   :   currentPage = P_DEV_S_IP;       cursor  = 0;            printOLED("SI");                        break;
008906 f441      	BRNE _0x2C00AC
008907 e0e9      	LDI  R30,LOW(9)
008908 940e ccd4 	CALL SUBOPT_0x2A3
                +
00890a e5e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 546 ) )
00890b e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 546 ) )
00890c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 546 ) )
00890d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 546 ) )
                 	__POINTD1FN _0x2C0000,546
00890e c066      	RJMP _0x2C02BD
                 ; 0016 01A3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AC:
00890f 30e2      	CPI  R30,LOW(0x2)
008910 e0a0      	LDI  R26,HIGH(0x2)
008911 07fa      	CPC  R31,R26
008912 f451      	BRNE _0x2C00AD
008913 940e ccbb 	CALL SUBOPT_0x2A1
008915 30ad      	CPI  R26,LOW(0xD)
008916 f01c      	BRLT _0x2C00AE
008917 e0e0      	LDI  R30,LOW(0)
008918 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00AE:
00891a 940e cf17 	CALL SUBOPT_0x2DD
00891c c05c      	RJMP _0x2C00AB
                 ; 0016 01A4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00AD:
00891d 30e3      	CPI  R30,LOW(0x3)
00891e e0a0      	LDI  R26,HIGH(0x3)
00891f 07fa      	CPC  R31,R26
008920 f449      	BRNE _0x2C00AF
008921 940e cca7 	CALL SUBOPT_0x29F
008923 f41c      	BRGE _0x2C00B0
008924 e0ec      	LDI  R30,LOW(12)
008925 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00B0:
008927 940e cf17 	CALL SUBOPT_0x2DD
008929 c04f      	RJMP _0x2C00AB
                 ; 0016 01A5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00AF:
00892a 30e4      	CPI  R30,LOW(0x4)
00892b e0a0      	LDI  R26,HIGH(0x4)
00892c 07fa      	CPC  R31,R26
00892d f011      	BREQ PC+3
00892e 940c 8979 	JMP _0x2C00AB
008930 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008932 30ac      	CPI  R26,LOW(0xC)
008933 f4f1      	BRNE _0x2C00B2
                 ; 0016 01A6                                 cursor = 0;
008934 e0e0      	LDI  R30,LOW(0)
008935 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01A7                                 currentPage = P_DEV_S_GATEWAY;
008937 e0eb      	LDI  R30,LOW(11)
008938 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01A8                                 printOLED("SG");
                +
00893a eeeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
00893b e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
00893c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
00893d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
00893e 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 01A9                                 for(i=0;i<12;i++){
                +
008940 e000     +LDI R16 , LOW ( 0 )
008941 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00B4:
                +
008942 300c     +CPI R16 , LOW ( 12 )
008943 e0e0     +LDI R30 , HIGH ( 12 )
008944 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
008945 f45c      	BRGE _0x2C00B5
                 ; 0016 01AA                                     printOLED("ID%1X%1d",i,setGw[i]);
008946 940e ced9 	CALL SUBOPT_0x2D3
008948 e4a6      	LDI  R26,LOW(_setGw_S0160000000)
008949 e1ba      	LDI  R27,HIGH(_setGw_S0160000000)
00894a 940e cee1 	CALL SUBOPT_0x2D4
00894c 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 01AB                                 }
                +
00894e 5f0f     +SUBI R16 , LOW ( - 1 )
00894f 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008950 cff1      	RJMP _0x2C00B4
                 _0x2C00B5:
                 ; 0016 01AC                             }
                 ; 0016 01AD                             else if(cursor < 12){
008951 c027      	RJMP _0x2C00B6
                 _0x2C00B2:
008952 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008954 30ac      	CPI  R26,LOW(0xC)
008955 f4d4      	BRGE _0x2C00B7
                 ; 0016 01AE                                 if((cursor%3) == 0){
008956 940e cf1c 	CALL SUBOPT_0x2DE
008958 f439      	BRNE _0x2C00B8
                 ; 0016 01AF                                     if(++setMask[cursor] >2)  setMask[cursor] = 0;
008959 940e cf48 	CALL SUBOPT_0x2E2
00895b 30e3      	CPI  R30,LOW(0x3)
00895c f010      	BRLO _0x2C00B9
00895d 940e cf51 	CALL SUBOPT_0x2E3
                 ; 0016 01B0                                 }
                 _0x2C00B9:
                 ; 0016 01B1                                 else{
00895f c006      	RJMP _0x2C00BA
                 _0x2C00B8:
                 ; 0016 01B2                                     if(++setMask[cursor] >9)  setMask[cursor] = 0;
008960 940e cf48 	CALL SUBOPT_0x2E2
008962 30ea      	CPI  R30,LOW(0xA)
008963 f010      	BRLO _0x2C00BB
008964 940e cf51 	CALL SUBOPT_0x2E3
                 ; 0016 01B3                                 }
                 _0x2C00BB:
                 _0x2C00BA:
                 ; 0016 01B4                                 //if(++setMask[cursor] >9)  setMask[cursor] = 0;
                 ; 0016 01B5                                 printOLED("ID%1X%1d",cursor, setMask[cursor]);
008966 940e cf38 	CALL SUBOPT_0x2E1
008968 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
008969 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
00896a 81e0      	LD   R30,Z
00896b 940e be67 	CALL SUBOPT_0x65
00896d 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 01B6                             }
                 ; 0016 01B7                             else{                       // -- Exit -- should not occur
00896f c009      	RJMP _0x2C00BC
                 _0x2C00B7:
                 ; 0016 01B8                                 currentPage = P_MONITOR;
008970 e0e0      	LDI  R30,LOW(0)
008971 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 01B9                                 cursor      = 0;
                 ; 0016 01BA                                 printOLED("M0");
008973 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02BD:
008975 940e da29 	CALL __PUTPARD1
008977 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 01BB                             }
                 _0x2C00BC:
                 _0x2C00B6:
                 ; 0016 01BC             break;
                 ; 0016 01BD         }
                 _0x2C00AB:
                 ; 0016 01BE     }
                 ; 0016 01BF     else if ( currentPage == P_DEV_S_GATEWAY )
008979 940c 93ec 	JMP  _0x2C00BD
                 _0x2C00A8:
00897b 91a0 14df 	LDS  R26,_currentPage
00897d 30ab      	CPI  R26,LOW(0xB)
00897e f011      	BREQ PC+3
00897f 940c 89f8 	JMP _0x2C00BE
                 ; 0016 01C0     {
                 ; 0016 01C1         switch(key){
008981 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 01C2         case KEY_MODE   :   currentPage = P_DEV_S_MASK;     cursor  = 0;            printOLED("SM");                        break;
008983 f441      	BRNE _0x2C00C2
008984 e0ea      	LDI  R30,LOW(10)
008985 940e ccd4 	CALL SUBOPT_0x2A3
                +
008987 eee8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 696 ) )
008988 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 696 ) )
008989 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 696 ) )
00898a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 696 ) )
                 	__POINTD1FN _0x2C0000,696
00898b c066      	RJMP _0x2C02BE
                 ; 0016 01C3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C2:
00898c 30e2      	CPI  R30,LOW(0x2)
00898d e0a0      	LDI  R26,HIGH(0x2)
00898e 07fa      	CPC  R31,R26
00898f f451      	BRNE _0x2C00C3
008990 940e ccbb 	CALL SUBOPT_0x2A1
008992 30ad      	CPI  R26,LOW(0xD)
008993 f01c      	BRLT _0x2C00C4
008994 e0e0      	LDI  R30,LOW(0)
008995 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C4:
008997 940e cf17 	CALL SUBOPT_0x2DD
008999 c05c      	RJMP _0x2C00C1
                 ; 0016 01C4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00C3:
00899a 30e3      	CPI  R30,LOW(0x3)
00899b e0a0      	LDI  R26,HIGH(0x3)
00899c 07fa      	CPC  R31,R26
00899d f449      	BRNE _0x2C00C5
00899e 940e cca7 	CALL SUBOPT_0x29F
0089a0 f41c      	BRGE _0x2C00C6
0089a1 e0ec      	LDI  R30,LOW(12)
0089a2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00C6:
0089a4 940e cf17 	CALL SUBOPT_0x2DD
0089a6 c04f      	RJMP _0x2C00C1
                 ; 0016 01C5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00C5:
0089a7 30e4      	CPI  R30,LOW(0x4)
0089a8 e0a0      	LDI  R26,HIGH(0x4)
0089a9 07fa      	CPC  R31,R26
0089aa f011      	BREQ PC+3
0089ab 940c 89f6 	JMP _0x2C00C1
0089ad 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0089af 30ac      	CPI  R26,LOW(0xC)
0089b0 f4f1      	BRNE _0x2C00C8
                 ; 0016 01C6                                 cursor = 0;
0089b1 e0e0      	LDI  R30,LOW(0)
0089b2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 01C7                                 currentPage = P_DEV_S_SERVER;
0089b4 e0ec      	LDI  R30,LOW(12)
0089b5 93e0 14df 	STS  _currentPage,R30
                 ; 0016 01C8                                 printOLED("SS");
                +
0089b7 eeee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 702 ) )
0089b8 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 702 ) )
0089b9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 702 ) )
0089ba e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 702 ) )
                 	__POINTD1FN _0x2C0000,702
0089bb 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 01C9                                 for(i=0;i<12;i++){
                +
0089bd e000     +LDI R16 , LOW ( 0 )
0089be e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C00CA:
                +
0089bf 300c     +CPI R16 , LOW ( 12 )
0089c0 e0e0     +LDI R30 , HIGH ( 12 )
0089c1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,12
0089c2 f45c      	BRGE _0x2C00CB
                 ; 0016 01CA                                     printOLED("ID%1X%1d",i,setServer[i]);
0089c3 940e ced9 	CALL SUBOPT_0x2D3
0089c5 e5a2      	LDI  R26,LOW(_setServer_S0160000000)
0089c6 e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
0089c7 940e cee1 	CALL SUBOPT_0x2D4
0089c9 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 01CB                                 }
                +
0089cb 5f0f     +SUBI R16 , LOW ( - 1 )
0089cc 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0089cd cff1      	RJMP _0x2C00CA
                 _0x2C00CB:
                 ; 0016 01CC                             }
                 ; 0016 01CD                             else if(cursor < 12){
0089ce c027      	RJMP _0x2C00CC
                 _0x2C00C8:
0089cf 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0089d1 30ac      	CPI  R26,LOW(0xC)
0089d2 f4d4      	BRGE _0x2C00CD
                 ; 0016 01CE                                 if((cursor%3) == 0){
0089d3 940e cf1c 	CALL SUBOPT_0x2DE
0089d5 f439      	BRNE _0x2C00CE
                 ; 0016 01CF                                     if(++setGw[cursor] >2)  setGw[cursor] = 0;
0089d6 940e cf59 	CALL SUBOPT_0x2E4
0089d8 30e3      	CPI  R30,LOW(0x3)
0089d9 f010      	BRLO _0x2C00CF
0089da 940e cf62 	CALL SUBOPT_0x2E5
                 ; 0016 01D0                                 }
                 _0x2C00CF:
                 ; 0016 01D1                                 else{
0089dc c006      	RJMP _0x2C00D0
                 _0x2C00CE:
                 ; 0016 01D2                                     if(++setGw[cursor] >9)  setGw[cursor] = 0;
0089dd 940e cf59 	CALL SUBOPT_0x2E4
0089df 30ea      	CPI  R30,LOW(0xA)
0089e0 f010      	BRLO _0x2C00D1
0089e1 940e cf62 	CALL SUBOPT_0x2E5
                 ; 0016 01D3                                 }
                 _0x2C00D1:
                 _0x2C00D0:
                 ; 0016 01D4                                 //if(++setGw[cursor] >9)  setGw[cursor] = 0;
                 ; 0016 01D5                                 printOLED("ID%1X%1d",cursor, setGw[cursor]);
0089e3 940e cf38 	CALL SUBOPT_0x2E1
0089e5 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
0089e6 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
0089e7 81e0      	LD   R30,Z
0089e8 940e be67 	CALL SUBOPT_0x65
0089ea 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 01D6                             }
                 ; 0016 01D7                             else{                       // -- Exit -- should not occur
0089ec c009      	RJMP _0x2C00D2
                 _0x2C00CD:
                 ; 0016 01D8                                 currentPage = P_MONITOR;
0089ed e0e0      	LDI  R30,LOW(0)
0089ee 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 01D9                                 cursor      = 0;
                 ; 0016 01DA                                 printOLED("M0");
0089f0 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02BE:
0089f2 940e da29 	CALL __PUTPARD1
0089f4 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 01DB                             }
                 _0x2C00D2:
                 _0x2C00CC:
                 ; 0016 01DC             break;
                 ; 0016 01DD         }
                 _0x2C00C1:
                 ; 0016 01DE     }
                 ; 0016 01DF     else if ( currentPage == P_DEV_S_SERVER )
0089f6 940c 93ec 	JMP  _0x2C00D3
                 _0x2C00BE:
0089f8 91a0 14df 	LDS  R26,_currentPage
0089fa 30ac      	CPI  R26,LOW(0xC)
0089fb f011      	BREQ PC+3
0089fc 940c 8a84 	JMP _0x2C00D4
                 ; 0016 01E0     {
                 ; 0016 01E1         switch(key){
0089fe 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 01E2         case KEY_MODE   :   currentPage = P_DEV_S_GATEWAY;  cursor  = 0;            printOLED("SG");                        break;
008a00 f441      	BRNE _0x2C00D8
008a01 e0eb      	LDI  R30,LOW(11)
008a02 940e ccd4 	CALL SUBOPT_0x2A3
                +
008a04 eeeb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 699 ) )
008a05 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 699 ) )
008a06 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 699 ) )
008a07 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 699 ) )
                 	__POINTD1FN _0x2C0000,699
008a08 c075      	RJMP _0x2C02BF
                 ; 0016 01E3         case KEY_UP     :   if(++cursor > 12){              cursor  = 0;    }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D8:
008a09 30e2      	CPI  R30,LOW(0x2)
008a0a e0a0      	LDI  R26,HIGH(0x2)
008a0b 07fa      	CPC  R31,R26
008a0c f451      	BRNE _0x2C00D9
008a0d 940e ccbb 	CALL SUBOPT_0x2A1
008a0f 30ad      	CPI  R26,LOW(0xD)
008a10 f01c      	BRLT _0x2C00DA
008a11 e0e0      	LDI  R30,LOW(0)
008a12 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DA:
008a14 940e cf17 	CALL SUBOPT_0x2DD
008a16 c06b      	RJMP _0x2C00D7
                 ; 0016 01E4         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 12;   }       printOLED("IA%1X",cursor);              break;
                 _0x2C00D9:
008a17 30e3      	CPI  R30,LOW(0x3)
008a18 e0a0      	LDI  R26,HIGH(0x3)
008a19 07fa      	CPC  R31,R26
008a1a f449      	BRNE _0x2C00DB
008a1b 940e cca7 	CALL SUBOPT_0x29F
008a1d f41c      	BRGE _0x2C00DC
008a1e e0ec      	LDI  R30,LOW(12)
008a1f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00DC:
008a21 940e cf17 	CALL SUBOPT_0x2DD
008a23 c05e      	RJMP _0x2C00D7
                 ; 0016 01E5         case KEY_OK     :   if(cursor == 12){
                 _0x2C00DB:
008a24 30e4      	CPI  R30,LOW(0x4)
008a25 e0a0      	LDI  R26,HIGH(0x4)
008a26 07fa      	CPC  R31,R26
008a27 f011      	BREQ PC+3
008a28 940c 8a82 	JMP _0x2C00D7
008a2a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008a2c 30ac      	CPI  R26,LOW(0xC)
008a2d f569      	BRNE _0x2C00DE
                 ; 0016 01E6                                 currentPage = P_DEV_S_CONFIRM;
008a2e e0ed      	LDI  R30,LOW(13)
008a2f 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 01E7                                 cursor      = 0;
                 ; 0016 01E8                                 printOLED("SF%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,%u.%u.%u.%u,",
                 ; 0016 01E9                                             (setIp[0]    *100) + (setIp[1]     *10) + setIp[2],
                 ; 0016 01EA                                             (setIp[3]    *100) + (setIp[4]     *10) + setIp[5],
                 ; 0016 01EB                                             (setIp[6]    *100) + (setIp[7]     *10) + setIp[8],
                 ; 0016 01EC                                             (setIp[9]    *100) + (setIp[10]    *10) + setIp[11],
                 ; 0016 01ED                                             (setMask[0]  *100) + (setMask[1]   *10) + setMask[2],
                 ; 0016 01EE                                             (setMask[3]  *100) + (setMask[4]   *10) + setMask[5],
                 ; 0016 01EF                                             (setMask[6]  *100) + (setMask[7]   *10) + setMask[8],
                 ; 0016 01F0                                             (setMask[9]  *100) + (setMask[10]  *10) + setMask[11],
                 ; 0016 01F1                                             (setGw[0]    *100) + (setGw[1]     *10) + setGw[2],
                 ; 0016 01F2                                             (setGw[3]    *100) + (setGw[4]     *10) + setGw[5],
                 ; 0016 01F3                                             (setGw[6]    *100) + (setGw[7]     *10) + setGw[8],
                 ; 0016 01F4                                             (setGw[9]    *100) + (setGw[10]    *10) + setGw[11],
                 ; 0016 01F5                                             (setServer[0]*100) + (setServer[1] *10) + setServer[2],
                 ; 0016 01F6                                             (setServer[3]*100) + (setServer[4] *10) + setServer[5],
                 ; 0016 01F7                                             (setServer[6]*100) + (setServer[7] *10) + setServer[8],
                 ; 0016 01F8                                             (setServer[9]*100) + (setServer[10]*10) + setServer[11]);
                +
008a31 efe1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 705 ) )
008a32 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 705 ) )
008a33 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 705 ) )
008a34 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 705 ) )
                 	__POINTD1FN _0x2C0000,705
008a35 940e cd92 	CALL SUBOPT_0x2BB
008a37 940e cda5 	CALL SUBOPT_0x2BC
008a39 940e cdb6 	CALL SUBOPT_0x2BD
008a3b 940e cdc7 	CALL SUBOPT_0x2BE
008a3d 940e cdd8 	CALL SUBOPT_0x2BF
008a3f 940e cde9 	CALL SUBOPT_0x2C0
008a41 940e cdfa 	CALL SUBOPT_0x2C1
008a43 940e ce0b 	CALL SUBOPT_0x2C2
008a45 940e ce1c 	CALL SUBOPT_0x2C3
008a47 940e ce2d 	CALL SUBOPT_0x2C4
008a49 940e ce3e 	CALL SUBOPT_0x2C5
008a4b 940e ce4f 	CALL SUBOPT_0x2C6
008a4d 940e ce60 	CALL SUBOPT_0x2C7
008a4f 940e ce72 	CALL SUBOPT_0x2C8
008a51 940e ce84 	CALL SUBOPT_0x2C9
008a53 940e ce96 	CALL SUBOPT_0x2CA
008a55 e480      	LDI  R24,64
008a56 940e 7c63 	CALL _printOLED
008a58 96ef      	ADIW R28,63
008a59 9625      	ADIW R28,5
                 ; 0016 01F9                             }
                 ; 0016 01FA                             else if(cursor < 12){
008a5a c027      	RJMP _0x2C00DF
                 _0x2C00DE:
008a5b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008a5d 30ac      	CPI  R26,LOW(0xC)
008a5e f4d4      	BRGE _0x2C00E0
                 ; 0016 01FB                                 if((cursor%3) == 0){
008a5f 940e cf1c 	CALL SUBOPT_0x2DE
008a61 f439      	BRNE _0x2C00E1
                 ; 0016 01FC                                     if(++setServer[cursor] >2)  setServer[cursor] = 0;
008a62 940e cf6a 	CALL SUBOPT_0x2E6
008a64 30e3      	CPI  R30,LOW(0x3)
008a65 f010      	BRLO _0x2C00E2
008a66 940e cf73 	CALL SUBOPT_0x2E7
                 ; 0016 01FD                                 }
                 _0x2C00E2:
                 ; 0016 01FE                                 else{
008a68 c006      	RJMP _0x2C00E3
                 _0x2C00E1:
                 ; 0016 01FF                                     if(++setServer[cursor] >9)  setServer[cursor] = 0;
008a69 940e cf6a 	CALL SUBOPT_0x2E6
008a6b 30ea      	CPI  R30,LOW(0xA)
008a6c f010      	BRLO _0x2C00E4
008a6d 940e cf73 	CALL SUBOPT_0x2E7
                 ; 0016 0200                                 }
                 _0x2C00E4:
                 _0x2C00E3:
                 ; 0016 0201                                 //if(++setServer[cursor] >9)  setServer[cursor] = 0;
                 ; 0016 0202                                 printOLED("ID%1X%1d",cursor, setServer[cursor]);
008a6f 940e cf38 	CALL SUBOPT_0x2E1
008a71 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
008a72 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
008a73 81e0      	LD   R30,Z
008a74 940e be67 	CALL SUBOPT_0x65
008a76 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0203                             }
                 ; 0016 0204                             else{                       // -- Exit -- should not occur
008a78 c009      	RJMP _0x2C00E5
                 _0x2C00E0:
                 ; 0016 0205                                 currentPage = P_MONITOR;
008a79 e0e0      	LDI  R30,LOW(0)
008a7a 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0206                                 cursor      = 0;
                 ; 0016 0207                                 printOLED("M0");
008a7c 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02BF:
008a7e 940e da29 	CALL __PUTPARD1
008a80 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 0208                             }
                 _0x2C00E5:
                 _0x2C00DF:
                 ; 0016 0209             break;
                 ; 0016 020A         }
                 _0x2C00D7:
                 ; 0016 020B     }
                 ; 0016 020C     else if ( currentPage == P_DEV_S_CONFIRM )
008a82 940c 93ec 	JMP  _0x2C00E6
                 _0x2C00D4:
008a84 91a0 14df 	LDS  R26,_currentPage
008a86 30ad      	CPI  R26,LOW(0xD)
008a87 f571      	BRNE _0x2C00E7
                 ; 0016 020D     {
                 ; 0016 020E         switch(key){
008a88 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 020F         case KEY_MODE   :   currentPage = P_DEV_S_MENU;     cursor  = 1;    printOLED("M6%1d",cursor);  break;
008a8a f431      	BRNE _0x2C00EB
008a8b e0e7      	LDI  R30,LOW(7)
008a8c 940e ceb4 	CALL SUBOPT_0x2CD
008a8e 940e cee6 	CALL SUBOPT_0x2D5
008a90 c023      	RJMP _0x2C00EA
                 ; 0016 0210         case KEY_UP     :   /* no operation */                                                          break;
                 _0x2C00EB:
008a91 30e2      	CPI  R30,LOW(0x2)
008a92 e0a0      	LDI  R26,HIGH(0x2)
008a93 07fa      	CPC  R31,R26
008a94 f0f9      	BREQ _0x2C00EA
                 ; 0016 0211         case KEY_DOWN   :   /* no operation */                                                          break;
008a95 30e3      	CPI  R30,LOW(0x3)
008a96 e0a0      	LDI  R26,HIGH(0x3)
008a97 07fa      	CPC  R31,R26
008a98 f0d9      	BREQ _0x2C00EA
                 ; 0016 0212         case KEY_OK     :   currentPage = P_FINISH;
008a99 30e4      	CPI  R30,LOW(0x4)
008a9a e0a0      	LDI  R26,HIGH(0x4)
008a9b 07fa      	CPC  R31,R26
008a9c f4b9      	BRNE _0x2C00EA
008a9d e2e4      	LDI  R30,LOW(36)
008a9e 940e cd1c 	CALL SUBOPT_0x2AB
                 ; 0016 0213                             tmpNextPage = P_DEV_S_MENU;
                 ; 0016 0214                             tmpPrevPage = P_DEV_S_CONFIRM;
008aa0 e0ed      	LDI  R30,LOW(13)
008aa1 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 0215                             cursor      = 0;
                 ; 0016 0216                             // -- set network -- //
                 ; 0016 0217                             res = ETH_setConfig(setIp,setMask,setGw,setServer);
008aa3 940e cd83 	CALL SUBOPT_0x2BA
008aa5 940e 5db7 	CALL _ETH_setConfig
008aa7 01af      	MOVW R20,R30
                 ; 0016 0218                             //res = setNetworkInfo(setIp,setMask,setGw,setServer);
                 ; 0016 0219                             if(res<0){
008aa8 2355      	TST  R21
008aa9 f432      	BRPL _0x2C00EF
                 ; 0016 021A                                 printDebug("<MENU_processKey> ETH_setConfig() failed \r\n");
                +
008aaa e2e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 756 ) )
008aab e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 756 ) )
008aac e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 756 ) )
008aad e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 756 ) )
                 	__POINTD1FN _0x2C0000,756
008aae 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 021B                             }
                 ; 0016 021C 
                 ; 0016 021D                             // ----------------- //
                 ; 0016 021E                             printOLED("FI");
                 _0x2C00EF:
008ab0 940e cf12 	CALL SUBOPT_0x2DC
008ab2 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 021F                             break;
                 ; 0016 0220         }
                 _0x2C00EA:
                 ; 0016 0221     }
                 ; 0016 0222     else if ( currentPage == P_PRB_MENU )
008ab4 940c 93ec 	JMP  _0x2C00F0
                 _0x2C00E7:
008ab6 91a0 14df 	LDS  R26,_currentPage
008ab8 30ae      	CPI  R26,LOW(0xE)
008ab9 f011      	BREQ PC+3
008aba 940c 8b0b 	JMP _0x2C00F1
                 ; 0016 0223     {
                 ; 0016 0224         switch(key){
008abc 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0225         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 1;            printOLED("M1%1d",cursor);  break;
008abe f431      	BRNE _0x2C00F5
008abf e0e1      	LDI  R30,LOW(1)
008ac0 940e ceb4 	CALL SUBOPT_0x2CD
008ac2 940e cf81 	CALL SUBOPT_0x2E9
008ac4 c044      	RJMP _0x2C00F4
                 ; 0016 0226         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F5:
008ac5 30e2      	CPI  R30,LOW(0x2)
008ac6 e0a0      	LDI  R26,HIGH(0x2)
008ac7 07fa      	CPC  R31,R26
008ac8 f449      	BRNE _0x2C00F6
008ac9 940e cca7 	CALL SUBOPT_0x29F
008acb f41c      	BRGE _0x2C00F7
008acc e0e1      	LDI  R30,LOW(1)
008acd 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F7:
008acf 940e ccae 	CALL SUBOPT_0x2A0
008ad1 c037      	RJMP _0x2C00F4
                 ; 0016 0227         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C00F6:
008ad2 30e3      	CPI  R30,LOW(0x3)
008ad3 e0a0      	LDI  R26,HIGH(0x3)
008ad4 07fa      	CPC  R31,R26
008ad5 f451      	BRNE _0x2C00F8
008ad6 940e ccbb 	CALL SUBOPT_0x2A1
008ad8 30a2      	CPI  R26,LOW(0x2)
008ad9 f01c      	BRLT _0x2C00F9
008ada e0e0      	LDI  R30,LOW(0)
008adb 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C00F9:
008add 940e ccae 	CALL SUBOPT_0x2A0
008adf c029      	RJMP _0x2C00F4
                 ; 0016 0228         case KEY_OK     :   if(cursor == 0){            // -- View Probe Config
                 _0x2C00F8:
008ae0 30e4      	CPI  R30,LOW(0x4)
008ae1 e0a0      	LDI  R26,HIGH(0x4)
008ae2 07fa      	CPC  R31,R26
008ae3 f529      	BRNE _0x2C00F4
008ae4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008ae6 30e0      	CPI  R30,0
008ae7 f431      	BRNE _0x2C00FB
                 ; 0016 0229                                 currentPage = P_PRB_V;
008ae8 e0ef      	LDI  R30,LOW(15)
008ae9 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 022A                                 cursor      = 0;
                 ; 0016 022B                                 showProbeConfig(cursor);
008aeb 940e cf86 	CALL SUBOPT_0x2EA
                 ; 0016 022C 
                 ; 0016 022D                             }
                 ; 0016 022E                             else if(cursor == 1){       // -- Set Probe Config
008aed c01b      	RJMP _0x2C00FC
                 _0x2C00FB:
008aee 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008af0 30a1      	CPI  R26,LOW(0x1)
008af1 f471      	BRNE _0x2C00FD
                 ; 0016 022F                                 currentPage = P_ENTER_U_PASS;
008af2 e2e1      	LDI  R30,LOW(33)
008af3 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0230                                 tmpNextPage = P_PRB_S;
008af5 e1e0      	LDI  R30,LOW(16)
008af6 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0231                                 tmpPrevPage = P_PRB_MENU;
008af8 e0ee      	LDI  R30,LOW(14)
008af9 940e ccfa 	CALL SUBOPT_0x2A7
                 ; 0016 0232                                 memset(entPwd,0xFF,sizeof(entPwd));
008afb 940e cd04 	CALL SUBOPT_0x2A8
                 ; 0016 0233                                 cursor      = 0;
                 ; 0016 0234                                 printOLED("P0");
008afd 940e cd22 	CALL SUBOPT_0x2AC
008aff c005      	RJMP _0x2C02C0
                 ; 0016 0235                             }
                 ; 0016 0236                             else{                       // -- Exit -- should not occur
                 _0x2C00FD:
                 ; 0016 0237                                 currentPage = P_MONITOR;
008b00 e0e0      	LDI  R30,LOW(0)
008b01 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0238                                 cursor      = 0;
                 ; 0016 0239                                 printOLED("M0");
008b03 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02C0:
008b05 940e da29 	CALL __PUTPARD1
008b07 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 023A                             }
                 _0x2C00FC:
                 ; 0016 023B             break;
                 ; 0016 023C         }
                 _0x2C00F4:
                 ; 0016 023D     }
                 ; 0016 023E     else if ( currentPage == P_PRB_V )
008b09 940c 93ec 	JMP  _0x2C00FF
                 _0x2C00F1:
008b0b 91a0 14df 	LDS  R26,_currentPage
008b0d 30af      	CPI  R26,LOW(0xF)
008b0e f549      	BRNE _0x2C0100
                 ; 0016 023F     {
                 ; 0016 0240         switch(key){
008b0f 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0241         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
008b11 f0f9      	BREQ _0x2C02C1
                 ; 0016 0242         case KEY_UP     :   if(++cursor > 4){               cursor  = 0;    }       showProbeConfig(cursor);    break;
008b12 30e2      	CPI  R30,LOW(0x2)
008b13 e0a0      	LDI  R26,HIGH(0x2)
008b14 07fa      	CPC  R31,R26
008b15 f451      	BRNE _0x2C0105
008b16 940e ccbb 	CALL SUBOPT_0x2A1
008b18 30a5      	CPI  R26,LOW(0x5)
008b19 f01c      	BRLT _0x2C0106
008b1a e0e0      	LDI  R30,LOW(0)
008b1b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0106:
008b1d 940e cf86 	CALL SUBOPT_0x2EA
008b1f c016      	RJMP _0x2C0103
                 ; 0016 0243         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 4;    }       showProbeConfig(cursor);    break;
                 _0x2C0105:
008b20 30e3      	CPI  R30,LOW(0x3)
008b21 e0a0      	LDI  R26,HIGH(0x3)
008b22 07fa      	CPC  R31,R26
008b23 f449      	BRNE _0x2C0107
008b24 940e cca7 	CALL SUBOPT_0x29F
008b26 f41c      	BRGE _0x2C0108
008b27 e0e4      	LDI  R30,LOW(4)
008b28 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0108:
008b2a 940e cf86 	CALL SUBOPT_0x2EA
008b2c c009      	RJMP _0x2C0103
                 ; 0016 0244         case KEY_OK     :   currentPage = P_PRB_MENU;       cursor  = 0;            printOLED("M3%1d",cursor);  break;
                 _0x2C0107:
008b2d 30e4      	CPI  R30,LOW(0x4)
008b2e e0a0      	LDI  R26,HIGH(0x4)
008b2f 07fa      	CPC  R31,R26
008b30 f429      	BRNE _0x2C0103
                 _0x2C02C1:
008b31 e0ee      	LDI  R30,LOW(14)
008b32 940e ccd4 	CALL SUBOPT_0x2A3
008b34 940e ccda 	CALL SUBOPT_0x2A4
                 ; 0016 0245         }
                 _0x2C0103:
                 ; 0016 0246     }
                 ; 0016 0247     else if ( currentPage == P_PRB_S )
008b36 940c 93ec 	JMP  _0x2C010A
                 _0x2C0100:
008b38 91a0 14df 	LDS  R26,_currentPage
008b3a 31a0      	CPI  R26,LOW(0x10)
008b3b f011      	BREQ PC+3
008b3c 940c 8bc1 	JMP _0x2C010B
                 ; 0016 0248     {
                 ; 0016 0249         switch(key){
008b3e 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 024A         case KEY_MODE   :   currentPage = P_PRB_MENU;       cursor  = 1;            printOLED("M3%1d",cursor);  break;
008b40 f431      	BRNE _0x2C010F
008b41 e0ee      	LDI  R30,LOW(14)
008b42 940e ceb4 	CALL SUBOPT_0x2CD
008b44 940e ccda 	CALL SUBOPT_0x2A4
008b46 c078      	RJMP _0x2C010E
                 ; 0016 024B         case KEY_UP     :   if(--cursor < 0){               cursor  = 5;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C010F:
008b47 30e2      	CPI  R30,LOW(0x2)
008b48 e0a0      	LDI  R26,HIGH(0x2)
008b49 07fa      	CPC  R31,R26
008b4a f449      	BRNE _0x2C0110
008b4b 940e cca7 	CALL SUBOPT_0x29F
008b4d f41c      	BRGE _0x2C0111
008b4e e0e5      	LDI  R30,LOW(5)
008b4f 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0111:
008b51 940e ccae 	CALL SUBOPT_0x2A0
008b53 c06b      	RJMP _0x2C010E
                 ; 0016 024C         case KEY_DOWN   :   if(++cursor > 5){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0110:
008b54 30e3      	CPI  R30,LOW(0x3)
008b55 e0a0      	LDI  R26,HIGH(0x3)
008b56 07fa      	CPC  R31,R26
008b57 f451      	BRNE _0x2C0112
008b58 940e ccbb 	CALL SUBOPT_0x2A1
008b5a 30a6      	CPI  R26,LOW(0x6)
008b5b f01c      	BRLT _0x2C0113
008b5c e0e0      	LDI  R30,LOW(0)
008b5d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0113:
008b5f 940e ccae 	CALL SUBOPT_0x2A0
008b61 c05d      	RJMP _0x2C010E
                 ; 0016 024D         case KEY_OK     :   if(cursor < 5){
                 _0x2C0112:
008b62 30e4      	CPI  R30,LOW(0x4)
008b63 e0a0      	LDI  R26,HIGH(0x4)
008b64 07fa      	CPC  R31,R26
008b65 f011      	BREQ PC+3
008b66 940c 8bbf 	JMP _0x2C010E
008b68 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b6a 30a5      	CPI  R26,LOW(0x5)
008b6b f49c      	BRGE _0x2C0115
                 ; 0016 024E                                 prbEn[cursor] = !prbEn[cursor];
008b6c 940e cf8d 	CALL SUBOPT_0x2EB
008b6e 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
008b6f 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
008b70 940e cf91 	CALL SUBOPT_0x2EC
008b72 940e d928 	CALL __LNEGB1
008b74 940e cf98 	CALL SUBOPT_0x2ED
                 ; 0016 024F                                 printOLED("ED%1d%1d",cursor,prbEn[cursor]);
008b76 940e cfa0 	CALL SUBOPT_0x2EE
008b78 940e cf91 	CALL SUBOPT_0x2EC
008b7a 940e be67 	CALL SUBOPT_0x65
008b7c 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0250                             }
                 ; 0016 0251                             else if(cursor == 5){       // -- Display Finish page
008b7e c040      	RJMP _0x2C0116
                 _0x2C0115:
008b7f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008b81 30a5      	CPI  R26,LOW(0x5)
008b82 f5a9      	BRNE _0x2C0117
                 ; 0016 0252                                 currentPage = P_FINISH;
008b83 940e cfa7 	CALL SUBOPT_0x2EF
                 ; 0016 0253                                 tmpNextPage = P_PRB_MENU;
                 ; 0016 0254                                 cursor      = 0;
008b85 e0e0      	LDI  R30,LOW(0)
008b86 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0255                                 for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
008b88 e000     +LDI R16 , LOW ( 0 )
008b89 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C0119:
                +
008b8a 3005     +CPI R16 , LOW ( 5 )
008b8b e0e0     +LDI R30 , HIGH ( 5 )
008b8c 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
008b8d f46c      	BRGE _0x2C011A
                 ; 0016 0256                                     operating_config.sensorEnable[i]    = prbEn[i];
008b8e 940e cd5b 	CALL SUBOPT_0x2B4
008b90 010f      	MOVW R0,R30
008b91 e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
008b92 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
008b93 0fa0      	ADD  R26,R16
008b94 1fb1      	ADC  R27,R17
008b95 91ec      	LD   R30,X
008b96 01d0      	MOVW R26,R0
008b97 93ec      	ST   X,R30
                 ; 0016 0257                                 }
                +
008b98 5f0f     +SUBI R16 , LOW ( - 1 )
008b99 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008b9a cfef      	RJMP _0x2C0119
                 _0x2C011A:
                 ; 0016 0258 
                 ; 0016 0259                                 res = setOperatingConfig(&operating_config);
008b9b 940e cef9 	CALL SUBOPT_0x2D8
                 ; 0016 025A                                 if(res < 0){
008b9d f472      	BRPL _0x2C011B
                 ; 0016 025B                                     printDebug("<MENU_processKey> setOperatingConfig() failed\r\n");
008b9e 940e cf00 	CALL SUBOPT_0x2D9
                 ; 0016 025C                                     currentPage = P_FAILED;
008ba0 e2e5      	LDI  R30,LOW(37)
008ba1 93e0 14df 	STS  _currentPage,R30
                 ; 0016 025D                                     tmpNextPage = P_PRB_MENU;
008ba3 e0ee      	LDI  R30,LOW(14)
008ba4 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 025E                                     tmpPrevPage = P_PRB_S;
008ba6 e1e0      	LDI  R30,LOW(16)
008ba7 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 025F                                     cursor      = 0;
                 ; 0016 0260                                     printOLED("FL");
008ba9 940e cf0d 	CALL SUBOPT_0x2DB
008bab c007      	RJMP _0x2C02C2
                 ; 0016 0261                                 }
                 ; 0016 0262                                 else{
                 _0x2C011B:
                 ; 0016 0263                                     currentPage = P_FINISH;
008bac 940e cfa7 	CALL SUBOPT_0x2EF
                 ; 0016 0264                                     tmpNextPage = P_PRB_MENU;
                 ; 0016 0265                                     tmpPrevPage = P_PRB_S;
008bae e1e0      	LDI  R30,LOW(16)
008baf 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 0266                                     cursor      = 0;
                 ; 0016 0267                                     printOLED("FI");
008bb1 940e cf12 	CALL SUBOPT_0x2DC
                 _0x2C02C2:
008bb3 940e da29 	CALL __PUTPARD1
008bb5 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 0268                                 }
                 ; 0016 0269                             }
                 ; 0016 026A                             else{                       // -- Exit -- should not occur
008bb7 c007      	RJMP _0x2C011D
                 _0x2C0117:
                 ; 0016 026B                                 currentPage = P_MONITOR;
008bb8 e0e0      	LDI  R30,LOW(0)
008bb9 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 026C                                 cursor      = 0;
                 ; 0016 026D                                 printOLED("M0");
008bbb 940e cd0a 	CALL SUBOPT_0x2A9
008bbd 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 026E                             }
                 _0x2C011D:
                 _0x2C0116:
                 ; 0016 026F             break;
                 ; 0016 0270         }
                 _0x2C010E:
                 ; 0016 0271     }
                 ; 0016 0272     else if ( currentPage == P_MANAGE_MENU )
008bbf 940c 93ec 	JMP  _0x2C011E
                 _0x2C010B:
008bc1 91a0 14df 	LDS  R26,_currentPage
008bc3 31a1      	CPI  R26,LOW(0x11)
008bc4 f011      	BREQ PC+3
008bc5 940c 8c21 	JMP _0x2C011F
                 ; 0016 0273     {
                 ; 0016 0274         switch(key){
008bc7 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0275         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 2;            printOLED("M1%1d",cursor);  break;
008bc9 f431      	BRNE _0x2C0123
008bca e0e1      	LDI  R30,LOW(1)
008bcb 940e ceba 	CALL SUBOPT_0x2CE
008bcd 940e cf81 	CALL SUBOPT_0x2E9
008bcf c050      	RJMP _0x2C0122
                 ; 0016 0276         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0123:
008bd0 30e2      	CPI  R30,LOW(0x2)
008bd1 e0a0      	LDI  R26,HIGH(0x2)
008bd2 07fa      	CPC  R31,R26
008bd3 f449      	BRNE _0x2C0124
008bd4 940e cca7 	CALL SUBOPT_0x29F
008bd6 f41c      	BRGE _0x2C0125
008bd7 e0e1      	LDI  R30,LOW(1)
008bd8 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0125:
008bda 940e ccae 	CALL SUBOPT_0x2A0
008bdc c043      	RJMP _0x2C0122
                 ; 0016 0277         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0124:
008bdd 30e3      	CPI  R30,LOW(0x3)
008bde e0a0      	LDI  R26,HIGH(0x3)
008bdf 07fa      	CPC  R31,R26
008be0 f451      	BRNE _0x2C0126
008be1 940e ccbb 	CALL SUBOPT_0x2A1
008be3 30a2      	CPI  R26,LOW(0x2)
008be4 f01c      	BRLT _0x2C0127
008be5 e0e0      	LDI  R30,LOW(0)
008be6 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0127:
008be8 940e ccae 	CALL SUBOPT_0x2A0
008bea c035      	RJMP _0x2C0122
                 ; 0016 0278         case KEY_OK     :   if(cursor == 0){            // -- Set Mute
                 _0x2C0126:
008beb 30e4      	CPI  R30,LOW(0x4)
008bec e0a0      	LDI  R26,HIGH(0x4)
008bed 07fa      	CPC  R31,R26
008bee f589      	BRNE _0x2C0122
008bef 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008bf1 30e0      	CPI  R30,0
008bf2 f491      	BRNE _0x2C0129
                 ; 0016 0279                                 currentPage = P_MUTE_MENU;
008bf3 e1e2      	LDI  R30,LOW(18)
008bf4 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 027A                                 cursor      = 0;
                 ; 0016 027B                                 mute        = muteMode;
008bf6 91e0 148b 	LDS  R30,_muteMode
008bf8 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 027C                                 printOLED("MU%1d",cursor);
008bfa 940e cfae 	CALL SUBOPT_0x2F0
                 ; 0016 027D                                 printOLED("ED%1d%1d",cursor+2,mute);
008bfc 940e cef4 	CALL SUBOPT_0x2D7
008bfe 91e0 1a65 	LDS  R30,_mute_S0160000000
008c00 940e be67 	CALL SUBOPT_0x65
008c02 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 027E                             }
                 ; 0016 027F                             else if(cursor == 1){       // -- Set New User Password
008c04 c01b      	RJMP _0x2C012A
                 _0x2C0129:
008c05 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c07 30a1      	CPI  R26,LOW(0x1)
008c08 f471      	BRNE _0x2C012B
                 ; 0016 0280                                 currentPage = P_ENTER_U_PASS;
008c09 e2e1      	LDI  R30,LOW(33)
008c0a 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0281                                 tmpNextPage = P_PASS_NEW;
008c0c e1e3      	LDI  R30,LOW(19)
008c0d 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 0282                                 tmpPrevPage = P_MANAGE_MENU;
008c0f e1e1      	LDI  R30,LOW(17)
008c10 940e ccfa 	CALL SUBOPT_0x2A7
                 ; 0016 0283                                 memset(entPwd,0xFF,sizeof(entPwd));
008c12 940e cd04 	CALL SUBOPT_0x2A8
                 ; 0016 0284                                 cursor      = 0;
                 ; 0016 0285                                 printOLED("P0");
008c14 940e cd22 	CALL SUBOPT_0x2AC
008c16 c005      	RJMP _0x2C02C3
                 ; 0016 0286                             }
                 ; 0016 0287                             else{                       // -- Exit -- should not occur
                 _0x2C012B:
                 ; 0016 0288                                 currentPage = P_MONITOR;
008c17 e0e0      	LDI  R30,LOW(0)
008c18 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0289                                 cursor      = 0;
                 ; 0016 028A                                 printOLED("M0");
008c1a 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02C3:
008c1c 940e da29 	CALL __PUTPARD1
008c1e 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 028B                             }
                 _0x2C012A:
                 ; 0016 028C             break;
                 ; 0016 028D         }
                 _0x2C0122:
                 ; 0016 028E     }
                 ; 0016 028F     else if ( currentPage == P_MUTE_MENU )
008c20 c7cb      	RJMP _0x2C012D
                 _0x2C011F:
008c21 91a0 14df 	LDS  R26,_currentPage
008c23 31a2      	CPI  R26,LOW(0x12)
008c24 f011      	BREQ PC+3
008c25 940c 8c7f 	JMP _0x2C012E
                 ; 0016 0290     {
                 ; 0016 0291         switch(key){
008c27 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0292         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 0;            printOLED("M4%1d",cursor);  break;
008c29 f431      	BRNE _0x2C0132
008c2a e1e1      	LDI  R30,LOW(17)
008c2b 940e ccd4 	CALL SUBOPT_0x2A3
008c2d 940e cce7 	CALL SUBOPT_0x2A5
008c2f c04e      	RJMP _0x2C0131
                 ; 0016 0293         case KEY_UP     :   if(--cursor < 0){               cursor  = 1;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0132:
008c30 30e2      	CPI  R30,LOW(0x2)
008c31 e0a0      	LDI  R26,HIGH(0x2)
008c32 07fa      	CPC  R31,R26
008c33 f449      	BRNE _0x2C0133
008c34 940e cca7 	CALL SUBOPT_0x29F
008c36 f41c      	BRGE _0x2C0134
008c37 e0e1      	LDI  R30,LOW(1)
008c38 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0134:
008c3a 940e cfae 	CALL SUBOPT_0x2F0
008c3c c041      	RJMP _0x2C0131
                 ; 0016 0294         case KEY_DOWN   :   if(++cursor > 1){               cursor  = 0;    }       printOLED("MU%1d",cursor);  break;
                 _0x2C0133:
008c3d 30e3      	CPI  R30,LOW(0x3)
008c3e e0a0      	LDI  R26,HIGH(0x3)
008c3f 07fa      	CPC  R31,R26
008c40 f451      	BRNE _0x2C0135
008c41 940e ccbb 	CALL SUBOPT_0x2A1
008c43 30a2      	CPI  R26,LOW(0x2)
008c44 f01c      	BRLT _0x2C0136
008c45 e0e0      	LDI  R30,LOW(0)
008c46 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0136:
008c48 940e cfae 	CALL SUBOPT_0x2F0
008c4a c033      	RJMP _0x2C0131
                 ; 0016 0295         case KEY_OK     :   if(cursor == 0){            // -- Set Device Enable
                 _0x2C0135:
008c4b 30e4      	CPI  R30,LOW(0x4)
008c4c e0a0      	LDI  R26,HIGH(0x4)
008c4d 07fa      	CPC  R31,R26
008c4e f579      	BRNE _0x2C0131
008c4f 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008c51 30e0      	CPI  R30,0
008c52 f479      	BRNE _0x2C0138
                 ; 0016 0296                                 mute       = !mute;
008c53 91e0 1a65 	LDS  R30,_mute_S0160000000
008c55 940e d928 	CALL __LNEGB1
008c57 93e0 1a65 	STS  _mute_S0160000000,R30
                 ; 0016 0297                                 printOLED("ED%1d%1d",cursor+2,mute);
008c59 940e cef4 	CALL SUBOPT_0x2D7
008c5b 91e0 1a65 	LDS  R30,_mute_S0160000000
008c5d 940e be67 	CALL SUBOPT_0x65
008c5f 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0298                             }
                 ; 0016 0299                             else if(cursor == 1){       // -- Display Finish page
008c61 c01c      	RJMP _0x2C0139
                 _0x2C0138:
008c62 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c64 30a1      	CPI  R26,LOW(0x1)
008c65 f479      	BRNE _0x2C013A
                 ; 0016 029A                                 currentPage = P_FINISH;
008c66 940e cfb3 	CALL SUBOPT_0x2F1
                 ; 0016 029B                                 tmpNextPage = P_MANAGE_MENU;
                 ; 0016 029C                                 tmpPrevPage = P_MUTE_MENU;
008c68 e1e2      	LDI  R30,LOW(18)
008c69 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 029D                                 muteMode    = mute;
008c6b 91e0 1a65 	LDS  R30,_mute_S0160000000
008c6d 93e0 148b 	STS  _muteMode,R30
                 ; 0016 029E                                 cursor      = 0;
008c6f e0e0      	LDI  R30,LOW(0)
008c70 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 029F                                 printOLED("FI");
008c72 940e cf12 	CALL SUBOPT_0x2DC
008c74 c005      	RJMP _0x2C02C4
                 ; 0016 02A0                             }
                 ; 0016 02A1                             else{                       // -- Exit -- should not occur
                 _0x2C013A:
                 ; 0016 02A2                                 currentPage = P_MONITOR;
008c75 e0e0      	LDI  R30,LOW(0)
008c76 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 02A3                                 cursor      = 0;
                 ; 0016 02A4                                 printOLED("M0");
008c78 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02C4:
008c7a 940e da29 	CALL __PUTPARD1
008c7c 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 02A5                             }
                 _0x2C0139:
                 ; 0016 02A6             break;
                 ; 0016 02A7         }
                 _0x2C0131:
                 ; 0016 02A8     }
                 ; 0016 02A9     else if ( currentPage == P_PASS_NEW )
008c7e c76d      	RJMP _0x2C013C
                 _0x2C012E:
008c7f 91a0 14df 	LDS  R26,_currentPage
008c81 31a3      	CPI  R26,LOW(0x13)
008c82 f011      	BREQ PC+3
008c83 940c 8ce1 	JMP _0x2C013D
                 ; 0016 02AA     {
                 ; 0016 02AB         switch(key){
008c85 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 02AC         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
008c87 f431      	BRNE _0x2C0141
008c88 e1e1      	LDI  R30,LOW(17)
008c89 940e ceb4 	CALL SUBOPT_0x2CD
008c8b 940e cce7 	CALL SUBOPT_0x2A5
008c8d c052      	RJMP _0x2C0140
                 ; 0016 02AD         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0141:
008c8e 30e2      	CPI  R30,LOW(0x2)
008c8f e0a0      	LDI  R26,HIGH(0x2)
008c90 07fa      	CPC  R31,R26
008c91 f481      	BRNE _0x2C0142
008c92 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008c94 30a4      	CPI  R26,LOW(0x4)
008c95 f414      	BRGE _0x2C0143
008c96 940e cfba 	CALL SUBOPT_0x2F2
                 ; 0016 02AE                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0143:
008c98 940e ccbb 	CALL SUBOPT_0x2A1
008c9a 30a5      	CPI  R26,LOW(0x5)
008c9b f01c      	BRLT _0x2C0144
008c9c e0e0      	LDI  R30,LOW(0)
008c9d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0144:
008c9f 940e cfbf 	CALL SUBOPT_0x2F3
008ca1 c03e      	RJMP _0x2C0140
                 ; 0016 02AF         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0142:
008ca2 30e3      	CPI  R30,LOW(0x3)
008ca3 e0a0      	LDI  R26,HIGH(0x3)
008ca4 07fa      	CPC  R31,R26
008ca5 f479      	BRNE _0x2C0145
008ca6 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ca8 30a4      	CPI  R26,LOW(0x4)
008ca9 f414      	BRGE _0x2C0146
008caa 940e cfba 	CALL SUBOPT_0x2F2
                 ; 0016 02B0                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0146:
008cac 940e cca7 	CALL SUBOPT_0x29F
008cae f41c      	BRGE _0x2C0147
008caf e0e4      	LDI  R30,LOW(4)
008cb0 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0147:
008cb2 940e cfbf 	CALL SUBOPT_0x2F3
008cb4 c02b      	RJMP _0x2C0140
                 ; 0016 02B1         case KEY_OK     :   if(cursor == 4){
                 _0x2C0145:
008cb5 30e4      	CPI  R30,LOW(0x4)
008cb6 e0a0      	LDI  R26,HIGH(0x4)
008cb7 07fa      	CPC  R31,R26
008cb8 f539      	BRNE _0x2C0140
008cb9 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cbb 30a4      	CPI  R26,LOW(0x4)
008cbc f471      	BRNE _0x2C0149
                 ; 0016 02B2                                 currentPage = P_PASS_CONFIRM;
008cbd e1e4      	LDI  R30,LOW(20)
008cbe 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02B3                                 memset(confPwd,0xFF,sizeof(confPwd));
008cc0 940e cfc4 	CALL SUBOPT_0x2F4
008cc2 940e cd04 	CALL SUBOPT_0x2A8
                 ; 0016 02B4                                 cursor      = 0;
                 ; 0016 02B5                                 printOLED("P5");
                +
008cc4 e6e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 819 ) )
008cc5 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 819 ) )
008cc6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 819 ) )
008cc7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 819 ) )
                 	__POINTD1FN _0x2C0000,819
008cc8 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 02B6                             }
                 ; 0016 02B7                             else if(cursor < 4){
008cca c015      	RJMP _0x2C014A
                 _0x2C0149:
008ccb 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ccd 30a4      	CPI  R26,LOW(0x4)
008cce f48c      	BRGE _0x2C014B
                 ; 0016 02B8                                 if(++newPwd[cursor] >9) newPwd[cursor] = 0;
008ccf 940e cf8d 	CALL SUBOPT_0x2EB
008cd1 5daa      	SUBI R26,LOW(-_newPwd_S0160000000)
008cd2 4eb5      	SBCI R27,HIGH(-_newPwd_S0160000000)
008cd3 940e cfcc 	CALL SUBOPT_0x2F5
008cd5 f024      	BRLT _0x2C014C
008cd6 940e cfd1 	CALL SUBOPT_0x2F6
008cd8 e0a0      	LDI  R26,LOW(0)
008cd9 83a0      	STD  Z+0,R26
                 ; 0016 02B9                                 printOLED("PD%1d%1d",cursor, newPwd[cursor]);
                 _0x2C014C:
008cda 940e cfd7 	CALL SUBOPT_0x2F7
008cdc 940e cfd1 	CALL SUBOPT_0x2F6
008cde 940e cfde 	CALL SUBOPT_0x2F8
                 ; 0016 02BA                             }
                 ; 0016 02BB                             break;
                 _0x2C014B:
                 _0x2C014A:
                 ; 0016 02BC         }
                 _0x2C0140:
                 ; 0016 02BD     }
                 ; 0016 02BE     else if ( currentPage == P_PASS_CONFIRM )
008ce0 c70b      	RJMP _0x2C014D
                 _0x2C013D:
008ce1 91a0 14df 	LDS  R26,_currentPage
008ce3 31a4      	CPI  R26,LOW(0x14)
008ce4 f011      	BREQ PC+3
008ce5 940c 8d71 	JMP _0x2C014E
                 ; 0016 02BF     {
                 ; 0016 02C0         switch(key){
008ce7 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 02C1         case KEY_MODE   :   currentPage = P_MANAGE_MENU;    cursor  = 1;        printOLED("M4%1d",cursor);      break;
008ce9 f431      	BRNE _0x2C0152
008cea e1e1      	LDI  R30,LOW(17)
008ceb 940e ceb4 	CALL SUBOPT_0x2CD
008ced 940e cce7 	CALL SUBOPT_0x2A5
008cef c080      	RJMP _0x2C0151
                 ; 0016 02C2         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0152:
008cf0 30e2      	CPI  R30,LOW(0x2)
008cf1 e0a0      	LDI  R26,HIGH(0x2)
008cf2 07fa      	CPC  R31,R26
008cf3 f481      	BRNE _0x2C0153
008cf4 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008cf6 30a4      	CPI  R26,LOW(0x4)
008cf7 f414      	BRGE _0x2C0154
008cf8 940e cfba 	CALL SUBOPT_0x2F2
                 ; 0016 02C3                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0154:
008cfa 940e ccbb 	CALL SUBOPT_0x2A1
008cfc 30a5      	CPI  R26,LOW(0x5)
008cfd f01c      	BRLT _0x2C0155
008cfe e0e0      	LDI  R30,LOW(0)
008cff 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0155:
008d01 940e cfbf 	CALL SUBOPT_0x2F3
008d03 c06c      	RJMP _0x2C0151
                 ; 0016 02C4         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0153:
008d04 30e3      	CPI  R30,LOW(0x3)
008d05 e0a0      	LDI  R26,HIGH(0x3)
008d06 07fa      	CPC  R31,R26
008d07 f479      	BRNE _0x2C0156
008d08 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d0a 30a4      	CPI  R26,LOW(0x4)
008d0b f414      	BRGE _0x2C0157
008d0c 940e cfba 	CALL SUBOPT_0x2F2
                 ; 0016 02C5                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);      break;
                 _0x2C0157:
008d0e 940e cca7 	CALL SUBOPT_0x29F
008d10 f41c      	BRGE _0x2C0158
008d11 e0e4      	LDI  R30,LOW(4)
008d12 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0158:
008d14 940e cfbf 	CALL SUBOPT_0x2F3
008d16 c059      	RJMP _0x2C0151
                 ; 0016 02C6         case KEY_OK     :   if(cursor == 4){
                 _0x2C0156:
008d17 30e4      	CPI  R30,LOW(0x4)
008d18 e0a0      	LDI  R26,HIGH(0x4)
008d19 07fa      	CPC  R31,R26
008d1a f011      	BREQ PC+3
008d1b 940c 8d70 	JMP _0x2C0151
008d1d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d1f 30a4      	CPI  R26,LOW(0x4)
008d20 f5d1      	BRNE _0x2C015A
                 ; 0016 02C7                                 // -- checkValidation -- //
                 ; 0016 02C8                                 if(memcmp(newPwd,confPwd,sizeof(newPwd)) != 0){
008d21 940e cfe2 	CALL SUBOPT_0x2F9
008d23 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
008d24 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
008d25 940e cb7b 	CALL SUBOPT_0x27C
008d27 940e a0c6 	CALL _memcmp
008d29 30e0      	CPI  R30,0
008d2a f0e1      	BREQ _0x2C015B
                 ; 0016 02C9                                     printDebug("<MENU_processKey> newPwd & confPwd not match\r\n");
                +
008d2b e6ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 831 ) )
008d2c e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 831 ) )
008d2d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 831 ) )
008d2e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 831 ) )
                 	__POINTD1FN _0x2C0000,831
008d2f 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 02CA                                     memset(newPwd,0xFF,sizeof(newPwd));
008d31 940e cfe2 	CALL SUBOPT_0x2F9
008d33 940e cfe7 	CALL SUBOPT_0x2FA
008d35 940e a124 	CALL _memset
                 ; 0016 02CB                                     memset(confPwd,0xFF,sizeof(confPwd));
008d37 940e cfc4 	CALL SUBOPT_0x2F4
008d39 940e a124 	CALL _memset
                 ; 0016 02CC                                     currentPage = P_FAILED;
008d3b e2e5      	LDI  R30,LOW(37)
008d3c 93e0 14df 	STS  _currentPage,R30
                 ; 0016 02CD                                     tmpNextPage = P_MANAGE_MENU;
008d3e e1e1      	LDI  R30,LOW(17)
008d3f 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
                 ; 0016 02CE                                     tmpPrevPage = P_PASS_CONFIRM;
008d41 e1e4      	LDI  R30,LOW(20)
008d42 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 02CF                                     cursor      = 0;
                 ; 0016 02D0                                     printOLED("FL");
008d44 940e cf0d 	CALL SUBOPT_0x2DB
008d46 c00f      	RJMP _0x2C02C5
                 ; 0016 02D1                                 }
                 ; 0016 02D2                                 else{
                 _0x2C015B:
                 ; 0016 02D3                                     r2ecpy(uPwd,(unsigned char *) confPwd,sizeof(userPwd));
008d47 940e cfeb 	CALL SUBOPT_0x2FB
008d49 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
008d4a e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
008d4b 940e cb7b 	CALL SUBOPT_0x27C
008d4d 940e 9799 	CALL _r2ecpy
                 ; 0016 02D4                                     currentPage = P_FINISH;
008d4f 940e cfb3 	CALL SUBOPT_0x2F1
                 ; 0016 02D5                                     tmpNextPage = P_MANAGE_MENU;
                 ; 0016 02D6                                     tmpPrevPage = P_PASS_CONFIRM;
008d51 e1e4      	LDI  R30,LOW(20)
008d52 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 02D7                                     cursor      = 0;
                 ; 0016 02D8                                     printOLED("FI");
008d54 940e cf12 	CALL SUBOPT_0x2DC
                 _0x2C02C5:
008d56 940e da29 	CALL __PUTPARD1
008d58 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 02D9                                 }
                 ; 0016 02DA                             }
                 ; 0016 02DB                             else if(cursor < 4){
008d5a c015      	RJMP _0x2C015D
                 _0x2C015A:
008d5b 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008d5d 30a4      	CPI  R26,LOW(0x4)
008d5e f48c      	BRGE _0x2C015E
                 ; 0016 02DC                                 if(++confPwd[cursor] >9) confPwd[cursor] = 0;
008d5f 940e cf8d 	CALL SUBOPT_0x2EB
008d61 5da6      	SUBI R26,LOW(-_confPwd_S0160000000)
008d62 4eb5      	SBCI R27,HIGH(-_confPwd_S0160000000)
008d63 940e cfcc 	CALL SUBOPT_0x2F5
008d65 f024      	BRLT _0x2C015F
008d66 940e cff4 	CALL SUBOPT_0x2FC
008d68 e0a0      	LDI  R26,LOW(0)
008d69 83a0      	STD  Z+0,R26
                 ; 0016 02DD                                 printOLED("PD%1d%1d",cursor, confPwd[cursor]);
                 _0x2C015F:
008d6a 940e cfd7 	CALL SUBOPT_0x2F7
008d6c 940e cff4 	CALL SUBOPT_0x2FC
008d6e 940e cfde 	CALL SUBOPT_0x2F8
                 ; 0016 02DE                             }
                 ; 0016 02DF 
                 ; 0016 02E0                             break;
                 _0x2C015E:
                 _0x2C015D:
                 ; 0016 02E1         }
                 _0x2C0151:
                 ; 0016 02E2     }
                 ; 0016 02E3     else if ( currentPage == P_MTNC_MENU )
008d70 c67b      	RJMP _0x2C0160
                 _0x2C014E:
008d71 91a0 14df 	LDS  R26,_currentPage
008d73 31a5      	CPI  R26,LOW(0x15)
008d74 f011      	BREQ PC+3
008d75 940c 8e06 	JMP _0x2C0161
                 ; 0016 02E4     {
                 ; 0016 02E5         switch(key){
008d77 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 02E6         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
008d79 f419      	BRNE _0x2C0165
008d7a 940e cffa 	CALL SUBOPT_0x2FD
008d7c c088      	RJMP _0x2C0164
                 ; 0016 02E7         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0165:
008d7d 30e2      	CPI  R30,LOW(0x2)
008d7e e0a0      	LDI  R26,HIGH(0x2)
008d7f 07fa      	CPC  R31,R26
008d80 f449      	BRNE _0x2C0166
008d81 940e cca7 	CALL SUBOPT_0x29F
008d83 f41c      	BRGE _0x2C0167
008d84 e0e3      	LDI  R30,LOW(3)
008d85 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0167:
008d87 940e ccae 	CALL SUBOPT_0x2A0
008d89 c07b      	RJMP _0x2C0164
                 ; 0016 02E8         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }       printOLED("MA%1d",cursor);  break;
                 _0x2C0166:
008d8a 30e3      	CPI  R30,LOW(0x3)
008d8b e0a0      	LDI  R26,HIGH(0x3)
008d8c 07fa      	CPC  R31,R26
008d8d f451      	BRNE _0x2C0168
008d8e 940e ccbb 	CALL SUBOPT_0x2A1
008d90 30a4      	CPI  R26,LOW(0x4)
008d91 f01c      	BRLT _0x2C0169
008d92 e0e0      	LDI  R30,LOW(0)
008d93 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0169:
008d95 940e ccae 	CALL SUBOPT_0x2A0
008d97 c06d      	RJMP _0x2C0164
                 ; 0016 02E9         case KEY_OK     :   if(cursor == 0){            // -- Set Voltage Reference
                 _0x2C0168:
008d98 30e4      	CPI  R30,LOW(0x4)
008d99 e0a0      	LDI  R26,HIGH(0x4)
008d9a 07fa      	CPC  R31,R26
008d9b f011      	BREQ PC+3
008d9c 940c 8e05 	JMP _0x2C0164
008d9e 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008da0 30e0      	CPI  R30,0
008da1 f571      	BRNE _0x2C016B
                 ; 0016 02EA                                 currentPage = P_SET_VREF;
008da2 e1e6      	LDI  R30,LOW(22)
008da3 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 02EB                                 cursor      = 0;
                 ; 0016 02EC                                 res = get_current_vref(&vRef[0]);
008da5 e6a6      	LDI  R26,LOW(_vRef_S0160000000)
008da6 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
008da7 940e 95a2 	CALL _get_current_vref
008da9 01af      	MOVW R20,R30
                 ; 0016 02ED                                 if(res < 0){
008daa 2355      	TST  R21
008dab f44a      	BRPL _0x2C016C
                 ; 0016 02EE                                     vRef[0] = 2;
008dac e0e2      	LDI  R30,LOW(2)
008dad 93e0 1a66 	STS  _vRef_S0160000000,R30
                 ; 0016 02EF                                     vRef[1] = 5;
008daf e0e5      	LDI  R30,LOW(5)
                +
008db0 93e0 1a67+STS _vRef_S0160000000 + ( 1 ) , R30
                 	__PUTB1MN _vRef_S0160000000,1
                 ; 0016 02F0                                     vRef[2] = 6;
008db2 e0e6      	LDI  R30,LOW(6)
                +
008db3 93e0 1a68+STS _vRef_S0160000000 + ( 2 ) , R30
                 	__PUTB1MN _vRef_S0160000000,2
                 ; 0016 02F1                                 }
                 ; 0016 02F2                                 printOLED("SV");
                 _0x2C016C:
                +
008db5 e9ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 878 ) )
008db6 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 878 ) )
008db7 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 878 ) )
008db8 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 878 ) )
                 	__POINTD1FN _0x2C0000,878
008db9 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 02F3                                 for(i=0;i<3;i++){
                +
008dbb e000     +LDI R16 , LOW ( 0 )
008dbc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C016E:
                +
008dbd 3003     +CPI R16 , LOW ( 3 )
008dbe e0e0     +LDI R30 , HIGH ( 3 )
008dbf 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
008dc0 f474      	BRGE _0x2C016F
                 ; 0016 02F4                                     printOLED("VD%1d%1d",i,vRef[i]);
008dc1 940e d001 	CALL SUBOPT_0x2FE
008dc3 01f8      	MOVW R30,R16
008dc4 940e cb08 	CALL SUBOPT_0x269
008dc6 e6a6      	LDI  R26,LOW(_vRef_S0160000000)
008dc7 e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
008dc8 940e cee1 	CALL SUBOPT_0x2D4
008dca 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 02F5                                 }
                +
008dcc 5f0f     +SUBI R16 , LOW ( - 1 )
008dcd 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
008dce cfee      	RJMP _0x2C016E
                 _0x2C016F:
                 ; 0016 02F6                             }
                 ; 0016 02F7                             else if(cursor == 1){       // -- Calibrate method 1
008dcf c035      	RJMP _0x2C0170
                 _0x2C016B:
008dd0 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008dd2 30a1      	CPI  R26,LOW(0x1)
008dd3 f459      	BRNE _0x2C0171
                 ; 0016 02F8                                 currentPage = P_CAL1_SEL_REF_PRB;
008dd4 e1e7      	LDI  R30,LOW(23)
008dd5 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 02F9                                 cursor      = 0;
                 ; 0016 02FA                                 prb1        = 0;
008dd7 e0e0      	LDI  R30,LOW(0)
008dd8 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 02FB                                 printOLED("S1%1d",prb1+1);
008dda 940e d008 	CALL SUBOPT_0x2FF
008ddc 940e cada 	CALL SUBOPT_0x263
                 ; 0016 02FC                             }
                 ; 0016 02FD                             else if(cursor == 2){       // -- Calibrate method 2
008dde c026      	RJMP _0x2C0172
                 _0x2C0171:
008ddf 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008de1 30a2      	CPI  R26,LOW(0x2)
008de2 f469      	BRNE _0x2C0173
                 ; 0016 02FE                                 currentPage = P_CAL2_SEL_PRB;
008de3 e1ea      	LDI  R30,LOW(26)
008de4 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 02FF                                 cursor      = 0;
                 ; 0016 0300                                 prb1        = 0;
008de6 e0e0      	LDI  R30,LOW(0)
008de7 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0301                                 printOLED("S2%1d",prb1+1);
008de9 940e d012 	CALL SUBOPT_0x300
008deb 940e d019 	CALL SUBOPT_0x301
008ded 940e cada 	CALL SUBOPT_0x263
                 ; 0016 0302                             }
                 ; 0016 0303                             else if(cursor == 3){       // -- Reset User Password
008def c015      	RJMP _0x2C0174
                 _0x2C0173:
008df0 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008df2 30a3      	CPI  R26,LOW(0x3)
008df3 f441      	BRNE _0x2C0175
                 ; 0016 0304                                 currentPage = P_RESET_CONFIRM;
008df4 e2e0      	LDI  R30,LOW(32)
008df5 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0305                                 cursor      = 0;
                 ; 0016 0306                                 printOLED("RC");
                +
008df7 ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 902 ) )
008df8 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 902 ) )
008df9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 902 ) )
008dfa e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 902 ) )
                 	__POINTD1FN _0x2C0000,902
008dfb c005      	RJMP _0x2C02C6
                 ; 0016 0307                             }
                 ; 0016 0308                             else{                       // -- Exit -- should not occur
                 _0x2C0175:
                 ; 0016 0309                                 currentPage = P_MONITOR;
008dfc e0e0      	LDI  R30,LOW(0)
008dfd 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 030A                                 cursor      = 0;
                 ; 0016 030B                                 printOLED("M0");
008dff 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02C6:
008e01 940e da29 	CALL __PUTPARD1
008e03 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 030C                             }
                 _0x2C0174:
                 _0x2C0172:
                 _0x2C0170:
                 ; 0016 030D             break;
                 ; 0016 030E         }
                 _0x2C0164:
                 ; 0016 030F     }
                 ; 0016 0310     else if ( currentPage == P_SET_VREF )
008e05 c5e6      	RJMP _0x2C0177
                 _0x2C0161:
008e06 91a0 14df 	LDS  R26,_currentPage
008e08 31a6      	CPI  R26,LOW(0x16)
008e09 f011      	BREQ PC+3
008e0a 940c 8e6d 	JMP _0x2C0178
                 ; 0016 0311     {
                 ; 0016 0312         switch(key){
008e0c 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0313         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 0;            printOLED("M7%1d",cursor);              break;
008e0e f431      	BRNE _0x2C017C
008e0f e1e5      	LDI  R30,LOW(21)
008e10 940e ccd4 	CALL SUBOPT_0x2A3
008e12 940e d01d 	CALL SUBOPT_0x302
008e14 c057      	RJMP _0x2C017B
                 ; 0016 0314         case KEY_UP     :   if(++cursor > 3){   cursor  = 0;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017C:
008e15 30e2      	CPI  R30,LOW(0x2)
008e16 e0a0      	LDI  R26,HIGH(0x2)
008e17 07fa      	CPC  R31,R26
008e18 f451      	BRNE _0x2C017D
008e19 940e ccbb 	CALL SUBOPT_0x2A1
008e1b 30a4      	CPI  R26,LOW(0x4)
008e1c f01c      	BRLT _0x2C017E
008e1d e0e0      	LDI  R30,LOW(0)
008e1e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C017E:
008e20 940e d022 	CALL SUBOPT_0x303
008e22 c049      	RJMP _0x2C017B
                 ; 0016 0315         case KEY_DOWN   :   if(--cursor < 0){   cursor  = 3;                }       printOLED("VA%1d",cursor);              break;
                 _0x2C017D:
008e23 30e3      	CPI  R30,LOW(0x3)
008e24 e0a0      	LDI  R26,HIGH(0x3)
008e25 07fa      	CPC  R31,R26
008e26 f449      	BRNE _0x2C017F
008e27 940e cca7 	CALL SUBOPT_0x29F
008e29 f41c      	BRGE _0x2C0180
008e2a e0e3      	LDI  R30,LOW(3)
008e2b 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0180:
008e2d 940e d022 	CALL SUBOPT_0x303
008e2f c03c      	RJMP _0x2C017B
                 ; 0016 0316         case KEY_OK     :   if(cursor == 3){
                 _0x2C017F:
008e30 30e4      	CPI  R30,LOW(0x4)
008e31 e0a0      	LDI  R26,HIGH(0x4)
008e32 07fa      	CPC  R31,R26
008e33 f5c1      	BRNE _0x2C017B
008e34 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e36 30a3      	CPI  R26,LOW(0x3)
008e37 f481      	BRNE _0x2C0182
                 ; 0016 0317                                 currentPage = P_FINISH;
008e38 e2e4      	LDI  R30,LOW(36)
008e39 940e ccf4 	CALL SUBOPT_0x2A6
                 ; 0016 0318                                 tmpNextPage = P_MTNC_MENU;
                 ; 0016 0319                                 tmpPrevPage = P_SET_VREF;
008e3b e1e6      	LDI  R30,LOW(22)
008e3c 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 031A                                 set_vref(&vRef[0]);
008e3e e6a6      	LDI  R26,LOW(_vRef_S0160000000)
008e3f e1ba      	LDI  R27,HIGH(_vRef_S0160000000)
008e40 940e 9733 	CALL _set_vref
                 ; 0016 031B                                 cursor = 0;
008e42 e0e0      	LDI  R30,LOW(0)
008e43 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 031C                                 printOLED("FI");
008e45 940e cf12 	CALL SUBOPT_0x2DC
008e47 c020      	RJMP _0x2C02C7
                 ; 0016 031D                             }
                 ; 0016 031E                             else if(cursor < 3){
                 _0x2C0182:
008e48 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008e4a 30a3      	CPI  R26,LOW(0x3)
008e4b f4bc      	BRGE _0x2C0184
                 ; 0016 031F                                 if(++vRef[cursor] >9) vRef[cursor] = 0;
008e4c 940e cf8d 	CALL SUBOPT_0x2EB
008e4e 59aa      	SUBI R26,LOW(-_vRef_S0160000000)
008e4f 4eb5      	SBCI R27,HIGH(-_vRef_S0160000000)
008e50 940e cfcc 	CALL SUBOPT_0x2F5
008e52 f020      	BRLO _0x2C0185
008e53 940e d027 	CALL SUBOPT_0x304
008e55 e0a0      	LDI  R26,LOW(0)
008e56 83a0      	STD  Z+0,R26
                 ; 0016 0320                                 printOLED("VD%1d%1d",cursor, vRef[cursor]);
                 _0x2C0185:
008e57 940e d001 	CALL SUBOPT_0x2FE
008e59 940e cfa0 	CALL SUBOPT_0x2EE
008e5b 940e d027 	CALL SUBOPT_0x304
008e5d 81e0      	LD   R30,Z
008e5e 940e be67 	CALL SUBOPT_0x65
008e60 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0321                             }
                 ; 0016 0322                             else{                       // -- Exit -- should not occur
008e62 c009      	RJMP _0x2C0186
                 _0x2C0184:
                 ; 0016 0323                                 currentPage = P_MONITOR;
008e63 e0e0      	LDI  R30,LOW(0)
008e64 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0324                                 cursor      = 0;
                 ; 0016 0325                                 printOLED("M0");
008e66 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02C7:
008e68 940e da29 	CALL __PUTPARD1
008e6a 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 0326                             }
                 _0x2C0186:
                 ; 0016 0327             break;
                 ; 0016 0328         }
                 _0x2C017B:
                 ; 0016 0329     }
                 ; 0016 032A     else if ( currentPage == P_CAL1_SEL_REF_PRB )
008e6c c57f      	RJMP _0x2C0187
                 _0x2C0178:
008e6d 91a0 14df 	LDS  R26,_currentPage
008e6f 31a7      	CPI  R26,LOW(0x17)
008e70 f011      	BREQ PC+3
008e71 940c 8ec8 	JMP _0x2C0188
                 ; 0016 032B     {
                 ; 0016 032C         switch(key){
008e73 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 032D         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 1;    prb1 = 0;   printOLED("M7%1d",cursor);  break;
008e75 f449      	BRNE _0x2C018C
008e76 e1e5      	LDI  R30,LOW(21)
008e77 940e ceb4 	CALL SUBOPT_0x2CD
008e79 e0e0      	LDI  R30,LOW(0)
008e7a 93e0 1a69 	STS  _prb1_S0160000000,R30
008e7c 940e d01d 	CALL SUBOPT_0x302
008e7e c048      	RJMP _0x2C018B
                 ; 0016 032E         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018C:
008e7f 30e2      	CPI  R30,LOW(0x2)
008e80 e0a0      	LDI  R26,HIGH(0x2)
008e81 07fa      	CPC  R31,R26
008e82 f451      	BRNE _0x2C018D
008e83 940e ccbb 	CALL SUBOPT_0x2A1
008e85 30a2      	CPI  R26,LOW(0x2)
008e86 f01c      	BRLT _0x2C018E
008e87 e0e0      	LDI  R30,LOW(0)
008e88 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C018E:
008e8a 940e d02d 	CALL SUBOPT_0x305
008e8c c03a      	RJMP _0x2C018B
                 ; 0016 032F         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C018D:
008e8d 30e3      	CPI  R30,LOW(0x3)
008e8e e0a0      	LDI  R26,HIGH(0x3)
008e8f 07fa      	CPC  R31,R26
008e90 f449      	BRNE _0x2C018F
008e91 940e cca7 	CALL SUBOPT_0x29F
008e93 f41c      	BRGE _0x2C0190
008e94 e0e1      	LDI  R30,LOW(1)
008e95 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0190:
008e97 940e d02d 	CALL SUBOPT_0x305
008e99 c02d      	RJMP _0x2C018B
                 ; 0016 0330         case KEY_OK     :   if(cursor == 0){
                 _0x2C018F:
008e9a 30e4      	CPI  R30,LOW(0x4)
008e9b e0a0      	LDI  R26,HIGH(0x4)
008e9c 07fa      	CPC  R31,R26
008e9d f549      	BRNE _0x2C018B
008e9e 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008ea0 30e0      	CPI  R30,0
008ea1 f469      	BRNE _0x2C0192
                 ; 0016 0331                                 if(++prb1 > 4){ prb1 = 0; }
008ea2 940e d032 	CALL SUBOPT_0x306
008ea4 f018      	BRLO _0x2C0193
008ea5 e0e0      	LDI  R30,LOW(0)
008ea6 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0332                                 printOLED("PN%1d",prb1+1);
                 _0x2C0193:
008ea8 940e d039 	CALL SUBOPT_0x307
008eaa 940e d019 	CALL SUBOPT_0x301
008eac 940e cada 	CALL SUBOPT_0x263
                 ; 0016 0333                             }
                 ; 0016 0334                             else if(cursor == 1){
008eae c018      	RJMP _0x2C0194
                 _0x2C0192:
008eaf 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008eb1 30a1      	CPI  R26,LOW(0x1)
008eb2 f469      	BRNE _0x2C0195
                 ; 0016 0335                                 currentPage = P_CAL1_SEL_CAL_PRB;
008eb3 e1e8      	LDI  R30,LOW(24)
008eb4 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0336                                 cursor      = 0;
                 ; 0016 0337                                 prb2        = 0;
008eb6 e0e0      	LDI  R30,LOW(0)
008eb7 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 0338                                 printOLED("S2%1d",prb2+1);
008eb9 940e d012 	CALL SUBOPT_0x300
008ebb 940e d040 	CALL SUBOPT_0x308
008ebd 940e cada 	CALL SUBOPT_0x263
                 ; 0016 0339                             }
                 ; 0016 033A                             else{                       // -- Exit -- should not occur
008ebf c007      	RJMP _0x2C0196
                 _0x2C0195:
                 ; 0016 033B                                 currentPage = P_MONITOR;
008ec0 e0e0      	LDI  R30,LOW(0)
008ec1 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 033C                                 cursor      = 0;
                 ; 0016 033D                                 printOLED("M0");
008ec3 940e cd0a 	CALL SUBOPT_0x2A9
008ec5 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 033E                             }
                 _0x2C0196:
                 _0x2C0194:
                 ; 0016 033F             break;
                 ; 0016 0340         }
                 _0x2C018B:
                 ; 0016 0341     }
                 ; 0016 0342     else if ( currentPage == P_CAL1_SEL_CAL_PRB )
008ec7 c524      	RJMP _0x2C0197
                 _0x2C0188:
008ec8 91a0 14df 	LDS  R26,_currentPage
008eca 31a8      	CPI  R26,LOW(0x18)
008ecb f011      	BREQ PC+3
008ecc 940c 8f26 	JMP _0x2C0198
                 ; 0016 0343     {
                 ; 0016 0344         switch(key){
008ece 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0345         case KEY_MODE   :   currentPage = P_CAL1_SEL_REF_PRB;   cursor  = 0;    prb2 = 0;   printOLED("S1%1d",prb1+1);  break;
008ed0 f459      	BRNE _0x2C019C
008ed1 e1e7      	LDI  R30,LOW(23)
008ed2 940e ccd4 	CALL SUBOPT_0x2A3
008ed4 e0e0      	LDI  R30,LOW(0)
008ed5 93e0 1a6a 	STS  _prb2_S0160000000,R30
008ed7 940e d008 	CALL SUBOPT_0x2FF
008ed9 940e cada 	CALL SUBOPT_0x263
008edb c049      	RJMP _0x2C019B
                 ; 0016 0346         case KEY_UP     :   if(++cursor > 1){                   cursor  = 0;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019C:
008edc 30e2      	CPI  R30,LOW(0x2)
008edd e0a0      	LDI  R26,HIGH(0x2)
008ede 07fa      	CPC  R31,R26
008edf f451      	BRNE _0x2C019D
008ee0 940e ccbb 	CALL SUBOPT_0x2A1
008ee2 30a2      	CPI  R26,LOW(0x2)
008ee3 f01c      	BRLT _0x2C019E
008ee4 e0e0      	LDI  R30,LOW(0)
008ee5 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C019E:
008ee7 940e d02d 	CALL SUBOPT_0x305
008ee9 c03b      	RJMP _0x2C019B
                 ; 0016 0347         case KEY_DOWN   :   if(--cursor < 0){                   cursor  = 1;    }           printOLED("SA%1d",cursor);  break;
                 _0x2C019D:
008eea 30e3      	CPI  R30,LOW(0x3)
008eeb e0a0      	LDI  R26,HIGH(0x3)
008eec 07fa      	CPC  R31,R26
008eed f449      	BRNE _0x2C019F
008eee 940e cca7 	CALL SUBOPT_0x29F
008ef0 f41c      	BRGE _0x2C01A0
008ef1 e0e1      	LDI  R30,LOW(1)
008ef2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01A0:
008ef4 940e d02d 	CALL SUBOPT_0x305
008ef6 c02e      	RJMP _0x2C019B
                 ; 0016 0348         case KEY_OK     :   if(cursor == 0){
                 _0x2C019F:
008ef7 30e4      	CPI  R30,LOW(0x4)
008ef8 e0a0      	LDI  R26,HIGH(0x4)
008ef9 07fa      	CPC  R31,R26
008efa f551      	BRNE _0x2C019B
008efb 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008efd 30e0      	CPI  R30,0
008efe f489      	BRNE _0x2C01A2
                 ; 0016 0349                                 if(++prb2 > 4){ prb2 = 0; }
008eff 91a0 1a6a 	LDS  R26,_prb2_S0160000000
008f01 5faf      	SUBI R26,-LOW(1)
008f02 93a0 1a6a 	STS  _prb2_S0160000000,R26
008f04 30a5      	CPI  R26,LOW(0x5)
008f05 f018      	BRLO _0x2C01A3
008f06 e0e0      	LDI  R30,LOW(0)
008f07 93e0 1a6a 	STS  _prb2_S0160000000,R30
                 ; 0016 034A                                 printOLED("PN%1d",prb2+1);
                 _0x2C01A3:
008f09 940e d039 	CALL SUBOPT_0x307
008f0b 940e d040 	CALL SUBOPT_0x308
008f0d 940e cada 	CALL SUBOPT_0x263
                 ; 0016 034B                             }
                 ; 0016 034C                             else if(cursor == 1){
008f0f c015      	RJMP _0x2C01A4
                 _0x2C01A2:
008f10 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f12 30a1      	CPI  R26,LOW(0x1)
008f13 f451      	BRNE _0x2C01A5
                 ; 0016 034D                                 currentPage = P_CAL1_CONFIRM;
008f14 e1e9      	LDI  R30,LOW(25)
008f15 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 034E                                 cursor      = 0;
                 ; 0016 034F                                 printOLED("CC%1d",prb2+1);
008f17 940e d044 	CALL SUBOPT_0x309
008f19 940e d040 	CALL SUBOPT_0x308
008f1b 940e cada 	CALL SUBOPT_0x263
                 ; 0016 0350                             }
                 ; 0016 0351                             else{                       // -- Exit -- should not occur
008f1d c007      	RJMP _0x2C01A6
                 _0x2C01A5:
                 ; 0016 0352                                 currentPage = P_MONITOR;
008f1e e0e0      	LDI  R30,LOW(0)
008f1f 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0353                                 cursor      = 0;
                 ; 0016 0354                                 printOLED("M0");
008f21 940e cd0a 	CALL SUBOPT_0x2A9
008f23 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 0355                             }
                 _0x2C01A6:
                 _0x2C01A4:
                 ; 0016 0356             break;
                 ; 0016 0357         }
                 _0x2C019B:
                 ; 0016 0358     }
                 ; 0016 0359     else if ( currentPage == P_CAL1_CONFIRM )
008f25 c4c6      	RJMP _0x2C01A7
                 _0x2C0198:
008f26 91a0 14df 	LDS  R26,_currentPage
008f28 31a9      	CPI  R26,LOW(0x19)
008f29 f599      	BRNE _0x2C01A8
                 ; 0016 035A     {
                 ; 0016 035B         switch(key){
008f2a 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 035C         case KEY_MODE   :   currentPage = P_CAL1_SEL_CAL_PRB;   cursor  = 0;        printOLED("S2%1d",prb2+1);  break;
008f2c f451      	BRNE _0x2C01AC
008f2d e1e8      	LDI  R30,LOW(24)
008f2e 940e ccd4 	CALL SUBOPT_0x2A3
008f30 940e d012 	CALL SUBOPT_0x300
008f32 940e d040 	CALL SUBOPT_0x308
008f34 940e cada 	CALL SUBOPT_0x263
008f36 c025      	RJMP _0x2C01AB
                 ; 0016 035D         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C01AC:
008f37 30e2      	CPI  R30,LOW(0x2)
008f38 e0a0      	LDI  R26,HIGH(0x2)
008f39 07fa      	CPC  R31,R26
008f3a f109      	BREQ _0x2C01AB
                 ; 0016 035E         case KEY_DOWN   :   /* no operation */                                                                  break;
008f3b 30e3      	CPI  R30,LOW(0x3)
008f3c e0a0      	LDI  R26,HIGH(0x3)
008f3d 07fa      	CPC  R31,R26
008f3e f0e9      	BREQ _0x2C01AB
                 ; 0016 035F         case KEY_OK     :   res = sensorCalibrate1(prb1,prb2);
008f3f 30e4      	CPI  R30,LOW(0x4)
008f40 e0a0      	LDI  R26,HIGH(0x4)
008f41 07fa      	CPC  R31,R26
008f42 f4c9      	BRNE _0x2C01AB
008f43 940e d04b 	CALL SUBOPT_0x30A
008f45 91a0 1a6a 	LDS  R26,_prb2_S0160000000
008f47 27bb      	CLR  R27
008f48 940e 6c44 	CALL _sensorCalibrate1
008f4a 01af      	MOVW R20,R30
                 ; 0016 0360                             if(res < 0){
008f4b 2355      	TST  R21
008f4c f432      	BRPL _0x2C01B0
                 ; 0016 0361                                 currentPage = P_FAILED;
008f4d e2e5      	LDI  R30,LOW(37)
008f4e 940e d051 	CALL SUBOPT_0x30B
                 ; 0016 0362                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 0363                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 0364                                 cursor      = 0;
                 ; 0016 0365                                 printOLED("FL");
008f50 940e cf0d 	CALL SUBOPT_0x2DB
008f52 c005      	RJMP _0x2C02C8
                 ; 0016 0366                             }
                 ; 0016 0367                             else{
                 _0x2C01B0:
                 ; 0016 0368                                 currentPage = P_FINISH;
008f53 e2e4      	LDI  R30,LOW(36)
008f54 940e d051 	CALL SUBOPT_0x30B
                 ; 0016 0369                                 tmpNextPage = P_CAL1_SEL_CAL_PRB;
                 ; 0016 036A                                 tmpPrevPage = P_CAL1_CONFIRM;
                 ; 0016 036B                                 cursor      = 0;
                 ; 0016 036C                                 printOLED("FI");
008f56 940e cf12 	CALL SUBOPT_0x2DC
                 _0x2C02C8:
008f58 940e da29 	CALL __PUTPARD1
008f5a 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 036D                             }
                 ; 0016 036E                             break;
                 ; 0016 036F         }
                 _0x2C01AB:
                 ; 0016 0370     }
                 ; 0016 0371     else if ( currentPage == P_CAL2_SEL_PRB )
008f5c c48f      	RJMP _0x2C01B2
                 _0x2C01A8:
008f5d 91a0 14df 	LDS  R26,_currentPage
008f5f 31aa      	CPI  R26,LOW(0x1A)
008f60 f011      	BREQ PC+3
008f61 940c 8fae 	JMP _0x2C01B3
                 ; 0016 0372     {
                 ; 0016 0373         switch(key){
008f63 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0374         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 2;            printOLED("M7%1d",cursor);  break;
008f65 f431      	BRNE _0x2C01B7
008f66 e1e5      	LDI  R30,LOW(21)
008f67 940e ceba 	CALL SUBOPT_0x2CE
008f69 940e d01d 	CALL SUBOPT_0x302
008f6b c041      	RJMP _0x2C01B6
                 ; 0016 0375         case KEY_UP     :   if(++cursor > 1){               cursor  = 0;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B7:
008f6c 30e2      	CPI  R30,LOW(0x2)
008f6d e0a0      	LDI  R26,HIGH(0x2)
008f6e 07fa      	CPC  R31,R26
008f6f f451      	BRNE _0x2C01B8
008f70 940e ccbb 	CALL SUBOPT_0x2A1
008f72 30a2      	CPI  R26,LOW(0x2)
008f73 f01c      	BRLT _0x2C01B9
008f74 e0e0      	LDI  R30,LOW(0)
008f75 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01B9:
008f77 940e d02d 	CALL SUBOPT_0x305
008f79 c033      	RJMP _0x2C01B6
                 ; 0016 0376         case KEY_DOWN   :   if(--cursor < 0){               cursor  = 1;    }       printOLED("SA%1d",cursor);  break;
                 _0x2C01B8:
008f7a 30e3      	CPI  R30,LOW(0x3)
008f7b e0a0      	LDI  R26,HIGH(0x3)
008f7c 07fa      	CPC  R31,R26
008f7d f449      	BRNE _0x2C01BA
008f7e 940e cca7 	CALL SUBOPT_0x29F
008f80 f41c      	BRGE _0x2C01BB
008f81 e0e1      	LDI  R30,LOW(1)
008f82 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01BB:
008f84 940e d02d 	CALL SUBOPT_0x305
008f86 c026      	RJMP _0x2C01B6
                 ; 0016 0377         case KEY_OK     :   if(cursor == 0){
                 _0x2C01BA:
008f87 30e4      	CPI  R30,LOW(0x4)
008f88 e0a0      	LDI  R26,HIGH(0x4)
008f89 07fa      	CPC  R31,R26
008f8a f511      	BRNE _0x2C01B6
008f8b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008f8d 30e0      	CPI  R30,0
008f8e f469      	BRNE _0x2C01BD
                 ; 0016 0378                                 if(++prb1 > 4){ prb1 = 0; }
008f8f 940e d032 	CALL SUBOPT_0x306
008f91 f018      	BRLO _0x2C01BE
008f92 e0e0      	LDI  R30,LOW(0)
008f93 93e0 1a69 	STS  _prb1_S0160000000,R30
                 ; 0016 0379                                 printOLED("PN%1d",prb1+1);
                 _0x2C01BE:
008f95 940e d039 	CALL SUBOPT_0x307
008f97 940e d019 	CALL SUBOPT_0x301
008f99 940e cada 	CALL SUBOPT_0x263
                 ; 0016 037A                             }
                 ; 0016 037B                             else if(cursor == 1){
008f9b c011      	RJMP _0x2C01BF
                 _0x2C01BD:
008f9c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008f9e 30a1      	CPI  R26,LOW(0x1)
008f9f f431      	BRNE _0x2C01C0
                 ; 0016 037C                                 currentPage = P_CAL2_MENU;
008fa0 e1eb      	LDI  R30,LOW(27)
008fa1 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 037D                                 cursor      = 0;
                 ; 0016 037E                                 printOLED("M8%1d",cursor);
008fa3 940e d058 	CALL SUBOPT_0x30C
                 ; 0016 037F                             }
                 ; 0016 0380                             else{                       // -- Exit -- should not occur
008fa5 c007      	RJMP _0x2C01C1
                 _0x2C01C0:
                 ; 0016 0381                                 currentPage = P_MONITOR;
008fa6 e0e0      	LDI  R30,LOW(0)
008fa7 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0382                                 cursor      = 0;
                 ; 0016 0383                                 printOLED("M0");
008fa9 940e cd0a 	CALL SUBOPT_0x2A9
008fab 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 0384                             }
                 _0x2C01C1:
                 _0x2C01BF:
                 ; 0016 0385             break;
                 ; 0016 0386         }
                 _0x2C01B6:
                 ; 0016 0387     }
                 ; 0016 0388     else if ( currentPage == P_CAL2_MENU )
008fad c43e      	RJMP _0x2C01C2
                 _0x2C01B3:
008fae 91a0 14df 	LDS  R26,_currentPage
008fb0 31ab      	CPI  R26,LOW(0x1B)
008fb1 f011      	BREQ PC+3
008fb2 940c 9062 	JMP _0x2C01C3
                 ; 0016 0389     {
                 ; 0016 038A         switch(key){
008fb4 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 038B         case KEY_MODE   :   currentPage = P_CAL2_SEL_PRB;   cursor  = 0;        printOLED("S2%1d",prb1+1);  break;
008fb6 f451      	BRNE _0x2C01C7
008fb7 e1ea      	LDI  R30,LOW(26)
008fb8 940e ccd4 	CALL SUBOPT_0x2A3
008fba 940e d012 	CALL SUBOPT_0x300
008fbc 940e d019 	CALL SUBOPT_0x301
008fbe 940e cada 	CALL SUBOPT_0x263
008fc0 c0a0      	RJMP _0x2C01C6
                 ; 0016 038C         case KEY_UP     :   if(--cursor < 0){               cursor  = 3;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C7:
008fc1 30e2      	CPI  R30,LOW(0x2)
008fc2 e0a0      	LDI  R26,HIGH(0x2)
008fc3 07fa      	CPC  R31,R26
008fc4 f449      	BRNE _0x2C01C8
008fc5 940e cca7 	CALL SUBOPT_0x29F
008fc7 f41c      	BRGE _0x2C01C9
008fc8 e0e3      	LDI  R30,LOW(3)
008fc9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01C9:
008fcb 940e ccae 	CALL SUBOPT_0x2A0
008fcd c093      	RJMP _0x2C01C6
                 ; 0016 038D         case KEY_DOWN   :   if(++cursor > 3){               cursor  = 0;    }   printOLED("MA%1d",cursor);  break;
                 _0x2C01C8:
008fce 30e3      	CPI  R30,LOW(0x3)
008fcf e0a0      	LDI  R26,HIGH(0x3)
008fd0 07fa      	CPC  R31,R26
008fd1 f451      	BRNE _0x2C01CA
008fd2 940e ccbb 	CALL SUBOPT_0x2A1
008fd4 30a4      	CPI  R26,LOW(0x4)
008fd5 f01c      	BRLT _0x2C01CB
008fd6 e0e0      	LDI  R30,LOW(0)
008fd7 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01CB:
008fd9 940e ccae 	CALL SUBOPT_0x2A0
008fdb c085      	RJMP _0x2C01C6
                 ; 0016 038E         case KEY_OK     :   if(cursor < 3){
                 _0x2C01CA:
008fdc 30e4      	CPI  R30,LOW(0x4)
008fdd e0a0      	LDI  R26,HIGH(0x4)
008fde 07fa      	CPC  R31,R26
008fdf f011      	BREQ PC+3
008fe0 940c 9061 	JMP _0x2C01C6
008fe2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008fe4 30a3      	CPI  R26,LOW(0x3)
008fe5 f014      	BRLT PC+3
008fe6 940c 904c 	JMP _0x2C01CD
                 ; 0016 038F                                 if(cursor == 0){        currentPage = P_CAL2_SPT1;  }
008fe8 91e0 1a1f 	LDS  R30,_cursor_S0160000000
008fea 30e0      	CPI  R30,0
008feb f411      	BRNE _0x2C01CE
008fec e1ec      	LDI  R30,LOW(28)
008fed c00b      	RJMP _0x2C02C9
                 ; 0016 0390                                 else if(cursor == 1){   currentPage = P_CAL2_SPT2;  }
                 _0x2C01CE:
008fee 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ff0 30a1      	CPI  R26,LOW(0x1)
008ff1 f411      	BRNE _0x2C01D0
008ff2 e1ed      	LDI  R30,LOW(29)
008ff3 c005      	RJMP _0x2C02C9
                 ; 0016 0391                                 else if(cursor == 2){   currentPage = P_CAL2_SPT3;  }
                 _0x2C01D0:
008ff4 91a0 1a1f 	LDS  R26,_cursor_S0160000000
008ff6 30a2      	CPI  R26,LOW(0x2)
008ff7 f419      	BRNE _0x2C01D2
008ff8 e1ee      	LDI  R30,LOW(30)
                 _0x2C02C9:
008ff9 93e0 14df 	STS  _currentPage,R30
                 ; 0016 0392 
                 ; 0016 0393                                 printOLED("CP%1d%1d",cursor+1,prb1+1);
                 _0x2C01D2:
                +
008ffb eded     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 941 ) )
008ffc e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 941 ) )
008ffd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 941 ) )
008ffe e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 941 ) )
                 	__POINTD1FN _0x2C0000,941
008fff 940e da29 	CALL __PUTPARD1
009001 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009003 e0f0      	LDI  R31,0
009004 fde7      	SBRC R30,7
009005 efff      	SER  R31
009006 940e c8d3 	CALL SUBOPT_0x213
009008 940e d019 	CALL SUBOPT_0x301
00900a 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0394 
                 ; 0016 0395                                 res = sensorGetCurrentSetPoint(prb1,CALPOINT(cursor+1),&calPnt[0]);
00900c 940e d04b 	CALL SUBOPT_0x30A
00900e 91e0 1a1f 	LDS  R30,_cursor_S0160000000
009010 e0f0      	LDI  R31,0
009011 fde7      	SBRC R30,7
009012 efff      	SER  R31
009013 59eb      	SUBI R30,LOW(-101)
009014 4fff      	SBCI R31,HIGH(-101)
009015 940e d05d 	CALL SUBOPT_0x30D
009017 940e 6e87 	CALL _sensorGetCurrentSetPoint
009019 01af      	MOVW R20,R30
                 ; 0016 0396                                 if(res<0){          memset(&calPnt[0],0x00,sizeof(calPnt));     }
00901a 2355      	TST  R21
00901b f442      	BRPL _0x2C01D3
00901c e6eb      	LDI  R30,LOW(_calPnt_S0160000000)
00901d e1fa      	LDI  R31,HIGH(_calPnt_S0160000000)
00901e 940e c206 	CALL SUBOPT_0xF8
009020 e0a6      	LDI  R26,LOW(6)
009021 e0b0      	LDI  R27,0
009022 940e a124 	CALL _memset
                 ; 0016 0397                                 for(i=0;i<6;i++){   printOLED("CD%1d%1d",i,calPnt[i]);
                 _0x2C01D3:
                +
009024 e000     +LDI R16 , LOW ( 0 )
009025 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C01D5:
                +
009026 3006     +CPI R16 , LOW ( 6 )
009027 e0e0     +LDI R30 , HIGH ( 6 )
009028 071e     +CPC R17 , R30
                 	__CPWRN 16,17,6
009029 f4f4      	BRGE _0x2C01D6
00902a 940e d062 	CALL SUBOPT_0x30E
00902c 01f8      	MOVW R30,R16
00902d 940e cb08 	CALL SUBOPT_0x269
00902f e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
009030 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
009031 940e cee1 	CALL SUBOPT_0x2D4
009033 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0398                                                     printDebug("calPnt[%1d] = %1d\r\n",i,calPnt[i]);         }
                +
009035 eeef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 959 ) )
009036 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 959 ) )
009037 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 959 ) )
009038 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 959 ) )
                 	__POINTD1FN _0x2C0000,959
009039 940e da29 	CALL __PUTPARD1
00903b 01f8      	MOVW R30,R16
00903c 940e cb08 	CALL SUBOPT_0x269
00903e e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
00903f e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
009040 0fa0      	ADD  R26,R16
009041 1fb1      	ADC  R27,R17
009042 91ec      	LD   R30,X
009043 940e c8d9 	CALL SUBOPT_0x214
                +
009045 5f0f     +SUBI R16 , LOW ( - 1 )
009046 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009047 cfde      	RJMP _0x2C01D5
                 _0x2C01D6:
                 ; 0016 0399                                 cursor      = 0;
009048 e0e0      	LDI  R30,LOW(0)
009049 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 039A                             }
                 ; 0016 039B                             else if(cursor == 3){       // -- Calculate
00904b c015      	RJMP _0x2C01D7
                 _0x2C01CD:
00904c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00904e 30a3      	CPI  R26,LOW(0x3)
00904f f451      	BRNE _0x2C01D8
                 ; 0016 039C                                 currentPage = P_CAL2_CONFIRM;
009050 e1ef      	LDI  R30,LOW(31)
009051 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 039D                                 cursor      = 0;
                 ; 0016 039E                                 printOLED("CC%1d",prb1+1);
009053 940e d044 	CALL SUBOPT_0x309
009055 940e d019 	CALL SUBOPT_0x301
009057 940e cada 	CALL SUBOPT_0x263
                 ; 0016 039F                             }
                 ; 0016 03A0                             else{                       // -- Exit -- should not occur
009059 c007      	RJMP _0x2C01D9
                 _0x2C01D8:
                 ; 0016 03A1                                 currentPage = P_MONITOR;
00905a e0e0      	LDI  R30,LOW(0)
00905b 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 03A2                                 cursor      = 0;
                 ; 0016 03A3                                 printOLED("M0");
00905d 940e cd0a 	CALL SUBOPT_0x2A9
00905f 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 03A4                             }
                 _0x2C01D9:
                 _0x2C01D7:
                 ; 0016 03A5             break;
                 ; 0016 03A6         }
                 _0x2C01C6:
                 ; 0016 03A7     }
                 ; 0016 03A8     else if ((currentPage == P_CAL2_SPT1) || (currentPage == P_CAL2_SPT2) || (currentPage == P_CAL2_SPT3))
009061 c38a      	RJMP _0x2C01DA
                 _0x2C01C3:
009062 91a0 14df 	LDS  R26,_currentPage
009064 31ac      	CPI  R26,LOW(0x1C)
009065 f029      	BREQ _0x2C01DC
009066 31ad      	CPI  R26,LOW(0x1D)
009067 f019      	BREQ _0x2C01DC
009068 31ae      	CPI  R26,LOW(0x1E)
009069 f009      	BREQ _0x2C01DC
00906a c0c7      	RJMP _0x2C01DB
                 _0x2C01DC:
                 ; 0016 03A9     {
                 ; 0016 03AA         switch(key){
00906b 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 03AB         case KEY_MODE   :   currentPage = P_CAL2_MENU;
00906d f4c9      	BRNE _0x2C01E1
00906e e1eb      	LDI  R30,LOW(27)
00906f 93e0 14df 	STS  _currentPage,R30
                 ; 0016 03AC                             if(currentPage == P_CAL2_SPT1){         cursor  = 0;    }
009071 91a0 14df 	LDS  R26,_currentPage
009073 31ac      	CPI  R26,LOW(0x1C)
009074 f411      	BRNE _0x2C01E2
009075 e0e0      	LDI  R30,LOW(0)
009076 c00b      	RJMP _0x2C02CA
                 ; 0016 03AD                             else if(currentPage == P_CAL2_SPT2){    cursor  = 1;    }
                 _0x2C01E2:
009077 91a0 14df 	LDS  R26,_currentPage
009079 31ad      	CPI  R26,LOW(0x1D)
00907a f411      	BRNE _0x2C01E4
00907b e0e1      	LDI  R30,LOW(1)
00907c c005      	RJMP _0x2C02CA
                 ; 0016 03AE                             else if(currentPage == P_CAL2_SPT3){    cursor  = 2;    }
                 _0x2C01E4:
00907d 91a0 14df 	LDS  R26,_currentPage
00907f 31ae      	CPI  R26,LOW(0x1E)
009080 f419      	BRNE _0x2C01E6
009081 e0e2      	LDI  R30,LOW(2)
                 _0x2C02CA:
009082 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 03AF                             printOLED("M8%1d",cursor);                                                                      break;
                 _0x2C01E6:
009084 940e d058 	CALL SUBOPT_0x30C
009086 c0aa      	RJMP _0x2C01E0
                 ; 0016 03B0         case KEY_UP     :   if(++cursor > 6){                       cursor  = 0;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E1:
009087 30e2      	CPI  R30,LOW(0x2)
009088 e0a0      	LDI  R26,HIGH(0x2)
009089 07fa      	CPC  R31,R26
00908a f451      	BRNE _0x2C01E7
00908b 940e ccbb 	CALL SUBOPT_0x2A1
00908d 30a7      	CPI  R26,LOW(0x7)
00908e f01c      	BRLT _0x2C01E8
00908f e0e0      	LDI  R30,LOW(0)
009090 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01E8:
009092 940e d069 	CALL SUBOPT_0x30F
009094 c09c      	RJMP _0x2C01E0
                 ; 0016 03B1         case KEY_DOWN   :   if(--cursor < 0){                       cursor  = 6;    }       printOLED("CA%1d",cursor);      break;
                 _0x2C01E7:
009095 30e3      	CPI  R30,LOW(0x3)
009096 e0a0      	LDI  R26,HIGH(0x3)
009097 07fa      	CPC  R31,R26
009098 f449      	BRNE _0x2C01E9
009099 940e cca7 	CALL SUBOPT_0x29F
00909b f41c      	BRGE _0x2C01EA
00909c e0e6      	LDI  R30,LOW(6)
00909d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C01EA:
00909f 940e d069 	CALL SUBOPT_0x30F
0090a1 c08f      	RJMP _0x2C01E0
                 ; 0016 03B2         case KEY_OK     :   if(cursor == 6){
                 _0x2C01E9:
0090a2 30e4      	CPI  R30,LOW(0x4)
0090a3 e0a0      	LDI  R26,HIGH(0x4)
0090a4 07fa      	CPC  R31,R26
0090a5 f011      	BREQ PC+3
0090a6 940c 9131 	JMP _0x2C01E0
0090a8 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0090aa 30a6      	CPI  R26,LOW(0x6)
0090ab f011      	BREQ PC+3
0090ac 940c 90f2 	JMP _0x2C01EC
                 ; 0016 03B3 
                 ; 0016 03B4                                 if(currentPage == P_CAL2_SPT1){
0090ae 91a0 14df 	LDS  R26,_currentPage
0090b0 31ac      	CPI  R26,LOW(0x1C)
0090b1 f451      	BRNE _0x2C01ED
                 ; 0016 03B5                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(1),&calPnt[0]);
0090b2 940e d04b 	CALL SUBOPT_0x30A
0090b4 e6e5      	LDI  R30,LOW(101)
0090b5 e0f0      	LDI  R31,HIGH(101)
0090b6 940e d05d 	CALL SUBOPT_0x30D
0090b8 940e 7005 	CALL _sensorSetCurrentSetPoint
0090ba 01af      	MOVW R20,R30
                 ; 0016 03B6                                 }
                 ; 0016 03B7                                 else if(currentPage == P_CAL2_SPT2){
0090bb c01e      	RJMP _0x2C01EE
                 _0x2C01ED:
0090bc 91a0 14df 	LDS  R26,_currentPage
0090be 31ad      	CPI  R26,LOW(0x1D)
0090bf f451      	BRNE _0x2C01EF
                 ; 0016 03B8                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(2),&calPnt[0]);
0090c0 940e d04b 	CALL SUBOPT_0x30A
0090c2 e6e6      	LDI  R30,LOW(102)
0090c3 e0f0      	LDI  R31,HIGH(102)
0090c4 940e d05d 	CALL SUBOPT_0x30D
0090c6 940e 7005 	CALL _sensorSetCurrentSetPoint
0090c8 01af      	MOVW R20,R30
                 ; 0016 03B9                                 }
                 ; 0016 03BA                                 else if(currentPage == P_CAL2_SPT3){
0090c9 c010      	RJMP _0x2C01F0
                 _0x2C01EF:
0090ca 91a0 14df 	LDS  R26,_currentPage
0090cc 31ae      	CPI  R26,LOW(0x1E)
0090cd f451      	BRNE _0x2C01F1
                 ; 0016 03BB                                     res = sensorSetCurrentSetPoint(prb1,CALPOINT(3),&calPnt[0]);
0090ce 940e d04b 	CALL SUBOPT_0x30A
0090d0 e6e7      	LDI  R30,LOW(103)
0090d1 e0f0      	LDI  R31,HIGH(103)
0090d2 940e d05d 	CALL SUBOPT_0x30D
0090d4 940e 7005 	CALL _sensorSetCurrentSetPoint
0090d6 01af      	MOVW R20,R30
                 ; 0016 03BC                                 }
                 ; 0016 03BD                                 else{
0090d7 c002      	RJMP _0x2C01F2
                 _0x2C01F1:
                 ; 0016 03BE                                     // -- should not occur -- //
                 ; 0016 03BF                                     res = -1;
                +
0090d8 ef4f     +LDI R20 , LOW ( - 1 )
0090d9 ef5f     +LDI R21 , HIGH ( - 1 )
                 	__GETWRN 20,21,-1
                 ; 0016 03C0                                 }
                 _0x2C01F2:
                 _0x2C01F0:
                 _0x2C01EE:
                 ; 0016 03C1 
                 ; 0016 03C2                                 if(res < 0){
0090da 2355      	TST  R21
0090db f44a      	BRPL _0x2C01F3
                 ; 0016 03C3                                     currentPage = P_FAILED;
0090dc 940e d06e 	CALL SUBOPT_0x310
                 ; 0016 03C4                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03C5                                     tmpPrevPage = currentPage;
0090de 91e0 14df 	LDS  R30,_currentPage
0090e0 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 03C6                                     cursor      = 0;
                 ; 0016 03C7                                     printOLED("FL");
0090e2 940e cf0d 	CALL SUBOPT_0x2DB
0090e4 c008      	RJMP _0x2C02CB
                 ; 0016 03C8                                 }
                 ; 0016 03C9                                 else{
                 _0x2C01F3:
                 ; 0016 03CA                                     currentPage = P_FINISH;
0090e5 940e d075 	CALL SUBOPT_0x311
                 ; 0016 03CB                                     tmpNextPage = P_CAL2_MENU;
                 ; 0016 03CC                                     tmpPrevPage = currentPage;
0090e7 91e0 14df 	LDS  R30,_currentPage
0090e9 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 03CD                                     cursor      = 0;
                 ; 0016 03CE                                     printOLED("FI");
0090eb 940e cf12 	CALL SUBOPT_0x2DC
                 _0x2C02CB:
0090ed 940e da29 	CALL __PUTPARD1
0090ef 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 03CF                                 }
                 ; 0016 03D0                             }
                 ; 0016 03D1                             else if(cursor == 0){   // toggle '+' & '-'
0090f1 c03f      	RJMP _0x2C01F5
                 _0x2C01EC:
0090f2 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0090f4 30e0      	CPI  R30,0
0090f5 f4c9      	BRNE _0x2C01F6
                 ; 0016 03D2                                 if(++calPnt[cursor] > 1){ calPnt[cursor] = 0;   }
0090f6 940e cf8d 	CALL SUBOPT_0x2EB
0090f8 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
0090f9 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
0090fa 91ec      	LD   R30,X
0090fb 5fef      	SUBI R30,-LOW(1)
0090fc 93ec      	ST   X,R30
0090fd 30e2      	CPI  R30,LOW(0x2)
0090fe f020      	BRLO _0x2C01F7
0090ff 940e d07c 	CALL SUBOPT_0x312
009101 e0a0      	LDI  R26,LOW(0)
009102 83a0      	STD  Z+0,R26
                 ; 0016 03D3                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01F7:
009103 940e d062 	CALL SUBOPT_0x30E
009105 940e cfa0 	CALL SUBOPT_0x2EE
009107 940e d07c 	CALL SUBOPT_0x312
009109 81e0      	LD   R30,Z
00910a 940e be67 	CALL SUBOPT_0x65
00910c 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 03D4                             }
                 ; 0016 03D5                             else if(cursor < 6){
00910e c022      	RJMP _0x2C01F8
                 _0x2C01F6:
00910f 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009111 30a6      	CPI  R26,LOW(0x6)
009112 f4bc      	BRGE _0x2C01F9
                 ; 0016 03D6                                 if(++calPnt[cursor] > 9){ calPnt[cursor] = 0;   }
009113 940e cf8d 	CALL SUBOPT_0x2EB
009115 59a5      	SUBI R26,LOW(-_calPnt_S0160000000)
009116 4eb5      	SBCI R27,HIGH(-_calPnt_S0160000000)
009117 940e cfcc 	CALL SUBOPT_0x2F5
009119 f020      	BRLO _0x2C01FA
00911a 940e d07c 	CALL SUBOPT_0x312
00911c e0a0      	LDI  R26,LOW(0)
00911d 83a0      	STD  Z+0,R26
                 ; 0016 03D7                                 printOLED("CD%1d%1d",cursor,calPnt[cursor]);
                 _0x2C01FA:
00911e 940e d062 	CALL SUBOPT_0x30E
009120 940e cfa0 	CALL SUBOPT_0x2EE
009122 940e d07c 	CALL SUBOPT_0x312
009124 81e0      	LD   R30,Z
009125 940e be67 	CALL SUBOPT_0x65
009127 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 03D8                             }
                 ; 0016 03D9                             else{                       // -- Exit -- should not occur
009129 c007      	RJMP _0x2C01FB
                 _0x2C01F9:
                 ; 0016 03DA                                 currentPage = P_MONITOR;
00912a e0e0      	LDI  R30,LOW(0)
00912b 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 03DB                                 cursor      = 0;
                 ; 0016 03DC                                 printOLED("M0");
00912d 940e cd0a 	CALL SUBOPT_0x2A9
00912f 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 03DD                             }
                 _0x2C01FB:
                 _0x2C01F8:
                 _0x2C01F5:
                 ; 0016 03DE             break;
                 ; 0016 03DF         }
                 _0x2C01E0:
                 ; 0016 03E0     }
                 ; 0016 03E1     else if ( currentPage == P_CAL2_CONFIRM )
009131 c2ba      	RJMP _0x2C01FC
                 _0x2C01DB:
009132 91a0 14df 	LDS  R26,_currentPage
009134 31af      	CPI  R26,LOW(0x1F)
009135 f589      	BRNE _0x2C01FD
                 ; 0016 03E2     {
                 ; 0016 03E3         switch(key){
009136 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 03E4         case KEY_MODE   :   currentPage = P_CAL2_MENU;      cursor  = 1;            printOLED("M8%1d",cursor);  break;
009138 f431      	BRNE _0x2C0201
009139 e1eb      	LDI  R30,LOW(27)
00913a 940e ceb4 	CALL SUBOPT_0x2CD
00913c 940e d058 	CALL SUBOPT_0x30C
00913e c027      	RJMP _0x2C0200
                 ; 0016 03E5         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C0201:
00913f 30e2      	CPI  R30,LOW(0x2)
009140 e0a0      	LDI  R26,HIGH(0x2)
009141 07fa      	CPC  R31,R26
009142 f119      	BREQ _0x2C0200
                 ; 0016 03E6         case KEY_DOWN   :   /* no operation */                                                                  break;
009143 30e3      	CPI  R30,LOW(0x3)
009144 e0a0      	LDI  R26,HIGH(0x3)
009145 07fa      	CPC  R31,R26
009146 f0f9      	BREQ _0x2C0200
                 ; 0016 03E7         case KEY_OK     :   res = sensorCalibrate2(prb1);
009147 30e4      	CPI  R30,LOW(0x4)
009148 e0a0      	LDI  R26,HIGH(0x4)
009149 07fa      	CPC  R31,R26
00914a f4d9      	BRNE _0x2C0200
00914b 91a0 1a69 	LDS  R26,_prb1_S0160000000
00914d 27bb      	CLR  R27
00914e 940e 6d08 	CALL _sensorCalibrate2
009150 01af      	MOVW R20,R30
                 ; 0016 03E8                             if(res < 0){
009151 2355      	TST  R21
009152 f442      	BRPL _0x2C0205
                 ; 0016 03E9                                 currentPage = P_FAILED;
009153 940e d06e 	CALL SUBOPT_0x310
                 ; 0016 03EA                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03EB                                 tmpPrevPage = P_CAL2_CONFIRM;
009155 e1ef      	LDI  R30,LOW(31)
009156 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 03EC                                 cursor      = 0;
                 ; 0016 03ED                                 printOLED("FL");
009158 940e cf0d 	CALL SUBOPT_0x2DB
00915a c007      	RJMP _0x2C02CC
                 ; 0016 03EE                             }
                 ; 0016 03EF                             else{
                 _0x2C0205:
                 ; 0016 03F0                                 currentPage = P_FINISH;
00915b 940e d075 	CALL SUBOPT_0x311
                 ; 0016 03F1                                 tmpNextPage = P_CAL2_MENU;
                 ; 0016 03F2                                 tmpPrevPage = P_CAL2_CONFIRM;
00915d e1ef      	LDI  R30,LOW(31)
00915e 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 03F3                                 cursor      = 0;
                 ; 0016 03F4                                 printOLED("FI");
009160 940e cf12 	CALL SUBOPT_0x2DC
                 _0x2C02CC:
009162 940e da29 	CALL __PUTPARD1
009164 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 03F5                             }
                 ; 0016 03F6                             break;
                 ; 0016 03F7         }
                 _0x2C0200:
                 ; 0016 03F8     }
                 ; 0016 03F9     else if ( currentPage == P_RESET_CONFIRM )
009166 c285      	RJMP _0x2C0207
                 _0x2C01FD:
009167 91a0 14df 	LDS  R26,_currentPage
009169 32a0      	CPI  R26,LOW(0x20)
00916a f591      	BRNE _0x2C0208
                 ; 0016 03FA     {
                 ; 0016 03FB         switch(key){
00916b 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 03FC         case KEY_MODE   :   currentPage = P_MTNC_MENU;      cursor  = 3;            printOLED("M7%1d",cursor);  break;
00916d f449      	BRNE _0x2C020C
00916e e1e5      	LDI  R30,LOW(21)
00916f 93e0 14df 	STS  _currentPage,R30
009171 e0e3      	LDI  R30,LOW(3)
009172 93e0 1a1f 	STS  _cursor_S0160000000,R30
009174 940e d01d 	CALL SUBOPT_0x302
009176 c025      	RJMP _0x2C020B
                 ; 0016 03FD         case KEY_UP     :   /* no operation */                                                                  break;
                 _0x2C020C:
009177 30e2      	CPI  R30,LOW(0x2)
009178 e0a0      	LDI  R26,HIGH(0x2)
009179 07fa      	CPC  R31,R26
00917a f109      	BREQ _0x2C020B
                 ; 0016 03FE         case KEY_DOWN   :   /* no operation */                                                                  break;
00917b 30e3      	CPI  R30,LOW(0x3)
00917c e0a0      	LDI  R26,HIGH(0x3)
00917d 07fa      	CPC  R31,R26
00917e f0e9      	BREQ _0x2C020B
                 ; 0016 03FF         case KEY_OK     :   memset(newPwd,0x00,sizeof(newPwd));
00917f 30e4      	CPI  R30,LOW(0x4)
009180 e0a0      	LDI  R26,HIGH(0x4)
009181 07fa      	CPC  R31,R26
009182 f4c9      	BRNE _0x2C020B
009183 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
009184 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
009185 940e c206 	CALL SUBOPT_0xF8
009187 940e bee6 	CALL SUBOPT_0x77
009189 940e a124 	CALL _memset
                 ; 0016 0400                             r2ecpy(uPwd,(unsigned char *) newPwd,sizeof(userPwd));
00918b 940e cfeb 	CALL SUBOPT_0x2FB
00918d e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
00918e e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00918f 940e cb7b 	CALL SUBOPT_0x27C
009191 d607      	RCALL _r2ecpy
                 ; 0016 0401                             currentPage = P_FINISH;
009192 e2e4      	LDI  R30,LOW(36)
009193 940e ccf4 	CALL SUBOPT_0x2A6
                 ; 0016 0402                             tmpNextPage = P_MTNC_MENU;
                 ; 0016 0403                             tmpPrevPage = P_RESET_CONFIRM;
009195 e2e0      	LDI  R30,LOW(32)
009196 940e cf7b 	CALL SUBOPT_0x2E8
                 ; 0016 0404                             cursor      = 0;
                 ; 0016 0405                             printOLED("FI");
009198 940e cf12 	CALL SUBOPT_0x2DC
00919a 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 0406                             break;
                 ; 0016 0407         }
                 _0x2C020B:
                 ; 0016 0408     }
                 ; 0016 0409     else if ( currentPage == P_ENTER_U_PASS )
00919c c24f      	RJMP _0x2C0210
                 _0x2C0208:
00919d 91a0 14df 	LDS  R26,_currentPage
00919f 32a1      	CPI  R26,LOW(0x21)
0091a0 f011      	BREQ PC+3
0091a1 940c 927e 	JMP _0x2C0211
                 ; 0016 040A     {
                 ; 0016 040B         switch(key){
0091a3 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 040C         case KEY_MODE   :   switch(tmpPrevPage){
0091a5 f569      	BRNE _0x2C0215
0091a6 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
0091a8 e0f0      	LDI  R31,0
                 ; 0016 040D                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
0091a9 30e2      	CPI  R30,LOW(0x2)
0091aa e0a0      	LDI  R26,HIGH(0x2)
0091ab 07fa      	CPC  R31,R26
0091ac f431      	BRNE _0x2C0219
0091ad e0e2      	LDI  R30,LOW(2)
0091ae 940e ceb4 	CALL SUBOPT_0x2CD
0091b0 940e cec0 	CALL SUBOPT_0x2CF
0091b2 c013      	RJMP _0x2C02CD
                 ; 0016 040E                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0219:
0091b3 30ee      	CPI  R30,LOW(0xE)
0091b4 e0a0      	LDI  R26,HIGH(0xE)
0091b5 07fa      	CPC  R31,R26
0091b6 f431      	BRNE _0x2C021A
0091b7 e0ee      	LDI  R30,LOW(14)
0091b8 940e ceb4 	CALL SUBOPT_0x2CD
0091ba 940e d082 	CALL SUBOPT_0x313
0091bc c009      	RJMP _0x2C02CD
                 ; 0016 040F                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C021A:
0091bd 31e1      	CPI  R30,LOW(0x11)
0091be e0a0      	LDI  R26,HIGH(0x11)
0091bf 07fa      	CPC  R31,R26
0091c0 f459      	BRNE _0x2C0218
0091c1 e1e1      	LDI  R30,LOW(17)
0091c2 940e ceb4 	CALL SUBOPT_0x2CD
0091c4 940e d087 	CALL SUBOPT_0x314
                 _0x2C02CD:
0091c6 940e da29 	CALL __PUTPARD1
0091c8 940e cfa0 	CALL SUBOPT_0x2EE
0091ca 940e cada 	CALL SUBOPT_0x263
                 ; 0016 0410                             }
                 _0x2C0218:
                 ; 0016 0411                             // --- clear entered password
                 ; 0016 0412                             memset(entPwd,0xFF,sizeof(entPwd));                                                             break;
0091cc 940e d08c 	CALL SUBOPT_0x315
0091ce 940e cfe7 	CALL SUBOPT_0x2FA
0091d0 940e a124 	CALL _memset
0091d2 c0aa      	RJMP _0x2C0214
                 ; 0016 0413         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0215:
0091d3 30e2      	CPI  R30,LOW(0x2)
0091d4 e0a0      	LDI  R26,HIGH(0x2)
0091d5 07fa      	CPC  R31,R26
0091d6 f481      	BRNE _0x2C021C
0091d7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0091d9 30a4      	CPI  R26,LOW(0x4)
0091da f414      	BRGE _0x2C021D
0091db 940e cfba 	CALL SUBOPT_0x2F2
                 ; 0016 0414                             if(++cursor > 4){   cursor  = 0;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C021D:
0091dd 940e ccbb 	CALL SUBOPT_0x2A1
0091df 30a5      	CPI  R26,LOW(0x5)
0091e0 f01c      	BRLT _0x2C021E
0091e1 e0e0      	LDI  R30,LOW(0)
0091e2 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C021E:
0091e4 940e cfbf 	CALL SUBOPT_0x2F3
0091e6 c096      	RJMP _0x2C0214
                 ; 0016 0415         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C021C:
0091e7 30e3      	CPI  R30,LOW(0x3)
0091e8 e0a0      	LDI  R26,HIGH(0x3)
0091e9 07fa      	CPC  R31,R26
0091ea f479      	BRNE _0x2C021F
0091eb 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0091ed 30a4      	CPI  R26,LOW(0x4)
0091ee f414      	BRGE _0x2C0220
0091ef 940e cfba 	CALL SUBOPT_0x2F2
                 ; 0016 0416                             if(--cursor < 0){   cursor  = 4;                }   printOLED("PA%1d",cursor);                  break;
                 _0x2C0220:
0091f1 940e cca7 	CALL SUBOPT_0x29F
0091f3 f41c      	BRGE _0x2C0221
0091f4 e0e4      	LDI  R30,LOW(4)
0091f5 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C0221:
0091f7 940e cfbf 	CALL SUBOPT_0x2F3
0091f9 c083      	RJMP _0x2C0214
                 ; 0016 0417         case KEY_OK     :   if(cursor == 4){
                 _0x2C021F:
0091fa 30e4      	CPI  R30,LOW(0x4)
0091fb e0a0      	LDI  R26,HIGH(0x4)
0091fc 07fa      	CPC  R31,R26
0091fd f011      	BREQ PC+3
0091fe 940c 927d 	JMP _0x2C0214
009200 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009202 30a4      	CPI  R26,LOW(0x4)
009203 f011      	BREQ PC+3
009204 940c 9268 	JMP _0x2C0223
                 ; 0016 0418 
                 ; 0016 0419                                 // -- verifyPassword -- //
                 ; 0016 041A                                 if(recmp((unsigned char *) entPwd,uPwd,sizeof(entPwd)) != 0){
009206 940e d08c 	CALL SUBOPT_0x315
009208 940e cd75 	CALL SUBOPT_0x2B8
00920a 940e cb7b 	CALL SUBOPT_0x27C
00920c d59f      	RCALL _recmp
00920d 9730      	SBIW R30,0
00920e f061      	BREQ _0x2C0224
                 ; 0016 041B                                     currentPage = P_WRONG_PASS;  cursor = 0;    printOLED("WP");
00920f e2e3      	LDI  R30,LOW(35)
009210 940e ccd4 	CALL SUBOPT_0x2A3
009212 940e d091 	CALL SUBOPT_0x316
                 ; 0016 041C                                     memset(entPwd,0xFF,sizeof(entPwd));
009214 940e d08c 	CALL SUBOPT_0x315
009216 940e cfe7 	CALL SUBOPT_0x2FA
009218 940e a124 	CALL _memset
                 ; 0016 041D                                     break;
00921a c062      	RJMP _0x2C0214
                 ; 0016 041E                                 }
                 ; 0016 041F 
                 ; 0016 0420                                 // -- else, allow access -- //
                 ; 0016 0421                                 switch(tmpNextPage){
                 _0x2C0224:
00921b 940e d096 	CALL SUBOPT_0x317
                 ; 0016 0422                                 case P_DEV_S_MENU   : currentPage = P_DEV_S_MENU;   cursor  = 0;    printOLED("M6%1d",cursor);  break;
00921d f431      	BRNE _0x2C0228
00921e e0e7      	LDI  R30,LOW(7)
00921f 940e ccd4 	CALL SUBOPT_0x2A3
009221 940e cee6 	CALL SUBOPT_0x2D5
009223 c043      	RJMP _0x2C0227
                 ; 0016 0423                                 case P_PRB_S        : currentPage = P_PRB_S;        cursor  = 0;    printOLED("PS");
                 _0x2C0228:
009224 31e0      	CPI  R30,LOW(0x10)
009225 e0a0      	LDI  R26,HIGH(0x10)
009226 07fa      	CPC  R31,R26
009227 f521      	BRNE _0x2C0229
009228 e1e0      	LDI  R30,LOW(16)
009229 940e ccd4 	CALL SUBOPT_0x2A3
                +
00922b e0ec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 988 ) )
00922c e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 988 ) )
00922d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 988 ) )
00922e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 988 ) )
                 	__POINTD1FN _0x2C0000,988
00922f 940e cea8 	CALL SUBOPT_0x2CB
                 ; 0016 0424                                                       for(i=0;i<MAX_SENS_CHANNEL;i++){
                +
009231 e000     +LDI R16 , LOW ( 0 )
009232 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C022B:
                +
009233 3005     +CPI R16 , LOW ( 5 )
009234 e0e0     +LDI R30 , HIGH ( 5 )
009235 071e     +CPC R17 , R30
                 	__CPWRN 16,17,5
009236 f4a4      	BRGE _0x2C022C
                 ; 0016 0425                                                         prbEn[i]  = operating_config.sensorEnable[i];
009237 01d8      	MOVW R26,R16
009238 5aa0      	SUBI R26,LOW(-_prbEn_S0160000000)
009239 4eb5      	SBCI R27,HIGH(-_prbEn_S0160000000)
00923a 940e cd5b 	CALL SUBOPT_0x2B4
00923c 81e0      	LD   R30,Z
00923d 940e cf98 	CALL SUBOPT_0x2ED
                 ; 0016 0426                                                         printOLED("ED%1d%1d",i,prbEn[i]);
00923f 01f8      	MOVW R30,R16
009240 940e cb08 	CALL SUBOPT_0x269
009242 e6a0      	LDI  R26,LOW(_prbEn_S0160000000)
009243 e1ba      	LDI  R27,HIGH(_prbEn_S0160000000)
009244 940e cee1 	CALL SUBOPT_0x2D4
009246 940e cac8 	CALL SUBOPT_0x25F
                 ; 0016 0427                                                       }
                +
009248 5f0f     +SUBI R16 , LOW ( - 1 )
009249 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00924a cfe8      	RJMP _0x2C022B
                 _0x2C022C:
                 ; 0016 0428                                                       break;
00924b c01b      	RJMP _0x2C0227
                 ; 0016 0429                                 case P_PASS_NEW     : currentPage = P_PASS_NEW;
                 _0x2C0229:
00924c 31e3      	CPI  R30,LOW(0x13)
00924d e0a0      	LDI  R26,HIGH(0x13)
00924e 07fa      	CPC  R31,R26
00924f f471      	BRNE _0x2C022E
009250 e1e3      	LDI  R30,LOW(19)
009251 93e0 14df 	STS  _currentPage,R30
                 ; 0016 042A                                                       memset(newPwd,0xFF,sizeof(newPwd));
009253 940e cfe2 	CALL SUBOPT_0x2F9
009255 940e cfe7 	CALL SUBOPT_0x2FA
009257 940e cd04 	CALL SUBOPT_0x2A8
                 ; 0016 042B                                                       cursor  = 0;
                 ; 0016 042C                                                       printOLED("P4");
                +
009259 e0ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 991 ) )
00925a e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 991 ) )
00925b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 991 ) )
00925c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 991 ) )
                 	__POINTD1FN _0x2C0000,991
00925d c005      	RJMP _0x2C02CE
                 ; 0016 042D                                                       break;
                 ; 0016 042E                                 default             : // -- Exit -- should not occur
                 _0x2C022E:
                 ; 0016 042F                                                       currentPage = P_MONITOR;
00925e e0e0      	LDI  R30,LOW(0)
00925f 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0430                                                       cursor      = 0;
                 ; 0016 0431                                                       printOLED("M0");
009261 940e cd0a 	CALL SUBOPT_0x2A9
                 _0x2C02CE:
009263 940e da29 	CALL __PUTPARD1
009265 940e cb03 	CALL SUBOPT_0x268
                 ; 0016 0432                                                       break;
                 ; 0016 0433                                 }
                 _0x2C0227:
                 ; 0016 0434                             }
                 ; 0016 0435                             else if(cursor < 4){
009267 c015      	RJMP _0x2C022F
                 _0x2C0223:
009268 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00926a 30a4      	CPI  R26,LOW(0x4)
00926b f48c      	BRGE _0x2C0230
                 ; 0016 0436                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
00926c 940e cf8d 	CALL SUBOPT_0x2EB
00926e 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
00926f 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
009270 940e cfcc 	CALL SUBOPT_0x2F5
009272 f024      	BRLT _0x2C0231
009273 940e d09d 	CALL SUBOPT_0x318
009275 e0a0      	LDI  R26,LOW(0)
009276 83a0      	STD  Z+0,R26
                 ; 0016 0437                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0231:
009277 940e cfd7 	CALL SUBOPT_0x2F7
009279 940e d09d 	CALL SUBOPT_0x318
00927b 940e cfde 	CALL SUBOPT_0x2F8
                 ; 0016 0438                             }
                 ; 0016 0439             break;
                 _0x2C0230:
                 _0x2C022F:
                 ; 0016 043A         }
                 _0x2C0214:
                 ; 0016 043B     }
                 ; 0016 043C     else if ( currentPage == P_ENTER_M_PASS )
00927d c16e      	RJMP _0x2C0232
                 _0x2C0211:
00927e 91a0 14df 	LDS  R26,_currentPage
009280 32a2      	CPI  R26,LOW(0x22)
009281 f011      	BREQ PC+3
009282 940c 92f9 	JMP _0x2C0233
                 ; 0016 043D     {
                 ; 0016 043E         switch(key){
009284 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 043F         case KEY_MODE   :   currentPage = P_MAIN_MENU;      cursor  = 3;            printOLED("M1%1d",cursor);  break;
009286 f419      	BRNE _0x2C0237
009287 940e cffa 	CALL SUBOPT_0x2FD
009289 c06e      	RJMP _0x2C0236
                 ; 0016 0440         case KEY_UP     :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0237:
00928a 30e2      	CPI  R30,LOW(0x2)
00928b e0a0      	LDI  R26,HIGH(0x2)
00928c 07fa      	CPC  R31,R26
00928d f481      	BRNE _0x2C0238
00928e 91a0 1a1f 	LDS  R26,_cursor_S0160000000
009290 30a4      	CPI  R26,LOW(0x4)
009291 f414      	BRGE _0x2C0239
009292 940e cfba 	CALL SUBOPT_0x2F2
                 ; 0016 0441                             if(++cursor > 4){   cursor  = 0;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C0239:
009294 940e ccbb 	CALL SUBOPT_0x2A1
009296 30a5      	CPI  R26,LOW(0x5)
009297 f01c      	BRLT _0x2C023A
009298 e0e0      	LDI  R30,LOW(0)
009299 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023A:
00929b 940e cfbf 	CALL SUBOPT_0x2F3
00929d c05a      	RJMP _0x2C0236
                 ; 0016 0442         case KEY_DOWN   :   if(cursor < 4){     printOLED("PD%1d*",cursor); }
                 _0x2C0238:
00929e 30e3      	CPI  R30,LOW(0x3)
00929f e0a0      	LDI  R26,HIGH(0x3)
0092a0 07fa      	CPC  R31,R26
0092a1 f479      	BRNE _0x2C023B
0092a2 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092a4 30a4      	CPI  R26,LOW(0x4)
0092a5 f414      	BRGE _0x2C023C
0092a6 940e cfba 	CALL SUBOPT_0x2F2
                 ; 0016 0443                             if(--cursor < 0){   cursor  = 4;                }       printOLED("PA%1d",cursor);  break;
                 _0x2C023C:
0092a8 940e cca7 	CALL SUBOPT_0x29F
0092aa f41c      	BRGE _0x2C023D
0092ab e0e4      	LDI  R30,LOW(4)
0092ac 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 _0x2C023D:
0092ae 940e cfbf 	CALL SUBOPT_0x2F3
0092b0 c047      	RJMP _0x2C0236
                 ; 0016 0444         case KEY_OK     :   if(cursor == 4){
                 _0x2C023B:
0092b1 30e4      	CPI  R30,LOW(0x4)
0092b2 e0a0      	LDI  R26,HIGH(0x4)
0092b3 07fa      	CPC  R31,R26
0092b4 f011      	BREQ PC+3
0092b5 940c 92f8 	JMP _0x2C0236
0092b7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092b9 30a4      	CPI  R26,LOW(0x4)
0092ba f541      	BRNE _0x2C023F
                 ; 0016 0445 
                 ; 0016 0446                                 // -- verifyPassword -- //
                 ; 0016 0447                                 if(recmp((unsigned char *) entPwd,sPwd,sizeof(entPwd)) != 0){
0092bb 940e d08c 	CALL SUBOPT_0x315
                +
0092bd 01fe     +MOVW R30 , R28
0092be 5be0     +SUBI R30 , LOW ( - 80 )
0092bf 4fff     +SBCI R31 , HIGH ( - 80 )
0092c0 9001     +LD R0 , Z +
0092c1 81f0     +LD R31 , Z
0092c2 2de0     +MOV R30 , R0
                 	__GETW1SX 80
0092c3 940e cb7b 	CALL SUBOPT_0x27C
0092c5 d4e6      	RCALL _recmp
0092c6 9730      	SBIW R30,0
0092c7 f079      	BREQ _0x2C0240
                 ; 0016 0448                                     tmpPrevPage = P_MAIN_MENU;
0092c8 e0e1      	LDI  R30,LOW(1)
0092c9 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
                 ; 0016 0449                                     currentPage = P_WRONG_PASS; cursor  = 0;    printOLED("WP");
0092cb e2e3      	LDI  R30,LOW(35)
0092cc 940e ccd4 	CALL SUBOPT_0x2A3
0092ce 940e d091 	CALL SUBOPT_0x316
                 ; 0016 044A                                     memset(entPwd,0xFF,sizeof(entPwd));
0092d0 940e d08c 	CALL SUBOPT_0x315
0092d2 940e cfe7 	CALL SUBOPT_0x2FA
0092d4 940e a124 	CALL _memset
                 ; 0016 044B                                     break;
0092d6 c021      	RJMP _0x2C0236
                 ; 0016 044C                                 }
                 ; 0016 044D 
                 ; 0016 044E                                 // -- else, allow access -- //
                 ; 0016 044F                                 currentPage = P_MTNC_MENU;     cursor  = 0;     printOLED("M7%1d",cursor);
                 _0x2C0240:
0092d7 e1e5      	LDI  R30,LOW(21)
0092d8 940e ccd4 	CALL SUBOPT_0x2A3
0092da 940e d01d 	CALL SUBOPT_0x302
                 ; 0016 0450                                 memset(entPwd,0xFF,sizeof(entPwd));
0092dc 940e d08c 	CALL SUBOPT_0x315
0092de 940e cfe7 	CALL SUBOPT_0x2FA
0092e0 940e a124 	CALL _memset
                 ; 0016 0451                                 break;
0092e2 c015      	RJMP _0x2C0236
                 ; 0016 0452                             }
                 ; 0016 0453                             else if(cursor < 4){
                 _0x2C023F:
0092e3 91a0 1a1f 	LDS  R26,_cursor_S0160000000
0092e5 30a4      	CPI  R26,LOW(0x4)
0092e6 f48c      	BRGE _0x2C0242
                 ; 0016 0454                                 if(++entPwd[cursor] >9) entPwd[cursor] = 0;
0092e7 940e cf8d 	CALL SUBOPT_0x2EB
0092e9 5dae      	SUBI R26,LOW(-_entPwd_S0160000000)
0092ea 4eb5      	SBCI R27,HIGH(-_entPwd_S0160000000)
0092eb 940e cfcc 	CALL SUBOPT_0x2F5
0092ed f024      	BRLT _0x2C0243
0092ee 940e d09d 	CALL SUBOPT_0x318
0092f0 e0a0      	LDI  R26,LOW(0)
0092f1 83a0      	STD  Z+0,R26
                 ; 0016 0455                                 printOLED("PD%1d%1d",cursor, entPwd[cursor]);
                 _0x2C0243:
0092f2 940e cfd7 	CALL SUBOPT_0x2F7
0092f4 940e d09d 	CALL SUBOPT_0x318
0092f6 940e cfde 	CALL SUBOPT_0x2F8
                 ; 0016 0456                             }
                 ; 0016 0457             break;
                 _0x2C0242:
                 ; 0016 0458 
                 ; 0016 0459 
                 ; 0016 045A 
                 ; 0016 045B             break;
                 ; 0016 045C         }
                 _0x2C0236:
                 ; 0016 045D     }
                 ; 0016 045E     else if ( currentPage == P_WRONG_PASS )
0092f8 c0f3      	RJMP _0x2C0244
                 _0x2C0233:
0092f9 91a0 14df 	LDS  R26,_currentPage
0092fb 32a3      	CPI  R26,LOW(0x23)
0092fc f011      	BREQ PC+3
0092fd 940c 9343 	JMP _0x2C0245
                 ; 0016 045F     {
                 ; 0016 0460         switch(key){
0092ff 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0461         case KEY_MODE   :   /* no operation */                                                                              break;
009301 f409      	BRNE _0x2C0249
009302 c03f      	RJMP _0x2C0248
                 ; 0016 0462         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C0249:
009303 30e2      	CPI  R30,LOW(0x2)
009304 e0a0      	LDI  R26,HIGH(0x2)
009305 07fa      	CPC  R31,R26
009306 f1d9      	BREQ _0x2C0248
                 ; 0016 0463         case KEY_DOWN   :   /* no operation */                                                                              break;
009307 30e3      	CPI  R30,LOW(0x3)
009308 e0a0      	LDI  R26,HIGH(0x3)
009309 07fa      	CPC  R31,R26
00930a f1b9      	BREQ _0x2C0248
                 ; 0016 0464         case KEY_OK     :   switch(tmpPrevPage){
00930b 30e4      	CPI  R30,LOW(0x4)
00930c e0a0      	LDI  R26,HIGH(0x4)
00930d 07fa      	CPC  R31,R26
00930e f599      	BRNE _0x2C0248
00930f 91e0 1a21 	LDS  R30,_tmpPrevPage_S0160000000
009311 940e c88b 	CALL SUBOPT_0x209
                 ; 0016 0465                             case P_MAIN_MENU    : currentPage = P_MAIN_MENU;    cursor  = 3;    printOLED("M1%1d",cursor);  break;
009313 f459      	BRNE _0x2C0250
009314 e0e1      	LDI  R30,LOW(1)
009315 93e0 14df 	STS  _currentPage,R30
009317 e0e3      	LDI  R30,LOW(3)
009318 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00931a e3e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00931b e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00931c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00931d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00931e c01d      	RJMP _0x2C02CF
                 ; 0016 0466                             case P_DEV_MENU     : currentPage = P_DEV_MENU;     cursor  = 1;    printOLED("M2%1d",cursor);  break;
                 _0x2C0250:
00931f 30e2      	CPI  R30,LOW(0x2)
009320 e0a0      	LDI  R26,HIGH(0x2)
009321 07fa      	CPC  R31,R26
009322 f431      	BRNE _0x2C0251
009323 e0e2      	LDI  R30,LOW(2)
009324 940e ceb4 	CALL SUBOPT_0x2CD
009326 940e cec0 	CALL SUBOPT_0x2CF
009328 c013      	RJMP _0x2C02CF
                 ; 0016 0467                             case P_PRB_MENU     : currentPage = P_PRB_MENU;     cursor  = 1;    printOLED("M3%1d",cursor);  break;
                 _0x2C0251:
009329 30ee      	CPI  R30,LOW(0xE)
00932a e0a0      	LDI  R26,HIGH(0xE)
00932b 07fa      	CPC  R31,R26
00932c f431      	BRNE _0x2C0252
00932d e0ee      	LDI  R30,LOW(14)
00932e 940e ceb4 	CALL SUBOPT_0x2CD
009330 940e d082 	CALL SUBOPT_0x313
009332 c009      	RJMP _0x2C02CF
                 ; 0016 0468                             case P_MANAGE_MENU  : currentPage = P_MANAGE_MENU;  cursor  = 1;    printOLED("M4%1d",cursor);  break;
                 _0x2C0252:
009333 31e1      	CPI  R30,LOW(0x11)
009334 e0a0      	LDI  R26,HIGH(0x11)
009335 07fa      	CPC  R31,R26
009336 f459      	BRNE _0x2C024F
009337 e1e1      	LDI  R30,LOW(17)
009338 940e ceb4 	CALL SUBOPT_0x2CD
00933a 940e d087 	CALL SUBOPT_0x314
                 _0x2C02CF:
00933c 940e da29 	CALL __PUTPARD1
00933e 940e cfa0 	CALL SUBOPT_0x2EE
009340 940e cada 	CALL SUBOPT_0x263
                 ; 0016 0469                             }
                 _0x2C024F:
                 ; 0016 046A 
                 ; 0016 046B 
                 ; 0016 046C             break;
                 ; 0016 046D         }
                 _0x2C0248:
                 ; 0016 046E     }
                 ; 0016 046F     else if ((currentPage == P_FINISH) || (currentPage == P_FAILED) )
009342 c0a9      	RJMP _0x2C0254
                 _0x2C0245:
009343 91a0 14df 	LDS  R26,_currentPage
009345 32a4      	CPI  R26,LOW(0x24)
009346 f019      	BREQ _0x2C0256
009347 32a5      	CPI  R26,LOW(0x25)
009348 f009      	BREQ _0x2C0256
009349 c0a2      	RJMP _0x2C0255
                 _0x2C0256:
                 ; 0016 0470     {
                 ; 0016 0471         switch(key){
00934a 940e cca2 	CALL SUBOPT_0x29E
                 ; 0016 0472         case KEY_MODE   :   /* no operation */                                                                              break;
00934c f409      	BRNE _0x2C025B
00934d c09e      	RJMP _0x2C025A
                 ; 0016 0473         case KEY_UP     :   /* no operation */                                                                              break;
                 _0x2C025B:
00934e 30e2      	CPI  R30,LOW(0x2)
00934f e0a0      	LDI  R26,HIGH(0x2)
009350 07fa      	CPC  R31,R26
009351 f409      	BRNE _0x2C025C
009352 c099      	RJMP _0x2C025A
                 ; 0016 0474         case KEY_DOWN   :   /* no operation */                                                                              break;
                 _0x2C025C:
009353 30e3      	CPI  R30,LOW(0x3)
009354 e0a0      	LDI  R26,HIGH(0x3)
009355 07fa      	CPC  R31,R26
009356 f409      	BRNE _0x2C025D
009357 c094      	RJMP _0x2C025A
                 ; 0016 0475         case KEY_OK     :   switch(tmpNextPage){
                 _0x2C025D:
009358 30e4      	CPI  R30,LOW(0x4)
009359 e0a0      	LDI  R26,HIGH(0x4)
00935a 07fa      	CPC  R31,R26
00935b f011      	BREQ PC+3
00935c 940c 93ec 	JMP _0x2C025A
00935e 940e d096 	CALL SUBOPT_0x317
                 ; 0016 0476                             case P_DEV_S_MENU       :   currentPage = P_DEV_S_MENU;
009360 f499      	BRNE _0x2C0262
009361 e0e7      	LDI  R30,LOW(7)
009362 940e d0a3 	CALL SUBOPT_0x319
                 ; 0016 0477                                                         if(       tmpPrevPage == P_DEV_S_OPER){       cursor  = 0;    }
009364 30a8      	CPI  R26,LOW(0x8)
009365 f411      	BRNE _0x2C0263
009366 e0e0      	LDI  R30,LOW(0)
009367 c005      	RJMP _0x2C02D0
                 ; 0016 0478                                                         else if(  tmpPrevPage == P_DEV_S_CONFIRM){    cursor  = 1;    }
                 _0x2C0263:
009368 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00936a 30ad      	CPI  R26,LOW(0xD)
00936b f419      	BRNE _0x2C0265
00936c e0e1      	LDI  R30,LOW(1)
                 _0x2C02D0:
00936d 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0479                                                         printOLED("M6%1d",cursor);                                                  break;
                 _0x2C0265:
                +
00936f e5ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
009370 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
009371 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
009372 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
009373 c06e      	RJMP _0x2C02D1
                 ; 0016 047A                             case P_PRB_MENU         :   currentPage = P_PRB_MENU;     cursor = 1;     printOLED("M3%1d",cursor);    break;
                 _0x2C0262:
009374 30ee      	CPI  R30,LOW(0xE)
009375 e0a0      	LDI  R26,HIGH(0xE)
009376 07fa      	CPC  R31,R26
009377 f431      	BRNE _0x2C0266
009378 e0ee      	LDI  R30,LOW(14)
009379 940e ceb4 	CALL SUBOPT_0x2CD
00937b 940e d082 	CALL SUBOPT_0x313
00937d c064      	RJMP _0x2C02D1
                 ; 0016 047B                             case P_MANAGE_MENU      :   currentPage = P_MANAGE_MENU;
                 _0x2C0266:
00937e 31e1      	CPI  R30,LOW(0x11)
00937f e0a0      	LDI  R26,HIGH(0x11)
009380 07fa      	CPC  R31,R26
009381 f489      	BRNE _0x2C0267
009382 e1e1      	LDI  R30,LOW(17)
009383 940e d0a3 	CALL SUBOPT_0x319
                 ; 0016 047C                                                         if(       tmpPrevPage == P_MUTE_MENU){        cursor  = 0;    }
009385 31a2      	CPI  R26,LOW(0x12)
009386 f411      	BRNE _0x2C0268
009387 e0e0      	LDI  R30,LOW(0)
009388 c005      	RJMP _0x2C02D2
                 ; 0016 047D                                                         else if(  tmpPrevPage == P_PASS_CONFIRM){     cursor  = 1;    }
                 _0x2C0268:
009389 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00938b 31a4      	CPI  R26,LOW(0x14)
00938c f419      	BRNE _0x2C026A
00938d e0e1      	LDI  R30,LOW(1)
                 _0x2C02D2:
00938e 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 047E                                                         printOLED("M4%1d",cursor);                                                  break;
                 _0x2C026A:
009390 940e d087 	CALL SUBOPT_0x314
009392 c04f      	RJMP _0x2C02D1
                 ; 0016 047F                             case P_MTNC_MENU        :   currentPage = P_MTNC_MENU;
                 _0x2C0267:
009393 31e5      	CPI  R30,LOW(0x15)
009394 e0a0      	LDI  R26,HIGH(0x15)
009395 07fa      	CPC  R31,R26
009396 f4c9      	BRNE _0x2C026B
009397 e1e5      	LDI  R30,LOW(21)
009398 940e d0a3 	CALL SUBOPT_0x319
                 ; 0016 0480                                                         if(       tmpPrevPage == P_SET_VREF){         cursor  = 0;    }
00939a 31a6      	CPI  R26,LOW(0x16)
00939b f411      	BRNE _0x2C026C
00939c e0e0      	LDI  R30,LOW(0)
00939d c00b      	RJMP _0x2C02D3
                 ; 0016 0481                                                         else if(  tmpPrevPage == P_CAL2_MENU){        cursor  = 2;    }
                 _0x2C026C:
00939e 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093a0 31ab      	CPI  R26,LOW(0x1B)
0093a1 f411      	BRNE _0x2C026E
0093a2 e0e2      	LDI  R30,LOW(2)
0093a3 c005      	RJMP _0x2C02D3
                 ; 0016 0482                                                         else if(  tmpPrevPage == P_RESET_CONFIRM){    cursor  = 3;    }
                 _0x2C026E:
0093a4 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093a6 32a0      	CPI  R26,LOW(0x20)
0093a7 f419      	BRNE _0x2C0270
0093a8 e0e3      	LDI  R30,LOW(3)
                 _0x2C02D3:
0093a9 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 0483                                                         printOLED("M7%1d",cursor);                                                  break;
                 _0x2C0270:
                +
0093ab ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
0093ac e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
0093ad e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
0093ae e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
0093af c032      	RJMP _0x2C02D1
                 ; 0016 0484                             case P_CAL1_SEL_CAL_PRB :   currentPage = P_CAL1_SEL_CAL_PRB;
                 _0x2C026B:
0093b0 31e8      	CPI  R30,LOW(0x18)
0093b1 e0a0      	LDI  R26,HIGH(0x18)
0093b2 07fa      	CPC  R31,R26
0093b3 f461      	BRNE _0x2C0271
0093b4 e1e8      	LDI  R30,LOW(24)
0093b5 940e ccd4 	CALL SUBOPT_0x2A3
                 ; 0016 0485                                                         cursor      = 0;
                 ; 0016 0486                                                         printOLED("S2%1d",prb2+1);                                                  break;
0093b7 940e d012 	CALL SUBOPT_0x300
0093b9 91e0 1a6a 	LDS  R30,_prb2_S0160000000
0093bb e0f0      	LDI  R31,0
0093bc 9631      	ADIW R30,1
0093bd 940e d919 	CALL __CWD1
0093bf c028      	RJMP _0x2C02D4
                 ; 0016 0487                             case P_CAL2_MENU        :   currentPage = P_CAL2_MENU;
                 _0x2C0271:
0093c0 31eb      	CPI  R30,LOW(0x1B)
0093c1 e0a0      	LDI  R26,HIGH(0x1B)
0093c2 07fa      	CPC  R31,R26
0093c3 f541      	BRNE _0x2C0261
0093c4 e1eb      	LDI  R30,LOW(27)
0093c5 940e d0a3 	CALL SUBOPT_0x319
                 ; 0016 0488                                                         if(       tmpPrevPage == P_CAL2_SPT1){        cursor  = 0;    }
0093c7 31ac      	CPI  R26,LOW(0x1C)
0093c8 f411      	BRNE _0x2C0273
0093c9 e0e0      	LDI  R30,LOW(0)
0093ca c011      	RJMP _0x2C02D5
                 ; 0016 0489                                                         else if(  tmpPrevPage == P_CAL2_SPT2){        cursor  = 1;    }
                 _0x2C0273:
0093cb 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093cd 31ad      	CPI  R26,LOW(0x1D)
0093ce f411      	BRNE _0x2C0275
0093cf e0e1      	LDI  R30,LOW(1)
0093d0 c00b      	RJMP _0x2C02D5
                 ; 0016 048A                                                         else if(  tmpPrevPage == P_CAL2_SPT3){        cursor  = 2;    }
                 _0x2C0275:
0093d1 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093d3 31ae      	CPI  R26,LOW(0x1E)
0093d4 f411      	BRNE _0x2C0277
0093d5 e0e2      	LDI  R30,LOW(2)
0093d6 c005      	RJMP _0x2C02D5
                 ; 0016 048B                                                         else if(  tmpPrevPage == P_CAL2_CONFIRM){     cursor  = 3;    }
                 _0x2C0277:
0093d7 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
0093d9 31af      	CPI  R26,LOW(0x1F)
0093da f419      	BRNE _0x2C0279
0093db e0e3      	LDI  R30,LOW(3)
                 _0x2C02D5:
0093dc 93e0 1a1f 	STS  _cursor_S0160000000,R30
                 ; 0016 048C                                                         printOLED("M8%1d",cursor);                                                  break;
                 _0x2C0279:
                +
0093de ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
0093df e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
0093e0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
0093e1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
                 _0x2C02D1:
0093e2 940e da29 	CALL __PUTPARD1
0093e4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
0093e6 940e d913 	CALL __CBD1
                 _0x2C02D4:
0093e8 940e da29 	CALL __PUTPARD1
0093ea 940e cada 	CALL SUBOPT_0x263
                 ; 0016 048D                             }
                 _0x2C0261:
                 ; 0016 048E 
                 ; 0016 048F 
                 ; 0016 0490             break;
                 ; 0016 0491         }
                 _0x2C025A:
                 ; 0016 0492     }
                 ; 0016 0493 
                 ; 0016 0494     return;
                 _0x2C0255:
                 _0x2C0254:
                 _0x2C0244:
                 _0x2C0232:
                 _0x2C0210:
                 _0x2C0207:
                 _0x2C01FC:
                 _0x2C01DA:
                 _0x2C01C2:
                 _0x2C01B2:
                 _0x2C01A7:
                 _0x2C0197:
                 _0x2C0187:
                 _0x2C0177:
                 _0x2C0160:
                 _0x2C014D:
                 _0x2C013C:
                 _0x2C012D:
                 _0x2C011E:
                 _0x2C010A:
                 _0x2C00FF:
                 _0x2C00F0:
                 _0x2C00E6:
                 _0x2C00D3:
                 _0x2C00BD:
                 _0x2C00A7:
                 _0x2C0091:
                 _0x2C007E:
                 _0x2C006C:
                 _0x2C0062:
                 _0x2C0058:
                 _0x2C004E:
                 _0x2C0028:
                 _0x2C0019:
                 _0x2C0006:
0093ec 940e daa0 	CALL __LOADLOCR6
0093ee 96ef      	ADIW R28,63
0093ef 9668      	ADIW R28,24
0093f0 9508      	RET
                 ; 0016 0495 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Service Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void showProbeConfig(int id)
                 ; 0016 049D {
                 _showProbeConfig:
                 ; 0016 049E     int         res         = 0;
                 ; 0016 049F     int         sampling    = 0;
                 ; 0016 04A0     signed char val[4]      = {0,0,0,0};
                 ; 0016 04A1     char        str1[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A2     char        str2[8]     = {0,0,0,0,0,0,0,0};
                 ; 0016 04A3 
                 ; 0016 04A4 
                 ; 0016 04A5     res = get_current_sampling(sensor_config[id].samplingRate,&val[0]);
0093f1 93ba      	ST   -Y,R27
0093f2 93aa      	ST   -Y,R26
0093f3 9764      	SBIW R28,20
0093f4 e184      	LDI  R24,20
0093f5 e0a0      	LDI  R26,LOW(0)
0093f6 e0b0      	LDI  R27,HIGH(0)
0093f7 e1ec      	LDI  R30,LOW(_0x2C027A*2)
0093f8 e5fd      	LDI  R31,HIGH(_0x2C027A*2)
0093f9 e060      	LDI  R22,BYTE3(_0x2C027A*2)
0093fa 940e daa7 	CALL __INITLOCB
0093fc 940e ca6b 	CALL SUBOPT_0x250
                 ;	id -> Y+24
                 ;	res -> R16,R17
                 ;	sampling -> R18,R19
                 ;	val -> Y+20
                 ;	str1 -> Y+12
                 ;	str2 -> Y+4
                +
0093fe e020     +LDI R18 , LOW ( 0 )
0093ff e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
009400 8da8      	LDD  R26,Y+24
009401 8db9      	LDD  R27,Y+24+1
009402 e1ed      	LDI  R30,LOW(29)
009403 940e d95a 	CALL __MULB1W2U
009405 54e2      	SUBI R30,LOW(-_sensor_config)
009406 4efe      	SBCI R31,HIGH(-_sensor_config)
009407 01df      	MOVW R26,R30
009408 940e d0a8 	CALL SUBOPT_0x31A
00940a 01de      	MOVW R26,R28
00940b 9656      	ADIW R26,22
00940c d0aa      	RCALL _get_current_sampling
00940d 018f      	MOVW R16,R30
                 ; 0016 04A6 
                 ; 0016 04A7     if(res < 0){
00940e 2311      	TST  R17
00940f f42a      	BRPL _0x2C027B
                 ; 0016 04A8         val[0] = 0;
009410 e0e0      	LDI  R30,LOW(0)
009411 8bec      	STD  Y+20,R30
                 ; 0016 04A9         val[1] = 0;
009412 8bed      	STD  Y+21,R30
                 ; 0016 04AA         val[2] = 0;
009413 8bee      	STD  Y+22,R30
                 ; 0016 04AB         val[3] = 0;
009414 8bef      	STD  Y+23,R30
                 ; 0016 04AC     }
                 ; 0016 04AD 
                 ; 0016 04AE     sampling = 0;
                 _0x2C027B:
                +
009415 e020     +LDI R18 , LOW ( 0 )
009416 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 ; 0016 04AF     sampling += val[0] * 100;
009417 89ac      	LDD  R26,Y+20
009418 e6e4      	LDI  R30,LOW(100)
009419 02ea      	MULS R30,R26
00941a 01f0      	MOVW R30,R0
                +
00941b 0f2e     +ADD R18 , R30
00941c 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B0     sampling += val[1] * 10;
00941d 89ad      	LDD  R26,Y+21
00941e e0ea      	LDI  R30,LOW(10)
00941f 02ea      	MULS R30,R26
009420 01f0      	MOVW R30,R0
                +
009421 0f2e     +ADD R18 , R30
009422 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B1     sampling += val[2];
009423 89ee      	LDD  R30,Y+22
009424 e0f0      	LDI  R31,0
009425 fde7      	SBRC R30,7
009426 efff      	SER  R31
                +
009427 0f2e     +ADD R18 , R30
009428 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
                 ; 0016 04B2 
                 ; 0016 04B3     memset(str1,'\0',sizeof(str1));
009429 940e be23 	CALL SUBOPT_0x5A
00942b e0e0      	LDI  R30,LOW(0)
00942c 93ea      	ST   -Y,R30
00942d 940e c78a 	CALL SUBOPT_0x1E0
00942f 940e a124 	CALL _memset
                 ; 0016 04B4     if( operating_config.sensorEnable[id]==0x01 ){  sprintf(str1,"[E]");        }
                +
009431 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
009432 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
009433 8da8      	LDD  R26,Y+24
009434 8db9      	LDD  R27,Y+24+1
009435 940e c8c7 	CALL SUBOPT_0x211
009437 f439      	BRNE _0x2C027C
009438 940e be23 	CALL SUBOPT_0x5A
                +
00943a e1e2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 994 ) )
00943b e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 994 ) )
00943c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 994 ) )
00943d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 994 ) )
                 	__POINTD1FN _0x2C0000,994
00943e c006      	RJMP _0x2C02D6
                 ; 0016 04B5     else{                                           sprintf(str1,"[D]");        }
                 _0x2C027C:
00943f 940e be23 	CALL SUBOPT_0x5A
                +
009441 e1e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 998 ) )
009442 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 998 ) )
009443 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 998 ) )
009444 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 998 ) )
                 	__POINTD1FN _0x2C0000,998
                 _0x2C02D6:
009445 940e da29 	CALL __PUTPARD1
009447 940e cd4d 	CALL SUBOPT_0x2B2
                 ; 0016 04B6 
                 ; 0016 04B7     memset(str2,'\0',sizeof(str2));
009449 01fe      	MOVW R30,R28
00944a 9634      	ADIW R30,4
00944b 940e c206 	CALL SUBOPT_0xF8
00944d 940e c78a 	CALL SUBOPT_0x1E0
00944f 940e a124 	CALL _memset
                 ; 0016 04B8     if( sensor_config[id].alarmEnable == 0x01   ){  sprintf(str2,"Enable");     }
009451 8da8      	LDD  R26,Y+24
009452 8db9      	LDD  R27,Y+24+1
009453 e1ed      	LDI  R30,LOW(29)
009454 940e d95a 	CALL __MULB1W2U
                +
009456 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
009457 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
009458 81a0      	LD   R26,Z
009459 30a1      	CPI  R26,LOW(0x1)
00945a f449      	BRNE _0x2C027E
00945b 01fe      	MOVW R30,R28
00945c 9634      	ADIW R30,4
00945d 93fa      	ST   -Y,R31
00945e 93ea      	ST   -Y,R30
                +
00945f e1ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1002 ) )
009460 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1002 ) )
009461 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1002 ) )
009462 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1002 ) )
                 	__POINTD1FN _0x2C0000,1002
009463 c008      	RJMP _0x2C02D7
                 ; 0016 04B9     else{                                           sprintf(str2,"Disable");    }
                 _0x2C027E:
009464 01fe      	MOVW R30,R28
009465 9634      	ADIW R30,4
009466 93fa      	ST   -Y,R31
009467 93ea      	ST   -Y,R30
                +
009468 e2e1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1009 ) )
009469 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1009 ) )
00946a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1009 ) )
00946b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1009 ) )
                 	__POINTD1FN _0x2C0000,1009
                 _0x2C02D7:
00946c 940e da29 	CALL __PUTPARD1
00946e 940e cd4d 	CALL SUBOPT_0x2B2
                 ; 0016 04BA 
                 ; 0016 04BB 
                 ; 0016 04BC     printDebug("<showProbeConfig> PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04BD                 id,val[3],sampling,
                 ; 0016 04BE                 str1,str2,
                 ; 0016 04BF                 sensor_config[id].lowerLimit,
                 ; 0016 04C0                 sensor_config[id].lowerDelay,
                 ; 0016 04C1                 sensor_config[id].lowerExtreme,
                 ; 0016 04C2                 sensor_config[id].upperLimit,
                 ; 0016 04C3                 sensor_config[id].upperDelay,
                 ; 0016 04C4                 sensor_config[id].upperExtreme);
                +
009470 e2e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1017 ) )
009471 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1017 ) )
009472 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1017 ) )
009473 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1017 ) )
                 	__POINTD1FN _0x2C0000,1017
009474 940e c1f3 	CALL SUBOPT_0xF4
009476 940e cb08 	CALL SUBOPT_0x269
009478 940e d0ad 	CALL SUBOPT_0x31B
00947a 01fe      	MOVW R30,R28
00947b 967c      	ADIW R30,28
00947c 940e bd18 	CALL SUBOPT_0x34
00947e 01fe      	MOVW R30,R28
00947f 9678      	ADIW R30,24
009480 940e bd18 	CALL SUBOPT_0x34
009482 940e d0b2 	CALL SUBOPT_0x31C
009484 940e d0bb 	CALL SUBOPT_0x31D
009486 940e d0c1 	CALL SUBOPT_0x31E
009488 940e d0cc 	CALL SUBOPT_0x31F
00948a 940e d0d5 	CALL SUBOPT_0x320
00948c 940e d0df 	CALL SUBOPT_0x321
00948e e28c      	LDI  R24,44
00948f 940e 9ad2 	CALL _printDebug
009491 96e0      	ADIW R28,48
                 ; 0016 04C5 
                 ; 0016 04C6     printOLED("PC%1d%1d%d,%s,%s,%.1f,%d,%.1f,%.1f,%d,%.1f",
                 ; 0016 04C7                 id,val[3],sampling,
                 ; 0016 04C8                 str1,str2,
                 ; 0016 04C9                 sensor_config[id].lowerLimit,
                 ; 0016 04CA                 sensor_config[id].lowerDelay,
                 ; 0016 04CB                 sensor_config[id].lowerExtreme,
                 ; 0016 04CC                 sensor_config[id].upperLimit,
                 ; 0016 04CD                 sensor_config[id].upperDelay,
                 ; 0016 04CE                 sensor_config[id].upperExtreme);
                +
009492 e3eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1035 ) )
009493 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1035 ) )
009494 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1035 ) )
009495 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1035 ) )
                 	__POINTD1FN _0x2C0000,1035
009496 940e c1f3 	CALL SUBOPT_0xF4
009498 940e cb08 	CALL SUBOPT_0x269
00949a 940e d0ad 	CALL SUBOPT_0x31B
00949c 01fe      	MOVW R30,R28
00949d 967c      	ADIW R30,28
00949e 940e bd18 	CALL SUBOPT_0x34
0094a0 01fe      	MOVW R30,R28
0094a1 9678      	ADIW R30,24
0094a2 940e bd18 	CALL SUBOPT_0x34
0094a4 940e d0b2 	CALL SUBOPT_0x31C
0094a6 940e d0bb 	CALL SUBOPT_0x31D
0094a8 940e d0c1 	CALL SUBOPT_0x31E
0094aa 940e d0cc 	CALL SUBOPT_0x31F
0094ac 940e d0d5 	CALL SUBOPT_0x320
0094ae 940e d0df 	CALL SUBOPT_0x321
0094b0 e28c      	LDI  R24,44
0094b1 940e 7c63 	CALL _printOLED
0094b3 96e0      	ADIW R28,48
                 ; 0016 04CF 
                 ; 0016 04D0 }
0094b4 940e daa2 	CALL __LOADLOCR4
0094b6 c159      	RJMP _0x20E0036
                 ;/*============================================================*/
                 ;int get_current_sampling(unsigned int period, signed char *val)
                 ; 0016 04D3 {
                 _get_current_sampling:
                 ; 0016 04D4     unsigned int min, min_c;
                 ; 0016 04D5     unsigned int hr, hr_c;
                 ; 0016 04D6 
                 ; 0016 04D7     printDebug("\r\n<get_current_sampling> real value (%l sec.)\r\n");
0094b7 940e d0ee 	CALL SUBOPT_0x322
                 ;	period -> Y+10
                 ;	*val -> Y+8
                 ;	min -> R16,R17
                 ;	min_c -> R18,R19
                 ;	hr -> R20,R21
                 ;	hr_c -> Y+6
                +
0094b9 e6e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1078 ) )
0094ba e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1078 ) )
0094bb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1078 ) )
0094bc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1078 ) )
                 	__POINTD1FN _0x2C0000,1078
0094bd 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 04D8     // -- display as hour unit -- //
                 ; 0016 04D9     hr   = period / 3600;
0094bf 85aa      	LDD  R26,Y+10
0094c0 85bb      	LDD  R27,Y+10+1
0094c1 e1e0      	LDI  R30,LOW(3600)
0094c2 e0fe      	LDI  R31,HIGH(3600)
0094c3 940e d978 	CALL __DIVW21U
0094c5 01af      	MOVW R20,R30
                 ; 0016 04DA     hr_c = period % 3600;
0094c6 85aa      	LDD  R26,Y+10
0094c7 85bb      	LDD  R27,Y+10+1
0094c8 e1e0      	LDI  R30,LOW(3600)
0094c9 e0fe      	LDI  R31,HIGH(3600)
0094ca 940e d9c1 	CALL __MODW21U
0094cc 83ee      	STD  Y+6,R30
0094cd 83ff      	STD  Y+6+1,R31
                 ; 0016 04DB     if((hr > 0) && (hr < 1000) && (hr_c == 0)){
0094ce 2400      	CLR  R0
0094cf 1604      	CP   R0,R20
0094d0 0605      	CPC  R0,R21
0094d1 f440      	BRSH _0x2C0281
                +
0094d2 3e48     +CPI R20 , LOW ( 1000 )
0094d3 e0e3     +LDI R30 , HIGH ( 1000 )
0094d4 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
0094d5 f420      	BRSH _0x2C0281
0094d6 81ae      	LDD  R26,Y+6
0094d7 81bf      	LDD  R27,Y+6+1
0094d8 9710      	SBIW R26,0
0094d9 f009      	BREQ _0x2C0282
                 _0x2C0281:
0094da c00b      	RJMP _0x2C0280
                 _0x2C0282:
                 ; 0016 04DC         printDebug("<get_current_sampling> %d hr.\r\n",hr);
                +
0094db e9e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1126 ) )
0094dc e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1126 ) )
0094dd e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1126 ) )
0094de e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1126 ) )
                 	__POINTD1FN _0x2C0000,1126
0094df 940e d0f4 	CALL SUBOPT_0x323
0094e1 940e bc2c 	CALL SUBOPT_0x12
                 ; 0016 04DD         val[0] = hr / 100;
0094e3 940e d0f9 	CALL SUBOPT_0x324
                 ; 0016 04DE         val[1] = (hr % 100) / 10;
                 ; 0016 04DF         val[2] = ((hr % 100) % 10);
                 ; 0016 04E0         val[3] = 2;
                 ; 0016 04E1         return 0;
0094e5 c0b8      	RJMP _0x20E0037
                 ; 0016 04E2     }
                 ; 0016 04E3 
                 ; 0016 04E4     // -- display as minute unit -- //
                 ; 0016 04E5     min   = period / 60;
                 _0x2C0280:
0094e6 85aa      	LDD  R26,Y+10
0094e7 85bb      	LDD  R27,Y+10+1
0094e8 e3ec      	LDI  R30,LOW(60)
0094e9 e0f0      	LDI  R31,HIGH(60)
0094ea 940e d978 	CALL __DIVW21U
0094ec 018f      	MOVW R16,R30
                 ; 0016 04E6     min_c = period % 60;
0094ed 85aa      	LDD  R26,Y+10
0094ee 85bb      	LDD  R27,Y+10+1
0094ef e3ec      	LDI  R30,LOW(60)
0094f0 e0f0      	LDI  R31,HIGH(60)
0094f1 940e d9c1 	CALL __MODW21U
0094f3 019f      	MOVW R18,R30
                 ; 0016 04E7     if((min > 0) && (min < 1000)  && (min_c == 0)){
0094f4 2400      	CLR  R0
0094f5 1600      	CP   R0,R16
0094f6 0601      	CPC  R0,R17
0094f7 f440      	BRSH _0x2C0284
                +
0094f8 3e08     +CPI R16 , LOW ( 1000 )
0094f9 e0e3     +LDI R30 , HIGH ( 1000 )
0094fa 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
0094fb f420      	BRSH _0x2C0284
0094fc 2400      	CLR  R0
0094fd 1602      	CP   R0,R18
0094fe 0603      	CPC  R0,R19
0094ff f009      	BREQ _0x2C0285
                 _0x2C0284:
009500 c00b      	RJMP _0x2C0283
                 _0x2C0285:
                 ; 0016 04E8         printDebug("<get_current_sampling> %d min.\r\n",min);
                +
009501 ebe6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1158 ) )
009502 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1158 ) )
009503 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1158 ) )
009504 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1158 ) )
                 	__POINTD1FN _0x2C0000,1158
009505 940e d125 	CALL SUBOPT_0x325
009507 940e bc2c 	CALL SUBOPT_0x12
                 ; 0016 04E9         val[0] = min / 100;
009509 940e d12a 	CALL SUBOPT_0x326
                 ; 0016 04EA         val[1] = (min % 100) / 10;
                 ; 0016 04EB         val[2] = ((min % 100) % 10);
                 ; 0016 04EC         val[3] = 1;
                 ; 0016 04ED         return 0;
00950b c092      	RJMP _0x20E0037
                 ; 0016 04EE     }
                 ; 0016 04EF 
                 ; 0016 04F0     // -- display as second unit -- //
                 ; 0016 04F1     if(period < 1000){           // show only 0 - 999
                 _0x2C0283:
00950c 85aa      	LDD  R26,Y+10
00950d 85bb      	LDD  R27,Y+10+1
00950e 3ea8      	CPI  R26,LOW(0x3E8)
00950f e0e3      	LDI  R30,HIGH(0x3E8)
009510 07be      	CPC  R27,R30
009511 f5a8      	BRSH _0x2C0286
                 ; 0016 04F2         printDebug("<get_current_sampling> %d sec.\r\n",period);
                +
009512 ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1191 ) )
009513 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1191 ) )
009514 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1191 ) )
009515 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1191 ) )
                 	__POINTD1FN _0x2C0000,1191
009516 940e da29 	CALL __PUTPARD1
009518 85ee      	LDD  R30,Y+14
009519 85ff      	LDD  R31,Y+14+1
00951a 940e bd18 	CALL SUBOPT_0x34
00951c 940e bc2c 	CALL SUBOPT_0x12
                 ; 0016 04F3         val[0] = period / 100;
00951e 940e d156 	CALL SUBOPT_0x327
009520 940e d978 	CALL __DIVW21U
009522 85a8      	LDD  R26,Y+8
009523 85b9      	LDD  R27,Y+8+1
009524 93ec      	ST   X,R30
                 ; 0016 04F4         val[1] = (period % 100) / 10;
009525 940e d156 	CALL SUBOPT_0x327
009527 940e d9c1 	CALL __MODW21U
009529 01df      	MOVW R26,R30
00952a e0ea      	LDI  R30,LOW(10)
00952b e0f0      	LDI  R31,HIGH(10)
00952c 940e d978 	CALL __DIVW21U
                +
00952e 85a8     +LDD R26 , Y + 8
00952f 85b9     +LDD R27 , Y + 8 + 1
009530 9611     +ADIW R26 , 1
009531 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
                 ; 0016 04F5         val[2] = ((period % 100) % 10);
009532 940e d156 	CALL SUBOPT_0x327
009534 940e d9c1 	CALL __MODW21U
009536 01df      	MOVW R26,R30
009537 e0ea      	LDI  R30,LOW(10)
009538 e0f0      	LDI  R31,HIGH(10)
009539 940e d9c1 	CALL __MODW21U
                +
00953b 85a8     +LDD R26 , Y + 8
00953c 85b9     +LDD R27 , Y + 8 + 1
00953d 9612     +ADIW R26 , 2
00953e 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
                 ; 0016 04F6         val[3] = 0;
00953f 85a8      	LDD  R26,Y+8
009540 85b9      	LDD  R27,Y+8+1
009541 9613      	ADIW R26,3
009542 e0e0      	LDI  R30,LOW(0)
009543 93ec      	ST   X,R30
                 ; 0016 04F7         return 0;
009544 e0e0      	LDI  R30,LOW(0)
009545 e0f0      	LDI  R31,HIGH(0)
009546 c057      	RJMP _0x20E0037
                 ; 0016 04F8     }
                 ; 0016 04F9 
                 ; 0016 04FA     if(min < 1000){
                 _0x2C0286:
                +
009547 3e08     +CPI R16 , LOW ( 1000 )
009548 e0e3     +LDI R30 , HIGH ( 1000 )
009549 071e     +CPC R17 , R30
                 	__CPWRN 16,17,1000
00954a f4d0      	BRSH _0x2C0287
                 ; 0016 04FB         printDebug("<get_current_sampling> %d min. %d sec. ",min,min_c);
                +
00954b efe8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1224 ) )
00954c e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1224 ) )
00954d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1224 ) )
00954e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1224 ) )
                 	__POINTD1FN _0x2C0000,1224
00954f 940e d125 	CALL SUBOPT_0x325
009551 01f9      	MOVW R30,R18
009552 940e c39b 	CALL SUBOPT_0x140
                 ; 0016 04FC         if(min_c > 30){
                +
009554 312f     +CPI R18 , LOW ( 31 )
009555 e0e0     +LDI R30 , HIGH ( 31 )
009556 073e     +CPC R19 , R30
                 	__CPWRN 18,19,31
009557 f010      	BRLO _0x2C0288
                 ; 0016 04FD             min++;
                +
009558 5f0f     +SUBI R16 , LOW ( - 1 )
009559 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
                 ; 0016 04FE         }
                 ; 0016 04FF         printDebug("--> %d min.\r\n",min);
                 _0x2C0288:
                +
00955a e2e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1264 ) )
00955b e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1264 ) )
00955c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1264 ) )
00955d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1264 ) )
                 	__POINTD1FN _0x2C0000,1264
00955e 940e d125 	CALL SUBOPT_0x325
009560 940e bc2c 	CALL SUBOPT_0x12
                 ; 0016 0500         val[0] = min / 100;
009562 940e d12a 	CALL SUBOPT_0x326
                 ; 0016 0501         val[1] = (min % 100) / 10;
                 ; 0016 0502         val[2] = ((min % 100) % 10);
                 ; 0016 0503         val[3] = 1;
                 ; 0016 0504         return 0;
009564 c039      	RJMP _0x20E0037
                 ; 0016 0505     }
                 ; 0016 0506 
                 ; 0016 0507     if(hr < 1000){
                 _0x2C0287:
                +
009565 3e48     +CPI R20 , LOW ( 1000 )
009566 e0e3     +LDI R30 , HIGH ( 1000 )
009567 075e     +CPC R21 , R30
                 	__CPWRN 20,21,1000
009568 f568      	BRSH _0x2C0289
                 ; 0016 0508         min   = hr_c / 60;
009569 81ae      	LDD  R26,Y+6
00956a 81bf      	LDD  R27,Y+6+1
00956b e3ec      	LDI  R30,LOW(60)
00956c e0f0      	LDI  R31,HIGH(60)
00956d 940e d978 	CALL __DIVW21U
00956f 018f      	MOVW R16,R30
                 ; 0016 0509         min_c = hr_c % 60;
009570 81ae      	LDD  R26,Y+6
009571 81bf      	LDD  R27,Y+6+1
009572 e3ec      	LDI  R30,LOW(60)
009573 e0f0      	LDI  R31,HIGH(60)
009574 940e d9c1 	CALL __MODW21U
009576 019f      	MOVW R18,R30
                 ; 0016 050A         printDebug("<get_current_sampling> %d hr. %d min. %d sec. ",hr,min,min_c);
                +
009577 e2ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1278 ) )
009578 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1278 ) )
009579 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1278 ) )
00957a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1278 ) )
                 	__POINTD1FN _0x2C0000,1278
00957b 940e d0f4 	CALL SUBOPT_0x323
00957d 01f8      	MOVW R30,R16
00957e 940e bd18 	CALL SUBOPT_0x34
009580 01f9      	MOVW R30,R18
009581 940e bd18 	CALL SUBOPT_0x34
009583 940e be6d 	CALL SUBOPT_0x66
                 ; 0016 050B         if(min > 30){
                +
009585 310f     +CPI R16 , LOW ( 31 )
009586 e0e0     +LDI R30 , HIGH ( 31 )
009587 071e     +CPC R17 , R30
                 	__CPWRN 16,17,31
009588 f010      	BRLO _0x2C028A
                 ; 0016 050C             hr++;
                +
009589 5f4f     +SUBI R20 , LOW ( - 1 )
00958a 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0016 050D         }
                 ; 0016 050E         printDebug("--> %d hr.\r\n",hr);
                 _0x2C028A:
                +
00958b e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1325 ) )
00958c e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1325 ) )
00958d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1325 ) )
00958e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1325 ) )
                 	__POINTD1FN _0x2C0000,1325
00958f 940e d0f4 	CALL SUBOPT_0x323
009591 940e bc2c 	CALL SUBOPT_0x12
                 ; 0016 050F         val[0] = hr / 100;
009593 940e d0f9 	CALL SUBOPT_0x324
                 ; 0016 0510         val[1] = (hr % 100) / 10;
                 ; 0016 0511         val[2] = ((hr % 100) % 10);
                 ; 0016 0512         val[3] = 2;
                 ; 0016 0513         return 0;
009595 c008      	RJMP _0x20E0037
                 ; 0016 0514     }
                 ; 0016 0515 
                 ; 0016 0516     printDebug("<get_current_sampling> Can't Show.\r\n");
                 _0x2C0289:
                +
009596 e6ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1338 ) )
009597 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1338 ) )
009598 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1338 ) )
009599 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1338 ) )
                 	__POINTD1FN _0x2C0000,1338
00959a 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 0517     return -1;
00959c efef      	LDI  R30,LOW(65535)
00959d efff      	LDI  R31,HIGH(65535)
                 _0x20E0037:
00959e 940e daa0 	CALL __LOADLOCR6
0095a0 962c      	ADIW R28,12
0095a1 9508      	RET
                 ; 0016 0518 
                 ; 0016 0519 }
                 ;/*============================================================*/
                 ;int get_current_vref(char *buf)
                 ; 0016 051C {
                 _get_current_vref:
                 ; 0016 051D     char    valTmp[10];
                 ; 0016 051E     float   vref;
                 ; 0016 051F     int     i;
                 ; 0016 0520     int tmp;
                 ; 0016 0521     int d2;
                 ; 0016 0522     int d1;
                 ; 0016 0523     int d0;
                 ; 0016 0524 
                 ; 0016 0525     if(eep_vref_val > 10.0){
0095a2 93ba      	ST   -Y,R27
0095a3 93aa      	ST   -Y,R26
0095a4 9762      	SBIW R28,18
0095a5 940e da99 	CALL __SAVELOCR6
                 ;	*buf -> Y+24
                 ;	valTmp -> Y+14
                 ;	vref -> Y+10
                 ;	i -> R16,R17
                 ;	tmp -> R18,R19
                 ;	d2 -> R20,R21
                 ;	d1 -> Y+8
                 ;	d0 -> Y+6
0095a7 940e d15b 	CALL SUBOPT_0x328
0095a9 01df      	MOVW R26,R30
0095aa 01cb      	MOVW R24,R22
0095ab 940e c281 	CALL SUBOPT_0x10D
0095ad 940e d870 	CALL __CMPF12
0095af f009      	BREQ PC+2
0095b0 f410      	BRCC PC+3
0095b1 940c 95b6 	JMP  _0x2C028B
                 ; 0016 0526         return -1;
0095b3 efef      	LDI  R30,LOW(65535)
0095b4 efff      	LDI  R31,HIGH(65535)
0095b5 c058      	RJMP _0x20E0035
                 ; 0016 0527     }
                 ; 0016 0528 
                 ; 0016 0529     vref = eep_vref_val;
                 _0x2C028B:
0095b6 940e d15b 	CALL SUBOPT_0x328
0095b8 940e d160 	CALL SUBOPT_0x329
                 ; 0016 052A     ftoa(vref,2,valTmp);
0095ba 940e d165 	CALL SUBOPT_0x32A
0095bc e0e2      	LDI  R30,LOW(2)
0095bd 93ea      	ST   -Y,R30
0095be 01de      	MOVW R26,R28
0095bf 9653      	ADIW R26,19
0095c0 940e 9e3e 	CALL _ftoa
                 ; 0016 052B 
                 ; 0016 052C     if(strlen(valTmp) != 4){ return -1; }
0095c2 01de      	MOVW R26,R28
0095c3 961e      	ADIW R26,14
0095c4 940e a16b 	CALL _strlen
0095c6 30e4      	CPI  R30,LOW(0x4)
0095c7 e0a0      	LDI  R26,HIGH(0x4)
0095c8 07fa      	CPC  R31,R26
0095c9 f019      	BREQ _0x2C028C
0095ca efef      	LDI  R30,LOW(65535)
0095cb efff      	LDI  R31,HIGH(65535)
0095cc c041      	RJMP _0x20E0035
                 ; 0016 052D 
                 ; 0016 052E     /*
                 ; 0016 052F     tmp = (int)(eep_vref_val * 100);
                 ; 0016 0530 
                 ; 0016 0531     d2  = tmp / 100;
                 ; 0016 0532     d1  = (tmp % 100) / 10;
                 ; 0016 0533     d0  = tmp % 10;
                 ; 0016 0534 
                 ; 0016 0535     printDebug("<get_current_vref> vref(%f) tmp = %d -> [%d][%d][%d]\r\n",eep_vref_val,tmp,d2,d1,d0);
                 ; 0016 0536     buf[0]  = d2;
                 ; 0016 0537     buf[1]  = d1;
                 ; 0016 0538     buf[2]  = d0;
                 ; 0016 0539     */
                 ; 0016 053A     printDebug("<get_current_vref> vref(%f) valTmp = %s\r\n",eep_vref_val,valTmp);
                 _0x2C028C:
                +
0095cd e8ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1375 ) )
0095ce e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1375 ) )
0095cf e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1375 ) )
0095d0 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1375 ) )
                 	__POINTD1FN _0x2C0000,1375
0095d1 940e da29 	CALL __PUTPARD1
0095d3 940e d15b 	CALL SUBOPT_0x328
0095d5 940e da29 	CALL __PUTPARD1
0095d7 01fe      	MOVW R30,R28
0095d8 9676      	ADIW R30,22
0095d9 940e c39b 	CALL SUBOPT_0x140
                 ; 0016 053B     buf[0]  = valTmp[0]-0x30;
0095db 85ee      	LDD  R30,Y+14
0095dc 53e0      	SUBI R30,LOW(48)
0095dd 8da8      	LDD  R26,Y+24
0095de 8db9      	LDD  R27,Y+24+1
0095df 93ec      	ST   X,R30
                 ; 0016 053C     buf[1]  = valTmp[2]-0x30;
0095e0 89e8      	LDD  R30,Y+16
0095e1 53e0      	SUBI R30,LOW(48)
                +
0095e2 8da8     +LDD R26 , Y + 24
0095e3 8db9     +LDD R27 , Y + 24 + 1
0095e4 9611     +ADIW R26 , 1
0095e5 93ec     +ST X , R30
                 	__PUTB1SNS 24,1
                 ; 0016 053D     buf[2]  = valTmp[3]-0x30;
0095e6 89e9      	LDD  R30,Y+17
0095e7 53e0      	SUBI R30,LOW(48)
                +
0095e8 8da8     +LDD R26 , Y + 24
0095e9 8db9     +LDD R27 , Y + 24 + 1
0095ea 9612     +ADIW R26 , 2
0095eb 93ec     +ST X , R30
                 	__PUTB1SNS 24,2
                 ; 0016 053E 
                 ; 0016 053F     printDebug("<get_current_vref> buf -> ");
                +
0095ec ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1417 ) )
0095ed e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1417 ) )
0095ee e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1417 ) )
0095ef e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1417 ) )
                 	__POINTD1FN _0x2C0000,1417
0095f0 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 0540     for(i=0;i<3;i++){
                +
0095f2 e000     +LDI R16 , LOW ( 0 )
0095f3 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C028E:
                +
0095f4 3003     +CPI R16 , LOW ( 3 )
0095f5 e0e0     +LDI R30 , HIGH ( 3 )
0095f6 071e     +CPC R17 , R30
                 	__CPWRN 16,17,3
0095f7 f474      	BRGE _0x2C028F
                 ; 0016 0541         printDebug("[%c]",buf[i]);
                +
0095f8 ede4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1444 ) )
0095f9 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1444 ) )
0095fa e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1444 ) )
0095fb e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1444 ) )
                 	__POINTD1FN _0x2C0000,1444
0095fc 940e da29 	CALL __PUTPARD1
0095fe 01f8      	MOVW R30,R16
0095ff 8dac      	LDD  R26,Y+28
009600 8dbd      	LDD  R27,Y+28+1
009601 940e c560 	CALL SUBOPT_0x184
                 ; 0016 0542     }
                +
009603 5f0f     +SUBI R16 , LOW ( - 1 )
009604 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009605 cfee      	RJMP _0x2C028E
                 _0x2C028F:
                 ; 0016 0543     printDebug("\r\n");
                +
009606 efe3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 195 ) )
009607 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 195 ) )
009608 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 195 ) )
009609 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 195 ) )
                 	__POINTD1FN _0x2C0000,195
00960a 940e bbba 	CALL SUBOPT_0x3
                 ; 0016 0544 
                 ; 0016 0545     return 0;
00960c e0e0      	LDI  R30,LOW(0)
00960d e0f0      	LDI  R31,HIGH(0)
                 _0x20E0035:
00960e 940e daa0 	CALL __LOADLOCR6
                 _0x20E0036:
009610 966a      	ADIW R28,26
009611 9508      	RET
                 ; 0016 0546 }
                 ;/*============================================================*/
                 ;int getNetworkInfo(char *msg, char *ip, char *mask, char *gw, char *server)
                 ; 0016 0549 {
                 _getNetworkInfo:
                 ; 0016 054A     int i,offset;
                 ; 0016 054B     //char msg[] = "0008DC135E2401C0A80B03FFFFFF00C0A80B011388C0A80B011388FE08000100000000000000000003010000000000000000002020202020202020202020200202020202020202020202020202020202020012B2B2B0020202020202020202020202020202020202020202020202                 020202020202020002020202020202020020202020202020202020202020202020202020202020000000000000000000FF\r\n";
                 ; 0016 054C     char dIp[4];
                 ; 0016 054D     char dMask[4];
                 ; 0016 054E     char dGw[4];
                 ; 0016 054F     char dServer[4];
                 ; 0016 0550 
009612 93ba      ; 0016 0551     offset = 7;
009613 93aa      	ST   -Y,R27
009614 9760      	ST   -Y,R26
009615 940e da9b 	SBIW R28,16
                 	CALL __SAVELOCR4
                 ;	*msg -> Y+28
                 ;	*ip -> Y+26
                 ;	*mask -> Y+24
                 ;	*gw -> Y+22
                 ;	*server -> Y+20
                 ;	i -> R16,R17
                 ;	offset -> R18,R19
                 ;	dIp -> Y+16
                 ;	dMask -> Y+12
                 ;	dGw -> Y+8
                +
009617 e027     +LDI R18 , LOW ( 7 )
009618 e030     +LDI R19 , HIGH ( 7 )
                 	__GETWRN 18,19,7
                 ; 0016 0552     for(i=offset;i<(offset+4);i++){
009619 0189      	MOVW R16,R18
                 _0x2C0291:
00961a 940e d16a 	CALL SUBOPT_0x32B
00961c f554      	BRGE _0x2C0292
                 ; 0016 0553         dIp[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
00961d 940e d16f 	CALL SUBOPT_0x32C
00961f 0fea      	ADD  R30,R26
009620 1ffb      	ADC  R31,R27
009621 93ff      	PUSH R31
009622 93ef      	PUSH R30
009623 940e d175 	CALL SUBOPT_0x32D
009625 93ef      	PUSH R30
009626 940e d183 	CALL SUBOPT_0x32E
009628 91af      	POP  R26
009629 0fea      	ADD  R30,R26
00962a 91af      	POP  R26
00962b 91bf      	POP  R27
00962c 940e d18e 	CALL SUBOPT_0x32F
                 ; 0016 0554         ip[(i-offset) * 3]              = (dIp[i-offset]/100);
00962e 940e d197 	CALL SUBOPT_0x330
009630 940e d19d 	CALL SUBOPT_0x331
                 ; 0016 0555         ip[((i-offset) * 3) + 1]        = (dIp[i-offset]%100) / 10;
009632 9631      	ADIW R30,1
009633 940e d197 	CALL SUBOPT_0x330
009635 940e d1a8 	CALL SUBOPT_0x332
009637 940e c841 	CALL SUBOPT_0x1FE
009639 940e d1ad 	CALL SUBOPT_0x333
                 ; 0016 0556         ip[((i-offset) * 3) + 2]        = (dIp[i-offset]%10);
00963b 9632      	ADIW R30,2
00963c 940e d197 	CALL SUBOPT_0x330
00963e 940e d1a8 	CALL SUBOPT_0x332
009640 940e c9e0 	CALL SUBOPT_0x23C
009642 01db      	MOVW R26,R22
009643 93ec      	ST   X,R30
                 ; 0016 0557     }
                +
009644 5f0f     +SUBI R16 , LOW ( - 1 )
009645 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009646 cfd3      	RJMP _0x2C0291
                 _0x2C0292:
                 ; 0016 0558 
                 ; 0016 0559     offset = 11;
                +
009647 e02b     +LDI R18 , LOW ( 11 )
009648 e030     +LDI R19 , HIGH ( 11 )
                 	__GETWRN 18,19,11
                 ; 0016 055A     for(i=offset;i<(offset+4);i++){
009649 0189      	MOVW R16,R18
                 _0x2C0294:
00964a 940e d16a 	CALL SUBOPT_0x32B
00964c f554      	BRGE _0x2C0295
                 ; 0016 055B         dMask[i-offset]                 = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
00964d 940e d1b4 	CALL SUBOPT_0x334
00964f 0fea      	ADD  R30,R26
009650 1ffb      	ADC  R31,R27
009651 93ff      	PUSH R31
009652 93ef      	PUSH R30
009653 940e d175 	CALL SUBOPT_0x32D
009655 93ef      	PUSH R30
009656 940e d183 	CALL SUBOPT_0x32E
009658 91af      	POP  R26
009659 0fea      	ADD  R30,R26
00965a 91af      	POP  R26
00965b 91bf      	POP  R27
00965c 940e d18e 	CALL SUBOPT_0x32F
                 ; 0016 055C         mask[(i-offset) * 3]            = (dMask[i-offset]/100);
00965e 940e d1ba 	CALL SUBOPT_0x335
009660 940e d19d 	CALL SUBOPT_0x331
                 ; 0016 055D         mask[((i-offset) * 3) + 1]      = (dMask[i-offset]%100) / 10;
009662 9631      	ADIW R30,1
009663 940e d1ba 	CALL SUBOPT_0x335
009665 940e d1a8 	CALL SUBOPT_0x332
009667 940e c841 	CALL SUBOPT_0x1FE
009669 940e d1ad 	CALL SUBOPT_0x333
                 ; 0016 055E         mask[((i-offset) * 3) + 2]      = (dMask[i-offset]%10);
00966b 9632      	ADIW R30,2
00966c 940e d1ba 	CALL SUBOPT_0x335
00966e 940e d1a8 	CALL SUBOPT_0x332
009670 940e c9e0 	CALL SUBOPT_0x23C
009672 01db      	MOVW R26,R22
009673 93ec      	ST   X,R30
                 ; 0016 055F     }
                +
009674 5f0f     +SUBI R16 , LOW ( - 1 )
009675 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009676 cfd3      	RJMP _0x2C0294
                 _0x2C0295:
                 ; 0016 0560 
                 ; 0016 0561     offset = 15;
                +
009677 e02f     +LDI R18 , LOW ( 15 )
009678 e030     +LDI R19 , HIGH ( 15 )
                 	__GETWRN 18,19,15
                 ; 0016 0562     for(i=offset;i<(offset+4);i++){
009679 0189      	MOVW R16,R18
                 _0x2C0297:
00967a 940e d16a 	CALL SUBOPT_0x32B
00967c f554      	BRGE _0x2C0298
                 ; 0016 0563         dGw[i-offset]                   = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
00967d 940e d1c0 	CALL SUBOPT_0x336
00967f 0fea      	ADD  R30,R26
009680 1ffb      	ADC  R31,R27
009681 93ff      	PUSH R31
009682 93ef      	PUSH R30
009683 940e d175 	CALL SUBOPT_0x32D
009685 93ef      	PUSH R30
009686 940e d183 	CALL SUBOPT_0x32E
009688 91af      	POP  R26
009689 0fea      	ADD  R30,R26
00968a 91af      	POP  R26
00968b 91bf      	POP  R27
00968c 940e d18e 	CALL SUBOPT_0x32F
                 ; 0016 0564         gw[(i-offset) * 3]              = (dGw[i-offset]/100);
00968e 940e d1c6 	CALL SUBOPT_0x337
009690 940e d19d 	CALL SUBOPT_0x331
                 ; 0016 0565         gw[((i-offset) * 3) + 1]        = (dGw[i-offset]%100) / 10;
009692 9631      	ADIW R30,1
009693 940e d1c6 	CALL SUBOPT_0x337
009695 940e d1a8 	CALL SUBOPT_0x332
009697 940e c841 	CALL SUBOPT_0x1FE
009699 940e d1ad 	CALL SUBOPT_0x333
                 ; 0016 0566         gw[((i-offset) * 3) + 2]        = (dGw[i-offset]%10);
00969b 9632      	ADIW R30,2
00969c 940e d1c6 	CALL SUBOPT_0x337
00969e 940e d1a8 	CALL SUBOPT_0x332
0096a0 940e c9e0 	CALL SUBOPT_0x23C
0096a2 01db      	MOVW R26,R22
0096a3 93ec      	ST   X,R30
                 ; 0016 0567     }
                +
0096a4 5f0f     +SUBI R16 , LOW ( - 1 )
0096a5 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0096a6 cfd3      	RJMP _0x2C0297
                 _0x2C0298:
                 ; 0016 0568 
                 ; 0016 0569     offset = 21;
                +
0096a7 e125     +LDI R18 , LOW ( 21 )
0096a8 e030     +LDI R19 , HIGH ( 21 )
                 	__GETWRN 18,19,21
                 ; 0016 056A     for(i=offset;i<(offset+4);i++){
0096a9 0189      	MOVW R16,R18
                 _0x2C029A:
0096aa 940e d16a 	CALL SUBOPT_0x32B
0096ac f5ac      	BRGE _0x2C029B
                 ; 0016 056B         dServer[i-offset]               = (h2i(msg[i*2]) * 16) + h2i(msg[(i*2) + 1]);
0096ad 01f8      	MOVW R30,R16
0096ae 1be2      	SUB  R30,R18
0096af 0bf3      	SBC  R31,R19
0096b0 01de      	MOVW R26,R28
0096b1 9614      	ADIW R26,4
0096b2 0fea      	ADD  R30,R26
0096b3 1ffb      	ADC  R31,R27
0096b4 93ff      	PUSH R31
0096b5 93ef      	PUSH R30
0096b6 940e d175 	CALL SUBOPT_0x32D
0096b8 93ef      	PUSH R30
0096b9 940e d183 	CALL SUBOPT_0x32E
0096bb 91af      	POP  R26
0096bc 0fea      	ADD  R30,R26
0096bd 91af      	POP  R26
0096be 91bf      	POP  R27
0096bf 940e d18e 	CALL SUBOPT_0x32F
                 ; 0016 056C         server[(i-offset) * 3]          = (dServer[i-offset]/100);
0096c1 940e d1cc 	CALL SUBOPT_0x338
0096c3 940e d1d6 	CALL SUBOPT_0x339
0096c5 01df      	MOVW R26,R30
0096c6 e6e4      	LDI  R30,LOW(100)
0096c7 e0f0      	LDI  R31,HIGH(100)
0096c8 940e d98b 	CALL __DIVW21
0096ca 01db      	MOVW R26,R22
0096cb 940e d18e 	CALL SUBOPT_0x32F
                 ; 0016 056D         server[((i-offset) * 3) + 1]    = (dServer[i-offset]%100) / 10;
0096cd 9631      	ADIW R30,1
0096ce 940e d1cc 	CALL SUBOPT_0x338
0096d0 91ac      	LD   R26,X
0096d1 27bb      	CLR  R27
0096d2 940e c841 	CALL SUBOPT_0x1FE
0096d4 940e d1ad 	CALL SUBOPT_0x333
                 ; 0016 056E         server[((i-offset) * 3) + 2]    = (dServer[i-offset]%10);
0096d6 9632      	ADIW R30,2
0096d7 940e d1cc 	CALL SUBOPT_0x338
0096d9 91ac      	LD   R26,X
0096da 27bb      	CLR  R27
0096db 940e c9e0 	CALL SUBOPT_0x23C
0096dd 01db      	MOVW R26,R22
0096de 93ec      	ST   X,R30
                 ; 0016 056F     }
                +
0096df 5f0f     +SUBI R16 , LOW ( - 1 )
0096e0 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0096e1 cfc8      	RJMP _0x2C029A
                 _0x2C029B:
                 ; 0016 0570 
                 ; 0016 0571     printDebug("<getNetworkInfo> LIP : %u.%u.%u.%u\r\n",dIp[0],dIp[1],dIp[2],dIp[3]);
                +
0096e2 ede9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1449 ) )
0096e3 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1449 ) )
0096e4 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1449 ) )
0096e5 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1449 ) )
                 	__POINTD1FN _0x2C0000,1449
0096e6 940e da29 	CALL __PUTPARD1
0096e8 89ec      	LDD  R30,Y+20
0096e9 940e be67 	CALL SUBOPT_0x65
0096eb 8de9      	LDD  R30,Y+25
0096ec 940e be67 	CALL SUBOPT_0x65
0096ee 8dee      	LDD  R30,Y+30
0096ef 940e be67 	CALL SUBOPT_0x65
0096f1 a1eb      	LDD  R30,Y+35
0096f2 940e be67 	CALL SUBOPT_0x65
0096f4 940e c47c 	CALL SUBOPT_0x162
                 ; 0016 0572     printDebug("<getNetworkInfo> MSK : %u.%u.%u.%u\r\n",dMask[0],dMask[1],dMask[2],dMask[3]);
                +
0096f6 efee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1486 ) )
0096f7 e6f2     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1486 ) )
0096f8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1486 ) )
0096f9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1486 ) )
                 	__POINTD1FN _0x2C0000,1486
0096fa 940e da29 	CALL __PUTPARD1
0096fc 89e8      	LDD  R30,Y+16
0096fd 940e be67 	CALL SUBOPT_0x65
0096ff 89ed      	LDD  R30,Y+21
009700 940e be67 	CALL SUBOPT_0x65
009702 8dea      	LDD  R30,Y+26
009703 940e be67 	CALL SUBOPT_0x65
009705 8def      	LDD  R30,Y+31
009706 940e be67 	CALL SUBOPT_0x65
009708 940e c47c 	CALL SUBOPT_0x162
                 ; 0016 0573     printDebug("<getNetworkInfo> DGW : %u.%u.%u.%u\r\n",dGw[0],dGw[1],dGw[2],dGw[3]);
                +
00970a e2e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1523 ) )
00970b e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1523 ) )
00970c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1523 ) )
00970d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1523 ) )
                 	__POINTD1FN _0x2C0000,1523
00970e 940e c7fe 	CALL SUBOPT_0x1F7
009710 89e9      	LDD  R30,Y+17
009711 940e be67 	CALL SUBOPT_0x65
009713 89ee      	LDD  R30,Y+22
009714 940e be67 	CALL SUBOPT_0x65
009716 8deb      	LDD  R30,Y+27
009717 940e be67 	CALL SUBOPT_0x65
009719 940e c47c 	CALL SUBOPT_0x162
                 ; 0016 0574     printDebug("<getNetworkInfo> SIP : %u.%u.%u.%u\r\n",dServer[0],dServer[1],dServer[2],dServer[3]);
                +
00971b e4e8     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1560 ) )
00971c e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1560 ) )
00971d e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1560 ) )
00971e e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1560 ) )
                 	__POINTD1FN _0x2C0000,1560
00971f 940e da29 	CALL __PUTPARD1
009721 85e8      	LDD  R30,Y+8
009722 940e be67 	CALL SUBOPT_0x65
009724 85ed      	LDD  R30,Y+13
009725 940e be67 	CALL SUBOPT_0x65
009727 89ea      	LDD  R30,Y+18
009728 940e be67 	CALL SUBOPT_0x65
00972a 89ef      	LDD  R30,Y+23
00972b 940e be67 	CALL SUBOPT_0x65
00972d 940e c47c 	CALL SUBOPT_0x162
                 ; 0016 0575 
                 ; 0016 0576     return 0;
00972f 940e c3f1 	CALL SUBOPT_0x14F
009731 966e      	ADIW R28,30
009732 9508      	RET
                 ; 0016 0577 }
                 ;/*============================================================*/
                 ;/*
                 ;int setNetworkInfo(char *ip, char *mask, char *gw, char *server)
                 ;{
                 ;    char    *msg;
                 ;    int     msg_len;
                 ;    int     i=0,res=0;
                 ;
                 ;    // -- read -- <S0008DC18BDDC01C0A801FCFFFFFF00C0A80101232EC0A80101271AF4080001000000000005000001040100010000000000000020202020202020202020202020202020202020202020202020202020202020002B2B2B00202020202020202020202020202020202020202020202020202020202020                 200020202020202020202020202020202020202020202020202020202020202020000000000000000000FF -- //
                 ;    // -- write - >W01[IP(4)][MSK(4)][GW(4)]
                 ;    msg = (unsigned char *) malloc( sizeof(char) * CONF_READ_BUFFER );
                 ;    if(msg == NULL){
                 ;        printDebug("<setNetworkInfo> malloc(CONF_READ_BUFFER) failed\r\n");
                 ;        return -1;
                 ;    }
                 ;
                 ;    res = ETH_getConfig(msg,&msg_len);
                 ;    if(res < 0){
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() failed\r\n");
                 ;    }
                 ;    else{
                 ;        printDebug("<setNetworkInfo> ETH_getConfig() success\r\n");
                 ;        printDebug("\r\n\r\n<setNetworkInfo> read[%d] -->\r\n",msg_len);
                 ;        for(i=0;i<msg_len;i++){
                 ;            putchar3(msg[i]);
                 ;        }
                 ;        printDebug("\r\n");
                 ;    }
                 ;
                 ;    printDebug("<setNetworkInfo> Network Configuring\r\n");
                 ;    printDebug("<setNetworkInfo> LIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11]);
                 ;
                 ;    printDebug("<setNetworkInfo> MASK      : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11]);
                 ;    printDebug("<setNetworkInfo> GATEWAY   : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;    printDebug("<setNetworkInfo> SIP       : ");
                 ;    printDebug("%u.%u.%u.%u  -- %02X,%02X,%02X,%02X\r\n",
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11],
                 ;                (server[0]*100) + (server[1] *10) + server[2],
                 ;                (server[3]*100) + (server[4] *10) + server[5],
                 ;                (server[6]*100) + (server[7] *10) + server[8],
                 ;                (server[9]*100) + (server[10]*10) + server[11]);
                 ;
                 ;
                 ;    sprintf(setStr,"%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X%02X",
                 ;                (ip[0]    *100) + (ip[1]     *10) + ip[2],
                 ;                (ip[3]    *100) + (ip[4]     *10) + ip[5],
                 ;                (ip[6]    *100) + (ip[7]     *10) + ip[8],
                 ;                (ip[9]    *100) + (ip[10]    *10) + ip[11],
                 ;                (mask[0]  *100) + (mask[1]   *10) + mask[2],
                 ;                (mask[3]  *100) + (mask[4]   *10) + mask[5],
                 ;                (mask[6]  *100) + (mask[7]   *10) + mask[8],
                 ;                (mask[9]  *100) + (mask[10]  *10) + mask[11],
                 ;                (gw[0]    *100) + (gw[1]     *10) + gw[2],
                 ;                (gw[3]    *100) + (gw[4]     *10) + gw[5],
                 ;                (gw[6]    *100) + (gw[7]     *10) + gw[8],
                 ;                (gw[9]    *100) + (gw[10]    *10) + gw[11]);
                 ;
                 ;    return 0;
                 ;}
                 ;*/
                 ;/*============================================================*/
                 ;int set_vref(char *buf)
                 ; 0016 05D4 {
                 _set_vref:
                 ; 0016 05D5     int     tmp;
                 ; 0016 05D6     float   tmpf;
                 ; 0016 05D7 
009733 940e c1e8 ; 0016 05D8     tmp = (buf[0] * 100) + (buf[1] * 10) + buf[2];
009735 930a      	CALL SUBOPT_0xF1
                 	ST   -Y,R16
                 ;	*buf -> Y+6
                 ;	tmp -> R16,R17
009736 81ae      ;	tmpf -> Y+2
009737 81bf      	LDD  R26,Y+6
009738 940e c668 	LDD  R27,Y+6+1
00973a 81ee      	CALL SUBOPT_0x1B3
00973b 81ff      	LDD  R30,Y+6
00973c 940e c66d 	LDD  R31,Y+6+1
00973e 81ee      	CALL SUBOPT_0x1B4
00973f 81ff      	LDD  R30,Y+6
009740 940e cb43 	LDD  R31,Y+6+1
009742 0fea      	CALL SUBOPT_0x271
009743 1ffb      	ADD  R30,R26
009744 018f      	ADC  R31,R27
                 	MOVW R16,R30
009745 940e c860 ; 0016 05D9     tmpf = (float) (tmp / 100.0);
009747 01df      	CALL SUBOPT_0x202
009748 01cb      	MOVW R26,R30
                +
009749 e0e0     +LDI R30 , LOW ( 0x42C80000 )
00974a e0f0     +LDI R31 , HIGH ( 0x42C80000 )
00974b ec68     +LDI R22 , BYTE3 ( 0x42C80000 )
00974c e472     +LDI R23 , BYTE4 ( 0x42C80000 )
                 	__GETD1N 0x42C80000
00974d 940e d82b 	CALL __DIVF21
00974f 940e c072 	CALL SUBOPT_0xB4
                 ; 0016 05DA 
                 ; 0016 05DB     printDebug("<set_vref> [%d][%d][%d] -> %d -> %f\r\n",buf[0],buf[1],buf[2],tmp,tmpf);
                +
009751 e6ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1597 ) )
009752 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1597 ) )
009753 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1597 ) )
009754 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1597 ) )
                 	__POINTD1FN _0x2C0000,1597
009755 940e c328 	CALL SUBOPT_0x129
009757 91ec      	LD   R30,X
009758 940e be67 	CALL SUBOPT_0x65
00975a 85ee      	LDD  R30,Y+14
00975b 85ff      	LDD  R31,Y+14+1
00975c 81e1      	LDD  R30,Z+1
00975d 940e be67 	CALL SUBOPT_0x65
00975f 89ea      	LDD  R30,Y+18
009760 89fb      	LDD  R31,Y+18+1
009761 81e2      	LDD  R30,Z+2
009762 940e be67 	CALL SUBOPT_0x65
009764 01f8      	MOVW R30,R16
009765 940e cb08 	CALL SUBOPT_0x269
009767 940e c0c8 	CALL SUBOPT_0xC4
009769 940e da29 	CALL __PUTPARD1
00976b e184      	LDI  R24,20
00976c 940e 9ad2 	CALL _printDebug
00976e 9668      	ADIW R28,24
                 ; 0016 05DC 
                 ; 0016 05DD     eep_vref_val = tmpf;
00976f 940e c077 	CALL SUBOPT_0xB5
009771 e8a9      	LDI  R26,LOW(_eep_vref_val)
009772 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009773 940e da5c 	CALL __EEPROMWRD
                 ; 0016 05DE 
                 ; 0016 05DF     return 0;
009775 c07a      	RJMP _0x20E0034
                 ; 0016 05E0 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/*********************** Support Function *********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int h2i(char hex)
                 ; 0016 05E8 {
                 _h2i:
                 ; 0016 05E9     if      ((hex >= 'A') && (hex <= 'F')){ return hex - 0x37;  }
009776 93aa      	ST   -Y,R26
                 ;	hex -> Y+0
009777 81a8      	LD   R26,Y
009778 34a1      	CPI  R26,LOW(0x41)
009779 f010      	BRLO _0x2C029D
00977a 34a7      	CPI  R26,LOW(0x47)
00977b f008      	BRLO _0x2C029E
                 _0x2C029D:
00977c c004      	RJMP _0x2C029C
                 _0x2C029E:
00977d 940e d1d9 	CALL SUBOPT_0x33A
00977f 97f7      	SBIW R30,55
009780 c20b      	RJMP _0x20E0031
                 ; 0016 05EA     else if ((hex >= 'a') && (hex <= 'f')){ return hex - 0x57;  }
                 _0x2C029C:
009781 81a8      	LD   R26,Y
009782 36a1      	CPI  R26,LOW(0x61)
009783 f010      	BRLO _0x2C02A1
009784 36a7      	CPI  R26,LOW(0x67)
009785 f008      	BRLO _0x2C02A2
                 _0x2C02A1:
009786 c005      	RJMP _0x2C02A0
                 _0x2C02A2:
009787 940e d1d9 	CALL SUBOPT_0x33A
009789 55e7      	SUBI R30,LOW(87)
00978a 40f0      	SBCI R31,HIGH(87)
00978b c200      	RJMP _0x20E0031
                 ; 0016 05EB     else if ((hex >= '0') && (hex <= '9')){ return hex - 0x30;  }
                 _0x2C02A0:
00978c 81a8      	LD   R26,Y
00978d 33a0      	CPI  R26,LOW(0x30)
00978e f010      	BRLO _0x2C02A5
00978f 33aa      	CPI  R26,LOW(0x3A)
009790 f008      	BRLO _0x2C02A6
                 _0x2C02A5:
009791 c004      	RJMP _0x2C02A4
                 _0x2C02A6:
009792 940e d1d9 	CALL SUBOPT_0x33A
009794 97f0      	SBIW R30,48
009795 c1f6      	RJMP _0x20E0031
                 ; 0016 05EC 
                 ; 0016 05ED     return 0;
                 _0x2C02A4:
009796 e0e0      	LDI  R30,LOW(0)
009797 e0f0      	LDI  R31,HIGH(0)
009798 c1f3      	RJMP _0x20E0031
                 ; 0016 05EE }
                 ;/*============================================================*/
                 ;int e2rcpy(char *dest, char eeprom *src, int len)
                 ; 0016 05F1 {
                 ; 0016 05F2     int i;
                 ; 0016 05F3 
                 ; 0016 05F4     for(i=0;i<len;i++){
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                 ; 0016 05F5         dest[i] = src[i];
                 ; 0016 05F6     }
                 ; 0016 05F7     return 0;
                 ; 0016 05F8 }
                 ;/*============================================================*/
                 ;int r2ecpy(char eeprom *dest, char *src, int len)
                 ; 0016 05FB {
                 _r2ecpy:
                 ; 0016 05FC     int i;
                 ; 0016 05FD     for(i=0;i<len;i++){
009799 940e bf27 	CALL SUBOPT_0x81
                 ;	*dest -> Y+6
                 ;	*src -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
00979b e000     +LDI R16 , LOW ( 0 )
00979c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AB:
00979d 940e bf2c 	CALL SUBOPT_0x82
00979f f45c      	BRGE _0x2C02AC
                 ; 0016 05FE         dest[i] = src[i];
0097a0 01f8      	MOVW R30,R16
0097a1 940e c618 	CALL SUBOPT_0x1A6
0097a3 010f      	MOVW R0,R30
0097a4 940e bf31 	CALL SUBOPT_0x83
0097a6 940e c361 	CALL SUBOPT_0x134
                 ; 0016 05FF     }
                +
0097a8 5f0f     +SUBI R16 , LOW ( - 1 )
0097a9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0097aa cff2      	RJMP _0x2C02AB
                 _0x2C02AC:
                 ; 0016 0600     return 0;
0097ab c044      	RJMP _0x20E0034
                 ; 0016 0601 }
                 ;/*============================================================*/
                 ;int recmp(char *src1, char eeprom *src2, int len)
                 ; 0016 0604 {
                 _recmp:
                 ; 0016 0605     int i;
                 ; 0016 0606 
                 ; 0016 0607     for(i=0;i<len;i++){
0097ac 940e bf27 	CALL SUBOPT_0x81
                 ;	*src1 -> Y+6
                 ;	*src2 -> Y+4
                 ;	len -> Y+2
                 ;	i -> R16,R17
                +
0097ae e000     +LDI R16 , LOW ( 0 )
0097af e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02AE:
0097b0 940e bf2c 	CALL SUBOPT_0x82
0097b2 f544      	BRGE _0x2C02AF
                 ; 0016 0608         printDebug("<recmp> src1[%02X] src2[%02X] user[%02X] service[%02X]\r\n",src1[i],src2[i],userPwd[i],servicePwd[i]);
                +
0097b3 e9e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 1635 ) )
0097b4 e6f3     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 1635 ) )
0097b5 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 1635 ) )
0097b6 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 1635 ) )
                 	__POINTD1FN _0x2C0000,1635
0097b7 940e da29 	CALL __PUTPARD1
0097b9 01f8      	MOVW R30,R16
0097ba 85aa      	LDD  R26,Y+10
0097bb 85bb      	LDD  R27,Y+10+1
0097bc 0fae      	ADD  R26,R30
0097bd 1fbf      	ADC  R27,R31
0097be 91ec      	LD   R30,X
0097bf 940e be67 	CALL SUBOPT_0x65
0097c1 01f8      	MOVW R30,R16
0097c2 85ac      	LDD  R26,Y+12
0097c3 85bd      	LDD  R27,Y+12+1
0097c4 0fae      	ADD  R26,R30
0097c5 1fbf      	ADC  R27,R31
0097c6 940e da50 	CALL __EEPROMRDB
0097c8 940e be67 	CALL SUBOPT_0x65
0097ca e8ad      	LDI  R26,LOW(_userPwd)
0097cb e0b5      	LDI  R27,HIGH(_userPwd)
0097cc 940e c20e 	CALL SUBOPT_0xFA
0097ce 940e be67 	CALL SUBOPT_0x65
0097d0 e9a1      	LDI  R26,LOW(_servicePwd)
0097d1 e0b5      	LDI  R27,HIGH(_servicePwd)
0097d2 940e c20e 	CALL SUBOPT_0xFA
0097d4 940e be67 	CALL SUBOPT_0x65
0097d6 940e c47c 	CALL SUBOPT_0x162
                 ; 0016 0609     }
                +
0097d8 5f0f     +SUBI R16 , LOW ( - 1 )
0097d9 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0097da cfd5      	RJMP _0x2C02AE
                 _0x2C02AF:
                 ; 0016 060A 
                 ; 0016 060B     for(i=0;i<len;i++){
                +
0097db e000     +LDI R16 , LOW ( 0 )
0097dc e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2C02B1:
0097dd 940e bf2c 	CALL SUBOPT_0x82
0097df f484      	BRGE _0x2C02B2
                 ; 0016 060C         if(src1[i] != src2[i]){
0097e0 01f8      	MOVW R30,R16
0097e1 940e c8c2 	CALL SUBOPT_0x210
0097e3 900c      	LD   R0,X
0097e4 940e bf31 	CALL SUBOPT_0x83
0097e6 940e da50 	CALL __EEPROMRDB
0097e8 15e0      	CP   R30,R0
0097e9 f019      	BREQ _0x2C02B3
                 ; 0016 060D             return -1;
0097ea efef      	LDI  R30,LOW(65535)
0097eb efff      	LDI  R31,HIGH(65535)
0097ec c005      	RJMP _0x20E0033
                 ; 0016 060E         }
                 ; 0016 060F     }
                 _0x2C02B3:
                +
0097ed 5f0f     +SUBI R16 , LOW ( - 1 )
0097ee 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
0097ef cfed      	RJMP _0x2C02B1
                 _0x2C02B2:
                 ; 0016 0610     return 0;
                 _0x20E0034:
0097f0 e0e0      	LDI  R30,LOW(0)
0097f1 e0f0      	LDI  R31,HIGH(0)
                 _0x20E0033:
0097f2 8119      	LDD  R17,Y+1
0097f3 8108      	LDD  R16,Y+0
0097f4 9628      	ADIW R28,8
0097f5 9508      	RET
                 ; 0016 0611 }
                 ;/*============================================================*/
                 ;#include <stdio.h>
                 ;#include <stdlib.h>
                 ;#include <string.h>
                 ;#include <stdarg.h>
                 ;#include <delay.h>
                 ;#include <ctype.h>
                 ;#include "debug.h"
                 ;#include "adc.h"
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 ;#include "ds1672.h"
                 ;#include "alarm.h"
                 ;#include "log.h"
                 ;#include "io.h"
                 ;#include "ethcomm.h"
                 ;
                 ;flash unsigned char cmdSetRTCDateTime[]     = "$CMDSDT";        // -- Set Date/Time -- //
                 ;flash unsigned char cmdResetAlarmStatus[]   = "$CMDRAS";        // -- Re-initiate all alarm flag -- //
                 ;flash unsigned char cmdClearLogFile[]       = "$CMDCLF";        // -- Re-initiate log file -- //
                 ;flash unsigned char cmdSetVref[]            = "$CMDSVR";        // -- Set Vref measure from multimeter -- //
                 ;flash unsigned char cmdSensorSelect[]       = "$CMDSNS";        // -- Select Sensor for Hardware Calibration [Disable mode require] -- //
                 ;flash unsigned char cmdDeviceEnable[]       = "$CMDDEN";        // -- Enable Device -- //
                 ;flash unsigned char cmdDeviceDisable[]      = "$CMDDDS";        // -- Disable Device -- //
                 ;flash unsigned char cmdSetSerialNumber[]    = "$CMDSSN";        // -- Set Serial Number -- //
                 ;flash unsigned char cmdReadSerialNumber[]   = "$CMDRSN";        // -- Read Serial Number -- //
                 ;/*============================================================*/
                 ;
                 ;unsigned int hwCalId    = 9;
                 
                 	.DSEG
                 ;
                 ;/**************************************************************/
                 ;/************* Service Debug Command Function *****************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;int DEBUG_setDateTime(void)
                 ; 0017 0021 {
                 
                 	.CSEG
                 _DEBUG_setDateTime:
                 ; 0017 0022     unsigned char   i;
                 ; 0017 0023     unsigned char   buffer[32];
                 ; 0017 0024     int             tz;
                 ; 0017 0025 
                 ; 0017 0026     struct rtc_structure rtcSet;
                 ; 0017 0027 
                 ; 0017 0028     for(i=0;i<4;i++)
0097f6 97ea      	SBIW R28,58
0097f7 940e da9b 	CALL __SAVELOCR4
                 ;	i -> R17
                 ;	buffer -> Y+30
                 ;	tz -> R18,R19
                 ;	rtcSet -> Y+4
0097f9 e010      	LDI  R17,LOW(0)
                 _0x2E0005:
0097fa 3014      	CPI  R17,4
0097fb f450      	BRSH _0x2E0006
                 ; 0017 0029     {
                 ; 0017 002A         buffer[i] = rxPackage3[i+8];
0097fc 940e c055 	CALL SUBOPT_0xAE
0097fe 940e d1dc 	CALL SUBOPT_0x33B
                +
009800 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009801 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009802 81e0      	LD   R30,Z
009803 93ec      	ST   X,R30
                 ; 0017 002B     }
009804 5f1f      	SUBI R17,-1
009805 cff4      	RJMP _0x2E0005
                 _0x2E0006:
                 ; 0017 002C     buffer[4] = 0;
009806 940e d1e1 	CALL SUBOPT_0x33C
                 ; 0017 002D 
                 ; 0017 002E     rtcSet.year = atol(buffer);
009808 940e c03e 	CALL SUBOPT_0xAA
                 ; 0017 002F 
                 ; 0017 0030     printDebug("get year = %d\r\n",rtcSet.year);
                +
00980a ecee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 0 ) )
00980b e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 0 ) )
00980c e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 0 ) )
00980d e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 0 ) )
                 	__POINTD1FN _0x2E0000,0
00980e 940e c7e3 	CALL SUBOPT_0x1F1
009810 940e c58e 	CALL SUBOPT_0x18B
                 ; 0017 0031 
                 ; 0017 0032     for(i=0;i<2;i++)
009812 e010      	LDI  R17,LOW(0)
                 _0x2E0008:
009813 3012      	CPI  R17,2
009814 f450      	BRSH _0x2E0009
                 ; 0017 0033     {
                 ; 0017 0034         buffer[i] = rxPackage3[i+13];
009815 940e c055 	CALL SUBOPT_0xAE
009817 940e d1dc 	CALL SUBOPT_0x33B
                +
009819 58e4     +SUBI R30 , LOW ( - _rxPackage3 - ( 13 ) )
00981a 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 13 ) )
                 	__ADDW1MN _rxPackage3,13
00981b 81e0      	LD   R30,Z
00981c 93ec      	ST   X,R30
                 ; 0017 0035     }
00981d 5f1f      	SUBI R17,-1
00981e cff4      	RJMP _0x2E0008
                 _0x2E0009:
                 ; 0017 0036     buffer[2] = 0;
00981f 940e d1e7 	CALL SUBOPT_0x33D
                 ; 0017 0037 
                 ; 0017 0038     rtcSet.month = atol(buffer);
009821 940e d1ed 	CALL SUBOPT_0x33E
                 ; 0017 0039 
                 ; 0017 003A     printDebug("get month = %d\r\n",rtcSet.month);
                +
009823 edee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 16 ) )
009824 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 16 ) )
009825 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 16 ) )
009826 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 16 ) )
                 	__POINTD1FN _0x2E0000,16
009827 940e bf6f 	CALL SUBOPT_0x8D
009829 940e c58e 	CALL SUBOPT_0x18B
                 ; 0017 003B 
                 ; 0017 003C     for(i=0;i<2;i++)
00982b e010      	LDI  R17,LOW(0)
                 _0x2E000B:
00982c 3012      	CPI  R17,2
00982d f450      	BRSH _0x2E000C
                 ; 0017 003D     {
                 ; 0017 003E         buffer[i] = rxPackage3[i+16];
00982e 940e c055 	CALL SUBOPT_0xAE
009830 940e d1dc 	CALL SUBOPT_0x33B
                +
009832 58e1     +SUBI R30 , LOW ( - _rxPackage3 - ( 16 ) )
009833 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 16 ) )
                 	__ADDW1MN _rxPackage3,16
009834 81e0      	LD   R30,Z
009835 93ec      	ST   X,R30
                 ; 0017 003F     }
009836 5f1f      	SUBI R17,-1
009837 cff4      	RJMP _0x2E000B
                 _0x2E000C:
                 ; 0017 0040     buffer[2] = 0;
009838 940e d1e7 	CALL SUBOPT_0x33D
                 ; 0017 0041 
                 ; 0017 0042     rtcSet.date = atol(buffer);
00983a 940e c1d3 	CALL SUBOPT_0xED
                 ; 0017 0043 
                 ; 0017 0044     printDebug("get date = %d\r\n",rtcSet.date);
                +
00983c eeef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 33 ) )
00983d e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 33 ) )
00983e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 33 ) )
00983f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 33 ) )
                 	__POINTD1FN _0x2E0000,33
009840 940e be28 	CALL SUBOPT_0x5B
009842 940e bc2c 	CALL SUBOPT_0x12
                 ; 0017 0045 
                 ; 0017 0046     for(i=0;i<2;i++)
009844 e010      	LDI  R17,LOW(0)
                 _0x2E000E:
009845 3012      	CPI  R17,2
009846 f450      	BRSH _0x2E000F
                 ; 0017 0047     {
                 ; 0017 0048         buffer[i] = rxPackage3[i+19];
009847 940e c055 	CALL SUBOPT_0xAE
009849 940e d1dc 	CALL SUBOPT_0x33B
                +
00984b 57ee     +SUBI R30 , LOW ( - _rxPackage3 - ( 19 ) )
00984c 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 19 ) )
                 	__ADDW1MN _rxPackage3,19
00984d 81e0      	LD   R30,Z
00984e 93ec      	ST   X,R30
                 ; 0017 0049     }
00984f 5f1f      	SUBI R17,-1
009850 cff4      	RJMP _0x2E000E
                 _0x2E000F:
                 ; 0017 004A     buffer[2] = 0;
009851 940e d1e7 	CALL SUBOPT_0x33D
                 ; 0017 004B 
                 ; 0017 004C     rtcSet.hour = atol(buffer);
009853 940e d1f2 	CALL SUBOPT_0x33F
                 ; 0017 004D 
                 ; 0017 004E     printDebug("get hour = %d\r\n",rtcSet.hour);
                +
009855 efef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 49 ) )
009856 e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 49 ) )
009857 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 49 ) )
009858 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 49 ) )
                 	__POINTD1FN _0x2E0000,49
009859 940e da29 	CALL __PUTPARD1
00985b 940e c174 	CALL SUBOPT_0xDF
00985d 940e c58e 	CALL SUBOPT_0x18B
                 ; 0017 004F 
                 ; 0017 0050     for(i=0;i<2;i++)
00985f e010      	LDI  R17,LOW(0)
                 _0x2E0011:
009860 3012      	CPI  R17,2
009861 f450      	BRSH _0x2E0012
                 ; 0017 0051     {
                 ; 0017 0052         buffer[i] = rxPackage3[i+22];
009862 940e c055 	CALL SUBOPT_0xAE
009864 940e d1dc 	CALL SUBOPT_0x33B
                +
009866 57eb     +SUBI R30 , LOW ( - _rxPackage3 - ( 22 ) )
009867 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 22 ) )
                 	__ADDW1MN _rxPackage3,22
009868 81e0      	LD   R30,Z
009869 93ec      	ST   X,R30
                 ; 0017 0053     }
00986a 5f1f      	SUBI R17,-1
00986b cff4      	RJMP _0x2E0011
                 _0x2E0012:
                 ; 0017 0054     buffer[2] = 0;
00986c 940e d1e7 	CALL SUBOPT_0x33D
                 ; 0017 0055 
                 ; 0017 0056     rtcSet.min = atol(buffer);
00986e 940e d1f7 	CALL SUBOPT_0x340
                 ; 0017 0057 
                 ; 0017 0058     printDebug("get min = %d\r\n",rtcSet.min);
                +
009870 e0ef     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 65 ) )
009871 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 65 ) )
009872 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 65 ) )
009873 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 65 ) )
                 	__POINTD1FN _0x2E0000,65
009874 940e da29 	CALL __PUTPARD1
009876 940e c1f8 	CALL SUBOPT_0xF5
009878 940e bc2c 	CALL SUBOPT_0x12
                 ; 0017 0059 
                 ; 0017 005A     for(i=0;i<2;i++)
00987a e010      	LDI  R17,LOW(0)
                 _0x2E0014:
00987b 3012      	CPI  R17,2
00987c f450      	BRSH _0x2E0015
                 ; 0017 005B     {
                 ; 0017 005C         buffer[i] = rxPackage3[i+25];
00987d 940e c055 	CALL SUBOPT_0xAE
00987f 940e d1dc 	CALL SUBOPT_0x33B
                +
009881 57e8     +SUBI R30 , LOW ( - _rxPackage3 - ( 25 ) )
009882 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 25 ) )
                 	__ADDW1MN _rxPackage3,25
009883 81e0      	LD   R30,Z
009884 93ec      	ST   X,R30
                 ; 0017 005D     }
009885 5f1f      	SUBI R17,-1
009886 cff4      	RJMP _0x2E0014
                 _0x2E0015:
                 ; 0017 005E     buffer[2] = 0;
009887 940e d1e7 	CALL SUBOPT_0x33D
                 ; 0017 005F 
                 ; 0017 0060     rtcSet.sec = atol(buffer);
                +
009889 8fe8     +STD Y + 24 , R30
00988a 8ff9     +STD Y + 24 + 1 , R31
00988b 8f6a     +STD Y + 24 + 2 , R22
00988c 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
                 ; 0017 0061 
                 ; 0017 0062     printDebug("get sec = %d\r\n",rtcSet.sec);
                +
00988d e1ee     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 80 ) )
00988e e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 80 ) )
00988f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 80 ) )
009890 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 80 ) )
                 	__POINTD1FN _0x2E0000,80
009891 940e da29 	CALL __PUTPARD1
                +
009893 8dec     +LDD R30 , Y + 28
009894 8dfd     +LDD R31 , Y + 28 + 1
009895 8d6e     +LDD R22 , Y + 28 + 2
009896 8d7f     +LDD R23 , Y + 28 + 3
                 	__GETD1S 28
009897 940e c58e 	CALL SUBOPT_0x18B
                 ; 0017 0063 
                 ; 0017 0064     for(i=0;i<3;i++)
009899 e010      	LDI  R17,LOW(0)
                 _0x2E0017:
00989a 3013      	CPI  R17,3
00989b f450      	BRSH _0x2E0018
                 ; 0017 0065     {
                 ; 0017 0066         buffer[i] = rxPackage3[i+28];
00989c 940e c055 	CALL SUBOPT_0xAE
00989e 940e d1dc 	CALL SUBOPT_0x33B
                +
0098a0 57e5     +SUBI R30 , LOW ( - _rxPackage3 - ( 28 ) )
0098a1 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 28 ) )
                 	__ADDW1MN _rxPackage3,28
0098a2 81e0      	LD   R30,Z
0098a3 93ec      	ST   X,R30
                 ; 0017 0067     }
0098a4 5f1f      	SUBI R17,-1
0098a5 cff4      	RJMP _0x2E0017
                 _0x2E0018:
                 ; 0017 0068     buffer[4] = 0;
0098a6 940e d1e1 	CALL SUBOPT_0x33C
                 ; 0017 0069 
                 ; 0017 006A     tz = atol(buffer);
0098a8 019f      	MOVW R18,R30
                 ; 0017 006B 
                 ; 0017 006C     printDebug("get timezone = %+d\r\n",tz);
                +
0098a9 e2ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 95 ) )
0098aa e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 95 ) )
0098ab e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 95 ) )
0098ac e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 95 ) )
                 	__POINTD1FN _0x2E0000,95
0098ad 940e bc24 	CALL SUBOPT_0x11
0098af 940e bc2c 	CALL SUBOPT_0x12
                 ; 0017 006D 
                 ; 0017 006E     RTC_setDateTime(rtcSet,tz);
0098b1 01fe      	MOVW R30,R28
0098b2 9634      	ADIW R30,4
0098b3 e1aa      	LDI  R26,26
0098b4 940e da33 	CALL __PUTPARL
0098b6 01d9      	MOVW R26,R18
0098b7 940e 469c 	CALL _RTC_setDateTime
                 ; 0017 006F 
                 ; 0017 0070     return 0;
0098b9 940e c3f1 	CALL SUBOPT_0x14F
0098bb 96ee      	ADIW R28,62
0098bc 9508      	RET
                 ; 0017 0071 }
                 ;/*============================================================*/
                 ;void DEBUG_resetAlarm(void)
                 ; 0017 0074 {
                 _DEBUG_resetAlarm:
                 ; 0017 0075     resetAlarm();
0098bd 940e 7a2c 	CALL _resetAlarm
                 ; 0017 0076 
                 ; 0017 0077     printDebug("\r\n<DEBUG> Alarm Status Reset..!!\r\n");
                +
0098bf e4e2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 116 ) )
0098c0 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 116 ) )
0098c1 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 116 ) )
0098c2 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 116 ) )
                 	__POINTD1FN _0x2E0000,116
0098c3 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 0078 }
0098c5 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_ClearLogFile(void)
                 ; 0017 007B {
                 _DEBUG_ClearLogFile:
                 ; 0017 007C     int         res;
                 ; 0017 007D 
                 ; 0017 007E     printDebug("<DEBUG_ClearLogFile> Re-initiate log file\r\n");
0098c6 931a      	ST   -Y,R17
0098c7 930a      	ST   -Y,R16
                 ;	res -> R16,R17
                +
0098c8 e6e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 151 ) )
0098c9 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 151 ) )
0098ca e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 151 ) )
0098cb e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 151 ) )
                 	__POINTD1FN _0x2E0000,151
0098cc 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 007F 
                 ; 0017 0080     res = LOG_createFile(LOGFILE_DATA,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
0098ce 940e cbc9 	CALL SUBOPT_0x287
                 ; 0017 0081     if(res < 0)
0098d0 f432      	BRPL _0x2E0019
                 ; 0017 0082     {
                 ; 0017 0083         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_DATA);
0098d1 940e d1fc 	CALL SUBOPT_0x341
0098d3 940e be40 	CALL SUBOPT_0x5F
0098d5 940e bc2c 	CALL SUBOPT_0x12
                 ; 0017 0084     }
                 ; 0017 0085 
                 ; 0017 0086     res = LOG_createFile(LOGFILE_EVENT,SD_FORCE,LOG_INIT_STR,SIZE_RECORD);
                 _0x2E0019:
0098d7 940e cbf5 	CALL SUBOPT_0x28D
                 ; 0017 0087     if(res < 0)
0098d9 f432      	BRPL _0x2E001A
                 ; 0017 0088     {
                 ; 0017 0089         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_EVENT);
0098da 940e d1fc 	CALL SUBOPT_0x341
0098dc 940e be87 	CALL SUBOPT_0x6A
0098de 940e bc2c 	CALL SUBOPT_0x12
                 ; 0017 008A     }
                 ; 0017 008B 
                 ; 0017 008C     res = LOG_createFile(LOGFILE_ERROR,1,NULL,0);
                 _0x2E001A:
0098e0 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
0098e1 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
0098e2 93fa      	ST   -Y,R31
0098e3 93ea      	ST   -Y,R30
0098e4 e0e1      	LDI  R30,LOW(1)
0098e5 93ea      	ST   -Y,R30
0098e6 940e c5c1 	CALL SUBOPT_0x196
0098e8 940e 81e9 	CALL _LOG_createFile
0098ea 018f      	MOVW R16,R30
                 ; 0017 008D     if(res < 0)
0098eb 2311      	TST  R17
0098ec f432      	BRPL _0x2E001B
                 ; 0017 008E     {
                 ; 0017 008F         printDebug("<DEBUG_ClearLogFile> LOG_createFile(%s) failed\r\n",LOGFILE_ERROR);
0098ed 940e d1fc 	CALL SUBOPT_0x341
0098ef 940e cc43 	CALL SUBOPT_0x295
0098f1 940e bc2c 	CALL SUBOPT_0x12
                 ; 0017 0090     }
                 ; 0017 0091 
                 ; 0017 0092     return;
                 _0x2E001B:
0098f3 9109      	LD   R16,Y+
0098f4 9119      	LD   R17,Y+
0098f5 9508      	RET
                 ; 0017 0093 }
                 ;/*============================================================*/
                 ;void DEBUG_setRealVref(void)
                 ; 0017 0096 {
                 _DEBUG_setRealVref:
                 ; 0017 0097     unsigned char i;
                 ; 0017 0098     unsigned char rxStrSetVREF[6];
                 ; 0017 0099 
                 ; 0017 009A     for(i=0;i<=5;i++)
0098f6 9726      	SBIW R28,6
0098f7 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	rxStrSetVREF -> Y+1
0098f8 e010      	LDI  R17,LOW(0)
                 _0x2E001D:
0098f9 3016      	CPI  R17,6
0098fa f450      	BRSH _0x2E001E
                 ; 0017 009B     {
                 ; 0017 009C         rxStrSetVREF[i] = rxPackage3[i+8];
0098fb 940e c055 	CALL SUBOPT_0xAE
0098fd 940e d201 	CALL SUBOPT_0x342
                +
0098ff 58e9     +SUBI R30 , LOW ( - _rxPackage3 - ( 8 ) )
009900 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 8 ) )
                 	__ADDW1MN _rxPackage3,8
009901 81e0      	LD   R30,Z
009902 93ec      	ST   X,R30
                 ; 0017 009D     }
009903 5f1f      	SUBI R17,-1
009904 cff4      	RJMP _0x2E001D
                 _0x2E001E:
                 ; 0017 009E     rxStrSetVREF[5] = '\0';
009905 e0e0      	LDI  R30,LOW(0)
009906 83ee      	STD  Y+6,R30
                 ; 0017 009F     printDebug("<DEBUG_setRealVref> get set Vref<string> %s\r\n",rxStrSetVREF);
                +
009907 ece2     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 244 ) )
009908 e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 244 ) )
009909 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 244 ) )
00990a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 244 ) )
                 	__POINTD1FN _0x2E0000,244
00990b 940e da29 	CALL __PUTPARD1
00990d 01fe      	MOVW R30,R28
00990e 9635      	ADIW R30,5
00990f 940e bd18 	CALL SUBOPT_0x34
009911 940e bc2c 	CALL SUBOPT_0x12
                 ; 0017 00A0     eep_vref_val = (atof(rxStrSetVREF));
009913 01de      	MOVW R26,R28
009914 9611      	ADIW R26,1
009915 940e 9efc 	CALL _atof
009917 e8a9      	LDI  R26,LOW(_eep_vref_val)
009918 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009919 940e da5c 	CALL __EEPROMWRD
                 ; 0017 00A1     printDebug("<DEBUG_setRealVref> After convert = %f\r\n",eep_vref_val);
                +
00991b efe0     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 290 ) )
00991c e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 290 ) )
00991d e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 290 ) )
00991e e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 290 ) )
                 	__POINTD1FN _0x2E0000,290
00991f 940e da29 	CALL __PUTPARD1
009921 e8a9      	LDI  R26,LOW(_eep_vref_val)
009922 e0b5      	LDI  R27,HIGH(_eep_vref_val)
009923 940e c3e6 	CALL SUBOPT_0x14D
                 ; 0017 00A2 }
009925 8118      	LDD  R17,Y+0
009926 9627      	ADIW R28,7
009927 9508      	RET
                 ;/*============================================================*/
                 ;void DEBUG_sensorSelect(void)
                 ; 0017 00A5 {
                 _DEBUG_sensorSelect:
                 ; 0017 00A6     unsigned char ch[2];
                 ; 0017 00A7 
                 ; 0017 00A8     if(TEMP_SEL != TEMP_TYPE_K){
009928 9722      	SBIW R28,2
                 ;	ch -> Y+0
009929 940e bce8 	CALL SUBOPT_0x2E
00992b f039      	BREQ _0x2E001F
                 ; 0017 00A9         printDebug("<DEBUG_sensorSelect> This TEMP_SEL not support\r\n\r\n");
                +
00992c e1e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 331 ) )
00992d e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 331 ) )
00992e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 331 ) )
00992f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 331 ) )
                 	__POINTD1FN _0x2E0000,331
009930 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 00AA         return;
009932 c044      	RJMP _0x20E0032
                 ; 0017 00AB     }
                 ; 0017 00AC 
                 ; 0017 00AD     if(rxPackage3[8] == 'N'){
                 _0x2E001F:
                +
009933 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009935 34ae      	CPI  R26,LOW(0x4E)
009936 f449      	BRNE _0x2E0020
                 ; 0017 00AE         hwCalId     = 9;
009937 940e d206 	CALL SUBOPT_0x343
                 ; 0017 00AF         printDebug("<DEBUG_sensorSelect> Deselect sensor\r\n\r\n");
                +
009939 e4ec     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 382 ) )
00993a e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 382 ) )
00993b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 382 ) )
00993c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 382 ) )
                 	__POINTD1FN _0x2E0000,382
00993d 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 00B0     }
                 ; 0017 00B1     else if(isdigit(rxPackage3[8])){
00993f c037      	RJMP _0x2E0021
                 _0x2E0020:
                +
009940 91a0 0d77+LDS R26 , _rxPackage3 + ( 8 )
                 	__GETB2MN _rxPackage3,8
009942 940e bb2a 	CALL _isdigit
009944 30e0      	CPI  R30,0
009945 f109      	BREQ _0x2E0022
                 ; 0017 00B2         ch[0]       = rxPackage3[8];
                +
009946 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009948 83e8      	ST   Y,R30
                 ; 0017 00B3         ch[1]       = '\0';
009949 e0e0      	LDI  R30,LOW(0)
00994a 83e9      	STD  Y+1,R30
                 ; 0017 00B4         hwCalId     = atoi(ch);
00994b 01de      	MOVW R26,R28
00994c 940e 9dc1 	CALL _atoi
00994e 93e0 10f4 	STS  _hwCalId,R30
009950 93f0 10f5 	STS  _hwCalId+1,R31
                 ; 0017 00B5 
                 ; 0017 00B6         SENSOR_SELECT(hwCalId);
009952 940e c015 	CALL SUBOPT_0xA3
009954 91e0 10f4 	LDS  R30,_hwCalId
009956 0fee      	LSL  R30
009957 2bea      	OR   R30,R26
009958 2da0      	MOV  R26,R0
009959 93ec      	ST   X,R30
                 ; 0017 00B7         delay_ms(50);           // -- for multiplex stable -- //
00995a 940e bef2 	CALL SUBOPT_0x7A
                 ; 0017 00B8 
                 ; 0017 00B9         printDebug("<DEBUG_sensorSelect> Selected sensor %d\r\n\r\n",hwCalId);
                +
00995c e7e5     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 423 ) )
00995d e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 423 ) )
00995e e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 423 ) )
00995f e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 423 ) )
                 	__POINTD1FN _0x2E0000,423
009960 940e bcfa 	CALL SUBOPT_0x30
009962 940e bd18 	CALL SUBOPT_0x34
009964 940e bc2c 	CALL SUBOPT_0x12
                 ; 0017 00BA     }
                 ; 0017 00BB     else{
009966 c010      	RJMP _0x2E0023
                 _0x2E0022:
                 ; 0017 00BC         hwCalId     = 9;
009967 940e d206 	CALL SUBOPT_0x343
                 ; 0017 00BD         printDebug("<DEBUG_sensorSelect> ERROR : Selecting sensor [%c][0x%02X]\r\n\r\n",rxPackage3[8],rxPackage3[8]);
                +
009969 eae1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 467 ) )
00996a e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 467 ) )
00996b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 467 ) )
00996c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 467 ) )
                 	__POINTD1FN _0x2E0000,467
00996d 940e da29 	CALL __PUTPARD1
                +
00996f 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009971 940e be67 	CALL SUBOPT_0x65
                +
009973 91e0 0d77+LDS R30 , _rxPackage3 + ( 8 )
                 	__GETB1MN _rxPackage3,8
009975 940e c8d9 	CALL SUBOPT_0x214
                 ; 0017 00BE     }
                 _0x2E0023:
                 _0x2E0021:
                 ; 0017 00BF 
                 ; 0017 00C0     return;
                 _0x20E0032:
009977 9622      	ADIW R28,2
009978 9508      	RET
                 ; 0017 00C1 }
                 ;/*============================================================*/
                 ;void DEBUG_setDeviceEnable(char flag)
                 ; 0017 00C4 {
                 _DEBUG_setDeviceEnable:
                 ; 0017 00C5     if(flag){
009979 93aa      	ST   -Y,R26
                 ;	flag -> Y+0
00997a 81e8      	LD   R30,Y
00997b 30e0      	CPI  R30,0
00997c f021      	BREQ _0x2E0024
                 ; 0017 00C6         config_oper.deviceEnable        =   0x01;
                +
00997d eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
00997e e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
00997f e0e1      	LDI  R30,LOW(1)
009980 c003      	RJMP _0x2E0063
                 ; 0017 00C7     }
                 ; 0017 00C8     else{
                 _0x2E0024:
                 ; 0017 00C9         config_oper.deviceEnable        =   0x00;
                +
009981 eaa2     +LDI R26 , LOW ( _config_oper + ( 1 ) )
009982 e0b0     +LDI R27 , HIGH ( _config_oper + ( 1 ) )
                 	__POINTW2MN _config_oper,1
009983 e0e0      	LDI  R30,LOW(0)
                 _0x2E0063:
009984 940e da6c 	CALL __EEPROMWRB
                 ; 0017 00CA     }
                 ; 0017 00CB 
                 ; 0017 00CC     config_oper_flag                    =   0x01;
009986 e4a3      	LDI  R26,LOW(_config_oper_flag)
009987 e0b5      	LDI  R27,HIGH(_config_oper_flag)
009988 940e c366 	CALL SUBOPT_0x135
                 ; 0017 00CD     is_operating_config_update          =   1;
00998a 93e0 10f7 	STS  _is_operating_config_update,R30
                 ; 0017 00CE 
                 ; 0017 00CF     return;
                 _0x20E0031:
00998c 9621      	ADIW R28,1
00998d 9508      	RET
                 ; 0017 00D0 }
                 ;/*============================================================*/
                 ;void DEBUG_setSerialNumber(void)
                 ; 0017 00D3 {
                 _DEBUG_setSerialNumber:
                 ; 0017 00D4     // -- assume input is "$CMDSSN,01,02,03,04,05,06,07,08#" -- //
                 ; 0017 00D5     unsigned char i;
                 ; 0017 00D6     unsigned char set_str[24];
                 ; 0017 00D7 
                 ; 0017 00D8     for(i=0;i<24;i++){
00998e 9768      	SBIW R28,24
00998f 931a      	ST   -Y,R17
                 ;	i -> R17
                 ;	set_str -> Y+1
009990 e010      	LDI  R17,LOW(0)
                 _0x2E0027:
009991 3118      	CPI  R17,24
009992 f598      	BRSH _0x2E0028
                 ; 0017 00D9         if( ( rxPackage3[i+7] != ',') && !isxdigit(rxPackage3[i+7])){
009993 940e c055 	CALL SUBOPT_0xAE
                +
009995 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
009996 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
009997 81a0      	LD   R26,Z
009998 32ac      	CPI  R26,LOW(0x2C)
009999 f021      	BREQ _0x2E002A
00999a 940e bb47 	CALL _isxdigit
00999c 30e0      	CPI  R30,0
00999d f009      	BREQ _0x2E002B
                 _0x2E002A:
00999e c013      	RJMP _0x2E0029
                 _0x2E002B:
                 ; 0017 00DA             printDebug("<DEBUG_setSerialNumber> invalid setting string (%c)[0x%02]\r\n",rxPackage3[i+7],rxPackage3[i+7]);
                +
00999f eee0     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 530 ) )
0099a0 e6f5     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 530 ) )
0099a1 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 530 ) )
0099a2 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 530 ) )
                 	__POINTD1FN _0x2E0000,530
0099a3 940e d20d 	CALL SUBOPT_0x344
                +
0099a5 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
0099a6 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
0099a7 81e0      	LD   R30,Z
0099a8 940e be67 	CALL SUBOPT_0x65
0099aa 940e c055 	CALL SUBOPT_0xAE
                +
0099ac 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
0099ad 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
0099ae 81e0      	LD   R30,Z
0099af 940e c8d9 	CALL SUBOPT_0x214
                 ; 0017 00DB             return;
0099b1 c09d      	RJMP _0x20E0030
                 ; 0017 00DC         }
                 ; 0017 00DD         set_str[i] = tolower(rxPackage3[i+7]);           // -- copy only ",01,02,03,04,05,06,07,08" -- //
                 _0x2E0029:
0099b2 940e c055 	CALL SUBOPT_0xAE
0099b4 010f      	MOVW R0,R30
0099b5 01de      	MOVW R26,R28
0099b6 9611      	ADIW R26,1
0099b7 0fea      	ADD  R30,R26
0099b8 1ffb      	ADC  R31,R27
0099b9 93ff      	PUSH R31
0099ba 93ef      	PUSH R30
0099bb 01f0      	MOVW R30,R0
                +
0099bc 58ea     +SUBI R30 , LOW ( - _rxPackage3 - ( 7 ) )
0099bd 4ff2     +SBCI R31 , HIGH ( - _rxPackage3 - ( 7 ) )
                 	__ADDW1MN _rxPackage3,7
0099be 81a0      	LD   R26,Z
0099bf 940e bb56 	CALL _tolower
0099c1 91af      	POP  R26
0099c2 91bf      	POP  R27
0099c3 93ec      	ST   X,R30
                 ; 0017 00DE     }
0099c4 5f1f      	SUBI R17,-1
0099c5 cfcb      	RJMP _0x2E0027
                 _0x2E0028:
                 ; 0017 00DF 
                 ; 0017 00E0     printDebug("<DEBUG_setSerialNumber> Replacing DEVICE_SERIAL..\r\n");
                +
0099c6 e1ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 591 ) )
0099c7 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 591 ) )
0099c8 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 591 ) )
0099c9 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 591 ) )
                 	__POINTD1FN _0x2E0000,591
0099ca 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 00E1 
                 ; 0017 00E2     printDebug("<DEBUG_setSerialNumber> Set String --> ");
                +
0099cc e5e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 643 ) )
0099cd e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 643 ) )
0099ce e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 643 ) )
0099cf e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 643 ) )
                 	__POINTD1FN _0x2E0000,643
0099d0 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 00E3     for(i=0;i<24;i++){
0099d2 e010      	LDI  R17,LOW(0)
                 _0x2E002D:
0099d3 3118      	CPI  R17,24
0099d4 f010      	BRLO PC+3
0099d5 940c 9a40 	JMP _0x2E002E
                 ; 0017 00E4         if((i%3) == 0)      {   continue;                       }
0099d7 940e d211 	CALL SUBOPT_0x345
0099d9 9730      	SBIW R30,0
0099da f409      	BRNE _0x2E002F
0099db c062      	RJMP _0x2E002C
                 ; 0017 00E5         else if((i%3) == 1) {
                 _0x2E002F:
0099dc 940e d211 	CALL SUBOPT_0x345
0099de 30e1      	CPI  R30,LOW(0x1)
0099df e0a0      	LDI  R26,HIGH(0x1)
0099e0 07fa      	CPC  R31,R26
0099e1 f581      	BRNE _0x2E0031
                 ; 0017 00E6 
                 ; 0017 00E7             printDebug("[%c",set_str[i]);
                +
0099e2 e7e9     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 683 ) )
0099e3 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 683 ) )
0099e4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 683 ) )
0099e5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 683 ) )
                 	__POINTD1FN _0x2E0000,683
0099e6 940e d20d 	CALL SUBOPT_0x344
0099e8 01de      	MOVW R26,R28
0099e9 9615      	ADIW R26,5
0099ea 940e c560 	CALL SUBOPT_0x184
                 ; 0017 00E8 
                 ; 0017 00E9             DEVICE_SERIAL[i/3]      = 0x00;
0099ec 940e d218 	CALL SUBOPT_0x346
0099ee 01df      	MOVW R26,R30
0099ef e0e0      	LDI  R30,LOW(0)
0099f0 940e da6c 	CALL __EEPROMWRB
                 ; 0017 00EA 
                 ; 0017 00EB             if(isdigit(set_str[i])){
0099f2 940e c055 	CALL SUBOPT_0xAE
0099f4 940e d201 	CALL SUBOPT_0x342
0099f6 940e d221 	CALL SUBOPT_0x347
0099f8 f051      	BREQ _0x2E0032
                 ; 0017 00EC                 DEVICE_SERIAL[i/3]  = (set_str[i] - 48) << 4;
0099f9 940e d218 	CALL SUBOPT_0x346
0099fb 010f      	MOVW R0,R30
0099fc 940e c055 	CALL SUBOPT_0xAE
0099fe 940e d201 	CALL SUBOPT_0x342
009a00 91ec      	LD   R30,X
009a01 53e0      	SUBI R30,LOW(48)
009a02 c009      	RJMP _0x2E0064
                 ; 0017 00ED             }
                 ; 0017 00EE             else{
                 _0x2E0032:
                 ; 0017 00EF                 DEVICE_SERIAL[i/3]  = (set_str[i] - 87) << 4;
009a03 940e d218 	CALL SUBOPT_0x346
009a05 010f      	MOVW R0,R30
009a06 940e c055 	CALL SUBOPT_0xAE
009a08 940e d201 	CALL SUBOPT_0x342
009a0a 91ec      	LD   R30,X
009a0b 55e7      	SUBI R30,LOW(87)
                 _0x2E0064:
009a0c 95e2      	SWAP R30
009a0d 7fe0      	ANDI R30,0xF0
009a0e 01d0      	MOVW R26,R0
009a0f 940e da6c 	CALL __EEPROMWRB
                 ; 0017 00F0             }
                 ; 0017 00F1         }
                 ; 0017 00F2         else if((i%3) == 2) {
009a11 c02c      	RJMP _0x2E0034
                 _0x2E0031:
009a12 940e d211 	CALL SUBOPT_0x345
009a14 30e2      	CPI  R30,LOW(0x2)
009a15 e0a0      	LDI  R26,HIGH(0x2)
009a16 07fa      	CPC  R31,R26
009a17 f531      	BRNE _0x2E0035
                 ; 0017 00F3 
                 ; 0017 00F4             printDebug("%c]",set_str[i]);
                +
009a18 e7ed     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 687 ) )
009a19 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 687 ) )
009a1a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 687 ) )
009a1b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 687 ) )
                 	__POINTD1FN _0x2E0000,687
009a1c 940e d20d 	CALL SUBOPT_0x344
009a1e 01de      	MOVW R26,R28
009a1f 9615      	ADIW R26,5
009a20 940e c560 	CALL SUBOPT_0x184
                 ; 0017 00F5 
                 ; 0017 00F6             if(isdigit(set_str[i])){
009a22 940e c055 	CALL SUBOPT_0xAE
009a24 940e d201 	CALL SUBOPT_0x342
009a26 940e d221 	CALL SUBOPT_0x347
009a28 f049      	BREQ _0x2E0036
                 ; 0017 00F7                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 48);
009a29 940e d218 	CALL SUBOPT_0x346
009a2b 940e d226 	CALL SUBOPT_0x348
009a2d 940e d201 	CALL SUBOPT_0x342
009a2f 91ec      	LD   R30,X
009a30 53e0      	SUBI R30,LOW(48)
009a31 c008      	RJMP _0x2E0065
                 ; 0017 00F8             }
                 ; 0017 00F9             else{
                 _0x2E0036:
                 ; 0017 00FA                 DEVICE_SERIAL[i/3]  |= (set_str[i] - 87);
009a32 940e d218 	CALL SUBOPT_0x346
009a34 940e d226 	CALL SUBOPT_0x348
009a36 940e d201 	CALL SUBOPT_0x342
009a38 91ec      	LD   R30,X
009a39 55e7      	SUBI R30,LOW(87)
                 _0x2E0065:
009a3a 29e0      	OR   R30,R0
009a3b 01db      	MOVW R26,R22
009a3c 940e da6c 	CALL __EEPROMWRB
                 ; 0017 00FB             }
                 ; 0017 00FC         }
                 ; 0017 00FD     }
                 _0x2E0035:
                 _0x2E0034:
                 _0x2E002C:
009a3e 5f1f      	SUBI R17,-1
009a3f cf93      	RJMP _0x2E002D
                 _0x2E002E:
                 ; 0017 00FE 
                 ; 0017 00FF     printDebug("<DEBUG_setSerialNumber> Success!! DEV_SERIAL ==> ");
                +
009a40 e8e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 691 ) )
009a41 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 691 ) )
009a42 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 691 ) )
009a43 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 691 ) )
                 	__POINTD1FN _0x2E0000,691
009a44 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 0100     for(i=0;i<8;i++){
009a46 e010      	LDI  R17,LOW(0)
                 _0x2E0039:
009a47 3018      	CPI  R17,8
009a48 f420      	BRSH _0x2E003A
                 ; 0017 0101         printDebug("[%02X]",DEVICE_SERIAL[i]);
009a49 940e d22d 	CALL SUBOPT_0x349
                 ; 0017 0102     }
009a4b 5f1f      	SUBI R17,-1
009a4c cffa      	RJMP _0x2E0039
                 _0x2E003A:
                 ; 0017 0103     printDebug("\r\n");
009a4d 940e d239 	CALL SUBOPT_0x34A
                 ; 0017 0104 
                 ; 0017 0105     return;
                 _0x20E0030:
009a4f 8118      	LDD  R17,Y+0
009a50 9669      	ADIW R28,25
009a51 9508      	RET
                 ; 0017 0106 }
                 ;/*============================================================*/
                 ;void DEBUG_readSerialNumber(void)
                 ; 0017 0109 {
                 _DEBUG_readSerialNumber:
                 ; 0017 010A     unsigned char i;
                 ; 0017 010B 
                 ; 0017 010C     printDebug("<DEBUG_readSerialNumber> DEV_SERIAL ==> ");
009a52 931a      	ST   -Y,R17
                 ;	i -> R17
                +
009a53 ebea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 748 ) )
009a54 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 748 ) )
009a55 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 748 ) )
009a56 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 748 ) )
                 	__POINTD1FN _0x2E0000,748
009a57 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 010D     for(i=0;i<8;i++){
009a59 e010      	LDI  R17,LOW(0)
                 _0x2E003C:
009a5a 3018      	CPI  R17,8
009a5b f420      	BRSH _0x2E003D
                 ; 0017 010E         printDebug("[%02X]",DEVICE_SERIAL[i]);
009a5c 940e d22d 	CALL SUBOPT_0x349
                 ; 0017 010F     }
009a5e 5f1f      	SUBI R17,-1
009a5f cffa      	RJMP _0x2E003C
                 _0x2E003D:
                 ; 0017 0110     printDebug("\r\n");
009a60 940e d239 	CALL SUBOPT_0x34A
                 ; 0017 0111 
                 ; 0017 0112     return;
009a62 9119      	LD   R17,Y+
009a63 9508      	RET
                 ; 0017 0113 }
                 ;/*============================================================*/
                 ;
                 ;/**************************************************************/
                 ;/****************** Debug Support Function ********************/
                 ;/**************************************************************/
                 ;/*============================================================*/
                 ;void debug_req(void)
                 ; 0017 011B {
                 _debug_req:
                 ; 0017 011C     flag_PackageTerminate3 = 0;
009a64 e0e0      	LDI  R30,LOW(0)
009a65 93e0 0d6e 	STS  _flag_PackageTerminate3,R30
                 ; 0017 011D 
                 ; 0017 011E     printDebug("Get Debug Req.:");
                +
009a67 eee3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 789 ) )
009a68 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 789 ) )
009a69 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 789 ) )
009a6a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 789 ) )
                 	__POINTD1FN _0x2E0000,789
009a6b 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 011F 
                 ; 0017 0120 
                 ; 0017 0121     if(!strncmpf(rxPackage3,cmdSetRTCDateTime,7)){
009a6d 940e d23f 	CALL SUBOPT_0x34B
                +
009a6f eaea     +LDI R30 , LOW ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009a70 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009a71 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
009a72 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetRTCDateTime + ( 0 ) )
                 	__POINTD1FN _cmdSetRTCDateTime,0
009a73 940e d244 	CALL SUBOPT_0x34C
009a75 f411      	BRNE _0x2E003E
                 ; 0017 0122         DEBUG_setDateTime();
009a76 dd7f      	RCALL _DEBUG_setDateTime
                 ; 0017 0123     }
                 ; 0017 0124     else if(!strncmpf(rxPackage3,cmdResetAlarmStatus,7)){
009a77 c059      	RJMP _0x2E003F
                 _0x2E003E:
009a78 940e d23f 	CALL SUBOPT_0x34B
                +
009a7a ebe2     +LDI R30 , LOW ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009a7b e0f1     +LDI R31 , HIGH ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009a7c e060     +LDI R22 , BYTE3 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
009a7d e070     +LDI R23 , BYTE4 ( 2 * _cmdResetAlarmStatus + ( 0 ) )
                 	__POINTD1FN _cmdResetAlarmStatus,0
009a7e 940e d244 	CALL SUBOPT_0x34C
009a80 f411      	BRNE _0x2E0040
                 ; 0017 0125         DEBUG_resetAlarm();
009a81 de3b      	RCALL _DEBUG_resetAlarm
                 ; 0017 0126     }
                 ; 0017 0127     else if(!strncmpf(rxPackage3,cmdClearLogFile,7)){
009a82 c04e      	RJMP _0x2E0041
                 _0x2E0040:
009a83 940e d23f 	CALL SUBOPT_0x34B
                +
009a85 ebea     +LDI R30 , LOW ( 2 * _cmdClearLogFile + ( 0 ) )
009a86 e0f1     +LDI R31 , HIGH ( 2 * _cmdClearLogFile + ( 0 ) )
009a87 e060     +LDI R22 , BYTE3 ( 2 * _cmdClearLogFile + ( 0 ) )
009a88 e070     +LDI R23 , BYTE4 ( 2 * _cmdClearLogFile + ( 0 ) )
                 	__POINTD1FN _cmdClearLogFile,0
009a89 940e d244 	CALL SUBOPT_0x34C
009a8b f411      	BRNE _0x2E0042
                 ; 0017 0128         DEBUG_ClearLogFile();
009a8c de39      	RCALL _DEBUG_ClearLogFile
                 ; 0017 0129     }
                 ; 0017 012A     else if(!strncmpf(rxPackage3,cmdSetVref,7)){
009a8d c043      	RJMP _0x2E0043
                 _0x2E0042:
009a8e 940e d23f 	CALL SUBOPT_0x34B
                +
009a90 ece2     +LDI R30 , LOW ( 2 * _cmdSetVref + ( 0 ) )
009a91 e0f1     +LDI R31 , HIGH ( 2 * _cmdSetVref + ( 0 ) )
009a92 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetVref + ( 0 ) )
009a93 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetVref + ( 0 ) )
                 	__POINTD1FN _cmdSetVref,0
009a94 940e d244 	CALL SUBOPT_0x34C
009a96 f411      	BRNE _0x2E0044
                 ; 0017 012B         DEBUG_setRealVref();
009a97 de5e      	RCALL _DEBUG_setRealVref
                 ; 0017 012C     }
                 ; 0017 012D     else if(!strncmpf(rxPackage3,cmdSensorSelect,7)){
009a98 c038      	RJMP _0x2E0045
                 _0x2E0044:
009a99 940e d23f 	CALL SUBOPT_0x34B
                +
009a9b ecea     +LDI R30 , LOW ( 2 * _cmdSensorSelect + ( 0 ) )
009a9c e0f1     +LDI R31 , HIGH ( 2 * _cmdSensorSelect + ( 0 ) )
009a9d e060     +LDI R22 , BYTE3 ( 2 * _cmdSensorSelect + ( 0 ) )
009a9e e070     +LDI R23 , BYTE4 ( 2 * _cmdSensorSelect + ( 0 ) )
                 	__POINTD1FN _cmdSensorSelect,0
009a9f 940e d244 	CALL SUBOPT_0x34C
009aa1 f411      	BRNE _0x2E0046
                 ; 0017 012E         DEBUG_sensorSelect();
009aa2 de85      	RCALL _DEBUG_sensorSelect
                 ; 0017 012F     }
                 ; 0017 0130     else if(!strncmpf(rxPackage3,cmdDeviceEnable,7)){
009aa3 c02d      	RJMP _0x2E0047
                 _0x2E0046:
009aa4 940e d23f 	CALL SUBOPT_0x34B
                +
009aa6 ede2     +LDI R30 , LOW ( 2 * _cmdDeviceEnable + ( 0 ) )
009aa7 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceEnable + ( 0 ) )
009aa8 e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceEnable + ( 0 ) )
009aa9 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceEnable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceEnable,0
009aaa 940e d244 	CALL SUBOPT_0x34C
009aac f419      	BRNE _0x2E0048
                 ; 0017 0131         DEBUG_setDeviceEnable(1);
009aad e0a1      	LDI  R26,LOW(1)
009aae deca      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0132     }
                 ; 0017 0133     else if(!strncmpf(rxPackage3,cmdDeviceDisable,7)){
009aaf c021      	RJMP _0x2E0049
                 _0x2E0048:
009ab0 940e d23f 	CALL SUBOPT_0x34B
                +
009ab2 edea     +LDI R30 , LOW ( 2 * _cmdDeviceDisable + ( 0 ) )
009ab3 e0f1     +LDI R31 , HIGH ( 2 * _cmdDeviceDisable + ( 0 ) )
009ab4 e060     +LDI R22 , BYTE3 ( 2 * _cmdDeviceDisable + ( 0 ) )
009ab5 e070     +LDI R23 , BYTE4 ( 2 * _cmdDeviceDisable + ( 0 ) )
                 	__POINTD1FN _cmdDeviceDisable,0
009ab6 940e d244 	CALL SUBOPT_0x34C
009ab8 f419      	BRNE _0x2E004A
                 ; 0017 0134         DEBUG_setDeviceEnable(0);
009ab9 e0a0      	LDI  R26,LOW(0)
009aba debe      	RCALL _DEBUG_setDeviceEnable
                 ; 0017 0135     }
                 ; 0017 0136     else if(!strncmpf(rxPackage3,cmdSetSerialNumber,7)){
009abb c015      	RJMP _0x2E004B
                 _0x2E004A:
009abc 940e d23f 	CALL SUBOPT_0x34B
                +
009abe eee2     +LDI R30 , LOW ( 2 * _cmdSetSerialNumber + ( 0 ) )
009abf e0f1     +LDI R31 , HIGH ( 2 * _cmdSetSerialNumber + ( 0 ) )
009ac0 e060     +LDI R22 , BYTE3 ( 2 * _cmdSetSerialNumber + ( 0 ) )
009ac1 e070     +LDI R23 , BYTE4 ( 2 * _cmdSetSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdSetSerialNumber,0
009ac2 940e d244 	CALL SUBOPT_0x34C
009ac4 f411      	BRNE _0x2E004C
                 ; 0017 0137         DEBUG_setSerialNumber();
009ac5 dec8      	RCALL _DEBUG_setSerialNumber
                 ; 0017 0138     }
                 ; 0017 0139     else if(!strncmpf(rxPackage3,cmdReadSerialNumber,7)){
009ac6 c00a      	RJMP _0x2E004D
                 _0x2E004C:
009ac7 940e d23f 	CALL SUBOPT_0x34B
                +
009ac9 eeea     +LDI R30 , LOW ( 2 * _cmdReadSerialNumber + ( 0 ) )
009aca e0f1     +LDI R31 , HIGH ( 2 * _cmdReadSerialNumber + ( 0 ) )
009acb e060     +LDI R22 , BYTE3 ( 2 * _cmdReadSerialNumber + ( 0 ) )
009acc e070     +LDI R23 , BYTE4 ( 2 * _cmdReadSerialNumber + ( 0 ) )
                 	__POINTD1FN _cmdReadSerialNumber,0
009acd 940e d244 	CALL SUBOPT_0x34C
009acf f409      	BRNE _0x2E004E
                 ; 0017 013A         DEBUG_readSerialNumber();
009ad0 df81      	RCALL _DEBUG_readSerialNumber
                 ; 0017 013B     }
                 ; 0017 013C 
                 ; 0017 013D     return;
                 _0x2E004E:
                 _0x2E004D:
                 _0x2E004B:
                 _0x2E0049:
                 _0x2E0047:
                 _0x2E0045:
                 _0x2E0043:
                 _0x2E0041:
                 _0x2E003F:
009ad1 9508      	RET
                 ; 0017 013E }
                 ;/*============================================================*/
                 ;void printDebug(flash char *fmtstr, ...)
                 ; 0017 0141 {
                 _printDebug:
009ad2 92ff      	PUSH R15
009ad3 2ef8      	MOV  R15,R24
                 ; 0017 0142     char textBuffer[256];
                 ; 0017 0143     va_list argptr;
                 ; 0017 0144 
                 ; 0017 0145     va_start(argptr, fmtstr);
009ad4 50d1      	SUBI R29,1
009ad5 931a      	ST   -Y,R17
009ad6 930a      	ST   -Y,R16
                 ;	*fmtstr -> Y+258
                 ;	textBuffer -> Y+2
                 ;	*argptr -> R16,R17
009ad7 01de      	MOVW R26,R28
009ad8 50a2      	SUBI R26,LOW(-(254))
009ad9 4fbf      	SBCI R27,HIGH(-(254))
009ada 940e d890 	CALL __ADDW2R15
009adc 018d      	MOVW R16,R26
                 ; 0017 0146     vsprintf(textBuffer,fmtstr,argptr);
009add 940e c7e7 	CALL SUBOPT_0x1F2
009adf 01de      	MOVW R26,R28
009ae0 5fac      	SUBI R26,LOW(-(260))
009ae1 4fbe      	SBCI R27,HIGH(-(260))
009ae2 940e cb12 	CALL SUBOPT_0x26B
                 ; 0017 0147     send_uart(3,textBuffer);
009ae4 e0e3      	LDI  R30,LOW(3)
009ae5 93ea      	ST   -Y,R30
009ae6 01de      	MOVW R26,R28
009ae7 9613      	ADIW R26,3
009ae8 940e 3fed 	CALL _send_uart
                 ; 0017 0148     va_end(argptr);
                 ; 0017 0149 
                 ; 0017 014A     return;
009aea 8119      	LDD  R17,Y+1
009aeb 8108      	LDD  R16,Y+0
009aec 9622      	ADIW R28,2
009aed 5fdf      	SUBI R29,-1
009aee 90ff      	POP  R15
009aef 9508      	RET
                 ; 0017 014B }
                 ;/*============================================================*/
                 ;void print_hex_ascii_line(const unsigned char *payload, int len, int offset)
                 ; 0017 014E {
                 _print_hex_ascii_line:
                 ; 0017 014F 
                 ; 0017 0150     int i;
                 ; 0017 0151     int gap;
                 ; 0017 0152     const unsigned char *ch;
                 ; 0017 0153 
                 ; 0017 0154     // offset //
                 ; 0017 0155     printDebug("%05d   ", offset);
009af0 940e c622 	CALL SUBOPT_0x1A8
                 ;	*payload -> Y+10
                 ;	len -> Y+8
                 ;	offset -> Y+6
                 ;	i -> R16,R17
                 ;	gap -> R18,R19
                 ;	*ch -> R20,R21
                +
009af2 efe3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 805 ) )
009af3 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 805 ) )
009af4 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 805 ) )
009af5 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 805 ) )
                 	__POINTD1FN _0x2E0000,805
009af6 940e c32d 	CALL SUBOPT_0x12A
009af8 940e c1ce 	CALL SUBOPT_0xEC
                 ; 0017 0156 
                 ; 0017 0157 
                 ; 0017 0158     // hex //
                 ; 0017 0159     ch = payload;
                +
009afa 854a     +LDD R20 , Y + 10
009afb 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 015A     for(i = 0; i < len; i++) {
                +
009afc e000     +LDI R16 , LOW ( 0 )
009afd e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0050:
009afe 85e8      	LDD  R30,Y+8
009aff 85f9      	LDD  R31,Y+8+1
009b00 170e      	CP   R16,R30
009b01 071f      	CPC  R17,R31
009b02 f494      	BRGE _0x2E0051
                 ; 0017 015B         printDebug("%02x ", *ch);
                +
009b03 efeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 813 ) )
009b04 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 813 ) )
009b05 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 813 ) )
009b06 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 813 ) )
                 	__POINTD1FN _0x2E0000,813
009b07 940e d24b 	CALL SUBOPT_0x34D
                 ; 0017 015C 
                 ; 0017 015D         ch++;
                +
009b09 5f4f     +SUBI R20 , LOW ( - 1 )
009b0a 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 015E         // print extra space after 8th byte for visual aid //
                 ; 0017 015F         if (i == 7){
009b0b e0e7      	LDI  R30,LOW(7)
009b0c e0f0      	LDI  R31,HIGH(7)
009b0d 17e0      	CP   R30,R16
009b0e 07f1      	CPC  R31,R17
009b0f f411      	BRNE _0x2E0052
                 ; 0017 0160             printDebug(" ");
009b10 940e d251 	CALL SUBOPT_0x34E
                 ; 0017 0161 
                 ; 0017 0162         }
                 ; 0017 0163     }
                 _0x2E0052:
                +
009b12 5f0f     +SUBI R16 , LOW ( - 1 )
009b13 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b14 cfe9      	RJMP _0x2E0050
                 _0x2E0051:
                 ; 0017 0164     // print space to handle line less than 8 bytes //
                 ; 0017 0165     if (len < 8){
009b15 85a8      	LDD  R26,Y+8
009b16 85b9      	LDD  R27,Y+8+1
009b17 9718      	SBIW R26,8
009b18 f414      	BRGE _0x2E0053
                 ; 0017 0166         printDebug(" ");
009b19 940e d251 	CALL SUBOPT_0x34E
                 ; 0017 0167 
                 ; 0017 0168     }
                 ; 0017 0169 
                 ; 0017 016A     // fill hex gap with spaces if not full line //
                 ; 0017 016B     if (len < 16) {
                 _0x2E0053:
009b1b 85a8      	LDD  R26,Y+8
009b1c 85b9      	LDD  R27,Y+8+1
009b1d 9750      	SBIW R26,16
009b1e f48c      	BRGE _0x2E0054
                 ; 0017 016C         gap = 16 - len;
009b1f 85a8      	LDD  R26,Y+8
009b20 85b9      	LDD  R27,Y+8+1
009b21 e1e0      	LDI  R30,LOW(16)
009b22 e0f0      	LDI  R31,HIGH(16)
009b23 1bea      	SUB  R30,R26
009b24 0bfb      	SBC  R31,R27
009b25 019f      	MOVW R18,R30
                 ; 0017 016D         for (i = 0; i < gap; i++) {
                +
009b26 e000     +LDI R16 , LOW ( 0 )
009b27 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0056:
                +
009b28 1702     +CP R16 , R18
009b29 0713     +CPC R17 , R19
                 	__CPWRR 16,17,18,19
009b2a f42c      	BRGE _0x2E0057
                 ; 0017 016E             printDebug("   ");
009b2b 940e d257 	CALL SUBOPT_0x34F
                 ; 0017 016F 
                 ; 0017 0170         }
                +
009b2d 5f0f     +SUBI R16 , LOW ( - 1 )
009b2e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b2f cff8      	RJMP _0x2E0056
                 _0x2E0057:
                 ; 0017 0171     }
                 ; 0017 0172     printDebug("   ");
                 _0x2E0054:
009b30 940e d257 	CALL SUBOPT_0x34F
                 ; 0017 0173 
                 ; 0017 0174 
                 ; 0017 0175     // ascii (if printable) //
                 ; 0017 0176     ch = payload;
                +
009b32 854a     +LDD R20 , Y + 10
009b33 855b     +LDD R21 , Y + 10 + 1
                 	__GETWRS 20,21,10
                 ; 0017 0177     for(i = 0; i < len; i++) {
                +
009b34 e000     +LDI R16 , LOW ( 0 )
009b35 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x2E0059:
009b36 85e8      	LDD  R30,Y+8
009b37 85f9      	LDD  R31,Y+8+1
009b38 170e      	CP   R16,R30
009b39 071f      	CPC  R17,R31
009b3a f4c4      	BRGE _0x2E005A
                 ; 0017 0178         if (isprint(*ch)){
009b3b 01da      	MOVW R26,R20
009b3c 91ac      	LD   R26,X
009b3d 940e bb33 	CALL _isprint
009b3f 30e0      	CPI  R30,0
009b40 f039      	BREQ _0x2E005B
                 ; 0017 0179             printDebug("%c", *ch);
                +
009b41 e7ea     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 684 ) )
009b42 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 684 ) )
009b43 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 684 ) )
009b44 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 684 ) )
                 	__POINTD1FN _0x2E0000,684
009b45 940e d24b 	CALL SUBOPT_0x34D
                 ; 0017 017A 
                 ; 0017 017B         }
                 ; 0017 017C         else{
009b47 c006      	RJMP _0x2E005C
                 _0x2E005B:
                 ; 0017 017D             printDebug(".");
                +
009b48 e0e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 819 ) )
009b49 e6f7     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 819 ) )
009b4a e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 819 ) )
009b4b e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 819 ) )
                 	__POINTD1FN _0x2E0000,819
009b4c 940e bbba 	CALL SUBOPT_0x3
                 ; 0017 017E 
                 ; 0017 017F         }
                 _0x2E005C:
                 ; 0017 0180         ch++;
                +
009b4e 5f4f     +SUBI R20 , LOW ( - 1 )
009b4f 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
                 ; 0017 0181     }
                +
009b50 5f0f     +SUBI R16 , LOW ( - 1 )
009b51 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009b52 cfe3      	RJMP _0x2E0059
                 _0x2E005A:
                 ; 0017 0182 
                 ; 0017 0183     printDebug("\r\n");
009b53 940e d239 	CALL SUBOPT_0x34A
                 ; 0017 0184 
                 ; 0017 0185 
                 ; 0017 0186 return;
009b55 c0ea      	RJMP _0x20E002E
                 ; 0017 0187 }
                 ;/*============================================================*/
                 ;void print_payload(const unsigned char *payload, int len)
                 ; 0017 018A {
                 _print_payload:
                 ; 0017 018B 
                 ; 0017 018C     int len_rem = len;
                 ; 0017 018D     int line_width = 16;            // number of bytes per line //
                 ; 0017 018E     int line_len;
                 ; 0017 018F     int offset = 0;                    // zero-based offset counter //
                 ; 0017 0190     const unsigned char *ch = payload;
                 ; 0017 0191 
                 ; 0017 0192     if (len <= 0)
009b56 940e d25d 	CALL SUBOPT_0x350
009b58 83ea      	STD  Y+2,R30
009b59 e0e0      	LDI  R30,LOW(0)
009b5a 83eb      	STD  Y+3,R30
009b5b 940e da99 	CALL __SAVELOCR6
                 ;	*payload -> Y+12
                 ;	len -> Y+10
                 ;	len_rem -> R16,R17
                 ;	line_width -> R18,R19
                 ;	line_len -> R20,R21
                 ;	offset -> Y+8
                 ;	*ch -> Y+6
                +
009b5d 850a     +LDD R16 , Y + 10
009b5e 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
009b5f e120     +LDI R18 , LOW ( 16 )
009b60 e030     +LDI R19 , HIGH ( 16 )
                 	__GETWRN 18,19,16
009b61 85ec      	LDD  R30,Y+12
009b62 85fd      	LDD  R31,Y+12+1
009b63 83ee      	STD  Y+6,R30
009b64 83ff      	STD  Y+6+1,R31
009b65 85aa      	LDD  R26,Y+10
009b66 85bb      	LDD  R27,Y+10+1
009b67 940e da81 	CALL __CPW02
009b69 f574      	BRGE _0x20E002F
                 ; 0017 0193         return;
                 ; 0017 0194 
                 ; 0017 0195     // data fits on one line //
                 ; 0017 0196     if (len <= line_width) {
009b6a 172a      	CP   R18,R26
009b6b 073b      	CPC  R19,R27
009b6c f03c      	BRLT _0x2E005E
                 ; 0017 0197         print_hex_ascii_line(ch, len, offset);
009b6d 940e c45c 	CALL SUBOPT_0x15C
009b6f 940e c64d 	CALL SUBOPT_0x1AF
009b71 940e d262 	CALL SUBOPT_0x351
                 ; 0017 0198         return;
009b73 c024      	RJMP _0x20E002F
                 ; 0017 0199     }
                 ; 0017 019A     // data spans multiple lines //
                 ; 0017 019B     for ( ;; ) {
                 _0x2E005E:
                 _0x2E0060:
                 ; 0017 019C         // compute current line length //
                 ; 0017 019D         line_len = line_width % len_rem;
009b74 01f8      	MOVW R30,R16
009b75 01d9      	MOVW R26,R18
009b76 940e d9c4 	CALL __MODW21
009b78 01af      	MOVW R20,R30
                 ; 0017 019E         // print line //
                 ; 0017 019F         print_hex_ascii_line(ch, line_len, offset);
009b79 940e c45c 	CALL SUBOPT_0x15C
009b7b 935a      	ST   -Y,R21
009b7c 934a      	ST   -Y,R20
009b7d 940e d262 	CALL SUBOPT_0x351
                 ; 0017 01A0         // compute total remaining //
                 ; 0017 01A1         len_rem = len_rem - line_len;
                +
009b7f 1b04     +SUB R16 , R20
009b80 0b15     +SBC R17 , R21
                 	__SUBWRR 16,17,20,21
                 ; 0017 01A2         // shift pointer to remaining bytes to print //
                 ; 0017 01A3         ch = ch + line_len;
009b81 01fa      	MOVW R30,R20
009b82 940e c618 	CALL SUBOPT_0x1A6
009b84 83ee      	STD  Y+6,R30
009b85 83ff      	STD  Y+6+1,R31
                 ; 0017 01A4         // add offset //
                 ; 0017 01A5         offset = offset + line_width;
009b86 01f9      	MOVW R30,R18
009b87 85a8      	LDD  R26,Y+8
009b88 85b9      	LDD  R27,Y+8+1
009b89 0fea      	ADD  R30,R26
009b8a 1ffb      	ADC  R31,R27
009b8b 87e8      	STD  Y+8,R30
009b8c 87f9      	STD  Y+8+1,R31
                 ; 0017 01A6         // check if we have line width chars or less //
                 ; 0017 01A7         if (len_rem <= line_width) {
                +
009b8d 1720     +CP R18 , R16
009b8e 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009b8f f03c      	BRLT _0x2E0062
                 ; 0017 01A8             // print last line and get out //
                 ; 0017 01A9             print_hex_ascii_line(ch, len_rem, offset);
009b90 940e c45c 	CALL SUBOPT_0x15C
009b92 931a      	ST   -Y,R17
009b93 930a      	ST   -Y,R16
009b94 940e d262 	CALL SUBOPT_0x351
                 ; 0017 01AA             break;
009b96 c001      	RJMP _0x2E0061
                 ; 0017 01AB         }
                 ; 0017 01AC     }
                 _0x2E0062:
009b97 cfdc      	RJMP _0x2E0060
                 _0x2E0061:
                 ; 0017 01AD 
                 ; 0017 01AE     return;
                 _0x20E002F:
009b98 940e daa0 	CALL __LOADLOCR6
009b9a 962e      	ADIW R28,14
009b9b 9508      	RET
                 ; 0017 01AF }
                 ;/*============================================================*/
                 ;
                 ;#include <stdlib.h>
                 ;#include "debug.h"
                 ;
                 ;// -- for polynomial interpolation by gaussian elimination -- //
                 ;int n = 3;
                 
                 	.DSEG
                 ;float a[3][4];
                 ;
                 ;/*============================================================*/
                 ;void forwardSubstitution()
                 ; 0018 000A {
                 
                 	.CSEG
                 _forwardSubstitution:
                 ; 0018 000B     int i, j, k, max;
                 ; 0018 000C     float t;
                 ; 0018 000D     for (i = 0; i < n; ++i) {
009b9c 9726      	SBIW R28,6
009b9d 940e bd9f 	CALL SUBOPT_0x46
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
                 ;	max -> Y+10
                 ;	t -> Y+6
                 _0x300005:
009b9f 940e d266 	CALL SUBOPT_0x352
009ba1 170e      	CP   R16,R30
009ba2 071f      	CPC  R17,R31
009ba3 f014      	BRLT PC+3
009ba4 940c 9c40 	JMP _0x300006
                 ; 0018 000E 
                 ; 0018 000F         max = i;
                +
009ba6 870a     +STD Y + 10 , R16
009ba7 871b     +STD Y + 10 + 1 , R17
                 	__PUTWSR 16,17,10
                 ; 0018 0010         for (j = i + 1; j < n; ++j)
009ba8 01f8      	MOVW R30,R16
009ba9 9631      	ADIW R30,1
009baa 019f      	MOVW R18,R30
                 _0x300008:
009bab 940e d266 	CALL SUBOPT_0x352
009bad 172e      	CP   R18,R30
009bae 073f      	CPC  R19,R31
009baf f4dc      	BRGE _0x300009
                 ; 0018 0011             if (a[j][i] > a[max][i])
009bb0 940e d26b 	CALL SUBOPT_0x353
009bb2 940e d271 	CALL SUBOPT_0x354
009bb4 937f      	PUSH R23
009bb5 936f      	PUSH R22
009bb6 93ff      	PUSH R31
009bb7 93ef      	PUSH R30
009bb8 940e d275 	CALL SUBOPT_0x355
009bba 940e d271 	CALL SUBOPT_0x354
009bbc 91af      	POP  R26
009bbd 91bf      	POP  R27
009bbe 918f      	POP  R24
009bbf 919f      	POP  R25
009bc0 940e d870 	CALL __CMPF12
009bc2 f009      	BREQ PC+2
009bc3 f410      	BRCC PC+3
009bc4 940c 9bc8 	JMP  _0x30000A
                 ; 0018 0012                 max = j;
                +
009bc6 872a     +STD Y + 10 , R18
009bc7 873b     +STD Y + 10 + 1 , R19
                 	__PUTWSR 18,19,10
                 ; 0018 0013 
                 ; 0018 0014         for (j = 0; j < n + 1; ++j) {
                 _0x30000A:
                +
009bc8 5f2f     +SUBI R18 , LOW ( - 1 )
009bc9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009bca cfe0      	RJMP _0x300008
                 _0x300009:
                +
009bcb e020     +LDI R18 , LOW ( 0 )
009bcc e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30000C:
009bcd 940e d27c 	CALL SUBOPT_0x356
009bcf f4dc      	BRGE _0x30000D
                 ; 0018 0015             t = a[max][j];
009bd0 940e d275 	CALL SUBOPT_0x355
009bd2 940e d281 	CALL SUBOPT_0x357
009bd4 940e c086 	CALL SUBOPT_0xB8
                 ; 0018 0016             a[max][j] = a[i][j];
009bd6 940e d275 	CALL SUBOPT_0x355
009bd8 940e d285 	CALL SUBOPT_0x358
009bda 010f      	MOVW R0,R30
009bdb 940e d289 	CALL SUBOPT_0x359
009bdd 940e d281 	CALL SUBOPT_0x357
009bdf 01d0      	MOVW R26,R0
009be0 940e d9ff 	CALL __PUTDP1
                 ; 0018 0017             a[i][j] = t;
009be2 940e d289 	CALL SUBOPT_0x359
009be4 940e d285 	CALL SUBOPT_0x358
009be6 940e c9d8 	CALL SUBOPT_0x23A
                 ; 0018 0018         }
                +
009be8 5f2f     +SUBI R18 , LOW ( - 1 )
009be9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009bea cfe2      	RJMP _0x30000C
                 _0x30000D:
                 ; 0018 0019 
                 ; 0018 001A         /*
                 ; 0018 001B         printDebug("\r\n-- fw_sub_swap(%d) --\r\n",i);
                 ; 0018 001C         for (k = 0; k < n; ++k) {
                 ; 0018 001D             printDebug("\t\t\t");
                 ; 0018 001E             for (j = 0; j < n + 1; ++j)
                 ; 0018 001F                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0020             printDebug("\r\n");
                 ; 0018 0021         }
                 ; 0018 0022         printDebug("\r\n");
                 ; 0018 0023         */
                 ; 0018 0024 
                 ; 0018 0025         //printDebug("\r\n-- fw_sub_calculate(%d) --\r\n",i);
                 ; 0018 0026         for (j = n; j >= i; --j){
                +
009beb 9120 1a71+LDS R18 , 0 + ( _n )
009bed 9130 1a72+LDS R19 , 0 + ( _n ) + 1
                 	__GETWRMN 18,19,0,_n
                 _0x30000F:
                +
009bef 1720     +CP R18 , R16
009bf0 0731     +CPC R19 , R17
                 	__CPWRR 18,19,16,17
009bf1 f414      	BRGE PC+3
009bf2 940c 9c3d 	JMP _0x300010
                 ; 0018 0027             for (k = i + 1; k < n; ++k){
009bf4 01f8      	MOVW R30,R16
009bf5 9631      	ADIW R30,1
009bf6 01af      	MOVW R20,R30
                 _0x300012:
009bf7 940e d266 	CALL SUBOPT_0x352
009bf9 174e      	CP   R20,R30
009bfa 075f      	CPC  R21,R31
009bfb f5f4      	BRGE _0x300013
                 ; 0018 0028                 a[k][j] -= a[k][i]/a[i][i] * a[i][j];
009bfc 01fa      	MOVW R30,R20
009bfd 940e d8df 	CALL __LSLW4
009bff 58ed      	SUBI R30,LOW(-_a)
009c00 4ef5      	SBCI R31,HIGH(-_a)
009c01 010f      	MOVW R0,R30
009c02 940e d285 	CALL SUBOPT_0x358
009c04 93ff      	PUSH R31
009c05 93ef      	PUSH R30
009c06 01df      	MOVW R26,R30
009c07 940e d9f4 	CALL __GETD1P
009c09 937f      	PUSH R23
009c0a 936f      	PUSH R22
009c0b 93ff      	PUSH R31
009c0c 93ef      	PUSH R30
009c0d 01d0      	MOVW R26,R0
009c0e 01f8      	MOVW R30,R16
009c0f 940e bc69 	CALL SUBOPT_0x1A
009c11 937f      	PUSH R23
009c12 936f      	PUSH R22
009c13 93ff      	PUSH R31
009c14 93ef      	PUSH R30
009c15 940e d289 	CALL SUBOPT_0x359
009c17 940e d271 	CALL SUBOPT_0x354
009c19 91af      	POP  R26
009c1a 91bf      	POP  R27
009c1b 918f      	POP  R24
009c1c 919f      	POP  R25
009c1d 940e d82b 	CALL __DIVF21
009c1f 937f      	PUSH R23
009c20 936f      	PUSH R22
009c21 93ff      	PUSH R31
009c22 93ef      	PUSH R30
009c23 940e d289 	CALL SUBOPT_0x359
009c25 940e d281 	CALL SUBOPT_0x357
009c27 91af      	POP  R26
009c28 91bf      	POP  R27
009c29 918f      	POP  R24
009c2a 919f      	POP  R25
009c2b 940e d7dd 	CALL __MULF12
009c2d 91af      	POP  R26
009c2e 91bf      	POP  R27
009c2f 918f      	POP  R24
009c30 919f      	POP  R25
009c31 940e c92f 	CALL SUBOPT_0x220
009c33 91af      	POP  R26
009c34 91bf      	POP  R27
009c35 940e d9ff 	CALL __PUTDP1
                 ; 0018 0029                 //printDebug("\t\t\t\t\t\t%f (%f/%f * %f)\r\n",a[k][j],a[k][i],a[i][i],a[i][j]);
                 ; 0018 002A             }
                +
009c37 5f4f     +SUBI R20 , LOW ( - 1 )
009c38 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
009c39 cfbd      	RJMP _0x300012
                 _0x300013:
                 ; 0018 002B         }
                +
009c3a 5021     +SUBI R18 , LOW ( 1 )
009c3b 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
009c3c cfb2      	RJMP _0x30000F
                 _0x300010:
                 ; 0018 002C         //printDebug("\r\n");
                 ; 0018 002D 
                 ; 0018 002E 
                 ; 0018 002F         /*
                 ; 0018 0030         printDebug("\r\n-- fw_sub_res(%d) --\r\n",i);
                 ; 0018 0031         for (k = 0; k < n; ++k) {
                 ; 0018 0032             printDebug("\t\t");
                 ; 0018 0033             for (j = 0; j < n + 1; ++j)
                 ; 0018 0034                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 0035             printDebug("\r\n");
                 ; 0018 0036         }
                 ; 0018 0037         printDebug("\r\n");
                 ; 0018 0038         */
                 ; 0018 0039     }
                +
009c3d 5f0f     +SUBI R16 , LOW ( - 1 )
009c3e 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009c3f cf5f      	RJMP _0x300005
                 _0x300006:
                 ; 0018 003A }
                 _0x20E002E:
009c40 940e daa0 	CALL __LOADLOCR6
009c42 962c      	ADIW R28,12
009c43 9508      	RET
                 ;
                 ;void reverseElimination()
                 ; 0018 003D {
                 _reverseElimination:
                 ; 0018 003E     int i, j, k;
                 ; 0018 003F     for (i = n - 1; i >= 0; --i) {
009c44 940e da99 	CALL __SAVELOCR6
                 ;	i -> R16,R17
                 ;	j -> R18,R19
                 ;	k -> R20,R21
009c46 940e d266 	CALL SUBOPT_0x352
009c48 9731      	SBIW R30,1
009c49 018f      	MOVW R16,R30
                 _0x300015:
009c4a 2311      	TST  R17
009c4b f412      	BRPL PC+3
009c4c 940c 9cb9 	JMP _0x300016
                 ; 0018 0040         a[i][n] = a[i][n] / a[i][i];
009c4e 940e d289 	CALL SUBOPT_0x359
009c50 01df      	MOVW R26,R30
009c51 940e d266 	CALL SUBOPT_0x352
009c53 940e bc76 	CALL SUBOPT_0x1C
009c55 93ff      	PUSH R31
009c56 93ef      	PUSH R30
009c57 940e d289 	CALL SUBOPT_0x359
009c59 01df      	MOVW R26,R30
009c5a 940e d266 	CALL SUBOPT_0x352
009c5c 940e bc69 	CALL SUBOPT_0x1A
009c5e 937f      	PUSH R23
009c5f 936f      	PUSH R22
009c60 93ff      	PUSH R31
009c61 93ef      	PUSH R30
009c62 940e d289 	CALL SUBOPT_0x359
009c64 940e d271 	CALL SUBOPT_0x354
009c66 91af      	POP  R26
009c67 91bf      	POP  R27
009c68 918f      	POP  R24
009c69 919f      	POP  R25
009c6a 940e d82b 	CALL __DIVF21
009c6c 91af      	POP  R26
009c6d 91bf      	POP  R27
009c6e 940e d9ff 	CALL __PUTDP1
                 ; 0018 0041         a[i][i] = 1;
009c70 940e d289 	CALL SUBOPT_0x359
009c72 940e d28f 	CALL SUBOPT_0x35A
009c74 940e d296 	CALL SUBOPT_0x35B
009c76 940e d9ff 	CALL __PUTDP1
                 ; 0018 0042         for (j = i - 1; j >= 0; --j) {
009c78 01f8      	MOVW R30,R16
009c79 9731      	SBIW R30,1
009c7a 019f      	MOVW R18,R30
                 _0x300018:
009c7b 2333      	TST  R19
009c7c f1ca      	BRMI _0x300019
                 ; 0018 0043             a[j][n] -= a[j][i] * a[i][n];
009c7d 940e d26b 	CALL SUBOPT_0x353
009c7f 010f      	MOVW R0,R30
009c80 01df      	MOVW R26,R30
009c81 940e d266 	CALL SUBOPT_0x352
009c83 940e bc76 	CALL SUBOPT_0x1C
009c85 93ff      	PUSH R31
009c86 93ef      	PUSH R30
009c87 01df      	MOVW R26,R30
009c88 940e d9f4 	CALL __GETD1P
009c8a 937f      	PUSH R23
009c8b 936f      	PUSH R22
009c8c 93ff      	PUSH R31
009c8d 93ef      	PUSH R30
009c8e 01d0      	MOVW R26,R0
009c8f 01f8      	MOVW R30,R16
009c90 940e bc69 	CALL SUBOPT_0x1A
009c92 937f      	PUSH R23
009c93 936f      	PUSH R22
009c94 93ff      	PUSH R31
009c95 93ef      	PUSH R30
009c96 940e d289 	CALL SUBOPT_0x359
009c98 01df      	MOVW R26,R30
009c99 940e d266 	CALL SUBOPT_0x352
009c9b 940e bc69 	CALL SUBOPT_0x1A
009c9d 91af      	POP  R26
009c9e 91bf      	POP  R27
009c9f 918f      	POP  R24
009ca0 919f      	POP  R25
009ca1 940e d7dd 	CALL __MULF12
009ca3 91af      	POP  R26
009ca4 91bf      	POP  R27
009ca5 918f      	POP  R24
009ca6 919f      	POP  R25
009ca7 940e c92f 	CALL SUBOPT_0x220
009ca9 91af      	POP  R26
009caa 91bf      	POP  R27
009cab 940e d9ff 	CALL __PUTDP1
                 ; 0018 0044             a[j][i] = 0;
009cad 940e d26b 	CALL SUBOPT_0x353
009caf 940e d28f 	CALL SUBOPT_0x35A
009cb1 940e bf79 	CALL SUBOPT_0x8F
                 ; 0018 0045         }
                +
009cb3 5021     +SUBI R18 , LOW ( 1 )
009cb4 4030     +SBCI R19 , HIGH ( 1 )
                 	__SUBWRN 18,19,1
009cb5 cfc5      	RJMP _0x300018
                 _0x300019:
                 ; 0018 0046 
                 ; 0018 0047         /*
                 ; 0018 0048         printDebug("\r\n-- rev_Eli(%d) --\r\n",i);
                 ; 0018 0049         for (k = 0; k < n; ++k) {
                 ; 0018 004A             printDebug("\t\t");
                 ; 0018 004B             for (j = 0; j < n + 1; ++j)
                 ; 0018 004C                 printDebug("%.2f\t", a[k][j]);
                 ; 0018 004D             printDebug("\r\n");
                 ; 0018 004E         }
                 ; 0018 004F         printDebug("\r\n");
                 ; 0018 0050         */
                 ; 0018 0051     }
                +
009cb6 5001     +SUBI R16 , LOW ( 1 )
009cb7 4010     +SBCI R17 , HIGH ( 1 )
                 	__SUBWRN 16,17,1
009cb8 cf91      	RJMP _0x300015
                 _0x300016:
                 ; 0018 0052 }
009cb9 940e daa0 	CALL __LOADLOCR6
009cbb 940c a061 	JMP  _0x20E0029
                 ;
                 ;void gaussian(float factor1, float factor2, float factor3, float ref1, float ref2, float ref3, float *resA, float *resB, float *resC)
                 ; 0018 0055 {
                 _gaussian:
                 ; 0018 0056     int i, j;
                 ; 0018 0057 
                 ; 0018 0058     // -- form matrix -- //
                 ; 0018 0059     a[0][0] = 1.0;      a[0][1] = factor1;     a[0][2] = factor1 * factor1;  a[0][3] = ref1;
009cbd 940e bf1b 	CALL SUBOPT_0x7F
                 ;	factor1 -> Y+30
                 ;	factor2 -> Y+26
                 ;	factor3 -> Y+22
                 ;	ref1 -> Y+18
                 ;	ref2 -> Y+14
                 ;	ref3 -> Y+10
                 ;	*resA -> Y+8
                 ;	*resB -> Y+6
                 ;	*resC -> Y+4
                 ;	i -> R16,R17
                 ;	j -> R18,R19
009cbf 940e d296 	CALL SUBOPT_0x35B
009cc1 93e0 1a73 	STS  _a,R30
009cc3 93f0 1a74 	STS  _a+1,R31
009cc5 9360 1a75 	STS  _a+2,R22
009cc7 9370 1a76 	STS  _a+3,R23
009cc9 940e c0a3 	CALL SUBOPT_0xBD
                +
009ccb 93e0 1a77+STS _a + ( 4 ) , R30
009ccd 93f0 1a78+STS _a + ( 4 ) + 1 , R31
009ccf 9360 1a79+STS _a + ( 4 ) + 2 , R22
009cd1 9370 1a7a+STS _a + ( 4 ) + 3 , R23
                 	__PUTD1MN _a,4
009cd3 940e c0a3 	CALL SUBOPT_0xBD
009cd5 940e c0ad 	CALL SUBOPT_0xBF
009cd7 940e d7dd 	CALL __MULF12
                +
009cd9 93e0 1a7b+STS _a + ( 8 ) , R30
009cdb 93f0 1a7c+STS _a + ( 8 ) + 1 , R31
009cdd 9360 1a7d+STS _a + ( 8 ) + 2 , R22
009cdf 9370 1a7e+STS _a + ( 8 ) + 3 , R23
                 	__PUTD1MN _a,8
009ce1 940e c149 	CALL SUBOPT_0xD6
                +
009ce3 93e0 1a7f+STS _a + ( 12 ) , R30
009ce5 93f0 1a80+STS _a + ( 12 ) + 1 , R31
009ce7 9360 1a81+STS _a + ( 12 ) + 2 , R22
009ce9 9370 1a82+STS _a + ( 12 ) + 3 , R23
                 	__PUTD1MN _a,12
                 ; 0018 005A     a[1][0] = 1.0;      a[1][1] = factor2;     a[1][2] = factor2 * factor2;  a[1][3] = ref2;
                +
009ceb e8e3     +LDI R30 , LOW ( _a + ( 16 ) )
009cec e1fa     +LDI R31 , HIGH ( _a + ( 16 ) )
                 	__POINTW1MN _a,16
009ced 940e d29b 	CALL SUBOPT_0x35C
009cef 940e c13a 	CALL SUBOPT_0xD3
                +
009cf1 93e0 1a87+STS _a + ( 20 ) , R30
009cf3 93f0 1a88+STS _a + ( 20 ) + 1 , R31
009cf5 9360 1a89+STS _a + ( 20 ) + 2 , R22
009cf7 9370 1a8a+STS _a + ( 20 ) + 3 , R23
                 	__PUTD1MN _a,20
009cf9 940e c13a 	CALL SUBOPT_0xD3
009cfb 940e c096 	CALL SUBOPT_0xBB
009cfd 940e d7dd 	CALL __MULF12
                +
009cff 93e0 1a8b+STS _a + ( 24 ) , R30
009d01 93f0 1a8c+STS _a + ( 24 ) + 1 , R31
009d03 9360 1a8d+STS _a + ( 24 ) + 2 , R22
009d05 9370 1a8e+STS _a + ( 24 ) + 3 , R23
                 	__PUTD1MN _a,24
009d07 940e be45 	CALL SUBOPT_0x60
                +
009d09 93e0 1a8f+STS _a + ( 28 ) , R30
009d0b 93f0 1a90+STS _a + ( 28 ) + 1 , R31
009d0d 9360 1a91+STS _a + ( 28 ) + 2 , R22
009d0f 9370 1a92+STS _a + ( 28 ) + 3 , R23
                 	__PUTD1MN _a,28
                 ; 0018 005B     a[2][0] = 1.0;      a[2][1] = factor3;     a[2][2] = factor3 * factor3;  a[2][3] = ref3;
                +
009d11 e9e3     +LDI R30 , LOW ( _a + ( 32 ) )
009d12 e1fa     +LDI R31 , HIGH ( _a + ( 32 ) )
                 	__POINTW1MN _a,32
009d13 940e d29b 	CALL SUBOPT_0x35C
009d15 940e c0c8 	CALL SUBOPT_0xC4
                +
009d17 93e0 1a97+STS _a + ( 36 ) , R30
009d19 93f0 1a98+STS _a + ( 36 ) + 1 , R31
009d1b 9360 1a99+STS _a + ( 36 ) + 2 , R22
009d1d 9370 1a9a+STS _a + ( 36 ) + 3 , R23
                 	__PUTD1MN _a,36
009d1f 940e c0c8 	CALL SUBOPT_0xC4
009d21 940e c13f 	CALL SUBOPT_0xD4
009d23 940e d7dd 	CALL __MULF12
                +
009d25 93e0 1a9b+STS _a + ( 40 ) , R30
009d27 93f0 1a9c+STS _a + ( 40 ) + 1 , R31
009d29 9360 1a9d+STS _a + ( 40 ) + 2 , R22
009d2b 9370 1a9e+STS _a + ( 40 ) + 3 , R23
                 	__PUTD1MN _a,40
009d2d 940e c14e 	CALL SUBOPT_0xD7
                +
009d2f 93e0 1a9f+STS _a + ( 44 ) , R30
009d31 93f0 1aa0+STS _a + ( 44 ) + 1 , R31
009d33 9360 1aa1+STS _a + ( 44 ) + 2 , R22
009d35 9370 1aa2+STS _a + ( 44 ) + 3 , R23
                 	__PUTD1MN _a,44
                 ; 0018 005C 
                 ; 0018 005D 
                 ; 0018 005E     printDebug("\r\n<gaussian> --- start ---\r\n");
                +
009d37 e0e6     +LDI R30 , LOW ( 2 * _0x300000 + ( 0 ) )
009d38 e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 0 ) )
009d39 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 0 ) )
009d3a e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 0 ) )
                 	__POINTD1FN _0x300000,0
009d3b 940e bbba 	CALL SUBOPT_0x3
                 ; 0018 005F     for (i = 0; i < n; ++i) {
                +
009d3d e000     +LDI R16 , LOW ( 0 )
009d3e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x30001B:
009d3f 940e d266 	CALL SUBOPT_0x352
009d41 170e      	CP   R16,R30
009d42 071f      	CPC  R17,R31
009d43 f4ac      	BRGE _0x30001C
                 ; 0018 0060         printDebug("\t\t");
009d44 940e d2a1 	CALL SUBOPT_0x35D
                 ; 0018 0061         for (j = 0; j < n + 1; ++j)
                +
009d46 e020     +LDI R18 , LOW ( 0 )
009d47 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x30001E:
009d48 940e d27c 	CALL SUBOPT_0x356
009d4a f44c      	BRGE _0x30001F
                 ; 0018 0062             printDebug("%.2f\t", a[i][j]);
009d4b 940e d2a7 	CALL SUBOPT_0x35E
009d4d 940e d281 	CALL SUBOPT_0x357
009d4f 940e c58e 	CALL SUBOPT_0x18B
                +
009d51 5f2f     +SUBI R18 , LOW ( - 1 )
009d52 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009d53 cff4      	RJMP _0x30001E
                 _0x30001F:
                 ; 0018 0063 printDebug("\r\n");
009d54 940e d2ae 	CALL SUBOPT_0x35F
                 ; 0018 0064     }
                +
009d56 5f0f     +SUBI R16 , LOW ( - 1 )
009d57 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009d58 cfe6      	RJMP _0x30001B
                 _0x30001C:
                 ; 0018 0065 
                 ; 0018 0066     forwardSubstitution();
009d59 de42      	RCALL _forwardSubstitution
                 ; 0018 0067     reverseElimination();
009d5a dee9      	RCALL _reverseElimination
                 ; 0018 0068 
                 ; 0018 0069     printDebug("\r\n<gaussian> --- finish ---\r\n");
                +
009d5b e2ec     +LDI R30 , LOW ( 2 * _0x300000 + ( 38 ) )
009d5c e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 38 ) )
009d5d e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 38 ) )
009d5e e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 38 ) )
                 	__POINTD1FN _0x300000,38
009d5f 940e bbba 	CALL SUBOPT_0x3
                 ; 0018 006A     for (i = 0; i < n; ++i) {
                +
009d61 e000     +LDI R16 , LOW ( 0 )
009d62 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                 _0x300021:
009d63 940e d266 	CALL SUBOPT_0x352
009d65 170e      	CP   R16,R30
009d66 071f      	CPC  R17,R31
009d67 f4ac      	BRGE _0x300022
                 ; 0018 006B         printDebug("\t\t");
009d68 940e d2a1 	CALL SUBOPT_0x35D
                 ; 0018 006C         for (j = 0; j < n + 1; ++j)
                +
009d6a e020     +LDI R18 , LOW ( 0 )
009d6b e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                 _0x300024:
009d6c 940e d27c 	CALL SUBOPT_0x356
009d6e f44c      	BRGE _0x300025
                 ; 0018 006D             printDebug("%.2f\t", a[i][j]);
009d6f 940e d2a7 	CALL SUBOPT_0x35E
009d71 940e d281 	CALL SUBOPT_0x357
009d73 940e c58e 	CALL SUBOPT_0x18B
                +
009d75 5f2f     +SUBI R18 , LOW ( - 1 )
009d76 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009d77 cff4      	RJMP _0x300024
                 _0x300025:
                 ; 0018 006E printDebug("\r\n");
009d78 940e d2ae 	CALL SUBOPT_0x35F
                 ; 0018 006F     }
                +
009d7a 5f0f     +SUBI R16 , LOW ( - 1 )
009d7b 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
009d7c cfe6      	RJMP _0x300021
                 _0x300022:
                 ; 0018 0070 
                 ; 0018 0071     *resA = a[2][3];
                +
009d7d 91e0 1a9f+LDS R30 , _a + ( 44 )
009d7f 91f0 1aa0+LDS R31 , _a + ( 44 ) + 1
009d81 9160 1aa1+LDS R22 , _a + ( 44 ) + 2
009d83 9170 1aa2+LDS R23 , _a + ( 44 ) + 3
                 	__GETD1MN _a,44
009d85 85a8      	LDD  R26,Y+8
009d86 85b9      	LDD  R27,Y+8+1
009d87 940e d9ff 	CALL __PUTDP1
                 ; 0018 0072     *resB = a[1][3];
                +
009d89 91e0 1a8f+LDS R30 , _a + ( 28 )
009d8b 91f0 1a90+LDS R31 , _a + ( 28 ) + 1
009d8d 9160 1a91+LDS R22 , _a + ( 28 ) + 2
009d8f 9170 1a92+LDS R23 , _a + ( 28 ) + 3
                 	__GETD1MN _a,28
009d91 81ae      	LDD  R26,Y+6
009d92 81bf      	LDD  R27,Y+6+1
009d93 940e d9ff 	CALL __PUTDP1
                 ; 0018 0073     *resC = a[0][3];
                +
009d95 91e0 1a7f+LDS R30 , _a + ( 12 )
009d97 91f0 1a80+LDS R31 , _a + ( 12 ) + 1
009d99 9160 1a81+LDS R22 , _a + ( 12 ) + 2
009d9b 9170 1a82+LDS R23 , _a + ( 12 ) + 3
                 	__GETD1MN _a,12
009d9d 81ac      	LDD  R26,Y+4
009d9e 81bd      	LDD  R27,Y+4+1
009d9f 940e d9ff 	CALL __PUTDP1
                 ; 0018 0074 
                 ; 0018 0075     printDebug("\r\n<gaussian> y = %f(x^2) + %f(x) + %f\r\n",*resA,*resB,*resC);
                +
009da1 e4ea     +LDI R30 , LOW ( 2 * _0x300000 + ( 68 ) )
009da2 e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 68 ) )
009da3 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 68 ) )
009da4 e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 68 ) )
                 	__POINTD1FN _0x300000,68
009da5 940e da29 	CALL __PUTPARD1
009da7 85ac      	LDD  R26,Y+12
009da8 85bd      	LDD  R27,Y+12+1
009da9 940e d2b4 	CALL SUBOPT_0x360
009dab 85ae      	LDD  R26,Y+14
009dac 85bf      	LDD  R27,Y+14+1
009dad 940e d2b4 	CALL SUBOPT_0x360
009daf 89a8      	LDD  R26,Y+16
009db0 89b9      	LDD  R27,Y+16+1
009db1 940e d9f4 	CALL __GETD1P
009db3 940e bf76 	CALL SUBOPT_0x8E
                 ; 0018 0076 
                 ; 0018 0077     return;
009db5 940e daa2 	CALL __LOADLOCR4
009db7 96a2      	ADIW R28,34
009db8 9508      	RET
                 ; 0018 0078 }
                 
                 	.CSEG
                 _fabs:
009db9 940e da2e 	CALL __PUTPARD2
009dbb 91e9          ld   r30,y+
009dbc 91f9          ld   r31,y+
009dbd 9169          ld   r22,y+
009dbe 9179          ld   r23,y+
009dbf 777f          cbr  r23,0x80
009dc0 9508          ret
                 _atoi:
009dc1 93ba      	ST   -Y,R27
009dc2 93aa      	ST   -Y,R26
009dc3 81b9         	ldd  r27,y+1
009dc4 81a8         	ld   r26,y
                 __atoi0:
009dc5 91ec         	ld   r30,x
009dc6 2f8a              mov  r24,r26
009dc7 2fae      	MOV  R26,R30
009dc8 940e bb3c 	CALL _isspace
009dca 2fa8              mov  r26,r24
009dcb 23ee         	tst  r30
009dcc f011         	breq __atoi1
009dcd 9611         	adiw r26,1
009dce cff6         	rjmp __atoi0
                 __atoi1:
009dcf 94e8         	clt
009dd0 91ec         	ld   r30,x
009dd1 32ed         	cpi  r30,'-'
009dd2 f411         	brne __atoi2
009dd3 9468         	set
009dd4 c002         	rjmp __atoi3
                 __atoi2:
009dd5 32eb         	cpi  r30,'+'
009dd6 f409         	brne __atoi4
                 __atoi3:
009dd7 9611         	adiw r26,1
                 __atoi4:
009dd8 2766         	clr  r22
009dd9 2777         	clr  r23
                 __atoi5:
009dda 91ec         	ld   r30,x
009ddb 2f8a              mov  r24,r26
009ddc 2fae      	MOV  R26,R30
009ddd 940e bb2a 	CALL _isdigit
009ddf 2fa8              mov  r26,r24
009de0 23ee         	tst  r30
009de1 f079         	breq __atoi6
009de2 01fb         	movw r30,r22
009de3 0f66         	lsl  r22
009de4 1f77         	rol  r23
009de5 0f66         	lsl  r22
009de6 1f77         	rol  r23
009de7 0f6e         	add  r22,r30
009de8 1f7f         	adc  r23,r31
009de9 0f66         	lsl  r22
009dea 1f77         	rol  r23
009deb 91ed         	ld   r30,x+
009dec 27ff         	clr  r31
009ded 53e0         	subi r30,'0'
009dee 0f6e         	add  r22,r30
009def 1f7f         	adc  r23,r31
009df0 cfe9         	rjmp __atoi5
                 __atoi6:
009df1 01fb         	movw r30,r22
009df2 f41e         	brtc __atoi7
009df3 95e0         	com  r30
009df4 95f0         	com  r31
009df5 9631         	adiw r30,1
                 __atoi7:
009df6 9622         	adiw r28,2
009df7 9508         	ret
                 _atol:
009df8 93ba      	ST   -Y,R27
009df9 93aa      	ST   -Y,R26
009dfa 81b9          ldd  r27,y+1
009dfb 81a8          ld   r26,y
                 __atol0:
009dfc 91ec          ld   r30,x
009dfd 93af          push r26
009dfe 2fae      	MOV  R26,R30
009dff 940e bb3c 	CALL _isspace
009e01 91af          pop  r26
009e02 23ee          tst  r30
009e03 f011          breq __atol1
009e04 9611          adiw r26,1
009e05 cff6          rjmp __atol0
                 __atol1:
009e06 94e8          clt
009e07 91ec          ld   r30,x
009e08 32ed          cpi  r30,'-'
009e09 f411          brne __atol2
009e0a 9468          set
009e0b c002          rjmp __atol3
                 __atol2:
009e0c 32eb          cpi  r30,'+'
009e0d f409          brne __atol4
                 __atol3:
009e0e 9611          adiw r26,1
                 __atol4:
009e0f 2400          clr  r0
009e10 2411          clr  r1
009e11 2788          clr  r24
009e12 2799          clr  r25
                 __atol5:
009e13 91ec          ld   r30,x
009e14 93af          push r26
009e15 2fae      	MOV  R26,R30
009e16 940e bb2a 	CALL _isdigit
009e18 91af          pop  r26
009e19 23ee          tst  r30
009e1a f089          breq __atol6
009e1b 01f0          movw r30,r0
009e1c 01bc          movw r22,r24
009e1d d01b          rcall __atol8
009e1e d01a          rcall __atol8
009e1f 0e0e          add  r0,r30
009e20 1e1f          adc  r1,r31
009e21 1f86          adc  r24,r22
009e22 1f97          adc  r25,r23
009e23 d015          rcall __atol8
009e24 91ed          ld   r30,x+
009e25 27ff          clr  r31
009e26 53e0          subi r30,'0'
009e27 0e0e          add  r0,r30
009e28 1e1f          adc  r1,r31
009e29 1f8f          adc  r24,r31
009e2a 1f9f          adc  r25,r31
009e2b cfe7          rjmp __atol5
                 __atol6:
009e2c 01f0          movw r30,r0
009e2d 01bc          movw r22,r24
009e2e f446          brtc __atol7
009e2f 95e0          com  r30
009e30 95f0          com  r31
009e31 9560          com  r22
009e32 9570          com  r23
009e33 2788          clr  r24
009e34 9631          adiw r30,1
009e35 1f68          adc  r22,r24
009e36 1f78          adc  r23,r24
                 __atol7:
009e37 9622          adiw r28,2
009e38 9508          ret
                 
                 __atol8:
009e39 0c00          lsl  r0
009e3a 1c11          rol  r1
009e3b 1f88          rol  r24
009e3c 1f99          rol  r25
009e3d 9508          ret
                 _ftoa:
009e3e 940e d25d 	CALL SUBOPT_0x350
009e40 83e8      	ST   Y,R30
009e41 e0e0      	LDI  R30,LOW(0)
009e42 83e9      	STD  Y+1,R30
009e43 83ea      	STD  Y+2,R30
009e44 e3ef      	LDI  R30,LOW(63)
009e45 83eb      	STD  Y+3,R30
009e46 931a      	ST   -Y,R17
009e47 930a      	ST   -Y,R16
009e48 85eb      	LDD  R30,Y+11
009e49 85fc      	LDD  R31,Y+11+1
009e4a 3fef      	CPI  R30,LOW(0xFFFF)
009e4b efaf      	LDI  R26,HIGH(0xFFFF)
009e4c 07fa      	CPC  R31,R26
009e4d f449      	BRNE _0x200000D
009e4e 940e c45c 	CALL SUBOPT_0x15C
                +
009e50 e7a4     +LDI R26 , LOW ( 2 * _0x2000000 + ( 0 ) )
009e51 e6b7     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 0 ) )
009e52 e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 0 ) )
009e53 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 0 ) )
                 	__POINTD2FN _0x2000000,0
009e54 940e a145 	CALL _strcpyf
009e56 c0a1      	RJMP _0x20E002D
                 _0x200000D:
009e57 3fef      	CPI  R30,LOW(0x7FFF)
009e58 e7af      	LDI  R26,HIGH(0x7FFF)
009e59 07fa      	CPC  R31,R26
009e5a f449      	BRNE _0x200000C
009e5b 940e c45c 	CALL SUBOPT_0x15C
                +
009e5d e7a5     +LDI R26 , LOW ( 2 * _0x2000000 + ( 1 ) )
009e5e e6b7     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 1 ) )
009e5f e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 1 ) )
009e60 e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 1 ) )
                 	__POINTD2FN _0x2000000,1
009e61 940e a145 	CALL _strcpyf
009e63 c094      	RJMP _0x20E002D
                 _0x200000C:
009e64 85ac      	LDD  R26,Y+12
009e65 23aa      	TST  R26
009e66 f452      	BRPL _0x200000F
009e67 940e be8c 	CALL SUBOPT_0x6B
009e69 940e d6e7 	CALL __ANEGF1
009e6b 940e d2b9 	CALL SUBOPT_0x361
009e6d 940e d2be 	CALL SUBOPT_0x362
009e6f e2ed      	LDI  R30,LOW(45)
009e70 93ec      	ST   X,R30
                 _0x200000F:
009e71 85a8      	LDD  R26,Y+8
009e72 30a7      	CPI  R26,LOW(0x7)
009e73 f010      	BRLO _0x2000010
009e74 e0e6      	LDI  R30,LOW(6)
009e75 87e8      	STD  Y+8,R30
                 _0x2000010:
009e76 8518      	LDD  R17,Y+8
                 _0x2000011:
009e77 2fe1      	MOV  R30,R17
009e78 5011      	SUBI R17,1
009e79 30e0      	CPI  R30,0
009e7a f029      	BREQ _0x2000013
009e7b 940e d2c5 	CALL SUBOPT_0x363
009e7d 940e c072 	CALL SUBOPT_0xB4
009e7f cff7      	RJMP _0x2000011
                 _0x2000013:
009e80 940e d2ce 	CALL SUBOPT_0x364
009e82 940e d78d 	CALL __ADDF12
009e84 940e d2b9 	CALL SUBOPT_0x361
009e86 e010      	LDI  R17,LOW(0)
009e87 940e d296 	CALL SUBOPT_0x35B
009e89 940e c072 	CALL SUBOPT_0xB4
                 _0x2000014:
009e8b 940e d2ce 	CALL SUBOPT_0x364
009e8d 940e d870 	CALL __CMPF12
009e8f f098      	BRLO _0x2000016
009e90 940e c07c 	CALL SUBOPT_0xB6
009e92 940e d2d5 	CALL SUBOPT_0x365
009e94 940e c072 	CALL SUBOPT_0xB4
009e96 5f1f      	SUBI R17,-LOW(1)
009e97 3217      	CPI  R17,39
009e98 f048      	BRLO _0x2000017
009e99 940e c45c 	CALL SUBOPT_0x15C
                +
009e9b e7a9     +LDI R26 , LOW ( 2 * _0x2000000 + ( 5 ) )
009e9c e6b7     +LDI R27 , HIGH ( 2 * _0x2000000 + ( 5 ) )
009e9d e080     +LDI R24 , BYTE3 ( 2 * _0x2000000 + ( 5 ) )
009e9e e090     +LDI R25 , BYTE4 ( 2 * _0x2000000 + ( 5 ) )
                 	__POINTD2FN _0x2000000,5
009e9f 940e a145 	CALL _strcpyf
009ea1 c056      	RJMP _0x20E002D
                 _0x2000017:
009ea2 cfe8      	RJMP _0x2000014
                 _0x2000016:
009ea3 3010      	CPI  R17,0
009ea4 f429      	BRNE _0x2000018
009ea5 940e d2be 	CALL SUBOPT_0x362
009ea7 e3e0      	LDI  R30,LOW(48)
009ea8 93ec      	ST   X,R30
009ea9 c026      	RJMP _0x2000019
                 _0x2000018:
                 _0x200001A:
009eaa 2fe1      	MOV  R30,R17
009eab 5011      	SUBI R17,1
009eac 30e0      	CPI  R30,0
009ead f111      	BREQ _0x200001C
009eae 940e d2c5 	CALL SUBOPT_0x363
009eb0 940e d2da 	CALL SUBOPT_0x366
009eb2 01df      	MOVW R26,R30
009eb3 01cb      	MOVW R24,R22
009eb4 940e bb8f 	CALL _floor
009eb6 940e c072 	CALL SUBOPT_0xB4
009eb8 940e d2ce 	CALL SUBOPT_0x364
009eba 940e d82b 	CALL __DIVF21
009ebc 940e d71a 	CALL __CFD1U
009ebe 2f0e      	MOV  R16,R30
009ebf 940e d2be 	CALL SUBOPT_0x362
009ec1 940e d2df 	CALL SUBOPT_0x367
009ec3 940e c07c 	CALL SUBOPT_0xB6
009ec5 940e d2e5 	CALL SUBOPT_0x368
009ec7 940e d7dd 	CALL __MULF12
009ec9 940e d2ea 	CALL SUBOPT_0x369
009ecb 940e c92f 	CALL SUBOPT_0x220
009ecd 940e d2b9 	CALL SUBOPT_0x361
009ecf cfda      	RJMP _0x200001A
                 _0x200001C:
                 _0x2000019:
009ed0 85e8      	LDD  R30,Y+8
009ed1 30e0      	CPI  R30,0
009ed2 f109      	BREQ _0x20E002C
009ed3 940e d2be 	CALL SUBOPT_0x362
009ed5 e2ee      	LDI  R30,LOW(46)
009ed6 93ec      	ST   X,R30
                 _0x200001E:
009ed7 85e8      	LDD  R30,Y+8
009ed8 50e1      	SUBI R30,LOW(1)
009ed9 87e8      	STD  Y+8,R30
009eda 5fef      	SUBI R30,-LOW(1)
009edb f0c1      	BREQ _0x2000020
009edc 940e d2ea 	CALL SUBOPT_0x369
009ede 940e d2d5 	CALL SUBOPT_0x365
009ee0 940e d2b9 	CALL SUBOPT_0x361
009ee2 940e be8c 	CALL SUBOPT_0x6B
009ee4 940e d71a 	CALL __CFD1U
009ee6 2f0e      	MOV  R16,R30
009ee7 940e d2be 	CALL SUBOPT_0x362
009ee9 940e d2df 	CALL SUBOPT_0x367
009eeb 940e d2ea 	CALL SUBOPT_0x369
009eed 940e d2e5 	CALL SUBOPT_0x368
009eef 940e c92f 	CALL SUBOPT_0x220
009ef1 940e d2b9 	CALL SUBOPT_0x361
009ef3 cfe3      	RJMP _0x200001E
                 _0x2000020:
                 _0x20E002C:
009ef4 81ae      	LDD  R26,Y+6
009ef5 81bf      	LDD  R27,Y+6+1
009ef6 e0e0      	LDI  R30,LOW(0)
009ef7 93ec      	ST   X,R30
                 _0x20E002D:
009ef8 8119      	LDD  R17,Y+1
009ef9 8108      	LDD  R16,Y+0
009efa 962d      	ADIW R28,13
009efb 9508      	RET
                 _atof:
009efc 93ba      	ST   -Y,R27
009efd 93aa      	ST   -Y,R26
009efe 972a      	SBIW R28,10
009eff 940e da99 	CALL __SAVELOCR6
009f01 e0e0      	LDI  R30,LOW(0)
                +
009f02 87e8     +STD Y + 8 , R30
009f03 87e9     +STD Y + 8 + 1 , R30
009f04 87ea     +STD Y + 8 + 2 , R30
009f05 87eb     +STD Y + 8 + 3 , R30
                 	__CLRD1S 8
                 _0x200003C:
009f06 89a8      	LDD  R26,Y+16
009f07 89b9      	LDD  R27,Y+16+1
009f08 91ec      	LD   R30,X
009f09 2f5e      	MOV  R21,R30
009f0a 2fae      	MOV  R26,R30
009f0b 940e bb3c 	CALL _isspace
009f0d 30e0      	CPI  R30,0
009f0e f019      	BREQ _0x200003E
009f0f 940e d2ef 	CALL SUBOPT_0x36A
009f11 cff4      	RJMP _0x200003C
                 _0x200003E:
009f12 e0e0      	LDI  R30,LOW(0)
009f13 83ef      	STD  Y+7,R30
009f14 325b      	CPI  R21,43
009f15 f021      	BREQ _0x2000073
009f16 325d      	CPI  R21,45
009f17 f439      	BRNE _0x2000041
009f18 e0e1      	LDI  R30,LOW(1)
009f19 83ef      	STD  Y+7,R30
                 _0x2000073:
009f1a 89e8      	LDD  R30,Y+16
009f1b 89f9      	LDD  R31,Y+16+1
009f1c 9631      	ADIW R30,1
009f1d 8be8      	STD  Y+16,R30
009f1e 8bf9      	STD  Y+16+1,R31
                 _0x2000041:
009f1f e0e0      	LDI  R30,LOW(0)
009f20 2f4e      	MOV  R20,R30
009f21 2f5e      	MOV  R21,R30
                +
009f22 8908     +LDD R16 , Y + 16
009f23 8919     +LDD R17 , Y + 16 + 1
                 	__GETWRS 16,17,16
                 _0x2000042:
009f24 89a8      	LDD  R26,Y+16
009f25 89b9      	LDD  R27,Y+16+1
009f26 940e d221 	CALL SUBOPT_0x347
009f28 f449      	BRNE _0x2000045
009f29 89a8      	LDD  R26,Y+16
009f2a 89b9      	LDD  R27,Y+16+1
009f2b 91ac      	LD   R26,X
009f2c e2ee      	LDI  R30,LOW(46)
009f2d 940e d923 	CALL __EQB12
009f2f 2f5e      	MOV  R21,R30
009f30 30e0      	CPI  R30,0
009f31 f021      	BREQ _0x2000044
                 _0x2000045:
009f32 2b45      	OR   R20,R21
009f33 940e d2ef 	CALL SUBOPT_0x36A
009f35 cfee      	RJMP _0x2000042
                 _0x2000044:
                +
009f36 8928     +LDD R18 , Y + 16
009f37 8939     +LDD R19 , Y + 16 + 1
                 	__GETWRS 18,19,16
009f38 3040      	CPI  R20,0
009f39 f0e9      	BREQ _0x2000047
009f3a 89e8      	LDD  R30,Y+16
009f3b 89f9      	LDD  R31,Y+16+1
009f3c 9731      	SBIW R30,1
009f3d 8be8      	STD  Y+16,R30
009f3e 8bf9      	STD  Y+16+1,R31
                 _0x2000048:
009f3f 89a8      	LDD  R26,Y+16
009f40 89b9      	LDD  R27,Y+16+1
009f41 91ac      	LD   R26,X
009f42 32ae      	CPI  R26,LOW(0x2E)
009f43 f099      	BREQ _0x200004A
009f44 89a8      	LDD  R26,Y+16
009f45 89b9      	LDD  R27,Y+16+1
009f46 940e d1d6 	CALL SUBOPT_0x339
009f48 97f0      	SBIW R30,48
009f49 940e c15d 	CALL SUBOPT_0xDB
009f4b 940e d2e5 	CALL SUBOPT_0x368
009f4d 940e c005 	CALL SUBOPT_0xA1
009f4f 940e d1ed 	CALL SUBOPT_0x33E
009f51 89e8      	LDD  R30,Y+16
009f52 89f9      	LDD  R31,Y+16+1
009f53 9731      	SBIW R30,1
009f54 8be8      	STD  Y+16,R30
009f55 8bf9      	STD  Y+16+1,R31
009f56 cfe8      	RJMP _0x2000048
                 _0x200004A:
                 _0x2000047:
009f57 940e d296 	CALL SUBOPT_0x35B
009f59 940e c1d3 	CALL SUBOPT_0xED
                 _0x200004B:
009f5b 89a8      	LDD  R26,Y+16
009f5c 89b9      	LDD  R27,Y+16+1
009f5d 9711      	SBIW R26,1
009f5e 8ba8      	STD  Y+16,R26
009f5f 8bb9      	STD  Y+16+1,R27
009f60 17a0      	CP   R26,R16
009f61 07b1      	CPC  R27,R17
009f62 f0a0      	BRLO _0x200004D
009f63 940e d1d6 	CALL SUBOPT_0x339
009f65 97f0      	SBIW R30,48
009f66 940e bbfc 	CALL SUBOPT_0xB
009f68 940e d2e5 	CALL SUBOPT_0x368
009f6a 940e d7dd 	CALL __MULF12
009f6c 940e c15d 	CALL SUBOPT_0xDB
009f6e 940e d78d 	CALL __ADDF12
009f70 940e d1ed 	CALL SUBOPT_0x33E
009f72 940e d2f5 	CALL SUBOPT_0x36B
009f74 940e c1d3 	CALL SUBOPT_0xED
009f76 cfe4      	RJMP _0x200004B
                 _0x200004D:
009f77 01d9      	MOVW R26,R18
                +
009f78 5f2f     +SUBI R18 , LOW ( - 1 )
009f79 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009f7a 915c      	LD   R21,X
009f7b 3655      	CPI  R21,101
009f7c f019      	BREQ _0x200004F
009f7d 3455      	CPI  R21,69
009f7e f009      	BREQ _0x200004F
009f7f c057      	RJMP _0x200004E
                 _0x200004F:
009f80 e0e0      	LDI  R30,LOW(0)
009f81 2f4e      	MOV  R20,R30
009f82 83ee      	STD  Y+6,R30
009f83 01d9      	MOVW R26,R18
009f84 915c      	LD   R21,X
009f85 325b      	CPI  R21,43
009f86 f021      	BREQ _0x2000074
009f87 325d      	CPI  R21,45
009f88 f421      	BRNE _0x2000053
009f89 e0e1      	LDI  R30,LOW(1)
009f8a 83ee      	STD  Y+6,R30
                 _0x2000074:
                +
009f8b 5f2f     +SUBI R18 , LOW ( - 1 )
009f8c 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
                 _0x2000053:
                 _0x2000054:
009f8d 01d9      	MOVW R26,R18
                +
009f8e 5f2f     +SUBI R18 , LOW ( - 1 )
009f8f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
009f90 91ec      	LD   R30,X
009f91 2f5e      	MOV  R21,R30
009f92 2fae      	MOV  R26,R30
009f93 940e bb2a 	CALL _isdigit
009f95 30e0      	CPI  R30,0
009f96 f039      	BREQ _0x2000056
009f97 e0aa      	LDI  R26,LOW(10)
009f98 024a      	MULS R20,R26
009f99 01f0      	MOVW R30,R0
009f9a 0fe5      	ADD  R30,R21
009f9b 53e0      	SUBI R30,LOW(48)
009f9c 2f4e      	MOV  R20,R30
009f9d cfef      	RJMP _0x2000054
                 _0x2000056:
009f9e 3247      	CPI  R20,39
009f9f f068      	BRLO _0x2000057
009fa0 81ef      	LDD  R30,Y+7
009fa1 30e0      	CPI  R30,0
009fa2 f029      	BREQ _0x2000058
                +
009fa3 efef     +LDI R30 , LOW ( 0xFF7FFFFF )
009fa4 efff     +LDI R31 , HIGH ( 0xFF7FFFFF )
009fa5 e76f     +LDI R22 , BYTE3 ( 0xFF7FFFFF )
009fa6 ef7f     +LDI R23 , BYTE4 ( 0xFF7FFFFF )
                 	__GETD1N 0xFF7FFFFF
009fa7 c03a      	RJMP _0x20E002B
                 _0x2000058:
                +
009fa8 efef     +LDI R30 , LOW ( 0x7F7FFFFF )
009fa9 efff     +LDI R31 , HIGH ( 0x7F7FFFFF )
009faa e76f     +LDI R22 , BYTE3 ( 0x7F7FFFFF )
009fab e77f     +LDI R23 , BYTE4 ( 0x7F7FFFFF )
                 	__GETD1N 0x7F7FFFFF
009fac c035      	RJMP _0x20E002B
                 _0x2000057:
009fad e250      	LDI  R21,LOW(32)
009fae 940e d296 	CALL SUBOPT_0x35B
009fb0 940e c1d3 	CALL SUBOPT_0xED
                 _0x2000059:
009fb2 3050      	CPI  R21,0
009fb3 f079      	BREQ _0x200005B
009fb4 940e c162 	CALL SUBOPT_0xDC
009fb6 940e bbfc 	CALL SUBOPT_0xB
009fb8 940e d2f8 	CALL SUBOPT_0x36C
009fba 2fe4      	MOV  R30,R20
009fbb 23e5      	AND  R30,R21
009fbc f021      	BREQ _0x200005C
009fbd 940e d2f5 	CALL SUBOPT_0x36B
009fbf 940e c1d3 	CALL SUBOPT_0xED
                 _0x200005C:
009fc1 9556      	LSR  R21
009fc2 cfef      	RJMP _0x2000059
                 _0x200005B:
009fc3 81ee      	LDD  R30,Y+6
009fc4 30e0      	CPI  R30,0
009fc5 f039      	BREQ _0x200005D
009fc6 940e c162 	CALL SUBOPT_0xDC
009fc8 940e c15d 	CALL SUBOPT_0xDB
009fca 940e d82b 	CALL __DIVF21
009fcc c006      	RJMP _0x2000075
                 _0x200005D:
009fcd 940e c162 	CALL SUBOPT_0xDC
009fcf 940e c15d 	CALL SUBOPT_0xDB
009fd1 940e d7dd 	CALL __MULF12
                 _0x2000075:
                +
009fd3 87e8     +STD Y + 8 , R30
009fd4 87f9     +STD Y + 8 + 1 , R31
009fd5 876a     +STD Y + 8 + 2 , R22
009fd6 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
                 _0x200004E:
009fd7 81ef      	LDD  R30,Y+7
009fd8 30e0      	CPI  R30,0
009fd9 f031      	BREQ _0x200005F
009fda 940e bdd3 	CALL SUBOPT_0x4F
009fdc 940e d6e7 	CALL __ANEGF1
009fde 940e d1ed 	CALL SUBOPT_0x33E
                 _0x200005F:
009fe0 940e bdd3 	CALL SUBOPT_0x4F
                 _0x20E002B:
009fe2 940e daa0 	CALL __LOADLOCR6
009fe4 9662      	ADIW R28,18
009fe5 9508      	RET
                 
                 	.DSEG
                 
                 	.CSEG
                 _srand:
009fe6 940e bfb0 	CALL SUBOPT_0x95
009fe8 940e d919 	CALL __CWD1
009fea 940e d2fc 	CALL SUBOPT_0x36D
009fec c0d7      	RJMP _0x20E0027
                 _rand:
009fed 91e0 1aa3 	LDS  R30,__seed_G100
009fef 91f0 1aa4 	LDS  R31,__seed_G100+1
009ff1 9160 1aa5 	LDS  R22,__seed_G100+2
009ff3 9170 1aa6 	LDS  R23,__seed_G100+3
                +
009ff5 e6ad     +LDI R26 , LOW ( 0x41C64E6D )
009ff6 e4be     +LDI R27 , HIGH ( 0x41C64E6D )
009ff7 ec86     +LDI R24 , BYTE3 ( 0x41C64E6D )
009ff8 e491     +LDI R25 , BYTE4 ( 0x41C64E6D )
                 	__GETD2N 0x41C64E6D
009ff9 940e d93a 	CALL __MULD12U
                +
009ffb 59ee     +SUBI R30 , LOW ( - 30562 )
009ffc 48f8     +SBCI R31 , HIGH ( - 30562 )
009ffd 4f6f     +SBCI R22 , BYTE3 ( - 30562 )
009ffe 4f7f     +SBCI R23 , BYTE4 ( - 30562 )
                 	__ADDD1N 30562
009fff 940e d2fc 	CALL SUBOPT_0x36D
00a001 01fb      	movw r30,r22
00a002 77ff      	andi r31,0x7F
00a003 9508      	RET
                 _allocate_block_G100:
00a004 940e d0ee 	CALL SUBOPT_0x322
                +
00a006 e80a     +LDI R16 , LOW ( 7562 )
00a007 e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
00a008 01d8      	MOVW R26,R16
00a009 940e c2b0 	CALL SUBOPT_0x115
                 _0x2000061:
00a00b 2e00      	MOV  R0,R16
00a00c 2a01      	OR   R0,R17
00a00d f199      	BREQ _0x2000063
00a00e 01d8      	MOVW R26,R16
00a00f 940e d9f0 	CALL __GETW1P
00a011 0fe0      	ADD  R30,R16
00a012 1ff1      	ADC  R31,R17
00a013 9634      	ADIW R30,4
00a014 01af      	MOVW R20,R30
00a015 9612      	ADIW R26,2
00a016 940e d9f0 	CALL __GETW1P
00a018 019f      	MOVW R18,R30
00a019 9730      	SBIW R30,0
00a01a f019      	BREQ _0x2000064
                +
00a01b 832e     +STD Y + 6 , R18
00a01c 833f     +STD Y + 6 + 1 , R19
                 	__PUTWSR 18,19,6
00a01d c004      	RJMP _0x2000065
                 _0x2000064:
00a01e e0e0      	LDI  R30,LOW(8704)
00a01f e2f2      	LDI  R31,HIGH(8704)
00a020 83ee      	STD  Y+6,R30
00a021 83ff      	STD  Y+6+1,R31
                 _0x2000065:
00a022 81ae      	LDD  R26,Y+6
00a023 81bf      	LDD  R27,Y+6+1
00a024 1ba4      	SUB  R26,R20
00a025 0bb5      	SBC  R27,R21
00a026 85e8      	LDD  R30,Y+8
00a027 85f9      	LDD  R31,Y+8+1
00a028 9634      	ADIW R30,4
00a029 17ae      	CP   R26,R30
00a02a 07bf      	CPC  R27,R31
00a02b f098      	BRLO _0x2000066
00a02c 01fa      	MOVW R30,R20
                +
00a02d 01d8     +MOVW R26 , R16
00a02e 9612     +ADIW R26 , 2
00a02f 93ed     +ST X + , R30
00a030 93fc     +ST X , R31
                 	__PUTW1RNS 16,2
00a031 01f9      	MOVW R30,R18
                +
00a032 01da     +MOVW R26 , R20
00a033 9612     +ADIW R26 , 2
00a034 93ed     +ST X + , R30
00a035 93fc     +ST X , R31
                 	__PUTW1RNS 20,2
00a036 85e8      	LDD  R30,Y+8
00a037 85f9      	LDD  R31,Y+8+1
00a038 01da      	MOVW R26,R20
00a039 93ed      	ST   X+,R30
00a03a 93fc      	ST   X,R31
                +
00a03b 5f4c     +SUBI R20 , LOW ( - 4 )
00a03c 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
00a03d 01fa      	MOVW R30,R20
00a03e c004      	RJMP _0x20E002A
                 _0x2000066:
00a03f 0189      	MOVW R16,R18
00a040 cfca      	RJMP _0x2000061
                 _0x2000063:
00a041 e0e0      	LDI  R30,LOW(0)
00a042 e0f0      	LDI  R31,HIGH(0)
                 _0x20E002A:
00a043 940e daa0 	CALL __LOADLOCR6
00a045 962a      	ADIW R28,10
00a046 9508      	RET
                 _find_prev_block_G100:
00a047 940e bf1b 	CALL SUBOPT_0x7F
                +
00a049 e80a     +LDI R16 , LOW ( 7562 )
00a04a e11d     +LDI R17 , HIGH ( 7562 )
                 	__GETWRN 16,17,7562
                 _0x2000067:
00a04b 2e00      	MOV  R0,R16
00a04c 2a01      	OR   R0,R17
00a04d f079      	BREQ _0x2000069
00a04e 01d8      	MOVW R26,R16
00a04f 9612      	ADIW R26,2
00a050 940e d9f0 	CALL __GETW1P
00a052 019f      	MOVW R18,R30
00a053 01df      	MOVW R26,R30
00a054 81ec      	LDD  R30,Y+4
00a055 81fd      	LDD  R31,Y+4+1
00a056 17ea      	CP   R30,R26
00a057 07fb      	CPC  R31,R27
00a058 f411      	BRNE _0x200006A
00a059 01f8      	MOVW R30,R16
00a05a c004      	RJMP _0x20E0028
                 _0x200006A:
00a05b 0189      	MOVW R16,R18
00a05c cfee      	RJMP _0x2000067
                 _0x2000069:
00a05d e0e0      	LDI  R30,LOW(0)
00a05e e0f0      	LDI  R31,HIGH(0)
                 _0x20E0028:
00a05f 940e daa2 	CALL __LOADLOCR4
                 _0x20E0029:
00a061 9626      	ADIW R28,6
00a062 9508      	RET
                 _realloc:
00a063 940e d0ee 	CALL SUBOPT_0x322
00a065 85ea      	LDD  R30,Y+10
00a066 85fb      	LDD  R31,Y+10+1
00a067 9730      	SBIW R30,0
00a068 f1a9      	BREQ _0x200006B
00a069 9734      	SBIW R30,4
00a06a 018f      	MOVW R16,R30
00a06b 01d8      	MOVW R26,R16
00a06c dfda      	RCALL _find_prev_block_G100
00a06d 019f      	MOVW R18,R30
00a06e 9730      	SBIW R30,0
00a06f f171      	BREQ _0x200006C
00a070 01d8      	MOVW R26,R16
00a071 9612      	ADIW R26,2
00a072 940e d9f0 	CALL __GETW1P
                +
00a074 01d9     +MOVW R26 , R18
00a075 9612     +ADIW R26 , 2
00a076 93ed     +ST X + , R30
00a077 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
00a078 85e8      	LDD  R30,Y+8
00a079 85f9      	LDD  R31,Y+8+1
00a07a 9730      	SBIW R30,0
00a07b f111      	BREQ _0x200006D
00a07c 85a8      	LDD  R26,Y+8
00a07d 85b9      	LDD  R27,Y+8+1
00a07e df85      	RCALL _allocate_block_G100
00a07f 01af      	MOVW R20,R30
00a080 9730      	SBIW R30,0
00a081 f0b9      	BREQ _0x200006E
00a082 01d8      	MOVW R26,R16
00a083 940e d305 	CALL SUBOPT_0x36E
00a085 01df      	MOVW R26,R30
00a086 85e8      	LDD  R30,Y+8
00a087 85f9      	LDD  R31,Y+8+1
00a088 17ae      	CP   R26,R30
00a089 07bf      	CPC  R27,R31
00a08a f420      	BRSH _0x200006F
00a08b 81ee      	LDD  R30,Y+6
00a08c 81ff      	LDD  R31,Y+6+1
00a08d 87e8      	STD  Y+8,R30
00a08e 87f9      	STD  Y+8+1,R31
                 _0x200006F:
00a08f 935a      	ST   -Y,R21
00a090 934a      	ST   -Y,R20
00a091 940e c64d 	CALL SUBOPT_0x1AF
00a093 85ac      	LDD  R26,Y+12
00a094 85bd      	LDD  R27,Y+12+1
00a095 940e a105 	CALL _memmove
00a097 940c a73d 	JMP  _0x20E001F
                 _0x200006E:
00a099 01f8      	MOVW R30,R16
                +
00a09a 01d9     +MOVW R26 , R18
00a09b 9612     +ADIW R26 , 2
00a09c 93ed     +ST X + , R30
00a09d 93fc     +ST X , R31
                 	__PUTW1RNS 18,2
                 _0x200006D:
                 _0x200006C:
                 _0x200006B:
00a09e e0e0      	LDI  R30,LOW(0)
00a09f e0f0      	LDI  R31,HIGH(0)
00a0a0 940c a73e 	JMP  _0x20E001E
                 _malloc:
00a0a2 940e bf27 	CALL SUBOPT_0x81
                +
00a0a4 e000     +LDI R16 , LOW ( 0 )
00a0a5 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00a0a6 81ea      	LDD  R30,Y+2
00a0a7 81fb      	LDD  R31,Y+2+1
00a0a8 9730      	SBIW R30,0
00a0a9 f071      	BREQ _0x2000070
00a0aa 81aa      	LDD  R26,Y+2
00a0ab 81bb      	LDD  R27,Y+2+1
00a0ac df57      	RCALL _allocate_block_G100
00a0ad 018f      	MOVW R16,R30
00a0ae 9730      	SBIW R30,0
00a0af f041      	BREQ _0x2000071
00a0b0 931a      	ST   -Y,R17
00a0b1 930a      	ST   -Y,R16
00a0b2 e0e0      	LDI  R30,LOW(0)
00a0b3 93ea      	ST   -Y,R30
00a0b4 81ad      	LDD  R26,Y+5
00a0b5 81be      	LDD  R27,Y+5+1
00a0b6 940e a124 	CALL _memset
                 _0x2000071:
                 _0x2000070:
00a0b8 01f8      	MOVW R30,R16
00a0b9 8119      	LDD  R17,Y+1
00a0ba 8108      	LDD  R16,Y+0
00a0bb 940c a169 	JMP  _0x20E0026
                 _free:
00a0bd 940e bfb0 	CALL SUBOPT_0x95
00a0bf 93fa      	ST   -Y,R31
00a0c0 93ea      	ST   -Y,R30
00a0c1 940e c203 	CALL SUBOPT_0xF7
00a0c3 df9f      	RCALL _realloc
                 _0x20E0027:
00a0c4 9622      	ADIW R28,2
00a0c5 9508      	RET
                 
                 	.CSEG
                 _memcmp:
00a0c6 93ba      	ST   -Y,R27
00a0c7 93aa      	ST   -Y,R26
00a0c8 2766          clr  r22
00a0c9 2777          clr  r23
00a0ca 9189          ld   r24,y+
00a0cb 9199          ld   r25,y+
00a0cc 91e9          ld   r30,y+
00a0cd 91f9          ld   r31,y+
00a0ce 91a9          ld   r26,y+
00a0cf 91b9          ld   r27,y+
                 memcmp0:
00a0d0 9600          adiw r24,0
00a0d1 f029          breq memcmp1
00a0d2 9701          sbiw r24,1
00a0d3 916d          ld   r22,x+
00a0d4 9171          ld   r23,z+
00a0d5 1767          cp   r22,r23
00a0d6 f3c9          breq memcmp0
                 memcmp1:
00a0d7 1b67          sub  r22,r23
00a0d8 f410          brcc memcmp2
00a0d9 efef          ldi  r30,-1
00a0da 9508          ret
                 memcmp2:
00a0db e0e0          ldi  r30,0
00a0dc f009          breq memcmp3
00a0dd 95e3          inc  r30
                 memcmp3:
00a0de 9508          ret
                 _memcpy:
00a0df 93ba      	ST   -Y,R27
00a0e0 93aa      	ST   -Y,R26
00a0e1 8199          ldd  r25,y+1
00a0e2 8188          ld   r24,y
00a0e3 9600          adiw r24,0
00a0e4 f041          breq memcpy1
00a0e5 81bd          ldd  r27,y+5
00a0e6 81ac          ldd  r26,y+4
00a0e7 81fb          ldd  r31,y+3
00a0e8 81ea          ldd  r30,y+2
                 memcpy0:
00a0e9 9161          ld   r22,z+
00a0ea 936d          st   x+,r22
00a0eb 9701          sbiw r24,1
00a0ec f7e1          brne memcpy0
                 memcpy1:
00a0ed 81fd          ldd  r31,y+5
00a0ee 81ec          ldd  r30,y+4
00a0ef 940c a75f 	JMP  _0x20E001D
                 _memcpyf:
00a0f1 93ba      	ST   -Y,R27
00a0f2 93aa      	ST   -Y,R26
00a0f3 8199          ldd  r25,y+1
00a0f4 8188          ld   r24,y
00a0f5 9600          adiw r24,0
00a0f6 f051          breq memcpyf1
00a0f7 81bf          ldd  r27,y+7
00a0f8 81ae          ldd  r26,y+6
00a0f9 816c          ldd  r22,y+4
00a0fa 81fb          ldd  r31,y+3
00a0fb 81ea          ldd  r30,y+2
00a0fc bf6b          out  rampz,r22
                 memcpyf0:
00a0fd 9007          elpm r0,z+
00a0fe 920d          st   x+,r0
00a0ff 9701          sbiw r24,1
00a100 f7e1          brne memcpyf0
                 memcpyf1:
00a101 81ff          ldd  r31,y+7
00a102 81ee          ldd  r30,y+6
00a103 940c a71a 	JMP  _0x20E0020
                 _memmove:
00a105 93ba      	ST   -Y,R27
00a106 93aa      	ST   -Y,R26
00a107 8199          ldd  r25,y+1
00a108 8188          ld   r24,y
00a109 9600          adiw r24,0
00a10a f0a9          breq memmove3
00a10b 81bd          ldd  r27,y+5
00a10c 81ac          ldd  r26,y+4
00a10d 81fb          ldd  r31,y+3
00a10e 81ea          ldd  r30,y+2
00a10f 17ea          cp   r30,r26
00a110 07fb          cpc  r31,r27
00a111 f071          breq memmove3
00a112 f02c          brlt memmove1
                 memmove0:
00a113 9161          ld   r22,z+
00a114 936d          st   x+,r22
00a115 9701          sbiw r24,1
00a116 f7e1          brne memmove0
00a117 c008          rjmp memmove3
                 memmove1:
00a118 0fa8          add  r26,r24
00a119 1fb9          adc  r27,r25
00a11a 0fe8          add  r30,r24
00a11b 1ff9          adc  r31,r25
                 memmove2:
00a11c 9162          ld   r22,-z
00a11d 936e          st   -x,r22
00a11e 9701          sbiw r24,1
00a11f f7e1          brne memmove2
                 memmove3:
00a120 81fd          ldd  r31,y+5
00a121 81ec          ldd  r30,y+4
00a122 940c a75f 	JMP  _0x20E001D
                 _memset:
00a124 93ba      	ST   -Y,R27
00a125 93aa      	ST   -Y,R26
00a126 81b9          ldd  r27,y+1
00a127 81a8          ld   r26,y
00a128 9610          adiw r26,0
00a129 f031          breq memset1
00a12a 81fc          ldd  r31,y+4
00a12b 81eb          ldd  r30,y+3
00a12c 816a          ldd  r22,y+2
                 memset0:
00a12d 9361          st   z+,r22
00a12e 9711          sbiw r26,1
00a12f f7e9          brne memset0
                 memset1:
00a130 81eb          ldd  r30,y+3
00a131 81fc          ldd  r31,y+4
00a132 9625      	ADIW R28,5
00a133 9508      	RET
                 _strcat:
00a134 93ba      	ST   -Y,R27
00a135 93aa      	ST   -Y,R26
00a136 91e9          ld   r30,y+
00a137 91f9          ld   r31,y+
00a138 91a9          ld   r26,y+
00a139 91b9          ld   r27,y+
00a13a 01cd          movw r24,r26
                 strcat0:
00a13b 916d          ld   r22,x+
00a13c 2366          tst  r22
00a13d f7e9          brne strcat0
00a13e 9711          sbiw r26,1
                 strcat1:
00a13f 9161          ld   r22,z+
00a140 936d          st   x+,r22
00a141 2366          tst  r22
00a142 f7e1          brne strcat1
00a143 01fc          movw r30,r24
00a144 9508          ret
                 _strcpyf:
00a145 940e da2e 	CALL __PUTPARD2
00a147 91e9          ld   r30,y+
00a148 91f9          ld   r31,y+
00a149 9169          ld   r22,y+
00a14a 9179          ld   r23,y+
00a14b 91a9          ld   r26,y+
00a14c 91b9          ld   r27,y+
00a14d 01cd          movw r24,r26
00a14e bf6b          out  rampz,r22
                 strcpyf0:
00a14f 9007          elpm r0,z+
00a150 920d          st   x+,r0
00a151 2000          tst  r0
00a152 f7e1          brne strcpyf0
00a153 01fc          movw r30,r24
00a154 9508          ret
                 _strcspn:
00a155 93ba      	ST   -Y,R27
00a156 93aa      	ST   -Y,R26
00a157 81bb          ldd  r27,y+3
00a158 81aa          ldd  r26,y+2
00a159 2788          clr  r24
00a15a 2799          clr  r25
                 strcspn0:
00a15b 916d          ld   r22,x+
00a15c 2366          tst  r22
00a15d f051          breq strcspn2
00a15e 81f9          ldd  r31,y+1
00a15f 81e8          ld   r30,y
                 strcspn1:
00a160 9171          ld   r23,z+
00a161 2377          tst  r23
00a162 f019          breq strcspn3
00a163 1767          cp   r22,r23
00a164 f019          breq strcspn2
00a165 cffa          rjmp strcspn1
                 strcspn3:
00a166 9601          adiw r24,1
00a167 cff3          rjmp strcspn0
                 strcspn2:
00a168 01fc          movw r30,r24
                 _0x20E0026:
00a169 9624      	ADIW R28,4
00a16a 9508      	RET
                 _strlen:
00a16b 93ba      	ST   -Y,R27
00a16c 93aa      	ST   -Y,R26
00a16d 91a9          ld   r26,y+
00a16e 91b9          ld   r27,y+
00a16f 27ee          clr  r30
00a170 27ff          clr  r31
                 strlen0:
00a171 916d          ld   r22,x+
00a172 2366          tst  r22
00a173 f011          breq strlen1
00a174 9631          adiw r30,1
00a175 cffb          rjmp strlen0
                 strlen1:
00a176 9508          ret
                 _strlenf:
00a177 940e da2e 	CALL __PUTPARD2
00a179 27aa          clr  r26
00a17a 27bb          clr  r27
00a17b 91e9          ld   r30,y+
00a17c 91f9          ld   r31,y+
00a17d 9169          ld   r22,y+
00a17e 9179          ld   r23,y+
00a17f bf6b          out  rampz,r22
                 strlenf0:
00a180 9007          elpm r0,z+
00a181 2000          tst  r0
00a182 f011          breq strlenf1
00a183 9611          adiw r26,1
00a184 cffb          rjmp strlenf0
                 strlenf1:
00a185 01fd          movw r30,r26
00a186 9508          ret
                 _strncmpf:
00a187 93aa      	ST   -Y,R26
00a188 9179          ld   r23,y+
00a189 91e9          ld   r30,y+
00a18a 91f9          ld   r31,y+
00a18b 9169          ld   r22,y+
00a18c 9009          ld   r0,y+
00a18d 91a9          ld   r26,y+
00a18e 91b9          ld   r27,y+
00a18f 2400          clr  r0
00a190 2411          clr  r1
00a191 bf6b          out  rampz,r22
                 strncmpf0:
00a192 2377          tst  r23
00a193 f049          breq strncmpf1
00a194 957a          dec  r23
00a195 901d          ld   r1,x+
00a196 9007          elpm r0,z+
00a197 1401          cp   r0,r1
00a198 f421          brne strncmpf1
00a199 2000          tst  r0
00a19a f7b9          brne strncmpf0
                 strncmpf3:
00a19b 27ee          clr  r30
00a19c c005          rjmp strncmpf2
                 strncmpf1:
00a19d 1810          sub  r1,r0
00a19e f3e1          breq strncmpf3
00a19f e0e1          ldi  r30,1
00a1a0 f408          brcc strncmpf2
00a1a1 50e2          subi r30,2
                 strncmpf2:
00a1a2 9508          ret
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.DSEG
                 
                 	.CSEG
                 _wait_ready_G102:
00a1a3 931a      	ST   -Y,R17
00a1a4 e3e2      	LDI  R30,LOW(50)
00a1a5 93e0 1aa9 	STS  _timer2_G102,R30
00a1a7 efef      	LDI  R30,LOW(255)
00a1a8 bdee      	OUT  0x2E,R30
                 _0x2040004:
00a1a9 b5ed      	IN   R30,0x2D
00a1aa ffe7      	SBRS R30,7
00a1ab cffd      	RJMP _0x2040004
                 _0x2040008:
00a1ac efef      	LDI  R30,LOW(255)
00a1ad bdee      	OUT  0x2E,R30
                 _0x204000A:
00a1ae b5ed      	IN   R30,0x2D
00a1af ffe7      	SBRS R30,7
00a1b0 cffd      	RJMP _0x204000A
00a1b1 b51e      	IN   R17,46
00a1b2 3f1f      	CPI  R17,255
00a1b3 f021      	BREQ _0x204000D
00a1b4 91e0 1aa9 	LDS  R30,_timer2_G102
00a1b6 30e0      	CPI  R30,0
00a1b7 f409      	BRNE _0x204000E
                 _0x204000D:
00a1b8 c001      	RJMP _0x2040009
                 _0x204000E:
00a1b9 cff2      	RJMP _0x2040008
                 _0x2040009:
00a1ba 2fe1      	MOV  R30,R17
00a1bb 9119      	LD   R17,Y+
00a1bc 9508      	RET
                 _release_spi_G102:
00a1bd 9a28      	SBI  0x5,0
00a1be efef      	LDI  R30,LOW(255)
00a1bf bdee      	OUT  0x2E,R30
                 _0x204000F:
00a1c0 b5ed      	IN   R30,0x2D
00a1c1 ffe7      	SBRS R30,7
00a1c2 cffd      	RJMP _0x204000F
00a1c3 9508      	RET
                 _rx_datablock_G102:
00a1c4 93ba      	ST   -Y,R27
00a1c5 93aa      	ST   -Y,R26
00a1c6 940e da9b 	CALL __SAVELOCR4
00a1c8 e0ea      	LDI  R30,LOW(10)
00a1c9 93e0 1aa8 	STS  _timer1_G102,R30
                 _0x2040013:
00a1cb efef      	LDI  R30,LOW(255)
00a1cc bdee      	OUT  0x2E,R30
                 _0x2040015:
00a1cd b5ed      	IN   R30,0x2D
00a1ce ffe7      	SBRS R30,7
00a1cf cffd      	RJMP _0x2040015
00a1d0 b51e      	IN   R17,46
00a1d1 3f1f      	CPI  R17,255
00a1d2 f421      	BRNE _0x2040018
00a1d3 91e0 1aa8 	LDS  R30,_timer1_G102
00a1d5 30e0      	CPI  R30,0
00a1d6 f409      	BRNE _0x2040019
                 _0x2040018:
00a1d7 c001      	RJMP _0x2040014
                 _0x2040019:
00a1d8 cff2      	RJMP _0x2040013
                 _0x2040014:
00a1d9 3f1e      	CPI  R17,254
00a1da f021      	BREQ _0x204001A
00a1db e0e0      	LDI  R30,LOW(0)
00a1dc 940e daa2 	CALL __LOADLOCR4
00a1de c53b      	RJMP _0x20E0020
                 _0x204001A:
                +
00a1df 812e     +LDD R18 , Y + 6
00a1e0 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x204001C:
00a1e1 efef      	LDI  R30,LOW(255)
00a1e2 bdee      	OUT  0x2E,R30
                 _0x204001E:
00a1e3 b5ed      	IN   R30,0x2D
00a1e4 ffe7      	SBRS R30,7
00a1e5 cffd      	RJMP _0x204001E
00a1e6 933f      	PUSH R19
00a1e7 932f      	PUSH R18
                +
00a1e8 5f2f     +SUBI R18 , LOW ( - 1 )
00a1e9 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a1ea b5ee      	IN   R30,0x2E
00a1eb 91af      	POP  R26
00a1ec 91bf      	POP  R27
00a1ed 93ec      	ST   X,R30
00a1ee efef      	LDI  R30,LOW(255)
00a1ef bdee      	OUT  0x2E,R30
                 _0x2040021:
00a1f0 b5ed      	IN   R30,0x2D
00a1f1 ffe7      	SBRS R30,7
00a1f2 cffd      	RJMP _0x2040021
00a1f3 933f      	PUSH R19
00a1f4 932f      	PUSH R18
                +
00a1f5 5f2f     +SUBI R18 , LOW ( - 1 )
00a1f6 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a1f7 b5ee      	IN   R30,0x2E
00a1f8 91af      	POP  R26
00a1f9 91bf      	POP  R27
00a1fa 93ec      	ST   X,R30
00a1fb efef      	LDI  R30,LOW(255)
00a1fc bdee      	OUT  0x2E,R30
                 _0x2040024:
00a1fd b5ed      	IN   R30,0x2D
00a1fe ffe7      	SBRS R30,7
00a1ff cffd      	RJMP _0x2040024
00a200 933f      	PUSH R19
00a201 932f      	PUSH R18
                +
00a202 5f2f     +SUBI R18 , LOW ( - 1 )
00a203 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a204 b5ee      	IN   R30,0x2E
00a205 91af      	POP  R26
00a206 91bf      	POP  R27
00a207 93ec      	ST   X,R30
00a208 efef      	LDI  R30,LOW(255)
00a209 bdee      	OUT  0x2E,R30
                 _0x2040027:
00a20a b5ed      	IN   R30,0x2D
00a20b ffe7      	SBRS R30,7
00a20c cffd      	RJMP _0x2040027
00a20d 933f      	PUSH R19
00a20e 932f      	PUSH R18
                +
00a20f 5f2f     +SUBI R18 , LOW ( - 1 )
00a210 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a211 b5ee      	IN   R30,0x2E
00a212 91af      	POP  R26
00a213 91bf      	POP  R27
00a214 93ec      	ST   X,R30
00a215 81ec      	LDD  R30,Y+4
00a216 81fd      	LDD  R31,Y+4+1
00a217 9734      	SBIW R30,4
00a218 83ec      	STD  Y+4,R30
00a219 83fd      	STD  Y+4+1,R31
00a21a f631      	BRNE _0x204001C
00a21b efef      	LDI  R30,LOW(255)
00a21c bdee      	OUT  0x2E,R30
                 _0x204002A:
00a21d b5ed      	IN   R30,0x2D
00a21e ffe7      	SBRS R30,7
00a21f cffd      	RJMP _0x204002A
00a220 efef      	LDI  R30,LOW(255)
00a221 bdee      	OUT  0x2E,R30
                 _0x204002D:
00a222 b5ed      	IN   R30,0x2D
00a223 ffe7      	SBRS R30,7
00a224 cffd      	RJMP _0x204002D
00a225 e0e1      	LDI  R30,LOW(1)
00a226 940e daa2 	CALL __LOADLOCR4
00a228 c4f1      	RJMP _0x20E0020
                 _tx_datablock_G102:
00a229 93aa      	ST   -Y,R26
00a22a 940e da9b 	CALL __SAVELOCR4
00a22c df76      	RCALL _wait_ready_G102
00a22d 3fef      	CPI  R30,LOW(0xFF)
00a22e f021      	BREQ _0x2040030
00a22f e0e0      	LDI  R30,LOW(0)
00a230 940e daa2 	CALL __LOADLOCR4
00a232 c4b3      	RJMP _0x20E0021
                 _0x2040030:
00a233 81ec      	LDD  R30,Y+4
00a234 bdee      	OUT  0x2E,R30
                 _0x2040031:
00a235 b5ed      	IN   R30,0x2D
00a236 ffe7      	SBRS R30,7
00a237 cffd      	RJMP _0x2040031
00a238 81ac      	LDD  R26,Y+4
00a239 3fad      	CPI  R26,LOW(0xFD)
00a23a f171      	BREQ _0x2040034
00a23b e000      	LDI  R16,LOW(0)
                +
00a23c 812d     +LDD R18 , Y + 5
00a23d 813e     +LDD R19 , Y + 5 + 1
                 	__GETWRS 18,19,5
                 _0x2040036:
00a23e 01d9      	MOVW R26,R18
                +
00a23f 5f2f     +SUBI R18 , LOW ( - 1 )
00a240 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a241 91ec      	LD   R30,X
00a242 bdee      	OUT  0x2E,R30
                 _0x2040038:
00a243 b5ed      	IN   R30,0x2D
00a244 ffe7      	SBRS R30,7
00a245 cffd      	RJMP _0x2040038
00a246 01d9      	MOVW R26,R18
                +
00a247 5f2f     +SUBI R18 , LOW ( - 1 )
00a248 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a249 91ec      	LD   R30,X
00a24a bdee      	OUT  0x2E,R30
                 _0x204003B:
00a24b b5ed      	IN   R30,0x2D
00a24c ffe7      	SBRS R30,7
00a24d cffd      	RJMP _0x204003B
00a24e 5001      	SUBI R16,LOW(1)
00a24f 3000      	CPI  R16,0
00a250 f769      	BRNE _0x2040036
00a251 efef      	LDI  R30,LOW(255)
00a252 bdee      	OUT  0x2E,R30
                 _0x204003E:
00a253 b5ed      	IN   R30,0x2D
00a254 ffe7      	SBRS R30,7
00a255 cffd      	RJMP _0x204003E
00a256 efef      	LDI  R30,LOW(255)
00a257 bdee      	OUT  0x2E,R30
                 _0x2040041:
00a258 b5ed      	IN   R30,0x2D
00a259 ffe7      	SBRS R30,7
00a25a cffd      	RJMP _0x2040041
00a25b efef      	LDI  R30,LOW(255)
00a25c bdee      	OUT  0x2E,R30
                 _0x2040044:
00a25d b5ed      	IN   R30,0x2D
00a25e ffe7      	SBRS R30,7
00a25f cffd      	RJMP _0x2040044
00a260 b51e      	IN   R17,46
00a261 2fe1      	MOV  R30,R17
00a262 71ef      	ANDI R30,LOW(0x1F)
00a263 30e5      	CPI  R30,LOW(0x5)
00a264 f021      	BREQ _0x2040047
00a265 e0e0      	LDI  R30,LOW(0)
00a266 940e daa2 	CALL __LOADLOCR4
00a268 c47d      	RJMP _0x20E0021
                 _0x2040047:
                 _0x2040034:
00a269 e0e1      	LDI  R30,LOW(1)
00a26a 940e daa2 	CALL __LOADLOCR4
00a26c c479      	RJMP _0x20E0021
                 _send_cmd_G102:
00a26d 940e da2e 	CALL __PUTPARD2
00a26f 931a      	ST   -Y,R17
00a270 930a      	ST   -Y,R16
00a271 81ee      	LDD  R30,Y+6
00a272 78e0      	ANDI R30,LOW(0x80)
00a273 f089      	BREQ _0x2040048
00a274 81ee      	LDD  R30,Y+6
00a275 77ef      	ANDI R30,0x7F
00a276 83ee      	STD  Y+6,R30
00a277 e7e7      	LDI  R30,LOW(119)
00a278 93ea      	ST   -Y,R30
                +
00a279 e0a0     +LDI R26 , LOW ( 0x0 )
00a27a e0b0     +LDI R27 , HIGH ( 0x0 )
00a27b e080     +LDI R24 , BYTE3 ( 0x0 )
00a27c e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a27d dfef      	RCALL _send_cmd_G102
00a27e 2f0e      	MOV  R16,R30
00a27f 3002      	CPI  R16,2
00a280 f020      	BRLO _0x2040049
00a281 2fe0      	MOV  R30,R16
00a282 8119      	LDD  R17,Y+1
00a283 8108      	LDD  R16,Y+0
00a284 c461      	RJMP _0x20E0021
                 _0x2040049:
                 _0x2040048:
00a285 9a28      	SBI  0x5,0
00a286 9828      	CBI  0x5,0
00a287 df1b      	RCALL _wait_ready_G102
00a288 3fef      	CPI  R30,LOW(0xFF)
00a289 f021      	BREQ _0x204004A
00a28a efef      	LDI  R30,LOW(255)
00a28b 8119      	LDD  R17,Y+1
00a28c 8108      	LDD  R16,Y+0
00a28d c458      	RJMP _0x20E0021
                 _0x204004A:
00a28e 81ee      	LDD  R30,Y+6
00a28f bdee      	OUT  0x2E,R30
                 _0x204004B:
00a290 b5ed      	IN   R30,0x2D
00a291 ffe7      	SBRS R30,7
00a292 cffd      	RJMP _0x204004B
00a293 81ed      	LDD  R30,Y+5
00a294 bdee      	OUT  0x2E,R30
                 _0x204004E:
00a295 b5ed      	IN   R30,0x2D
00a296 ffe7      	SBRS R30,7
00a297 cffd      	RJMP _0x204004E
00a298 81ec      	LDD  R30,Y+4
00a299 bdee      	OUT  0x2E,R30
                 _0x2040051:
00a29a b5ed      	IN   R30,0x2D
00a29b ffe7      	SBRS R30,7
00a29c cffd      	RJMP _0x2040051
00a29d 81eb      	LDD  R30,Y+3
00a29e bdee      	OUT  0x2E,R30
                 _0x2040054:
00a29f b5ed      	IN   R30,0x2D
00a2a0 ffe7      	SBRS R30,7
00a2a1 cffd      	RJMP _0x2040054
00a2a2 81ea      	LDD  R30,Y+2
00a2a3 bdee      	OUT  0x2E,R30
                 _0x2040057:
00a2a4 b5ed      	IN   R30,0x2D
00a2a5 ffe7      	SBRS R30,7
00a2a6 cffd      	RJMP _0x2040057
00a2a7 e011      	LDI  R17,LOW(1)
00a2a8 81ae      	LDD  R26,Y+6
00a2a9 34a0      	CPI  R26,LOW(0x40)
00a2aa f411      	BRNE _0x204005A
00a2ab e915      	LDI  R17,LOW(149)
00a2ac c004      	RJMP _0x204005B
                 _0x204005A:
00a2ad 81ae      	LDD  R26,Y+6
00a2ae 34a8      	CPI  R26,LOW(0x48)
00a2af f409      	BRNE _0x204005C
00a2b0 e817      	LDI  R17,LOW(135)
                 _0x204005C:
                 _0x204005B:
00a2b1 bd1e      	OUT  0x2E,R17
                 _0x204005D:
00a2b2 b5ed      	IN   R30,0x2D
00a2b3 ffe7      	SBRS R30,7
00a2b4 cffd      	RJMP _0x204005D
00a2b5 81ae      	LDD  R26,Y+6
00a2b6 34ac      	CPI  R26,LOW(0x4C)
00a2b7 f429      	BRNE _0x2040060
00a2b8 efef      	LDI  R30,LOW(255)
00a2b9 bdee      	OUT  0x2E,R30
                 _0x2040061:
00a2ba b5ed      	IN   R30,0x2D
00a2bb ffe7      	SBRS R30,7
00a2bc cffd      	RJMP _0x2040061
                 _0x2040060:
00a2bd ef1f      	LDI  R17,LOW(255)
                 _0x2040065:
00a2be efef      	LDI  R30,LOW(255)
00a2bf bdee      	OUT  0x2E,R30
                 _0x2040067:
00a2c0 b5ed      	IN   R30,0x2D
00a2c1 ffe7      	SBRS R30,7
00a2c2 cffd      	RJMP _0x2040067
00a2c3 b50e      	IN   R16,46
00a2c4 ff07      	SBRS R16,7
00a2c5 c003      	RJMP _0x204006A
00a2c6 5011      	SUBI R17,LOW(1)
00a2c7 3010      	CPI  R17,0
00a2c8 f409      	BRNE _0x204006B
                 _0x204006A:
00a2c9 c001      	RJMP _0x2040066
                 _0x204006B:
00a2ca cff3      	RJMP _0x2040065
                 _0x2040066:
00a2cb 2fe0      	MOV  R30,R16
00a2cc 8119      	LDD  R17,Y+1
00a2cd 8108      	LDD  R16,Y+0
00a2ce c417      	RJMP _0x20E0021
                 _rx_spi4_G102:
00a2cf 93ba      	ST   -Y,R27
00a2d0 93aa      	ST   -Y,R26
00a2d1 931a      	ST   -Y,R17
00a2d2 e014      	LDI  R17,4
                 _0x204006D:
00a2d3 efef      	LDI  R30,LOW(255)
00a2d4 bdee      	OUT  0x2E,R30
                 _0x204006F:
00a2d5 b5ed      	IN   R30,0x2D
00a2d6 ffe7      	SBRS R30,7
00a2d7 cffd      	RJMP _0x204006F
00a2d8 81a9      	LDD  R26,Y+1
00a2d9 81ba      	LDD  R27,Y+1+1
00a2da 9611      	ADIW R26,1
00a2db 83a9      	STD  Y+1,R26
00a2dc 83ba      	STD  Y+1+1,R27
00a2dd 9711      	SBIW R26,1
00a2de b5ee      	IN   R30,0x2E
00a2df 93ec      	ST   X,R30
00a2e0 5011      	SUBI R17,LOW(1)
00a2e1 3010      	CPI  R17,0
00a2e2 f781      	BRNE _0x204006D
00a2e3 c554      	RJMP _0x20E001B
                 _disk_initialize:
00a2e4 93aa      	ST   -Y,R26
00a2e5 9724      	SBIW R28,4
00a2e6 940e da9b 	CALL __SAVELOCR4
00a2e8 85e8      	LDD  R30,Y+8
00a2e9 30e0      	CPI  R30,0
00a2ea f011      	BREQ _0x2040072
00a2eb e0e1      	LDI  R30,LOW(1)
00a2ec c0c4      	RJMP _0x20E0025
                 _0x2040072:
00a2ed 9808      	CBI  0x1,0
00a2ee 9809      	CBI  0x1,1
00a2ef e0ea      	LDI  R30,LOW(10)
00a2f0 93e0 1aa8 	STS  _timer1_G102,R30
                 _0x2040073:
00a2f2 91e0 1aa8 	LDS  R30,_timer1_G102
00a2f4 30e0      	CPI  R30,0
00a2f5 f7e1      	BRNE _0x2040073
00a2f6 91e0 1aa7 	LDS  R30,_status_G102
00a2f8 70e2      	ANDI R30,LOW(0x2)
00a2f9 f009      	BREQ _0x2040076
00a2fa c0b4      	RJMP _0x20E0024
                 _0x2040076:
00a2fb 9a20      	SBI  0x4,0
00a2fc 9a28      	SBI  0x5,0
00a2fd b1e5      	IN   R30,0x5
00a2fe 7fe9      	ANDI R30,LOW(0xF9)
00a2ff b9e5      	OUT  0x5,R30
00a300 9a2b      	SBI  0x5,3
00a301 9823      	CBI  0x4,3
00a302 b1e4      	IN   R30,0x4
00a303 60e7      	ORI  R30,LOW(0x7)
00a304 b9e4      	OUT  0x4,R30
00a305 e5e2      	LDI  R30,LOW(82)
00a306 bdec      	OUT  0x2C,R30
00a307 e0e0      	LDI  R30,LOW(0)
00a308 bded      	OUT  0x2D,R30
00a309 ef3f      	LDI  R19,LOW(255)
                 _0x2040078:
00a30a e01a      	LDI  R17,LOW(10)
                 _0x204007B:
00a30b efef      	LDI  R30,LOW(255)
00a30c bdee      	OUT  0x2E,R30
                 _0x204007D:
00a30d b5ed      	IN   R30,0x2D
00a30e ffe7      	SBRS R30,7
00a30f cffd      	RJMP _0x204007D
00a310 5011      	SUBI R17,LOW(1)
00a311 3010      	CPI  R17,0
00a312 f7c1      	BRNE _0x204007B
00a313 e4e0      	LDI  R30,LOW(64)
00a314 93ea      	ST   -Y,R30
                +
00a315 e0a0     +LDI R26 , LOW ( 0x0 )
00a316 e0b0     +LDI R27 , HIGH ( 0x0 )
00a317 e080     +LDI R24 , BYTE3 ( 0x0 )
00a318 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a319 df53      	RCALL _send_cmd_G102
00a31a 2f0e      	MOV  R16,R30
00a31b 5031      	SUBI R19,LOW(1)
00a31c 3001      	CPI  R16,1
00a31d f011      	BREQ _0x2040080
00a31e 3030      	CPI  R19,0
00a31f f409      	BRNE _0x2040081
                 _0x2040080:
00a320 c001      	RJMP _0x2040079
                 _0x2040081:
00a321 cfe8      	RJMP _0x2040078
                 _0x2040079:
00a322 e030      	LDI  R19,LOW(0)
00a323 3001      	CPI  R16,1
00a324 f011      	BREQ PC+3
00a325 940c a38f 	JMP _0x2040082
00a327 e6e4      	LDI  R30,LOW(100)
00a328 93e0 1aa8 	STS  _timer1_G102,R30
00a32a e4e8      	LDI  R30,LOW(72)
00a32b 93ea      	ST   -Y,R30
                +
00a32c eaaa     +LDI R26 , LOW ( 0x1AA )
00a32d e0b1     +LDI R27 , HIGH ( 0x1AA )
00a32e e080     +LDI R24 , BYTE3 ( 0x1AA )
00a32f e090     +LDI R25 , BYTE4 ( 0x1AA )
                 	__GETD2N 0x1AA
00a330 df3c      	RCALL _send_cmd_G102
00a331 30e1      	CPI  R30,LOW(0x1)
00a332 f591      	BRNE _0x2040083
00a333 01de      	MOVW R26,R28
00a334 9614      	ADIW R26,4
00a335 df99      	RCALL _rx_spi4_G102
00a336 81ae      	LDD  R26,Y+6
00a337 30a1      	CPI  R26,LOW(0x1)
00a338 f419      	BRNE _0x2040085
00a339 81af      	LDD  R26,Y+7
00a33a 3aaa      	CPI  R26,LOW(0xAA)
00a33b f009      	BREQ _0x2040086
                 _0x2040085:
00a33c c027      	RJMP _0x2040084
                 _0x2040086:
                 _0x2040087:
00a33d 91e0 1aa8 	LDS  R30,_timer1_G102
00a33f 30e0      	CPI  R30,0
00a340 f049      	BREQ _0x204008A
00a341 eee9      	LDI  R30,LOW(233)
00a342 93ea      	ST   -Y,R30
                +
00a343 e0a0     +LDI R26 , LOW ( 0x40000000 )
00a344 e0b0     +LDI R27 , HIGH ( 0x40000000 )
00a345 e080     +LDI R24 , BYTE3 ( 0x40000000 )
00a346 e490     +LDI R25 , BYTE4 ( 0x40000000 )
                 	__GETD2N 0x40000000
00a347 df25      	RCALL _send_cmd_G102
00a348 30e0      	CPI  R30,0
00a349 f409      	BRNE _0x204008B
                 _0x204008A:
00a34a c001      	RJMP _0x2040089
                 _0x204008B:
00a34b cff1      	RJMP _0x2040087
                 _0x2040089:
00a34c 91e0 1aa8 	LDS  R30,_timer1_G102
00a34e 30e0      	CPI  R30,0
00a34f f049      	BREQ _0x204008D
00a350 e7ea      	LDI  R30,LOW(122)
00a351 93ea      	ST   -Y,R30
                +
00a352 e0a0     +LDI R26 , LOW ( 0x0 )
00a353 e0b0     +LDI R27 , HIGH ( 0x0 )
00a354 e080     +LDI R24 , BYTE3 ( 0x0 )
00a355 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a356 df16      	RCALL _send_cmd_G102
00a357 30e0      	CPI  R30,0
00a358 f009      	BREQ _0x204008E
                 _0x204008D:
00a359 c00a      	RJMP _0x204008C
                 _0x204008E:
00a35a 01de      	MOVW R26,R28
00a35b 9614      	ADIW R26,4
00a35c df72      	RCALL _rx_spi4_G102
00a35d 81ec      	LDD  R30,Y+4
00a35e 74e0      	ANDI R30,LOW(0x40)
00a35f f011      	BREQ _0x204008F
00a360 e0ec      	LDI  R30,LOW(12)
00a361 c001      	RJMP _0x2040090
                 _0x204008F:
00a362 e0e4      	LDI  R30,LOW(4)
                 _0x2040090:
00a363 2f3e      	MOV  R19,R30
                 _0x204008C:
                 _0x2040084:
00a364 c02a      	RJMP _0x2040092
                 _0x2040083:
00a365 eee9      	LDI  R30,LOW(233)
00a366 93ea      	ST   -Y,R30
                +
00a367 e0a0     +LDI R26 , LOW ( 0x0 )
00a368 e0b0     +LDI R27 , HIGH ( 0x0 )
00a369 e080     +LDI R24 , BYTE3 ( 0x0 )
00a36a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a36b df01      	RCALL _send_cmd_G102
00a36c 30e2      	CPI  R30,LOW(0x2)
00a36d f418      	BRSH _0x2040093
00a36e e032      	LDI  R19,LOW(2)
00a36f ee09      	LDI  R16,LOW(233)
00a370 c002      	RJMP _0x2040094
                 _0x2040093:
00a371 e031      	LDI  R19,LOW(1)
00a372 e401      	LDI  R16,LOW(65)
                 _0x2040094:
                 _0x2040095:
00a373 91e0 1aa8 	LDS  R30,_timer1_G102
00a375 30e0      	CPI  R30,0
00a376 f041      	BREQ _0x2040098
00a377 930a      	ST   -Y,R16
                +
00a378 e0a0     +LDI R26 , LOW ( 0x0 )
00a379 e0b0     +LDI R27 , HIGH ( 0x0 )
00a37a e080     +LDI R24 , BYTE3 ( 0x0 )
00a37b e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a37c def0      	RCALL _send_cmd_G102
00a37d 30e0      	CPI  R30,0
00a37e f409      	BRNE _0x2040099
                 _0x2040098:
00a37f c001      	RJMP _0x2040097
                 _0x2040099:
00a380 cff2      	RJMP _0x2040095
                 _0x2040097:
00a381 91e0 1aa8 	LDS  R30,_timer1_G102
00a383 30e0      	CPI  R30,0
00a384 f049      	BREQ _0x204009B
00a385 e5e0      	LDI  R30,LOW(80)
00a386 93ea      	ST   -Y,R30
                +
00a387 e0a0     +LDI R26 , LOW ( 0x200 )
00a388 e0b2     +LDI R27 , HIGH ( 0x200 )
00a389 e080     +LDI R24 , BYTE3 ( 0x200 )
00a38a e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a38b dee1      	RCALL _send_cmd_G102
00a38c 30e0      	CPI  R30,0
00a38d f009      	BREQ _0x204009A
                 _0x204009B:
00a38e e030      	LDI  R19,LOW(0)
                 _0x204009A:
                 _0x2040092:
                 _0x2040082:
00a38f 9330 1aaa 	STS  _card_type_G102,R19
00a391 de2b      	RCALL _release_spi_G102
00a392 3030      	CPI  R19,0
00a393 f051      	BREQ _0x204009D
00a394 91e0 1aa7 	LDS  R30,_status_G102
00a396 7fee      	ANDI R30,0xFE
00a397 93e0 1aa7 	STS  _status_G102,R30
00a399 e5e0      	LDI  R30,LOW(80)
00a39a bdec      	OUT  0x2C,R30
00a39b e0e1      	LDI  R30,LOW(1)
00a39c bded      	OUT  0x2D,R30
00a39d c011      	RJMP _0x204009E
                 _0x204009D:
00a39e 9828      	CBI  0x5,0
00a39f de03      	RCALL _wait_ready_G102
00a3a0 de1c      	RCALL _release_spi_G102
00a3a1 e0e0      	LDI  R30,LOW(0)
00a3a2 bdec      	OUT  0x2C,R30
00a3a3 b1e4      	IN   R30,0x4
00a3a4 7fe0      	ANDI R30,LOW(0xF0)
00a3a5 b9e4      	OUT  0x4,R30
00a3a6 b1e5      	IN   R30,0x5
00a3a7 7fe0      	ANDI R30,LOW(0xF0)
00a3a8 b9e5      	OUT  0x5,R30
00a3a9 9820      	CBI  0x4,0
00a3aa 91e0 1aa7 	LDS  R30,_status_G102
00a3ac 60e1      	ORI  R30,1
00a3ad 93e0 1aa7 	STS  _status_G102,R30
                 _0x204009E:
                 _0x20E0024:
00a3af 91e0 1aa7 	LDS  R30,_status_G102
                 _0x20E0025:
00a3b1 940e daa2 	CALL __LOADLOCR4
00a3b3 9629      	ADIW R28,9
00a3b4 9508      	RET
                 _disk_status:
00a3b5 93aa      	ST   -Y,R26
00a3b6 81e8      	LD   R30,Y
00a3b7 30e0      	CPI  R30,0
00a3b8 f011      	BREQ _0x204009F
00a3b9 e0e1      	LDI  R30,LOW(1)
00a3ba c002      	RJMP _0x20E0023
                 _0x204009F:
00a3bb 91e0 1aa7 	LDS  R30,_status_G102
                 _0x20E0023:
00a3bd 9621      	ADIW R28,1
00a3be 9508      	RET
                 _disk_read:
00a3bf 93aa      	ST   -Y,R26
00a3c0 81ef      	LDD  R30,Y+7
00a3c1 30e0      	CPI  R30,0
00a3c2 f419      	BRNE _0x20400A1
00a3c3 81e8      	LD   R30,Y
00a3c4 30e0      	CPI  R30,0
00a3c5 f411      	BRNE _0x20400A0
                 _0x20400A1:
00a3c6 e0e4      	LDI  R30,LOW(4)
00a3c7 c352      	RJMP _0x20E0020
                 _0x20400A0:
00a3c8 91e0 1aa7 	LDS  R30,_status_G102
00a3ca 70e1      	ANDI R30,LOW(0x1)
00a3cb f011      	BREQ _0x20400A3
00a3cc e0e3      	LDI  R30,LOW(3)
00a3cd c34c      	RJMP _0x20E0020
                 _0x20400A3:
00a3ce 91e0 1aaa 	LDS  R30,_card_type_G102
00a3d0 70e8      	ANDI R30,LOW(0x8)
00a3d1 f471      	BRNE _0x20400A4
                +
00a3d2 81e9     +LDD R30 , Y + 1
00a3d3 81fa     +LDD R31 , Y + 1 + 1
00a3d4 816b     +LDD R22 , Y + 1 + 2
00a3d5 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00a3d6 e0a0     +LDI R26 , LOW ( 0x200 )
00a3d7 e0b2     +LDI R27 , HIGH ( 0x200 )
00a3d8 e080     +LDI R24 , BYTE3 ( 0x200 )
00a3d9 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a3da 940e d93a 	CALL __MULD12U
                +
00a3dc 83e9     +STD Y + 1 , R30
00a3dd 83fa     +STD Y + 1 + 1 , R31
00a3de 836b     +STD Y + 1 + 2 , R22
00a3df 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400A4:
00a3e0 81a8      	LD   R26,Y
00a3e1 30a1      	CPI  R26,LOW(0x1)
00a3e2 f4b1      	BRNE _0x20400A5
00a3e3 e5e1      	LDI  R30,LOW(81)
00a3e4 93ea      	ST   -Y,R30
                +
00a3e5 81aa     +LDD R26 , Y + 2
00a3e6 81bb     +LDD R27 , Y + 2 + 1
00a3e7 818c     +LDD R24 , Y + 2 + 2
00a3e8 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a3e9 de83      	RCALL _send_cmd_G102
00a3ea 30e0      	CPI  R30,0
00a3eb f449      	BRNE _0x20400A7
00a3ec 81ed      	LDD  R30,Y+5
00a3ed 81fe      	LDD  R31,Y+5+1
00a3ee 93fa      	ST   -Y,R31
00a3ef 93ea      	ST   -Y,R30
00a3f0 e0a0      	LDI  R26,LOW(512)
00a3f1 e0b2      	LDI  R27,HIGH(512)
00a3f2 ddd1      	RCALL _rx_datablock_G102
00a3f3 30e0      	CPI  R30,0
00a3f4 f409      	BRNE _0x20400A8
                 _0x20400A7:
00a3f5 c002      	RJMP _0x20400A6
                 _0x20400A8:
00a3f6 e0e0      	LDI  R30,LOW(0)
00a3f7 83e8      	ST   Y,R30
                 _0x20400A6:
00a3f8 c023      	RJMP _0x20400A9
                 _0x20400A5:
00a3f9 e5e2      	LDI  R30,LOW(82)
00a3fa 93ea      	ST   -Y,R30
                +
00a3fb 81aa     +LDD R26 , Y + 2
00a3fc 81bb     +LDD R27 , Y + 2 + 1
00a3fd 818c     +LDD R24 , Y + 2 + 2
00a3fe 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a3ff de6d      	RCALL _send_cmd_G102
00a400 30e0      	CPI  R30,0
00a401 f4d1      	BRNE _0x20400AA
                 _0x20400AC:
00a402 81ed      	LDD  R30,Y+5
00a403 81fe      	LDD  R31,Y+5+1
00a404 93fa      	ST   -Y,R31
00a405 93ea      	ST   -Y,R30
00a406 e0a0      	LDI  R26,LOW(512)
00a407 e0b2      	LDI  R27,HIGH(512)
00a408 ddbb      	RCALL _rx_datablock_G102
00a409 30e0      	CPI  R30,0
00a40a f051      	BREQ _0x20400AD
00a40b 81ed      	LDD  R30,Y+5
00a40c 81fe      	LDD  R31,Y+5+1
00a40d 50e0      	SUBI R30,LOW(-512)
00a40e 4ffe      	SBCI R31,HIGH(-512)
00a40f 83ed      	STD  Y+5,R30
00a410 83fe      	STD  Y+5+1,R31
00a411 81e8      	LD   R30,Y
00a412 50e1      	SUBI R30,LOW(1)
00a413 83e8      	ST   Y,R30
00a414 f769      	BRNE _0x20400AC
                 _0x20400AD:
00a415 e4ec      	LDI  R30,LOW(76)
00a416 93ea      	ST   -Y,R30
                +
00a417 e0a0     +LDI R26 , LOW ( 0x0 )
00a418 e0b0     +LDI R27 , HIGH ( 0x0 )
00a419 e080     +LDI R24 , BYTE3 ( 0x0 )
00a41a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a41b de51      	RCALL _send_cmd_G102
                 _0x20400AA:
                 _0x20400A9:
00a41c dda0      	RCALL _release_spi_G102
00a41d 81e8      	LD   R30,Y
00a41e 30e0      	CPI  R30,0
00a41f f011      	BREQ _0x20400AF
00a420 e0e1      	LDI  R30,LOW(1)
00a421 c001      	RJMP _0x20400B0
                 _0x20400AF:
00a422 e0e0      	LDI  R30,LOW(0)
                 _0x20400B0:
00a423 c2f6      	RJMP _0x20E0020
                 _disk_write:
00a424 93aa      	ST   -Y,R26
00a425 81ef      	LDD  R30,Y+7
00a426 30e0      	CPI  R30,0
00a427 f419      	BRNE _0x20400B3
00a428 81e8      	LD   R30,Y
00a429 30e0      	CPI  R30,0
00a42a f411      	BRNE _0x20400B2
                 _0x20400B3:
00a42b e0e4      	LDI  R30,LOW(4)
00a42c c2ed      	RJMP _0x20E0020
                 _0x20400B2:
00a42d 91e0 1aa7 	LDS  R30,_status_G102
00a42f 70e1      	ANDI R30,LOW(0x1)
00a430 f011      	BREQ _0x20400B5
00a431 e0e3      	LDI  R30,LOW(3)
00a432 c2e7      	RJMP _0x20E0020
                 _0x20400B5:
00a433 91e0 1aa7 	LDS  R30,_status_G102
00a435 70e4      	ANDI R30,LOW(0x4)
00a436 f011      	BREQ _0x20400B6
00a437 e0e2      	LDI  R30,LOW(2)
00a438 c2e1      	RJMP _0x20E0020
                 _0x20400B6:
00a439 91e0 1aaa 	LDS  R30,_card_type_G102
00a43b 70e8      	ANDI R30,LOW(0x8)
00a43c f471      	BRNE _0x20400B7
                +
00a43d 81e9     +LDD R30 , Y + 1
00a43e 81fa     +LDD R31 , Y + 1 + 1
00a43f 816b     +LDD R22 , Y + 1 + 2
00a440 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
                +
00a441 e0a0     +LDI R26 , LOW ( 0x200 )
00a442 e0b2     +LDI R27 , HIGH ( 0x200 )
00a443 e080     +LDI R24 , BYTE3 ( 0x200 )
00a444 e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00a445 940e d93a 	CALL __MULD12U
                +
00a447 83e9     +STD Y + 1 , R30
00a448 83fa     +STD Y + 1 + 1 , R31
00a449 836b     +STD Y + 1 + 2 , R22
00a44a 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
                 _0x20400B7:
00a44b 81a8      	LD   R26,Y
00a44c 30a1      	CPI  R26,LOW(0x1)
00a44d f4a9      	BRNE _0x20400B8
00a44e e5e8      	LDI  R30,LOW(88)
00a44f 93ea      	ST   -Y,R30
                +
00a450 81aa     +LDD R26 , Y + 2
00a451 81bb     +LDD R27 , Y + 2 + 1
00a452 818c     +LDD R24 , Y + 2 + 2
00a453 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a454 de18      	RCALL _send_cmd_G102
00a455 30e0      	CPI  R30,0
00a456 f441      	BRNE _0x20400BA
00a457 81ed      	LDD  R30,Y+5
00a458 81fe      	LDD  R31,Y+5+1
00a459 93fa      	ST   -Y,R31
00a45a 93ea      	ST   -Y,R30
00a45b efae      	LDI  R26,LOW(254)
00a45c ddcc      	RCALL _tx_datablock_G102
00a45d 30e0      	CPI  R30,0
00a45e f409      	BRNE _0x20400BB
                 _0x20400BA:
00a45f c002      	RJMP _0x20400B9
                 _0x20400BB:
00a460 e0e0      	LDI  R30,LOW(0)
00a461 83e8      	ST   Y,R30
                 _0x20400B9:
00a462 c030      	RJMP _0x20400BC
                 _0x20400B8:
00a463 91e0 1aaa 	LDS  R30,_card_type_G102
00a465 70e6      	ANDI R30,LOW(0x6)
00a466 f039      	BREQ _0x20400BD
00a467 ede7      	LDI  R30,LOW(215)
00a468 93ea      	ST   -Y,R30
00a469 81a9      	LDD  R26,Y+1
00a46a 27bb      	CLR  R27
00a46b 2788      	CLR  R24
00a46c 2799      	CLR  R25
00a46d ddff      	RCALL _send_cmd_G102
                 _0x20400BD:
00a46e e5e9      	LDI  R30,LOW(89)
00a46f 93ea      	ST   -Y,R30
                +
00a470 81aa     +LDD R26 , Y + 2
00a471 81bb     +LDD R27 , Y + 2 + 1
00a472 818c     +LDD R24 , Y + 2 + 2
00a473 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00a474 ddf8      	RCALL _send_cmd_G102
00a475 30e0      	CPI  R30,0
00a476 f4e1      	BRNE _0x20400BE
                 _0x20400C0:
00a477 81ed      	LDD  R30,Y+5
00a478 81fe      	LDD  R31,Y+5+1
00a479 93fa      	ST   -Y,R31
00a47a 93ea      	ST   -Y,R30
00a47b efac      	LDI  R26,LOW(252)
00a47c ddac      	RCALL _tx_datablock_G102
00a47d 30e0      	CPI  R30,0
00a47e f051      	BREQ _0x20400C1
00a47f 81ed      	LDD  R30,Y+5
00a480 81fe      	LDD  R31,Y+5+1
00a481 50e0      	SUBI R30,LOW(-512)
00a482 4ffe      	SBCI R31,HIGH(-512)
00a483 83ed      	STD  Y+5,R30
00a484 83fe      	STD  Y+5+1,R31
00a485 81e8      	LD   R30,Y
00a486 50e1      	SUBI R30,LOW(1)
00a487 83e8      	ST   Y,R30
00a488 f771      	BRNE _0x20400C0
                 _0x20400C1:
00a489 e0e0      	LDI  R30,LOW(0)
00a48a e0f0      	LDI  R31,HIGH(0)
00a48b 93fa      	ST   -Y,R31
00a48c 93ea      	ST   -Y,R30
00a48d efad      	LDI  R26,LOW(253)
00a48e dd9a      	RCALL _tx_datablock_G102
00a48f 30e0      	CPI  R30,0
00a490 f411      	BRNE _0x20400C3
00a491 e0e1      	LDI  R30,LOW(1)
00a492 83e8      	ST   Y,R30
                 _0x20400C3:
                 _0x20400BE:
                 _0x20400BC:
00a493 dd29      	RCALL _release_spi_G102
00a494 81e8      	LD   R30,Y
00a495 30e0      	CPI  R30,0
00a496 f011      	BREQ _0x20400C4
00a497 e0e1      	LDI  R30,LOW(1)
00a498 c001      	RJMP _0x20400C5
                 _0x20400C4:
00a499 e0e0      	LDI  R30,LOW(0)
                 _0x20400C5:
00a49a c27f      	RJMP _0x20E0020
                 _disk_ioctl:
00a49b 93ba      	ST   -Y,R27
00a49c 93aa      	ST   -Y,R26
00a49d 9760      	SBIW R28,16
00a49e 940e da99 	CALL __SAVELOCR6
00a4a0 8de9      	LDD  R30,Y+25
00a4a1 30e0      	CPI  R30,0
00a4a2 f011      	BREQ _0x20400C7
00a4a3 e0e4      	LDI  R30,LOW(4)
00a4a4 c182      	RJMP _0x20E0022
                 _0x20400C7:
00a4a5 e011      	LDI  R17,LOW(1)
00a4a6 91e0 1aa7 	LDS  R30,_status_G102
00a4a8 70e1      	ANDI R30,LOW(0x1)
00a4a9 f011      	BREQ _0x20400C8
00a4aa e0e3      	LDI  R30,LOW(3)
00a4ab c17b      	RJMP _0x20E0022
                 _0x20400C8:
                +
00a4ac 894e     +LDD R20 , Y + 22
00a4ad 895f     +LDD R21 , Y + 22 + 1
                 	__GETWRS 20,21,22
00a4ae 8de8      	LDD  R30,Y+24
00a4af 30e0      	CPI  R30,0
00a4b0 f431      	BRNE _0x20400CC
00a4b1 9828      	CBI  0x5,0
00a4b2 dcf0      	RCALL _wait_ready_G102
00a4b3 3fef      	CPI  R30,LOW(0xFF)
00a4b4 f409      	BRNE _0x20400CD
00a4b5 e010      	LDI  R17,LOW(0)
                 _0x20400CD:
00a4b6 c16e      	RJMP _0x20400CB
                 _0x20400CC:
00a4b7 30e1      	CPI  R30,LOW(0x1)
00a4b8 f011      	BREQ PC+3
00a4b9 940c a515 	JMP _0x20400CE
00a4bb e4e9      	LDI  R30,LOW(73)
00a4bc 93ea      	ST   -Y,R30
                +
00a4bd e0a0     +LDI R26 , LOW ( 0x0 )
00a4be e0b0     +LDI R27 , HIGH ( 0x0 )
00a4bf e080     +LDI R24 , BYTE3 ( 0x0 )
00a4c0 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a4c1 ddab      	RCALL _send_cmd_G102
00a4c2 30e0      	CPI  R30,0
00a4c3 f449      	BRNE _0x20400D0
00a4c4 01fe      	MOVW R30,R28
00a4c5 9636      	ADIW R30,6
00a4c6 93fa      	ST   -Y,R31
00a4c7 93ea      	ST   -Y,R30
00a4c8 e1a0      	LDI  R26,LOW(16)
00a4c9 e0b0      	LDI  R27,0
00a4ca dcf9      	RCALL _rx_datablock_G102
00a4cb 30e0      	CPI  R30,0
00a4cc f409      	BRNE _0x20400D1
                 _0x20400D0:
00a4cd c046      	RJMP _0x20400CF
                 _0x20400D1:
00a4ce 81ee      	LDD  R30,Y+6
00a4cf 95e2      	SWAP R30
00a4d0 70ef      	ANDI R30,0xF
00a4d1 95e6      	LSR  R30
00a4d2 95e6      	LSR  R30
00a4d3 30e1      	CPI  R30,LOW(0x1)
00a4d4 f469      	BRNE _0x20400D2
00a4d5 e0e0      	LDI  R30,0
00a4d6 85fe      	LDD  R31,Y+14
00a4d7 85af      	LDD  R26,Y+15
00a4d8 e0b0      	LDI  R27,0
00a4d9 0fea      	ADD  R30,R26
00a4da 1ffb      	ADC  R31,R27
00a4db 9631      	ADIW R30,1
00a4dc 019f      	MOVW R18,R30
00a4dd 01d9      	MOVW R26,R18
00a4de 2788      	CLR  R24
00a4df 2799      	CLR  R25
00a4e0 e0ea      	LDI  R30,LOW(10)
00a4e1 c02c      	RJMP _0x2040101
                 _0x20400D2:
00a4e2 85eb      	LDD  R30,Y+11
00a4e3 70ef      	ANDI R30,LOW(0xF)
00a4e4 2fae      	MOV  R26,R30
00a4e5 89e8      	LDD  R30,Y+16
00a4e6 78e0      	ANDI R30,LOW(0x80)
00a4e7 1fee      	ROL  R30
00a4e8 e0e0      	LDI  R30,0
00a4e9 1fee      	ROL  R30
00a4ea 0fae      	ADD  R26,R30
00a4eb 85ef      	LDD  R30,Y+15
00a4ec 70e3      	ANDI R30,LOW(0x3)
00a4ed 0fee      	LSL  R30
00a4ee 0fea      	ADD  R30,R26
00a4ef 5fee      	SUBI R30,-LOW(2)
00a4f0 2f0e      	MOV  R16,R30
00a4f1 85ee      	LDD  R30,Y+14
00a4f2 95e2      	SWAP R30
00a4f3 70ef      	ANDI R30,0xF
00a4f4 95e6      	LSR  R30
00a4f5 95e6      	LSR  R30
00a4f6 2fae      	MOV  R26,R30
00a4f7 85ed      	LDD  R30,Y+13
00a4f8 e0f0      	LDI  R31,0
00a4f9 940e d8e3 	CALL __LSLW2
00a4fb e0b0      	LDI  R27,0
00a4fc 0fae      	ADD  R26,R30
00a4fd 1fbf      	ADC  R27,R31
00a4fe 85ec      	LDD  R30,Y+12
00a4ff 70e3      	ANDI R30,LOW(0x3)
00a500 e0f0      	LDI  R31,0
00a501 940e d8e3 	CALL __LSLW2
00a503 2ffe      	MOV  R31,R30
00a504 e0e0      	LDI  R30,0
00a505 0fea      	ADD  R30,R26
00a506 1ffb      	ADC  R31,R27
00a507 9631      	ADIW R30,1
00a508 019f      	MOVW R18,R30
00a509 01d9      	MOVW R26,R18
00a50a 2788      	CLR  R24
00a50b 2799      	CLR  R25
00a50c 2fe0      	MOV  R30,R16
00a50d 50e9      	SUBI R30,LOW(9)
                 _0x2040101:
00a50e 940e d8c7 	CALL __LSLD12
00a510 01da      	MOVW R26,R20
00a511 940e d9ff 	CALL __PUTDP1
00a513 e010      	LDI  R17,LOW(0)
                 _0x20400CF:
00a514 c110      	RJMP _0x20400CB
                 _0x20400CE:
00a515 30e2      	CPI  R30,LOW(0x2)
00a516 f439      	BRNE _0x20400D4
00a517 01da      	MOVW R26,R20
00a518 e0e0      	LDI  R30,LOW(512)
00a519 e0f2      	LDI  R31,HIGH(512)
00a51a 93ed      	ST   X+,R30
00a51b 93fc      	ST   X,R31
00a51c e010      	LDI  R17,LOW(0)
00a51d c107      	RJMP _0x20400CB
                 _0x20400D4:
00a51e 30e3      	CPI  R30,LOW(0x3)
00a51f f011      	BREQ PC+3
00a520 940c a5ca 	JMP _0x20400D5
00a522 91e0 1aaa 	LDS  R30,_card_type_G102
00a524 70e4      	ANDI R30,LOW(0x4)
00a525 f179      	BREQ _0x20400D6
00a526 eced      	LDI  R30,LOW(205)
00a527 93ea      	ST   -Y,R30
                +
00a528 e0a0     +LDI R26 , LOW ( 0x0 )
00a529 e0b0     +LDI R27 , HIGH ( 0x0 )
00a52a e080     +LDI R24 , BYTE3 ( 0x0 )
00a52b e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a52c dd40      	RCALL _send_cmd_G102
00a52d 30e0      	CPI  R30,0
00a52e f529      	BRNE _0x20400D7
00a52f efef      	LDI  R30,LOW(255)
00a530 bdee      	OUT  0x2E,R30
                 _0x20400D8:
00a531 b5ed      	IN   R30,0x2D
00a532 ffe7      	SBRS R30,7
00a533 cffd      	RJMP _0x20400D8
00a534 01fe      	MOVW R30,R28
00a535 9636      	ADIW R30,6
00a536 93fa      	ST   -Y,R31
00a537 93ea      	ST   -Y,R30
00a538 e1a0      	LDI  R26,LOW(16)
00a539 e0b0      	LDI  R27,0
00a53a dc89      	RCALL _rx_datablock_G102
00a53b 30e0      	CPI  R30,0
00a53c f0b9      	BREQ _0x20400DB
00a53d e300      	LDI  R16,LOW(48)
                 _0x20400DD:
00a53e 3000      	CPI  R16,0
00a53f f039      	BREQ _0x20400DE
00a540 efef      	LDI  R30,LOW(255)
00a541 bdee      	OUT  0x2E,R30
                 _0x20400DF:
00a542 b5ed      	IN   R30,0x2D
00a543 ffe7      	SBRS R30,7
00a544 cffd      	RJMP _0x20400DF
00a545 5001      	SUBI R16,1
00a546 cff7      	RJMP _0x20400DD
                 _0x20400DE:
00a547 89e8      	LDD  R30,Y+16
00a548 95e2      	SWAP R30
00a549 70ef      	ANDI R30,0xF
                +
00a54a e1a0     +LDI R26 , LOW ( 0x10 )
00a54b e0b0     +LDI R27 , HIGH ( 0x10 )
00a54c e080     +LDI R24 , BYTE3 ( 0x10 )
00a54d e090     +LDI R25 , BYTE4 ( 0x10 )
                 	__GETD2N 0x10
00a54e 940e d8c7 	CALL __LSLD12
00a550 01da      	MOVW R26,R20
00a551 940e d9ff 	CALL __PUTDP1
00a553 e010      	LDI  R17,LOW(0)
                 _0x20400DB:
                 _0x20400D7:
00a554 c074      	RJMP _0x20400E2
                 _0x20400D6:
00a555 e4e9      	LDI  R30,LOW(73)
00a556 93ea      	ST   -Y,R30
                +
00a557 e0a0     +LDI R26 , LOW ( 0x0 )
00a558 e0b0     +LDI R27 , HIGH ( 0x0 )
00a559 e080     +LDI R24 , BYTE3 ( 0x0 )
00a55a e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a55b dd11      	RCALL _send_cmd_G102
00a55c 30e0      	CPI  R30,0
00a55d f449      	BRNE _0x20400E4
00a55e 01fe      	MOVW R30,R28
00a55f 9636      	ADIW R30,6
00a560 93fa      	ST   -Y,R31
00a561 93ea      	ST   -Y,R30
00a562 e1a0      	LDI  R26,LOW(16)
00a563 e0b0      	LDI  R27,0
00a564 dc5f      	RCALL _rx_datablock_G102
00a565 30e0      	CPI  R30,0
00a566 f409      	BRNE _0x20400E5
                 _0x20400E4:
00a567 c061      	RJMP _0x20400E3
                 _0x20400E5:
00a568 91e0 1aaa 	LDS  R30,_card_type_G102
00a56a 70e2      	ANDI R30,LOW(0x2)
00a56b f151      	BREQ _0x20400E6
00a56c 89e8      	LDD  R30,Y+16
00a56d 73ef      	ANDI R30,LOW(0x3F)
00a56e 27ff      	CLR  R31
00a56f 2766      	CLR  R22
00a570 2777      	CLR  R23
00a571 940e d8ff 	CALL __LSLD1
00a573 937f      	PUSH R23
00a574 936f      	PUSH R22
00a575 93ff      	PUSH R31
00a576 93ef      	PUSH R30
00a577 89e9      	LDD  R30,Y+17
00a578 78e0      	ANDI R30,LOW(0x80)
00a579 27ff      	CLR  R31
00a57a 2766      	CLR  R22
00a57b 2777      	CLR  R23
00a57c 01df      	MOVW R26,R30
00a57d 01cb      	MOVW R24,R22
00a57e e0e7      	LDI  R30,LOW(7)
00a57f 940e d8d3 	CALL __LSRD12
00a581 91af      	POP  R26
00a582 91bf      	POP  R27
00a583 918f      	POP  R24
00a584 919f      	POP  R25
00a585 940e d894 	CALL __ADDD12
                +
00a587 5fef     +SUBI R30 , LOW ( - 1 )
00a588 4fff     +SBCI R31 , HIGH ( - 1 )
00a589 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a58a 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a58b 01df      	MOVW R26,R30
00a58c 01cb      	MOVW R24,R22
00a58d 89eb      	LDD  R30,Y+19
00a58e 95e2      	SWAP R30
00a58f 70ef      	ANDI R30,0xF
00a590 95e6      	LSR  R30
00a591 95e6      	LSR  R30
00a592 50e1      	SUBI R30,LOW(1)
00a593 940e d8c7 	CALL __LSLD12
00a595 c02f      	RJMP _0x2040102
                 _0x20400E6:
00a596 89e8      	LDD  R30,Y+16
00a597 77ec      	ANDI R30,LOW(0x7C)
00a598 95e6      	LSR  R30
00a599 95e6      	LSR  R30
00a59a 27ff      	CLR  R31
00a59b 2766      	CLR  R22
00a59c 2777      	CLR  R23
                +
00a59d 5fef     +SUBI R30 , LOW ( - 1 )
00a59e 4fff     +SBCI R31 , HIGH ( - 1 )
00a59f 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a5a0 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a5a1 937f      	PUSH R23
00a5a2 936f      	PUSH R22
00a5a3 93ff      	PUSH R31
00a5a4 93ef      	PUSH R30
00a5a5 89e9      	LDD  R30,Y+17
00a5a6 70e3      	ANDI R30,LOW(0x3)
00a5a7 27ff      	CLR  R31
00a5a8 2766      	CLR  R22
00a5a9 2777      	CLR  R23
00a5aa 01df      	MOVW R26,R30
00a5ab 01cb      	MOVW R24,R22
00a5ac e0e3      	LDI  R30,LOW(3)
00a5ad 940e d8c7 	CALL __LSLD12
00a5af 01df      	MOVW R26,R30
00a5b0 01cb      	MOVW R24,R22
00a5b1 89e9      	LDD  R30,Y+17
00a5b2 7ee0      	ANDI R30,LOW(0xE0)
00a5b3 95e2      	SWAP R30
00a5b4 70ef      	ANDI R30,0xF
00a5b5 95e6      	LSR  R30
00a5b6 27ff      	CLR  R31
00a5b7 2766      	CLR  R22
00a5b8 2777      	CLR  R23
00a5b9 940e d894 	CALL __ADDD12
                +
00a5bb 5fef     +SUBI R30 , LOW ( - 1 )
00a5bc 4fff     +SBCI R31 , HIGH ( - 1 )
00a5bd 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00a5be 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00a5bf 91af      	POP  R26
00a5c0 91bf      	POP  R27
00a5c1 918f      	POP  R24
00a5c2 919f      	POP  R25
00a5c3 940e d93a 	CALL __MULD12U
                 _0x2040102:
00a5c5 01da      	MOVW R26,R20
00a5c6 940e d9ff 	CALL __PUTDP1
00a5c8 e010      	LDI  R17,LOW(0)
                 _0x20400E3:
                 _0x20400E2:
00a5c9 c05b      	RJMP _0x20400CB
                 _0x20400D5:
00a5ca 30ea      	CPI  R30,LOW(0xA)
00a5cb f431      	BRNE _0x20400E8
00a5cc 91e0 1aaa 	LDS  R30,_card_type_G102
00a5ce 01da      	MOVW R26,R20
00a5cf 93ec      	ST   X,R30
00a5d0 e010      	LDI  R17,LOW(0)
00a5d1 c053      	RJMP _0x20400CB
                 _0x20400E8:
00a5d2 30eb      	CPI  R30,LOW(0xB)
00a5d3 f499      	BRNE _0x20400E9
00a5d4 e4e9      	LDI  R30,LOW(73)
00a5d5 93ea      	ST   -Y,R30
                +
00a5d6 e0a0     +LDI R26 , LOW ( 0x0 )
00a5d7 e0b0     +LDI R27 , HIGH ( 0x0 )
00a5d8 e080     +LDI R24 , BYTE3 ( 0x0 )
00a5d9 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a5da dc92      	RCALL _send_cmd_G102
00a5db 30e0      	CPI  R30,0
00a5dc f439      	BRNE _0x20400EB
00a5dd 935a      	ST   -Y,R21
00a5de 934a      	ST   -Y,R20
00a5df e1a0      	LDI  R26,LOW(16)
00a5e0 e0b0      	LDI  R27,0
00a5e1 dbe2      	RCALL _rx_datablock_G102
00a5e2 30e0      	CPI  R30,0
00a5e3 f409      	BRNE _0x20400EC
                 _0x20400EB:
00a5e4 c001      	RJMP _0x20400EA
                 _0x20400EC:
00a5e5 e010      	LDI  R17,LOW(0)
                 _0x20400EA:
00a5e6 c03e      	RJMP _0x20400CB
                 _0x20400E9:
00a5e7 30ec      	CPI  R30,LOW(0xC)
00a5e8 f499      	BRNE _0x20400ED
00a5e9 e4ea      	LDI  R30,LOW(74)
00a5ea 93ea      	ST   -Y,R30
                +
00a5eb e0a0     +LDI R26 , LOW ( 0x0 )
00a5ec e0b0     +LDI R27 , HIGH ( 0x0 )
00a5ed e080     +LDI R24 , BYTE3 ( 0x0 )
00a5ee e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a5ef dc7d      	RCALL _send_cmd_G102
00a5f0 30e0      	CPI  R30,0
00a5f1 f439      	BRNE _0x20400EF
00a5f2 935a      	ST   -Y,R21
00a5f3 934a      	ST   -Y,R20
00a5f4 e1a0      	LDI  R26,LOW(16)
00a5f5 e0b0      	LDI  R27,0
00a5f6 dbcd      	RCALL _rx_datablock_G102
00a5f7 30e0      	CPI  R30,0
00a5f8 f409      	BRNE _0x20400F0
                 _0x20400EF:
00a5f9 c001      	RJMP _0x20400EE
                 _0x20400F0:
00a5fa e010      	LDI  R17,LOW(0)
                 _0x20400EE:
00a5fb c029      	RJMP _0x20400CB
                 _0x20400ED:
00a5fc 30ed      	CPI  R30,LOW(0xD)
00a5fd f469      	BRNE _0x20400F1
00a5fe e7ea      	LDI  R30,LOW(122)
00a5ff 93ea      	ST   -Y,R30
                +
00a600 e0a0     +LDI R26 , LOW ( 0x0 )
00a601 e0b0     +LDI R27 , HIGH ( 0x0 )
00a602 e080     +LDI R24 , BYTE3 ( 0x0 )
00a603 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a604 dc68      	RCALL _send_cmd_G102
00a605 30e0      	CPI  R30,0
00a606 f419      	BRNE _0x20400F2
00a607 01da      	MOVW R26,R20
00a608 dcc6      	RCALL _rx_spi4_G102
00a609 e010      	LDI  R17,LOW(0)
                 _0x20400F2:
00a60a c01a      	RJMP _0x20400CB
                 _0x20400F1:
00a60b 30ee      	CPI  R30,LOW(0xE)
00a60c f4b9      	BRNE _0x20400F9
00a60d eced      	LDI  R30,LOW(205)
00a60e 93ea      	ST   -Y,R30
                +
00a60f e0a0     +LDI R26 , LOW ( 0x0 )
00a610 e0b0     +LDI R27 , HIGH ( 0x0 )
00a611 e080     +LDI R24 , BYTE3 ( 0x0 )
00a612 e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00a613 dc59      	RCALL _send_cmd_G102
00a614 30e0      	CPI  R30,0
00a615 f469      	BRNE _0x20400F4
00a616 efef      	LDI  R30,LOW(255)
00a617 bdee      	OUT  0x2E,R30
                 _0x20400F5:
00a618 b5ed      	IN   R30,0x2D
00a619 ffe7      	SBRS R30,7
00a61a cffd      	RJMP _0x20400F5
00a61b 935a      	ST   -Y,R21
00a61c 934a      	ST   -Y,R20
00a61d e4a0      	LDI  R26,LOW(64)
00a61e e0b0      	LDI  R27,0
00a61f dba4      	RCALL _rx_datablock_G102
00a620 30e0      	CPI  R30,0
00a621 f009      	BREQ _0x20400F8
00a622 e010      	LDI  R17,LOW(0)
                 _0x20400F8:
                 _0x20400F4:
00a623 c001      	RJMP _0x20400CB
                 _0x20400F9:
00a624 e014      	LDI  R17,LOW(4)
                 _0x20400CB:
00a625 db97      	RCALL _release_spi_G102
00a626 2fe1      	MOV  R30,R17
                 _0x20E0022:
00a627 940e daa0 	CALL __LOADLOCR6
00a629 966a      	ADIW R28,26
00a62a 9508      	RET
                 _disk_timerproc:
00a62b 931a      	ST   -Y,R17
00a62c 930a      	ST   -Y,R16
00a62d 9110 1aa8 	LDS  R17,_timer1_G102
00a62f 3010      	CPI  R17,0
00a630 f019      	BREQ _0x20400FA
00a631 5011      	SUBI R17,LOW(1)
00a632 9310 1aa8 	STS  _timer1_G102,R17
                 _0x20400FA:
00a634 9110 1aa9 	LDS  R17,_timer2_G102
00a636 3010      	CPI  R17,0
00a637 f019      	BREQ _0x20400FB
00a638 5011      	SUBI R17,LOW(1)
00a639 9310 1aa9 	STS  _timer2_G102,R17
                 _0x20400FB:
00a63b 9110 1aab 	LDS  R17,_pv_S102000B000
00a63d b1e0      	IN   R30,0x0
00a63e 70e2      	ANDI R30,LOW(0x2)
00a63f 2fae      	MOV  R26,R30
00a640 b1e0      	IN   R30,0x0
00a641 70e1      	ANDI R30,LOW(0x1)
00a642 2bea      	OR   R30,R26
00a643 93e0 1aab 	STS  _pv_S102000B000,R30
00a645 17e1      	CP   R30,R17
00a646 f481      	BRNE _0x20400FC
00a647 9100 1aa7 	LDS  R16,_status_G102
00a649 70e2      	ANDI R30,LOW(0x2)
00a64a f011      	BREQ _0x20400FD
00a64b 6004      	ORI  R16,LOW(4)
00a64c c001      	RJMP _0x20400FE
                 _0x20400FD:
00a64d 7f0b      	ANDI R16,LOW(251)
                 _0x20400FE:
00a64e 91e0 1aab 	LDS  R30,_pv_S102000B000
00a650 70e1      	ANDI R30,LOW(0x1)
00a651 f011      	BREQ _0x20400FF
00a652 6003      	ORI  R16,LOW(3)
00a653 c001      	RJMP _0x2040100
                 _0x20400FF:
00a654 7f0d      	ANDI R16,LOW(253)
                 _0x2040100:
00a655 9300 1aa7 	STS  _status_G102,R16
                 _0x20400FC:
00a657 9109      	LD   R16,Y+
00a658 9119      	LD   R17,Y+
00a659 9508      	RET
                 
                 	.CSEG
                 _get_fattime:
00a65a 9727      	SBIW R28,7
00a65b 91a0 1463 	LDS  R26,_prtc_get_time
00a65d 91b0 1464 	LDS  R27,_prtc_get_time+1
00a65f 9180 1465 	LDS  R24,_prtc_get_time+2
00a661 9190 1466 	LDS  R25,_prtc_get_time+3
00a663 940e da89 	CALL __CPD02
00a665 f059      	BREQ _0x2060004
00a666 91a0 1467 	LDS  R26,_prtc_get_date
00a668 91b0 1468 	LDS  R27,_prtc_get_date+1
00a66a 9180 1469 	LDS  R24,_prtc_get_date+2
00a66c 9190 146a 	LDS  R25,_prtc_get_date+3
00a66e 940e da89 	CALL __CPD02
00a670 f429      	BRNE _0x2060003
                 _0x2060004:
                +
00a671 e0e0     +LDI R30 , LOW ( 0x3A210000 )
00a672 e0f0     +LDI R31 , HIGH ( 0x3A210000 )
00a673 e261     +LDI R22 , BYTE3 ( 0x3A210000 )
00a674 e37a     +LDI R23 , BYTE4 ( 0x3A210000 )
                 	__GETD1N 0x3A210000
00a675 c070      	RJMP _0x20E0021
                 _0x2060003:
00a676 940e be01 	CALL SUBOPT_0x56
00a678 940e be5b 	CALL SUBOPT_0x63
00a67a 01de      	MOVW R26,R28
00a67b 9618      	ADIW R26,8
                +
00a67c 91e0 1463+LDS R30 , _prtc_get_time + ( 0 )
00a67e 91f0 1464+LDS R31 , _prtc_get_time + ( 0 ) + 1
00a680 9160 1465+LDS R22 , _prtc_get_time + ( 0 ) + 2
00a682 bf6c     +OUT EIND , R22
00a683 9519     +EICALL
                 	__CALL1MN _prtc_get_time,0
00a684 01fe      	MOVW R30,R28
00a685 9633      	ADIW R30,3
00a686 940e cb55 	CALL SUBOPT_0x275
00a688 01de      	MOVW R26,R28
00a689 9614      	ADIW R26,4
                +
00a68a 91e0 1467+LDS R30 , _prtc_get_date + ( 0 )
00a68c 91f0 1468+LDS R31 , _prtc_get_date + ( 0 ) + 1
00a68e 9160 1469+LDS R22 , _prtc_get_date + ( 0 ) + 2
00a690 bf6c     +OUT EIND , R22
00a691 9519     +EICALL
                 	__CALL1MN _prtc_get_date,0
00a692 81e8      	LD   R30,Y
00a693 81f9      	LDD  R31,Y+1
00a694 5bec      	SUBI R30,LOW(1980)
00a695 40f7      	SBCI R31,HIGH(1980)
00a696 2766      	CLR  R22
00a697 2777      	CLR  R23
00a698 01df      	MOVW R26,R30
00a699 01cb      	MOVW R24,R22
00a69a e1e9      	LDI  R30,LOW(25)
00a69b 940e d8c7 	CALL __LSLD12
00a69d 937f      	PUSH R23
00a69e 936f      	PUSH R22
00a69f 93ff      	PUSH R31
00a6a0 93ef      	PUSH R30
00a6a1 81ea      	LDD  R30,Y+2
00a6a2 940e d30a 	CALL SUBOPT_0x36F
00a6a4 01df      	MOVW R26,R30
00a6a5 01cb      	MOVW R24,R22
00a6a6 e1e5      	LDI  R30,LOW(21)
00a6a7 940e d8c7 	CALL __LSLD12
00a6a9 91af      	POP  R26
00a6aa 91bf      	POP  R27
00a6ab 918f      	POP  R24
00a6ac 919f      	POP  R25
00a6ad 940e d8ad 	CALL __ORD12
00a6af 01df      	MOVW R26,R30
00a6b0 01cb      	MOVW R24,R22
00a6b1 81eb      	LDD  R30,Y+3
00a6b2 940e d30a 	CALL SUBOPT_0x36F
00a6b4 940e d90e 	CALL __LSLD16
00a6b6 940e d8ad 	CALL __ORD12
00a6b8 937f      	PUSH R23
00a6b9 936f      	PUSH R22
00a6ba 93ff      	PUSH R31
00a6bb 93ef      	PUSH R30
00a6bc 81ee      	LDD  R30,Y+6
00a6bd 940e d30a 	CALL SUBOPT_0x36F
00a6bf 01df      	MOVW R26,R30
00a6c0 01cb      	MOVW R24,R22
00a6c1 e0eb      	LDI  R30,LOW(11)
00a6c2 940e d8c7 	CALL __LSLD12
00a6c4 91af      	POP  R26
00a6c5 91bf      	POP  R27
00a6c6 918f      	POP  R24
00a6c7 919f      	POP  R25
00a6c8 940e d8ad 	CALL __ORD12
00a6ca 937f      	PUSH R23
00a6cb 936f      	PUSH R22
00a6cc 93ff      	PUSH R31
00a6cd 93ef      	PUSH R30
00a6ce 81ed      	LDD  R30,Y+5
00a6cf 940e d30a 	CALL SUBOPT_0x36F
00a6d1 01df      	MOVW R26,R30
00a6d2 01cb      	MOVW R24,R22
00a6d3 e0e5      	LDI  R30,LOW(5)
00a6d4 940e d8c7 	CALL __LSLD12
00a6d6 91af      	POP  R26
00a6d7 91bf      	POP  R27
00a6d8 918f      	POP  R24
00a6d9 919f      	POP  R25
00a6da 940e d8ad 	CALL __ORD12
00a6dc 01df      	MOVW R26,R30
00a6dd 01cb      	MOVW R24,R22
00a6de 81ec      	LDD  R30,Y+4
00a6df e0f0      	LDI  R31,0
00a6e0 95f5      	ASR  R31
00a6e1 95e7      	ROR  R30
00a6e2 940e d919 	CALL __CWD1
00a6e4 940e d8ad 	CALL __ORD12
                 _0x20E0021:
00a6e6 9627      	ADIW R28,7
00a6e7 9508      	RET
                 _mem_cpy_G103:
00a6e8 940e bf1b 	CALL SUBOPT_0x7F
                +
00a6ea 8508     +LDD R16 , Y + 8
00a6eb 8519     +LDD R17 , Y + 8 + 1
                 	__GETWRS 16,17,8
                +
00a6ec 812e     +LDD R18 , Y + 6
00a6ed 813f     +LDD R19 , Y + 6 + 1
                 	__GETWRS 18,19,6
                 _0x2060006:
00a6ee 81ec      	LDD  R30,Y+4
00a6ef 81fd      	LDD  R31,Y+4+1
00a6f0 9731      	SBIW R30,1
00a6f1 83ec      	STD  Y+4,R30
00a6f2 83fd      	STD  Y+4+1,R31
00a6f3 9631      	ADIW R30,1
00a6f4 f061      	BREQ _0x2060008
00a6f5 931f      	PUSH R17
00a6f6 930f      	PUSH R16
                +
00a6f7 5f0f     +SUBI R16 , LOW ( - 1 )
00a6f8 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a6f9 01d9      	MOVW R26,R18
                +
00a6fa 5f2f     +SUBI R18 , LOW ( - 1 )
00a6fb 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a6fc 91ec      	LD   R30,X
00a6fd 91af      	POP  R26
00a6fe 91bf      	POP  R27
00a6ff 93ec      	ST   X,R30
00a700 cfed      	RJMP _0x2060006
                 _0x2060008:
00a701 940e daa2 	CALL __LOADLOCR4
00a703 c424      	RJMP _0x20E0018
                 _mem_set_G103:
00a704 940e bf27 	CALL SUBOPT_0x81
                +
00a706 810e     +LDD R16 , Y + 6
00a707 811f     +LDD R17 , Y + 6 + 1
                 	__GETWRS 16,17,6
                 _0x206000C:
00a708 81ea      	LDD  R30,Y+2
00a709 81fb      	LDD  R31,Y+2+1
00a70a 9731      	SBIW R30,1
00a70b 83ea      	STD  Y+2,R30
00a70c 83fb      	STD  Y+2+1,R31
00a70d 9631      	ADIW R30,1
00a70e f049      	BREQ _0x206000E
00a70f 931f      	PUSH R17
00a710 930f      	PUSH R16
                +
00a711 5f0f     +SUBI R16 , LOW ( - 1 )
00a712 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a713 81ec      	LDD  R30,Y+4
00a714 91af      	POP  R26
00a715 91bf      	POP  R27
00a716 93ec      	ST   X,R30
00a717 cff0      	RJMP _0x206000C
                 _0x206000E:
00a718 8119      	LDD  R17,Y+1
00a719 8108      	LDD  R16,Y+0
                 _0x20E0020:
00a71a 9628      	ADIW R28,8
00a71b 9508      	RET
                 _mem_cmp_G103:
00a71c 940e c622 	CALL SUBOPT_0x1A8
                +
00a71e 850a     +LDD R16 , Y + 10
00a71f 851b     +LDD R17 , Y + 10 + 1
                 	__GETWRS 16,17,10
                +
00a720 8528     +LDD R18 , Y + 8
00a721 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
                +
00a722 e040     +LDI R20 , LOW ( 0 )
00a723 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
                 _0x206000F:
00a724 81ee      	LDD  R30,Y+6
00a725 81ff      	LDD  R31,Y+6+1
00a726 9731      	SBIW R30,1
00a727 83ee      	STD  Y+6,R30
00a728 83ff      	STD  Y+6+1,R31
00a729 9631      	ADIW R30,1
00a72a f081      	BREQ _0x2060012
00a72b 01d8      	MOVW R26,R16
                +
00a72c 5f0f     +SUBI R16 , LOW ( - 1 )
00a72d 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a72e 900c      	LD   R0,X
00a72f 2411      	CLR  R1
00a730 01d9      	MOVW R26,R18
                +
00a731 5f2f     +SUBI R18 , LOW ( - 1 )
00a732 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a733 91ac      	LD   R26,X
00a734 27bb      	CLR  R27
00a735 01f0      	MOVW R30,R0
00a736 1bea      	SUB  R30,R26
00a737 0bfb      	SBC  R31,R27
00a738 01af      	MOVW R20,R30
00a739 9730      	SBIW R30,0
00a73a f009      	BREQ _0x2060013
                 _0x2060012:
00a73b c001      	RJMP _0x2060011
                 _0x2060013:
00a73c cfe7      	RJMP _0x206000F
                 _0x2060011:
                 _0x20E001F:
00a73d 01fa      	MOVW R30,R20
                 _0x20E001E:
00a73e 940e daa0 	CALL __LOADLOCR6
00a740 962c      	ADIW R28,12
00a741 9508      	RET
                 _chk_chrf_G103:
00a742 93ba      	ST   -Y,R27
00a743 93aa      	ST   -Y,R26
                 _0x2060014:
00a744 940e c077 	CALL SUBOPT_0xB5
                +
00a746 bf6b     +OUT RAMPZ , R22
00a747 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00a748 30e0      	CPI  R30,0
00a749 f051      	BREQ _0x2060017
00a74a 940e c077 	CALL SUBOPT_0xB5
                +
00a74c bf6b     +OUT RAMPZ , R22
00a74d 91a6     +ELPM R26 , Z
                 	__GETBRPF 26
00a74e 81e8      	LD   R30,Y
00a74f 81f9      	LDD  R31,Y+1
00a750 e0b0      	LDI  R27,0
00a751 17ea      	CP   R30,R26
00a752 07fb      	CPC  R31,R27
00a753 f409      	BRNE _0x2060018
                 _0x2060017:
00a754 c005      	RJMP _0x2060016
                 _0x2060018:
00a755 01de      	MOVW R26,R28
00a756 9612      	ADIW R26,2
00a757 940e d30e 	CALL SUBOPT_0x370
00a759 cfea      	RJMP _0x2060014
                 _0x2060016:
00a75a 940e c077 	CALL SUBOPT_0xB5
                +
00a75c bf6b     +OUT RAMPZ , R22
00a75d 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00a75e e0f0      	LDI  R31,0
                 _0x20E001D:
00a75f 9626      	ADIW R28,6
00a760 9508      	RET
                 _move_window_G103:
00a761 940e da2e 	CALL __PUTPARD2
00a763 9724      	SBIW R28,4
00a764 931a      	ST   -Y,R17
00a765 85a9      	LDD  R26,Y+9
00a766 85ba      	LDD  R27,Y+9+1
00a767 969e      	ADIW R26,46
00a768 940e d316 	CALL SUBOPT_0x371
00a76a 940e d31d 	CALL SUBOPT_0x372
00a76c 940e cb46 	CALL SUBOPT_0x272
00a76e 940e da8f 	CALL __CPD12
00a770 f411      	BRNE PC+3
00a771 940c a7c3 	JMP _0x2060019
00a773 85e9      	LDD  R30,Y+9
00a774 85fa      	LDD  R31,Y+9+1
00a775 81e4      	LDD  R30,Z+4
00a776 30e0      	CPI  R30,0
00a777 f199      	BREQ _0x206001A
00a778 940e d322 	CALL SUBOPT_0x373
00a77a 30e0      	CPI  R30,0
00a77b f011      	BREQ _0x206001B
00a77c e0e1      	LDI  R30,LOW(1)
00a77d c046      	RJMP _0x20E001C
                 _0x206001B:
00a77e 85a9      	LDD  R26,Y+9
00a77f 85ba      	LDD  R27,Y+9+1
00a780 9614      	ADIW R26,4
00a781 e0e0      	LDI  R30,LOW(0)
00a782 93ec      	ST   X,R30
00a783 85e9      	LDD  R30,Y+9
00a784 85fa      	LDD  R31,Y+9+1
00a785 940e d332 	CALL SUBOPT_0x374
00a787 010d      	MOVW R0,R26
00a788 85a9      	LDD  R26,Y+9
00a789 85ba      	LDD  R27,Y+9+1
00a78a 965a      	ADIW R26,26
00a78b 940e d9f4 	CALL __GETD1P
00a78d 01d0      	MOVW R26,R0
00a78e 940e d894 	CALL __ADDD12
00a790 940e cb46 	CALL SUBOPT_0x272
00a792 940e da94 	CALL __CPD21
00a794 f4b0      	BRSH _0x206001C
00a795 85e9      	LDD  R30,Y+9
00a796 85fa      	LDD  R31,Y+9+1
00a797 8113      	LDD  R17,Z+3
                 _0x206001E:
00a798 3012      	CPI  R17,2
00a799 f088      	BRLO _0x206001F
00a79a 85a9      	LDD  R26,Y+9
00a79b 85ba      	LDD  R27,Y+9+1
00a79c 965a      	ADIW R26,26
00a79d 940e d9f4 	CALL __GETD1P
00a79f 940e cb46 	CALL SUBOPT_0x272
00a7a1 940e d894 	CALL __ADDD12
                +
00a7a3 83e9     +STD Y + 1 , R30
00a7a4 83fa     +STD Y + 1 + 1 , R31
00a7a5 836b     +STD Y + 1 + 2 , R22
00a7a6 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00a7a7 940e d322 	CALL SUBOPT_0x373
00a7a9 5011      	SUBI R17,1
00a7aa cfed      	RJMP _0x206001E
                 _0x206001F:
                 _0x206001C:
                 _0x206001A:
00a7ab 940e d31d 	CALL SUBOPT_0x372
00a7ad 940e da7d 	CALL __CPD10
00a7af f099      	BREQ _0x2060020
00a7b0 85e9      	LDD  R30,Y+9
00a7b1 85fa      	LDD  R31,Y+9+1
00a7b2 81a1      	LDD  R26,Z+1
00a7b3 93aa      	ST   -Y,R26
00a7b4 85ea      	LDD  R30,Y+10
00a7b5 85fb      	LDD  R31,Y+10+1
00a7b6 96f2      	ADIW R30,50
00a7b7 940e d337 	CALL SUBOPT_0x375
00a7b9 f011      	BREQ _0x2060021
00a7ba e0e1      	LDI  R30,LOW(1)
00a7bb c008      	RJMP _0x20E001C
                 _0x2060021:
00a7bc 940e d31d 	CALL SUBOPT_0x372
                +
00a7be 85a9     +LDD R26 , Y + 9
00a7bf 85ba     +LDD R27 , Y + 9 + 1
00a7c0 969e     +ADIW R26 , 46
00a7c1 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 9,46
                 _0x2060020:
                 _0x2060019:
00a7c3 e0e0      	LDI  R30,LOW(0)
                 _0x20E001C:
00a7c4 8118      	LDD  R17,Y+0
00a7c5 962b      	ADIW R28,11
00a7c6 9508      	RET
                 _sync_G103:
00a7c7 93ba      	ST   -Y,R27
00a7c8 93aa      	ST   -Y,R26
00a7c9 931a      	ST   -Y,R17
00a7ca 81e9      	LDD  R30,Y+1
00a7cb 81fa      	LDD  R31,Y+1+1
00a7cc 93fa      	ST   -Y,R31
00a7cd 93ea      	ST   -Y,R30
00a7ce 940e d342 	CALL SUBOPT_0x376
00a7d0 2f1e      	MOV  R17,R30
00a7d1 3010      	CPI  R17,0
00a7d2 f011      	BREQ PC+3
00a7d3 940c a837 	JMP _0x2060022
00a7d5 81a9      	LDD  R26,Y+1
00a7d6 81ba      	LDD  R27,Y+1+1
00a7d7 91ac      	LD   R26,X
00a7d8 30a3      	CPI  R26,LOW(0x3)
00a7d9 f429      	BRNE _0x2060024
00a7da 81e9      	LDD  R30,Y+1
00a7db 81fa      	LDD  R31,Y+1+1
00a7dc 81e5      	LDD  R30,Z+5
00a7dd 30e0      	CPI  R30,0
00a7de f409      	BRNE _0x2060025
                 _0x2060024:
00a7df c04b      	RJMP _0x2060023
                 _0x2060025:
00a7e0 81a9      	LDD  R26,Y+1
00a7e1 81ba      	LDD  R27,Y+1+1
00a7e2 969e      	ADIW R26,46
00a7e3 940e bf79 	CALL SUBOPT_0x8F
00a7e5 81e9      	LDD  R30,Y+1
00a7e6 81fa      	LDD  R31,Y+1+1
00a7e7 940e d346 	CALL SUBOPT_0x377
00a7e9 81e9      	LDD  R30,Y+1
00a7ea 81fa      	LDD  R31,Y+1+1
00a7eb 96f2      	ADIW R30,50
00a7ec 50e2      	SUBI R30,LOW(-510)
00a7ed 4ffe      	SBCI R31,HIGH(-510)
00a7ee e5a5      	LDI  R26,LOW(43605)
00a7ef eaba      	LDI  R27,HIGH(43605)
00a7f0 83a0      	STD  Z+0,R26
00a7f1 83b1      	STD  Z+1,R27
00a7f2 81e9      	LDD  R30,Y+1
00a7f3 81fa      	LDD  R31,Y+1+1
00a7f4 96f2      	ADIW R30,50
                +
00a7f5 e5a2     +LDI R26 , LOW ( 0x41615252 )
00a7f6 e5b2     +LDI R27 , HIGH ( 0x41615252 )
00a7f7 e681     +LDI R24 , BYTE3 ( 0x41615252 )
00a7f8 e491     +LDI R25 , BYTE4 ( 0x41615252 )
                 	__GETD2N 0x41615252
00a7f9 940e c9dd 	CALL SUBOPT_0x23B
00a7fb 81e9      	LDD  R30,Y+1
00a7fc 81fa      	LDD  R31,Y+1+1
00a7fd 96f2      	ADIW R30,50
00a7fe 51ec      	SUBI R30,LOW(-484)
00a7ff 4ffe      	SBCI R31,HIGH(-484)
                +
00a800 e7a2     +LDI R26 , LOW ( 0x61417272 )
00a801 e7b2     +LDI R27 , HIGH ( 0x61417272 )
00a802 e481     +LDI R24 , BYTE3 ( 0x61417272 )
00a803 e691     +LDI R25 , BYTE4 ( 0x61417272 )
                 	__GETD2N 0x61417272
00a804 940e c9dd 	CALL SUBOPT_0x23B
00a806 81e9      	LDD  R30,Y+1
00a807 81fa      	LDD  R31,Y+1+1
00a808 96f2      	ADIW R30,50
00a809 51e8      	SUBI R30,LOW(-488)
00a80a 4ffe      	SBCI R31,HIGH(-488)
00a80b 010f      	MOVW R0,R30
00a80c 81a9      	LDD  R26,Y+1
00a80d 81ba      	LDD  R27,Y+1+1
00a80e 961e      	ADIW R26,14
00a80f 940e d351 	CALL SUBOPT_0x378
00a811 96f2      	ADIW R30,50
00a812 51e4      	SUBI R30,LOW(-492)
00a813 4ffe      	SBCI R31,HIGH(-492)
00a814 010f      	MOVW R0,R30
00a815 81a9      	LDD  R26,Y+1
00a816 81ba      	LDD  R27,Y+1+1
00a817 961a      	ADIW R26,10
00a818 940e d351 	CALL SUBOPT_0x378
00a81a 81a1      	LDD  R26,Z+1
00a81b 93aa      	ST   -Y,R26
00a81c 81ea      	LDD  R30,Y+2
00a81d 81fb      	LDD  R31,Y+2+1
00a81e 96f2      	ADIW R30,50
00a81f 93fa      	ST   -Y,R31
00a820 93ea      	ST   -Y,R30
00a821 81ec      	LDD  R30,Y+4
00a822 81fd      	LDD  R31,Y+4+1
00a823 940e d359 	CALL SUBOPT_0x379
00a825 dbfe      	RCALL _disk_write
00a826 81a9      	LDD  R26,Y+1
00a827 81ba      	LDD  R27,Y+1+1
00a828 9615      	ADIW R26,5
00a829 e0e0      	LDI  R30,LOW(0)
00a82a 93ec      	ST   X,R30
                 _0x2060023:
00a82b 81e9      	LDD  R30,Y+1
00a82c 81fa      	LDD  R31,Y+1+1
00a82d 81a1      	LDD  R26,Z+1
00a82e 93aa      	ST   -Y,R26
00a82f e0e0      	LDI  R30,LOW(0)
00a830 93ea      	ST   -Y,R30
00a831 e0a0      	LDI  R26,LOW(0)
00a832 e0b0      	LDI  R27,HIGH(0)
00a833 dc67      	RCALL _disk_ioctl
00a834 30e0      	CPI  R30,0
00a835 f009      	BREQ _0x2060026
00a836 e011      	LDI  R17,LOW(1)
                 _0x2060026:
                 _0x2060022:
00a837 2fe1      	MOV  R30,R17
                 _0x20E001B:
00a838 8118      	LDD  R17,Y+0
00a839 9623      	ADIW R28,3
00a83a 9508      	RET
                 _get_fat:
00a83b 940e da2e 	CALL __PUTPARD2
00a83d 9724      	SBIW R28,4
00a83e 940e da9b 	CALL __SAVELOCR4
00a840 940e c15d 	CALL SUBOPT_0xDB
00a842 940e d361 	CALL SUBOPT_0x37A
00a844 f050      	BRLO _0x2060028
00a845 85ac      	LDD  R26,Y+12
00a846 85bd      	LDD  R27,Y+12+1
00a847 965e      	ADIW R26,30
00a848 940e d9f4 	CALL __GETD1P
00a84a 940e c15d 	CALL SUBOPT_0xDB
00a84c 940e da94 	CALL __CPD21
00a84e f018      	BRLO _0x2060027
                 _0x2060028:
00a84f 940e d369 	CALL SUBOPT_0x37B
00a851 c062      	RJMP _0x20E001A
                 _0x2060027:
00a852 85ac      	LDD  R26,Y+12
00a853 85bd      	LDD  R27,Y+12+1
00a854 9692      	ADIW R26,34
00a855 940e d36e 	CALL SUBOPT_0x37C
00a857 85ac      	LDD  R26,Y+12
00a858 85bd      	LDD  R27,Y+12+1
00a859 91ec      	LD   R30,X
00a85a 940e c88b 	CALL SUBOPT_0x209
00a85c f559      	BRNE _0x206002D
                +
00a85d 8528     +LDD R18 , Y + 8
00a85e 8539     +LDD R19 , Y + 8 + 1
                 	__GETWRS 18,19,8
00a85f 01f9      	MOVW R30,R18
00a860 95f6      	LSR  R31
00a861 95e7      	ROR  R30
                +
00a862 0f2e     +ADD R18 , R30
00a863 1f3f     +ADC R19 , R31
                 	__ADDWRR 18,19,30,31
00a864 940e c64d 	CALL SUBOPT_0x1AF
00a866 940e d372 	CALL SUBOPT_0x37D
00a868 f009      	BREQ _0x206002E
00a869 c048      	RJMP _0x206002C
                 _0x206002E:
00a86a 940e d381 	CALL SUBOPT_0x37E
00a86c 910c      	LD   R16,X
00a86d 2711      	CLR  R17
                +
00a86e 5f2f     +SUBI R18 , LOW ( - 1 )
00a86f 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00a870 940e c64d 	CALL SUBOPT_0x1AF
00a872 940e d372 	CALL SUBOPT_0x37D
00a874 f5e9      	BRNE _0x206002C
00a875 940e d381 	CALL SUBOPT_0x37E
00a877 91ec      	LD   R30,X
00a878 2ffe      	MOV  R31,R30
00a879 e0e0      	LDI  R30,0
                +
00a87a 2b0e     +OR R16 , R30
00a87b 2b1f     +OR R17 , R31
                 	__ORWRR 16,17,30,31
00a87c 85e8      	LDD  R30,Y+8
00a87d 70e1      	ANDI R30,LOW(0x1)
00a87e f021      	BREQ _0x2060030
00a87f 01f8      	MOVW R30,R16
00a880 940e d8f1 	CALL __LSRW4
00a882 c002      	RJMP _0x206022B
                 _0x2060030:
00a883 01f8      	MOVW R30,R16
00a884 70ff      	ANDI R31,HIGH(0xFFF)
                 _0x206022B:
00a885 2766      	CLR  R22
00a886 2777      	CLR  R23
00a887 c02c      	RJMP _0x20E001A
                 _0x206002D:
00a888 30e2      	CPI  R30,LOW(0x2)
00a889 e0a0      	LDI  R26,HIGH(0x2)
00a88a 07fa      	CPC  R31,R26
00a88b f489      	BRNE _0x2060033
00a88c 940e c64d 	CALL SUBOPT_0x1AF
00a88e 940e bdec 	CALL SUBOPT_0x52
00a890 940e d389 	CALL SUBOPT_0x37F
00a892 940e d390 	CALL SUBOPT_0x380
00a894 f4e9      	BRNE _0x206002C
00a895 85a8      	LDD  R26,Y+8
00a896 85b9      	LDD  R27,Y+8+1
00a897 e0e2      	LDI  R30,LOW(2)
00a898 940e d398 	CALL SUBOPT_0x381
00a89a 940e bc7b 	CALL SUBOPT_0x1D
00a89c c017      	RJMP _0x20E001A
                 _0x2060033:
00a89d 30e3      	CPI  R30,LOW(0x3)
00a89e e0a0      	LDI  R26,HIGH(0x3)
00a89f 07fa      	CPC  R31,R26
00a8a0 f489      	BRNE _0x206002C
00a8a1 940e c64d 	CALL SUBOPT_0x1AF
00a8a3 940e bdec 	CALL SUBOPT_0x52
00a8a5 940e d3a1 	CALL SUBOPT_0x382
00a8a7 940e d390 	CALL SUBOPT_0x380
00a8a9 f441      	BRNE _0x206002C
00a8aa 85a8      	LDD  R26,Y+8
00a8ab 85b9      	LDD  R27,Y+8+1
00a8ac e0e4      	LDI  R30,LOW(4)
00a8ad 940e d398 	CALL SUBOPT_0x381
00a8af 940e d3a8 	CALL SUBOPT_0x383
00a8b1 c002      	RJMP _0x20E001A
                 _0x206002C:
00a8b2 940e bca6 	CALL SUBOPT_0x24
                 _0x20E001A:
00a8b4 940e daa2 	CALL __LOADLOCR4
00a8b6 962e      	ADIW R28,14
00a8b7 9508      	RET
                 _put_fat:
00a8b8 940e da2e 	CALL __PUTPARD2
00a8ba 9724      	SBIW R28,4
00a8bb 940e da99 	CALL __SAVELOCR6
00a8bd 940e d3af 	CALL SUBOPT_0x384
00a8bf 940e d361 	CALL SUBOPT_0x37A
00a8c1 f050      	BRLO _0x2060038
00a8c2 89aa      	LDD  R26,Y+18
00a8c3 89bb      	LDD  R27,Y+18+1
00a8c4 965e      	ADIW R26,30
00a8c5 940e d9f4 	CALL __GETD1P
00a8c7 940e d3af 	CALL SUBOPT_0x384
00a8c9 940e da94 	CALL __CPD21
00a8cb f010      	BRLO _0x2060037
                 _0x2060038:
00a8cc e052      	LDI  R21,LOW(2)
00a8cd c08a      	RJMP _0x206003A
                 _0x2060037:
00a8ce 89aa      	LDD  R26,Y+18
00a8cf 89bb      	LDD  R27,Y+18+1
00a8d0 9692      	ADIW R26,34
00a8d1 940e d9f4 	CALL __GETD1P
00a8d3 940e c086 	CALL SUBOPT_0xB8
00a8d5 89aa      	LDD  R26,Y+18
00a8d6 89bb      	LDD  R27,Y+18+1
00a8d7 91ec      	LD   R30,X
00a8d8 940e c88b 	CALL SUBOPT_0x209
00a8da f011      	BREQ PC+3
00a8db 940c a924 	JMP _0x206003E
                +
00a8dd 850e     +LDD R16 , Y + 14
00a8de 851f     +LDD R17 , Y + 14 + 1
                 	__GETWRS 16,17,14
00a8df 01f8      	MOVW R30,R16
00a8e0 95f6      	LSR  R31
00a8e1 95e7      	ROR  R30
                +
00a8e2 0f0e     +ADD R16 , R30
00a8e3 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00a8e4 940e cbdf 	CALL SUBOPT_0x289
00a8e6 940e d3b4 	CALL SUBOPT_0x385
00a8e8 f009      	BREQ _0x206003F
00a8e9 c069      	RJMP _0x206003D
                 _0x206003F:
00a8ea 940e d3c4 	CALL SUBOPT_0x386
00a8ec f051      	BREQ _0x2060040
00a8ed 01d9      	MOVW R26,R18
00a8ee 91ec      	LD   R30,X
00a8ef 70ef      	ANDI R30,LOW(0xF)
00a8f0 2fae      	MOV  R26,R30
00a8f1 85ea      	LDD  R30,Y+10
00a8f2 e0f0      	LDI  R31,0
00a8f3 940e d8df 	CALL __LSLW4
00a8f5 2bea      	OR   R30,R26
00a8f6 c001      	RJMP _0x2060041
                 _0x2060040:
00a8f7 85ea      	LDD  R30,Y+10
                 _0x2060041:
00a8f8 01d9      	MOVW R26,R18
00a8f9 93ec      	ST   X,R30
                +
00a8fa 5f0f     +SUBI R16 , LOW ( - 1 )
00a8fb 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00a8fc 89aa      	LDD  R26,Y+18
00a8fd 89bb      	LDD  R27,Y+18+1
00a8fe 9614      	ADIW R26,4
00a8ff e0e1      	LDI  R30,LOW(1)
00a900 93ec      	ST   X,R30
00a901 940e cbdf 	CALL SUBOPT_0x289
00a903 940e d3b4 	CALL SUBOPT_0x385
00a905 f009      	BREQ _0x2060043
00a906 c04c      	RJMP _0x206003D
                 _0x2060043:
00a907 940e d3c4 	CALL SUBOPT_0x386
00a909 f049      	BREQ _0x2060044
00a90a 940e bdec 	CALL SUBOPT_0x52
00a90c e0e4      	LDI  R30,LOW(4)
00a90d 940e d8d3 	CALL __LSRD12
00a90f 27ff      	CLR  R31
00a910 2766      	CLR  R22
00a911 2777      	CLR  R23
00a912 c00e      	RJMP _0x2060045
                 _0x2060044:
00a913 01d9      	MOVW R26,R18
00a914 91ec      	LD   R30,X
00a915 7fe0      	ANDI R30,LOW(0xF0)
00a916 2e1e      	MOV  R1,R30
00a917 940e bdec 	CALL SUBOPT_0x52
00a919 e0e8      	LDI  R30,LOW(8)
00a91a 940e d8d3 	CALL __LSRD12
00a91c 27ff      	CLR  R31
00a91d 2766      	CLR  R22
00a91e 2777      	CLR  R23
00a91f 70ef      	ANDI R30,LOW(0xF)
00a920 29e1      	OR   R30,R1
                 _0x2060045:
00a921 01d9      	MOVW R26,R18
00a922 93ec      	ST   X,R30
00a923 c02f      	RJMP _0x206003D
                 _0x206003E:
00a924 30e2      	CPI  R30,LOW(0x2)
00a925 e0a0      	LDI  R26,HIGH(0x2)
00a926 07fa      	CPC  R31,R26
00a927 f499      	BRNE _0x2060047
00a928 940e cbdf 	CALL SUBOPT_0x289
00a92a 940e d3cf 	CALL SUBOPT_0x387
00a92c 940e d389 	CALL SUBOPT_0x37F
00a92e 940e d3d4 	CALL SUBOPT_0x388
00a930 f511      	BRNE _0x206003D
00a931 85ae      	LDD  R26,Y+14
00a932 85bf      	LDD  R27,Y+14+1
00a933 e0e2      	LDI  R30,LOW(2)
00a934 940e d3dd 	CALL SUBOPT_0x389
00a936 85aa      	LDD  R26,Y+10
00a937 85bb      	LDD  R27,Y+10+1
00a938 83a0      	STD  Z+0,R26
00a939 83b1      	STD  Z+1,R27
00a93a c018      	RJMP _0x206003D
                 _0x2060047:
00a93b 30e3      	CPI  R30,LOW(0x3)
00a93c e0a0      	LDI  R26,HIGH(0x3)
00a93d 07fa      	CPC  R31,R26
00a93e f499      	BRNE _0x206004B
00a93f 940e cbdf 	CALL SUBOPT_0x289
00a941 940e d3cf 	CALL SUBOPT_0x387
00a943 940e d3a1 	CALL SUBOPT_0x382
00a945 940e d3d4 	CALL SUBOPT_0x388
00a947 f459      	BRNE _0x206003D
00a948 85ae      	LDD  R26,Y+14
00a949 85bf      	LDD  R27,Y+14+1
00a94a e0e4      	LDI  R30,LOW(4)
00a94b 940e d3dd 	CALL SUBOPT_0x389
00a94d 940e bdec 	CALL SUBOPT_0x52
00a94f 940e c9dd 	CALL SUBOPT_0x23B
00a951 c001      	RJMP _0x206003D
                 _0x206004B:
00a952 e052      	LDI  R21,LOW(2)
                 _0x206003D:
00a953 89aa      	LDD  R26,Y+18
00a954 89bb      	LDD  R27,Y+18+1
00a955 9614      	ADIW R26,4
00a956 e0e1      	LDI  R30,LOW(1)
00a957 93ec      	ST   X,R30
                 _0x206003A:
00a958 2fe5      	MOV  R30,R21
00a959 940e daa0 	CALL __LOADLOCR6
00a95b 9664      	ADIW R28,20
00a95c 9508      	RET
                 _remove_chain_G103:
00a95d 940e da2e 	CALL __PUTPARD2
00a95f 9724      	SBIW R28,4
00a960 931a      	ST   -Y,R17
00a961 940e d3e6 	CALL SUBOPT_0x38A
00a963 940e d361 	CALL SUBOPT_0x37A
00a965 f018      	BRLO _0x206004D
00a966 940e d3eb 	CALL SUBOPT_0x38B
00a968 f010      	BRLO _0x206004C
                 _0x206004D:
00a969 e012      	LDI  R17,LOW(2)
00a96a c03e      	RJMP _0x206004F
                 _0x206004C:
00a96b e010      	LDI  R17,LOW(0)
                 _0x2060050:
00a96c 940e d3eb 	CALL SUBOPT_0x38B
00a96e f5d0      	BRSH _0x2060052
00a96f 940e c5bc 	CALL SUBOPT_0x195
00a971 940e be72 	CALL SUBOPT_0x67
00a973 dec7      	RCALL _get_fat
                +
00a974 83e9     +STD Y + 1 , R30
00a975 83fa     +STD Y + 1 + 1 , R31
00a976 836b     +STD Y + 1 + 2 , R22
00a977 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00a978 940e d3f4 	CALL SUBOPT_0x38C
00a97a 940e da7d 	CALL __CPD10
00a97c f161      	BREQ _0x2060052
00a97d 940e cb46 	CALL SUBOPT_0x272
00a97f 940e d3f9 	CALL SUBOPT_0x38D
00a981 f411      	BRNE _0x2060054
00a982 e012      	LDI  R17,LOW(2)
00a983 c025      	RJMP _0x2060052
                 _0x2060054:
00a984 940e cb46 	CALL SUBOPT_0x272
00a986 940e bd3e 	CALL SUBOPT_0x3A
00a988 f411      	BRNE _0x2060055
00a989 e011      	LDI  R17,LOW(1)
00a98a c01e      	RJMP _0x2060052
                 _0x2060055:
00a98b 940e c5bc 	CALL SUBOPT_0x195
00a98d 940e bd72 	CALL SUBOPT_0x3F
00a98f 940e bcda 	CALL SUBOPT_0x2C
00a991 df26      	RCALL _put_fat
00a992 2f1e      	MOV  R17,R30
00a993 3010      	CPI  R17,0
00a994 f4a1      	BRNE _0x2060052
00a995 85e9      	LDD  R30,Y+9
00a996 85fa      	LDD  R31,Y+9+1
00a997 940e d401 	CALL SUBOPT_0x38E
00a999 f051      	BREQ _0x2060057
00a99a 85a9      	LDD  R26,Y+9
00a99b 85ba      	LDD  R27,Y+9+1
00a99c 961e      	ADIW R26,14
00a99d 940e bfa0 	CALL SUBOPT_0x93
00a99f 85a9      	LDD  R26,Y+9
00a9a0 85ba      	LDD  R27,Y+9+1
00a9a1 9615      	ADIW R26,5
00a9a2 e0e1      	LDI  R30,LOW(1)
00a9a3 93ec      	ST   X,R30
                 _0x2060057:
00a9a4 940e d3f4 	CALL SUBOPT_0x38C
00a9a6 940e d407 	CALL SUBOPT_0x38F
00a9a8 cfc3      	RJMP _0x2060050
                 _0x2060052:
                 _0x206004F:
00a9a9 2fe1      	MOV  R30,R17
00a9aa 8118      	LDD  R17,Y+0
00a9ab c26f      	RJMP _0x20E0016
                 _create_chain_G103:
00a9ac 940e da2e 	CALL __PUTPARD2
00a9ae 9760      	SBIW R28,16
00a9af 89ac      	LDD  R26,Y+20
00a9b0 89bd      	LDD  R27,Y+20+1
00a9b1 965e      	ADIW R26,30
00a9b2 940e d9f4 	CALL __GETD1P
00a9b4 940e c158 	CALL SUBOPT_0xD9
00a9b6 940e bc01 	CALL SUBOPT_0xC
00a9b8 940e da7d 	CALL __CPD10
00a9ba f4b1      	BRNE _0x2060058
00a9bb 89ac      	LDD  R26,Y+20
00a9bc 89bd      	LDD  R27,Y+20+1
00a9bd 961a      	ADIW R26,10
00a9be 940e d36e 	CALL SUBOPT_0x37C
00a9c0 940e c043 	CALL SUBOPT_0xAB
00a9c2 940e da89 	CALL __CPD02
00a9c4 f039      	BREQ _0x206005A
00a9c5 940e bf4d 	CALL SUBOPT_0x87
00a9c7 940e c043 	CALL SUBOPT_0xAB
00a9c9 940e da94 	CALL __CPD21
00a9cb f020      	BRLO _0x2060059
                 _0x206005A:
00a9cc 940e d369 	CALL SUBOPT_0x37B
00a9ce 940e c03e 	CALL SUBOPT_0xAA
                 _0x2060059:
00a9d0 c01d      	RJMP _0x206005C
                 _0x2060058:
00a9d1 940e d40c 	CALL SUBOPT_0x390
00a9d3 940e d411 	CALL SUBOPT_0x391
00a9d5 de65      	RCALL _get_fat
00a9d6 940e c1d3 	CALL SUBOPT_0xED
00a9d8 940e bbfc 	CALL SUBOPT_0xB
00a9da 940e d361 	CALL SUBOPT_0x37A
00a9dc f418      	BRSH _0x206005D
00a9dd 940e d369 	CALL SUBOPT_0x37B
00a9df c083      	RJMP _0x20E0019
                 _0x206005D:
00a9e0 940e bf4d 	CALL SUBOPT_0x87
00a9e2 940e bbfc 	CALL SUBOPT_0xB
00a9e4 940e da94 	CALL __CPD21
00a9e6 f418      	BRSH _0x206005E
00a9e7 940e c162 	CALL SUBOPT_0xDC
00a9e9 c079      	RJMP _0x20E0019
                 _0x206005E:
00a9ea 940e bc01 	CALL SUBOPT_0xC
00a9ec 940e c03e 	CALL SUBOPT_0xAA
                 _0x206005C:
00a9ee 940e bf59 	CALL SUBOPT_0x89
00a9f0 940e d1ed 	CALL SUBOPT_0x33E
                 _0x2060060:
00a9f2 940e bdd3 	CALL SUBOPT_0x4F
00a9f4 940e c0a8 	CALL SUBOPT_0xBE
00a9f6 940e d1ed 	CALL SUBOPT_0x33E
00a9f8 940e bf4d 	CALL SUBOPT_0x87
00a9fa 940e c15d 	CALL SUBOPT_0xDB
00a9fc 940e da94 	CALL __CPD21
00a9fe f050      	BRLO _0x2060062
00a9ff 940e d416 	CALL SUBOPT_0x392
00aa01 940e d1ed 	CALL SUBOPT_0x33E
00aa03 940e d41b 	CALL SUBOPT_0x393
00aa05 f418      	BRSH _0x2060063
00aa06 940e d422 	CALL SUBOPT_0x394
00aa08 c05a      	RJMP _0x20E0019
                 _0x2060063:
                 _0x2060062:
00aa09 940e d40c 	CALL SUBOPT_0x390
00aa0b 940e bdec 	CALL SUBOPT_0x52
00aa0d de2d      	RCALL _get_fat
00aa0e 940e c1dd 	CALL SUBOPT_0xEF
00aa10 940e da7d 	CALL __CPD10
00aa12 f091      	BREQ _0x2060061
00aa13 940e be2e 	CALL SUBOPT_0x5C
00aa15 f029      	BREQ _0x2060066
00aa16 940e bbfc 	CALL SUBOPT_0xB
00aa18 940e d3f9 	CALL SUBOPT_0x38D
00aa1a f419      	BRNE _0x2060065
                 _0x2060066:
00aa1b 940e c162 	CALL SUBOPT_0xDC
00aa1d c045      	RJMP _0x20E0019
                 _0x2060065:
00aa1e 940e d41b 	CALL SUBOPT_0x393
00aa20 f419      	BRNE _0x2060068
00aa21 940e d422 	CALL SUBOPT_0x394
00aa23 c03f      	RJMP _0x20E0019
                 _0x2060068:
00aa24 cfcd      	RJMP _0x2060060
                 _0x2060061:
00aa25 940e d40c 	CALL SUBOPT_0x390
00aa27 940e d165 	CALL SUBOPT_0x32A
                +
00aa29 efaf     +LDI R26 , LOW ( 0xFFFFFFF )
00aa2a efbf     +LDI R27 , HIGH ( 0xFFFFFFF )
00aa2b ef8f     +LDI R24 , BYTE3 ( 0xFFFFFFF )
00aa2c e09f     +LDI R25 , BYTE4 ( 0xFFFFFFF )
                 	__GETD2N 0xFFFFFFF
00aa2d de8a      	RCALL _put_fat
00aa2e 30e0      	CPI  R30,0
00aa2f f019      	BREQ _0x2060069
00aa30 940e bca6 	CALL SUBOPT_0x24
00aa32 c030      	RJMP _0x20E0019
                 _0x2060069:
00aa33 940e bc01 	CALL SUBOPT_0xC
00aa35 940e da7d 	CALL __CPD10
00aa37 f071      	BREQ _0x206006A
00aa38 940e d40c 	CALL SUBOPT_0x390
00aa3a 940e c149 	CALL SUBOPT_0xD6
00aa3c 940e da29 	CALL __PUTPARD1
00aa3e 940e d3af 	CALL SUBOPT_0x384
00aa40 de77      	RCALL _put_fat
00aa41 30e0      	CPI  R30,0
00aa42 f019      	BREQ _0x206006B
00aa43 940e bca6 	CALL SUBOPT_0x24
00aa45 c01d      	RJMP _0x20E0019
                 _0x206006B:
                 _0x206006A:
00aa46 940e bdd3 	CALL SUBOPT_0x4F
                +
00aa48 89ac     +LDD R26 , Y + 20
00aa49 89bd     +LDD R27 , Y + 20 + 1
00aa4a 961a     +ADIW R26 , 10
00aa4b 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 20,10
00aa4d 89ec      	LDD  R30,Y+20
00aa4e 89fd      	LDD  R31,Y+20+1
00aa4f 940e d401 	CALL SUBOPT_0x38E
00aa51 f079      	BREQ _0x206006C
00aa52 89ac      	LDD  R26,Y+20
00aa53 89bd      	LDD  R27,Y+20+1
00aa54 961e      	ADIW R26,14
00aa55 940e d9fa 	CALL __GETD1P_INC
00aa57 9731      	SBIW R30,1
00aa58 4060      	SBCI R22,0
00aa59 4070      	SBCI R23,0
00aa5a 940e da04 	CALL __PUTDP1_DEC
00aa5c 89ac      	LDD  R26,Y+20
00aa5d 89bd      	LDD  R27,Y+20+1
00aa5e 9615      	ADIW R26,5
00aa5f e0e1      	LDI  R30,LOW(1)
00aa60 93ec      	ST   X,R30
                 _0x206006C:
00aa61 940e bdd3 	CALL SUBOPT_0x4F
                 _0x20E0019:
00aa63 9666      	ADIW R28,22
00aa64 9508      	RET
                 _clust2sect:
00aa65 940e da2e 	CALL __PUTPARD2
00aa67 940e bf4d 	CALL SUBOPT_0x87
                +
00aa69 50e2     +SUBI R30 , LOW ( 2 )
00aa6a 40f0     +SBCI R31 , HIGH ( 2 )
00aa6b 4060     +SBCI R22 , BYTE3 ( 2 )
00aa6c 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00aa6d 940e c158 	CALL SUBOPT_0xD9
00aa6f 81ec      	LDD  R30,Y+4
00aa70 81fd      	LDD  R31,Y+4+1
                +
00aa71 8da6     +LDD R26 , Z + 30
00aa72 8db7     +LDD R27 , Z + 30 + 1
00aa73 a180     +LDD R24 , Z + 30 + 2
00aa74 a191     +LDD R25 , Z + 30 + 3
                 	__GETD2Z 30
00aa75 940e d416 	CALL SUBOPT_0x392
00aa77 940e c0be 	CALL SUBOPT_0xC2
00aa79 940e bf6c 	CALL SUBOPT_0x8C
00aa7b 940e da94 	CALL __CPD21
00aa7d f018      	BRLO _0x206006D
00aa7e 940e d422 	CALL SUBOPT_0x394
00aa80 c38f      	RJMP _0x20E0012
                 _0x206006D:
00aa81 81ec      	LDD  R30,Y+4
00aa82 81fd      	LDD  R31,Y+4+1
00aa83 940e cb43 	CALL SUBOPT_0x271
00aa85 940e bf6c 	CALL SUBOPT_0x8C
00aa87 940e cb4b 	CALL SUBOPT_0x273
00aa89 937f      	PUSH R23
00aa8a 936f      	PUSH R22
00aa8b 93ff      	PUSH R31
00aa8c 93ef      	PUSH R30
00aa8d 81ac      	LDD  R26,Y+4
00aa8e 81bd      	LDD  R27,Y+4+1
00aa8f 969a      	ADIW R26,42
00aa90 940e d9f4 	CALL __GETD1P
00aa92 91af      	POP  R26
00aa93 91bf      	POP  R27
00aa94 918f      	POP  R24
00aa95 919f      	POP  R25
00aa96 940e d894 	CALL __ADDD12
00aa98 c377      	RJMP _0x20E0012
                 _dir_seek_G103:
00aa99 940e c1e8 	CALL SUBOPT_0xF1
00aa9b 930a      	ST   -Y,R16
00aa9c 81ee      	LDD  R30,Y+6
00aa9d 81ff      	LDD  R31,Y+6+1
                +
00aa9e 85a8     +LDD R26 , Y + 8
00aa9f 85b9     +LDD R27 , Y + 8 + 1
00aaa0 9614     +ADIW R26 , 4
00aaa1 93ed     +ST X + , R30
00aaa2 93fc     +ST X , R31
                 	__PUTW1SNS 8,4
00aaa3 85a8      	LDD  R26,Y+8
00aaa4 85b9      	LDD  R27,Y+8+1
00aaa5 9616      	ADIW R26,6
00aaa6 940e d9f4 	CALL __GETD1P
00aaa8 940e c1ed 	CALL SUBOPT_0xF2
00aaaa 940e d3f9 	CALL SUBOPT_0x38D
00aaac f029      	BREQ _0x206006F
00aaad 940e d427 	CALL SUBOPT_0x395
00aaaf 940e d42c 	CALL SUBOPT_0x396
00aab1 f010      	BRLO _0x206006E
                 _0x206006F:
00aab2 e0e2      	LDI  R30,LOW(2)
00aab3 c072      	RJMP _0x20E0017
                 _0x206006E:
00aab4 940e c7ec 	CALL SUBOPT_0x1F3
00aab6 f429      	BRNE _0x2060072
00aab7 940e d427 	CALL SUBOPT_0x395
00aab9 81a0      	LD   R26,Z
00aaba 30a3      	CPI  R26,LOW(0x3)
00aabb f009      	BREQ _0x2060073
                 _0x2060072:
00aabc c008      	RJMP _0x2060071
                 _0x2060073:
00aabd 940e d427 	CALL SUBOPT_0x395
00aabf 96b6      	ADIW R30,38
00aac0 01df      	MOVW R26,R30
00aac1 940e d9f4 	CALL __GETD1P
00aac3 940e c072 	CALL SUBOPT_0xB4
                 _0x2060071:
00aac5 940e c7ec 	CALL SUBOPT_0x1F3
00aac7 f491      	BRNE _0x2060074
00aac8 940e d435 	CALL SUBOPT_0x397
00aaca 940e d427 	CALL SUBOPT_0x395
00aacc 9638      	ADIW R30,8
00aacd 01df      	MOVW R26,R30
00aace 940e c559 	CALL SUBOPT_0x183
00aad0 f010      	BRLO _0x2060075
00aad1 e0e2      	LDI  R30,LOW(2)
00aad2 c053      	RJMP _0x20E0017
                 _0x2060075:
00aad3 940e d427 	CALL SUBOPT_0x395
00aad5 96b6      	ADIW R30,38
00aad6 01df      	MOVW R26,R30
00aad7 940e d9f4 	CALL __GETD1P
00aad9 c031      	RJMP _0x206022C
                 _0x2060074:
00aada 940e d427 	CALL SUBOPT_0x395
00aadc 81e2      	LDD  R30,Z+2
00aadd e1a0      	LDI  R26,LOW(16)
00aade 9fea      	MUL  R30,R26
00aadf 0180      	MOVW R16,R0
                 _0x2060077:
00aae0 81ae      	LDD  R26,Y+6
00aae1 81bf      	LDD  R27,Y+6+1
00aae2 17a0      	CP   R26,R16
00aae3 07b1      	CPC  R27,R17
00aae4 f0f8      	BRLO _0x2060079
00aae5 940e d43d 	CALL SUBOPT_0x398
00aae7 940e c043 	CALL SUBOPT_0xAB
00aae9 dd51      	RCALL _get_fat
00aaea 940e c1ed 	CALL SUBOPT_0xF2
00aaec 940e bd3e 	CALL SUBOPT_0x3A
00aaee f411      	BRNE _0x206007A
00aaef e0e1      	LDI  R30,LOW(1)
00aaf0 c035      	RJMP _0x20E0017
                 _0x206007A:
00aaf1 940e c07c 	CALL SUBOPT_0xB6
00aaf3 940e d361 	CALL SUBOPT_0x37A
00aaf5 f028      	BRLO _0x206007C
00aaf6 940e d427 	CALL SUBOPT_0x395
00aaf8 940e d42c 	CALL SUBOPT_0x396
00aafa f010      	BRLO _0x206007B
                 _0x206007C:
00aafb e0e2      	LDI  R30,LOW(2)
00aafc c029      	RJMP _0x20E0017
                 _0x206007B:
00aafd 81ee      	LDD  R30,Y+6
00aafe 81ff      	LDD  R31,Y+6+1
00aaff 1be0      	SUB  R30,R16
00ab00 0bf1      	SBC  R31,R17
00ab01 83ee      	STD  Y+6,R30
00ab02 83ff      	STD  Y+6+1,R31
00ab03 cfdc      	RJMP _0x2060077
                 _0x2060079:
00ab04 940e d435 	CALL SUBOPT_0x397
00ab06 940e d43d 	CALL SUBOPT_0x398
00ab08 940e c043 	CALL SUBOPT_0xAB
00ab0a df5a      	RCALL _clust2sect
                 _0x206022C:
00ab0b 01df      	MOVW R26,R30
00ab0c 01cb      	MOVW R24,R22
00ab0d 81ee      	LDD  R30,Y+6
00ab0e 81ff      	LDD  R31,Y+6+1
00ab0f 940e d8f1 	CALL __LSRW4
00ab11 940e d440 	CALL SUBOPT_0x399
                +
00ab13 85a8     +LDD R26 , Y + 8
00ab14 85b9     +LDD R27 , Y + 8 + 1
00ab15 961e     +ADIW R26 , 14
00ab16 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 8,14
00ab18 940e d427 	CALL SUBOPT_0x395
00ab1a 96f2      	ADIW R30,50
00ab1b 01df      	MOVW R26,R30
00ab1c 81ee      	LDD  R30,Y+6
00ab1d 81ff      	LDD  R31,Y+6+1
00ab1e 940e d445 	CALL SUBOPT_0x39A
                +
00ab20 85a8     +LDD R26 , Y + 8
00ab21 85b9     +LDD R27 , Y + 8 + 1
00ab22 9652     +ADIW R26 , 18
00ab23 93ed     +ST X + , R30
00ab24 93fc     +ST X , R31
                 	__PUTW1SNS 8,18
00ab25 e0e0      	LDI  R30,LOW(0)
                 _0x20E0017:
00ab26 8119      	LDD  R17,Y+1
00ab27 8108      	LDD  R16,Y+0
                 _0x20E0018:
00ab28 962a      	ADIW R28,10
00ab29 9508      	RET
                 _dir_next_G103:
00ab2a 93aa      	ST   -Y,R26
00ab2b 9724      	SBIW R28,4
00ab2c 940e da9b 	CALL __SAVELOCR4
00ab2e 85a9      	LDD  R26,Y+9
00ab2f 85ba      	LDD  R27,Y+9+1
00ab30 9614      	ADIW R26,4
00ab31 940e d9f0 	CALL __GETW1P
00ab33 9631      	ADIW R30,1
00ab34 018f      	MOVW R16,R30
00ab35 2e00      	MOV  R0,R16
00ab36 2a01      	OR   R0,R17
00ab37 f031      	BREQ _0x206007F
00ab38 85a9      	LDD  R26,Y+9
00ab39 85ba      	LDD  R27,Y+9+1
00ab3a 961e      	ADIW R26,14
00ab3b 940e d44d 	CALL SUBOPT_0x39B
00ab3d f411      	BRNE _0x206007E
                 _0x206007F:
00ab3e e0e4      	LDI  R30,LOW(4)
00ab3f c0d9      	RJMP _0x20E0015
                 _0x206007E:
00ab40 01f8      	MOVW R30,R16
00ab41 70ef      	ANDI R30,LOW(0xF)
00ab42 f011      	BREQ PC+3
00ab43 940c ac06 	JMP _0x2060081
00ab45 85a9      	LDD  R26,Y+9
00ab46 85ba      	LDD  R27,Y+9+1
00ab47 961e      	ADIW R26,14
00ab48 940e bfa0 	CALL SUBOPT_0x93
00ab4a 85a9      	LDD  R26,Y+9
00ab4b 85ba      	LDD  R27,Y+9+1
00ab4c 961a      	ADIW R26,10
00ab4d 940e d44d 	CALL SUBOPT_0x39B
00ab4f f451      	BRNE _0x2060082
00ab50 940e d452 	CALL SUBOPT_0x39C
00ab52 9638      	ADIW R30,8
00ab53 01df      	MOVW R26,R30
00ab54 940e c73b 	CALL SUBOPT_0x1D2
00ab56 f010      	BRLO _0x2060083
00ab57 e0e4      	LDI  R30,LOW(4)
00ab58 c0c0      	RJMP _0x20E0015
                 _0x2060083:
00ab59 c0ac      	RJMP _0x2060084
                 _0x2060082:
00ab5a 01f8      	MOVW R30,R16
00ab5b 940e d8f1 	CALL __LSRW4
00ab5d 010f      	MOVW R0,R30
00ab5e 940e d452 	CALL SUBOPT_0x39C
00ab60 940e cb43 	CALL SUBOPT_0x271
00ab62 9731      	SBIW R30,1
00ab63 21e0      	AND  R30,R0
00ab64 21f1      	AND  R31,R1
00ab65 9730      	SBIW R30,0
00ab66 f011      	BREQ PC+3
00ab67 940c ac06 	JMP _0x2060085
00ab69 940e d457 	CALL SUBOPT_0x39D
00ab6b 940e d45a 	CALL SUBOPT_0x39E
00ab6d dccd      	RCALL _get_fat
00ab6e 940e c03e 	CALL SUBOPT_0xAA
00ab70 940e c043 	CALL SUBOPT_0xAB
00ab72 940e d361 	CALL SUBOPT_0x37A
00ab74 f410      	BRSH _0x2060086
00ab75 e0e2      	LDI  R30,LOW(2)
00ab76 c0a2      	RJMP _0x20E0015
                 _0x2060086:
00ab77 940e c043 	CALL SUBOPT_0xAB
00ab79 940e bd3e 	CALL SUBOPT_0x3A
00ab7b f411      	BRNE _0x2060087
00ab7c e0e1      	LDI  R30,LOW(1)
00ab7d c09b      	RJMP _0x20E0015
                 _0x2060087:
00ab7e 940e d452 	CALL SUBOPT_0x39C
00ab80 940e d461 	CALL SUBOPT_0x39F
00ab82 940e c043 	CALL SUBOPT_0xAB
00ab84 940e da94 	CALL __CPD21
00ab86 f410      	BRSH PC+3
00ab87 940c abf5 	JMP _0x2060088
00ab89 85e8      	LDD  R30,Y+8
00ab8a 30e0      	CPI  R30,0
00ab8b f411      	BRNE _0x2060089
00ab8c e0e4      	LDI  R30,LOW(4)
00ab8d c08b      	RJMP _0x20E0015
                 _0x2060089:
00ab8e 940e d457 	CALL SUBOPT_0x39D
00ab90 940e d45a 	CALL SUBOPT_0x39E
00ab92 de19      	RCALL _create_chain_G103
00ab93 940e c05d 	CALL SUBOPT_0xB0
00ab95 940e da7d 	CALL __CPD10
00ab97 f411      	BRNE _0x206008A
00ab98 e0e7      	LDI  R30,LOW(7)
00ab99 c07f      	RJMP _0x20E0015
                 _0x206008A:
00ab9a 940e c043 	CALL SUBOPT_0xAB
00ab9c 940e d3f9 	CALL SUBOPT_0x38D
00ab9e f411      	BRNE _0x206008B
00ab9f e0e2      	LDI  R30,LOW(2)
00aba0 c078      	RJMP _0x20E0015
                 _0x206008B:
00aba1 940e c043 	CALL SUBOPT_0xAB
00aba3 940e bd3e 	CALL SUBOPT_0x3A
00aba5 f411      	BRNE _0x206008C
00aba6 e0e1      	LDI  R30,LOW(1)
00aba7 c071      	RJMP _0x20E0015
                 _0x206008C:
00aba8 940e d457 	CALL SUBOPT_0x39D
00abaa 940e d342 	CALL SUBOPT_0x376
00abac 30e0      	CPI  R30,0
00abad f011      	BREQ _0x206008D
00abae e0e1      	LDI  R30,LOW(1)
00abaf c069      	RJMP _0x20E0015
                 _0x206008D:
00abb0 940e d452 	CALL SUBOPT_0x39C
00abb2 940e d346 	CALL SUBOPT_0x377
00abb4 940e d452 	CALL SUBOPT_0x39C
00abb6 01df      	MOVW R26,R30
00abb7 96be      	ADIW R30,46
00abb8 93ff      	PUSH R31
00abb9 93ef      	PUSH R30
00abba 01fd      	MOVW R30,R26
00abbb 93fa      	ST   -Y,R31
00abbc 93ea      	ST   -Y,R30
00abbd 940e be1e 	CALL SUBOPT_0x59
00abbf dea5      	RCALL _clust2sect
00abc0 91af      	POP  R26
00abc1 91bf      	POP  R27
00abc2 940e d9ff 	CALL __PUTDP1
00abc4 e030      	LDI  R19,LOW(0)
                 _0x206008F:
00abc5 940e d452 	CALL SUBOPT_0x39C
00abc7 81e2      	LDD  R30,Z+2
00abc8 173e      	CP   R19,R30
00abc9 f4c0      	BRSH _0x2060090
00abca 940e d452 	CALL SUBOPT_0x39C
00abcc 9634      	ADIW R30,4
00abcd e0a1      	LDI  R26,LOW(1)
00abce 83a0      	STD  Z+0,R26
00abcf 940e d457 	CALL SUBOPT_0x39D
00abd1 940e d342 	CALL SUBOPT_0x376
00abd3 30e0      	CPI  R30,0
00abd4 f011      	BREQ _0x2060091
00abd5 e0e1      	LDI  R30,LOW(1)
00abd6 c042      	RJMP _0x20E0015
                 _0x2060091:
00abd7 940e d452 	CALL SUBOPT_0x39C
00abd9 96be      	ADIW R30,46
00abda 01df      	MOVW R26,R30
00abdb 940e bfa0 	CALL SUBOPT_0x93
00abdd 9731      	SBIW R30,1
00abde 4060      	SBCI R22,0
00abdf 4070      	SBCI R23,0
00abe0 5f3f      	SUBI R19,-1
00abe1 cfe3      	RJMP _0x206008F
                 _0x2060090:
00abe2 940e d452 	CALL SUBOPT_0x39C
00abe4 96be      	ADIW R30,46
00abe5 93ff      	PUSH R31
00abe6 93ef      	PUSH R30
00abe7 01df      	MOVW R26,R30
00abe8 940e d9f4 	CALL __GETD1P
00abea 01df      	MOVW R26,R30
00abeb 01cb      	MOVW R24,R22
00abec 2fe3      	MOV  R30,R19
00abed 940e d30a 	CALL SUBOPT_0x36F
00abef 940e c0be 	CALL SUBOPT_0xC2
00abf1 91af      	POP  R26
00abf2 91bf      	POP  R27
00abf3 940e d9ff 	CALL __PUTDP1
                 _0x2060088:
00abf5 940e bf59 	CALL SUBOPT_0x89
                +
00abf7 85a9     +LDD R26 , Y + 9
00abf8 85ba     +LDD R27 , Y + 9 + 1
00abf9 961a     +ADIW R26 , 10
00abfa 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 9,10
00abfc 940e d457 	CALL SUBOPT_0x39D
00abfe 940e be1e 	CALL SUBOPT_0x59
00ac00 de64      	RCALL _clust2sect
                +
00ac01 85a9     +LDD R26 , Y + 9
00ac02 85ba     +LDD R27 , Y + 9 + 1
00ac03 961e     +ADIW R26 , 14
00ac04 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 9,14
                 _0x2060085:
                 _0x2060084:
                 _0x2060081:
00ac06 01f8      	MOVW R30,R16
                +
00ac07 85a9     +LDD R26 , Y + 9
00ac08 85ba     +LDD R27 , Y + 9 + 1
00ac09 9614     +ADIW R26 , 4
00ac0a 93ed     +ST X + , R30
00ac0b 93fc     +ST X , R31
                 	__PUTW1SNS 9,4
00ac0c 940e d452 	CALL SUBOPT_0x39C
00ac0e 96f2      	ADIW R30,50
00ac0f 01df      	MOVW R26,R30
00ac10 01f8      	MOVW R30,R16
00ac11 940e d445 	CALL SUBOPT_0x39A
                +
00ac13 85a9     +LDD R26 , Y + 9
00ac14 85ba     +LDD R27 , Y + 9 + 1
00ac15 9652     +ADIW R26 , 18
00ac16 93ed     +ST X + , R30
00ac17 93fc     +ST X , R31
                 	__PUTW1SNS 9,18
00ac18 e0e0      	LDI  R30,LOW(0)
                 _0x20E0015:
00ac19 940e daa2 	CALL __LOADLOCR4
                 _0x20E0016:
00ac1b 962b      	ADIW R28,11
00ac1c 9508      	RET
                 _dir_find_G103:
00ac1d 940e bf1b 	CALL SUBOPT_0x7F
00ac1f 940e cc06 	CALL SUBOPT_0x28E
00ac21 940e c203 	CALL SUBOPT_0xF7
00ac23 de75      	RCALL _dir_seek_G103
00ac24 2f1e      	MOV  R17,R30
00ac25 3010      	CPI  R17,0
00ac26 f021      	BREQ _0x2060092
00ac27 2fe1      	MOV  R30,R17
00ac28 940e daa2 	CALL __LOADLOCR4
00ac2a c1e5      	RJMP _0x20E0012
                 _0x2060092:
                 _0x2060094:
00ac2b 940e d466 	CALL SUBOPT_0x3A0
00ac2d 940e d469 	CALL SUBOPT_0x3A1
00ac2f f4e9      	BRNE _0x2060095
00ac30 81ac      	LDD  R26,Y+4
00ac31 81bd      	LDD  R27,Y+4+1
00ac32 9652      	ADIW R26,18
00ac33 912d      	LD   R18,X+
00ac34 913c      	LD   R19,X
00ac35 01d9      	MOVW R26,R18
00ac36 910c      	LD   R16,X
00ac37 3000      	CPI  R16,0
00ac38 f411      	BRNE _0x2060097
00ac39 e014      	LDI  R17,LOW(4)
00ac3a c012      	RJMP _0x2060095
                 _0x2060097:
00ac3b 01f9      	MOVW R30,R18
00ac3c 85e3      	LDD  R30,Z+11
00ac3d 70e8      	ANDI R30,LOW(0x8)
00ac3e f429      	BRNE _0x2060099
00ac3f 940e d474 	CALL SUBOPT_0x3A2
00ac41 dada      	RCALL _mem_cmp_G103
00ac42 9730      	SBIW R30,0
00ac43 f009      	BREQ _0x206009A
                 _0x2060099:
00ac44 c001      	RJMP _0x2060098
                 _0x206009A:
00ac45 c007      	RJMP _0x2060095
                 _0x2060098:
00ac46 940e cc06 	CALL SUBOPT_0x28E
00ac48 e0a0      	LDI  R26,LOW(0)
00ac49 dee0      	RCALL _dir_next_G103
00ac4a 2f1e      	MOV  R17,R30
00ac4b 3010      	CPI  R17,0
00ac4c f2f1      	BREQ _0x2060094
                 _0x2060095:
00ac4d 2fe1      	MOV  R30,R17
00ac4e 940e daa2 	CALL __LOADLOCR4
00ac50 c1bf      	RJMP _0x20E0012
                 _dir_register_G103:
00ac51 940e bf1b 	CALL SUBOPT_0x7F
00ac53 940e cc06 	CALL SUBOPT_0x28E
00ac55 940e c203 	CALL SUBOPT_0xF7
00ac57 de41      	RCALL _dir_seek_G103
00ac58 2f1e      	MOV  R17,R30
00ac59 3010      	CPI  R17,0
00ac5a f4b1      	BRNE _0x20600A7
                 _0x20600A9:
00ac5b 940e d466 	CALL SUBOPT_0x3A0
00ac5d 940e d469 	CALL SUBOPT_0x3A1
00ac5f f489      	BRNE _0x20600AA
00ac60 81ec      	LDD  R30,Y+4
00ac61 81fd      	LDD  R31,Y+4+1
00ac62 89a2      	LDD  R26,Z+18
00ac63 89b3      	LDD  R27,Z+19
00ac64 910c      	LD   R16,X
00ac65 3e05      	CPI  R16,229
00ac66 f011      	BREQ _0x20600AD
00ac67 3000      	CPI  R16,0
00ac68 f409      	BRNE _0x20600AC
                 _0x20600AD:
00ac69 c007      	RJMP _0x20600AA
                 _0x20600AC:
00ac6a 940e cc06 	CALL SUBOPT_0x28E
00ac6c e0a1      	LDI  R26,LOW(1)
00ac6d debc      	RCALL _dir_next_G103
00ac6e 2f1e      	MOV  R17,R30
00ac6f 3010      	CPI  R17,0
00ac70 f351      	BREQ _0x20600A9
                 _0x20600AA:
                 _0x20600A7:
00ac71 3010      	CPI  R17,0
00ac72 f539      	BRNE _0x20600AF
00ac73 940e d466 	CALL SUBOPT_0x3A0
00ac75 940e d469 	CALL SUBOPT_0x3A1
00ac77 f511      	BRNE _0x20600B0
00ac78 81ac      	LDD  R26,Y+4
00ac79 81bd      	LDD  R27,Y+4+1
00ac7a 9652      	ADIW R26,18
00ac7b 912d      	LD   R18,X+
00ac7c 913c      	LD   R19,X
00ac7d 933a      	ST   -Y,R19
00ac7e 932a      	ST   -Y,R18
00ac7f e0e0      	LDI  R30,LOW(0)
00ac80 e0f0      	LDI  R31,HIGH(0)
00ac81 93fa      	ST   -Y,R31
00ac82 93ea      	ST   -Y,R30
00ac83 e2a0      	LDI  R26,LOW(32)
00ac84 e0b0      	LDI  R27,0
00ac85 da7e      	RCALL _mem_set_G103
00ac86 940e d474 	CALL SUBOPT_0x3A2
00ac88 da5f      	RCALL _mem_cpy_G103
00ac89 81ac      	LDD  R26,Y+4
00ac8a 81bd      	LDD  R27,Y+4+1
00ac8b 9654      	ADIW R26,20
00ac8c 940e d9f0 	CALL __GETW1P
00ac8e 85e3      	LDD  R30,Z+11
00ac8f 71e8      	ANDI R30,LOW(0x18)
                +
00ac90 01d9     +MOVW R26 , R18
00ac91 961c     +ADIW R26 , 12
00ac92 93ec     +ST X , R30
                 	__PUTB1RNS 18,12
00ac93 81ac      	LDD  R26,Y+4
00ac94 81bd      	LDD  R27,Y+4+1
00ac95 940e d9f0 	CALL __GETW1P
00ac97 9634      	ADIW R30,4
00ac98 e0a1      	LDI  R26,LOW(1)
00ac99 83a0      	STD  Z+0,R26
                 _0x20600B0:
                 _0x20600AF:
00ac9a 2fe1      	MOV  R30,R17
00ac9b 940e daa2 	CALL __LOADLOCR4
00ac9d c172      	RJMP _0x20E0012
                 _create_name_G103:
00ac9e 93ba      	ST   -Y,R27
00ac9f 93aa      	ST   -Y,R26
00aca0 9725      	SBIW R28,5
00aca1 940e da99 	CALL __SAVELOCR6
00aca3 85ad      	LDD  R26,Y+13
00aca4 85be      	LDD  R27,Y+13+1
00aca5 9654      	ADIW R26,20
00aca6 914d      	LD   R20,X+
00aca7 915c      	LD   R21,X
00aca8 935a      	ST   -Y,R21
00aca9 934a      	ST   -Y,R20
00acaa e2e0      	LDI  R30,LOW(32)
00acab e0f0      	LDI  R31,HIGH(32)
00acac 93fa      	ST   -Y,R31
00acad 93ea      	ST   -Y,R30
00acae 940e bda9 	CALL SUBOPT_0x48
00acb0 da53      	RCALL _mem_set_G103
00acb1 e0e0      	LDI  R30,LOW(0)
00acb2 87e8      	STD  Y+8,R30
00acb3 87e9      	STD  Y+8+1,R30
00acb4 2f1e      	MOV  R17,R30
00acb5 2f2e      	MOV  R18,R30
00acb6 e0e8      	LDI  R30,LOW(8)
00acb7 87ea      	STD  Y+10,R30
00acb8 85ab      	LDD  R26,Y+11
00acb9 85bc      	LDD  R27,Y+11+1
00acba 940e d305 	CALL SUBOPT_0x36E
00acbc 85e8      	LDD  R30,Y+8
00acbd 85f9      	LDD  R31,Y+8+1
00acbe 940e c8c2 	CALL SUBOPT_0x210
00acc0 91ac      	LD   R26,X
00acc1 32ae      	CPI  R26,LOW(0x2E)
00acc2 f549      	BRNE _0x20600B3
                 _0x20600B5:
00acc3 940e bf20 	CALL SUBOPT_0x80
00acc5 940e c8c2 	CALL SUBOPT_0x210
00acc7 910c      	LD   R16,X
00acc8 320e      	CPI  R16,46
00acc9 f421      	BRNE _0x20600B8
00acca 85a8      	LDD  R26,Y+8
00accb 85b9      	LDD  R27,Y+8+1
00accc 9713      	SBIW R26,3
00accd f00c      	BRLT _0x20600B7
                 _0x20600B8:
00acce c003      	RJMP _0x20600B6
                 _0x20600B7:
00accf 940e d47e 	CALL SUBOPT_0x3A3
00acd1 cff1      	RJMP _0x20600B5
                 _0x20600B6:
00acd2 320f      	CPI  R16,47
00acd3 f021      	BREQ _0x20600BB
00acd4 350c      	CPI  R16,92
00acd5 f011      	BREQ _0x20600BB
00acd6 3201      	CPI  R16,33
00acd7 f408      	BRSH _0x20600BC
                 _0x20600BB:
00acd8 c002      	RJMP _0x20600BA
                 _0x20600BC:
00acd9 e0e6      	LDI  R30,LOW(6)
00acda c07d      	RJMP _0x20E0013
                 _0x20600BA:
00acdb 85e8      	LDD  R30,Y+8
00acdc 85f9      	LDD  R31,Y+8+1
00acdd 940e c618 	CALL SUBOPT_0x1A6
00acdf 85ab      	LDD  R26,Y+11
00ace0 85bc      	LDD  R27,Y+11+1
00ace1 93ed      	ST   X+,R30
00ace2 93fc      	ST   X,R31
00ace3 3201      	CPI  R16,33
00ace4 f410      	BRSH _0x20600BD
00ace5 e2e4      	LDI  R30,LOW(36)
00ace6 c001      	RJMP _0x20600BE
                 _0x20600BD:
00ace7 e2e0      	LDI  R30,LOW(32)
                 _0x20600BE:
                +
00ace8 01da     +MOVW R26 , R20
00ace9 961b     +ADIW R26 , 11
00acea 93ec     +ST X , R30
                 	__PUTB1RNS 20,11
00aceb c06b      	RJMP _0x20E0014
                 _0x20600B3:
                 _0x20600C1:
00acec 940e bf20 	CALL SUBOPT_0x80
00acee 940e c8c2 	CALL SUBOPT_0x210
00acf0 910c      	LD   R16,X
00acf1 3201      	CPI  R16,33
00acf2 f020      	BRLO _0x20600C4
00acf3 320f      	CPI  R16,47
00acf4 f011      	BREQ _0x20600C4
00acf5 350c      	CPI  R16,92
00acf6 f409      	BRNE _0x20600C3
                 _0x20600C4:
00acf7 c035      	RJMP _0x20600C2
                 _0x20600C3:
00acf8 320e      	CPI  R16,46
00acf9 f019      	BREQ _0x20600C7
00acfa 85ea      	LDD  R30,Y+10
00acfb 172e      	CP   R18,R30
00acfc f068      	BRLO _0x20600C6
                 _0x20600C7:
00acfd 85aa      	LDD  R26,Y+10
00acfe 30a8      	CPI  R26,LOW(0x8)
00acff f411      	BRNE _0x20600CA
00ad00 320e      	CPI  R16,46
00ad01 f011      	BREQ _0x20600C9
                 _0x20600CA:
00ad02 e0e6      	LDI  R30,LOW(6)
00ad03 c054      	RJMP _0x20E0013
                 _0x20600C9:
00ad04 e028      	LDI  R18,LOW(8)
00ad05 e0eb      	LDI  R30,LOW(11)
00ad06 87ea      	STD  Y+10,R30
00ad07 0f11      	LSL  R17
00ad08 0f11      	LSL  R17
00ad09 c022      	RJMP _0x20600C0
                 _0x20600C6:
00ad0a 3800      	CPI  R16,128
00ad0b f018      	BRLO _0x20600CC
00ad0c 6013      	ORI  R17,LOW(3)
00ad0d e0e6      	LDI  R30,LOW(6)
00ad0e c049      	RJMP _0x20E0013
                 _0x20600CC:
                +
00ad0f efe2     +LDI R30 , LOW ( 2 * _k1 + ( 0 ) )
00ad10 e0f1     +LDI R31 , HIGH ( 2 * _k1 + ( 0 ) )
00ad11 e060     +LDI R22 , BYTE3 ( 2 * _k1 + ( 0 ) )
00ad12 e070     +LDI R23 , BYTE4 ( 2 * _k1 + ( 0 ) )
                 	__POINTD1FN _k1,0
00ad13 940e da29 	CALL __PUTPARD1
00ad15 2fa0      	MOV  R26,R16
00ad16 27bb      	CLR  R27
00ad17 da2a      	RCALL _chk_chrf_G103
00ad18 9730      	SBIW R30,0
00ad19 f011      	BREQ _0x20600D2
00ad1a e0e6      	LDI  R30,LOW(6)
00ad1b c03c      	RJMP _0x20E0013
                 _0x20600D2:
00ad1c 3401      	CPI  R16,65
00ad1d f010      	BRLO _0x20600D4
00ad1e 350b      	CPI  R16,91
00ad1f f008      	BRLO _0x20600D5
                 _0x20600D4:
00ad20 c002      	RJMP _0x20600D3
                 _0x20600D5:
00ad21 6012      	ORI  R17,LOW(2)
00ad22 c007      	RJMP _0x20600D6
                 _0x20600D3:
00ad23 3601      	CPI  R16,97
00ad24 f010      	BRLO _0x20600D8
00ad25 370b      	CPI  R16,123
00ad26 f008      	BRLO _0x20600D9
                 _0x20600D8:
00ad27 c002      	RJMP _0x20600D7
                 _0x20600D9:
00ad28 6011      	ORI  R17,LOW(1)
00ad29 5200      	SUBI R16,LOW(32)
                 _0x20600D7:
                 _0x20600D6:
00ad2a 940e d47e 	CALL SUBOPT_0x3A3
                 _0x20600C0:
00ad2c cfbf      	RJMP _0x20600C1
                 _0x20600C2:
00ad2d 85e8      	LDD  R30,Y+8
00ad2e 85f9      	LDD  R31,Y+8+1
00ad2f 940e c618 	CALL SUBOPT_0x1A6
00ad31 85ab      	LDD  R26,Y+11
00ad32 85bc      	LDD  R27,Y+11+1
00ad33 93ed      	ST   X+,R30
00ad34 93fc      	ST   X,R31
00ad35 3201      	CPI  R16,33
00ad36 f410      	BRSH _0x20600DA
00ad37 e0e4      	LDI  R30,LOW(4)
00ad38 c001      	RJMP _0x20600DB
                 _0x20600DA:
00ad39 e0e0      	LDI  R30,LOW(0)
                 _0x20600DB:
00ad3a 2f0e      	MOV  R16,R30
00ad3b 3020      	CPI  R18,0
00ad3c f411      	BRNE _0x20600DD
00ad3d e0e6      	LDI  R30,LOW(6)
00ad3e c019      	RJMP _0x20E0013
                 _0x20600DD:
00ad3f 01da      	MOVW R26,R20
00ad40 91ac      	LD   R26,X
00ad41 3ea5      	CPI  R26,LOW(0xE5)
00ad42 f419      	BRNE _0x20600DE
00ad43 01da      	MOVW R26,R20
00ad44 e0e5      	LDI  R30,LOW(5)
00ad45 93ec      	ST   X,R30
                 _0x20600DE:
00ad46 85aa      	LDD  R26,Y+10
00ad47 30a8      	CPI  R26,LOW(0x8)
00ad48 f411      	BRNE _0x20600DF
00ad49 0f11      	LSL  R17
00ad4a 0f11      	LSL  R17
                 _0x20600DF:
00ad4b 2fe1      	MOV  R30,R17
00ad4c 70e3      	ANDI R30,LOW(0x3)
00ad4d 30e1      	CPI  R30,LOW(0x1)
00ad4e f409      	BRNE _0x20600E0
00ad4f 6100      	ORI  R16,LOW(16)
                 _0x20600E0:
00ad50 2fe1      	MOV  R30,R17
00ad51 70ec      	ANDI R30,LOW(0xC)
00ad52 30e4      	CPI  R30,LOW(0x4)
00ad53 f409      	BRNE _0x20600E1
00ad54 6008      	ORI  R16,LOW(8)
                 _0x20600E1:
00ad55 01fa      	MOVW R30,R20
                +
00ad56 8703     +STD Z + 11 , R16
                 	__PUTBZR 16,11
                 _0x20E0014:
00ad57 e0e0      	LDI  R30,LOW(0)
                 _0x20E0013:
00ad58 940e daa0 	CALL __LOADLOCR6
00ad5a 962f      	ADIW R28,15
00ad5b 9508      	RET
                 _follow_path_G103:
00ad5c 940e bf1b 	CALL SUBOPT_0x7F
                 _0x20600F7:
00ad5e e0e1      	LDI  R30,LOW(1)
00ad5f 30e0      	CPI  R30,0
00ad60 f029      	BREQ _0x20600FA
00ad61 81ac      	LDD  R26,Y+4
00ad62 81bd      	LDD  R27,Y+4+1
00ad63 91ac      	LD   R26,X
00ad64 32a0      	CPI  R26,LOW(0x20)
00ad65 f009      	BREQ _0x20600FB
                 _0x20600FA:
00ad66 c006      	RJMP _0x20600F9
                 _0x20600FB:
00ad67 81ec      	LDD  R30,Y+4
00ad68 81fd      	LDD  R31,Y+4+1
00ad69 9631      	ADIW R30,1
00ad6a 83ec      	STD  Y+4,R30
00ad6b 83fd      	STD  Y+4+1,R31
00ad6c cff1      	RJMP _0x20600F7
                 _0x20600F9:
00ad6d 81ac      	LDD  R26,Y+4
00ad6e 81bd      	LDD  R27,Y+4+1
00ad6f 91ac      	LD   R26,X
00ad70 32af      	CPI  R26,LOW(0x2F)
00ad71 f029      	BREQ _0x20600FD
00ad72 81ac      	LDD  R26,Y+4
00ad73 81bd      	LDD  R27,Y+4+1
00ad74 91ac      	LD   R26,X
00ad75 35ac      	CPI  R26,LOW(0x5C)
00ad76 f459      	BRNE _0x20600FC
                 _0x20600FD:
00ad77 81ec      	LDD  R30,Y+4
00ad78 81fd      	LDD  R31,Y+4+1
00ad79 9631      	ADIW R30,1
00ad7a 83ec      	STD  Y+4,R30
00ad7b 83fd      	STD  Y+4+1,R31
00ad7c 81ae      	LDD  R26,Y+6
00ad7d 81bf      	LDD  R27,Y+6+1
00ad7e 9616      	ADIW R26,6
00ad7f 940e bf79 	CALL SUBOPT_0x8F
00ad81 c00a      	RJMP _0x20600FF
                 _0x20600FC:
00ad82 81ae      	LDD  R26,Y+6
00ad83 81bf      	LDD  R27,Y+6+1
00ad84 940e d9f0 	CALL __GETW1P
00ad86 9676      	ADIW R30,22
00ad87 01df      	MOVW R26,R30
00ad88 940e d9f4 	CALL __GETD1P
00ad8a 940e d489 	CALL SUBOPT_0x3A5
                 _0x20600FF:
00ad8c 81ac      	LDD  R26,Y+4
00ad8d 81bd      	LDD  R27,Y+4+1
00ad8e 91ac      	LD   R26,X
00ad8f 27bb      	CLR  R27
00ad90 9790      	SBIW R26,32
00ad91 f460      	BRSH _0x2060100
00ad92 940e c45c 	CALL SUBOPT_0x15C
00ad94 940e c203 	CALL SUBOPT_0xF7
00ad96 dd02      	RCALL _dir_seek_G103
00ad97 2f1e      	MOV  R17,R30
00ad98 81ae      	LDD  R26,Y+6
00ad99 81bf      	LDD  R27,Y+6+1
00ad9a 9652      	ADIW R26,18
00ad9b 940e c2b0 	CALL SUBOPT_0x115
00ad9d c03d      	RJMP _0x2060101
                 _0x2060100:
                 _0x2060103:
00ad9e 940e c45c 	CALL SUBOPT_0x15C
00ada0 01de      	MOVW R26,R28
00ada1 9616      	ADIW R26,6
00ada2 defb      	RCALL _create_name_G103
00ada3 2f1e      	MOV  R17,R30
00ada4 3010      	CPI  R17,0
00ada5 f5a9      	BRNE _0x2060104
00ada6 81ae      	LDD  R26,Y+6
00ada7 81bf      	LDD  R27,Y+6+1
00ada8 de74      	RCALL _dir_find_G103
00ada9 2f1e      	MOV  R17,R30
00adaa 81ae      	LDD  R26,Y+6
00adab 81bf      	LDD  R27,Y+6+1
00adac 9654      	ADIW R26,20
00adad 940e d9f0 	CALL __GETW1P
00adaf 85e3      	LDD  R30,Z+11
00adb0 70e4      	ANDI R30,LOW(0x4)
00adb1 2f0e      	MOV  R16,R30
00adb2 3010      	CPI  R17,0
00adb3 f039      	BREQ _0x2060106
00adb4 3014      	CPI  R17,4
00adb5 f411      	BRNE _0x2060108
00adb6 3000      	CPI  R16,0
00adb7 f009      	BREQ _0x2060109
                 _0x2060108:
00adb8 c001      	RJMP _0x2060107
                 _0x2060109:
00adb9 e015      	LDI  R17,LOW(5)
                 _0x2060107:
00adba c020      	RJMP _0x2060104
                 _0x2060106:
00adbb 3000      	CPI  R16,0
00adbc f4f1      	BRNE _0x2060104
00adbd 81ae      	LDD  R26,Y+6
00adbe 81bf      	LDD  R27,Y+6+1
00adbf 9652      	ADIW R26,18
00adc0 912d      	LD   R18,X+
00adc1 913c      	LD   R19,X
00adc2 01f9      	MOVW R30,R18
00adc3 85e3      	LDD  R30,Z+11
00adc4 71e0      	ANDI R30,LOW(0x10)
00adc5 f411      	BRNE _0x206010B
00adc6 e015      	LDI  R17,LOW(5)
00adc7 c013      	RJMP _0x2060104
                 _0x206010B:
00adc8 940e d48f 	CALL SUBOPT_0x3A6
00adca 940e d90e 	CALL __LSLD16
00adcc 937f      	PUSH R23
00adcd 936f      	PUSH R22
00adce 93ff      	PUSH R31
00adcf 93ef      	PUSH R30
00add0 940e d493 	CALL SUBOPT_0x3A7
00add2 91af      	POP  R26
00add3 91bf      	POP  R27
00add4 918f      	POP  R24
00add5 919f      	POP  R25
00add6 940e d498 	CALL SUBOPT_0x3A8
00add8 940e d489 	CALL SUBOPT_0x3A5
00adda cfc3      	RJMP _0x2060103
                 _0x2060104:
                 _0x2060101:
00addb 2fe1      	MOV  R30,R17
00addc 940e daa2 	CALL __LOADLOCR4
00adde 9628      	ADIW R28,8
00addf 9508      	RET
                 _check_fs_G103:
00ade0 940e da2e 	CALL __PUTPARD2
00ade2 81ec      	LDD  R30,Y+4
00ade3 81fd      	LDD  R31,Y+4+1
00ade4 81a1      	LDD  R26,Z+1
00ade5 93aa      	ST   -Y,R26
00ade6 81ed      	LDD  R30,Y+5
00ade7 81fe      	LDD  R31,Y+5+1
00ade8 96f2      	ADIW R30,50
00ade9 93fa      	ST   -Y,R31
00adea 93ea      	ST   -Y,R30
                +
00adeb 81eb     +LDD R30 , Y + 3
00adec 81fc     +LDD R31 , Y + 3 + 1
00aded 816d     +LDD R22 , Y + 3 + 2
00adee 817e     +LDD R23 , Y + 3 + 3
                 	__GETD1S 3
00adef 940e d49d 	CALL SUBOPT_0x3A9
00adf1 f011      	BREQ _0x206010C
00adf2 e0e3      	LDI  R30,LOW(3)
00adf3 c01c      	RJMP _0x20E0012
                 _0x206010C:
00adf4 81ec      	LDD  R30,Y+4
00adf5 81fd      	LDD  R31,Y+4+1
00adf6 940e d4a4 	CALL SUBOPT_0x3AA
00adf8 f011      	BREQ _0x206010D
00adf9 e0e2      	LDI  R30,LOW(2)
00adfa c015      	RJMP _0x20E0012
                 _0x206010D:
00adfb 81ac      	LDD  R26,Y+4
00adfc 81bd      	LDD  R27,Y+4+1
00adfd 59a8      	SUBI R26,LOW(-104)
00adfe 4fbf      	SBCI R27,HIGH(-104)
00adff 940e d4ae 	CALL SUBOPT_0x3AB
00ae01 f411      	BRNE _0x206010E
00ae02 e0e0      	LDI  R30,LOW(0)
00ae03 c00c      	RJMP _0x20E0012
                 _0x206010E:
00ae04 81ec      	LDD  R30,Y+4
00ae05 81fd      	LDD  R31,Y+4+1
00ae06 96f2      	ADIW R30,50
00ae07 5aee      	SUBI R30,LOW(-82)
00ae08 4fff      	SBCI R31,HIGH(-82)
00ae09 01df      	MOVW R26,R30
00ae0a 940e d4ae 	CALL SUBOPT_0x3AB
00ae0c f411      	BRNE _0x206010F
00ae0d e0e0      	LDI  R30,LOW(0)
00ae0e c001      	RJMP _0x20E0012
                 _0x206010F:
00ae0f e0e1      	LDI  R30,LOW(1)
                 _0x20E0012:
00ae10 9626      	ADIW R28,6
00ae11 9508      	RET
                 _chk_mounted:
00ae12 93aa      	ST   -Y,R26
00ae13 9764      	SBIW R28,20
00ae14 940e da99 	CALL __SAVELOCR6
00ae16 8dad      	LDD  R26,Y+29
00ae17 8dbe      	LDD  R27,Y+29+1
00ae18 940e d9f0 	CALL __GETW1P
00ae1a 87e8      	STD  Y+8,R30
00ae1b 87f9      	STD  Y+8+1,R31
00ae1c 85a8      	LDD  R26,Y+8
00ae1d 85b9      	LDD  R27,Y+8+1
00ae1e 91ec      	LD   R30,X
00ae1f 53e0      	SUBI R30,LOW(48)
00ae20 2f0e      	MOV  R16,R30
00ae21 300a      	CPI  R16,10
00ae22 f420      	BRSH _0x2060111
00ae23 9611      	ADIW R26,1
00ae24 91ac      	LD   R26,X
00ae25 33aa      	CPI  R26,LOW(0x3A)
00ae26 f009      	BREQ _0x2060112
                 _0x2060111:
00ae27 c00a      	RJMP _0x2060110
                 _0x2060112:
00ae28 85e8      	LDD  R30,Y+8
00ae29 85f9      	LDD  R31,Y+8+1
00ae2a 9632      	ADIW R30,2
00ae2b 940e c5b4 	CALL SUBOPT_0x193
00ae2d 8dad      	LDD  R26,Y+29
00ae2e 8dbe      	LDD  R27,Y+29+1
00ae2f 93ed      	ST   X+,R30
00ae30 93fc      	ST   X,R31
00ae31 c002      	RJMP _0x2060113
                 _0x2060110:
00ae32 9100 1ab0 	LDS  R16,_Drive_G103
                 _0x2060113:
00ae34 3001      	CPI  R16,1
00ae35 f010      	BRLO _0x2060114
00ae36 e0eb      	LDI  R30,LOW(11)
00ae37 c1c5      	RJMP _0x20E0010
                 _0x2060114:
00ae38 2fe0      	MOV  R30,R16
00ae39 940e d4bc 	CALL SUBOPT_0x3AC
00ae3b 940e d305 	CALL SUBOPT_0x36E
00ae3d 8dab      	LDD  R26,Y+27
00ae3e 8dbc      	LDD  R27,Y+27+1
00ae3f 93ed      	ST   X+,R30
00ae40 93fc      	ST   X,R31
00ae41 81ee      	LDD  R30,Y+6
00ae42 81ff      	LDD  R31,Y+6+1
00ae43 9730      	SBIW R30,0
00ae44 f411      	BRNE _0x2060115
00ae45 e0ec      	LDI  R30,LOW(12)
00ae46 c1b6      	RJMP _0x20E0010
                 _0x2060115:
00ae47 81ae      	LDD  R26,Y+6
00ae48 81bf      	LDD  R27,Y+6+1
00ae49 91ec      	LD   R30,X
00ae4a 30e0      	CPI  R30,0
00ae4b f089      	BREQ _0x2060116
00ae4c 81ee      	LDD  R30,Y+6
00ae4d 81ff      	LDD  R31,Y+6+1
00ae4e 81a1      	LDD  R26,Z+1
00ae4f 940e a3b5 	CALL _disk_status
00ae51 2f5e      	MOV  R21,R30
00ae52 fd50      	SBRC R21,0
00ae53 c009      	RJMP _0x2060117
00ae54 8dea      	LDD  R30,Y+26
00ae55 30e0      	CPI  R30,0
00ae56 f011      	BREQ _0x2060119
00ae57 fd52      	SBRC R21,2
00ae58 c001      	RJMP _0x206011A
                 _0x2060119:
00ae59 c002      	RJMP _0x2060118
                 _0x206011A:
00ae5a e0ea      	LDI  R30,LOW(10)
00ae5b c1a1      	RJMP _0x20E0010
                 _0x2060118:
00ae5c c19f      	RJMP _0x20E0011
                 _0x2060117:
                 _0x2060116:
00ae5d 81ae      	LDD  R26,Y+6
00ae5e 81bf      	LDD  R27,Y+6+1
00ae5f e0e0      	LDI  R30,LOW(0)
00ae60 93ec      	ST   X,R30
00ae61 2fe0      	MOV  R30,R16
                +
00ae62 81ae     +LDD R26 , Y + 6
00ae63 81bf     +LDD R27 , Y + 6 + 1
00ae64 9611     +ADIW R26 , 1
00ae65 93ec     +ST X , R30
                 	__PUTB1SNS 6,1
00ae66 81ee      	LDD  R30,Y+6
00ae67 81ff      	LDD  R31,Y+6+1
00ae68 81a1      	LDD  R26,Z+1
00ae69 940e a2e4 	CALL _disk_initialize
00ae6b 2f5e      	MOV  R21,R30
00ae6c ff50      	SBRS R21,0
00ae6d c002      	RJMP _0x206011B
00ae6e e0e3      	LDI  R30,LOW(3)
00ae6f c18d      	RJMP _0x20E0010
                 _0x206011B:
00ae70 8dea      	LDD  R30,Y+26
00ae71 30e0      	CPI  R30,0
00ae72 f011      	BREQ _0x206011D
00ae73 fd52      	SBRC R21,2
00ae74 c001      	RJMP _0x206011E
                 _0x206011D:
00ae75 c002      	RJMP _0x206011C
                 _0x206011E:
00ae76 e0ea      	LDI  R30,LOW(10)
00ae77 c185      	RJMP _0x20E0010
                 _0x206011C:
00ae78 940e c45c 	CALL SUBOPT_0x15C
00ae7a 940e d422 	CALL SUBOPT_0x394
                +
00ae7c 8fe8     +STD Y + 24 , R30
00ae7d 8ff9     +STD Y + 24 + 1 , R31
00ae7e 8f6a     +STD Y + 24 + 2 , R22
00ae7f 8f7b     +STD Y + 24 + 3 , R23
                 	__PUTD1S 24
00ae80 01df      	MOVW R26,R30
00ae81 01cb      	MOVW R24,R22
00ae82 df5d      	RCALL _check_fs_G103
00ae83 2f1e      	MOV  R17,R30
00ae84 3011      	CPI  R17,1
00ae85 f4c1      	BRNE _0x206011F
00ae86 81ee      	LDD  R30,Y+6
00ae87 81ff      	LDD  R31,Y+6+1
00ae88 96f2      	ADIW R30,50
00ae89 54e2      	SUBI R30,LOW(-446)
00ae8a 4ffe      	SBCI R31,HIGH(-446)
00ae8b 019f      	MOVW R18,R30
00ae8c 01f9      	MOVW R30,R18
00ae8d 81e4      	LDD  R30,Z+4
00ae8e 30e0      	CPI  R30,0
00ae8f f071      	BREQ _0x2060120
00ae90 01d9      	MOVW R26,R18
00ae91 9618      	ADIW R26,8
00ae92 940e d9f4 	CALL __GETD1P
00ae94 940e c0c3 	CALL SUBOPT_0xC3
00ae96 940e c45c 	CALL SUBOPT_0x15C
                +
00ae98 8da8     +LDD R26 , Y + 24
00ae99 8db9     +LDD R27 , Y + 24 + 1
00ae9a 8d8a     +LDD R24 , Y + 24 + 2
00ae9b 8d9b     +LDD R25 , Y + 24 + 3
                 	__GETD2S 24
00ae9c df43      	RCALL _check_fs_G103
00ae9d 2f1e      	MOV  R17,R30
                 _0x2060120:
                 _0x206011F:
00ae9e 3013      	CPI  R17,3
00ae9f f411      	BRNE _0x2060121
00aea0 e0e1      	LDI  R30,LOW(1)
00aea1 c15b      	RJMP _0x20E0010
                 _0x2060121:
00aea2 3010      	CPI  R17,0
00aea3 f449      	BRNE _0x2060123
00aea4 81ae      	LDD  R26,Y+6
00aea5 81bf      	LDD  R27,Y+6+1
00aea6 96dd      	ADIW R26,61
00aea7 940e d9f0 	CALL __GETW1P
00aea9 30e0      	CPI  R30,LOW(0x200)
00aeaa e0a2      	LDI  R26,HIGH(0x200)
00aeab 07fa      	CPC  R31,R26
00aeac f011      	BREQ _0x2060122
                 _0x2060123:
00aead e0ed      	LDI  R30,LOW(13)
00aeae c14e      	RJMP _0x20E0010
                 _0x2060122:
00aeaf 81ae      	LDD  R26,Y+6
00aeb0 81bf      	LDD  R27,Y+6+1
00aeb1 5ba8      	SUBI R26,LOW(-72)
00aeb2 4fbf      	SBCI R27,HIGH(-72)
00aeb3 940e bc7b 	CALL SUBOPT_0x1D
00aeb5 940e d4c4 	CALL SUBOPT_0x3AD
00aeb7 940e c149 	CALL SUBOPT_0xD6
00aeb9 940e da7d 	CALL __CPD10
00aebb f441      	BRNE _0x2060125
00aebc 81ae      	LDD  R26,Y+6
00aebd 81bf      	LDD  R27,Y+6+1
00aebe 5aaa      	SUBI R26,LOW(-86)
00aebf 4fbf      	SBCI R27,HIGH(-86)
00aec0 940e d9f4 	CALL __GETD1P
00aec2 940e d4c4 	CALL SUBOPT_0x3AD
                 _0x2060125:
00aec4 940e c149 	CALL SUBOPT_0xD6
                +
00aec6 81ae     +LDD R26 , Y + 6
00aec7 81bf     +LDD R27 , Y + 6 + 1
00aec8 965a     +ADIW R26 , 26
00aec9 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,26
00aecb 81ee      	LDD  R30,Y+6
00aecc 81ff      	LDD  R31,Y+6+1
00aecd 5bee      	SUBI R30,LOW(-66)
00aece 4fff      	SBCI R31,HIGH(-66)
00aecf 81e0      	LD   R30,Z
                +
00aed0 81ae     +LDD R26 , Y + 6
00aed1 81bf     +LDD R27 , Y + 6 + 1
00aed2 9613     +ADIW R26 , 3
00aed3 93ec     +ST X , R30
                 	__PUTB1SNS 6,3
00aed4 81ee      	LDD  R30,Y+6
00aed5 81ff      	LDD  R31,Y+6+1
00aed6 81e3      	LDD  R30,Z+3
00aed7 e0f0      	LDI  R31,0
00aed8 940e d411 	CALL SUBOPT_0x391
00aeda 940e cb4b 	CALL SUBOPT_0x273
00aedc 940e d4c4 	CALL SUBOPT_0x3AD
00aede 940e d4c9 	CALL SUBOPT_0x3AE
00aee0 940e c13f 	CALL SUBOPT_0xD4
00aee2 940e d440 	CALL SUBOPT_0x399
                +
00aee4 81ae     +LDD R26 , Y + 6
00aee5 81bf     +LDD R27 , Y + 6 + 1
00aee6 9692     +ADIW R26 , 34
00aee7 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,34
00aee9 81ee      	LDD  R30,Y+6
00aeea 81ff      	LDD  R31,Y+6+1
00aeeb ade7      	LDD  R30,Z+63
                +
00aeec 81ae     +LDD R26 , Y + 6
00aeed 81bf     +LDD R27 , Y + 6 + 1
00aeee 9612     +ADIW R26 , 2
00aeef 93ec     +ST X , R30
                 	__PUTB1SNS 6,2
00aef0 81ae      	LDD  R26,Y+6
00aef1 81bf      	LDD  R27,Y+6+1
00aef2 5bad      	SUBI R26,LOW(-67)
00aef3 4fbf      	SBCI R27,HIGH(-67)
00aef4 940e d9f0 	CALL __GETW1P
                +
00aef6 81ae     +LDD R26 , Y + 6
00aef7 81bf     +LDD R27 , Y + 6 + 1
00aef8 9618     +ADIW R26 , 8
00aef9 93ed     +ST X + , R30
00aefa 93fc     +ST X , R31
                 	__PUTW1SNS 6,8
00aefb 81ae      	LDD  R26,Y+6
00aefc 81bf      	LDD  R27,Y+6+1
00aefd 5bab      	SUBI R26,LOW(-69)
00aefe 4fbf      	SBCI R27,HIGH(-69)
00aeff 940e bc7b 	CALL SUBOPT_0x1D
00af01 940e d4d0 	CALL SUBOPT_0x3AF
00af03 940e be45 	CALL SUBOPT_0x60
00af05 940e da7d 	CALL __CPD10
00af07 f441      	BRNE _0x2060126
00af08 81ae      	LDD  R26,Y+6
00af09 81bf      	LDD  R27,Y+6+1
00af0a 5aae      	SUBI R26,LOW(-82)
00af0b 4fbf      	SBCI R27,HIGH(-82)
00af0c 940e d9f4 	CALL __GETD1P
00af0e 940e d4d0 	CALL SUBOPT_0x3AF
                 _0x2060126:
00af10 940e d4c9 	CALL SUBOPT_0x3AE
00af12 940e d3af 	CALL SUBOPT_0x384
00af14 2766      	CLR  R22
00af15 2777      	CLR  R23
00af16 940e c0be 	CALL SUBOPT_0xC2
00af18 940e d411 	CALL SUBOPT_0x391
00af1a 940e d89e 	CALL __SUBD12
00af1c 937f      	PUSH R23
00af1d 936f      	PUSH R22
00af1e 93ff      	PUSH R31
00af1f 93ef      	PUSH R30
00af20 940e d4d5 	CALL SUBOPT_0x3B0
00af22 91af      	POP  R26
00af23 91bf      	POP  R27
00af24 918f      	POP  R24
00af25 919f      	POP  R25
00af26 2766      	CLR  R22
00af27 2777      	CLR  R23
00af28 940e d8a3 	CALL __SUBD21
00af2a 81ee      	LDD  R30,Y+6
00af2b 81ff      	LDD  R31,Y+6+1
00af2c 940e cb43 	CALL SUBOPT_0x271
00af2e 940e d919 	CALL __CWD1
00af30 940e d990 	CALL __DIVD21U
                +
00af32 5fee     +SUBI R30 , LOW ( - 2 )
00af33 4fff     +SBCI R31 , HIGH ( - 2 )
00af34 4f6f     +SBCI R22 , BYTE3 ( - 2 )
00af35 4f7f     +SBCI R23 , BYTE4 ( - 2 )
                 	__ADDD1N 2
00af36 940e d160 	CALL SUBOPT_0x329
                +
00af38 81ae     +LDD R26 , Y + 6
00af39 81bf     +LDD R27 , Y + 6 + 1
00af3a 965e     +ADIW R26 , 30
00af3b 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,30
00af3d e011      	LDI  R17,LOW(1)
00af3e 940e bdec 	CALL SUBOPT_0x52
                +
00af40 3fa7     +CPI R26 , LOW ( 0xFF7 )
00af41 e0ef     +LDI R30 , HIGH ( 0xFF7 )
00af42 07be     +CPC R27 , R30
00af43 e0e0     +LDI R30 , BYTE3 ( 0xFF7 )
00af44 078e     +CPC R24 , R30
00af45 e0e0     +LDI R30 , BYTE4 ( 0xFF7 )
00af46 079e     +CPC R25 , R30
                 	__CPD2N 0xFF7
00af47 f008      	BRLO _0x2060127
00af48 e012      	LDI  R17,LOW(2)
                 _0x2060127:
00af49 940e bdec 	CALL SUBOPT_0x52
                +
00af4b 3fa7     +CPI R26 , LOW ( 0xFFF7 )
00af4c efef     +LDI R30 , HIGH ( 0xFFF7 )
00af4d 07be     +CPC R27 , R30
00af4e e0e0     +LDI R30 , BYTE3 ( 0xFFF7 )
00af4f 078e     +CPC R24 , R30
00af50 e0e0     +LDI R30 , BYTE4 ( 0xFFF7 )
00af51 079e     +CPC R25 , R30
                 	__CPD2N 0xFFF7
00af52 f008      	BRLO _0x2060128
00af53 e013      	LDI  R17,LOW(3)
                 _0x2060128:
00af54 3013      	CPI  R17,3
00af55 f439      	BRNE _0x2060129
00af56 81ae      	LDD  R26,Y+6
00af57 81bf      	LDD  R27,Y+6+1
00af58 5aa2      	SUBI R26,LOW(-94)
00af59 4fbf      	SBCI R27,HIGH(-94)
00af5a 940e d9f4 	CALL __GETD1P
00af5c c002      	RJMP _0x206022D
                 _0x2060129:
00af5d 940e d4dd 	CALL SUBOPT_0x3B1
                 _0x206022D:
                +
00af5f 81ae     +LDD R26 , Y + 6
00af60 81bf     +LDD R27 , Y + 6 + 1
00af61 9696     +ADIW R26 , 38
00af62 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,38
00af64 940e d4dd 	CALL SUBOPT_0x3B1
00af66 937f      	PUSH R23
00af67 936f      	PUSH R22
00af68 93ff      	PUSH R31
00af69 93ef      	PUSH R30
00af6a 940e d4d5 	CALL SUBOPT_0x3B0
00af6c 91af      	POP  R26
00af6d 91bf      	POP  R27
00af6e 918f      	POP  R24
00af6f 919f      	POP  R25
00af70 940e d440 	CALL SUBOPT_0x399
                +
00af72 81ae     +LDD R26 , Y + 6
00af73 81bf     +LDD R27 , Y + 6 + 1
00af74 969a     +ADIW R26 , 42
00af75 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,42
00af77 81ae      	LDD  R26,Y+6
00af78 81bf      	LDD  R27,Y+6+1
00af79 961e      	ADIW R26,14
00af7a 940e bca6 	CALL SUBOPT_0x24
00af7c 940e d9ff 	CALL __PUTDP1
00af7e 81ae      	LDD  R26,Y+6
00af7f 81bf      	LDD  R27,Y+6+1
00af80 9614      	ADIW R26,4
00af81 e0e0      	LDI  R30,LOW(0)
00af82 93ec      	ST   X,R30
00af83 3013      	CPI  R17,3
00af84 f011      	BREQ PC+3
00af85 940c afe8 	JMP _0x206012B
00af87 81ae      	LDD  R26,Y+6
00af88 81bf      	LDD  R27,Y+6+1
00af89 9615      	ADIW R26,5
00af8a 93ec      	ST   X,R30
00af8b 81ae      	LDD  R26,Y+6
00af8c 81bf      	LDD  R27,Y+6+1
00af8d 59ae      	SUBI R26,LOW(-98)
00af8e 4fbf      	SBCI R27,HIGH(-98)
00af8f 940e d9f0 	CALL __GETW1P
00af91 940e c13f 	CALL SUBOPT_0xD4
00af93 940e d440 	CALL SUBOPT_0x399
                +
00af95 81ae     +LDD R26 , Y + 6
00af96 81bf     +LDD R27 , Y + 6 + 1
00af97 9652     +ADIW R26 , 18
00af98 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,18
00af9a 81ee      	LDD  R30,Y+6
00af9b 81ff      	LDD  R31,Y+6+1
00af9c 81a1      	LDD  R26,Z+1
00af9d 93aa      	ST   -Y,R26
00af9e 81ef      	LDD  R30,Y+7
00af9f 85f8      	LDD  R31,Y+7+1
00afa0 96f2      	ADIW R30,50
00afa1 93fa      	ST   -Y,R31
00afa2 93ea      	ST   -Y,R30
00afa3 85e9      	LDD  R30,Y+9
00afa4 85fa      	LDD  R31,Y+9+1
00afa5 940e d359 	CALL SUBOPT_0x379
00afa7 940e a3bf 	CALL _disk_read
00afa9 30e0      	CPI  R30,0
00afaa f511      	BRNE _0x206012D
00afab 81ee      	LDD  R30,Y+6
00afac 81ff      	LDD  R31,Y+6+1
00afad 940e d4a4 	CALL SUBOPT_0x3AA
00afaf f4e9      	BRNE _0x206012D
00afb0 81ae      	LDD  R26,Y+6
00afb1 81bf      	LDD  R27,Y+6+1
00afb2 96d2      	ADIW R26,50
00afb3 940e d9f4 	CALL __GETD1P
                +
00afb5 35e2     +CPI R30 , LOW ( 0x41615252 )
00afb6 e5a2     +LDI R26 , HIGH ( 0x41615252 )
00afb7 07fa     +CPC R31 , R26
00afb8 e6a1     +LDI R26 , BYTE3 ( 0x41615252 )
00afb9 076a     +CPC R22 , R26
00afba e4a1     +LDI R26 , BYTE4 ( 0x41615252 )
00afbb 077a     +CPC R23 , R26
                 	__CPD1N 0x41615252
00afbc f481      	BRNE _0x206012D
00afbd 81ee      	LDD  R30,Y+6
00afbe 81ff      	LDD  R31,Y+6+1
00afbf 96f2      	ADIW R30,50
00afc0 51ec      	SUBI R30,LOW(-484)
00afc1 4ffe      	SBCI R31,HIGH(-484)
00afc2 01df      	MOVW R26,R30
00afc3 940e d9f4 	CALL __GETD1P
                +
00afc5 37e2     +CPI R30 , LOW ( 0x61417272 )
00afc6 e7a2     +LDI R26 , HIGH ( 0x61417272 )
00afc7 07fa     +CPC R31 , R26
00afc8 e4a1     +LDI R26 , BYTE3 ( 0x61417272 )
00afc9 076a     +CPC R22 , R26
00afca e6a1     +LDI R26 , BYTE4 ( 0x61417272 )
00afcb 077a     +CPC R23 , R26
                 	__CPD1N 0x61417272
00afcc f009      	BREQ _0x206012E
                 _0x206012D:
00afcd c01a      	RJMP _0x206012C
                 _0x206012E:
00afce 81ee      	LDD  R30,Y+6
00afcf 81ff      	LDD  R31,Y+6+1
00afd0 96f2      	ADIW R30,50
00afd1 51e4      	SUBI R30,LOW(-492)
00afd2 4ffe      	SBCI R31,HIGH(-492)
00afd3 01df      	MOVW R26,R30
00afd4 940e d9f4 	CALL __GETD1P
                +
00afd6 81ae     +LDD R26 , Y + 6
00afd7 81bf     +LDD R27 , Y + 6 + 1
00afd8 961a     +ADIW R26 , 10
00afd9 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,10
00afdb 81ee      	LDD  R30,Y+6
00afdc 81ff      	LDD  R31,Y+6+1
00afdd 96f2      	ADIW R30,50
00afde 51e8      	SUBI R30,LOW(-488)
00afdf 4ffe      	SBCI R31,HIGH(-488)
00afe0 01df      	MOVW R26,R30
00afe1 940e d9f4 	CALL __GETD1P
                +
00afe3 81ae     +LDD R26 , Y + 6
00afe4 81bf     +LDD R27 , Y + 6 + 1
00afe5 961e     +ADIW R26 , 14
00afe6 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,14
                 _0x206012C:
                 _0x206012B:
00afe8 81ae      	LDD  R26,Y+6
00afe9 81bf      	LDD  R27,Y+6+1
00afea 931c      	ST   X,R17
00afeb 969e      	ADIW R26,46
00afec 940e bf79 	CALL SUBOPT_0x8F
00afee 81ae      	LDD  R26,Y+6
00afef 81bf      	LDD  R27,Y+6+1
00aff0 9656      	ADIW R26,22
00aff1 940e bf79 	CALL SUBOPT_0x8F
00aff3 eaae      	LDI  R26,LOW(_Fsid_G103)
00aff4 e1ba      	LDI  R27,HIGH(_Fsid_G103)
00aff5 940e bf0a 	CALL SUBOPT_0x7C
                +
00aff7 81ae     +LDD R26 , Y + 6
00aff8 81bf     +LDD R27 , Y + 6 + 1
00aff9 9616     +ADIW R26 , 6
00affa 93ed     +ST X + , R30
00affb 93fc     +ST X , R31
                 	__PUTW1SNS 6,6
                 _0x20E0011:
00affc e0e0      	LDI  R30,LOW(0)
                 _0x20E0010:
00affd 940e daa0 	CALL __LOADLOCR6
00afff 966f      	ADIW R28,31
00b000 9508      	RET
                 _validate_G103:
00b001 940e caae 	CALL SUBOPT_0x25A
00b003 9730      	SBIW R30,0
00b004 f071      	BREQ _0x2060130
00b005 81aa      	LDD  R26,Y+2
00b006 81bb      	LDD  R27,Y+2+1
00b007 91ec      	LD   R30,X
00b008 30e0      	CPI  R30,0
00b009 f049      	BREQ _0x2060130
00b00a 81ea      	LDD  R30,Y+2
00b00b 81fb      	LDD  R31,Y+2+1
00b00c 81a6      	LDD  R26,Z+6
00b00d 81b7      	LDD  R27,Z+7
00b00e 81e8      	LD   R30,Y
00b00f 81f9      	LDD  R31,Y+1
00b010 17ea      	CP   R30,R26
00b011 07fb      	CPC  R31,R27
00b012 f011      	BREQ _0x206012F
                 _0x2060130:
00b013 e0e9      	LDI  R30,LOW(9)
00b014 c00a      	RJMP _0x20E000F
                 _0x206012F:
00b015 81ea      	LDD  R30,Y+2
00b016 81fb      	LDD  R31,Y+2+1
00b017 81a1      	LDD  R26,Z+1
00b018 940e a3b5 	CALL _disk_status
00b01a 70e1      	ANDI R30,LOW(0x1)
00b01b f011      	BREQ _0x2060132
00b01c e0e3      	LDI  R30,LOW(3)
00b01d c001      	RJMP _0x20E000F
                 _0x2060132:
00b01e e0e0      	LDI  R30,LOW(0)
                 _0x20E000F:
00b01f 9624      	ADIW R28,4
00b020 9508      	RET
                 _f_mount:
00b021 940e bf27 	CALL SUBOPT_0x81
00b023 81ac      	LDD  R26,Y+4
00b024 30a1      	CPI  R26,LOW(0x1)
00b025 f010      	BRLO _0x2060133
00b026 e0eb      	LDI  R30,LOW(11)
00b027 c020      	RJMP _0x20E000E
                 _0x2060133:
00b028 81ec      	LDD  R30,Y+4
00b029 940e d4bc 	CALL SUBOPT_0x3AC
00b02b 910d      	LD   R16,X+
00b02c 911c      	LD   R17,X
00b02d 2e00      	MOV  R0,R16
00b02e 2a01      	OR   R0,R17
00b02f f019      	BREQ _0x2060134
00b030 01d8      	MOVW R26,R16
00b031 e0e0      	LDI  R30,LOW(0)
00b032 93ec      	ST   X,R30
                 _0x2060134:
00b033 81ea      	LDD  R30,Y+2
00b034 81fb      	LDD  R31,Y+2+1
00b035 9730      	SBIW R30,0
00b036 f021      	BREQ _0x2060135
00b037 81aa      	LDD  R26,Y+2
00b038 81bb      	LDD  R27,Y+2+1
00b039 e0e0      	LDI  R30,LOW(0)
00b03a 93ec      	ST   X,R30
                 _0x2060135:
00b03b 81ec      	LDD  R30,Y+4
00b03c eaac      	LDI  R26,LOW(_FatFs_G103)
00b03d e1ba      	LDI  R27,HIGH(_FatFs_G103)
00b03e e0f0      	LDI  R31,0
00b03f 0fee      	LSL  R30
00b040 1fff      	ROL  R31
00b041 0fea      	ADD  R30,R26
00b042 1ffb      	ADC  R31,R27
00b043 81aa      	LDD  R26,Y+2
00b044 81bb      	LDD  R27,Y+2+1
00b045 83a0      	STD  Z+0,R26
00b046 83b1      	STD  Z+1,R27
00b047 e0e0      	LDI  R30,LOW(0)
                 _0x20E000E:
00b048 8119      	LDD  R17,Y+1
00b049 8108      	LDD  R16,Y+0
00b04a 9625      	ADIW R28,5
00b04b 9508      	RET
                 _f_open:
00b04c 93aa      	ST   -Y,R26
00b04d 97a2      	SBIW R28,34
00b04e 940e da9b 	CALL __SAVELOCR4
00b050 a5a9      	LDD  R26,Y+41
00b051 a5ba      	LDD  R27,Y+41+1
00b052 940e c2b0 	CALL SUBOPT_0x115
00b054 a1ee      	LDD  R30,Y+38
00b055 71ef      	ANDI R30,LOW(0x1F)
00b056 a3ee      	STD  Y+38,R30
00b057 01fe      	MOVW R30,R28
00b058 96b7      	ADIW R30,39
00b059 93fa      	ST   -Y,R31
00b05a 93ea      	ST   -Y,R30
00b05b 940e be91 	CALL SUBOPT_0x6C
00b05d a5ea      	LDD  R30,Y+42
00b05e 71ee      	ANDI R30,LOW(0x1E)
00b05f 2fae      	MOV  R26,R30
00b060 ddb1      	RCALL _chk_mounted
00b061 2f1e      	MOV  R17,R30
00b062 3010      	CPI  R17,0
00b063 f011      	BREQ _0x2060136
00b064 2fe1      	MOV  R30,R17
00b065 c10f      	RJMP _0x20E000D
                 _0x2060136:
00b066 01fe      	MOVW R30,R28
00b067 9634      	ADIW R30,4
00b068 a3ec      	STD  Y+36,R30
00b069 a3fd      	STD  Y+36+1,R31
00b06a 940e be30 	CALL SUBOPT_0x5D
00b06c a5a9      	LDD  R26,Y+41
00b06d a5ba      	LDD  R27,Y+41+1
00b06e dced      	RCALL _follow_path_G103
00b06f 2f1e      	MOV  R17,R30
00b070 a1ee      	LDD  R30,Y+38
00b071 71ec      	ANDI R30,LOW(0x1C)
00b072 f411      	BRNE PC+3
00b073 940c b108 	JMP _0x2060137
00b075 9728      	SBIW R28,8
00b076 3010      	CPI  R17,0
00b077 f089      	BREQ _0x2060138
00b078 3014      	CPI  R17,4
00b079 f421      	BRNE _0x2060139
00b07a 01de      	MOVW R26,R28
00b07b 9658      	ADIW R26,24
00b07c dbd4      	RCALL _dir_register_G103
00b07d 2f1e      	MOV  R17,R30
                 _0x2060139:
00b07e 3010      	CPI  R17,0
00b07f f019      	BREQ _0x206013A
00b080 2fe1      	MOV  R30,R17
00b081 9628      	ADIW R28,8
00b082 c0f2      	RJMP _0x20E000D
                 _0x206013A:
00b083 a5ee      	LDD  R30,Y+46
00b084 60e8      	ORI  R30,8
00b085 a7ee      	STD  Y+46,R30
                +
00b086 a52a     +LDD R18 , Y + 42
00b087 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b088 c066      	RJMP _0x206013B
                 _0x2060138:
00b089 a5ee      	LDD  R30,Y+46
00b08a 70e4      	ANDI R30,LOW(0x4)
00b08b f019      	BREQ _0x206013C
00b08c e0e8      	LDI  R30,LOW(8)
00b08d 9628      	ADIW R28,8
00b08e c0e6      	RJMP _0x20E000D
                 _0x206013C:
                +
00b08f a52a     +LDD R18 , Y + 42
00b090 a53b     +LDD R19 , Y + 42 + 1
                 	__GETWRS 18,19,42
00b091 2e02      	MOV  R0,R18
00b092 2a03      	OR   R0,R19
00b093 f021      	BREQ _0x206013E
00b094 01f9      	MOVW R30,R18
00b095 85e3      	LDD  R30,Z+11
00b096 71e1      	ANDI R30,LOW(0x11)
00b097 f019      	BREQ _0x206013D
                 _0x206013E:
00b098 e0e7      	LDI  R30,LOW(7)
00b099 9628      	ADIW R28,8
00b09a c0da      	RJMP _0x20E000D
                 _0x206013D:
00b09b a5ee      	LDD  R30,Y+46
00b09c 70e8      	ANDI R30,LOW(0x8)
00b09d f411      	BRNE PC+3
00b09e 940c b0ef 	JMP _0x2060140
00b0a0 940e d48f 	CALL SUBOPT_0x3A6
00b0a2 940e d90e 	CALL __LSLD16
00b0a4 937f      	PUSH R23
00b0a5 936f      	PUSH R22
00b0a6 93ff      	PUSH R31
00b0a7 93ef      	PUSH R30
00b0a8 940e d493 	CALL SUBOPT_0x3A7
00b0aa 91af      	POP  R26
00b0ab 91bf      	POP  R27
00b0ac 918f      	POP  R24
00b0ad 919f      	POP  R25
00b0ae 940e d498 	CALL SUBOPT_0x3A8
00b0b0 940e c158 	CALL SUBOPT_0xD9
00b0b2 01f9      	MOVW R30,R18
00b0b3 9674      	ADIW R30,20
00b0b4 e0a0      	LDI  R26,LOW(0)
00b0b5 e0b0      	LDI  R27,HIGH(0)
00b0b6 83a0      	STD  Z+0,R26
00b0b7 83b1      	STD  Z+1,R27
00b0b8 01f9      	MOVW R30,R18
00b0b9 967a      	ADIW R30,26
00b0ba 83a0      	STD  Z+0,R26
00b0bb 83b1      	STD  Z+1,R27
00b0bc 01f9      	MOVW R30,R18
00b0bd 967c      	ADIW R30,28
00b0be 940e bcda 	CALL SUBOPT_0x2C
00b0c0 940e c9dd 	CALL SUBOPT_0x23B
00b0c2 8da8      	LDD  R26,Y+24
00b0c3 8db9      	LDD  R27,Y+24+1
00b0c4 9614      	ADIW R26,4
00b0c5 e0e1      	LDI  R30,LOW(1)
00b0c6 93ec      	ST   X,R30
00b0c7 8da8      	LDD  R26,Y+24
00b0c8 8db9      	LDD  R27,Y+24+1
00b0c9 969e      	ADIW R26,46
00b0ca 940e d36e 	CALL SUBOPT_0x37C
00b0cc 940e bf4d 	CALL SUBOPT_0x87
00b0ce 940e da7d 	CALL __CPD10
00b0d0 f0a1      	BREQ _0x2060141
00b0d1 940e cba3 	CALL SUBOPT_0x281
00b0d3 940e c07c 	CALL SUBOPT_0xB6
00b0d5 d887      	RCALL _remove_chain_G103
00b0d6 2f1e      	MOV  R17,R30
00b0d7 3010      	CPI  R17,0
00b0d8 f019      	BREQ _0x2060142
00b0d9 2fe1      	MOV  R30,R17
00b0da 9628      	ADIW R28,8
00b0db c099      	RJMP _0x20E000D
                 _0x2060142:
00b0dc 940e bf4d 	CALL SUBOPT_0x87
00b0de 940e c167 	CALL SUBOPT_0xDD
                +
00b0e0 8da8     +LDD R26 , Y + 24
00b0e1 8db9     +LDD R27 , Y + 24 + 1
00b0e2 961a     +ADIW R26 , 10
00b0e3 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 24,10
                 _0x2060141:
00b0e5 940e cba3 	CALL SUBOPT_0x281
00b0e7 940e be1e 	CALL SUBOPT_0x59
00b0e9 940e d4e5 	CALL SUBOPT_0x3B2
00b0eb f019      	BREQ _0x2060143
00b0ec 2fe1      	MOV  R30,R17
00b0ed 9628      	ADIW R28,8
00b0ee c086      	RJMP _0x20E000D
                 _0x2060143:
                 _0x2060140:
                 _0x206013B:
00b0ef a5ee      	LDD  R30,Y+46
00b0f0 70e8      	ANDI R30,LOW(0x8)
00b0f1 f0a1      	BREQ _0x2060144
00b0f2 01f9      	MOVW R30,R18
00b0f3 963b      	ADIW R30,11
00b0f4 e0a0      	LDI  R26,LOW(0)
00b0f5 83a0      	STD  Z+0,R26
00b0f6 940e a65a 	CALL _get_fattime
00b0f8 940e c05d 	CALL SUBOPT_0xB0
                +
00b0fa 01d9     +MOVW R26 , R18
00b0fb 961e     +ADIW R26 , 14
00b0fc 940e d9ff+CALL __PUTDP1
                 	__PUTD1RNS 18,14
00b0fe 8da8      	LDD  R26,Y+24
00b0ff 8db9      	LDD  R27,Y+24+1
00b100 9614      	ADIW R26,4
00b101 e0e1      	LDI  R30,LOW(1)
00b102 93ec      	ST   X,R30
00b103 a5ee      	LDD  R30,Y+46
00b104 62e0      	ORI  R30,0x20
00b105 a7ee      	STD  Y+46,R30
                 _0x2060144:
00b106 9628      	ADIW R28,8
00b107 c019      	RJMP _0x2060145
                 _0x2060137:
00b108 3010      	CPI  R17,0
00b109 f011      	BREQ _0x2060146
00b10a 2fe1      	MOV  R30,R17
00b10b c069      	RJMP _0x20E000D
                 _0x2060146:
                +
00b10c a12a     +LDD R18 , Y + 34
00b10d a13b     +LDD R19 , Y + 34 + 1
                 	__GETWRS 18,19,34
00b10e 2e02      	MOV  R0,R18
00b10f 2a03      	OR   R0,R19
00b110 f021      	BREQ _0x2060148
00b111 01f9      	MOVW R30,R18
00b112 85e3      	LDD  R30,Z+11
00b113 71e0      	ANDI R30,LOW(0x10)
00b114 f011      	BREQ _0x2060147
                 _0x2060148:
00b115 e0e4      	LDI  R30,LOW(4)
00b116 c05e      	RJMP _0x20E000D
                 _0x2060147:
00b117 a1ee      	LDD  R30,Y+38
00b118 70e2      	ANDI R30,LOW(0x2)
00b119 f021      	BREQ _0x206014B
00b11a 01f9      	MOVW R30,R18
00b11b 85e3      	LDD  R30,Z+11
00b11c 70e1      	ANDI R30,LOW(0x1)
00b11d f409      	BRNE _0x206014C
                 _0x206014B:
00b11e c002      	RJMP _0x206014A
                 _0x206014C:
00b11f e0e7      	LDI  R30,LOW(7)
00b120 c054      	RJMP _0x20E000D
                 _0x206014A:
                 _0x2060145:
00b121 89a8      	LDD  R26,Y+16
00b122 89b9      	LDD  R27,Y+16+1
00b123 969e      	ADIW R26,46
00b124 940e d9f4 	CALL __GETD1P
                +
00b126 a5a9     +LDD R26 , Y + 41
00b127 a5ba     +LDD R27 , Y + 41 + 1
00b128 965a     +ADIW R26 , 26
00b129 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 41,26
00b12b a1ea      	LDD  R30,Y+34
00b12c a1fb      	LDD  R31,Y+34+1
                +
00b12d a5a9     +LDD R26 , Y + 41
00b12e a5ba     +LDD R27 , Y + 41 + 1
00b12f 965e     +ADIW R26 , 30
00b130 93ed     +ST X + , R30
00b131 93fc     +ST X , R31
                 	__PUTW1SNS 41,30
00b132 a1ee      	LDD  R30,Y+38
                +
00b133 a5a9     +LDD R26 , Y + 41
00b134 a5ba     +LDD R27 , Y + 41 + 1
00b135 9614     +ADIW R26 , 4
00b136 93ec     +ST X , R30
                 	__PUTB1SNS 41,4
00b137 940e d48f 	CALL SUBOPT_0x3A6
00b139 940e d90e 	CALL __LSLD16
00b13b 937f      	PUSH R23
00b13c 936f      	PUSH R22
00b13d 93ff      	PUSH R31
00b13e 93ef      	PUSH R30
00b13f 940e d493 	CALL SUBOPT_0x3A7
00b141 91af      	POP  R26
00b142 91bf      	POP  R27
00b143 918f      	POP  R24
00b144 919f      	POP  R25
00b145 940e d498 	CALL SUBOPT_0x3A8
                +
00b147 a5a9     +LDD R26 , Y + 41
00b148 a5ba     +LDD R27 , Y + 41 + 1
00b149 961e     +ADIW R26 , 14
00b14a 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 41,14
00b14c 01d9      	MOVW R26,R18
00b14d 965c      	ADIW R26,28
00b14e 940e d9f4 	CALL __GETD1P
                +
00b150 a5a9     +LDD R26 , Y + 41
00b151 a5ba     +LDD R27 , Y + 41 + 1
00b152 961a     +ADIW R26 , 10
00b153 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 41,10
00b155 a5a9      	LDD  R26,Y+41
00b156 a5ba      	LDD  R27,Y+41+1
00b157 9616      	ADIW R26,6
00b158 940e bf79 	CALL SUBOPT_0x8F
00b15a a5a9      	LDD  R26,Y+41
00b15b a5ba      	LDD  R27,Y+41+1
00b15c 9615      	ADIW R26,5
00b15d efef      	LDI  R30,LOW(255)
00b15e 93ec      	ST   X,R30
00b15f a5a9      	LDD  R26,Y+41
00b160 a5ba      	LDD  R27,Y+41+1
00b161 9656      	ADIW R26,22
00b162 940e bf79 	CALL SUBOPT_0x8F
00b164 89e8      	LDD  R30,Y+16
00b165 89f9      	LDD  R31,Y+16+1
00b166 a5a9      	LDD  R26,Y+41
00b167 a5ba      	LDD  R27,Y+41+1
00b168 93ed      	ST   X+,R30
00b169 93fc      	ST   X,R31
00b16a 89a8      	LDD  R26,Y+16
00b16b 89b9      	LDD  R27,Y+16+1
00b16c 9616      	ADIW R26,6
00b16d 940e d9f0 	CALL __GETW1P
                +
00b16f a5a9     +LDD R26 , Y + 41
00b170 a5ba     +LDD R27 , Y + 41 + 1
00b171 9612     +ADIW R26 , 2
00b172 93ed     +ST X + , R30
00b173 93fc     +ST X , R31
                 	__PUTW1SNS 41,2
00b174 e0e0      	LDI  R30,LOW(0)
                 _0x20E000D:
00b175 940e daa2 	CALL __LOADLOCR4
00b177 96ab      	ADIW R28,43
00b178 9508      	RET
                 _f_read:
00b179 93ba      	ST   -Y,R27
00b17a 93aa      	ST   -Y,R26
00b17b 972e      	SBIW R28,14
00b17c 940e da99 	CALL __SAVELOCR6
00b17e 8de8      	LDD  R30,Y+24
00b17f 8df9      	LDD  R31,Y+24+1
00b180 83ee      	STD  Y+6,R30
00b181 83ff      	STD  Y+6+1,R31
00b182 89ac      	LDD  R26,Y+20
00b183 89bd      	LDD  R27,Y+20+1
00b184 940e c2b0 	CALL SUBOPT_0x115
00b186 940e d4ea 	CALL SUBOPT_0x3B3
00b188 8dec      	LDD  R30,Y+28
00b189 8dfd      	LDD  R31,Y+28+1
00b18a 940e d4ed 	CALL SUBOPT_0x3B4
00b18c f011      	BREQ _0x206014D
00b18d 2fe1      	MOV  R30,R17
00b18e c14b      	RJMP _0x20E000C
                 _0x206014D:
00b18f 8dea      	LDD  R30,Y+26
00b190 8dfb      	LDD  R31,Y+26+1
00b191 81a4      	LDD  R26,Z+4
00b192 78a0      	ANDI R26,LOW(0x80)
00b193 f011      	BREQ _0x206014E
00b194 e0e2      	LDI  R30,LOW(2)
00b195 c144      	RJMP _0x20E000C
                 _0x206014E:
00b196 8dea      	LDD  R30,Y+26
00b197 8dfb      	LDD  R31,Y+26+1
00b198 81a4      	LDD  R26,Z+4
00b199 70a1      	ANDI R26,LOW(0x1)
00b19a f411      	BRNE _0x206014F
00b19b e0e7      	LDI  R30,LOW(7)
00b19c c13d      	RJMP _0x20E000C
                 _0x206014F:
00b19d 8dea      	LDD  R30,Y+26
00b19e 8dfb      	LDD  R31,Y+26+1
                +
00b19f 85a2     +LDD R26 , Z + 10
00b1a0 85b3     +LDD R27 , Z + 10 + 1
00b1a1 8584     +LDD R24 , Z + 10 + 2
00b1a2 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b1a3 939f      	PUSH R25
00b1a4 938f      	PUSH R24
00b1a5 93bf      	PUSH R27
00b1a6 93af      	PUSH R26
00b1a7 940e d4f4 	CALL SUBOPT_0x3B5
00b1a9 91ef      	POP  R30
00b1aa 91ff      	POP  R31
00b1ab 916f      	POP  R22
00b1ac 917f      	POP  R23
00b1ad 940e d89e 	CALL __SUBD12
00b1af 940e d1ed 	CALL SUBOPT_0x33E
00b1b1 940e bdd3 	CALL SUBOPT_0x4F
00b1b3 89ae      	LDD  R26,Y+22
00b1b4 89bf      	LDD  R27,Y+22+1
00b1b5 2788      	CLR  R24
00b1b6 2799      	CLR  R25
00b1b7 940e da8f 	CALL __CPD12
00b1b9 f420      	BRSH _0x2060150
00b1ba 85e8      	LDD  R30,Y+8
00b1bb 85f9      	LDD  R31,Y+8+1
00b1bc 8bee      	STD  Y+22,R30
00b1bd 8bff      	STD  Y+22+1,R31
                 _0x2060150:
                 _0x2060152:
00b1be 89ee      	LDD  R30,Y+22
00b1bf 89ff      	LDD  R31,Y+22+1
00b1c0 9730      	SBIW R30,0
00b1c1 f411      	BRNE PC+3
00b1c2 940c b2d9 	JMP _0x2060153
00b1c4 940e d4f4 	CALL SUBOPT_0x3B5
00b1c6 940e d4fb 	CALL SUBOPT_0x3B6
00b1c8 f011      	BREQ PC+3
00b1c9 940c b2a4 	JMP _0x2060154
00b1cb 8dea      	LDD  R30,Y+26
00b1cc 8dfb      	LDD  R31,Y+26+1
00b1cd 8005      	LDD  R0,Z+5
00b1ce 8daa      	LDD  R26,Y+26
00b1cf 8dbb      	LDD  R27,Y+26+1
00b1d0 940e d9f0 	CALL __GETW1P
00b1d2 81e2      	LDD  R30,Z+2
00b1d3 160e      	CP   R0,R30
00b1d4 f188      	BRLO _0x2060155
00b1d5 940e d4f4 	CALL SUBOPT_0x3B5
00b1d7 940e da89 	CALL __CPD02
00b1d9 f431      	BRNE _0x2060156
00b1da 8daa      	LDD  R26,Y+26
00b1db 8dbb      	LDD  R27,Y+26+1
00b1dc 961e      	ADIW R26,14
00b1dd 940e d9f4 	CALL __GETD1P
00b1df c006      	RJMP _0x2060157
                 _0x2060156:
00b1e0 940e d4ea 	CALL SUBOPT_0x3B3
00b1e2 940e d500 	CALL SUBOPT_0x3B7
00b1e4 940e a83b 	CALL _get_fat
                 _0x2060157:
00b1e6 940e d1f2 	CALL SUBOPT_0x33F
00b1e8 940e d3cf 	CALL SUBOPT_0x387
00b1ea 940e d361 	CALL SUBOPT_0x37A
00b1ec f420      	BRSH _0x2060159
00b1ed 940e d507 	CALL SUBOPT_0x3B8
00b1ef e0e2      	LDI  R30,LOW(2)
00b1f0 c0e9      	RJMP _0x20E000C
                 _0x2060159:
00b1f1 940e d3cf 	CALL SUBOPT_0x387
00b1f3 940e bd3e 	CALL SUBOPT_0x3A
00b1f5 f421      	BRNE _0x206015A
00b1f6 940e d507 	CALL SUBOPT_0x3B8
00b1f8 e0e1      	LDI  R30,LOW(1)
00b1f9 c0e0      	RJMP _0x20E000C
                 _0x206015A:
00b1fa 940e bc01 	CALL SUBOPT_0xC
                +
00b1fc 8daa     +LDD R26 , Y + 26
00b1fd 8dbb     +LDD R27 , Y + 26 + 1
00b1fe 9652     +ADIW R26 , 18
00b1ff 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 26,18
00b201 8daa      	LDD  R26,Y+26
00b202 8dbb      	LDD  R27,Y+26+1
00b203 9615      	ADIW R26,5
00b204 e0e0      	LDI  R30,LOW(0)
00b205 93ec      	ST   X,R30
                 _0x2060155:
00b206 940e d4ea 	CALL SUBOPT_0x3B3
00b208 940e d500 	CALL SUBOPT_0x3B7
00b20a d85a      	RCALL _clust2sect
00b20b 940e c1dd 	CALL SUBOPT_0xEF
00b20d 940e da7d 	CALL __CPD10
00b20f f421      	BRNE _0x206015B
00b210 940e d507 	CALL SUBOPT_0x3B8
00b212 e0e2      	LDI  R30,LOW(2)
00b213 c0c6      	RJMP _0x20E000C
                 _0x206015B:
00b214 940e d50e 	CALL SUBOPT_0x3B9
00b216 940e bbfc 	CALL SUBOPT_0xB
00b218 940e c058 	CALL SUBOPT_0xAF
00b21a 940e c1d3 	CALL SUBOPT_0xED
00b21c 89ae      	LDD  R26,Y+22
00b21d 89bf      	LDD  R27,Y+22+1
00b21e 940e d513 	CALL SUBOPT_0x3BA
00b220 f411      	BRNE PC+3
00b221 940c b26f 	JMP _0x206015C
00b223 8dea      	LDD  R30,Y+26
00b224 8dfb      	LDD  R31,Y+26+1
00b225 81e5      	LDD  R30,Z+5
00b226 940e d485 	CALL SUBOPT_0x3A4
00b228 010f      	MOVW R0,R30
00b229 940e d51b 	CALL SUBOPT_0x3BB
00b22b 81e2      	LDD  R30,Z+2
00b22c 940e c61d 	CALL SUBOPT_0x1A7
00b22e f450      	BRSH _0x206015D
00b22f 940e d51b 	CALL SUBOPT_0x3BB
00b231 940e cb43 	CALL SUBOPT_0x271
00b233 01df      	MOVW R26,R30
00b234 940e d50e 	CALL SUBOPT_0x3B9
00b236 1bae      	SUB  R26,R30
00b237 0bbf      	SBC  R27,R31
00b238 01ad      	MOVW R20,R26
                 _0x206015D:
00b239 940e d51b 	CALL SUBOPT_0x3BB
00b23b 940e d520 	CALL SUBOPT_0x3BC
                +
00b23d 85ef     +LDD R30 , Y + 15
00b23e 89f8     +LDD R31 , Y + 15 + 1
00b23f 8969     +LDD R22 , Y + 15 + 2
00b240 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b241 940e da29 	CALL __PUTPARD1
00b243 2fa4      	MOV  R26,R20
00b244 940e a3bf 	CALL _disk_read
00b246 30e0      	CPI  R30,0
00b247 f021      	BREQ _0x206015E
00b248 940e d507 	CALL SUBOPT_0x3B8
00b24a e0e1      	LDI  R30,LOW(1)
00b24b c08e      	RJMP _0x20E000C
                 _0x206015E:
00b24c 8dea      	LDD  R30,Y+26
00b24d 8dfb      	LDD  R31,Y+26+1
00b24e 81a4      	LDD  R26,Z+4
00b24f 74a0      	ANDI R26,LOW(0x40)
00b250 f029      	BREQ _0x2060160
00b251 940e d527 	CALL SUBOPT_0x3BD
00b253 940e d52f 	CALL SUBOPT_0x3BE
00b255 f008      	BRLO _0x2060161
                 _0x2060160:
00b256 c013      	RJMP _0x206015F
                 _0x2060161:
00b257 940e d527 	CALL SUBOPT_0x3BD
00b259 940e d537 	CALL SUBOPT_0x3BF
00b25b 81ae      	LDD  R26,Y+6
00b25c 81bf      	LDD  R27,Y+6+1
00b25d 2788      	CLR  R24
00b25e 2799      	CLR  R25
00b25f 940e c470 	CALL SUBOPT_0x160
00b261 8dec      	LDD  R30,Y+28
00b262 8dfd      	LDD  R31,Y+28+1
00b263 96b0      	ADIW R30,32
00b264 93fa      	ST   -Y,R31
00b265 93ea      	ST   -Y,R30
00b266 e0a0      	LDI  R26,LOW(512)
00b267 e0b2      	LDI  R27,HIGH(512)
00b268 940e a6e8 	CALL _mem_cpy_G103
                 _0x206015F:
00b26a 8daa      	LDD  R26,Y+26
00b26b 8dbb      	LDD  R27,Y+26+1
00b26c 940e d540 	CALL SUBOPT_0x3C0
00b26e c053      	RJMP _0x2060151
                 _0x206015C:
00b26f 8dea      	LDD  R30,Y+26
00b270 8dfb      	LDD  R31,Y+26+1
00b271 81a4      	LDD  R26,Z+4
00b272 74a0      	ANDI R26,LOW(0x40)
00b273 f089      	BREQ _0x2060162
00b274 940e d51b 	CALL SUBOPT_0x3BB
00b276 940e d54b 	CALL SUBOPT_0x3C1
00b278 8ded      	LDD  R30,Y+29
00b279 8dfe      	LDD  R31,Y+29+1
00b27a 940e d553 	CALL SUBOPT_0x3C2
00b27c f021      	BREQ _0x2060163
00b27d 940e d507 	CALL SUBOPT_0x3B8
00b27f e0e1      	LDI  R30,LOW(1)
00b280 c059      	RJMP _0x20E000C
                 _0x2060163:
00b281 8daa      	LDD  R26,Y+26
00b282 8dbb      	LDD  R27,Y+26+1
00b283 940e d55e 	CALL SUBOPT_0x3C3
                 _0x2060162:
00b285 940e d527 	CALL SUBOPT_0x3BD
00b287 940e da8f 	CALL __CPD12
00b289 f079      	BREQ _0x2060164
00b28a 940e d51b 	CALL SUBOPT_0x3BB
00b28c 940e d54b 	CALL SUBOPT_0x3C1
                +
00b28e 85ef     +LDD R30 , Y + 15
00b28f 89f8     +LDD R31 , Y + 15 + 1
00b290 8969     +LDD R22 , Y + 15 + 2
00b291 897a     +LDD R23 , Y + 15 + 3
                 	__GETD1S 15
00b292 940e d49d 	CALL SUBOPT_0x3A9
00b294 f021      	BREQ _0x2060165
00b295 940e d507 	CALL SUBOPT_0x3B8
00b297 e0e1      	LDI  R30,LOW(1)
00b298 c041      	RJMP _0x20E000C
                 _0x2060165:
                 _0x2060164:
00b299 940e c162 	CALL SUBOPT_0xDC
                +
00b29b 8daa     +LDD R26 , Y + 26
00b29c 8dbb     +LDD R27 , Y + 26 + 1
00b29d 9656     +ADIW R26 , 22
00b29e 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 26,22
00b2a0 8daa      	LDD  R26,Y+26
00b2a1 8dbb      	LDD  R27,Y+26+1
00b2a2 940e d563 	CALL SUBOPT_0x3C4
                 _0x2060154:
00b2a4 8daa      	LDD  R26,Y+26
00b2a5 8dbb      	LDD  R27,Y+26+1
00b2a6 940e d568 	CALL SUBOPT_0x3C5
00b2a8 e0a0      	LDI  R26,LOW(512)
00b2a9 e0b2      	LDI  R27,HIGH(512)
00b2aa 1bae      	SUB  R26,R30
00b2ab 0bbf      	SBC  R27,R31
00b2ac 019d      	MOVW R18,R26
00b2ad 89ee      	LDD  R30,Y+22
00b2ae 89ff      	LDD  R31,Y+22+1
00b2af 17e2      	CP   R30,R18
00b2b0 07f3      	CPC  R31,R19
00b2b1 f410      	BRSH _0x2060166
                +
00b2b2 892e     +LDD R18 , Y + 22
00b2b3 893f     +LDD R19 , Y + 22 + 1
                 	__GETWRS 18,19,22
                 _0x2060166:
00b2b4 940e c45c 	CALL SUBOPT_0x15C
00b2b6 8dac      	LDD  R26,Y+28
00b2b7 8dbd      	LDD  R27,Y+28+1
00b2b8 940e d568 	CALL SUBOPT_0x3C5
00b2ba 8dac      	LDD  R26,Y+28
00b2bb 8dbd      	LDD  R27,Y+28+1
00b2bc 9690      	ADIW R26,32
00b2bd 940e c470 	CALL SUBOPT_0x160
00b2bf 01d9      	MOVW R26,R18
00b2c0 940e a6e8 	CALL _mem_cpy_G103
                 _0x2060151:
00b2c2 01f9      	MOVW R30,R18
00b2c3 940e c618 	CALL SUBOPT_0x1A6
00b2c5 83ee      	STD  Y+6,R30
00b2c6 83ff      	STD  Y+6+1,R31
00b2c7 8dea      	LDD  R30,Y+26
00b2c8 8dfb      	LDD  R31,Y+26+1
00b2c9 940e d56d 	CALL SUBOPT_0x3C6
00b2cb 01d0      	MOVW R26,R0
00b2cc 940e d9ff 	CALL __PUTDP1
00b2ce 89ac      	LDD  R26,Y+20
00b2cf 89bd      	LDD  R27,Y+20+1
00b2d0 940e d576 	CALL SUBOPT_0x3C7
00b2d2 89ee      	LDD  R30,Y+22
00b2d3 89ff      	LDD  R31,Y+22+1
00b2d4 1be2      	SUB  R30,R18
00b2d5 0bf3      	SBC  R31,R19
00b2d6 8bee      	STD  Y+22,R30
00b2d7 8bff      	STD  Y+22+1,R31
00b2d8 cee5      	RJMP _0x2060152
                 _0x2060153:
00b2d9 e0e0      	LDI  R30,LOW(0)
                 _0x20E000C:
00b2da 940e daa0 	CALL __LOADLOCR6
00b2dc 966c      	ADIW R28,28
00b2dd 9508      	RET
                 _f_write:
00b2de 93ba      	ST   -Y,R27
00b2df 93aa      	ST   -Y,R26
00b2e0 972a      	SBIW R28,10
00b2e1 940e da99 	CALL __SAVELOCR6
00b2e3 89ec      	LDD  R30,Y+20
00b2e4 89fd      	LDD  R31,Y+20+1
00b2e5 83ee      	STD  Y+6,R30
00b2e6 83ff      	STD  Y+6+1,R31
00b2e7 89a8      	LDD  R26,Y+16
00b2e8 89b9      	LDD  R27,Y+16+1
00b2e9 940e c2b0 	CALL SUBOPT_0x115
00b2eb 940e d57d 	CALL SUBOPT_0x3C8
00b2ed 8de8      	LDD  R30,Y+24
00b2ee 8df9      	LDD  R31,Y+24+1
00b2ef 940e d4ed 	CALL SUBOPT_0x3B4
00b2f1 f011      	BREQ _0x2060167
00b2f2 2fe1      	MOV  R30,R17
00b2f3 c182      	RJMP _0x20E000B
                 _0x2060167:
00b2f4 89ee      	LDD  R30,Y+22
00b2f5 89ff      	LDD  R31,Y+22+1
00b2f6 81a4      	LDD  R26,Z+4
00b2f7 78a0      	ANDI R26,LOW(0x80)
00b2f8 f011      	BREQ _0x2060168
00b2f9 e0e2      	LDI  R30,LOW(2)
00b2fa c17b      	RJMP _0x20E000B
                 _0x2060168:
00b2fb 89ee      	LDD  R30,Y+22
00b2fc 89ff      	LDD  R31,Y+22+1
00b2fd 81a4      	LDD  R26,Z+4
00b2fe 70a2      	ANDI R26,LOW(0x2)
00b2ff f411      	BRNE _0x2060169
00b300 e0e7      	LDI  R30,LOW(7)
00b301 c174      	RJMP _0x20E000B
                 _0x2060169:
00b302 89ee      	LDD  R30,Y+22
00b303 89ff      	LDD  R31,Y+22+1
                +
00b304 85a2     +LDD R26 , Z + 10
00b305 85b3     +LDD R27 , Z + 10 + 1
00b306 8584     +LDD R24 , Z + 10 + 2
00b307 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00b308 89ea      	LDD  R30,Y+18
00b309 89fb      	LDD  R31,Y+18+1
00b30a 940e d440 	CALL SUBOPT_0x399
00b30c 937f      	PUSH R23
00b30d 936f      	PUSH R22
00b30e 93ff      	PUSH R31
00b30f 93ef      	PUSH R30
00b310 940e d580 	CALL SUBOPT_0x3C9
00b312 91af      	POP  R26
00b313 91bf      	POP  R27
00b314 918f      	POP  R24
00b315 919f      	POP  R25
00b316 940e da94 	CALL __CPD21
00b318 f418      	BRSH _0x206016A
00b319 e0e0      	LDI  R30,LOW(0)
00b31a 8bea      	STD  Y+18,R30
00b31b 8beb      	STD  Y+18+1,R30
                 _0x206016A:
                 _0x206016C:
00b31c 89ea      	LDD  R30,Y+18
00b31d 89fb      	LDD  R31,Y+18+1
00b31e 9730      	SBIW R30,0
00b31f f411      	BRNE PC+3
00b320 940c b45c 	JMP _0x206016D
00b322 940e d586 	CALL SUBOPT_0x3CA
00b324 940e d4fb 	CALL SUBOPT_0x3B6
00b326 f011      	BREQ PC+3
00b327 940c b421 	JMP _0x206016E
00b329 89ee      	LDD  R30,Y+22
00b32a 89ff      	LDD  R31,Y+22+1
00b32b 8005      	LDD  R0,Z+5
00b32c 940e d58d 	CALL SUBOPT_0x3CB
00b32e 81e2      	LDD  R30,Z+2
00b32f 160e      	CP   R0,R30
00b330 f410      	BRSH PC+3
00b331 940c b37b 	JMP _0x206016F
00b333 89ae      	LDD  R26,Y+22
00b334 89bf      	LDD  R27,Y+22+1
00b335 9616      	ADIW R26,6
00b336 940e d44d 	CALL SUBOPT_0x39B
00b338 f4c1      	BRNE _0x2060170
00b339 89ae      	LDD  R26,Y+22
00b33a 89bf      	LDD  R27,Y+22+1
00b33b 961e      	ADIW R26,14
00b33c 940e d9f4 	CALL __GETD1P
00b33e 940e c1dd 	CALL SUBOPT_0xEF
00b340 940e da7d 	CALL __CPD10
00b342 f469      	BRNE _0x2060171
00b343 940e d57d 	CALL SUBOPT_0x3C8
00b345 940e bcda 	CALL SUBOPT_0x2C
00b347 940e a9ac 	CALL _create_chain_G103
00b349 940e c1d3 	CALL SUBOPT_0xED
                +
00b34b 89ae     +LDD R26 , Y + 22
00b34c 89bf     +LDD R27 , Y + 22 + 1
00b34d 961e     +ADIW R26 , 14
00b34e 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 22,14
                 _0x2060171:
00b350 c008      	RJMP _0x2060172
                 _0x2060170:
00b351 940e d57d 	CALL SUBOPT_0x3C8
00b353 940e d592 	CALL SUBOPT_0x3CC
00b355 940e a9ac 	CALL _create_chain_G103
00b357 940e c1d3 	CALL SUBOPT_0xED
                 _0x2060172:
00b359 940e c162 	CALL SUBOPT_0xDC
00b35b 940e da7d 	CALL __CPD10
00b35d f409      	BRNE _0x2060173
00b35e c0fd      	RJMP _0x206016D
                 _0x2060173:
00b35f 940e bbfc 	CALL SUBOPT_0xB
00b361 940e d3f9 	CALL SUBOPT_0x38D
00b363 f421      	BRNE _0x2060174
00b364 940e d599 	CALL SUBOPT_0x3CD
00b366 e0e2      	LDI  R30,LOW(2)
00b367 c10e      	RJMP _0x20E000B
                 _0x2060174:
00b368 940e be2e 	CALL SUBOPT_0x5C
00b36a f421      	BRNE _0x2060175
00b36b 940e d599 	CALL SUBOPT_0x3CD
00b36d e0e1      	LDI  R30,LOW(1)
00b36e c107      	RJMP _0x20E000B
                 _0x2060175:
00b36f 940e c162 	CALL SUBOPT_0xDC
                +
00b371 89ae     +LDD R26 , Y + 22
00b372 89bf     +LDD R27 , Y + 22 + 1
00b373 9652     +ADIW R26 , 18
00b374 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 22,18
00b376 89ae      	LDD  R26,Y+22
00b377 89bf      	LDD  R27,Y+22+1
00b378 9615      	ADIW R26,5
00b379 e0e0      	LDI  R30,LOW(0)
00b37a 93ec      	ST   X,R30
                 _0x206016F:
00b37b 89ee      	LDD  R30,Y+22
00b37c 89ff      	LDD  R31,Y+22+1
00b37d 81a4      	LDD  R26,Z+4
00b37e 74a0      	ANDI R26,LOW(0x40)
00b37f f089      	BREQ _0x2060176
00b380 940e d58d 	CALL SUBOPT_0x3CB
00b382 940e d5a0 	CALL SUBOPT_0x3CE
00b384 8de9      	LDD  R30,Y+25
00b385 8dfa      	LDD  R31,Y+25+1
00b386 940e d553 	CALL SUBOPT_0x3C2
00b388 f021      	BREQ _0x2060177
00b389 940e d599 	CALL SUBOPT_0x3CD
00b38b e0e1      	LDI  R30,LOW(1)
00b38c c0e9      	RJMP _0x20E000B
                 _0x2060177:
00b38d 89ae      	LDD  R26,Y+22
00b38e 89bf      	LDD  R27,Y+22+1
00b38f 940e d55e 	CALL SUBOPT_0x3C3
                 _0x2060176:
00b391 940e d57d 	CALL SUBOPT_0x3C8
00b393 940e d592 	CALL SUBOPT_0x3CC
00b395 940e aa65 	CALL _clust2sect
00b397 940e d1ed 	CALL SUBOPT_0x33E
00b399 940e bdd3 	CALL SUBOPT_0x4F
00b39b 940e da7d 	CALL __CPD10
00b39d f421      	BRNE _0x2060178
00b39e 940e d599 	CALL SUBOPT_0x3CD
00b3a0 e0e2      	LDI  R30,LOW(2)
00b3a1 c0d4      	RJMP _0x20E000B
                 _0x2060178:
00b3a2 940e d5a8 	CALL SUBOPT_0x3CF
00b3a4 940e c15d 	CALL SUBOPT_0xDB
00b3a6 940e c058 	CALL SUBOPT_0xAF
00b3a8 940e d1ed 	CALL SUBOPT_0x33E
00b3aa 89aa      	LDD  R26,Y+18
00b3ab 89bb      	LDD  R27,Y+18+1
00b3ac 940e d513 	CALL SUBOPT_0x3BA
00b3ae f411      	BRNE PC+3
00b3af 940c b3f8 	JMP _0x2060179
00b3b1 89ee      	LDD  R30,Y+22
00b3b2 89ff      	LDD  R31,Y+22+1
00b3b3 81e5      	LDD  R30,Z+5
00b3b4 940e d485 	CALL SUBOPT_0x3A4
00b3b6 010f      	MOVW R0,R30
00b3b7 940e d58d 	CALL SUBOPT_0x3CB
00b3b9 81e2      	LDD  R30,Z+2
00b3ba 940e c61d 	CALL SUBOPT_0x1A7
00b3bc f450      	BRSH _0x206017A
00b3bd 940e d58d 	CALL SUBOPT_0x3CB
00b3bf 940e cb43 	CALL SUBOPT_0x271
00b3c1 01df      	MOVW R26,R30
00b3c2 940e d5a8 	CALL SUBOPT_0x3CF
00b3c4 1bae      	SUB  R26,R30
00b3c5 0bbf      	SBC  R27,R31
00b3c6 01ad      	MOVW R20,R26
                 _0x206017A:
00b3c7 940e d58d 	CALL SUBOPT_0x3CB
00b3c9 940e d520 	CALL SUBOPT_0x3BC
00b3cb 940e be60 	CALL SUBOPT_0x64
00b3cd 2fa4      	MOV  R26,R20
00b3ce 940e a424 	CALL _disk_write
00b3d0 30e0      	CPI  R30,0
00b3d1 f021      	BREQ _0x206017B
00b3d2 940e d599 	CALL SUBOPT_0x3CD
00b3d4 e0e1      	LDI  R30,LOW(1)
00b3d5 c0a0      	RJMP _0x20E000B
                 _0x206017B:
00b3d6 940e d5ad 	CALL SUBOPT_0x3D0
00b3d8 940e d52f 	CALL SUBOPT_0x3BE
00b3da f4c0      	BRSH _0x206017C
00b3db 940e d5b5 	CALL SUBOPT_0x3D1
                +
00b3dd 89a6     +LDD R26 , Z + 22
00b3de 89b7     +LDD R27 , Z + 22 + 1
00b3df 8d80     +LDD R24 , Z + 22 + 2
00b3e0 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00b3e1 940e c14e 	CALL SUBOPT_0xD7
00b3e3 940e d537 	CALL SUBOPT_0x3BF
00b3e5 85a8      	LDD  R26,Y+8
00b3e6 85b9      	LDD  R27,Y+8+1
00b3e7 2788      	CLR  R24
00b3e8 2799      	CLR  R25
00b3e9 940e c470 	CALL SUBOPT_0x160
00b3eb e0a0      	LDI  R26,LOW(512)
00b3ec e0b2      	LDI  R27,HIGH(512)
00b3ed 940e a6e8 	CALL _mem_cpy_G103
00b3ef 89ae      	LDD  R26,Y+22
00b3f0 89bf      	LDD  R27,Y+22+1
00b3f1 940e d55e 	CALL SUBOPT_0x3C3
                 _0x206017C:
00b3f3 89ae      	LDD  R26,Y+22
00b3f4 89bf      	LDD  R27,Y+22+1
00b3f5 940e d540 	CALL SUBOPT_0x3C0
00b3f7 c04d      	RJMP _0x206016B
                 _0x2060179:
00b3f8 940e d5ad 	CALL SUBOPT_0x3D0
00b3fa 940e da8f 	CALL __CPD12
00b3fc f0c9      	BREQ _0x206017D
00b3fd 940e d586 	CALL SUBOPT_0x3CA
00b3ff 010d      	MOVW R0,R26
00b400 940e d580 	CALL SUBOPT_0x3C9
00b402 01d0      	MOVW R26,R0
00b403 940e da94 	CALL __CPD21
00b405 f458      	BRSH _0x206017F
00b406 940e d58d 	CALL SUBOPT_0x3CB
00b408 940e d5a0 	CALL SUBOPT_0x3CE
00b40a 940e be60 	CALL SUBOPT_0x64
00b40c e0a1      	LDI  R26,LOW(1)
00b40d 940e a3bf 	CALL _disk_read
00b40f 30e0      	CPI  R30,0
00b410 f409      	BRNE _0x2060180
                 _0x206017F:
00b411 c004      	RJMP _0x206017E
                 _0x2060180:
00b412 940e d599 	CALL SUBOPT_0x3CD
00b414 e0e1      	LDI  R30,LOW(1)
00b415 c060      	RJMP _0x20E000B
                 _0x206017E:
                 _0x206017D:
00b416 940e bdd3 	CALL SUBOPT_0x4F
                +
00b418 89ae     +LDD R26 , Y + 22
00b419 89bf     +LDD R27 , Y + 22 + 1
00b41a 9656     +ADIW R26 , 22
00b41b 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 22,22
00b41d 89ae      	LDD  R26,Y+22
00b41e 89bf      	LDD  R27,Y+22+1
00b41f 940e d563 	CALL SUBOPT_0x3C4
                 _0x206016E:
00b421 89ae      	LDD  R26,Y+22
00b422 89bf      	LDD  R27,Y+22+1
00b423 940e d568 	CALL SUBOPT_0x3C5
00b425 e0a0      	LDI  R26,LOW(512)
00b426 e0b2      	LDI  R27,HIGH(512)
00b427 1bae      	SUB  R26,R30
00b428 0bbf      	SBC  R27,R31
00b429 019d      	MOVW R18,R26
00b42a 89ea      	LDD  R30,Y+18
00b42b 89fb      	LDD  R31,Y+18+1
00b42c 17e2      	CP   R30,R18
00b42d 07f3      	CPC  R31,R19
00b42e f410      	BRSH _0x2060181
                +
00b42f 892a     +LDD R18 , Y + 18
00b430 893b     +LDD R19 , Y + 18 + 1
                 	__GETWRS 18,19,18
                 _0x2060181:
00b431 89ae      	LDD  R26,Y+22
00b432 89bf      	LDD  R27,Y+22+1
00b433 940e d568 	CALL SUBOPT_0x3C5
00b435 89ae      	LDD  R26,Y+22
00b436 89bf      	LDD  R27,Y+22+1
00b437 9690      	ADIW R26,32
00b438 940e c470 	CALL SUBOPT_0x160
00b43a 940e c5b7 	CALL SUBOPT_0x194
00b43c 01d9      	MOVW R26,R18
00b43d 940e a6e8 	CALL _mem_cpy_G103
00b43f 89ae      	LDD  R26,Y+22
00b440 89bf      	LDD  R27,Y+22+1
00b441 9614      	ADIW R26,4
00b442 91ec      	LD   R30,X
00b443 64e0      	ORI  R30,0x40
00b444 93ec      	ST   X,R30
                 _0x206016B:
00b445 01f9      	MOVW R30,R18
00b446 940e c618 	CALL SUBOPT_0x1A6
00b448 83ee      	STD  Y+6,R30
00b449 83ff      	STD  Y+6+1,R31
00b44a 89ee      	LDD  R30,Y+22
00b44b 89ff      	LDD  R31,Y+22+1
00b44c 940e d56d 	CALL SUBOPT_0x3C6
00b44e 01d0      	MOVW R26,R0
00b44f 940e d9ff 	CALL __PUTDP1
00b451 89a8      	LDD  R26,Y+16
00b452 89b9      	LDD  R27,Y+16+1
00b453 940e d576 	CALL SUBOPT_0x3C7
00b455 89ea      	LDD  R30,Y+18
00b456 89fb      	LDD  R31,Y+18+1
00b457 1be2      	SUB  R30,R18
00b458 0bf3      	SBC  R31,R19
00b459 8bea      	STD  Y+18,R30
00b45a 8bfb      	STD  Y+18+1,R31
00b45b cec0      	RJMP _0x206016C
                 _0x206016D:
00b45c 940e d586 	CALL SUBOPT_0x3CA
00b45e 010d      	MOVW R0,R26
00b45f 940e d580 	CALL SUBOPT_0x3C9
00b461 01d0      	MOVW R26,R0
00b462 940e da8f 	CALL __CPD12
00b464 f450      	BRSH _0x2060182
00b465 89ae      	LDD  R26,Y+22
00b466 89bf      	LDD  R27,Y+22+1
00b467 9616      	ADIW R26,6
00b468 940e d9f4 	CALL __GETD1P
                +
00b46a 89ae     +LDD R26 , Y + 22
00b46b 89bf     +LDD R27 , Y + 22 + 1
00b46c 961a     +ADIW R26 , 10
00b46d 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 22,10
                 _0x2060182:
00b46f 89ae      	LDD  R26,Y+22
00b470 89bf      	LDD  R27,Y+22+1
00b471 9614      	ADIW R26,4
00b472 91ec      	LD   R30,X
00b473 62e0      	ORI  R30,0x20
00b474 93ec      	ST   X,R30
00b475 e0e0      	LDI  R30,LOW(0)
                 _0x20E000B:
00b476 940e daa0 	CALL __LOADLOCR6
00b478 9668      	ADIW R28,24
00b479 9508      	RET
                 _f_sync:
00b47a 93ba      	ST   -Y,R27
00b47b 93aa      	ST   -Y,R26
00b47c 9724      	SBIW R28,4
00b47d 940e da9b 	CALL __SAVELOCR4
00b47f 940e d43d 	CALL SUBOPT_0x398
00b481 85ea      	LDD  R30,Y+10
00b482 85fb      	LDD  R31,Y+10+1
00b483 940e d4ed 	CALL SUBOPT_0x3B4
00b485 f011      	BREQ PC+3
00b486 940c b4f6 	JMP _0x2060183
00b488 85e8      	LDD  R30,Y+8
00b489 85f9      	LDD  R31,Y+8+1
00b48a 81a4      	LDD  R26,Z+4
00b48b 72a0      	ANDI R26,LOW(0x20)
00b48c f411      	BRNE PC+3
00b48d 940c b4f6 	JMP _0x2060184
00b48f 81a4      	LDD  R26,Z+4
00b490 74a0      	ANDI R26,LOW(0x40)
00b491 f0a1      	BREQ _0x2060185
00b492 940e d427 	CALL SUBOPT_0x395
00b494 81e1      	LDD  R30,Z+1
00b495 93ea      	ST   -Y,R30
00b496 85e9      	LDD  R30,Y+9
00b497 85fa      	LDD  R31,Y+9+1
00b498 96b0      	ADIW R30,32
00b499 93fa      	ST   -Y,R31
00b49a 93ea      	ST   -Y,R30
00b49b 85eb      	LDD  R30,Y+11
00b49c 85fc      	LDD  R31,Y+11+1
00b49d 940e d553 	CALL SUBOPT_0x3C2
00b49f f011      	BREQ _0x2060186
00b4a0 e0e1      	LDI  R30,LOW(1)
00b4a1 c055      	RJMP _0x20E000A
                 _0x2060186:
00b4a2 85a8      	LDD  R26,Y+8
00b4a3 85b9      	LDD  R27,Y+8+1
00b4a4 940e d55e 	CALL SUBOPT_0x3C3
                 _0x2060185:
00b4a6 940e d43d 	CALL SUBOPT_0x398
00b4a8 85ea      	LDD  R30,Y+10
00b4a9 85fb      	LDD  R31,Y+10+1
                +
00b4aa 8da2     +LDD R26 , Z + 26
00b4ab 8db3     +LDD R27 , Z + 26 + 1
00b4ac 8d84     +LDD R24 , Z + 26 + 2
00b4ad 8d95     +LDD R25 , Z + 26 + 3
                 	__GETD2Z 26
00b4ae 940e d4e5 	CALL SUBOPT_0x3B2
00b4b0 f011      	BREQ PC+3
00b4b1 940c b4f6 	JMP _0x2060187
00b4b3 85a8      	LDD  R26,Y+8
00b4b4 85b9      	LDD  R27,Y+8+1
00b4b5 965e      	ADIW R26,30
00b4b6 912d      	LD   R18,X+
00b4b7 913c      	LD   R19,X
00b4b8 01d9      	MOVW R26,R18
00b4b9 961b      	ADIW R26,11
00b4ba 91ec      	LD   R30,X
00b4bb 62e0      	ORI  R30,0x20
00b4bc 93ec      	ST   X,R30
00b4bd 85a8      	LDD  R26,Y+8
00b4be 85b9      	LDD  R27,Y+8+1
00b4bf 961a      	ADIW R26,10
00b4c0 940e d9f4 	CALL __GETD1P
                +
00b4c2 01d9     +MOVW R26 , R18
00b4c3 965c     +ADIW R26 , 28
00b4c4 940e d9ff+CALL __PUTDP1
                 	__PUTD1RNS 18,28
00b4c6 85a8      	LDD  R26,Y+8
00b4c7 85b9      	LDD  R27,Y+8+1
00b4c8 961e      	ADIW R26,14
00b4c9 940e d9f0 	CALL __GETW1P
                +
00b4cb 01d9     +MOVW R26 , R18
00b4cc 965a     +ADIW R26 , 26
00b4cd 93ed     +ST X + , R30
00b4ce 93fc     +ST X , R31
                 	__PUTW1RNS 18,26
00b4cf 85e8      	LDD  R30,Y+8
00b4d0 85f9      	LDD  R31,Y+8+1
                +
00b4d1 85a6     +LDD R26 , Z + 14
00b4d2 85b7     +LDD R27 , Z + 14 + 1
00b4d3 8980     +LDD R24 , Z + 14 + 2
00b4d4 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00b4d5 01fd      	MOVW R30,R26
00b4d6 01bc      	MOVW R22,R24
00b4d7 940e d909 	CALL __LSRD16
                +
00b4d9 01d9     +MOVW R26 , R18
00b4da 9654     +ADIW R26 , 20
00b4db 93ed     +ST X + , R30
00b4dc 93fc     +ST X , R31
                 	__PUTW1RNS 18,20
00b4dd 940e a65a 	CALL _get_fattime
00b4df 940e c05d 	CALL SUBOPT_0xB0
                +
00b4e1 01d9     +MOVW R26 , R18
00b4e2 9656     +ADIW R26 , 22
00b4e3 940e d9ff+CALL __PUTDP1
                 	__PUTD1RNS 18,22
00b4e5 85a8      	LDD  R26,Y+8
00b4e6 85b9      	LDD  R27,Y+8+1
00b4e7 9614      	ADIW R26,4
00b4e8 91ec      	LD   R30,X
00b4e9 7def      	ANDI R30,0xDF
00b4ea 93ec      	ST   X,R30
00b4eb 940e d427 	CALL SUBOPT_0x395
00b4ed 9634      	ADIW R30,4
00b4ee e0a1      	LDI  R26,LOW(1)
00b4ef 83a0      	STD  Z+0,R26
00b4f0 940e d427 	CALL SUBOPT_0x395
00b4f2 01df      	MOVW R26,R30
00b4f3 940e a7c7 	CALL _sync_G103
00b4f5 2f1e      	MOV  R17,R30
                 _0x2060187:
                 _0x2060184:
                 _0x2060183:
00b4f6 2fe1      	MOV  R30,R17
                 _0x20E000A:
00b4f7 940e daa2 	CALL __LOADLOCR4
00b4f9 962a      	ADIW R28,10
00b4fa 9508      	RET
                 _f_close:
00b4fb 93ba      	ST   -Y,R27
00b4fc 93aa      	ST   -Y,R26
00b4fd 931a      	ST   -Y,R17
00b4fe 81a9      	LDD  R26,Y+1
00b4ff 81ba      	LDD  R27,Y+1+1
00b500 df79      	RCALL _f_sync
00b501 2f1e      	MOV  R17,R30
00b502 3010      	CPI  R17,0
00b503 f421      	BRNE _0x2060188
00b504 81a9      	LDD  R26,Y+1
00b505 81ba      	LDD  R27,Y+1+1
00b506 940e c2b0 	CALL SUBOPT_0x115
                 _0x2060188:
00b508 2fe1      	MOV  R30,R17
00b509 c291      	RJMP _0x20E0005
                 _f_lseek:
00b50a 940e da2e 	CALL __PUTPARD2
00b50c 9760      	SBIW R28,16
00b50d 931a      	ST   -Y,R17
00b50e 940e d5bd 	CALL SUBOPT_0x3D2
00b510 89ef      	LDD  R30,Y+23
00b511 8df8      	LDD  R31,Y+23+1
00b512 940e d4ed 	CALL SUBOPT_0x3B4
00b514 f009      	BREQ _0x2060191
00b515 c18c      	RJMP _0x20E0009
                 _0x2060191:
00b516 89ed      	LDD  R30,Y+21
00b517 89fe      	LDD  R31,Y+21+1
00b518 81a4      	LDD  R26,Z+4
00b519 78a0      	ANDI R26,LOW(0x80)
00b51a f011      	BREQ _0x2060192
00b51b e0e2      	LDI  R30,LOW(2)
00b51c c186      	RJMP _0x20E0008
                 _0x2060192:
00b51d 940e d5c0 	CALL SUBOPT_0x3D3
00b51f 940e d5c6 	CALL SUBOPT_0x3D4
00b521 940e da8f 	CALL __CPD12
00b523 f428      	BRSH _0x2060194
00b524 89ed      	LDD  R30,Y+21
00b525 89fe      	LDD  R31,Y+21+1
00b526 81a4      	LDD  R26,Z+4
00b527 70a2      	ANDI R26,LOW(0x2)
00b528 f009      	BREQ _0x2060195
                 _0x2060194:
00b529 c004      	RJMP _0x2060193
                 _0x2060195:
00b52a 940e d5c0 	CALL SUBOPT_0x3D3
00b52c 940e d5cb 	CALL SUBOPT_0x3D5
                 _0x2060193:
00b52e 89ad      	LDD  R26,Y+21
00b52f 89be      	LDD  R27,Y+21+1
00b530 9616      	ADIW R26,6
00b531 940e d316 	CALL SUBOPT_0x371
00b533 940e d422 	CALL SUBOPT_0x394
00b535 940e d407 	CALL SUBOPT_0x38F
00b537 940e d5d0 	CALL SUBOPT_0x3D6
00b539 9615      	ADIW R26,5
00b53a efef      	LDI  R30,LOW(255)
00b53b 93ec      	ST   X,R30
00b53c 940e d5c6 	CALL SUBOPT_0x3D4
00b53e 940e da89 	CALL __CPD02
00b540 f010      	BRLO PC+3
00b541 940c b64e 	JMP _0x2060196
00b543 940e d5d8 	CALL SUBOPT_0x3D7
00b545 940e cb43 	CALL SUBOPT_0x271
00b547 940e d919 	CALL __CWD1
                +
00b549 e0a0     +LDI R26 , LOW ( 0x200 )
00b54a e0b2     +LDI R27 , HIGH ( 0x200 )
00b54b e080     +LDI R24 , BYTE3 ( 0x200 )
00b54c e090     +LDI R25 , BYTE4 ( 0x200 )
                 	__GETD2N 0x200
00b54d 940e d93a 	CALL __MULD12U
00b54f 940e d2b9 	CALL SUBOPT_0x361
00b551 940e cb46 	CALL SUBOPT_0x272
00b553 940e da89 	CALL __CPD02
00b555 f498      	BRSH _0x2060198
00b556 940e d5dd 	CALL SUBOPT_0x3D8
00b558 940e d5e2 	CALL SUBOPT_0x3D9
00b55a 937f      	PUSH R23
00b55b 936f      	PUSH R22
00b55c 93ff      	PUSH R31
00b55d 93ef      	PUSH R30
00b55e 940e d3f4 	CALL SUBOPT_0x38C
00b560 940e d5e2 	CALL SUBOPT_0x3D9
00b562 91af      	POP  R26
00b563 91bf      	POP  R27
00b564 918f      	POP  R24
00b565 919f      	POP  R25
00b566 940e da94 	CALL __CPD21
00b568 f408      	BRSH _0x2060199
                 _0x2060198:
00b569 c021      	RJMP _0x2060197
                 _0x2060199:
00b56a 940e d3f4 	CALL SUBOPT_0x38C
00b56c 940e c167 	CALL SUBOPT_0xDD
00b56e 01df      	MOVW R26,R30
00b56f 01cb      	MOVW R24,R22
00b570 940e be8c 	CALL SUBOPT_0x6B
00b572 940e c167 	CALL SUBOPT_0xDD
00b574 940e d91e 	CALL __COMD1
00b576 940e d8a8 	CALL __ANDD12
00b578 940e d5d0 	CALL SUBOPT_0x3D6
00b57a 9616      	ADIW R26,6
00b57b 940e d9f4 	CALL __GETD1P
00b57d 940e d5c6 	CALL SUBOPT_0x3D4
00b57f 940e d8a3 	CALL __SUBD21
                +
00b581 8ba9     +STD Y + 17 , R26
00b582 8bba     +STD Y + 17 + 1 , R27
00b583 8b8b     +STD Y + 17 + 2 , R24
00b584 8b9c     +STD Y + 17 + 3 , R25
                 	__PUTD2S 17
00b585 89ad      	LDD  R26,Y+21
00b586 89be      	LDD  R27,Y+21+1
00b587 9652      	ADIW R26,18
00b588 940e d5eb 	CALL SUBOPT_0x3DA
00b58a c02b      	RJMP _0x206019A
                 _0x2060197:
00b58b 89ad      	LDD  R26,Y+21
00b58c 89be      	LDD  R27,Y+21+1
00b58d 961e      	ADIW R26,14
00b58e 940e d5eb 	CALL SUBOPT_0x3DA
00b590 940e d5f2 	CALL SUBOPT_0x3DB
00b592 940e da7d 	CALL __CPD10
00b594 f4f9      	BRNE _0x206019B
00b595 940e d5bd 	CALL SUBOPT_0x3D2
00b597 940e bcda 	CALL SUBOPT_0x2C
00b599 940e d5f7 	CALL SUBOPT_0x3DC
00b59b 940e d5fe 	CALL SUBOPT_0x3DD
00b59d 940e d3f9 	CALL SUBOPT_0x38D
00b59f f421      	BRNE _0x206019C
00b5a0 940e d603 	CALL SUBOPT_0x3DE
00b5a2 e0e2      	LDI  R30,LOW(2)
00b5a3 c0ff      	RJMP _0x20E0008
                 _0x206019C:
00b5a4 940e d5fe 	CALL SUBOPT_0x3DD
00b5a6 940e bd3e 	CALL SUBOPT_0x3A
00b5a8 f421      	BRNE _0x206019D
00b5a9 940e d603 	CALL SUBOPT_0x3DE
00b5ab e0e1      	LDI  R30,LOW(1)
00b5ac c0f6      	RJMP _0x20E0008
                 _0x206019D:
00b5ad 940e d5f2 	CALL SUBOPT_0x3DB
                +
00b5af 89ad     +LDD R26 , Y + 21
00b5b0 89be     +LDD R27 , Y + 21 + 1
00b5b1 961e     +ADIW R26 , 14
00b5b2 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,14
                 _0x206019B:
00b5b4 940e d60a 	CALL SUBOPT_0x3DF
                 _0x206019A:
00b5b6 940e d5f2 	CALL SUBOPT_0x3DB
00b5b8 940e da7d 	CALL __CPD10
00b5ba f411      	BRNE PC+3
00b5bb 940c b64e 	JMP _0x206019E
                 _0x206019F:
00b5bd 940e be8c 	CALL SUBOPT_0x6B
00b5bf 940e d5c6 	CALL SUBOPT_0x3D4
00b5c1 940e da8f 	CALL __CPD12
00b5c3 f010      	BRLO PC+3
00b5c4 940c b615 	JMP _0x20601A1
00b5c6 89ed      	LDD  R30,Y+21
00b5c7 89fe      	LDD  R31,Y+21+1
00b5c8 81a4      	LDD  R26,Z+4
00b5c9 70a2      	ANDI R26,LOW(0x2)
00b5ca f089      	BREQ _0x20601A2
00b5cb 940e d5bd 	CALL SUBOPT_0x3D2
00b5cd 940e d611 	CALL SUBOPT_0x3E0
00b5cf 940e d5f7 	CALL SUBOPT_0x3DC
00b5d1 940e d5f2 	CALL SUBOPT_0x3DB
00b5d3 940e da7d 	CALL __CPD10
00b5d5 f429      	BRNE _0x20601A3
00b5d6 940e be8c 	CALL SUBOPT_0x6B
00b5d8 940e d5cb 	CALL SUBOPT_0x3D5
00b5da c03a      	RJMP _0x20601A1
                 _0x20601A3:
00b5db c00a      	RJMP _0x20601A4
                 _0x20601A2:
00b5dc 940e d5bd 	CALL SUBOPT_0x3D2
00b5de 940e d611 	CALL SUBOPT_0x3E0
00b5e0 940e a83b 	CALL _get_fat
                +
00b5e2 87ed     +STD Y + 13 , R30
00b5e3 87fe     +STD Y + 13 + 1 , R31
00b5e4 876f     +STD Y + 13 + 2 , R22
00b5e5 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
                 _0x20601A4:
00b5e6 940e d5fe 	CALL SUBOPT_0x3DD
00b5e8 940e bd3e 	CALL SUBOPT_0x3A
00b5ea f421      	BRNE _0x20601A5
00b5eb 940e d603 	CALL SUBOPT_0x3DE
00b5ed e0e1      	LDI  R30,LOW(1)
00b5ee c0b4      	RJMP _0x20E0008
                 _0x20601A5:
00b5ef 940e d5fe 	CALL SUBOPT_0x3DD
00b5f1 940e d361 	CALL SUBOPT_0x37A
00b5f3 f048      	BRLO _0x20601A7
00b5f4 940e d5d8 	CALL SUBOPT_0x3D7
00b5f6 940e d461 	CALL SUBOPT_0x39F
00b5f8 940e d5fe 	CALL SUBOPT_0x3DD
00b5fa 940e da94 	CALL __CPD21
00b5fc f020      	BRLO _0x20601A6
                 _0x20601A7:
00b5fd 940e d603 	CALL SUBOPT_0x3DE
00b5ff e0e2      	LDI  R30,LOW(2)
00b600 c0a2      	RJMP _0x20E0008
                 _0x20601A6:
00b601 940e d60a 	CALL SUBOPT_0x3DF
00b603 940e d616 	CALL SUBOPT_0x3E1
00b605 940e d2ea 	CALL SUBOPT_0x369
00b607 940e d894 	CALL __ADDD12
00b609 01d0      	MOVW R26,R0
00b60a 940e d9ff 	CALL __PUTDP1
00b60c 940e d2ea 	CALL SUBOPT_0x369
00b60e 940e d5dd 	CALL SUBOPT_0x3D8
00b610 940e d89e 	CALL __SUBD12
00b612 940e d5cb 	CALL SUBOPT_0x3D5
00b614 cfa8      	RJMP _0x206019F
                 _0x20601A1:
00b615 940e d616 	CALL SUBOPT_0x3E1
00b617 940e d5c6 	CALL SUBOPT_0x3D4
00b619 940e d894 	CALL __ADDD12
00b61b 01d0      	MOVW R26,R0
00b61c 940e d9ff 	CALL __PUTDP1
00b61e 940e d5c6 	CALL SUBOPT_0x3D4
                +
00b620 e0e0     +LDI R30 , LOW ( 0x200 )
00b621 e0f2     +LDI R31 , HIGH ( 0x200 )
00b622 e060     +LDI R22 , BYTE3 ( 0x200 )
00b623 e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00b624 940e d990 	CALL __DIVD21U
                +
00b626 89ad     +LDD R26 , Y + 21
00b627 89be     +LDD R27 , Y + 21 + 1
00b628 9615     +ADIW R26 , 5
00b629 93ec     +ST X , R30
                 	__PUTB1SNS 21,5
00b62a 940e d5dd 	CALL SUBOPT_0x3D8
00b62c 70f1      	ANDI R31,HIGH(0x1FF)
00b62d 9730      	SBIW R30,0
00b62e f0f9      	BREQ _0x20601A9
00b62f 940e d5bd 	CALL SUBOPT_0x3D2
00b631 940e d611 	CALL SUBOPT_0x3E0
00b633 940e aa65 	CALL _clust2sect
00b635 940e d407 	CALL SUBOPT_0x38F
00b637 940e d31d 	CALL SUBOPT_0x372
00b639 940e da7d 	CALL __CPD10
00b63b f421      	BRNE _0x20601AA
00b63c 940e d603 	CALL SUBOPT_0x3DE
00b63e e0e2      	LDI  R30,LOW(2)
00b63f c063      	RJMP _0x20E0008
                 _0x20601AA:
00b640 89ed      	LDD  R30,Y+21
00b641 89fe      	LDD  R31,Y+21+1
00b642 81e5      	LDD  R30,Z+5
00b643 e0f0      	LDI  R31,0
00b644 940e d3e6 	CALL SUBOPT_0x38A
00b646 940e c058 	CALL SUBOPT_0xAF
00b648 940e d407 	CALL SUBOPT_0x38F
00b64a 89ad      	LDD  R26,Y+21
00b64b 89be      	LDD  R27,Y+21+1
00b64c 940e d563 	CALL SUBOPT_0x3C4
                 _0x20601A9:
                 _0x206019E:
                 _0x2060196:
00b64e 940e d61e 	CALL SUBOPT_0x3E2
00b650 940e d4fb 	CALL SUBOPT_0x3B6
00b652 f051      	BREQ _0x20601AC
00b653 89ad      	LDD  R26,Y+21
00b654 89be      	LDD  R27,Y+21+1
00b655 9656      	ADIW R26,22
00b656 940e d9f4 	CALL __GETD1P
00b658 940e d3e6 	CALL SUBOPT_0x38A
00b65a 940e da8f 	CALL __CPD12
00b65c f409      	BRNE _0x20601AD
                 _0x20601AC:
00b65d c02b      	RJMP _0x20601AB
                 _0x20601AD:
00b65e 89ed      	LDD  R30,Y+21
00b65f 89fe      	LDD  R31,Y+21+1
00b660 81a4      	LDD  R26,Z+4
00b661 74a0      	ANDI R26,LOW(0x40)
00b662 f089      	BREQ _0x20601AE
00b663 940e d5d8 	CALL SUBOPT_0x3D7
00b665 81e1      	LDD  R30,Z+1
00b666 93ea      	ST   -Y,R30
00b667 940e d5b5 	CALL SUBOPT_0x3D1
00b669 940e d553 	CALL SUBOPT_0x3C2
00b66b f021      	BREQ _0x20601AF
00b66c 940e d603 	CALL SUBOPT_0x3DE
00b66e e0e1      	LDI  R30,LOW(1)
00b66f c033      	RJMP _0x20E0008
                 _0x20601AF:
00b670 89ad      	LDD  R26,Y+21
00b671 89be      	LDD  R27,Y+21+1
00b672 940e d55e 	CALL SUBOPT_0x3C3
                 _0x20601AE:
00b674 940e d5d8 	CALL SUBOPT_0x3D7
00b676 81e1      	LDD  R30,Z+1
00b677 93ea      	ST   -Y,R30
00b678 89ee      	LDD  R30,Y+22
00b679 89ff      	LDD  R31,Y+22+1
00b67a 96b0      	ADIW R30,32
00b67b 940e d337 	CALL SUBOPT_0x375
00b67d f021      	BREQ _0x20601B0
00b67e 940e d603 	CALL SUBOPT_0x3DE
00b680 e0e1      	LDI  R30,LOW(1)
00b681 c021      	RJMP _0x20E0008
                 _0x20601B0:
00b682 940e d31d 	CALL SUBOPT_0x372
                +
00b684 89ad     +LDD R26 , Y + 21
00b685 89be     +LDD R27 , Y + 21 + 1
00b686 9656     +ADIW R26 , 22
00b687 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,22
                 _0x20601AB:
00b689 940e d61e 	CALL SUBOPT_0x3E2
00b68b 010d      	MOVW R0,R26
00b68c 940e d5c0 	CALL SUBOPT_0x3D3
00b68e 01d0      	MOVW R26,R0
00b68f 940e da8f 	CALL __CPD12
00b691 f480      	BRSH _0x20601B1
00b692 89ad      	LDD  R26,Y+21
00b693 89be      	LDD  R27,Y+21+1
00b694 9616      	ADIW R26,6
00b695 940e d9f4 	CALL __GETD1P
                +
00b697 89ad     +LDD R26 , Y + 21
00b698 89be     +LDD R27 , Y + 21 + 1
00b699 961a     +ADIW R26 , 10
00b69a 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,10
00b69c 89ad      	LDD  R26,Y+21
00b69d 89be      	LDD  R27,Y+21+1
00b69e 9614      	ADIW R26,4
00b69f 91ec      	LD   R30,X
00b6a0 62e0      	ORI  R30,0x20
00b6a1 93ec      	ST   X,R30
                 _0x20601B1:
                 _0x20E0009:
00b6a2 2fe1      	MOV  R30,R17
                 _0x20E0008:
00b6a3 8118      	LDD  R17,Y+0
00b6a4 9667      	ADIW R28,23
00b6a5 9508      	RET
                 _f_getfree:
00b6a6 93ba      	ST   -Y,R27
00b6a7 93aa      	ST   -Y,R26
00b6a8 9760      	SBIW R28,16
00b6a9 940e da99 	CALL __SAVELOCR6
00b6ab 01fe      	MOVW R30,R28
00b6ac 967a      	ADIW R30,26
00b6ad 93fa      	ST   -Y,R31
00b6ae 93ea      	ST   -Y,R30
00b6af 940e cba3 	CALL SUBOPT_0x281
00b6b1 e0a0      	LDI  R26,LOW(0)
00b6b2 940e ae12 	CALL _chk_mounted
00b6b4 2f1e      	MOV  R17,R30
00b6b5 3010      	CPI  R17,0
00b6b6 f011      	BREQ _0x20601C3
00b6b7 2fe1      	MOV  R30,R17
00b6b8 c0c4      	RJMP _0x20E0006
                 _0x20601C3:
00b6b9 940e d58d 	CALL SUBOPT_0x3CB
00b6bb 010f      	MOVW R0,R30
00b6bc 963e      	ADIW R30,14
00b6bd 01df      	MOVW R26,R30
00b6be 940e d9f4 	CALL __GETD1P
00b6c0 937f      	PUSH R23
00b6c1 936f      	PUSH R22
00b6c2 93ff      	PUSH R31
00b6c3 93ef      	PUSH R30
00b6c4 01d0      	MOVW R26,R0
00b6c5 965e      	ADIW R26,30
00b6c6 940e d9f4 	CALL __GETD1P
                +
00b6c8 50e2     +SUBI R30 , LOW ( 2 )
00b6c9 40f0     +SBCI R31 , HIGH ( 2 )
00b6ca 4060     +SBCI R22 , BYTE3 ( 2 )
00b6cb 4070     +SBCI R23 , BYTE4 ( 2 )
                 	__SUBD1N 2
00b6cc 91af      	POP  R26
00b6cd 91bf      	POP  R27
00b6ce 918f      	POP  R24
00b6cf 919f      	POP  R25
00b6d0 940e da8f 	CALL __CPD12
00b6d2 f038      	BRLO _0x20601C4
00b6d3 940e d58d 	CALL SUBOPT_0x3CB
00b6d5 963e      	ADIW R30,14
00b6d6 01df      	MOVW R26,R30
00b6d7 940e d9f4 	CALL __GETD1P
00b6d9 c09e      	RJMP _0x20E0007
                 _0x20601C4:
00b6da 940e d58d 	CALL SUBOPT_0x3CB
00b6dc 8100      	LD   R16,Z
00b6dd e0e0      	LDI  R30,LOW(0)
                +
00b6de 8bea     +STD Y + 18 , R30
00b6df 8beb     +STD Y + 18 + 1 , R30
00b6e0 8bec     +STD Y + 18 + 2 , R30
00b6e1 8bed     +STD Y + 18 + 3 , R30
                 	__CLRD1S 18
00b6e2 3001      	CPI  R16,1
00b6e3 f5b9      	BRNE _0x20601C5
00b6e4 940e d416 	CALL SUBOPT_0x392
00b6e6 940e d4d0 	CALL SUBOPT_0x3AF
                 _0x20601C7:
00b6e8 940e d57d 	CALL SUBOPT_0x3C8
00b6ea 940e d3cf 	CALL SUBOPT_0x387
00b6ec 940e a83b 	CALL _get_fat
00b6ee 940e c086 	CALL SUBOPT_0xB8
00b6f0 940e be1e 	CALL SUBOPT_0x59
00b6f2 940e bd3e 	CALL SUBOPT_0x3A
00b6f4 f411      	BRNE _0x20601C9
00b6f5 e0e1      	LDI  R30,LOW(1)
00b6f6 c086      	RJMP _0x20E0006
                 _0x20601C9:
00b6f7 940e be1e 	CALL SUBOPT_0x59
00b6f9 940e d3f9 	CALL SUBOPT_0x38D
00b6fb f411      	BRNE _0x20601CA
00b6fc e0e2      	LDI  R30,LOW(2)
00b6fd c07f      	RJMP _0x20E0006
                 _0x20601CA:
00b6fe 940e c081 	CALL SUBOPT_0xB7
00b700 940e da7d 	CALL __CPD10
00b702 f411      	BRNE _0x20601CB
00b703 940e d625 	CALL SUBOPT_0x3E3
                 _0x20601CB:
00b705 940e be45 	CALL SUBOPT_0x60
00b707 940e c0a8 	CALL SUBOPT_0xBE
00b709 940e d4d0 	CALL SUBOPT_0x3AF
00b70b 937f      	PUSH R23
00b70c 936f      	PUSH R22
00b70d 93ff      	PUSH R31
00b70e 93ef      	PUSH R30
00b70f 940e d58d 	CALL SUBOPT_0x3CB
00b711 940e d461 	CALL SUBOPT_0x39F
00b713 91af      	POP  R26
00b714 91bf      	POP  R27
00b715 918f      	POP  R24
00b716 919f      	POP  R25
00b717 940e da94 	CALL __CPD21
00b719 f270      	BRLO _0x20601C7
00b71a c04d      	RJMP _0x20601CC
                 _0x20601C5:
00b71b 940e d58d 	CALL SUBOPT_0x3CB
00b71d 940e d461 	CALL SUBOPT_0x39F
00b71f 940e d4d0 	CALL SUBOPT_0x3AF
00b721 940e d58d 	CALL SUBOPT_0x3CB
00b723 96b2      	ADIW R30,34
00b724 01df      	MOVW R26,R30
00b725 940e d9f4 	CALL __GETD1P
00b727 940e d160 	CALL SUBOPT_0x329
00b729 940e bba6 	CALL SUBOPT_0x0
                 _0x20601CE:
00b72b 2e02      	MOV  R0,R18
00b72c 2a03      	OR   R0,R19
00b72d f4c1      	BRNE _0x20601D0
00b72e 940e d57d 	CALL SUBOPT_0x3C8
00b730 940e c162 	CALL SUBOPT_0xDC
00b732 940e c0a8 	CALL SUBOPT_0xBE
00b734 940e c1d3 	CALL SUBOPT_0xED
00b736 9731      	SBIW R30,1
00b737 4060      	SBCI R22,0
00b738 4070      	SBCI R23,0
00b739 01df      	MOVW R26,R30
00b73a 01cb      	MOVW R24,R22
00b73b 940e d4e5 	CALL SUBOPT_0x3B2
00b73d f011      	BREQ _0x20601D1
00b73e 2fe1      	MOV  R30,R17
00b73f c03d      	RJMP _0x20E0006
                 _0x20601D1:
00b740 940e d58d 	CALL SUBOPT_0x3CB
00b742 96f2      	ADIW R30,50
00b743 01af      	MOVW R20,R30
                +
00b744 e020     +LDI R18 , LOW ( 512 )
00b745 e032     +LDI R19 , HIGH ( 512 )
                 	__GETWRN 18,19,512
                 _0x20601D0:
00b746 3002      	CPI  R16,2
00b747 f461      	BRNE _0x20601D2
00b748 01da      	MOVW R26,R20
00b749 940e d9f0 	CALL __GETW1P
00b74b 9730      	SBIW R30,0
00b74c f411      	BRNE _0x20601D3
00b74d 940e d625 	CALL SUBOPT_0x3E3
                 _0x20601D3:
                +
00b74f 5f4e     +SUBI R20 , LOW ( - 2 )
00b750 4f5f     +SBCI R21 , HIGH ( - 2 )
                 	__ADDWRN 20,21,2
                +
00b751 5022     +SUBI R18 , LOW ( 2 )
00b752 4030     +SBCI R19 , HIGH ( 2 )
                 	__SUBWRN 18,19,2
00b753 c00c      	RJMP _0x20601D4
                 _0x20601D2:
00b754 01da      	MOVW R26,R20
00b755 940e d3a8 	CALL SUBOPT_0x383
00b757 940e da7d 	CALL __CPD10
00b759 f411      	BRNE _0x20601D5
00b75a 940e d625 	CALL SUBOPT_0x3E3
                 _0x20601D5:
                +
00b75c 5f4c     +SUBI R20 , LOW ( - 4 )
00b75d 4f5f     +SBCI R21 , HIGH ( - 4 )
                 	__ADDWRN 20,21,4
                +
00b75e 5024     +SUBI R18 , LOW ( 4 )
00b75f 4030     +SBCI R19 , HIGH ( 4 )
                 	__SUBWRN 18,19,4
                 _0x20601D4:
00b760 940e be45 	CALL SUBOPT_0x60
00b762 9731      	SBIW R30,1
00b763 4060      	SBCI R22,0
00b764 4070      	SBCI R23,0
00b765 940e d4d0 	CALL SUBOPT_0x3AF
00b767 f619      	BRNE _0x20601CE
                 _0x20601CC:
00b768 940e d58d 	CALL SUBOPT_0x3CB
00b76a 963e      	ADIW R30,14
00b76b 940e d411 	CALL SUBOPT_0x391
00b76d 940e c9dd 	CALL SUBOPT_0x23B
00b76f 3003      	CPI  R16,3
00b770 f429      	BRNE _0x20601D6
00b771 940e d58d 	CALL SUBOPT_0x3CB
00b773 9635      	ADIW R30,5
00b774 e0a1      	LDI  R26,LOW(1)
00b775 83a0      	STD  Z+0,R26
                 _0x20601D6:
00b776 940e c149 	CALL SUBOPT_0xD6
                 _0x20E0007:
00b778 8da8      	LDD  R26,Y+24
00b779 8db9      	LDD  R27,Y+24+1
00b77a 940e d9ff 	CALL __PUTDP1
00b77c e0e0      	LDI  R30,LOW(0)
                 _0x20E0006:
00b77d 940e daa0 	CALL __LOADLOCR6
00b77f 966c      	ADIW R28,28
00b780 9508      	RET
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
00b781 93aa      	ST   -Y,R26
                 _0x2080003:
00b782 91e0 00c0 	LDS  R30,192
00b784 72e0      	ANDI R30,LOW(0x20)
00b785 f3e1      	BREQ _0x2080003
00b786 81e8      	LD   R30,Y
00b787 93e0 00c6 	STS  198,R30
00b789 9621      	ADIW R28,1
00b78a 9508      	RET
                 _puts:
00b78b 93ba      	ST   -Y,R27
00b78c 93aa      	ST   -Y,R26
00b78d 931a      	ST   -Y,R17
                 _0x2080006:
00b78e 81a9      	LDD  R26,Y+1
00b78f 81ba      	LDD  R27,Y+1+1
00b790 91ed      	LD   R30,X+
00b791 83a9      	STD  Y+1,R26
00b792 83ba      	STD  Y+1+1,R27
00b793 2f1e      	MOV  R17,R30
00b794 30e0      	CPI  R30,0
00b795 f019      	BREQ _0x2080008
00b796 2fa1      	MOV  R26,R17
00b797 dfe9      	RCALL _putchar
00b798 cff5      	RJMP _0x2080006
                 _0x2080008:
00b799 e0aa      	LDI  R26,LOW(10)
00b79a dfe6      	RCALL _putchar
                 _0x20E0005:
00b79b 8118      	LDD  R17,Y+0
00b79c 9623      	ADIW R28,3
00b79d 9508      	RET
                 _put_buff_G104:
00b79e 940e bf27 	CALL SUBOPT_0x81
00b7a0 81aa      	LDD  R26,Y+2
00b7a1 81bb      	LDD  R27,Y+2+1
00b7a2 9612      	ADIW R26,2
00b7a3 940e d9f0 	CALL __GETW1P
00b7a5 9730      	SBIW R30,0
00b7a6 f129      	BREQ _0x208002A
00b7a7 81aa      	LDD  R26,Y+2
00b7a8 81bb      	LDD  R27,Y+2+1
00b7a9 9614      	ADIW R26,4
00b7aa 940e d9f0 	CALL __GETW1P
00b7ac 018f      	MOVW R16,R30
00b7ad 9730      	SBIW R30,0
00b7ae f061      	BREQ _0x208002C
                +
00b7af 3002     +CPI R16 , LOW ( 2 )
00b7b0 e0e0     +LDI R30 , HIGH ( 2 )
00b7b1 071e     +CPC R17 , R30
                 	__CPWRN 16,17,2
00b7b2 f0c0      	BRLO _0x208002D
00b7b3 01f8      	MOVW R30,R16
00b7b4 9731      	SBIW R30,1
00b7b5 018f      	MOVW R16,R30
                +
00b7b6 81aa     +LDD R26 , Y + 2
00b7b7 81bb     +LDD R27 , Y + 2 + 1
00b7b8 9614     +ADIW R26 , 4
00b7b9 93ed     +ST X + , R30
00b7ba 93fc     +ST X , R31
                 	__PUTW1SNS 2,4
                 _0x208002C:
00b7bb 81aa      	LDD  R26,Y+2
00b7bc 81bb      	LDD  R27,Y+2+1
00b7bd 9612      	ADIW R26,2
00b7be 940e bf0a 	CALL SUBOPT_0x7C
00b7c0 9731      	SBIW R30,1
00b7c1 81ac      	LDD  R26,Y+4
00b7c2 83a0      	STD  Z+0,R26
00b7c3 81aa      	LDD  R26,Y+2
00b7c4 81bb      	LDD  R27,Y+2+1
00b7c5 940e d9f0 	CALL __GETW1P
00b7c7 23ff      	TST  R31
00b7c8 f012      	BRMI _0x208002E
00b7c9 940e bf0a 	CALL SUBOPT_0x7C
                 _0x208002E:
                 _0x208002D:
00b7cb c006      	RJMP _0x208002F
                 _0x208002A:
00b7cc 81aa      	LDD  R26,Y+2
00b7cd 81bb      	LDD  R27,Y+2+1
00b7ce efef      	LDI  R30,LOW(65535)
00b7cf efff      	LDI  R31,HIGH(65535)
00b7d0 93ed      	ST   X+,R30
00b7d1 93fc      	ST   X,R31
                 _0x208002F:
00b7d2 8119      	LDD  R17,Y+1
00b7d3 8108      	LDD  R16,Y+0
00b7d4 9625      	ADIW R28,5
00b7d5 9508      	RET
                 __ftoe_G104:
00b7d6 940e d25d 	CALL SUBOPT_0x350
00b7d8 83e8      	ST   Y,R30
00b7d9 e0e0      	LDI  R30,LOW(0)
00b7da 83e9      	STD  Y+1,R30
00b7db e8e0      	LDI  R30,LOW(128)
00b7dc 83ea      	STD  Y+2,R30
00b7dd e3ef      	LDI  R30,LOW(63)
00b7de 83eb      	STD  Y+3,R30
00b7df 940e da9b 	CALL __SAVELOCR4
00b7e1 85ee      	LDD  R30,Y+14
00b7e2 85ff      	LDD  R31,Y+14+1
00b7e3 3fef      	CPI  R30,LOW(0xFFFF)
00b7e4 efaf      	LDI  R26,HIGH(0xFFFF)
00b7e5 07fa      	CPC  R31,R26
00b7e6 f459      	BRNE _0x2080037
00b7e7 940e c5b7 	CALL SUBOPT_0x194
                +
00b7e9 e8a0     +LDI R26 , LOW ( 2 * _0x2080000 + ( 0 ) )
00b7ea e6b7     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 0 ) )
00b7eb e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 0 ) )
00b7ec e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 0 ) )
                 	__POINTD2FN _0x2080000,0
00b7ed 940e a145 	CALL _strcpyf
00b7ef 940e daa2 	CALL __LOADLOCR4
00b7f1 c336      	RJMP _0x20E0003
                 _0x2080037:
00b7f2 3fef      	CPI  R30,LOW(0x7FFF)
00b7f3 e7af      	LDI  R26,HIGH(0x7FFF)
00b7f4 07fa      	CPC  R31,R26
00b7f5 f459      	BRNE _0x2080036
00b7f6 940e c5b7 	CALL SUBOPT_0x194
                +
00b7f8 e8a1     +LDI R26 , LOW ( 2 * _0x2080000 + ( 1 ) )
00b7f9 e6b7     +LDI R27 , HIGH ( 2 * _0x2080000 + ( 1 ) )
00b7fa e080     +LDI R24 , BYTE3 ( 2 * _0x2080000 + ( 1 ) )
00b7fb e090     +LDI R25 , BYTE4 ( 2 * _0x2080000 + ( 1 ) )
                 	__POINTD2FN _0x2080000,1
00b7fc 940e a145 	CALL _strcpyf
00b7fe 940e daa2 	CALL __LOADLOCR4
00b800 c327      	RJMP _0x20E0003
                 _0x2080036:
00b801 85ab      	LDD  R26,Y+11
00b802 30a7      	CPI  R26,LOW(0x7)
00b803 f010      	BRLO _0x2080039
00b804 e0e6      	LDI  R30,LOW(6)
00b805 87eb      	STD  Y+11,R30
                 _0x2080039:
00b806 851b      	LDD  R17,Y+11
                 _0x208003A:
00b807 2fe1      	MOV  R30,R17
00b808 5011      	SUBI R17,1
00b809 30e0      	CPI  R30,0
00b80a f029      	BREQ _0x208003C
00b80b 940e d62a 	CALL SUBOPT_0x3E4
00b80d 940e c03e 	CALL SUBOPT_0xAA
00b80f cff7      	RJMP _0x208003A
                 _0x208003C:
00b810 940e c162 	CALL SUBOPT_0xDC
00b812 940e da7d 	CALL __CPD10
00b814 f431      	BRNE _0x208003D
00b815 e030      	LDI  R19,LOW(0)
00b816 940e d62a 	CALL SUBOPT_0x3E4
00b818 940e c03e 	CALL SUBOPT_0xAA
00b81a c02c      	RJMP _0x208003E
                 _0x208003D:
00b81b 853b      	LDD  R19,Y+11
00b81c 940e d62d 	CALL SUBOPT_0x3E5
00b81e f009      	BREQ PC+2
00b81f f410      	BRCC PC+3
00b820 940c b82e 	JMP  _0x208003F
00b822 940e d62a 	CALL SUBOPT_0x3E4
00b824 940e c03e 	CALL SUBOPT_0xAA
                 _0x2080040:
00b826 940e d62d 	CALL SUBOPT_0x3E5
00b828 f020      	BRLO _0x2080042
00b829 940e d634 	CALL SUBOPT_0x3E6
00b82b 5f3f      	SUBI R19,-LOW(1)
00b82c cff9      	RJMP _0x2080040
                 _0x2080042:
00b82d c00d      	RJMP _0x2080043
                 _0x208003F:
                 _0x2080044:
00b82e 940e d62d 	CALL SUBOPT_0x3E5
00b830 f430      	BRSH _0x2080046
00b831 940e d2f5 	CALL SUBOPT_0x36B
00b833 940e c1d3 	CALL SUBOPT_0xED
00b835 5031      	SUBI R19,LOW(1)
00b836 cff7      	RJMP _0x2080044
                 _0x2080046:
00b837 940e d62a 	CALL SUBOPT_0x3E4
00b839 940e c03e 	CALL SUBOPT_0xAA
                 _0x2080043:
00b83b 940e c162 	CALL SUBOPT_0xDC
00b83d 940e d2da 	CALL SUBOPT_0x366
00b83f 940e c1d3 	CALL SUBOPT_0xED
00b841 940e d62d 	CALL SUBOPT_0x3E5
00b843 f018      	BRLO _0x2080047
00b844 940e d634 	CALL SUBOPT_0x3E6
00b846 5f3f      	SUBI R19,-LOW(1)
                 _0x2080047:
                 _0x208003E:
00b847 e010      	LDI  R17,LOW(0)
                 _0x2080048:
00b848 85eb      	LDD  R30,Y+11
00b849 17e1      	CP   R30,R17
00b84a f1a8      	BRLO _0x208004A
00b84b 940e c043 	CALL SUBOPT_0xAB
                +
00b84d eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00b84e ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00b84f ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00b850 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00b851 940e d7dd 	CALL __MULF12
00b853 940e d2da 	CALL SUBOPT_0x366
00b855 01df      	MOVW R26,R30
00b856 01cb      	MOVW R24,R22
00b857 940e bb8f 	CALL _floor
00b859 940e c05d 	CALL SUBOPT_0xB0
00b85b 940e bbfc 	CALL SUBOPT_0xB
00b85d 940e d82b 	CALL __DIVF21
00b85f 940e d71a 	CALL __CFD1U
00b861 2f0e      	MOV  R16,R30
00b862 940e d63b 	CALL SUBOPT_0x3E7
00b864 2fe0      	MOV  R30,R16
00b865 5de0      	SUBI R30,-LOW(48)
00b866 93ec      	ST   X,R30
00b867 2fe0      	MOV  R30,R16
00b868 27ff      	CLR  R31
00b869 2766      	CLR  R22
00b86a 2777      	CLR  R23
00b86b 940e d753 	CALL __CDF1
00b86d 940e c043 	CALL SUBOPT_0xAB
00b86f 940e d7dd 	CALL __MULF12
00b871 940e bbfc 	CALL SUBOPT_0xB
00b873 940e c92f 	CALL SUBOPT_0x220
00b875 940e c1d3 	CALL SUBOPT_0xED
00b877 2fe1      	MOV  R30,R17
00b878 5f1f      	SUBI R17,-1
00b879 30e0      	CPI  R30,0
00b87a f669      	BRNE _0x2080048
00b87b 940e d63b 	CALL SUBOPT_0x3E7
00b87d e2ee      	LDI  R30,LOW(46)
00b87e 93ec      	ST   X,R30
00b87f cfc8      	RJMP _0x2080048
                 _0x208004A:
00b880 940e bf20 	CALL SUBOPT_0x80
00b882 85aa      	LDD  R26,Y+10
00b883 83a0      	STD  Z+0,R26
00b884 3030      	CPI  R19,0
00b885 f42c      	BRGE _0x208004C
00b886 9531      	NEG  R19
00b887 85a8      	LDD  R26,Y+8
00b888 85b9      	LDD  R27,Y+8+1
00b889 e2ed      	LDI  R30,LOW(45)
00b88a c003      	RJMP _0x2080137
                 _0x208004C:
00b88b 85a8      	LDD  R26,Y+8
00b88c 85b9      	LDD  R27,Y+8+1
00b88d e2eb      	LDI  R30,LOW(43)
                 _0x2080137:
00b88e 93ec      	ST   X,R30
00b88f 85e8      	LDD  R30,Y+8
00b890 85f9      	LDD  R31,Y+8+1
00b891 9631      	ADIW R30,1
00b892 940e c5b4 	CALL SUBOPT_0x193
00b894 9631      	ADIW R30,1
00b895 87e8      	STD  Y+8,R30
00b896 87f9      	STD  Y+8+1,R31
00b897 9731      	SBIW R30,1
00b898 01bf      	MOVW R22,R30
00b899 2fa3      	MOV  R26,R19
00b89a e0ea      	LDI  R30,LOW(10)
00b89b 940e d973 	CALL __DIVB21
00b89d 5de0      	SUBI R30,-LOW(48)
00b89e 01db      	MOVW R26,R22
00b89f 93ec      	ST   X,R30
00b8a0 940e bf20 	CALL SUBOPT_0x80
00b8a2 01bf      	MOVW R22,R30
00b8a3 2fa3      	MOV  R26,R19
00b8a4 e0ea      	LDI  R30,LOW(10)
00b8a5 940e d9b5 	CALL __MODB21
00b8a7 5de0      	SUBI R30,-LOW(48)
00b8a8 01db      	MOVW R26,R22
00b8a9 93ec      	ST   X,R30
00b8aa 85a8      	LDD  R26,Y+8
00b8ab 85b9      	LDD  R27,Y+8+1
00b8ac e0e0      	LDI  R30,LOW(0)
00b8ad 93ec      	ST   X,R30
00b8ae 940e daa2 	CALL __LOADLOCR4
00b8b0 c277      	RJMP _0x20E0003
                 __print_G104:
00b8b1 93ba      	ST   -Y,R27
00b8b2 93aa      	ST   -Y,R26
00b8b3 97ef      	SBIW R28,63
00b8b4 9765      	SBIW R28,21
00b8b5 940e da99 	CALL __SAVELOCR6
00b8b7 e010      	LDI  R17,0
                +
00b8b8 01fe     +MOVW R30 , R28
00b8b9 5ae4     +SUBI R30 , LOW ( - 92 )
00b8ba 4fff     +SBCI R31 , HIGH ( - 92 )
00b8bb 9001     +LD R0 , Z +
00b8bc 9011     +LD R1 , Z +
00b8bd 9161     +LD R22 , Z +
00b8be 8170     +LD R23 , Z
00b8bf 01f0     +MOVW R30 , R0
                 	__GETD1SX 92
00b8c0 940e d1ed 	CALL SUBOPT_0x33E
                +
00b8c2 01fe     +MOVW R30 , R28
00b8c3 5ae6     +SUBI R30 , LOW ( - 90 )
00b8c4 4fff     +SBCI R31 , HIGH ( - 90 )
00b8c5 9001     +LD R0 , Z +
00b8c6 81f0     +LD R31 , Z
00b8c7 2de0     +MOV R30 , R0
                 	__GETW1SX 90
00b8c8 83ee      	STD  Y+6,R30
00b8c9 83ff      	STD  Y+6+1,R31
00b8ca 81ae      	LDD  R26,Y+6
00b8cb 81bf      	LDD  R27,Y+6+1
00b8cc 940e c2b0 	CALL SUBOPT_0x115
                 _0x208004E:
00b8ce 01de      	MOVW R26,R28
00b8cf 59ae      	SUBI R26,LOW(-(98))
00b8d0 4fbf      	SBCI R27,HIGH(-(98))
00b8d1 940e d30e 	CALL SUBOPT_0x370
                +
00b8d3 bf6b     +OUT RAMPZ , R22
00b8d4 91e6     +ELPM R30 , Z
                 	__GETBRPF 30
00b8d5 2f2e      	MOV  R18,R30
00b8d6 30e0      	CPI  R30,0
00b8d7 f411      	BRNE PC+3
00b8d8 940c bac5 	JMP _0x2080050
00b8da 2fe1      	MOV  R30,R17
00b8db 30e0      	CPI  R30,0
00b8dc f439      	BRNE _0x2080054
00b8dd 3225      	CPI  R18,37
00b8de f411      	BRNE _0x2080055
00b8df e011      	LDI  R17,LOW(1)
00b8e0 c002      	RJMP _0x2080056
                 _0x2080055:
00b8e1 940e d642 	CALL SUBOPT_0x3E8
                 _0x2080056:
00b8e3 c1e0      	RJMP _0x2080053
                 _0x2080054:
00b8e4 30e1      	CPI  R30,LOW(0x1)
00b8e5 f4c1      	BRNE _0x2080057
00b8e6 3225      	CPI  R18,37
00b8e7 f419      	BRNE _0x2080058
00b8e8 940e d642 	CALL SUBOPT_0x3E8
00b8ea c1d8      	RJMP _0x2080138
                 _0x2080058:
00b8eb e012      	LDI  R17,LOW(2)
00b8ec e0e0      	LDI  R30,LOW(0)
00b8ed 8fe9      	STD  Y+25,R30
00b8ee e000      	LDI  R16,LOW(0)
00b8ef 322d      	CPI  R18,45
00b8f0 f411      	BRNE _0x2080059
00b8f1 e001      	LDI  R16,LOW(1)
00b8f2 c1d1      	RJMP _0x2080053
                 _0x2080059:
00b8f3 322b      	CPI  R18,43
00b8f4 f419      	BRNE _0x208005A
00b8f5 e2eb      	LDI  R30,LOW(43)
00b8f6 8fe9      	STD  Y+25,R30
00b8f7 c1cc      	RJMP _0x2080053
                 _0x208005A:
00b8f8 3220      	CPI  R18,32
00b8f9 f419      	BRNE _0x208005B
00b8fa e2e0      	LDI  R30,LOW(32)
00b8fb 8fe9      	STD  Y+25,R30
00b8fc c1c7      	RJMP _0x2080053
                 _0x208005B:
00b8fd c002      	RJMP _0x208005C
                 _0x2080057:
00b8fe 30e2      	CPI  R30,LOW(0x2)
00b8ff f439      	BRNE _0x208005D
                 _0x208005C:
00b900 e050      	LDI  R21,LOW(0)
00b901 e013      	LDI  R17,LOW(3)
00b902 3320      	CPI  R18,48
00b903 f411      	BRNE _0x208005E
00b904 6800      	ORI  R16,LOW(128)
00b905 c1be      	RJMP _0x2080053
                 _0x208005E:
00b906 c002      	RJMP _0x208005F
                 _0x208005D:
00b907 30e3      	CPI  R30,LOW(0x3)
00b908 f491      	BRNE _0x2080060
                 _0x208005F:
00b909 3320      	CPI  R18,48
00b90a f010      	BRLO _0x2080062
00b90b 332a      	CPI  R18,58
00b90c f008      	BRLO _0x2080063
                 _0x2080062:
00b90d c007      	RJMP _0x2080061
                 _0x2080063:
00b90e e0aa      	LDI  R26,LOW(10)
00b90f 9f5a      	MUL  R21,R26
00b910 2d50      	MOV  R21,R0
00b911 2fe2      	MOV  R30,R18
00b912 53e0      	SUBI R30,LOW(48)
00b913 0f5e      	ADD  R21,R30
00b914 c1af      	RJMP _0x2080053
                 _0x2080061:
00b915 e040      	LDI  R20,LOW(0)
00b916 322e      	CPI  R18,46
00b917 f411      	BRNE _0x2080064
00b918 e014      	LDI  R17,LOW(4)
00b919 c1aa      	RJMP _0x2080053
                 _0x2080064:
00b91a c00f      	RJMP _0x2080065
                 _0x2080060:
00b91b 30e4      	CPI  R30,LOW(0x4)
00b91c f499      	BRNE _0x2080067
00b91d 3320      	CPI  R18,48
00b91e f010      	BRLO _0x2080069
00b91f 332a      	CPI  R18,58
00b920 f008      	BRLO _0x208006A
                 _0x2080069:
00b921 c008      	RJMP _0x2080068
                 _0x208006A:
00b922 6200      	ORI  R16,LOW(32)
00b923 e0aa      	LDI  R26,LOW(10)
00b924 9f4a      	MUL  R20,R26
00b925 2d40      	MOV  R20,R0
00b926 2fe2      	MOV  R30,R18
00b927 53e0      	SUBI R30,LOW(48)
00b928 0f4e      	ADD  R20,R30
00b929 c19a      	RJMP _0x2080053
                 _0x2080068:
                 _0x2080065:
00b92a 362c      	CPI  R18,108
00b92b f419      	BRNE _0x208006B
00b92c 6002      	ORI  R16,LOW(2)
00b92d e015      	LDI  R17,LOW(5)
00b92e c195      	RJMP _0x2080053
                 _0x208006B:
00b92f c004      	RJMP _0x208006C
                 _0x2080067:
00b930 30e5      	CPI  R30,LOW(0x5)
00b931 f011      	BREQ PC+3
00b932 940c bac4 	JMP _0x2080053
                 _0x208006C:
00b934 2fe2      	MOV  R30,R18
00b935 36e3      	CPI  R30,LOW(0x63)
00b936 f459      	BRNE _0x2080071
00b937 940e d64a 	CALL SUBOPT_0x3E9
00b939 940e d651 	CALL SUBOPT_0x3EA
00b93b 940e d64a 	CALL SUBOPT_0x3E9
00b93d 81a4      	LDD  R26,Z+4
00b93e 93aa      	ST   -Y,R26
00b93f 940e d658 	CALL SUBOPT_0x3EB
00b941 c181      	RJMP _0x2080072
                 _0x2080071:
00b942 34e5      	CPI  R30,LOW(0x45)
00b943 f011      	BREQ _0x2080075
00b944 36e5      	CPI  R30,LOW(0x65)
00b945 f409      	BRNE _0x2080076
                 _0x2080075:
00b946 c004      	RJMP _0x2080077
                 _0x2080076:
00b947 36e6      	CPI  R30,LOW(0x66)
00b948 f011      	BREQ PC+3
00b949 940c b98a 	JMP _0x2080078
                 _0x2080077:
00b94b 01fe      	MOVW R30,R28
00b94c 967a      	ADIW R30,26
00b94d 8be8      	STD  Y+16,R30
00b94e 8bf9      	STD  Y+16+1,R31
00b94f 940e d65f 	CALL SUBOPT_0x3EC
00b951 940e d9f4 	CALL __GETD1P
00b953 940e c1d3 	CALL SUBOPT_0xED
00b955 940e d666 	CALL SUBOPT_0x3ED
00b957 85af      	LDD  R26,Y+15
00b958 23aa      	TST  R26
00b959 f022      	BRMI _0x2080079
00b95a 8da9      	LDD  R26,Y+25
00b95b 32ab      	CPI  R26,LOW(0x2B)
00b95c f049      	BREQ _0x208007B
00b95d c014      	RJMP _0x208007C
                 _0x2080079:
00b95e 940e c162 	CALL SUBOPT_0xDC
00b960 940e d6e7 	CALL __ANEGF1
00b962 940e c1d3 	CALL SUBOPT_0xED
00b964 e2ed      	LDI  R30,LOW(45)
00b965 8fe9      	STD  Y+25,R30
                 _0x208007B:
00b966 ff07      	SBRS R16,7
00b967 c005      	RJMP _0x208007D
00b968 8de9      	LDD  R30,Y+25
00b969 93ea      	ST   -Y,R30
00b96a 940e d658 	CALL SUBOPT_0x3EB
00b96c c005      	RJMP _0x208007E
                 _0x208007D:
00b96d 940e d2ef 	CALL SUBOPT_0x36A
00b96f 9731      	SBIW R30,1
00b970 8da9      	LDD  R26,Y+25
00b971 83a0      	STD  Z+0,R26
                 _0x208007E:
                 _0x208007C:
00b972 ff05      	SBRS R16,5
00b973 e046      	LDI  R20,LOW(6)
00b974 3626      	CPI  R18,102
00b975 f441      	BRNE _0x2080080
00b976 940e c4ac 	CALL SUBOPT_0x16B
00b978 934a      	ST   -Y,R20
00b979 89ad      	LDD  R26,Y+21
00b97a 89be      	LDD  R27,Y+21+1
00b97b 940e 9e3e 	CALL _ftoa
00b97d c007      	RJMP _0x2080081
                 _0x2080080:
00b97e 940e c4ac 	CALL SUBOPT_0x16B
00b980 934a      	ST   -Y,R20
00b981 932a      	ST   -Y,R18
00b982 89ae      	LDD  R26,Y+22
00b983 89bf      	LDD  R27,Y+22+1
00b984 de51      	RCALL __ftoe_G104
                 _0x2080081:
00b985 01fe      	MOVW R30,R28
00b986 967a      	ADIW R30,26
00b987 940e d668 	CALL SUBOPT_0x3EE
00b989 c024      	RJMP _0x2080082
                 _0x2080078:
00b98a 37e3      	CPI  R30,LOW(0x73)
00b98b f451      	BRNE _0x2080084
00b98c 940e d666 	CALL SUBOPT_0x3ED
00b98e 940e d65f 	CALL SUBOPT_0x3EC
00b990 9614      	ADIW R26,4
00b991 940e d9f0 	CALL __GETW1P
00b993 940e d668 	CALL SUBOPT_0x3EE
00b995 c011      	RJMP _0x2080085
                 _0x2080084:
00b996 37e0      	CPI  R30,LOW(0x70)
00b997 f4d9      	BRNE _0x2080087
00b998 940e d666 	CALL SUBOPT_0x3ED
00b99a 940e d65f 	CALL SUBOPT_0x3EC
00b99c 9614      	ADIW R26,4
00b99d 940e d9f4 	CALL __GETD1P
00b99f 940e d1f2 	CALL SUBOPT_0x33F
00b9a1 940e d3cf 	CALL SUBOPT_0x387
00b9a3 940e a177 	CALL _strlenf
00b9a5 2f1e      	MOV  R17,R30
00b9a6 6008      	ORI  R16,LOW(8)
                 _0x2080085:
00b9a7 770f      	ANDI R16,LOW(127)
00b9a8 3040      	CPI  R20,0
00b9a9 f011      	BREQ _0x2080089
00b9aa 1741      	CP   R20,R17
00b9ab f008      	BRLO _0x208008A
                 _0x2080089:
00b9ac c001      	RJMP _0x2080088
                 _0x208008A:
00b9ad 2f14      	MOV  R17,R20
                 _0x2080088:
                 _0x2080082:
00b9ae e040      	LDI  R20,LOW(0)
00b9af e0e0      	LDI  R30,LOW(0)
00b9b0 8fe8      	STD  Y+24,R30
00b9b1 e030      	LDI  R19,LOW(0)
00b9b2 c072      	RJMP _0x208008B
                 _0x2080087:
00b9b3 36e4      	CPI  R30,LOW(0x64)
00b9b4 f011      	BREQ _0x208008E
00b9b5 36e9      	CPI  R30,LOW(0x69)
00b9b6 f411      	BRNE _0x208008F
                 _0x208008E:
00b9b7 6004      	ORI  R16,LOW(4)
00b9b8 c002      	RJMP _0x2080090
                 _0x208008F:
00b9b9 37e5      	CPI  R30,LOW(0x75)
00b9ba f4a1      	BRNE _0x2080091
                 _0x2080090:
00b9bb e0ea      	LDI  R30,LOW(10)
00b9bc 8fe8      	STD  Y+24,R30
00b9bd ff01      	SBRS R16,1
00b9be c008      	RJMP _0x2080092
                +
00b9bf e0e0     +LDI R30 , LOW ( 0x3B9ACA00 )
00b9c0 ecfa     +LDI R31 , HIGH ( 0x3B9ACA00 )
00b9c1 e96a     +LDI R22 , BYTE3 ( 0x3B9ACA00 )
00b9c2 e37b     +LDI R23 , BYTE4 ( 0x3B9ACA00 )
                 	__GETD1N 0x3B9ACA00
00b9c3 940e d1f7 	CALL SUBOPT_0x340
00b9c5 e01a      	LDI  R17,LOW(10)
00b9c6 c023      	RJMP _0x2080093
                 _0x2080092:
                +
00b9c7 e1e0     +LDI R30 , LOW ( 0x2710 )
00b9c8 e2f7     +LDI R31 , HIGH ( 0x2710 )
00b9c9 e060     +LDI R22 , BYTE3 ( 0x2710 )
00b9ca e070     +LDI R23 , BYTE4 ( 0x2710 )
                 	__GETD1N 0x2710
00b9cb 940e d1f7 	CALL SUBOPT_0x340
00b9cd e015      	LDI  R17,LOW(5)
00b9ce c01b      	RJMP _0x2080093
                 _0x2080091:
00b9cf 35e8      	CPI  R30,LOW(0x58)
00b9d0 f411      	BRNE _0x2080095
00b9d1 6008      	ORI  R16,LOW(8)
00b9d2 c004      	RJMP _0x2080096
                 _0x2080095:
00b9d3 37e8      	CPI  R30,LOW(0x78)
00b9d4 f011      	BREQ PC+3
00b9d5 940c bac3 	JMP _0x20800D4
                 _0x2080096:
00b9d7 e1e0      	LDI  R30,LOW(16)
00b9d8 8fe8      	STD  Y+24,R30
00b9d9 ff01      	SBRS R16,1
00b9da c008      	RJMP _0x2080098
                +
00b9db e0e0     +LDI R30 , LOW ( 0x10000000 )
00b9dc e0f0     +LDI R31 , HIGH ( 0x10000000 )
00b9dd e060     +LDI R22 , BYTE3 ( 0x10000000 )
00b9de e170     +LDI R23 , BYTE4 ( 0x10000000 )
                 	__GETD1N 0x10000000
00b9df 940e d1f7 	CALL SUBOPT_0x340
00b9e1 e018      	LDI  R17,LOW(8)
00b9e2 c007      	RJMP _0x2080093
                 _0x2080098:
                +
00b9e3 e0e0     +LDI R30 , LOW ( 0x1000 )
00b9e4 e1f0     +LDI R31 , HIGH ( 0x1000 )
00b9e5 e060     +LDI R22 , BYTE3 ( 0x1000 )
00b9e6 e070     +LDI R23 , BYTE4 ( 0x1000 )
                 	__GETD1N 0x1000
00b9e7 940e d1f7 	CALL SUBOPT_0x340
00b9e9 e014      	LDI  R17,LOW(4)
                 _0x2080093:
00b9ea 3040      	CPI  R20,0
00b9eb f011      	BREQ _0x2080099
00b9ec 770f      	ANDI R16,LOW(127)
00b9ed c001      	RJMP _0x208009A
                 _0x2080099:
00b9ee e041      	LDI  R20,LOW(1)
                 _0x208009A:
00b9ef ff01      	SBRS R16,1
00b9f0 c008      	RJMP _0x208009B
00b9f1 940e d666 	CALL SUBOPT_0x3ED
00b9f3 940e d65f 	CALL SUBOPT_0x3EC
00b9f5 9614      	ADIW R26,4
00b9f6 940e d9f4 	CALL __GETD1P
00b9f8 c013      	RJMP _0x2080139
                 _0x208009B:
00b9f9 ff02      	SBRS R16,2
00b9fa c00a      	RJMP _0x208009D
00b9fb 940e d666 	CALL SUBOPT_0x3ED
00b9fd 940e d65f 	CALL SUBOPT_0x3EC
00b9ff 9614      	ADIW R26,4
00ba00 940e d9f0 	CALL __GETW1P
00ba02 940e d919 	CALL __CWD1
00ba04 c007      	RJMP _0x2080139
                 _0x208009D:
00ba05 940e d666 	CALL SUBOPT_0x3ED
00ba07 940e d65f 	CALL SUBOPT_0x3EC
00ba09 9614      	ADIW R26,4
00ba0a 940e bc7b 	CALL SUBOPT_0x1D
                 _0x2080139:
                +
00ba0c 87ec     +STD Y + 12 , R30
00ba0d 87fd     +STD Y + 12 + 1 , R31
00ba0e 876e     +STD Y + 12 + 2 , R22
00ba0f 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00ba10 ff02      	SBRS R16,2
00ba11 c012      	RJMP _0x208009F
00ba12 85af      	LDD  R26,Y+15
00ba13 23aa      	TST  R26
00ba14 f442      	BRPL _0x20800A0
00ba15 940e c162 	CALL SUBOPT_0xDC
00ba17 940e d8b6 	CALL __ANEGD1
00ba19 940e c1d3 	CALL SUBOPT_0xED
00ba1b e2ed      	LDI  R30,LOW(45)
00ba1c 8fe9      	STD  Y+25,R30
                 _0x20800A0:
00ba1d 8de9      	LDD  R30,Y+25
00ba1e 30e0      	CPI  R30,0
00ba1f f019      	BREQ _0x20800A1
00ba20 5f1f      	SUBI R17,-LOW(1)
00ba21 5f4f      	SUBI R20,-LOW(1)
00ba22 c001      	RJMP _0x20800A2
                 _0x20800A1:
00ba23 7f0b      	ANDI R16,LOW(251)
                 _0x20800A2:
                 _0x208009F:
00ba24 2f34      	MOV  R19,R20
                 _0x208008B:
00ba25 fd00      	SBRC R16,0
00ba26 c014      	RJMP _0x20800A3
                 _0x20800A4:
00ba27 1715      	CP   R17,R21
00ba28 f410      	BRSH _0x20800A7
00ba29 1735      	CP   R19,R21
00ba2a f008      	BRLO _0x20800A8
                 _0x20800A7:
00ba2b c00f      	RJMP _0x20800A6
                 _0x20800A8:
00ba2c ff07      	SBRS R16,7
00ba2d c008      	RJMP _0x20800A9
00ba2e ff02      	SBRS R16,2
00ba2f c004      	RJMP _0x20800AA
00ba30 7f0b      	ANDI R16,LOW(251)
00ba31 8d29      	LDD  R18,Y+25
00ba32 5011      	SUBI R17,LOW(1)
00ba33 c001      	RJMP _0x20800AB
                 _0x20800AA:
00ba34 e320      	LDI  R18,LOW(48)
                 _0x20800AB:
00ba35 c001      	RJMP _0x20800AC
                 _0x20800A9:
00ba36 e220      	LDI  R18,LOW(32)
                 _0x20800AC:
00ba37 940e d642 	CALL SUBOPT_0x3E8
00ba39 5051      	SUBI R21,LOW(1)
00ba3a cfec      	RJMP _0x20800A4
                 _0x20800A6:
                 _0x20800A3:
                 _0x20800AD:
00ba3b 1714      	CP   R17,R20
00ba3c f490      	BRSH _0x20800AF
00ba3d 6100      	ORI  R16,LOW(16)
00ba3e ff02      	SBRS R16,2
00ba3f c006      	RJMP _0x20800B0
00ba40 940e d670 	CALL SUBOPT_0x3EF
00ba42 f009      	BREQ _0x20800B1
00ba43 5051      	SUBI R21,LOW(1)
                 _0x20800B1:
00ba44 5011      	SUBI R17,LOW(1)
00ba45 5041      	SUBI R20,LOW(1)
                 _0x20800B0:
00ba46 e3e0      	LDI  R30,LOW(48)
00ba47 93ea      	ST   -Y,R30
00ba48 940e d658 	CALL SUBOPT_0x3EB
00ba4a 3050      	CPI  R21,0
00ba4b f009      	BREQ _0x20800B2
00ba4c 5051      	SUBI R21,LOW(1)
                 _0x20800B2:
00ba4d 5041      	SUBI R20,LOW(1)
00ba4e cfec      	RJMP _0x20800AD
                 _0x20800AF:
00ba4f 2f31      	MOV  R19,R17
00ba50 8de8      	LDD  R30,Y+24
00ba51 30e0      	CPI  R30,0
00ba52 f4c1      	BRNE _0x20800B3
                 _0x20800B4:
00ba53 3030      	CPI  R19,0
00ba54 f0a9      	BREQ _0x20800B6
00ba55 ff03      	SBRS R16,3
00ba56 c007      	RJMP _0x20800B7
00ba57 01de      	MOVW R26,R28
00ba58 9650      	ADIW R26,16
00ba59 940e d30e 	CALL SUBOPT_0x370
                +
00ba5b bf6b     +OUT RAMPZ , R22
00ba5c 9126     +ELPM R18 , Z
                 	__GETBRPF 18
00ba5d c005      	RJMP _0x20800B8
                 _0x20800B7:
00ba5e 89a8      	LDD  R26,Y+16
00ba5f 89b9      	LDD  R27,Y+16+1
00ba60 912d      	LD   R18,X+
00ba61 8ba8      	STD  Y+16,R26
00ba62 8bb9      	STD  Y+16+1,R27
                 _0x20800B8:
00ba63 940e d642 	CALL SUBOPT_0x3E8
00ba65 3050      	CPI  R21,0
00ba66 f009      	BREQ _0x20800B9
00ba67 5051      	SUBI R21,LOW(1)
                 _0x20800B9:
00ba68 5031      	SUBI R19,LOW(1)
00ba69 cfe9      	RJMP _0x20800B4
                 _0x20800B6:
00ba6a c04e      	RJMP _0x20800BA
                 _0x20800B3:
                 _0x20800BC:
00ba6b 940e c174 	CALL SUBOPT_0xDF
00ba6d 940e bbfc 	CALL SUBOPT_0xB
00ba6f 940e d990 	CALL __DIVD21U
00ba71 2f2e      	MOV  R18,R30
00ba72 302a      	CPI  R18,10
00ba73 f030      	BRLO _0x20800BE
00ba74 ff03      	SBRS R16,3
00ba75 c002      	RJMP _0x20800BF
00ba76 5c29      	SUBI R18,-LOW(55)
00ba77 c001      	RJMP _0x20800C0
                 _0x20800BF:
00ba78 5a29      	SUBI R18,-LOW(87)
                 _0x20800C0:
00ba79 c001      	RJMP _0x20800C1
                 _0x20800BE:
00ba7a 5d20      	SUBI R18,-LOW(48)
                 _0x20800C1:
00ba7b fd04      	SBRC R16,4
00ba7c c01c      	RJMP _0x20800C3
00ba7d 3321      	CPI  R18,49
00ba7e f438      	BRSH _0x20800C5
                +
00ba7f 89ac     +LDD R26 , Y + 20
00ba80 89bd     +LDD R27 , Y + 20 + 1
00ba81 898e     +LDD R24 , Y + 20 + 2
00ba82 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00ba83 940e d3f9 	CALL SUBOPT_0x38D
00ba85 f409      	BRNE _0x20800C4
                 _0x20800C5:
00ba86 c00b      	RJMP _0x20800C7
                 _0x20800C4:
00ba87 1743      	CP   R20,R19
00ba88 f440      	BRSH _0x208013A
00ba89 1753      	CP   R21,R19
00ba8a f010      	BRLO _0x20800CA
00ba8b ff00      	SBRS R16,0
00ba8c c001      	RJMP _0x20800CB
                 _0x20800CA:
00ba8d c010      	RJMP _0x20800C9
                 _0x20800CB:
00ba8e e220      	LDI  R18,LOW(32)
00ba8f ff07      	SBRS R16,7
00ba90 c008      	RJMP _0x20800CC
                 _0x208013A:
00ba91 e320      	LDI  R18,LOW(48)
                 _0x20800C7:
00ba92 6100      	ORI  R16,LOW(16)
00ba93 ff02      	SBRS R16,2
00ba94 c004      	RJMP _0x20800CD
00ba95 940e d670 	CALL SUBOPT_0x3EF
00ba97 f009      	BREQ _0x20800CE
00ba98 5051      	SUBI R21,LOW(1)
                 _0x20800CE:
                 _0x20800CD:
                 _0x20800CC:
                 _0x20800C3:
00ba99 940e d642 	CALL SUBOPT_0x3E8
00ba9b 3050      	CPI  R21,0
00ba9c f009      	BREQ _0x20800CF
00ba9d 5051      	SUBI R21,LOW(1)
                 _0x20800CF:
                 _0x20800C9:
00ba9e 5031      	SUBI R19,LOW(1)
00ba9f 940e c174 	CALL SUBOPT_0xDF
00baa1 940e bbfc 	CALL SUBOPT_0xB
00baa3 940e d9d2 	CALL __MODD21U
00baa5 940e c1d3 	CALL SUBOPT_0xED
00baa7 8de8      	LDD  R30,Y+24
                +
00baa8 89ac     +LDD R26 , Y + 20
00baa9 89bd     +LDD R27 , Y + 20 + 1
00baaa 898e     +LDD R24 , Y + 20 + 2
00baab 899f     +LDD R25 , Y + 20 + 3
                 	__GETD2S 20
00baac 27ff      	CLR  R31
00baad 2766      	CLR  R22
00baae 2777      	CLR  R23
00baaf 940e d990 	CALL __DIVD21U
00bab1 940e d1f7 	CALL SUBOPT_0x340
00bab3 940e c174 	CALL SUBOPT_0xDF
00bab5 940e da7d 	CALL __CPD10
00bab7 f009      	BREQ _0x20800BD
00bab8 cfb2      	RJMP _0x20800BC
                 _0x20800BD:
                 _0x20800BA:
00bab9 ff00      	SBRS R16,0
00baba c008      	RJMP _0x20800D0
                 _0x20800D1:
00babb 3050      	CPI  R21,0
00babc f031      	BREQ _0x20800D3
00babd 5051      	SUBI R21,LOW(1)
00babe e2e0      	LDI  R30,LOW(32)
00babf 93ea      	ST   -Y,R30
00bac0 940e d658 	CALL SUBOPT_0x3EB
00bac2 cff8      	RJMP _0x20800D1
                 _0x20800D3:
                 _0x20800D0:
                 _0x20800D4:
                 _0x2080072:
                 _0x2080138:
00bac3 e010      	LDI  R17,LOW(0)
                 _0x2080053:
00bac4 ce09      	RJMP _0x208004E
                 _0x2080050:
00bac5 81ae      	LDD  R26,Y+6
00bac6 81bf      	LDD  R27,Y+6+1
00bac7 940e d9f0 	CALL __GETW1P
00bac9 940e daa0 	CALL __LOADLOCR6
00bacb 96ef      	ADIW R28,63
00bacc 96a7      	ADIW R28,39
00bacd 9508      	RET
                 _sprintf:
00bace 92ff      	PUSH R15
00bacf 2ef8      	MOV  R15,R24
00bad0 9726      	SBIW R28,6
00bad1 940e da9b 	CALL __SAVELOCR4
00bad3 01de      	MOVW R26,R28
00bad4 961e      	ADIW R26,14
00bad5 940e d890 	CALL __ADDW2R15
00bad7 940e d9f0 	CALL __GETW1P
00bad9 9730      	SBIW R30,0
00bada f419      	BRNE _0x20800D5
00badb efef      	LDI  R30,LOW(65535)
00badc efff      	LDI  R31,HIGH(65535)
00badd c021      	RJMP _0x20E0004
                 _0x20800D5:
00bade 01de      	MOVW R26,R28
00badf 9616      	ADIW R26,6
00bae0 940e d890 	CALL __ADDW2R15
00bae2 018d      	MOVW R16,R26
00bae3 01de      	MOVW R26,R28
00bae4 961e      	ADIW R26,14
00bae5 940e d890 	CALL __ADDW2R15
00bae7 940e d305 	CALL SUBOPT_0x36E
00bae9 e0e0      	LDI  R30,LOW(0)
00baea 87e8      	STD  Y+8,R30
00baeb 87e9      	STD  Y+8+1,R30
00baec 01de      	MOVW R26,R28
00baed 961a      	ADIW R26,10
00baee 940e d890 	CALL __ADDW2R15
00baf0 940e d2b4 	CALL SUBOPT_0x360
00baf2 931a      	ST   -Y,R17
00baf3 930a      	ST   -Y,R16
00baf4 940e d685 	CALL SUBOPT_0x3F0
00baf6 01de      	MOVW R26,R28
00baf7 961e      	ADIW R26,14
00baf8 ddb8      	RCALL __print_G104
00baf9 019f      	MOVW R18,R30
00bafa 81ae      	LDD  R26,Y+6
00bafb 81bf      	LDD  R27,Y+6+1
00bafc e0e0      	LDI  R30,LOW(0)
00bafd 93ec      	ST   X,R30
00bafe 01f9      	MOVW R30,R18
                 _0x20E0004:
00baff 940e daa2 	CALL __LOADLOCR4
00bb01 962a      	ADIW R28,10
00bb02 90ff      	POP  R15
00bb03 9508      	RET
                 _vsprintf:
00bb04 93ba      	ST   -Y,R27
00bb05 93aa      	ST   -Y,R26
00bb06 9726      	SBIW R28,6
00bb07 931a      	ST   -Y,R17
00bb08 930a      	ST   -Y,R16
00bb09 85ee      	LDD  R30,Y+14
00bb0a 85ff      	LDD  R31,Y+14+1
00bb0b 9730      	SBIW R30,0
00bb0c f419      	BRNE _0x20800D8
00bb0d efef      	LDI  R30,LOW(65535)
00bb0e efff      	LDI  R31,HIGH(65535)
00bb0f c016      	RJMP _0x20E0002
                 _0x20800D8:
00bb10 85ee      	LDD  R30,Y+14
00bb11 85ff      	LDD  R31,Y+14+1
00bb12 83ec      	STD  Y+4,R30
00bb13 83fd      	STD  Y+4+1,R31
00bb14 e0e0      	LDI  R30,LOW(0)
00bb15 83ee      	STD  Y+6,R30
00bb16 83ef      	STD  Y+6+1,R30
00bb17 940e d165 	CALL SUBOPT_0x32A
00bb19 940e c64d 	CALL SUBOPT_0x1AF
00bb1b 940e d685 	CALL SUBOPT_0x3F0
00bb1d 01de      	MOVW R26,R28
00bb1e 961c      	ADIW R26,12
00bb1f dd91      	RCALL __print_G104
00bb20 018f      	MOVW R16,R30
00bb21 81ac      	LDD  R26,Y+4
00bb22 81bd      	LDD  R27,Y+4+1
00bb23 e0e0      	LDI  R30,LOW(0)
00bb24 93ec      	ST   X,R30
00bb25 01f8      	MOVW R30,R16
                 _0x20E0002:
00bb26 8119      	LDD  R17,Y+1
00bb27 8108      	LDD  R16,Y+0
                 _0x20E0003:
00bb28 9660      	ADIW R28,16
00bb29 9508      	RET
                 
                 	.CSEG
                 _isdigit:
00bb2a 93aa      	ST   -Y,R26
00bb2b e0e1          ldi  r30,1
00bb2c 91f9          ld   r31,y+
00bb2d 33f0          cpi  r31,'0'
00bb2e f010          brlo isdigit0
00bb2f 33fa          cpi  r31,'9'+1
00bb30 f008          brlo isdigit1
                 isdigit0:
00bb31 27ee          clr  r30
                 isdigit1:
00bb32 9508          ret
                 _isprint:
00bb33 93aa      	ST   -Y,R26
00bb34 e0e1          ldi  r30,1
00bb35 91f9          ld   r31,y+
00bb36 32f0          cpi  r31,32
00bb37 f010          brlo isprint0
00bb38 38f0          cpi  r31,128
00bb39 f008          brlo isprint1
                 isprint0:
00bb3a 27ee          clr  r30
                 isprint1:
00bb3b 9508          ret
                 _isspace:
00bb3c 93aa      	ST   -Y,R26
00bb3d e0e1          ldi  r30,1
00bb3e 91f9          ld   r31,y+
00bb3f 32f0          cpi  r31,' '
00bb40 f029          breq isspace1
00bb41 30f9          cpi  r31,9
00bb42 f010          brlo isspace0
00bb43 30fe          cpi  r31,13+1
00bb44 f008          brlo isspace1
                 isspace0:
00bb45 27ee          clr  r30
                 isspace1:
00bb46 9508          ret
                 _isxdigit:
00bb47 93aa      	ST   -Y,R26
00bb48 e0e1          ldi  r30,1
00bb49 91f9          ld   r31,y+
00bb4a 53f0          subi r31,0x30
00bb4b f040          brcs isxdigit0
00bb4c 30fa          cpi  r31,10
00bb4d f038          brcs isxdigit1
00bb4e 75ff          andi r31,0x5f
00bb4f 50f7          subi r31,7
00bb50 30fa          cpi  r31,10
00bb51 f010          brcs isxdigit0
00bb52 31f0          cpi  r31,16
00bb53 f008          brcs isxdigit1
                 isxdigit0:
00bb54 27ee          clr  r30
                 isxdigit1:
00bb55 9508          ret
                 _tolower:
00bb56 93aa      	ST   -Y,R26
00bb57 91e9          ld   r30,y+
00bb58 34e1          cpi  r30,'A'
00bb59 f018          brlo tolower1
00bb5a 35eb          cpi  r30,'Z'+1
00bb5b f408          brcc tolower1
00bb5c 5ee0          subi r30,-32
                 tolower1:
00bb5d 9508          ret
                 
                 	.CSEG
                 _ftrunc:
00bb5e 940e da2e 	CALL __PUTPARD2
00bb60 817b         ldd  r23,y+3
00bb61 816a         ldd  r22,y+2
00bb62 81f9         ldd  r31,y+1
00bb63 81e8         ld   r30,y
00bb64 fb77         bst  r23,7
00bb65 0f77         lsl  r23
00bb66 fd67         sbrc r22,7
00bb67 6071         sbr  r23,1
00bb68 2f97         mov  r25,r23
00bb69 579e         subi r25,0x7e
00bb6a f081         breq __ftrunc0
00bb6b f078         brcs __ftrunc0
00bb6c 3198         cpi  r25,24
00bb6d f490         brsh __ftrunc1
00bb6e 27aa         clr  r26
00bb6f 27bb         clr  r27
00bb70 2788         clr  r24
                 __ftrunc2:
00bb71 9408         sec
00bb72 9587         ror  r24
00bb73 95b7         ror  r27
00bb74 95a7         ror  r26
00bb75 959a         dec  r25
00bb76 f7d1         brne __ftrunc2
00bb77 23ea         and  r30,r26
00bb78 23fb         and  r31,r27
00bb79 2368         and  r22,r24
00bb7a c005         rjmp __ftrunc1
                 __ftrunc0:
00bb7b 94e8         clt
00bb7c 2777         clr  r23
00bb7d 27ee         clr  r30
00bb7e 27ff         clr  r31
00bb7f 2766         clr  r22
                 __ftrunc1:
00bb80 776f         cbr  r22,0x80
00bb81 9576         lsr  r23
00bb82 f408         brcc __ftrunc3
00bb83 6860         sbr  r22,0x80
                 __ftrunc3:
00bb84 f977         bld  r23,7
00bb85 91a9         ld   r26,y+
00bb86 91b9         ld   r27,y+
00bb87 9189         ld   r24,y+
00bb88 9199         ld   r25,y+
00bb89 17ea         cp   r30,r26
00bb8a 07fb         cpc  r31,r27
00bb8b 0768         cpc  r22,r24
00bb8c 0779         cpc  r23,r25
00bb8d fb97         bst  r25,7
00bb8e 9508         ret
                 _floor:
00bb8f 940e da2e 	CALL __PUTPARD2
00bb91 940e bf6c 	CALL SUBOPT_0x8C
00bb93 940e bb5e 	CALL _ftrunc
00bb95 940e c158 	CALL SUBOPT_0xD9
00bb97 f419          brne __floor1
                 __floor0:
00bb98 940e bf4d 	CALL SUBOPT_0x87
00bb9a c009      	RJMP _0x20E0001
                 __floor1:
00bb9b f7e6          brtc __floor0
00bb9c 940e bf4d 	CALL SUBOPT_0x87
                +
00bb9e e0a0     +LDI R26 , LOW ( 0x3F800000 )
00bb9f e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00bba0 e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00bba1 e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00bba2 940e d786 	CALL __SUBF12
                 _0x20E0001:
00bba4 9624      	ADIW R28,4
00bba5 9508      	RET
                 
                 	.DSEG
                 _flag_PackageTerminate3:
000d6e           	.BYTE 0x1
                 _rxPackage3:
000d6f           	.BYTE 0x40
                 _rx_buffer0:
000daf           	.BYTE 0x1F4
                 _rx_wr_index0:
000fa3           	.BYTE 0x2
                 _rx_rd_index0:
000fa5           	.BYTE 0x2
                 _rx_counter0:
000fa7           	.BYTE 0x2
                 _configRd:
000fa9           	.BYTE 0x145
                 _configLen:
0010ee           	.BYTE 0x2
                 _config_start:
0010f0           	.BYTE 0x1
                 _config_ready:
0010f1           	.BYTE 0x1
                 _config_end:
0010f2           	.BYTE 0x1
                 _config_response:
0010f3           	.BYTE 0x1
                 _hwCalId:
0010f4           	.BYTE 0x2
                 
                 	.ESEG
                 _config_prop:
000000 45
000001 6e
000002 64
000003 50        	.DB  0x45,0x6E,0x64,0x50
000004 6f
000005 69
000006 6e
000007 74        	.DB  0x6F,0x69,0x6E,0x74
000008 00
000009 00
00000a 00
00000b 00        	.DB  0x0,0x0,0x0,0x0
00000c 00
00000d 00
00000e 00
00000f 00        	.DB  0x0,0x0,0x0,0x0
000010 00
000011 00
000012 00
000013 00        	.DB  0x0,0x0,0x0,0x0
000014 43
000015 4f
000016 4d
000017 4d        	.DB  0x43,0x4F,0x4D,0x4D
000018 2d
000019 45
00001a 54
00001b 48        	.DB  0x2D,0x45,0x54,0x48
00001c 2d
00001d 30
00001e 2e
00001f 30        	.DB  0x2D,0x30,0x2E,0x30
000020 31
000021 61
000022 00
000023 00        	.DB  0x31,0x61,0x0,0x0
000024 00
000025 00
000026 00
000027 00        	.DB  0x0,0x0,0x0,0x0
000028 54
000029 65
00002a 73
00002b 74        	.DB  0x54,0x65,0x73,0x74
00002c 45
00002d 6e
00002e 64
00002f 50        	.DB  0x45,0x6E,0x64,0x50
000030 6f
000031 69
000032 6e
000033 74        	.DB  0x6F,0x69,0x6E,0x74
000034 30
000035 31
000036 00
000037 00        	.DB  0x30,0x31,0x0,0x0
000038 00
000039 00
00003a 00
00003b 00        	.DB  0x0,0x0,0x0,0x0
00003c 00
00003d 00
00003e 00
00003f 00        	.DB  0x0,0x0,0x0,0x0
000040 00
000041 00
000042 00
000043 00        	.DB  0x0,0x0,0x0,0x0
000044 00
000045 00
000046 00
000047 00        	.DB  0x0,0x0,0x0,0x0
000048 00
000049 00
00004a 00
00004b 00        	.DB  0x0,0x0,0x0,0x0
00004c 00
00004d 00
00004e 00
00004f 00        	.DB  0x0,0x0,0x0,0x0
000050 30
000051 30
000052 30
000053 30        	.DB  0x30,0x30,0x30,0x30
000054 30
000055 30
000056 30
000057 30        	.DB  0x30,0x30,0x30,0x30
000058 30
000059 30
00005a 31
00005b 00        	.DB  0x30,0x30,0x31,0x0
00005c 00
00005d 00
00005e 00
00005f 00        	.DB  0x0,0x0,0x0,0x0
000060 00
000061 00
000062 00
000063 00        	.DB  0x0,0x0,0x0,0x0
000064 69
000065 4e
000066 54
000067 45        	.DB  0x69,0x4E,0x54,0x45
000068 4c
000069 45
00006a 4e
00006b 49        	.DB  0x4C,0x45,0x4E,0x49
00006c 43
00006d 73
00006e 20
00006f 43        	.DB  0x43,0x73,0x20,0x43
000070 6f
000071 6d
000072 70
000073 61        	.DB  0x6F,0x6D,0x70,0x61
000074 6e
000075 79
000076 00
000077 00        	.DB  0x6E,0x79,0x0,0x0
000078 00
000079 00
00007a 00
00007b 00        	.DB  0x0,0x0,0x0,0x0
00007c 00
00007d 00
00007e 00
00007f 00        	.DB  0x0,0x0,0x0,0x0
000080 00
000081 00
000082 00
000083 00        	.DB  0x0,0x0,0x0,0x0
000084 00
000085 00
000086 00
000087 00        	.DB  0x0,0x0,0x0,0x0
000088 00
000089 00
00008a 00
00008b 00        	.DB  0x0,0x0,0x0,0x0
00008c 53
00008d 54
00008e 52
00008f 49        	.DB  0x53,0x54,0x52,0x49
000090 2d
000091 37
000092 30
000093 33        	.DB  0x2D,0x37,0x30,0x33
000094 00
000095 00
000096 00
000097 00        	.DB  0x0,0x0,0x0,0x0
000098 00
000099 00
00009a 00
00009b 00        	.DB  0x0,0x0,0x0,0x0
00009c 00
00009d 00
00009e 00
00009f 00        	.DB  0x0,0x0,0x0,0x0
0000a0 07        	.DB  0x7
                 _config_oper:
0000a1 20
0000a2 00
0000a3 00
0000a4 00        	.DB  0x20,0x0,0x0,0x0
0000a5 00
0000a6 00
0000a7 00
0000a8 00        	.DB  0x0,0x0,0x0,0x0
                 _config_sens:
0000a9 2c
0000aa 01
0000ab 00
0000ac 80        	.DB  0x2C,0x1,0x0,0x80
0000ad 00
0000ae 00
0000af 00
0000b0 00        	.DB  0x0,0x0,0x0,0x0
0000b1 00
0000b2 00
0000b3 00
0000b4 00        	.DB  0x0,0x0,0x0,0x0
0000b5 00
0000b6 0a
0000b7 00
0000b8 00        	.DB  0x0,0xA,0x0,0x0
0000b9 00
0000ba 00
0000bb 00
0000bc 00        	.DB  0x0,0x0,0x0,0x0
0000bd 00
0000be 00
0000bf 00
0000c0 0a        	.DB  0x0,0x0,0x0,0xA
0000c1 00
0000c2 00
0000c3 00
0000c4 00        	.DB  0x0,0x0,0x0,0x0
0000c5 00
0000c6 2c
0000c7 01
0000c8 00        	.DB  0x0,0x2C,0x1,0x0
0000c9 80
0000ca 00
0000cb 00
0000cc 00        	.DB  0x80,0x0,0x0,0x0
0000cd 00
0000ce 00
0000cf 00
0000d0 00        	.DB  0x0,0x0,0x0,0x0
0000d1 00
0000d2 00
0000d3 0a
0000d4 00        	.DB  0x0,0x0,0xA,0x0
0000d5 00
0000d6 00
0000d7 00
0000d8 00        	.DB  0x0,0x0,0x0,0x0
0000d9 00
0000da 00
0000db 00
0000dc 00        	.DB  0x0,0x0,0x0,0x0
0000dd 0a
0000de 00
0000df 00
0000e0 00        	.DB  0xA,0x0,0x0,0x0
0000e1 00
0000e2 00
0000e3 2c
0000e4 01        	.DB  0x0,0x0,0x2C,0x1
0000e5 00
0000e6 80
0000e7 00
0000e8 00        	.DB  0x0,0x80,0x0,0x0
0000e9 00
0000ea 00
0000eb 00
0000ec 00        	.DB  0x0,0x0,0x0,0x0
0000ed 00
0000ee 00
0000ef 00
0000f0 0a        	.DB  0x0,0x0,0x0,0xA
0000f1 00
0000f2 00
0000f3 00
0000f4 00        	.DB  0x0,0x0,0x0,0x0
0000f5 00
0000f6 00
0000f7 00
0000f8 00        	.DB  0x0,0x0,0x0,0x0
0000f9 00
0000fa 0a
0000fb 00
0000fc 00        	.DB  0x0,0xA,0x0,0x0
0000fd 00
0000fe 00
0000ff 00
000100 2c        	.DB  0x0,0x0,0x0,0x2C
000101 01
000102 00
000103 80
000104 00        	.DB  0x1,0x0,0x80,0x0
000105 00
000106 00
000107 00
000108 00        	.DB  0x0,0x0,0x0,0x0
000109 00
00010a 00
00010b 00
00010c 00        	.DB  0x0,0x0,0x0,0x0
00010d 0a
00010e 00
00010f 00
000110 00        	.DB  0xA,0x0,0x0,0x0
000111 00
000112 00
000113 00
000114 00        	.DB  0x0,0x0,0x0,0x0
000115 00
000116 00
000117 0a
000118 00        	.DB  0x0,0x0,0xA,0x0
000119 00
00011a 00
00011b 00
00011c 00        	.DB  0x0,0x0,0x0,0x0
00011d 2c
00011e 01
00011f 00
000120 80        	.DB  0x2C,0x1,0x0,0x80
000121 00
000122 00
000123 00
000124 00        	.DB  0x0,0x0,0x0,0x0
000125 00
000126 00
000127 00
000128 00        	.DB  0x0,0x0,0x0,0x0
000129 00
00012a 0a
00012b 00
00012c 00        	.DB  0x0,0xA,0x0,0x0
00012d 00
00012e 00
00012f 00
000130 00        	.DB  0x0,0x0,0x0,0x0
000131 00
000132 00
000133 00
000134 0a        	.DB  0x0,0x0,0x0,0xA
000135 00
000136 00
000137 00
000138 00        	.DB  0x0,0x0,0x0,0x0
000139 00        	.DB  0x0
                 _config_din:
00013a 00
00013b 0f
00013c 00
00013d 00        	.DB  0x0,0xF,0x0,0x0
00013e 0f
00013f 00
000140 00
000141 0f        	.DB  0xF,0x0,0x0,0xF
000142 00
000143 00
000144 0f
000145 00        	.DB  0x0,0x0,0xF,0x0
000146 00
000147 0f
000148 00
000149 00        	.DB  0x0,0xF,0x0,0x0
00014a 0f
00014b 00
00014c 00
00014d 0f        	.DB  0xF,0x0,0x0,0xF
00014e 00
00014f 00
000150 0f
000151 00        	.DB  0x0,0x0,0xF,0x0
000152 00
000153 0f
000154 00
000155 00        	.DB  0x0,0xF,0x0,0x0
000156 0f
000157 00
000158 00
000159 0f        	.DB  0xF,0x0,0x0,0xF
00015a 00
00015b 00
00015c 0f
00015d 00        	.DB  0x0,0x0,0xF,0x0
00015e 00
00015f 0f
000160 00
000161 00        	.DB  0x0,0xF,0x0,0x0
000162 0f
000163 00
000164 00
000165 0f        	.DB  0xF,0x0,0x0,0xF
000166 00
000167 00
000168 0f
000169 00        	.DB  0x0,0x0,0xF,0x0
                 _config_dout:
00016a 00
00016b 01
00016c 00
00016d 00        	.DB  0x0,0x1,0x0,0x0
00016e 00
00016f 00
000170 00
000171 00        	.DB  0x0,0x0,0x0,0x0
000172 00
000173 00
000174 00
000175 00        	.DB  0x0,0x0,0x0,0x0
000176 00
000177 00
000178 00
000179 00        	.DB  0x0,0x0,0x0,0x0
00017a 00
00017b 00
00017c 00
00017d 00        	.DB  0x0,0x0,0x0,0x0
00017e 00
00017f 00
000180 00
000181 00        	.DB  0x0,0x0,0x0,0x0
000182 00
000183 00
000184 00
000185 00        	.DB  0x0,0x0,0x0,0x0
000186 00
000187 00
000188 00
000189 00        	.DB  0x0,0x0,0x0,0x0
00018a 00
00018b 00
00018c 00
00018d 00        	.DB  0x0,0x0,0x0,0x0
00018e 00
00018f 00
000190 00
000191 01        	.DB  0x0,0x0,0x0,0x1
000192 00
000193 00
000194 00
000195 00        	.DB  0x0,0x0,0x0,0x0
000196 00
000197 00
000198 00
000199 00        	.DB  0x0,0x0,0x0,0x0
00019a 00
00019b 00
00019c 00
00019d 00        	.DB  0x0,0x0,0x0,0x0
00019e 00
00019f 00
0001a0 00
0001a1 00        	.DB  0x0,0x0,0x0,0x0
0001a2 00
0001a3 00
0001a4 00
0001a5 00        	.DB  0x0,0x0,0x0,0x0
0001a6 00
0001a7 00
0001a8 00
0001a9 00        	.DB  0x0,0x0,0x0,0x0
0001aa 00
0001ab 00
0001ac 00
0001ad 00        	.DB  0x0,0x0,0x0,0x0
0001ae 00
0001af 00
0001b0 00
0001b1 00        	.DB  0x0,0x0,0x0,0x0
0001b2 00
0001b3 00
0001b4 00
0001b5 00        	.DB  0x0,0x0,0x0,0x0
0001b6 00
0001b7 01
0001b8 00
0001b9 00        	.DB  0x0,0x1,0x0,0x0
0001ba 00
0001bb 00
0001bc 00
0001bd 00        	.DB  0x0,0x0,0x0,0x0
0001be 00
0001bf 00
0001c0 00
0001c1 00        	.DB  0x0,0x0,0x0,0x0
0001c2 00
0001c3 00
0001c4 00
0001c5 00        	.DB  0x0,0x0,0x0,0x0
0001c6 00
0001c7 00
0001c8 00
0001c9 00        	.DB  0x0,0x0,0x0,0x0
0001ca 00
0001cb 00
0001cc 00
0001cd 00        	.DB  0x0,0x0,0x0,0x0
0001ce 00
0001cf 00
0001d0 00
0001d1 00        	.DB  0x0,0x0,0x0,0x0
0001d2 00
0001d3 00
0001d4 00
0001d5 00        	.DB  0x0,0x0,0x0,0x0
0001d6 00
0001d7 00
0001d8 00
0001d9 00        	.DB  0x0,0x0,0x0,0x0
0001da 00
0001db 00
0001dc 00
0001dd 01        	.DB  0x0,0x0,0x0,0x1
0001de 00
0001df 00
0001e0 00
0001e1 00        	.DB  0x0,0x0,0x0,0x0
0001e2 00
0001e3 00
0001e4 00
0001e5 00        	.DB  0x0,0x0,0x0,0x0
0001e6 00
0001e7 00
0001e8 00
0001e9 00        	.DB  0x0,0x0,0x0,0x0
0001ea 00
0001eb 00
0001ec 00
0001ed 00        	.DB  0x0,0x0,0x0,0x0
0001ee 00
0001ef 00
0001f0 00
0001f1 00        	.DB  0x0,0x0,0x0,0x0
0001f2 00
0001f3 00
0001f4 00
0001f5 00        	.DB  0x0,0x0,0x0,0x0
0001f6 00
0001f7 00
0001f8 00
0001f9 00        	.DB  0x0,0x0,0x0,0x0
0001fa 00
0001fb 00
0001fc 00
0001fd 00        	.DB  0x0,0x0,0x0,0x0
0001fe 00
0001ff 00
000200 00
000201 00        	.DB  0x0,0x0,0x0,0x0
000202 00
000203 01
000204 00
000205 00        	.DB  0x0,0x1,0x0,0x0
000206 00
000207 00
000208 00
000209 00        	.DB  0x0,0x0,0x0,0x0
00020a 00
00020b 00
00020c 00
00020d 00        	.DB  0x0,0x0,0x0,0x0
00020e 00
00020f 00
000210 00
000211 00        	.DB  0x0,0x0,0x0,0x0
000212 00
000213 00
000214 00
000215 00        	.DB  0x0,0x0,0x0,0x0
000216 00
000217 00
000218 00
000219 00        	.DB  0x0,0x0,0x0,0x0
00021a 00
00021b 00
00021c 00
00021d 00        	.DB  0x0,0x0,0x0,0x0
00021e 00
00021f 00
000220 00
000221 00        	.DB  0x0,0x0,0x0,0x0
000222 00
000223 00
000224 00
000225 00        	.DB  0x0,0x0,0x0,0x0
000226 00
000227 00        	.DB  0x0,0x0
                 _config_ain:
000228 00
000229 00
00022a 00
00022b c0        	.DB  0x0,0x0,0x0,0xC0
00022c 3f
00022d 00
00022e 00
00022f 00        	.DB  0x3F,0x0,0x0,0x0
000230 c0
000231 3f
000232 00
000233 00        	.DB  0xC0,0x3F,0x0,0x0
000234 00
000235 c0
000236 3f
000237 00        	.DB  0x0,0xC0,0x3F,0x0
000238 00
000239 00
00023a c0
00023b 3f        	.DB  0x0,0x0,0xC0,0x3F
00023c 00
00023d 00
00023e 00
00023f c0        	.DB  0x0,0x0,0x0,0xC0
000240 3f
000241 00
000242 00
000243 00        	.DB  0x3F,0x0,0x0,0x0
000244 c0
000245 3f
000246 00
000247 00        	.DB  0xC0,0x3F,0x0,0x0
000248 00
000249 c0
00024a 3f
00024b 00        	.DB  0x0,0xC0,0x3F,0x0
00024c 00
00024d 00
00024e c0
00024f 3f        	.DB  0x0,0x0,0xC0,0x3F
000250 00
000251 00
000252 00
000253 c0        	.DB  0x0,0x0,0x0,0xC0
000254 3f
000255 00
000256 00
000257 00        	.DB  0x3F,0x0,0x0,0x0
000258 c0
000259 3f
00025a 00
00025b 00        	.DB  0xC0,0x3F,0x0,0x0
00025c 00
00025d c0
00025e 3f
00025f 00        	.DB  0x0,0xC0,0x3F,0x0
000260 00
000261 00
000262 c0
000263 3f        	.DB  0x0,0x0,0xC0,0x3F
000264 00
000265 00
000266 00
000267 c0        	.DB  0x0,0x0,0x0,0xC0
000268 3f
000269 00
00026a 00
00026b 00        	.DB  0x3F,0x0,0x0,0x0
00026c c0
00026d 3f
00026e 00
00026f 00        	.DB  0xC0,0x3F,0x0,0x0
000270 00
000271 c0
000272 3f
000273 00        	.DB  0x0,0xC0,0x3F,0x0
000274 00
000275 00
000276 c0
000277 3f        	.DB  0x0,0x0,0xC0,0x3F
                 _config_aout:
000278 00
000279 00
00027a 00
00027b 00        	.DB  0x0,0x0,0x0,0x0
00027c 00
00027d 00
00027e 00
00027f 00        	.DB  0x0,0x0,0x0,0x0
000280 00
000281 00
000282 00
000283 00        	.DB  0x0,0x0,0x0,0x0
000284 00
000285 00
000286 00
000287 00        	.DB  0x0,0x0,0x0,0x0
000288 00
000289 00
00028a 00
00028b 00        	.DB  0x0,0x0,0x0,0x0
00028c 00
00028d 00
00028e 00
00028f 00        	.DB  0x0,0x0,0x0,0x0
000290 00
000291 00
000292 00
000293 00        	.DB  0x0,0x0,0x0,0x0
000294 00
000295 00
000296 00
000297 00        	.DB  0x0,0x0,0x0,0x0
000298 00
000299 00
00029a 00
00029b 00        	.DB  0x0,0x0,0x0,0x0
00029c 00
00029d 00
00029e 00
00029f 00        	.DB  0x0,0x0,0x0,0x0
0002a0 00
0002a1 00
0002a2 00
0002a3 00        	.DB  0x0,0x0,0x0,0x0
0002a4 00
0002a5 00
0002a6 00
0002a7 00        	.DB  0x0,0x0,0x0,0x0
0002a8 00
0002a9 00
0002aa 00
0002ab 00        	.DB  0x0,0x0,0x0,0x0
0002ac 00
0002ad 00
0002ae 00
0002af 00        	.DB  0x0,0x0,0x0,0x0
0002b0 00
0002b1 00
0002b2 00
0002b3 00        	.DB  0x0,0x0,0x0,0x0
0002b4 00
0002b5 00
0002b6 00
0002b7 00        	.DB  0x0,0x0,0x0,0x0
0002b8 00
0002b9 00
0002ba 00
0002bb 00        	.DB  0x0,0x0,0x0,0x0
0002bc 00
0002bd 00
0002be 00
0002bf 00        	.DB  0x0,0x0,0x0,0x0
0002c0 00
0002c1 00
0002c2 00
0002c3 00        	.DB  0x0,0x0,0x0,0x0
0002c4 00
0002c5 00
0002c6 00
0002c7 00        	.DB  0x0,0x0,0x0,0x0
0002c8 00
0002c9 00
0002ca 00
0002cb 00        	.DB  0x0,0x0,0x0,0x0
0002cc 00
0002cd 00
0002ce 00
0002cf 00        	.DB  0x0,0x0,0x0,0x0
0002d0 00
0002d1 00
0002d2 00
0002d3 00        	.DB  0x0,0x0,0x0,0x0
0002d4 00
0002d5 00
0002d6 00
0002d7 00        	.DB  0x0,0x0,0x0,0x0
0002d8 00
0002d9 00
0002da 00
0002db 00        	.DB  0x0,0x0,0x0,0x0
0002dc 00
0002dd 00
0002de 00
0002df 00        	.DB  0x0,0x0,0x0,0x0
0002e0 00
0002e1 00
0002e2 00
0002e3 00        	.DB  0x0,0x0,0x0,0x0
0002e4 00
0002e5 00
0002e6 00
0002e7 00        	.DB  0x0,0x0,0x0,0x0
0002e8 00
0002e9 00
0002ea 00
0002eb 00        	.DB  0x0,0x0,0x0,0x0
0002ec 00
0002ed 00
0002ee 00
0002ef 00        	.DB  0x0,0x0,0x0,0x0
0002f0 00
0002f1 00
0002f2 00
0002f3 00        	.DB  0x0,0x0,0x0,0x0
0002f4 00
0002f5 00
0002f6 00
0002f7 00        	.DB  0x0,0x0,0x0,0x0
0002f8 00
0002f9 00
0002fa 00
0002fb 00        	.DB  0x0,0x0,0x0,0x0
0002fc 00
0002fd 00
0002fe 00
0002ff 00        	.DB  0x0,0x0,0x0,0x0
000300 00
000301 00
000302 00
000303 00        	.DB  0x0,0x0,0x0,0x0
000304 00
000305 00
000306 00
000307 00        	.DB  0x0,0x0,0x0,0x0
000308 00
000309 00
00030a 00
00030b 00        	.DB  0x0,0x0,0x0,0x0
00030c 00
00030d 00
00030e 00
00030f 00        	.DB  0x0,0x0,0x0,0x0
000310 00
000311 00
000312 00
000313 00        	.DB  0x0,0x0,0x0,0x0
000314 00
000315 00
000316 00
000317 00        	.DB  0x0,0x0,0x0,0x0
000318 00
000319 00
00031a 00
00031b 00        	.DB  0x0,0x0,0x0,0x0
00031c 00
00031d 00
00031e 00
00031f 00        	.DB  0x0,0x0,0x0,0x0
000320 00
000321 00
000322 00
000323 00        	.DB  0x0,0x0,0x0,0x0
000324 00
000325 00
000326 00
000327 00        	.DB  0x0,0x0,0x0,0x0
000328 00
000329 00
00032a 00
00032b 00        	.DB  0x0,0x0,0x0,0x0
00032c 00
00032d 00
00032e 00
00032f 00        	.DB  0x0,0x0,0x0,0x0
000330 00
000331 00
000332 00
000333 00        	.DB  0x0,0x0,0x0,0x0
000334 00
000335 00
000336 00
000337 00        	.DB  0x0,0x0,0x0,0x0
000338 00
000339 00
00033a 00
00033b 00        	.DB  0x0,0x0,0x0,0x0
00033c 00
00033d 00
00033e 00
00033f 00        	.DB  0x0,0x0,0x0,0x0
000340 00
000341 00
000342 00
000343 00        	.DB  0x0,0x0,0x0,0x0
000344 00
000345 00
000346 00
000347 00        	.DB  0x0,0x0,0x0,0x0
000348 00
000349 00
00034a 00
00034b 00        	.DB  0x0,0x0,0x0,0x0
00034c 00
00034d 00
00034e 00
00034f 00        	.DB  0x0,0x0,0x0,0x0
000350 00
000351 00
000352 00
000353 00        	.DB  0x0,0x0,0x0,0x0
000354 00
000355 00
000356 00
000357 00        	.DB  0x0,0x0,0x0,0x0
000358 00
000359 00
00035a 00
00035b 00        	.DB  0x0,0x0,0x0,0x0
00035c 00
00035d 00
00035e 00
00035f 00        	.DB  0x0,0x0,0x0,0x0
000360 00
000361 00
000362 00
000363 00        	.DB  0x0,0x0,0x0,0x0
000364 00
000365 00
000366 00
000367 00        	.DB  0x0,0x0,0x0,0x0
000368 00
000369 00
00036a 00
00036b 00        	.DB  0x0,0x0,0x0,0x0
00036c 00
00036d 00
00036e 00
00036f 00        	.DB  0x0,0x0,0x0,0x0
000370 00
000371 00
000372 00
000373 00        	.DB  0x0,0x0,0x0,0x0
000374 00
000375 00
000376 00
000377 00        	.DB  0x0,0x0,0x0,0x0
000378 00
000379 00
00037a 00
00037b 00        	.DB  0x0,0x0,0x0,0x0
00037c 00
00037d 00
00037e 00
00037f 00        	.DB  0x0,0x0,0x0,0x0
000380 00
000381 00
000382 00
000383 00        	.DB  0x0,0x0,0x0,0x0
000384 00
000385 00
000386 00
000387 00        	.DB  0x0,0x0,0x0,0x0
000388 00
000389 00
00038a 00
00038b 00        	.DB  0x0,0x0,0x0,0x0
00038c 00
00038d 00
00038e 00
00038f 00        	.DB  0x0,0x0,0x0,0x0
000390 00
000391 00
000392 00
000393 00        	.DB  0x0,0x0,0x0,0x0
000394 00
000395 00
000396 00
000397 00        	.DB  0x0,0x0,0x0,0x0
000398 00
000399 00
00039a 00
00039b 00        	.DB  0x0,0x0,0x0,0x0
00039c 00
00039d 00
00039e 00
00039f 00        	.DB  0x0,0x0,0x0,0x0
0003a0 00
0003a1 00
0003a2 00
0003a3 00        	.DB  0x0,0x0,0x0,0x0
0003a4 00
0003a5 00
0003a6 00
0003a7 00        	.DB  0x0,0x0,0x0,0x0
0003a8 00
0003a9 00
0003aa 00
0003ab 00        	.DB  0x0,0x0,0x0,0x0
0003ac 00
0003ad 00
0003ae 00
0003af 00        	.DB  0x0,0x0,0x0,0x0
0003b0 00
0003b1 00
0003b2 00
0003b3 00        	.DB  0x0,0x0,0x0,0x0
0003b4 00
0003b5 00
0003b6 00
0003b7 00        	.DB  0x0,0x0,0x0,0x0
0003b8 00
0003b9 00
0003ba 00
0003bb 00        	.DB  0x0,0x0,0x0,0x0
0003bc 00
0003bd 00
0003be 00
0003bf 00        	.DB  0x0,0x0,0x0,0x0
0003c0 00
0003c1 00
0003c2 00
0003c3 00        	.DB  0x0,0x0,0x0,0x0
0003c4 00
0003c5 00
0003c6 00
0003c7 00        	.DB  0x0,0x0,0x0,0x0
0003c8 00
0003c9 00
0003ca 00
0003cb 00        	.DB  0x0,0x0,0x0,0x0
0003cc 00
0003cd 00
0003ce 00
0003cf 00        	.DB  0x0,0x0,0x0,0x0
0003d0 00
0003d1 00
0003d2 00
0003d3 00        	.DB  0x0,0x0,0x0,0x0
0003d4 00
0003d5 00
0003d6 00
0003d7 00        	.DB  0x0,0x0,0x0,0x0
0003d8 00
0003d9 00
0003da 00
0003db 00        	.DB  0x0,0x0,0x0,0x0
0003dc 00
0003dd 00
0003de 00
0003df 00        	.DB  0x0,0x0,0x0,0x0
0003e0 00
0003e1 00
0003e2 00
0003e3 00        	.DB  0x0,0x0,0x0,0x0
0003e4 00
0003e5 00
0003e6 00
0003e7 00        	.DB  0x0,0x0,0x0,0x0
0003e8 00
0003e9 00
0003ea 00
0003eb 00        	.DB  0x0,0x0,0x0,0x0
0003ec 00
0003ed 00
0003ee 00
0003ef 00        	.DB  0x0,0x0,0x0,0x0
0003f0 00
0003f1 00
0003f2 00
0003f3 00        	.DB  0x0,0x0,0x0,0x0
0003f4 00
0003f5 00
0003f6 00
0003f7 00        	.DB  0x0,0x0,0x0,0x0
0003f8 00
0003f9 00
0003fa 00
0003fb 00        	.DB  0x0,0x0,0x0,0x0
0003fc 00
0003fd 00
0003fe 00
0003ff 00        	.DB  0x0,0x0,0x0,0x0
000400 00
000401 00
000402 00
000403 00        	.DB  0x0,0x0,0x0,0x0
000404 00
000405 00
000406 00
000407 00        	.DB  0x0,0x0,0x0,0x0
000408 00
000409 00
00040a 00
00040b 00        	.DB  0x0,0x0,0x0,0x0
00040c 00
00040d 00
00040e 00
00040f 00        	.DB  0x0,0x0,0x0,0x0
000410 00
000411 00
000412 00
000413 00        	.DB  0x0,0x0,0x0,0x0
000414 00
000415 00
000416 00
000417 00        	.DB  0x0,0x0,0x0,0x0
000418 00
000419 00
00041a 00
00041b 00        	.DB  0x0,0x0,0x0,0x0
00041c 00
00041d 00
00041e 00
00041f 00        	.DB  0x0,0x0,0x0,0x0
000420 00
000421 00
000422 00
000423 00        	.DB  0x0,0x0,0x0,0x0
000424 00
000425 00
000426 00
000427 00        	.DB  0x0,0x0,0x0,0x0
000428 00
000429 00
00042a 00
00042b 00        	.DB  0x0,0x0,0x0,0x0
00042c 00
00042d 00
00042e 00
00042f 00        	.DB  0x0,0x0,0x0,0x0
000430 00
000431 00
000432 00
000433 00        	.DB  0x0,0x0,0x0,0x0
000434 00
000435 00
000436 00
000437 00        	.DB  0x0,0x0,0x0,0x0
000438 00
000439 00
00043a 00
00043b 00        	.DB  0x0,0x0,0x0,0x0
00043c 00
00043d 00
00043e 00
00043f 00        	.DB  0x0,0x0,0x0,0x0
000440 00
000441 00
000442 00
000443 00        	.DB  0x0,0x0,0x0,0x0
000444 00
000445 00
000446 00
000447 00        	.DB  0x0,0x0,0x0,0x0
000448 00
000449 00
00044a 00
00044b 00        	.DB  0x0,0x0,0x0,0x0
00044c 00
00044d 00
00044e 00
00044f 00        	.DB  0x0,0x0,0x0,0x0
000450 00
000451 00
000452 00
000453 00        	.DB  0x0,0x0,0x0,0x0
000454 00
000455 00
000456 00
000457 00        	.DB  0x0,0x0,0x0,0x0
000458 00
000459 00
00045a 00
00045b 00        	.DB  0x0,0x0,0x0,0x0
00045c 00
00045d 00
00045e 00
00045f 00        	.DB  0x0,0x0,0x0,0x0
000460 00
000461 00
000462 00
000463 00        	.DB  0x0,0x0,0x0,0x0
000464 00
000465 00
000466 00
000467 00        	.DB  0x0,0x0,0x0,0x0
000468 00
000469 00
00046a 00
00046b 00        	.DB  0x0,0x0,0x0,0x0
00046c 00
00046d 00
00046e 00
00046f 00        	.DB  0x0,0x0,0x0,0x0
000470 00
000471 00
000472 00
000473 00        	.DB  0x0,0x0,0x0,0x0
000474 00
000475 00
000476 00
000477 00        	.DB  0x0,0x0,0x0,0x0
000478 00
000479 00
00047a 00
00047b 00        	.DB  0x0,0x0,0x0,0x0
00047c 00
00047d 00
00047e 00
00047f 00        	.DB  0x0,0x0,0x0,0x0
000480 00
000481 00
000482 00
000483 00        	.DB  0x0,0x0,0x0,0x0
000484 00
000485 00
000486 00
000487 00        	.DB  0x0,0x0,0x0,0x0
000488 00
000489 00
00048a 00
00048b 00        	.DB  0x0,0x0,0x0,0x0
00048c 00
00048d 00
00048e 00
00048f 00        	.DB  0x0,0x0,0x0,0x0
000490 00
000491 00
000492 00
000493 00        	.DB  0x0,0x0,0x0,0x0
000494 00
000495 00
000496 00
000497 00        	.DB  0x0,0x0,0x0,0x0
000498 00
000499 00
00049a 00
00049b 00        	.DB  0x0,0x0,0x0,0x0
00049c 00
00049d 00
00049e 00
00049f 00        	.DB  0x0,0x0,0x0,0x0
0004a0 00
0004a1 00
0004a2 00
0004a3 00        	.DB  0x0,0x0,0x0,0x0
0004a4 00
0004a5 00
0004a6 00
0004a7 00        	.DB  0x0,0x0,0x0,0x0
0004a8 00
0004a9 00
0004aa 00
0004ab 00        	.DB  0x0,0x0,0x0,0x0
0004ac 00
0004ad 00
0004ae 00
0004af 00        	.DB  0x0,0x0,0x0,0x0
0004b0 00
0004b1 00
0004b2 00
0004b3 00        	.DB  0x0,0x0,0x0,0x0
0004b4 00
0004b5 00
0004b6 00
0004b7 00        	.DB  0x0,0x0,0x0,0x0
0004b8 00
0004b9 00
0004ba 00
0004bb 00        	.DB  0x0,0x0,0x0,0x0
0004bc 00
0004bd 00
0004be 00
0004bf 00        	.DB  0x0,0x0,0x0,0x0
0004c0 00
0004c1 00
0004c2 00
0004c3 00        	.DB  0x0,0x0,0x0,0x0
0004c4 00
0004c5 00
0004c6 00
0004c7 00        	.DB  0x0,0x0,0x0,0x0
0004c8 00
0004c9 00
0004ca 00
0004cb 00        	.DB  0x0,0x0,0x0,0x0
0004cc 00
0004cd 00
0004ce 00
0004cf 00        	.DB  0x0,0x0,0x0,0x0
0004d0 00
0004d1 00
0004d2 00
0004d3 00        	.DB  0x0,0x0,0x0,0x0
0004d4 00
0004d5 00
0004d6 00
0004d7 00        	.DB  0x0,0x0,0x0,0x0
0004d8 00
0004d9 00
0004da 00
0004db 00        	.DB  0x0,0x0,0x0,0x0
0004dc 00
0004dd 00
0004de 00
0004df 00        	.DB  0x0,0x0,0x0,0x0
0004e0 00
0004e1 00
0004e2 00
0004e3 00        	.DB  0x0,0x0,0x0,0x0
0004e4 00
0004e5 00
0004e6 00
0004e7 00        	.DB  0x0,0x0,0x0,0x0
0004e8 00
0004e9 00
0004ea 00
0004eb 00        	.DB  0x0,0x0,0x0,0x0
0004ec 00
0004ed 00
0004ee 00
0004ef 00        	.DB  0x0,0x0,0x0,0x0
0004f0 00
0004f1 00
0004f2 00
0004f3 00        	.DB  0x0,0x0,0x0,0x0
0004f4 00
0004f5 00
0004f6 00
0004f7 00        	.DB  0x0,0x0,0x0,0x0
0004f8 00
0004f9 00
0004fa 00
0004fb 00        	.DB  0x0,0x0,0x0,0x0
0004fc 00
0004fd 00
0004fe 00
0004ff 00        	.DB  0x0,0x0,0x0,0x0
000500 00
000501 00
000502 00
000503 00        	.DB  0x0,0x0,0x0,0x0
000504 00
000505 00
000506 00
000507 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz:
000508 00
000509 00
00050a 00
00050b 00        	.DB  0x0,0x0,0x0,0x0
00050c 00
00050d 00
00050e 00
00050f 00        	.DB  0x0,0x0,0x0,0x0
000510 00
000511 00
000512 00
000513 00        	.DB  0x0,0x0,0x0,0x0
000514 00
000515 00
000516 00
000517 00        	.DB  0x0,0x0,0x0,0x0
000518 00
000519 00
00051a 00
00051b 00        	.DB  0x0,0x0,0x0,0x0
00051c 00
00051d 00
00051e 00
00051f 00        	.DB  0x0,0x0,0x0,0x0
000520 00
000521 00
000522 00
000523 00        	.DB  0x0,0x0,0x0,0x0
000524 00
000525 00
000526 00
000527 00        	.DB  0x0,0x0,0x0,0x0
000528 00
000529 00
00052a 00
00052b 00        	.DB  0x0,0x0,0x0,0x0
00052c 00        	.DB  0x0
                 _config_alm:
00052d 00
00052e 00
00052f 00
000530 00        	.DB  0x0,0x0,0x0,0x0
000531 00
000532 00
000533 00
000534 00        	.DB  0x0,0x0,0x0,0x0
000535 00
000536 00
000537 00
000538 00        	.DB  0x0,0x0,0x0,0x0
000539 00
00053a 00
00053b 00
00053c 00        	.DB  0x0,0x0,0x0,0x0
00053d 00
00053e 00        	.DB  0x0,0x0
                 _config_stat:
00053f 30
000540 3c        	.DB  0x30,0x3C
000541 00        	.DB  0x0
                 _config_prop_flag:
000542 00        	.DB  0x0
                 _config_oper_flag:
000543 00        	.DB  0x0
                 _config_sens_flag:
000544 00
000545 00
000546 00
000547 00        	.DB  0x0,0x0,0x0,0x0
000548 00        	.DB  0x0
                 _config_din_flag:
000549 00
00054a 00
00054b 00
00054c 00        	.DB  0x0,0x0,0x0,0x0
00054d 00
00054e 00
00054f 00
000550 00        	.DB  0x0,0x0,0x0,0x0
000551 00
000552 00
000553 00
000554 00        	.DB  0x0,0x0,0x0,0x0
000555 00
000556 00
000557 00
000558 00        	.DB  0x0,0x0,0x0,0x0
                 _config_dout_flag:
000559 00
00055a 00
00055b 00
00055c 00        	.DB  0x0,0x0,0x0,0x0
00055d 00        	.DB  0x0
                 _config_ain_flag:
00055e 00
00055f 00
000560 00
000561 00        	.DB  0x0,0x0,0x0,0x0
000562 00
000563 00
000564 00
000565 00        	.DB  0x0,0x0,0x0,0x0
000566 00
000567 00
000568 00
000569 00        	.DB  0x0,0x0,0x0,0x0
00056a 00
00056b 00
00056c 00
00056d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_aout_flag:
00056e 00
00056f 00
000570 00
000571 00        	.DB  0x0,0x0,0x0,0x0
000572 00
000573 00
000574 00
000575 00        	.DB  0x0,0x0,0x0,0x0
000576 00
000577 00
000578 00
000579 00        	.DB  0x0,0x0,0x0,0x0
00057a 00
00057b 00
00057c 00
00057d 00        	.DB  0x0,0x0,0x0,0x0
                 _config_buzz_flag:
00057e 00        	.DB  0x0
                 _config_alm_flag:
00057f 00        	.DB  0x0
                 _config_stat_flag:
000580 00        	.DB  0x0
                 
                 	.DSEG
                 _is_properties_config_update:
0010f6           	.BYTE 0x1
                 _is_operating_config_update:
0010f7           	.BYTE 0x1
                 _is_sensor_config_update:
0010f8           	.BYTE 0x5
                 _is_din_config_update:
0010fd           	.BYTE 0x10
                 _is_dout_config_update:
00110d           	.BYTE 0x5
                 _is_buzzer_config_update:
001112           	.BYTE 0x1
                 _is_status_config_update:
001113           	.BYTE 0x1
                 _is_env_config_update:
001114           	.BYTE 0x1
                 _properties_config:
001115           	.BYTE 0xA1
                 _operating_config:
0011b6           	.BYTE 0x8
                 _sensor_config:
0011be           	.BYTE 0x91
                 _din_config:
00124f           	.BYTE 0x30
                 _dout_config:
00127f           	.BYTE 0xBE
                 _buzz_config:
00133d           	.BYTE 0x25
                 _status_config:
001362           	.BYTE 0x3
                 _env_config:
001365           	.BYTE 0x12
                 _baseCounter:
001377           	.BYTE 0x4
                 _eth_waitQueue:
00137b           	.BYTE 0xA5
                 
                 	.ESEG
                 _DEVICE_SERIAL:
000581 00
000582 00
000583 00
000584 00        	.DB  0x0,0x0,0x0,0x0
000585 00
000586 00
000587 00
000588 01        	.DB  0x0,0x0,0x0,0x1
                 
                 	.DSEG
                 _ETH_current_mode:
001420           	.BYTE 0x1
                 _commLostTimer:
001421           	.BYTE 0x4
                 _duplicateListClear:
001425           	.BYTE 0x1
                 _logDataWait:
001426           	.BYTE 0x5
                 _logEventWait:
00142b           	.BYTE 0x5
                 _raw_rtc:
001430           	.BYTE 0x4
                 _d_out:
001434           	.BYTE 0x2
                 _adcData:
001436           	.BYTE 0x14
                 
                 	.ESEG
                 _eep_vref_val:
000589 0a
00058a d7
00058b 23
00058c 40        	.DB  0xA,0xD7,0x23,0x40
                 
                 	.DSEG
                 _sensor:
00144a           	.BYTE 0x19
                 _prtc_get_time:
001463           	.BYTE 0x4
                 _prtc_get_date:
001467           	.BYTE 0x4
                 _sdFreeSpace:
00146b           	.BYTE 0x4
                 _sensorStatus:
00146f           	.BYTE 0x5
                 _dataStatus:
001474           	.BYTE 0x5
                 _mtncStatus:
001479           	.BYTE 0x1
                 _powerSrcStatus:
00147a           	.BYTE 0x1
                 _batteryStatus:
00147b           	.BYTE 0x1
                 _dinStatus:
00147c           	.BYTE 0x2
                 _doutStatus:
00147e           	.BYTE 0x2
                 _serverCommStatus:
001480           	.BYTE 0x1
                 _lanStatus:
001481           	.BYTE 0x1
                 _memoryStatus:
001482           	.BYTE 0x1
                 _batteryVolt:
001483           	.BYTE 0x4
                 _muteAlarmExpired:
001487           	.BYTE 0x4
                 _muteMode:
00148b           	.BYTE 0x1
                 _sensorAlarm:
00148c           	.BYTE 0x5
                 _dataAlarm:
001491           	.BYTE 0x5
                 _dinAlarm:
001496           	.BYTE 0x10
                 _batteryAlarm:
0014a6           	.BYTE 0x1
                 _memoryAlarm:
0014a7           	.BYTE 0x1
                 _LOGFILE_DATA:
0014a8           	.BYTE 0x9
                 _LOGFILE_EVENT:
0014b1           	.BYTE 0xA
                 _LOGFILE_ERROR:
0014bb           	.BYTE 0xA
                 _LOG_INIT_STR:
0014c5           	.BYTE 0x10
                 _LOG_openFile:
0014d5           	.BYTE 0x4
                 _LOG_closeFile:
0014d9           	.BYTE 0x4
                 _isDataLogEmpty:
0014dd           	.BYTE 0x1
                 _isEventLogEmpty:
0014de           	.BYTE 0x1
                 
                 	.ESEG
                 _userPwd:
00058d 00
00058e 00
00058f 00
000590 00        	.DB  0x0,0x0,0x0,0x0
                 _servicePwd:
000591 02
000592 04
000593 07
000594 05        	.DB  0x2,0x4,0x7,0x5
                 
                 	.DSEG
                 _currentPage:
0014df           	.BYTE 0x1
                 _ETH_rst_timer_S0000001000:
0014e0           	.BYTE 0x4
                 _flag_hold_MODE_S0040002000:
0014e4           	.BYTE 0x1
                 _flag_hold_UP_S0040002000:
0014e5           	.BYTE 0x1
                 _flag_hold_DOWN_S0040002000:
0014e6           	.BYTE 0x1
                 _flag_hold_OK_S0040002000:
0014e7           	.BYTE 0x1
                 _adcBatt:
0014e8           	.BYTE 0x4
                 _sess_list:
0014ec           	.BYTE 0x64
                 
                 	.ESEG
                 _epFactor_A:
000595 00
000596 00
000597 00
000598 00        	.DB  0x0,0x0,0x0,0x0
000599 00
00059a 00
00059b 00
00059c 00        	.DB  0x0,0x0,0x0,0x0
00059d 00
00059e 00
00059f 00
0005a0 00        	.DB  0x0,0x0,0x0,0x0
0005a1 00
0005a2 00
0005a3 00
0005a4 00        	.DB  0x0,0x0,0x0,0x0
0005a5 00
0005a6 00
0005a7 00
0005a8 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_B:
0005a9 00
0005aa 00
0005ab 00
0005ac 00        	.DB  0x0,0x0,0x0,0x0
0005ad 00
0005ae 00
0005af 00
0005b0 00        	.DB  0x0,0x0,0x0,0x0
0005b1 00
0005b2 00
0005b3 00
0005b4 00        	.DB  0x0,0x0,0x0,0x0
0005b5 00
0005b6 00
0005b7 00
0005b8 00        	.DB  0x0,0x0,0x0,0x0
0005b9 00
0005ba 00
0005bb 00
0005bc 00        	.DB  0x0,0x0,0x0,0x0
                 _epFactor_C:
0005bd 00
0005be 00
0005bf 00
0005c0 00        	.DB  0x0,0x0,0x0,0x0
0005c1 00
0005c2 00
0005c3 00
0005c4 00        	.DB  0x0,0x0,0x0,0x0
0005c5 00
0005c6 00
0005c7 00
0005c8 00        	.DB  0x0,0x0,0x0,0x0
0005c9 00
0005ca 00
0005cb 00
0005cc 00        	.DB  0x0,0x0,0x0,0x0
0005cd 00
0005ce 00
0005cf 00
0005d0 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet1:
0005d1 00
0005d2 00
0005d3 00
0005d4 00        	.DB  0x0,0x0,0x0,0x0
0005d5 00        	.DB  0x0
                 _epADCRef1:
0005d6 00
0005d7 00
0005d8 00
0005d9 00        	.DB  0x0,0x0,0x0,0x0
0005da 00
0005db 00
0005dc 00
0005dd 00        	.DB  0x0,0x0,0x0,0x0
0005de 00
0005df 00
0005e0 00
0005e1 00        	.DB  0x0,0x0,0x0,0x0
0005e2 00
0005e3 00
0005e4 00
0005e5 00        	.DB  0x0,0x0,0x0,0x0
0005e6 00
0005e7 00
0005e8 00
0005e9 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef1:
0005ea 00
0005eb 00
0005ec 00
0005ed 00        	.DB  0x0,0x0,0x0,0x0
0005ee 00
0005ef 00
0005f0 00
0005f1 00        	.DB  0x0,0x0,0x0,0x0
0005f2 00
0005f3 00
0005f4 00
0005f5 00        	.DB  0x0,0x0,0x0,0x0
0005f6 00
0005f7 00
0005f8 00
0005f9 00        	.DB  0x0,0x0,0x0,0x0
0005fa 00
0005fb 00
0005fc 00
0005fd 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet2:
0005fe 00
0005ff 00
000600 00
000601 00        	.DB  0x0,0x0,0x0,0x0
000602 00        	.DB  0x0
                 _epADCRef2:
000603 00
000604 00
000605 00
000606 00        	.DB  0x0,0x0,0x0,0x0
000607 00
000608 00
000609 00
00060a 00        	.DB  0x0,0x0,0x0,0x0
00060b 00
00060c 00
00060d 00
00060e 00        	.DB  0x0,0x0,0x0,0x0
00060f 00
000610 00
000611 00
000612 00        	.DB  0x0,0x0,0x0,0x0
000613 00
000614 00
000615 00
000616 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef2:
000617 00
000618 00
000619 00
00061a 00        	.DB  0x0,0x0,0x0,0x0
00061b 00
00061c 00
00061d 00
00061e 00        	.DB  0x0,0x0,0x0,0x0
00061f 00
000620 00
000621 00
000622 00        	.DB  0x0,0x0,0x0,0x0
000623 00
000624 00
000625 00
000626 00        	.DB  0x0,0x0,0x0,0x0
000627 00
000628 00
000629 00
00062a 00        	.DB  0x0,0x0,0x0,0x0
                 _epIsPointSet3:
00062b 00
00062c 00
00062d 00
00062e 00        	.DB  0x0,0x0,0x0,0x0
00062f 00        	.DB  0x0
                 _epADCRef3:
000630 00
000631 00
000632 00
000633 00        	.DB  0x0,0x0,0x0,0x0
000634 00
000635 00
000636 00
000637 00        	.DB  0x0,0x0,0x0,0x0
000638 00
000639 00
00063a 00
00063b 00        	.DB  0x0,0x0,0x0,0x0
00063c 00
00063d 00
00063e 00
00063f 00        	.DB  0x0,0x0,0x0,0x0
000640 00
000641 00
000642 00
000643 00        	.DB  0x0,0x0,0x0,0x0
                 _epTempRef3:
000644 00
000645 00
000646 00
000647 00        	.DB  0x0,0x0,0x0,0x0
000648 00
000649 00
00064a 00
00064b 00        	.DB  0x0,0x0,0x0,0x0
00064c 00
00064d 00
00064e 00
00064f 00        	.DB  0x0,0x0,0x0,0x0
000650 00
000651 00
000652 00
000653 00        	.DB  0x0,0x0,0x0,0x0
000654 00
000655 00
000656 00
000657 00        	.DB  0x0,0x0,0x0,0x0
                 _epCalType:
000658 00
000659 00
00065a 00
00065b 00        	.DB  0x0,0x0,0x0,0x0
00065c 00        	.DB  0x0
                 
                 	.DSEG
                 _t_S00D0001000:
001550           	.BYTE 0x14
                 _lastCheck_S00D0001000:
001564           	.BYTE 0x5
                 _steadyState_S00D0001000:
001569           	.BYTE 0x5
                 _dataQ:
00156e           	.BYTE 0x64
                 _dataQ_len:
0015d2           	.BYTE 0x2
                 _t_S00F0001000:
0015d4           	.BYTE 0x4
                 _t_flag_S00F0001000:
0015d8           	.BYTE 0x1
                 _lastCheck_S00F0001000:
0015d9           	.BYTE 0x1
                 _t_S00F0005000:
0015da           	.BYTE 0x14
                 _flag_lower_S00F0005000:
0015ee           	.BYTE 0x5
                 _flag_upper_S00F0005000:
0015f3           	.BYTE 0x5
                 _t_S00F0006000:
0015f8           	.BYTE 0x8
                 _lastDinCheck_S00F0006000:
001600           	.BYTE 0x2
                 _steadyState_S00F0006000:
001602           	.BYTE 0x2
                 _eventQ:
001604           	.BYTE 0x78
                 _last_wr_eventQ:
00167c           	.BYTE 0x2
                 _last_rd_eventQ:
00167e           	.BYTE 0x2
                 _eventQ_len:
001680           	.BYTE 0x2
                 _ainAlarm:
001682           	.BYTE 0x10
                 _mtncAlarm:
001692           	.BYTE 0x1
                 _powerSrcAlarm:
001693           	.BYTE 0x1
                 _communicationAlarm:
001694           	.BYTE 0x1
                 _gsmAlarm:
001695           	.BYTE 0x1
                 _gsmBalanceAlarm:
001696           	.BYTE 0x1
                 _t_S0110003000:
001697           	.BYTE 0x4
                 _t_flag_S0110003000:
00169b           	.BYTE 0x1
                 _lastCheck_S0110003000:
00169c           	.BYTE 0x1
                 _t_S0110004000:
00169d           	.BYTE 0x4
                 _t_flag_S0110004000:
0016a1           	.BYTE 0x1
                 _lastCheck_S0110004000:
0016a2           	.BYTE 0x1
                 _t_S0110005000:
0016a3           	.BYTE 0x4
                 _t_flag_S0110005000:
0016a7           	.BYTE 0x1
                 _t_S0110006000:
0016a8           	.BYTE 0x8
                 _t_flag_S0110006000:
0016b0           	.BYTE 0x2
                 _lastCheck_S0110006000:
0016b2           	.BYTE 0x2
                 _t_S0110007000:
0016b4           	.BYTE 0x14
                 _t_flag_S0110007000:
0016c8           	.BYTE 0x5
                 _lastCheck_S0110007000:
0016cd           	.BYTE 0x5
                 _t_S0110008000:
0016d2           	.BYTE 0x14
                 _t_flag_S0110008000:
0016e6           	.BYTE 0x5
                 _fat:
0016eb           	.BYTE 0x232
                 _pfat:
00191d           	.BYTE 0x2
                 _root_path:
00191f           	.BYTE 0x4
                 _eventLogQueue:
001923           	.BYTE 0x8C
                 _eventLogQCount:
0019af           	.BYTE 0x1
                 _dataLogQueue:
0019b0           	.BYTE 0x6E
                 _dataLogQCount:
001a1e           	.BYTE 0x1
                 _cursor_S0160000000:
001a1f           	.BYTE 0x1
                 _tmpNextPage_S0160000000:
001a20           	.BYTE 0x1
                 _tmpPrevPage_S0160000000:
001a21           	.BYTE 0x1
                 _entPwd_S0160000000:
001a22           	.BYTE 0x4
                 _newPwd_S0160000000:
001a26           	.BYTE 0x4
                 _confPwd_S0160000000:
001a2a           	.BYTE 0x4
                 _setIp_S0160000000:
001a2e           	.BYTE 0xC
                 _setMask_S0160000000:
001a3a           	.BYTE 0xC
                 _setGw_S0160000000:
001a46           	.BYTE 0xC
                 _setServer_S0160000000:
001a52           	.BYTE 0xC
                 _devEn_S0160000000:
001a5e           	.BYTE 0x1
                 _almEn_S0160000000:
001a5f           	.BYTE 0x1
                 _prbEn_S0160000000:
001a60           	.BYTE 0x5
                 _mute_S0160000000:
001a65           	.BYTE 0x1
                 _vRef_S0160000000:
001a66           	.BYTE 0x3
                 _prb1_S0160000000:
001a69           	.BYTE 0x1
                 _prb2_S0160000000:
001a6a           	.BYTE 0x1
                 _calPnt_S0160000000:
001a6b           	.BYTE 0x6
                 _n:
001a71           	.BYTE 0x2
                 _a:
001a73           	.BYTE 0x30
                 __seed_G100:
001aa3           	.BYTE 0x4
                 _status_G102:
001aa7           	.BYTE 0x1
                 _timer1_G102:
001aa8           	.BYTE 0x1
                 _timer2_G102:
001aa9           	.BYTE 0x1
                 _card_type_G102:
001aaa           	.BYTE 0x1
                 _pv_S102000B000:
001aab           	.BYTE 0x1
                 _FatFs_G103:
001aac           	.BYTE 0x2
                 _Fsid_G103:
001aae           	.BYTE 0x2
                 _Drive_G103:
001ab0           	.BYTE 0x1
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x0:
                +
00bba6 e020     +LDI R18 , LOW ( 0 )
00bba7 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00bba8 e040     +LDI R20 , LOW ( 0 )
00bba9 e050     +LDI R21 , HIGH ( 0 )
                 	__GETWRN 20,21,0
00bbaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x1:
00bbab 935a      	ST   -Y,R21
00bbac 934a      	ST   -Y,R20
                +
00bbad e2a6     +LDI R26 , 38
00bbae 9fa4     +MUL R26 , R20
00bbaf 01f0     +MOVW R30 , R0
00bbb0 9fa5     +MUL R26 , R21
00bbb1 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
                +
00bbb2 58e0     +SUBI R30 , LOW ( - _dout_config - ( 1 ) )
00bbb3 4efd     +SBCI R31 , HIGH ( - _dout_config - ( 1 ) )
                 	__ADDW1MN _dout_config,1
00bbb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2:
00bbb5 81e0      	LD   R30,Z
00bbb6 940e d928 	CALL __LNEGB1
00bbb8 2fae      	MOV  R26,R30
00bbb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 289 TIMES, CODE SIZE REDUCTION:1149 WORDS
                 SUBOPT_0x3:
00bbba 940e da29 	CALL __PUTPARD1
00bbbc e080      	LDI  R24,0
00bbbd 940e 9ad2 	CALL _printDebug
00bbbf 9624      	ADIW R28,4
00bbc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4:
                +
00bbc1 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00bbc2 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00bbc3 0fe2      	ADD  R30,R18
00bbc4 1ff3      	ADC  R31,R19
00bbc5 81e0      	LD   R30,Z
00bbc6 30e0      	CPI  R30,0
00bbc7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x5:
00bbc8 01f9      	MOVW R30,R18
00bbc9 01de      	MOVW R26,R28
00bbca 96df      	ADIW R26,63
00bbcb 940e d8e3 	CALL __LSLW2
00bbcd 0fea      	ADD  R30,R26
00bbce 1ffb      	ADC  R31,R27
00bbcf 93fa      	ST   -Y,R31
00bbd0 93ea      	ST   -Y,R30
                +
00bbd1 e0a5     +LDI R26 , LOW ( 0x5 )
00bbd2 e0b0     +LDI R27 , HIGH ( 0x5 )
00bbd3 e080     +LDI R24 , BYTE3 ( 0x5 )
00bbd4 e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00bbd5 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x6:
00bbd7 01fe      	MOVW R30,R28
00bbd8 96fb      	ADIW R30,59
00bbd9 93fa      	ST   -Y,R31
00bbda 93ea      	ST   -Y,R30
                +
00bbdb e0a7     +LDI R26 , LOW ( 0x7 )
00bbdc e0b0     +LDI R27 , HIGH ( 0x7 )
00bbdd e080     +LDI R24 , BYTE3 ( 0x7 )
00bbde e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00bbdf 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x7:
00bbe1 01fe      	MOVW R30,R28
00bbe2 96f7      	ADIW R30,55
00bbe3 93fa      	ST   -Y,R31
00bbe4 93ea      	ST   -Y,R30
                +
00bbe5 e3ac     +LDI R26 , LOW ( 0x3C )
00bbe6 e0b0     +LDI R27 , HIGH ( 0x3C )
00bbe7 e080     +LDI R24 , BYTE3 ( 0x3C )
00bbe8 e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00bbe9 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x8:
00bbeb 01fe      	MOVW R30,R28
00bbec 96f3      	ADIW R30,51
00bbed 93fa      	ST   -Y,R31
00bbee 93ea      	ST   -Y,R30
                +
00bbef e2ac     +LDI R26 , LOW ( 0x12C )
00bbf0 e0b1     +LDI R27 , HIGH ( 0x12C )
00bbf1 e080     +LDI R24 , BYTE3 ( 0x12C )
00bbf2 e090     +LDI R25 , BYTE4 ( 0x12C )
                 	__GETD2N 0x12C
00bbf3 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x9:
00bbf5 01fe      	MOVW R30,R28
00bbf6 93fa      	ST   -Y,R31
00bbf7 93ea      	ST   -Y,R30
00bbf8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA:
00bbf9 e0a7      	LDI  R26,LOW(7)
00bbfa e0b0      	LDI  R27,0
00bbfb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 35 TIMES, CODE SIZE REDUCTION:65 WORDS
                 SUBOPT_0xB:
                +
00bbfc 85ac     +LDD R26 , Y + 12
00bbfd 85bd     +LDD R27 , Y + 12 + 1
00bbfe 858e     +LDD R24 , Y + 12 + 2
00bbff 859f     +LDD R25 , Y + 12 + 3
                 	__GETD2S 12
00bc00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xC:
                +
00bc01 89e8     +LDD R30 , Y + 16
00bc02 89f9     +LDD R31 , Y + 16 + 1
00bc03 896a     +LDD R22 , Y + 16 + 2
00bc04 897b     +LDD R23 , Y + 16 + 3
                 	__GETD1S 16
00bc05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD:
00bc06 e1a5      	LDI  R26,LOW(_properties_config)
00bc07 e1b1      	LDI  R27,HIGH(_properties_config)
00bc08 940e 47be 	CALL _getPropertiesConfig
00bc0a e0e0      	LDI  R30,LOW(0)
00bc0b 93e0 10f6 	STS  _is_properties_config_update,R30
00bc0d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xE:
00bc0e eba6      	LDI  R26,LOW(_operating_config)
00bc0f e1b1      	LDI  R27,HIGH(_operating_config)
00bc10 940e 4853 	CALL _getOperatingConfig
00bc12 e0e0      	LDI  R30,LOW(0)
00bc13 93e0 10f7 	STS  _is_operating_config_update,R30
00bc15 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF:
00bc16 0fa2      	ADD  R26,R18
00bc17 1fb3      	ADC  R27,R19
00bc18 91ec      	LD   R30,X
00bc19 30e0      	CPI  R30,0
00bc1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10:
                +
00bc1b e1ad     +LDI R26 , 29
00bc1c 9fa2     +MUL R26 , R18
00bc1d 01f0     +MOVW R30 , R0
00bc1e 9fa3     +MUL R26 , R19
00bc1f 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
00bc20 54e2      	SUBI R30,LOW(-_sensor_config)
00bc21 4efe      	SBCI R31,HIGH(-_sensor_config)
00bc22 01df      	MOVW R26,R30
00bc23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x11:
00bc24 940e da29 	CALL __PUTPARD1
00bc26 01f9      	MOVW R30,R18
00bc27 940e d919 	CALL __CWD1
00bc29 940e da29 	CALL __PUTPARD1
00bc2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 303 TIMES, CODE SIZE REDUCTION:601 WORDS
                 SUBOPT_0x12:
00bc2c e084      	LDI  R24,4
00bc2d 940e 9ad2 	CALL _printDebug
00bc2f 9628      	ADIW R28,8
00bc30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13:
00bc31 0fa2      	ADD  R26,R18
00bc32 1fb3      	ADC  R27,R19
00bc33 e0e0      	LDI  R30,LOW(0)
00bc34 93ec      	ST   X,R30
00bc35 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14:
00bc36 e3ad      	LDI  R26,LOW(_buzz_config)
00bc37 e1b3      	LDI  R27,HIGH(_buzz_config)
00bc38 940e 4b39 	CALL _getBuzzerConfig
00bc3a e0e0      	LDI  R30,LOW(0)
00bc3b 93e0 1112 	STS  _is_buzzer_config_update,R30
00bc3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15:
                +
00bc3e e0a3     +LDI R26 , 3
00bc3f 9fa2     +MUL R26 , R18
00bc40 01f0     +MOVW R30 , R0
00bc41 9fa3     +MUL R26 , R19
00bc42 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,3
00bc43 5be1      	SUBI R30,LOW(-_din_config)
00bc44 4efd      	SBCI R31,HIGH(-_din_config)
00bc45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x16:
00bc46 58e1      	SUBI R30,LOW(-_dout_config)
00bc47 4efd      	SBCI R31,HIGH(-_dout_config)
00bc48 01df      	MOVW R26,R30
00bc49 940e 49df 	CALL _getAuxDoutConfig
00bc4b e0ad      	LDI  R26,LOW(_is_dout_config_update)
00bc4c e1b1      	LDI  R27,HIGH(_is_dout_config_update)
00bc4d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x17:
00bc4e e6a2      	LDI  R26,LOW(_status_config)
00bc4f e1b3      	LDI  R27,HIGH(_status_config)
00bc50 940e 4c63 	CALL _getStatusReportConfig
00bc52 e0e0      	LDI  R30,LOW(0)
00bc53 93e0 1113 	STS  _is_status_config_update,R30
00bc55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x18:
00bc56 e6a5      	LDI  R26,LOW(_env_config)
00bc57 e1b3      	LDI  R27,HIGH(_env_config)
00bc58 940e 4bd0 	CALL _getEnvAlarmConfig
00bc5a e0e0      	LDI  R30,LOW(0)
00bc5b 93e0 1114 	STS  _is_env_config_update,R30
00bc5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19:
00bc5e 933a      	ST   -Y,R19
00bc5f 932a      	ST   -Y,R18
                +
00bc60 e0a5     +LDI R26 , 5
00bc61 9fa2     +MUL R26 , R18
00bc62 01f0     +MOVW R30 , R0
00bc63 9fa3     +MUL R26 , R19
00bc64 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,5
00bc65 5be6      	SUBI R30,LOW(-_sensor)
00bc66 4efb      	SBCI R31,HIGH(-_sensor)
00bc67 01df      	MOVW R26,R30
00bc68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:221 WORDS
                 SUBOPT_0x1A:
00bc69 940e d8e3 	CALL __LSLW2
00bc6b 0fae      	ADD  R26,R30
00bc6c 1fbf      	ADC  R27,R31
00bc6d 940e d9f4 	CALL __GETD1P
00bc6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B:
00bc70 01df      	MOVW R26,R30
00bc71 01cb      	MOVW R24,R22
00bc72 940e 405d 	CALL _TIMER_checkTimerExceed
00bc74 9730      	SBIW R30,0
00bc75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x1C:
00bc76 940e d8e3 	CALL __LSLW2
00bc78 0fea      	ADD  R30,R26
00bc79 1ffb      	ADC  R31,R27
00bc7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x1D:
00bc7b 940e d9f0 	CALL __GETW1P
00bc7d 2766      	CLR  R22
00bc7e 2777      	CLR  R23
00bc7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1E:
00bc80 01df      	MOVW R26,R30
00bc81 01cb      	MOVW R24,R22
00bc82 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1F:
00bc84 5be6      	SUBI R30,LOW(-_sensor)
00bc85 4efb      	SBCI R31,HIGH(-_sensor)
00bc86 01df      	MOVW R26,R30
00bc87 940e d9f4 	CALL __GETD1P
00bc89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 43 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x20:
00bc8a 940e da29 	CALL __PUTPARD1
00bc8c e088      	LDI  R24,8
00bc8d 940e 9ad2 	CALL _printDebug
00bc8f 962c      	ADIW R28,12
00bc90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21:
00bc91 940e 74e2 	CALL _checkAlarm
                +
00bc93 01de     +MOVW R26 , R28
00bc94 5aab     +SUBI R26 , LOW ( - 85 )
00bc95 4fbf     +SBCI R27 , HIGH ( - 85 )
00bc96 93ed     +ST X + , R30
00bc97 93fc     +ST X , R31
                 	__PUTW1SX 85
00bc98 9730      	SBIW R30,0
00bc99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x22:
                +
00bc9a e2a6     +LDI R26 , 38
00bc9b 9fa4     +MUL R26 , R20
00bc9c 01f0     +MOVW R30 , R0
00bc9d 9fa5     +MUL R26 , R21
00bc9e 0df0     +ADD R31 , R0
                 	__MULBNWRU 20,21,38
00bc9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23:
                +
00bca0 01de     +MOVW R26 , R28
00bca1 5aab     +SUBI R26 , LOW ( - 85 )
00bca2 4fbf     +SBCI R27 , HIGH ( - 85 )
00bca3 93ed     +ST X + , R30
00bca4 93fc     +ST X , R31
                 	__PUTW1SX 85
00bca5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x24:
                +
00bca6 efef     +LDI R30 , LOW ( 0xFFFFFFFF )
00bca7 efff     +LDI R31 , HIGH ( 0xFFFFFFFF )
00bca8 ef6f     +LDI R22 , BYTE3 ( 0xFFFFFFFF )
00bca9 ef7f     +LDI R23 , BYTE4 ( 0xFFFFFFFF )
                 	__GETD1N 0xFFFFFFFF
00bcaa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25:
00bcab 93e0 1487 	STS  _muteAlarmExpired,R30
00bcad 93f0 1488 	STS  _muteAlarmExpired+1,R31
00bcaf 9360 1489 	STS  _muteAlarmExpired+2,R22
00bcb1 9370 148a 	STS  _muteAlarmExpired+3,R23
00bcb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26:
                +
00bcb4 01fe     +MOVW R30 , R28
00bcb5 5aeb     +SUBI R30 , LOW ( - 85 )
00bcb6 4fff     +SBCI R31 , HIGH ( - 85 )
00bcb7 9001     +LD R0 , Z +
00bcb8 81f0     +LD R31 , Z
00bcb9 2de0     +MOV R30 , R0
                 	__GETW1SX 85
00bcba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x27:
00bcbb 93fa      	ST   -Y,R31
00bcbc 93ea      	ST   -Y,R30
                +
00bcbd e0aa     +LDI R26 , LOW ( 0xA )
00bcbe e0b0     +LDI R27 , HIGH ( 0xA )
00bcbf e080     +LDI R24 , BYTE3 ( 0xA )
00bcc0 e090     +LDI R25 , BYTE4 ( 0xA )
                 	__GETD2N 0xA
00bcc1 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x28:
00bcc3 91a0 146b 	LDS  R26,_sdFreeSpace
00bcc5 91b0 146c 	LDS  R27,_sdFreeSpace+1
00bcc7 9180 146d 	LDS  R24,_sdFreeSpace+2
00bcc9 9190 146e 	LDS  R25,_sdFreeSpace+3
00bccb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 110 TIMES, CODE SIZE REDUCTION:542 WORDS
                 SUBOPT_0x29:
00bccc 27ff      	CLR  R31
00bccd 2766      	CLR  R22
00bcce 2777      	CLR  R23
00bccf 940e da29 	CALL __PUTPARD1
00bcd1 cf5a      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2A:
00bcd2 e7ac      	LDI  R26,LOW(_dinStatus)
00bcd3 e1b4      	LDI  R27,HIGH(_dinStatus)
00bcd4 0fa2      	ADD  R26,R18
00bcd5 1fb3      	ADC  R27,R19
00bcd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2B:
00bcd7 e0f0      	LDI  R31,0
00bcd8 9730      	SBIW R30,0
00bcd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x2C:
                +
00bcda e0a0     +LDI R26 , LOW ( 0x0 )
00bcdb e0b0     +LDI R27 , HIGH ( 0x0 )
00bcdc e080     +LDI R24 , BYTE3 ( 0x0 )
00bcdd e090     +LDI R25 , BYTE4 ( 0x0 )
                 	__GETD2N 0x0
00bcde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2D:
00bcdf 91a0 1483 	LDS  R26,_batteryVolt
00bce1 91b0 1484 	LDS  R27,_batteryVolt+1
00bce3 9180 1485 	LDS  R24,_batteryVolt+2
00bce5 9190 1486 	LDS  R25,_batteryVolt+3
00bce7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 40 TIMES, CODE SIZE REDUCTION:387 WORDS
                 SUBOPT_0x2E:
00bce8 b1e6      	IN   R30,0x6
00bce9 7ce0      	ANDI R30,LOW(0xC0)
00bcea e0f0      	LDI  R31,0
00bceb 940e d8ec 	CALL __ASRW2
00bced 940e d8e8 	CALL __ASRW4
00bcef 95e0      	COM  R30
00bcf0 95f0      	COM  R31
00bcf1 70e3      	ANDI R30,LOW(0x3)
00bcf2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F:
00bcf3 91e0 0106 	LDS  R30,262
00bcf5 71e0      	ANDI R30,LOW(0x10)
00bcf6 e0f0      	LDI  R31,0
00bcf7 940e d8e8 	CALL __ASRW4
00bcf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x30:
00bcfa 940e da29 	CALL __PUTPARD1
00bcfc 91e0 10f4 	LDS  R30,_hwCalId
00bcfe 91f0 10f5 	LDS  R31,_hwCalId+1
00bd00 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x31:
00bd01 e3a6      	LDI  R26,LOW(_adcData)
00bd02 e1b4      	LDI  R27,HIGH(_adcData)
00bd03 cf65      	RJMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0x32:
00bd04 e8a9      	LDI  R26,LOW(_eep_vref_val)
00bd05 e0b5      	LDI  R27,HIGH(_eep_vref_val)
00bd06 940e da48 	CALL __EEPROMRDD
00bd08 01df      	MOVW R26,R30
00bd09 01cb      	MOVW R24,R22
                +
00bd0a e0e0     +LDI R30 , LOW ( 0x447FC000 )
00bd0b ecf0     +LDI R31 , HIGH ( 0x447FC000 )
00bd0c e76f     +LDI R22 , BYTE3 ( 0x447FC000 )
00bd0d e474     +LDI R23 , BYTE4 ( 0x447FC000 )
                 	__GETD1N 0x447FC000
00bd0e 940e d82b 	CALL __DIVF21
00bd10 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x33:
                +
00bd11 e0a0     +LDI R26 , LOW ( 0x42C80000 )
00bd12 e0b0     +LDI R27 , HIGH ( 0x42C80000 )
00bd13 ec88     +LDI R24 , BYTE3 ( 0x42C80000 )
00bd14 e492     +LDI R25 , BYTE4 ( 0x42C80000 )
                 	__GETD2N 0x42C80000
00bd15 940e d7dd 	CALL __MULF12
00bd17 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 84 TIMES, CODE SIZE REDUCTION:163 WORDS
                 SUBOPT_0x34:
00bd18 2766      	CLR  R22
00bd19 2777      	CLR  R23
00bd1a 940e da29 	CALL __PUTPARD1
00bd1c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x35:
00bd1d eca8      	LDI  R26,LOW(200)
00bd1e e0b0      	LDI  R27,0
00bd1f 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x36:
00bd21 e080      	LDI  R24,0
00bd22 940e 9ad2 	CALL _printDebug
00bd24 9624      	ADIW R28,4
00bd25 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x37:
00bd26 940e da99 	CALL __SAVELOCR6
                +
00bd28 e000     +LDI R16 , LOW ( 0 )
00bd29 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00bd2a ce7b      	RJMP SUBOPT_0x0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38:
                +
00bd2b e1ad     +LDI R26 , 29
00bd2c 9fa2     +MUL R26 , R18
00bd2d 01f0     +MOVW R30 , R0
00bd2e 9fa3     +MUL R26 , R19
00bd2f 0df0     +ADD R31 , R0
                 	__MULBNWRU 18,19,29
                +
00bd30 53ea     +SUBI R30 , LOW ( - _sensor_config - ( 8 ) )
00bd31 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 8 ) )
                 	__ADDW1MN _sensor_config,8
00bd32 81e0      	LD   R30,Z
00bd33 30e0      	CPI  R30,0
00bd34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x39:
00bd35 91a0 14e0 	LDS  R26,_ETH_rst_timer_S0000001000
00bd37 91b0 14e1 	LDS  R27,_ETH_rst_timer_S0000001000+1
00bd39 9180 14e2 	LDS  R24,_ETH_rst_timer_S0000001000+2
00bd3b 9190 14e3 	LDS  R25,_ETH_rst_timer_S0000001000+3
00bd3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:112 WORDS
                 SUBOPT_0x3A:
                +
00bd3e 3faf     +CPI R26 , LOW ( 0xFFFFFFFF )
00bd3f efef     +LDI R30 , HIGH ( 0xFFFFFFFF )
00bd40 07be     +CPC R27 , R30
00bd41 efef     +LDI R30 , BYTE3 ( 0xFFFFFFFF )
00bd42 078e     +CPC R24 , R30
00bd43 efef     +LDI R30 , BYTE4 ( 0xFFFFFFFF )
00bd44 079e     +CPC R25 , R30
                 	__CPD2N 0xFFFFFFFF
00bd45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B:
00bd46 93fa      	ST   -Y,R31
00bd47 93ea      	ST   -Y,R30
                +
00bd48 e0af     +LDI R26 , LOW ( 0xF )
00bd49 e0b0     +LDI R27 , HIGH ( 0xF )
00bd4a e080     +LDI R24 , BYTE3 ( 0xF )
00bd4b e090     +LDI R25 , BYTE4 ( 0xF )
                 	__GETD2N 0xF
00bd4c 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3C:
00bd4e 940e da29 	CALL __PUTPARD1
00bd50 91a0 1377 	LDS  R26,_baseCounter
00bd52 91b0 1378 	LDS  R27,_baseCounter+1
00bd54 9180 1379 	LDS  R24,_baseCounter+2
00bd56 9190 137a 	LDS  R25,_baseCounter+3
00bd58 91e0 14e0 	LDS  R30,_ETH_rst_timer_S0000001000
00bd5a 91f0 14e1 	LDS  R31,_ETH_rst_timer_S0000001000+1
00bd5c 9160 14e2 	LDS  R22,_ETH_rst_timer_S0000001000+2
00bd5e 9170 14e3 	LDS  R23,_ETH_rst_timer_S0000001000+3
00bd60 940e d89e 	CALL __SUBD12
00bd62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3D:
00bd63 01af      	MOVW R20,R30
                +
00bd64 2b04     +OR R16 , R20
00bd65 2b15     +OR R17 , R21
                 	__ORWRR 16,17,20,21
00bd66 2e04      	MOV  R0,R20
00bd67 2a05      	OR   R0,R21
00bd68 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x3E:
00bd69 940e 43d3 	CALL _DS1672_read
                +
00bd6b 83ef     +STD Y + 7 , R30
00bd6c 87f8     +STD Y + 7 + 1 , R31
00bd6d 8769     +STD Y + 7 + 2 , R22
00bd6e 877a     +STD Y + 7 + 3 , R23
                 	__PUTD1S 7
00bd6f 81ee      	LDD  R30,Y+6
00bd70 30e0      	CPI  R30,0
00bd71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x3F:
                +
00bd72 81ef     +LDD R30 , Y + 7
00bd73 85f8     +LDD R31 , Y + 7 + 1
00bd74 8569     +LDD R22 , Y + 7 + 2
00bd75 857a     +LDD R23 , Y + 7 + 3
                 	__GETD1S 7
00bd76 940e da29 	CALL __PUTPARD1
00bd78 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x40:
00bd79 93ea      	ST   -Y,R30
00bd7a 85ab      	LDD  R26,Y+11
00bd7b 940e 747a 	CALL _addEventQueue
00bd7d 01af      	MOVW R20,R30
00bd7e 2355      	TST  R21
00bd7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x41:
                +
00bd80 e7e1     +LDI R30 , LOW ( 2 * _0x0 + ( 849 ) )
00bd81 e0f5     +LDI R31 , HIGH ( 2 * _0x0 + ( 849 ) )
00bd82 e060     +LDI R22 , BYTE3 ( 2 * _0x0 + ( 849 ) )
00bd83 e070     +LDI R23 , BYTE4 ( 2 * _0x0 + ( 849 ) )
                 	__POINTD1FN _0x0,849
00bd84 ce35      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x42:
00bd85 933a      	ST   -Y,R19
00bd86 932a      	ST   -Y,R18
00bd87 01de      	MOVW R26,R28
00bd88 9618      	ADIW R26,8
00bd89 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x43:
00bd8a 01f9      	MOVW R30,R18
00bd8b 9631      	ADIW R30,1
00bd8c 940e d919 	CALL __CWD1
00bd8e 940e da29 	CALL __PUTPARD1
00bd90 ce9b      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x44:
00bd91 940e da29 	CALL __PUTPARD1
00bd93 cff6      	RJMP SUBOPT_0x43
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x45:
00bd94 01f9      	MOVW R30,R18
00bd95 9631      	ADIW R30,1
00bd96 940e d919 	CALL __CWD1
00bd98 940e da29 	CALL __PUTPARD1
00bd9a e084      	LDI  R24,4
00bd9b 940e 7c63 	CALL _printOLED
00bd9d 9628      	ADIW R28,8
00bd9e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x46:
00bd9f 940e da99 	CALL __SAVELOCR6
                +
00bda1 e000     +LDI R16 , LOW ( 0 )
00bda2 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00bda3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x47:
00bda4 e0f0      	LDI  R31,0
00bda5 31e0      	CPI  R30,LOW(0x10)
00bda6 e0a0      	LDI  R26,HIGH(0x10)
00bda7 07fa      	CPC  R31,R26
00bda8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x48:
00bda9 e0ab      	LDI  R26,LOW(11)
00bdaa e0b0      	LDI  R27,0
00bdab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x49:
00bdac 940e da29 	CALL __PUTPARD1
00bdae 01fa      	MOVW R30,R20
00bdaf 940e d919 	CALL __CWD1
00bdb1 940e da29 	CALL __PUTPARD1
00bdb3 ce78      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4A:
00bdb4 940e a0bd 	CALL _free
00bdb6 efef      	LDI  R30,LOW(65535)
00bdb7 efff      	LDI  R31,HIGH(65535)
00bdb8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x4B:
00bdb9 01fa      	MOVW R30,R20
                +
00bdba 5f4f     +SUBI R20 , LOW ( - 1 )
00bdbb 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00bdbc 0fe2      	ADD  R30,R18
00bdbd 1ff3      	ADC  R31,R19
00bdbe 01df      	MOVW R26,R30
00bdbf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x4C:
00bdc0 01fa      	MOVW R30,R20
                +
00bdc1 5f4f     +SUBI R20 , LOW ( - 1 )
00bdc2 4f5f     +SBCI R21 , HIGH ( - 1 )
                 	__ADDWRN 20,21,1
00bdc3 0fe2      	ADD  R30,R18
00bdc4 1ff3      	ADC  R31,R19
00bdc5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x4D:
00bdc6 93fa      	ST   -Y,R31
00bdc7 93ea      	ST   -Y,R30
00bdc8 e0a4      	LDI  R26,LOW(4)
00bdc9 e0b0      	LDI  R27,0
00bdca 940c a0df 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x4E:
00bdcc 940e 43d3 	CALL _DS1672_read
                +
00bdce 87e8     +STD Y + 8 , R30
00bdcf 87f9     +STD Y + 8 + 1 , R31
00bdd0 876a     +STD Y + 8 + 2 , R22
00bdd1 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00bdd2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x4F:
                +
00bdd3 85e8     +LDD R30 , Y + 8
00bdd4 85f9     +LDD R31 , Y + 8 + 1
00bdd5 856a     +LDD R22 , Y + 8 + 2
00bdd6 857b     +LDD R23 , Y + 8 + 3
                 	__GETD1S 8
00bdd7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x50:
00bdd8 940e da29 	CALL __PUTPARD1
                +
00bdda 85ee     +LDD R30 , Y + 14
00bddb 85ff     +LDD R31 , Y + 14 + 1
00bddc 8968     +LDD R22 , Y + 14 + 2
00bddd 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00bdde 940e da29 	CALL __PUTPARD1
00bde0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x51:
                +
00bde1 89ea     +LDD R30 , Y + 18
00bde2 89fb     +LDD R31 , Y + 18 + 1
00bde3 896c     +LDD R22 , Y + 18 + 2
00bde4 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00bde5 940e da29 	CALL __PUTPARD1
00bde7 e08c      	LDI  R24,12
00bde8 940e 9ad2 	CALL _printDebug
00bdea 9660      	ADIW R28,16
00bdeb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x52:
                +
00bdec 85aa     +LDD R26 , Y + 10
00bded 85bb     +LDD R27 , Y + 10 + 1
00bdee 858c     +LDD R24 , Y + 10 + 2
00bdef 859d     +LDD R25 , Y + 10 + 3
                 	__GETD2S 10
00bdf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x53:
00bdf1 dffa      	RCALL SUBOPT_0x52
00bdf2 cf4b      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x54:
00bdf3 93ea      	ST   -Y,R30
                +
00bdf4 85eb     +LDD R30 , Y + 11
00bdf5 85fc     +LDD R31 , Y + 11 + 1
00bdf6 856d     +LDD R22 , Y + 11 + 2
00bdf7 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00bdf8 940e da29 	CALL __PUTPARD1
00bdfa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x55:
                +
00bdfb 85ad     +LDD R26 , Y + 13
00bdfc 85be     +LDD R27 , Y + 13 + 1
00bdfd 858f     +LDD R24 , Y + 13 + 2
00bdfe 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00bdff 940c 5426 	JMP  _ETH_sendDataReportCmd
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x56:
00be01 01fe      	MOVW R30,R28
00be02 9636      	ADIW R30,6
00be03 93fa      	ST   -Y,R31
00be04 93ea      	ST   -Y,R30
00be05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x57:
00be06 940e da29 	CALL __PUTPARD1
                +
00be08 85ea     +LDD R30 , Y + 10
00be09 85fb     +LDD R31 , Y + 10 + 1
00be0a 856c     +LDD R22 , Y + 10 + 2
00be0b 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00be0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x58:
00be0d 2fe5      	MOV  R30,R21
00be0e 27ff      	CLR  R31
00be0f 2766      	CLR  R22
00be10 2777      	CLR  R23
00be11 940e da29 	CALL __PUTPARD1
00be13 2fe4      	MOV  R30,R20
00be14 27ff      	CLR  R31
00be15 2766      	CLR  R22
00be16 2777      	CLR  R23
00be17 940e da29 	CALL __PUTPARD1
00be19 e08c      	LDI  R24,12
00be1a 940e 9ad2 	CALL _printDebug
00be1c 9660      	ADIW R28,16
00be1d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x59:
                +
00be1e 81ae     +LDD R26 , Y + 6
00be1f 81bf     +LDD R27 , Y + 6 + 1
00be20 8588     +LDD R24 , Y + 6 + 2
00be21 8599     +LDD R25 , Y + 6 + 3
                 	__GETD2S 6
00be22 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x5A:
00be23 01fe      	MOVW R30,R28
00be24 963c      	ADIW R30,12
00be25 93fa      	ST   -Y,R31
00be26 93ea      	ST   -Y,R30
00be27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x5B:
00be28 940e da29 	CALL __PUTPARD1
00be2a ddd6      	RCALL SUBOPT_0xC
00be2b 940e da29 	CALL __PUTPARD1
00be2d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5C:
00be2e ddcd      	RCALL SUBOPT_0xB
00be2f cf0e      	RJMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x5D:
00be30 01fe      	MOVW R30,R28
00be31 9670      	ADIW R30,16
00be32 93fa      	ST   -Y,R31
00be33 93ea      	ST   -Y,R30
00be34 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x5E:
00be35 eaa8      	LDI  R26,LOW(_LOGFILE_DATA)
00be36 e1b4      	LDI  R27,HIGH(_LOGFILE_DATA)
                +
00be37 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00be39 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00be3b 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00be3d bf6c     +OUT EIND , R22
00be3e 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00be3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x5F:
00be40 940e da29 	CALL __PUTPARD1
00be42 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00be43 e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00be44 ced3      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x60:
                +
00be45 85ee     +LDD R30 , Y + 14
00be46 85ff     +LDD R31 , Y + 14 + 1
00be47 8968     +LDD R22 , Y + 14 + 2
00be48 8979     +LDD R23 , Y + 14 + 3
                 	__GETD1S 14
00be49 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x61:
                +
00be4a 85ae     +LDD R26 , Y + 14
00be4b 85bf     +LDD R27 , Y + 14 + 1
00be4c 8988     +LDD R24 , Y + 14 + 2
00be4d 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00be4e 940c 7ef3 	JMP  _LOG_insertData
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x62:
                +
00be50 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00be52 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00be54 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00be56 bf6c     +OUT EIND , R22
00be57 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00be58 01af      	MOVW R20,R30
00be59 2355      	TST  R21
00be5a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x63:
00be5b 01fe      	MOVW R30,R28
00be5c 9637      	ADIW R30,7
00be5d 93fa      	ST   -Y,R31
00be5e 93ea      	ST   -Y,R30
00be5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x64:
                +
00be60 85eb     +LDD R30 , Y + 11
00be61 85fc     +LDD R31 , Y + 11 + 1
00be62 856d     +LDD R22 , Y + 11 + 2
00be63 857e     +LDD R23 , Y + 11 + 3
                 	__GETD1S 11
00be64 940e da29 	CALL __PUTPARD1
00be66 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 90 TIMES, CODE SIZE REDUCTION:264 WORDS
                 SUBOPT_0x65:
00be67 27ff      	CLR  R31
00be68 2766      	CLR  R22
00be69 2777      	CLR  R23
00be6a 940e da29 	CALL __PUTPARD1
00be6c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x66:
00be6d e08c      	LDI  R24,12
00be6e 940e 9ad2 	CALL _printDebug
00be70 9660      	ADIW R28,16
00be71 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x67:
                +
00be72 81af     +LDD R26 , Y + 7
00be73 85b8     +LDD R27 , Y + 7 + 1
00be74 8589     +LDD R24 , Y + 7 + 2
00be75 859a     +LDD R25 , Y + 7 + 3
                 	__GETD2S 7
00be76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x68:
00be77 01fe      	MOVW R30,R28
00be78 963b      	ADIW R30,11
00be79 93fa      	ST   -Y,R31
00be7a 93ea      	ST   -Y,R30
00be7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x69:
00be7c eba1      	LDI  R26,LOW(_LOGFILE_EVENT)
00be7d e1b4      	LDI  R27,HIGH(_LOGFILE_EVENT)
                +
00be7e 91e0 14d5+LDS R30 , _LOG_openFile + ( 0 )
00be80 91f0 14d6+LDS R31 , _LOG_openFile + ( 0 ) + 1
00be82 9160 14d7+LDS R22 , _LOG_openFile + ( 0 ) + 2
00be84 bf6c     +OUT EIND , R22
00be85 9519     +EICALL
                 	__CALL1MN _LOG_openFile,0
00be86 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x6A:
00be87 940e da29 	CALL __PUTPARD1
00be89 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00be8a e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00be8b ce8c      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x6B:
                +
00be8c 85e9     +LDD R30 , Y + 9
00be8d 85fa     +LDD R31 , Y + 9 + 1
00be8e 856b     +LDD R22 , Y + 9 + 2
00be8f 857c     +LDD R23 , Y + 9 + 3
                 	__GETD1S 9
00be90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6C:
00be91 01fe      	MOVW R30,R28
00be92 9672      	ADIW R30,18
00be93 93fa      	ST   -Y,R31
00be94 93ea      	ST   -Y,R30
00be95 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x6D:
00be96 df55      	RCALL SUBOPT_0x52
00be97 940e da89 	CALL __CPD02
00be99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x6E:
00be9a e0e0      	LDI  R30,LOW(0)
00be9b 93e0 1426 	STS  _logDataWait,R30
                +
00be9d e0e0     +LDI R30 , LOW ( 0x0 )
00be9e e0f0     +LDI R31 , HIGH ( 0x0 )
00be9f e060     +LDI R22 , BYTE3 ( 0x0 )
00bea0 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00bea1 93e0 1427+STS _logDataWait + ( 1 ) , R30
00bea3 93f0 1428+STS _logDataWait + ( 1 ) + 1 , R31
00bea5 9360 1429+STS _logDataWait + ( 1 ) + 2 , R22
00bea7 9370 142a+STS _logDataWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logDataWait,1
00bea9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x6F:
                +
00beaa 91e0 1427+LDS R30 , _logDataWait + ( 1 )
00beac 91f0 1428+LDS R31 , _logDataWait + ( 1 ) + 1
00beae 9160 1429+LDS R22 , _logDataWait + ( 1 ) + 2
00beb0 9170 142a+LDS R23 , _logDataWait + ( 1 ) + 3
                 	__GETD1MN _logDataWait,1
00beb2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x70:
00beb3 01de      	MOVW R26,R28
00beb4 9652      	ADIW R26,18
                +
00beb5 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00beb7 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00beb9 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00bebb bf6c     +OUT EIND , R22
00bebc 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00bebd 018f      	MOVW R16,R30
00bebe 2311      	TST  R17
00bebf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x71:
00bec0 e0e0      	LDI  R30,LOW(0)
00bec1 93e0 142b 	STS  _logEventWait,R30
                +
00bec3 e0e0     +LDI R30 , LOW ( 0x0 )
00bec4 e0f0     +LDI R31 , HIGH ( 0x0 )
00bec5 e060     +LDI R22 , BYTE3 ( 0x0 )
00bec6 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
                +
00bec7 93e0 142c+STS _logEventWait + ( 1 ) , R30
00bec9 93f0 142d+STS _logEventWait + ( 1 ) + 1 , R31
00becb 9360 142e+STS _logEventWait + ( 1 ) + 2 , R22
00becd 9370 142f+STS _logEventWait + ( 1 ) + 3 , R23
                 	__PUTD1MN _logEventWait,1
00becf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x72:
                +
00bed0 91e0 142c+LDS R30 , _logEventWait + ( 1 )
00bed2 91f0 142d+LDS R31 , _logEventWait + ( 1 ) + 1
00bed4 9160 142e+LDS R22 , _logEventWait + ( 1 ) + 2
00bed6 9170 142f+LDS R23 , _logEventWait + ( 1 ) + 3
                 	__GETD1MN _logEventWait,1
00bed8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x73:
00bed9 e0a2      	LDI  R26,LOW(2)
00beda e0b0      	LDI  R27,0
00bedb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x74:
00bedc e6a4      	LDI  R26,LOW(100)
00bedd e0b0      	LDI  R27,0
00bede 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x75:
00bee0 e0a1      	LDI  R26,LOW(1)
00bee1 e0b0      	LDI  R27,0
00bee2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x76:
00bee3 e0a3      	LDI  R26,LOW(3)
00bee4 e0b0      	LDI  R27,0
00bee5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x77:
00bee6 e0a4      	LDI  R26,LOW(4)
00bee7 e0b0      	LDI  R27,0
00bee8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x78:
00bee9 01df      	MOVW R26,R30
00beea 940e d9f4 	CALL __GETD1P
00beec 940e da29 	CALL __PUTPARD1
00beee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x79:
00beef 93e0 0102 	STS  258,R30
00bef1 ce2b      	RJMP SUBOPT_0x35
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x7A:
00bef2 e3a2      	LDI  R26,LOW(50)
00bef3 e0b0      	LDI  R27,0
00bef4 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0x7B:
00bef6 920a      	ST   -Y,R0
00bef7 921a      	ST   -Y,R1
00bef8 92fa      	ST   -Y,R15
00bef9 936a      	ST   -Y,R22
00befa 937a      	ST   -Y,R23
00befb 938a      	ST   -Y,R24
00befc 939a      	ST   -Y,R25
00befd 93aa      	ST   -Y,R26
00befe 93ba      	ST   -Y,R27
00beff 93ea      	ST   -Y,R30
00bf00 93fa      	ST   -Y,R31
00bf01 b7eb      	IN   R30,RAMPZ
00bf02 93ea      	ST   -Y,R30
00bf03 b7ec      	IN   R30,EIND
00bf04 93ea      	ST   -Y,R30
00bf05 b7ef      	IN   R30,SREG
00bf06 93ea      	ST   -Y,R30
00bf07 931a      	ST   -Y,R17
00bf08 930a      	ST   -Y,R16
00bf09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x7C:
00bf0a 91ed      	LD   R30,X+
00bf0b 91fd      	LD   R31,X+
00bf0c 9631      	ADIW R30,1
00bf0d 93fe      	ST   -X,R31
00bf0e 93ee      	ST   -X,R30
00bf0f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x7D:
00bf10 91a0 10ee 	LDS  R26,_configLen
00bf12 91b0 10ef 	LDS  R27,_configLen+1
00bf14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x7E:
00bf15 e0e0      	LDI  R30,LOW(0)
00bf16 93e0 10ee 	STS  _configLen,R30
00bf18 93e0 10ef 	STS  _configLen+1,R30
00bf1a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x7F:
00bf1b 93ba      	ST   -Y,R27
00bf1c 93aa      	ST   -Y,R26
00bf1d 940e da9b 	CALL __SAVELOCR4
00bf1f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x80:
00bf20 85e8      	LDD  R30,Y+8
00bf21 85f9      	LDD  R31,Y+8+1
00bf22 9631      	ADIW R30,1
00bf23 87e8      	STD  Y+8,R30
00bf24 87f9      	STD  Y+8+1,R31
00bf25 9731      	SBIW R30,1
00bf26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x81:
00bf27 93ba      	ST   -Y,R27
00bf28 93aa      	ST   -Y,R26
00bf29 931a      	ST   -Y,R17
00bf2a 930a      	ST   -Y,R16
00bf2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x82:
00bf2c 81ea      	LDD  R30,Y+2
00bf2d 81fb      	LDD  R31,Y+2+1
00bf2e 170e      	CP   R16,R30
00bf2f 071f      	CPC  R17,R31
00bf30 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x83:
00bf31 01f8      	MOVW R30,R16
00bf32 81ac      	LDD  R26,Y+4
00bf33 81bd      	LDD  R27,Y+4+1
00bf34 0fae      	ADD  R26,R30
00bf35 1fbf      	ADC  R27,R31
00bf36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x84:
00bf37 81a9      	LDD  R26,Y+1
00bf38 81ba      	LDD  R27,Y+1+1
00bf39 27ee      	CLR  R30
00bf3a 0fa1      	ADD  R26,R17
00bf3b 1fbe      	ADC  R27,R30
00bf3c 91ec      	LD   R30,X
00bf3d 30e0      	CPI  R30,0
00bf3e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x85:
00bf3f 81a9      	LDD  R26,Y+1
00bf40 81ba      	LDD  R27,Y+1+1
00bf41 27ee      	CLR  R30
00bf42 0fa1      	ADD  R26,R17
00bf43 1fbe      	ADC  R27,R30
00bf44 91ac      	LD   R26,X
00bf45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x86:
00bf46 940e da2e 	CALL __PUTPARD2
00bf48 940e da10 	CALL __GETD1S0
00bf4a 940e da7d 	CALL __CPD10
00bf4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:57 WORDS
                 SUBOPT_0x87:
00bf4d 940e da10 	CALL __GETD1S0
00bf4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x88:
00bf50 91a0 1377 	LDS  R26,_baseCounter
00bf52 91b0 1378 	LDS  R27,_baseCounter+1
00bf54 9180 1379 	LDS  R24,_baseCounter+2
00bf56 9190 137a 	LDS  R25,_baseCounter+3
00bf58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x89:
                +
00bf59 81ec     +LDD R30 , Y + 4
00bf5a 81fd     +LDD R31 , Y + 4 + 1
00bf5b 816e     +LDD R22 , Y + 4 + 2
00bf5c 817f     +LDD R23 , Y + 4 + 3
                 	__GETD1S 4
00bf5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x8A:
00bf5e 940e d894 	CALL __ADDD12
00bf60 940e da1a 	CALL __PUTD1S0
00bf62 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x8B:
00bf63 91e0 1377 	LDS  R30,_baseCounter
00bf65 91f0 1378 	LDS  R31,_baseCounter+1
00bf67 9160 1379 	LDS  R22,_baseCounter+2
00bf69 9170 137a 	LDS  R23,_baseCounter+3
00bf6b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8C:
00bf6c 940e da15 	CALL __GETD2S0
00bf6e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x8D:
00bf6f 940e da29 	CALL __PUTPARD1
                +
00bf71 85ec     +LDD R30 , Y + 12
00bf72 85fd     +LDD R31 , Y + 12 + 1
00bf73 856e     +LDD R22 , Y + 12 + 2
00bf74 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00bf75 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x8E:
00bf76 940e da29 	CALL __PUTPARD1
00bf78 cef4      	RJMP SUBOPT_0x66
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 14 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x8F:
                +
00bf79 e0e0     +LDI R30 , LOW ( 0x0 )
00bf7a e0f0     +LDI R31 , HIGH ( 0x0 )
00bf7b e060     +LDI R22 , BYTE3 ( 0x0 )
00bf7c e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00bf7d 940e d9ff 	CALL __PUTDP1
00bf7f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x90:
00bf80 920a      	ST   -Y,R0
00bf81 921a      	ST   -Y,R1
00bf82 92fa      	ST   -Y,R15
00bf83 936a      	ST   -Y,R22
00bf84 937a      	ST   -Y,R23
00bf85 938a      	ST   -Y,R24
00bf86 939a      	ST   -Y,R25
00bf87 93aa      	ST   -Y,R26
00bf88 93ba      	ST   -Y,R27
00bf89 93ea      	ST   -Y,R30
00bf8a 93fa      	ST   -Y,R31
00bf8b b7eb      	IN   R30,RAMPZ
00bf8c 93ea      	ST   -Y,R30
00bf8d b7ec      	IN   R30,EIND
00bf8e 93ea      	ST   -Y,R30
00bf8f b7ef      	IN   R30,SREG
00bf90 93ea      	ST   -Y,R30
00bf91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x91:
00bf92 efee      	LDI  R30,LOW(254)
00bf93 93e0 0085 	STS  133,R30
00bf95 e7e9      	LDI  R30,LOW(121)
00bf96 93e0 0084 	STS  132,R30
00bf98 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x92:
00bf99 e8e5      	LDI  R30,LOW(133)
00bf9a 93e0 0095 	STS  149,R30
00bf9c eeed      	LDI  R30,LOW(237)
00bf9d 93e0 0094 	STS  148,R30
00bf9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x93:
00bfa0 940e d9fa 	CALL __GETD1P_INC
                +
00bfa2 5fef     +SUBI R30 , LOW ( - 1 )
00bfa3 4fff     +SBCI R31 , HIGH ( - 1 )
00bfa4 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00bfa5 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00bfa6 940e da04 	CALL __PUTDP1_DEC
00bfa8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x94:
00bfa9 e8e5      	LDI  R30,LOW(133)
00bfaa 93e0 00a5 	STS  165,R30
00bfac eeed      	LDI  R30,LOW(237)
00bfad 93e0 00a4 	STS  164,R30
00bfaf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x95:
00bfb0 93ba      	ST   -Y,R27
00bfb1 93aa      	ST   -Y,R26
00bfb2 81e8      	LD   R30,Y
00bfb3 81f9      	LDD  R31,Y+1
00bfb4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x96:
00bfb5 b1e6      	IN   R30,0x6
00bfb6 7ce0      	ANDI R30,LOW(0xC0)
00bfb7 e0f0      	LDI  R31,0
00bfb8 940e d8ec 	CALL __ASRW2
00bfba 940e d8e8 	CALL __ASRW4
00bfbc 95e0      	COM  R30
00bfbd 95f0      	COM  R31
00bfbe 70e3      	ANDI R30,LOW(0x3)
00bfbf 70f0      	ANDI R31,HIGH(0x3)
00bfc0 9731      	SBIW R30,1
00bfc1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x97:
00bfc2 b1e3      	IN   R30,0x3
00bfc3 71e0      	ANDI R30,LOW(0x10)
00bfc4 e0f0      	LDI  R31,0
00bfc5 940e d8e8 	CALL __ASRW4
00bfc7 9730      	SBIW R30,0
00bfc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x98:
00bfc9 e0a5      	LDI  R26,LOW(5)
00bfca e0b0      	LDI  R27,0
00bfcb 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x99:
00bfcd b1e3      	IN   R30,0x3
00bfce 72e0      	ANDI R30,LOW(0x20)
00bfcf e0f0      	LDI  R31,0
00bfd0 95f5      	ASR  R31
00bfd1 95e7      	ROR  R30
00bfd2 940e d8e8 	CALL __ASRW4
00bfd4 9730      	SBIW R30,0
00bfd5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9A:
00bfd6 b1e3      	IN   R30,0x3
00bfd7 74e0      	ANDI R30,LOW(0x40)
00bfd8 e0f0      	LDI  R31,0
00bfd9 940e d8ec 	CALL __ASRW2
00bfdb 940e d8e8 	CALL __ASRW4
00bfdd 9730      	SBIW R30,0
00bfde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x9B:
00bfdf b1e3      	IN   R30,0x3
00bfe0 78e0      	ANDI R30,LOW(0x80)
00bfe1 e0f0      	LDI  R31,0
00bfe2 940e d8ea 	CALL __ASRW3
00bfe4 940e d8e8 	CALL __ASRW4
00bfe6 9730      	SBIW R30,0
00bfe7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x9C:
00bfe8 931a      	ST   -Y,R17
00bfe9 930a      	ST   -Y,R16
                +
00bfea e000     +LDI R16 , LOW ( 0 )
00bfeb e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00bfec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9D:
00bfed e0f0      	LDI  R31,0
00bfee 70f0      	ANDI R31,HIGH(0xFF)
00bfef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x9E:
00bff0 91a0 14e8 	LDS  R26,_adcBatt
00bff2 91b0 14e9 	LDS  R27,_adcBatt+1
00bff4 9180 14ea 	LDS  R24,_adcBatt+2
00bff6 9190 14eb 	LDS  R25,_adcBatt+3
00bff8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x9F:
00bff9 2766      	CLR  R22
00bffa 2777      	CLR  R23
00bffb 940e d753 	CALL __CDF1
00bffd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA0:
                +
00bffe ecad     +LDI R26 , LOW ( 0x3DCCCCCD )
00bfff ecbc     +LDI R27 , HIGH ( 0x3DCCCCCD )
00c000 ec8c     +LDI R24 , BYTE3 ( 0x3DCCCCCD )
00c001 e39d     +LDI R25 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD2N 0x3DCCCCCD
00c002 940e d7dd 	CALL __MULF12
00c004 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xA1:
00c005 940e d78d 	CALL __ADDF12
00c007 01df      	MOVW R26,R30
00c008 01cb      	MOVW R24,R22
                +
00c009 e0e0     +LDI R30 , LOW ( 0x41200000 )
00c00a e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c00b e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c00c e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c00d 940e d82b 	CALL __DIVF21
00c00f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xA2:
00c010 940e d7dd 	CALL __MULF12
00c012 940e da1a 	CALL __PUTD1S0
00c014 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xA3:
00c015 91e0 0108 	LDS  R30,264
00c017 7fe1      	ANDI R30,LOW(0xF1)
00c018 93e0 0108 	STS  264,R30
00c01a e0a8      	LDI  R26,LOW(264)
00c01b e0b1      	LDI  R27,HIGH(264)
00c01c 2e0a      	MOV  R0,R26
00c01d 91ac      	LD   R26,X
00c01e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xA4:
00c01f 0fee      	LSL  R30
00c020 2bea      	OR   R30,R26
00c021 2da0      	MOV  R26,R0
00c022 93ec      	ST   X,R30
00c023 e1a4      	LDI  R26,LOW(20)
00c024 e0b0      	LDI  R27,0
00c025 940c d6dd 	JMP  _delay_ms
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xA5:
00c027 e3a6      	LDI  R26,LOW(_adcData)
00c028 e1b4      	LDI  R27,HIGH(_adcData)
00c029 cc4c      	RJMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA6:
00c02a dfce      	RCALL SUBOPT_0x9F
00c02b 940e d9ff 	CALL __PUTDP1
00c02d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA7:
00c02e 940e d691 	CALL _i2c_start
00c030 eda0      	LDI  R26,LOW(208)
00c031 940c d6c5 	JMP  _i2c_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xA8:
00c033 940e d6c5 	CALL _i2c_write
00c035 940c d6a0 	JMP  _i2c_stop
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0xA9:
00c037 e0aa      	LDI  R26,LOW(10)
00c038 e0b0      	LDI  R27,0
00c039 940e d6dd 	CALL _delay_ms
00c03b e0e0      	LDI  R30,LOW(0)
00c03c e0f0      	LDI  R31,HIGH(0)
00c03d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:55 WORDS
                 SUBOPT_0xAA:
                +
00c03e 83ec     +STD Y + 4 , R30
00c03f 83fd     +STD Y + 4 + 1 , R31
00c040 836e     +STD Y + 4 + 2 , R22
00c041 837f     +STD Y + 4 + 3 , R23
                 	__PUTD1S 4
00c042 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0xAB:
                +
00c043 81ac     +LDD R26 , Y + 4
00c044 81bd     +LDD R27 , Y + 4 + 1
00c045 818e     +LDD R24 , Y + 4 + 2
00c046 819f     +LDD R25 , Y + 4 + 3
                 	__GETD2S 4
00c047 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xAC:
00c048 e0e8      	LDI  R30,LOW(8)
00c049 940e d8c7 	CALL __LSLD12
00c04b cff2      	RJMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xAD:
00c04c e0f0      	LDI  R31,0
00c04d dff5      	RCALL SUBOPT_0xAB
00c04e 940e d919 	CALL __CWD1
00c050 940e d894 	CALL __ADDD12
00c052 dfeb      	RCALL SUBOPT_0xAA
00c053 dfef      	RCALL SUBOPT_0xAB
00c054 cff3      	RJMP SUBOPT_0xAC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 23 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0xAE:
00c055 2fe1      	MOV  R30,R17
00c056 e0f0      	LDI  R31,0
00c057 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xAF:
00c058 940e d919 	CALL __CWD1
00c05a 940e d894 	CALL __ADDD12
00c05c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB0:
00c05d dfe0      	RCALL SUBOPT_0xAA
00c05e cefa      	RJMP SUBOPT_0x89
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB1:
                +
00c05f e3ec     +LDI R30 , LOW ( 0x3C )
00c060 e0f0     +LDI R31 , HIGH ( 0x3C )
00c061 e060     +LDI R22 , BYTE3 ( 0x3C )
00c062 e070     +LDI R23 , BYTE4 ( 0x3C )
                 	__GETD1N 0x3C
00c063 940e d990 	CALL __DIVD21U
00c065 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB2:
                +
00c066 83ee     +STD Y + 6 , R30
00c067 83ff     +STD Y + 6 + 1 , R31
00c068 8768     +STD Y + 6 + 2 , R22
00c069 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c06a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xB3:
                +
00c06b e3ac     +LDI R26 , LOW ( 0x3C )
00c06c e0b0     +LDI R27 , HIGH ( 0x3C )
00c06d e080     +LDI R24 , BYTE3 ( 0x3C )
00c06e e090     +LDI R25 , BYTE4 ( 0x3C )
                 	__GETD2N 0x3C
00c06f 940e d93a 	CALL __MULD12U
00c071 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xB4:
                +
00c072 83ea     +STD Y + 2 , R30
00c073 83fb     +STD Y + 2 + 1 , R31
00c074 836c     +STD Y + 2 + 2 , R22
00c075 837d     +STD Y + 2 + 3 , R23
                 	__PUTD1S 2
00c076 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0xB5:
                +
00c077 81ea     +LDD R30 , Y + 2
00c078 81fb     +LDD R31 , Y + 2 + 1
00c079 816c     +LDD R22 , Y + 2 + 2
00c07a 817d     +LDD R23 , Y + 2 + 3
                 	__GETD1S 2
00c07b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0xB6:
                +
00c07c 81aa     +LDD R26 , Y + 2
00c07d 81bb     +LDD R27 , Y + 2 + 1
00c07e 818c     +LDD R24 , Y + 2 + 2
00c07f 819d     +LDD R25 , Y + 2 + 3
                 	__GETD2S 2
00c080 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 26 TIMES, CODE SIZE REDUCTION:47 WORDS
                 SUBOPT_0xB7:
                +
00c081 81ee     +LDD R30 , Y + 6
00c082 81ff     +LDD R31 , Y + 6 + 1
00c083 8568     +LDD R22 , Y + 6 + 2
00c084 8579     +LDD R23 , Y + 6 + 3
                 	__GETD1S 6
00c085 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xB8:
                +
00c086 83ee     +STD Y + 6 , R30
00c087 83ff     +STD Y + 6 + 1 , R31
00c088 8768     +STD Y + 6 + 2 , R22
00c089 8779     +STD Y + 6 + 3 , R23
                 	__PUTD1S 6
00c08a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xB9:
00c08b dd92      	RCALL SUBOPT_0x59
                +
00c08c ebe5     +LDI R30 , LOW ( 0x5B5 )
00c08d e0f5     +LDI R31 , HIGH ( 0x5B5 )
00c08e e060     +LDI R22 , BYTE3 ( 0x5B5 )
00c08f e070     +LDI R23 , BYTE4 ( 0x5B5 )
                 	__GETD1N 0x5B5
00c090 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBA:
                +
00c091 8fee     +STD Y + 30 , R30
00c092 8fff     +STD Y + 30 + 1 , R31
00c093 a368     +STD Y + 30 + 2 , R22
00c094 a379     +STD Y + 30 + 3 , R23
                 	__PUTD1S 30
00c095 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xBB:
                +
00c096 8daa     +LDD R26 , Y + 26
00c097 8dbb     +LDD R27 , Y + 26 + 1
00c098 8d8c     +LDD R24 , Y + 26 + 2
00c099 8d9d     +LDD R25 , Y + 26 + 3
                 	__GETD2S 26
00c09a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xBC:
                +
00c09b 33ac     +CPI R26 , LOW ( 0x3C )
00c09c e0e0     +LDI R30 , HIGH ( 0x3C )
00c09d 07be     +CPC R27 , R30
00c09e e0e0     +LDI R30 , BYTE3 ( 0x3C )
00c09f 078e     +CPC R24 , R30
00c0a0 e0e0     +LDI R30 , BYTE4 ( 0x3C )
00c0a1 079e     +CPC R25 , R30
                 	__CPD2N 0x3C
00c0a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xBD:
                +
00c0a3 8dee     +LDD R30 , Y + 30
00c0a4 8dff     +LDD R31 , Y + 30 + 1
00c0a5 a168     +LDD R22 , Y + 30 + 2
00c0a6 a179     +LDD R23 , Y + 30 + 3
                 	__GETD1S 30
00c0a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xBE:
                +
00c0a8 5fef     +SUBI R30 , LOW ( - 1 )
00c0a9 4fff     +SBCI R31 , HIGH ( - 1 )
00c0aa 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c0ab 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__SUBD1N -1
00c0ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xBF:
                +
00c0ad 8dae     +LDD R26 , Y + 30
00c0ae 8dbf     +LDD R27 , Y + 30 + 1
00c0af a188     +LDD R24 , Y + 30 + 2
00c0b0 a199     +LDD R25 , Y + 30 + 3
                 	__GETD2S 30
00c0b1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC0:
                +
00c0b2 a1ee     +LDD R30 , Y + 38
00c0b3 a1ff     +LDD R31 , Y + 38 + 1
00c0b4 a568     +LDD R22 , Y + 38 + 2
00c0b5 a579     +LDD R23 , Y + 38 + 3
                 	__GETD1S 38
00c0b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC1:
                +
00c0b7 e6ad     +LDI R26 , LOW ( 0x16D )
00c0b8 e0b1     +LDI R27 , HIGH ( 0x16D )
00c0b9 e080     +LDI R24 , BYTE3 ( 0x16D )
00c0ba e090     +LDI R25 , BYTE4 ( 0x16D )
                 	__GETD2N 0x16D
00c0bb 940e d93a 	CALL __MULD12U
00c0bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xC2:
00c0be 940e da3b 	CALL __SWAPD12
00c0c0 940e d89e 	CALL __SUBD12
00c0c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC3:
                +
00c0c3 8bee     +STD Y + 22 , R30
00c0c4 8bff     +STD Y + 22 + 1 , R31
00c0c5 8f68     +STD Y + 22 + 2 , R22
00c0c6 8f79     +STD Y + 22 + 3 , R23
                 	__PUTD1S 22
00c0c7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xC4:
                +
00c0c8 89ee     +LDD R30 , Y + 22
00c0c9 89ff     +LDD R31 , Y + 22 + 1
00c0ca 8d68     +LDD R22 , Y + 22 + 2
00c0cb 8d79     +LDD R23 , Y + 22 + 3
                 	__GETD1S 22
00c0cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xC5:
                +
00c0cd a1ea     +LDD R30 , Y + 34
00c0ce a1fb     +LDD R31 , Y + 34 + 1
00c0cf a16c     +LDD R22 , Y + 34 + 2
00c0d0 a17d     +LDD R23 , Y + 34 + 3
                 	__GETD1S 34
00c0d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC6:
                +
00c0d2 30e1     +CPI R30 , LOW ( 0x1 )
00c0d3 e0a0     +LDI R26 , HIGH ( 0x1 )
00c0d4 07fa     +CPC R31 , R26
00c0d5 e0a0     +LDI R26 , BYTE3 ( 0x1 )
00c0d6 076a     +CPC R22 , R26
00c0d7 e0a0     +LDI R26 , BYTE4 ( 0x1 )
00c0d8 077a     +CPC R23 , R26
                 	__CPD1N 0x1
00c0d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC7:
                +
00c0da 30e2     +CPI R30 , LOW ( 0x2 )
00c0db e0a0     +LDI R26 , HIGH ( 0x2 )
00c0dc 07fa     +CPC R31 , R26
00c0dd e0a0     +LDI R26 , BYTE3 ( 0x2 )
00c0de 076a     +CPC R22 , R26
00c0df e0a0     +LDI R26 , BYTE4 ( 0x2 )
00c0e0 077a     +CPC R23 , R26
                 	__CPD1N 0x2
00c0e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC8:
                +
00c0e2 30e3     +CPI R30 , LOW ( 0x3 )
00c0e3 e0a0     +LDI R26 , HIGH ( 0x3 )
00c0e4 07fa     +CPC R31 , R26
00c0e5 e0a0     +LDI R26 , BYTE3 ( 0x3 )
00c0e6 076a     +CPC R22 , R26
00c0e7 e0a0     +LDI R26 , BYTE4 ( 0x3 )
00c0e8 077a     +CPC R23 , R26
                 	__CPD1N 0x3
00c0e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xC9:
                +
00c0ea 30e4     +CPI R30 , LOW ( 0x4 )
00c0eb e0a0     +LDI R26 , HIGH ( 0x4 )
00c0ec 07fa     +CPC R31 , R26
00c0ed e0a0     +LDI R26 , BYTE3 ( 0x4 )
00c0ee 076a     +CPC R22 , R26
00c0ef e0a0     +LDI R26 , BYTE4 ( 0x4 )
00c0f0 077a     +CPC R23 , R26
                 	__CPD1N 0x4
00c0f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCA:
                +
00c0f2 30e5     +CPI R30 , LOW ( 0x5 )
00c0f3 e0a0     +LDI R26 , HIGH ( 0x5 )
00c0f4 07fa     +CPC R31 , R26
00c0f5 e0a0     +LDI R26 , BYTE3 ( 0x5 )
00c0f6 076a     +CPC R22 , R26
00c0f7 e0a0     +LDI R26 , BYTE4 ( 0x5 )
00c0f8 077a     +CPC R23 , R26
                 	__CPD1N 0x5
00c0f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCB:
                +
00c0fa 30e6     +CPI R30 , LOW ( 0x6 )
00c0fb e0a0     +LDI R26 , HIGH ( 0x6 )
00c0fc 07fa     +CPC R31 , R26
00c0fd e0a0     +LDI R26 , BYTE3 ( 0x6 )
00c0fe 076a     +CPC R22 , R26
00c0ff e0a0     +LDI R26 , BYTE4 ( 0x6 )
00c100 077a     +CPC R23 , R26
                 	__CPD1N 0x6
00c101 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCC:
                +
00c102 30e7     +CPI R30 , LOW ( 0x7 )
00c103 e0a0     +LDI R26 , HIGH ( 0x7 )
00c104 07fa     +CPC R31 , R26
00c105 e0a0     +LDI R26 , BYTE3 ( 0x7 )
00c106 076a     +CPC R22 , R26
00c107 e0a0     +LDI R26 , BYTE4 ( 0x7 )
00c108 077a     +CPC R23 , R26
                 	__CPD1N 0x7
00c109 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCD:
                +
00c10a 30e8     +CPI R30 , LOW ( 0x8 )
00c10b e0a0     +LDI R26 , HIGH ( 0x8 )
00c10c 07fa     +CPC R31 , R26
00c10d e0a0     +LDI R26 , BYTE3 ( 0x8 )
00c10e 076a     +CPC R22 , R26
00c10f e0a0     +LDI R26 , BYTE4 ( 0x8 )
00c110 077a     +CPC R23 , R26
                 	__CPD1N 0x8
00c111 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCE:
                +
00c112 30e9     +CPI R30 , LOW ( 0x9 )
00c113 e0a0     +LDI R26 , HIGH ( 0x9 )
00c114 07fa     +CPC R31 , R26
00c115 e0a0     +LDI R26 , BYTE3 ( 0x9 )
00c116 076a     +CPC R22 , R26
00c117 e0a0     +LDI R26 , BYTE4 ( 0x9 )
00c118 077a     +CPC R23 , R26
                 	__CPD1N 0x9
00c119 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xCF:
                +
00c11a 30ea     +CPI R30 , LOW ( 0xA )
00c11b e0a0     +LDI R26 , HIGH ( 0xA )
00c11c 07fa     +CPC R31 , R26
00c11d e0a0     +LDI R26 , BYTE3 ( 0xA )
00c11e 076a     +CPC R22 , R26
00c11f e0a0     +LDI R26 , BYTE4 ( 0xA )
00c120 077a     +CPC R23 , R26
                 	__CPD1N 0xA
00c121 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD0:
                +
00c122 30eb     +CPI R30 , LOW ( 0xB )
00c123 e0a0     +LDI R26 , HIGH ( 0xB )
00c124 07fa     +CPC R31 , R26
00c125 e0a0     +LDI R26 , BYTE3 ( 0xB )
00c126 076a     +CPC R22 , R26
00c127 e0a0     +LDI R26 , BYTE4 ( 0xB )
00c128 077a     +CPC R23 , R26
                 	__CPD1N 0xB
00c129 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD1:
                +
00c12a 30ec     +CPI R30 , LOW ( 0xC )
00c12b e0a0     +LDI R26 , HIGH ( 0xC )
00c12c 07fa     +CPC R31 , R26
00c12d e0a0     +LDI R26 , BYTE3 ( 0xC )
00c12e 076a     +CPC R22 , R26
00c12f e0a0     +LDI R26 , BYTE4 ( 0xC )
00c130 077a     +CPC R23 , R26
                 	__CPD1N 0xC
00c131 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0xD2:
                +
00c132 30a3     +CPI R26 , LOW ( 0x3 )
00c133 e0e0     +LDI R30 , HIGH ( 0x3 )
00c134 07be     +CPC R27 , R30
00c135 e0e0     +LDI R30 , BYTE3 ( 0x3 )
00c136 078e     +CPC R24 , R30
00c137 e0e0     +LDI R30 , BYTE4 ( 0x3 )
00c138 079e     +CPC R25 , R30
                 	__CPD2N 0x3
00c139 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xD3:
                +
00c13a 8dea     +LDD R30 , Y + 26
00c13b 8dfb     +LDD R31 , Y + 26 + 1
00c13c 8d6c     +LDD R22 , Y + 26 + 2
00c13d 8d7d     +LDD R23 , Y + 26 + 3
                 	__GETD1S 26
00c13e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xD4:
                +
00c13f 89ae     +LDD R26 , Y + 22
00c140 89bf     +LDD R27 , Y + 22 + 1
00c141 8d88     +LDD R24 , Y + 22 + 2
00c142 8d99     +LDD R25 , Y + 22 + 3
                 	__GETD2S 22
00c143 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0xD5:
                +
00c144 5fef     +SUBI R30 , LOW ( - 1 )
00c145 4fff     +SBCI R31 , HIGH ( - 1 )
00c146 4f6f     +SBCI R22 , BYTE3 ( - 1 )
00c147 4f7f     +SBCI R23 , BYTE4 ( - 1 )
                 	__ADDD1N 1
00c148 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0xD6:
                +
00c149 89ea     +LDD R30 , Y + 18
00c14a 89fb     +LDD R31 , Y + 18 + 1
00c14b 896c     +LDD R22 , Y + 18 + 2
00c14c 897d     +LDD R23 , Y + 18 + 3
                 	__GETD1S 18
00c14d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD7:
                +
00c14e 85ea     +LDD R30 , Y + 10
00c14f 85fb     +LDD R31 , Y + 10 + 1
00c150 856c     +LDD R22 , Y + 10 + 2
00c151 857d     +LDD R23 , Y + 10 + 3
                 	__GETD1S 10
00c152 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0xD8:
00c153 e0e0      	LDI  R30,LOW(0)
00c154 e0f0      	LDI  R31,HIGH(0)
00c155 8119      	LDD  R17,Y+1
00c156 8108      	LDD  R16,Y+0
00c157 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xD9:
00c158 940e da1a 	CALL __PUTD1S0
00c15a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xDA:
00c15b de10      	RCALL SUBOPT_0x8C
00c15c ce01      	RJMP SUBOPT_0x8A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0xDB:
                +
00c15d 85a8     +LDD R26 , Y + 8
00c15e 85b9     +LDD R27 , Y + 8 + 1
00c15f 858a     +LDD R24 , Y + 8 + 2
00c160 859b     +LDD R25 , Y + 8 + 3
                 	__GETD2S 8
00c161 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 33 TIMES, CODE SIZE REDUCTION:61 WORDS
                 SUBOPT_0xDC:
                +
00c162 85ec     +LDD R30 , Y + 12
00c163 85fd     +LDD R31 , Y + 12 + 1
00c164 856e     +LDD R22 , Y + 12 + 2
00c165 857f     +LDD R23 , Y + 12 + 3
                 	__GETD1S 12
00c166 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDD:
                +
00c167 50e1     +SUBI R30 , LOW ( 1 )
00c168 40f0     +SBCI R31 , HIGH ( 1 )
00c169 4060     +SBCI R22 , BYTE3 ( 1 )
00c16a 4070     +SBCI R23 , BYTE4 ( 1 )
                 	__SUBD1N 1
00c16b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0xDE:
00c16c da94      	RCALL SUBOPT_0xC
                +
00c16d e0a8     +LDI R26 , LOW ( 0x708 )
00c16e e0b7     +LDI R27 , HIGH ( 0x708 )
00c16f e080     +LDI R24 , BYTE3 ( 0x708 )
00c170 e090     +LDI R25 , BYTE4 ( 0x708 )
                 	__GETD2N 0x708
00c171 940e d93a 	CALL __MULD12U
00c173 cfe7      	RJMP SUBOPT_0xDA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xDF:
                +
00c174 89ec     +LDD R30 , Y + 20
00c175 89fd     +LDD R31 , Y + 20 + 1
00c176 896e     +LDD R22 , Y + 20 + 2
00c177 897f     +LDD R23 , Y + 20 + 3
                 	__GETD1S 20
00c178 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE0:
                +
00c179 8de8     +LDD R30 , Y + 24
00c17a 8df9     +LDD R31 , Y + 24 + 1
00c17b 8d6a     +LDD R22 , Y + 24 + 2
00c17c 8d7b     +LDD R23 , Y + 24 + 3
                 	__GETD1S 24
00c17d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE1:
00c17e dfe3      	RCALL SUBOPT_0xDC
00c17f dfdd      	RCALL SUBOPT_0xDB
00c180 940e da8f 	CALL __CPD12
00c182 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE2:
00c183 da78      	RCALL SUBOPT_0xB
00c184 dc4e      	RCALL SUBOPT_0x4F
00c185 940e d89e 	CALL __SUBD12
00c187 ceb6      	RJMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE3:
00c188 dc4a      	RCALL SUBOPT_0x4F
00c189 da72      	RCALL SUBOPT_0xB
00c18a 940e da8f 	CALL __CPD12
00c18c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xE4:
00c18d dfcf      	RCALL SUBOPT_0xDB
00c18e dfd3      	RCALL SUBOPT_0xDC
00c18f 940e d89e 	CALL __SUBD12
00c191 ceac      	RJMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0xE5:
00c192 deb0      	RCALL SUBOPT_0xAB
                +
00c193 30aa     +CPI R26 , LOW ( 0xA )
00c194 e0e0     +LDI R30 , HIGH ( 0xA )
00c195 07be     +CPC R27 , R30
00c196 e0e0     +LDI R30 , BYTE3 ( 0xA )
00c197 078e     +CPC R24 , R30
00c198 e0e0     +LDI R30 , BYTE4 ( 0xA )
00c199 079e     +CPC R25 , R30
                 	__CPD2N 0xA
00c19a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE6:
                +
00c19b eee6     +LDI R30 , LOW ( 2 * _0xC0000 + ( 0 ) )
00c19c e1f1     +LDI R31 , HIGH ( 2 * _0xC0000 + ( 0 ) )
00c19d e060     +LDI R22 , BYTE3 ( 2 * _0xC0000 + ( 0 ) )
00c19e e070     +LDI R23 , BYTE4 ( 2 * _0xC0000 + ( 0 ) )
                 	__POINTD1FN _0xC0000,0
00c19f cdcf      	RJMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xE7:
00c1a0 940e da29 	CALL __PUTPARD1
00c1a2 dfd1      	RCALL SUBOPT_0xDF
00c1a3 cc84      	RJMP SUBOPT_0x5B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:14 WORDS
                 SUBOPT_0xE8:
00c1a4 85ec      	LDD  R30,Y+12
00c1a5 2f1e      	MOV  R17,R30
00c1a6 da55      	RCALL SUBOPT_0xB
00c1a7 e0e8      	LDI  R30,LOW(8)
00c1a8 940e d8d3 	CALL __LSRD12
00c1aa 2f0e      	MOV  R16,R30
00c1ab dfb6      	RCALL SUBOPT_0xDC
00c1ac 940e d909 	CALL __LSRD16
00c1ae 2f3e      	MOV  R19,R30
00c1af da4c      	RCALL SUBOPT_0xB
00c1b0 e1e8      	LDI  R30,LOW(24)
00c1b1 940e d8d3 	CALL __LSRD12
00c1b3 2f2e      	MOV  R18,R30
00c1b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0xE9:
00c1b5 e0a0      	LDI  R26,LOW(0)
00c1b6 940e d6c5 	CALL _i2c_write
00c1b8 2fa1      	MOV  R26,R17
00c1b9 940e d6c5 	CALL _i2c_write
00c1bb 2fa0      	MOV  R26,R16
00c1bc 940e d6c5 	CALL _i2c_write
00c1be 2fa3      	MOV  R26,R19
00c1bf 940e d6c5 	CALL _i2c_write
00c1c1 2fa2      	MOV  R26,R18
00c1c2 ce70      	RJMP SUBOPT_0xA8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEA:
00c1c3 93ba      	ST   -Y,R27
00c1c4 93aa      	ST   -Y,R26
00c1c5 972c      	SBIW R28,12
00c1c6 940e da9b 	CALL __SAVELOCR4
00c1c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0xEB:
00c1c9 940e da29 	CALL __PUTPARD1
00c1cb 89ec      	LDD  R30,Y+20
00c1cc 89fd      	LDD  R31,Y+20+1
00c1cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 44 TIMES, CODE SIZE REDUCTION:169 WORDS
                 SUBOPT_0xEC:
00c1ce 940e d919 	CALL __CWD1
00c1d0 940e da29 	CALL __PUTPARD1
00c1d2 ca59      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0xED:
                +
00c1d3 87ec     +STD Y + 12 , R30
00c1d4 87fd     +STD Y + 12 + 1 , R31
00c1d5 876e     +STD Y + 12 + 2 , R22
00c1d6 877f     +STD Y + 12 + 3 , R23
                 	__PUTD1S 12
00c1d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEE:
00c1d8 e3ac      	LDI  R26,LOW(60)
00c1d9 e0b0      	LDI  R27,HIGH(60)
00c1da 940e d960 	CALL __MULW12
00c1dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xEF:
00c1dd dff5      	RCALL SUBOPT_0xED
00c1de cf83      	RJMP SUBOPT_0xDC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF0:
00c1df 93e0 1430 	STS  _raw_rtc,R30
00c1e1 93f0 1431 	STS  _raw_rtc+1,R31
00c1e3 9360 1432 	STS  _raw_rtc+2,R22
00c1e5 9370 1433 	STS  _raw_rtc+3,R23
00c1e7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF1:
00c1e8 93ba      	ST   -Y,R27
00c1e9 93aa      	ST   -Y,R26
00c1ea 9724      	SBIW R28,4
00c1eb 931a      	ST   -Y,R17
00c1ec 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF2:
00c1ed de84      	RCALL SUBOPT_0xB4
00c1ee ce8d      	RJMP SUBOPT_0xB6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0xF3:
00c1ef de87      	RCALL SUBOPT_0xB5
00c1f0 940e da29 	CALL __PUTPARD1
00c1f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xF4:
00c1f3 940e da29 	CALL __PUTPARD1
00c1f5 8dec      	LDD  R30,Y+28
00c1f6 8dfd      	LDD  R31,Y+28+1
00c1f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF5:
00c1f8 df80      	RCALL SUBOPT_0xE0
00c1f9 940e da29 	CALL __PUTPARD1
00c1fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF6:
                +
00c1fc a5e8     +LDD R30 , Y + 40
00c1fd a5f9     +LDD R31 , Y + 40 + 1
00c1fe a56a     +LDD R22 , Y + 40 + 2
00c1ff a57b     +LDD R23 , Y + 40 + 3
                 	__GETD1S 40
00c200 940e da29 	CALL __PUTPARD1
00c202 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0xF7:
00c203 e0a0      	LDI  R26,LOW(0)
00c204 e0b0      	LDI  R27,0
00c205 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0xF8:
00c206 93fa      	ST   -Y,R31
00c207 93ea      	ST   -Y,R30
00c208 e0e0      	LDI  R30,LOW(0)
00c209 93ea      	ST   -Y,R30
00c20a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xF9:
00c20b eaa1      	LDI  R26,LOW(161)
00c20c e0b0      	LDI  R27,0
00c20d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0xFA:
00c20e 0fa0      	ADD  R26,R16
00c20f 1fb1      	ADC  R27,R17
00c210 940e da50 	CALL __EEPROMRDB
00c212 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0xFB:
00c213 0fe0      	ADD  R30,R16
00c214 1ff1      	ADC  R31,R17
00c215 01df      	MOVW R26,R30
00c216 940e da50 	CALL __EEPROMRDB
00c218 01d0      	MOVW R26,R0
00c219 93ec      	ST   X,R30
00c21a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFC:
00c21b 81ea      	LDD  R30,Y+2
00c21c 81fb      	LDD  R31,Y+2+1
00c21d 5be0      	SUBI R30,LOW(-80)
00c21e 4fff      	SBCI R31,HIGH(-80)
00c21f 0fe0      	ADD  R30,R16
00c220 1ff1      	ADC  R31,R17
00c221 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFD:
00c222 81ea      	LDD  R30,Y+2
00c223 81fb      	LDD  R31,Y+2+1
00c224 59ec      	SUBI R30,LOW(-100)
00c225 4fff      	SBCI R31,HIGH(-100)
00c226 0fe0      	ADD  R30,R16
00c227 1ff1      	ADC  R31,R17
00c228 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFE:
00c229 81ea      	LDD  R30,Y+2
00c22a 81fb      	LDD  R31,Y+2+1
00c22b 57e4      	SUBI R30,LOW(-140)
00c22c 4fff      	SBCI R31,HIGH(-140)
00c22d 0fe0      	ADD  R30,R16
00c22e 1ff1      	ADC  R31,R17
00c22f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0xFF:
00c230 93ec      	ST   X,R30
00c231 81aa      	LDD  R26,Y+2
00c232 81bb      	LDD  R27,Y+2+1
00c233 9611      	ADIW R26,1
00c234 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x100:
00c235 93ec      	ST   X,R30
00c236 81aa      	LDD  R26,Y+2
00c237 81bb      	LDD  R27,Y+2+1
00c238 9612      	ADIW R26,2
00c239 e0e0      	LDI  R30,LOW(0)
00c23a 93ec      	ST   X,R30
                +
00c23b e000     +LDI R16 , LOW ( 0 )
00c23c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c23d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x101:
00c23e 81ea      	LDD  R30,Y+2
00c23f 81fb      	LDD  R31,Y+2+1
00c240 9633      	ADIW R30,3
00c241 0fe0      	ADD  R30,R16
00c242 1ff1      	ADC  R31,R17
00c243 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x102:
00c244 940e da50 	CALL __EEPROMRDB
00c246 81aa      	LDD  R26,Y+2
00c247 81bb      	LDD  R27,Y+2+1
00c248 93ec      	ST   X,R30
00c249 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x103:
00c24a 940e da50 	CALL __EEPROMRDB
                +
00c24c 81aa     +LDD R26 , Y + 2
00c24d 81bb     +LDD R27 , Y + 2 + 1
00c24e 9611     +ADIW R26 , 1
00c24f 93ec     +ST X , R30
                 	__PUTB1SNS 2,1
00c250 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x104:
00c251 940e da50 	CALL __EEPROMRDB
                +
00c253 81aa     +LDD R26 , Y + 2
00c254 81bb     +LDD R27 , Y + 2 + 1
00c255 9612     +ADIW R26 , 2
00c256 93ec     +ST X , R30
                 	__PUTB1SNS 2,2
00c257 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x105:
00c258 940e da29 	CALL __PUTPARD1
00c25a 81ae      	LDD  R26,Y+6
00c25b 81bf      	LDD  R27,Y+6+1
00c25c 91ec      	LD   R30,X
00c25d ca6e      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x106:
00c25e 940e da29 	CALL __PUTPARD1
00c260 81ee      	LDD  R30,Y+6
00c261 81ff      	LDD  R31,Y+6+1
00c262 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x107:
                +
00c263 e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c264 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c265 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c266 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c267 cff6      	RJMP SUBOPT_0x106
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x108:
00c268 9633      	ADIW R30,3
00c269 0fe0      	ADD  R30,R16
00c26a 1ff1      	ADC  R31,R17
00c26b 81e0      	LD   R30,Z
00c26c ca5f      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x109:
                +
00c26d e2e1     +LDI R30 , LOW ( 2 * _0xE0000 + ( 51 ) )
00c26e e1f3     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 51 ) )
00c26f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 51 ) )
00c270 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 51 ) )
                 	__POINTD1FN _0xE0000,51
00c271 c948      	RJMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10A:
00c272 93ba      	ST   -Y,R27
00c273 93aa      	ST   -Y,R26
00c274 81ab      	LDD  R26,Y+3
00c275 23aa      	TST  R26
00c276 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x10B:
00c277 93ed      	ST   X+,R30
00c278 93fc      	ST   X,R31
00c279 81a8      	LD   R26,Y
00c27a 81b9      	LDD  R27,Y+1
00c27b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x10C:
00c27c e0e0      	LDI  R30,LOW(0)
00c27d 93ec      	ST   X,R30
00c27e 81a8      	LD   R26,Y
00c27f 81b9      	LDD  R27,Y+1
00c280 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x10D:
                +
00c281 e0e0     +LDI R30 , LOW ( 0x41200000 )
00c282 e0f0     +LDI R31 , HIGH ( 0x41200000 )
00c283 e260     +LDI R22 , BYTE3 ( 0x41200000 )
00c284 e471     +LDI R23 , BYTE4 ( 0x41200000 )
                 	__GETD1N 0x41200000
00c285 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 30 TIMES, CODE SIZE REDUCTION:84 WORDS
                 SUBOPT_0x10E:
00c286 81aa      	LDD  R26,Y+2
00c287 81bb      	LDD  R27,Y+2+1
00c288 e1ed      	LDI  R30,LOW(29)
00c289 940e d95a 	CALL __MULB1W2U
00c28b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x10F:
                +
00c28c 54ee     +SUBI R30 , LOW ( - _config_sens - ( 9 ) )
00c28d 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 9 ) )
                 	__ADDW1MN _config_sens,9
00c28e 01df      	MOVW R26,R30
00c28f 940e da48 	CALL __EEPROMRDD
00c291 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x110:
                +
00c292 54ea     +SUBI R30 , LOW ( - _config_sens - ( 13 ) )
00c293 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 13 ) )
                 	__ADDW1MN _config_sens,13
00c294 01df      	MOVW R26,R30
00c295 940e da4c 	CALL __EEPROMRDW
00c297 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x111:
                +
00c298 54e8     +SUBI R30 , LOW ( - _config_sens - ( 15 ) )
00c299 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 15 ) )
                 	__ADDW1MN _config_sens,15
00c29a 01df      	MOVW R26,R30
00c29b 940e da48 	CALL __EEPROMRDD
00c29d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x112:
                +
00c29e 54e4     +SUBI R30 , LOW ( - _config_sens - ( 19 ) )
00c29f 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 19 ) )
                 	__ADDW1MN _config_sens,19
00c2a0 01df      	MOVW R26,R30
00c2a1 940e da48 	CALL __EEPROMRDD
00c2a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x113:
                +
00c2a4 54e0     +SUBI R30 , LOW ( - _config_sens - ( 23 ) )
00c2a5 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 23 ) )
                 	__ADDW1MN _config_sens,23
00c2a6 01df      	MOVW R26,R30
00c2a7 940e da4c 	CALL __EEPROMRDW
00c2a9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x114:
                +
00c2aa 53ee     +SUBI R30 , LOW ( - _config_sens - ( 25 ) )
00c2ab 4fff     +SBCI R31 , HIGH ( - _config_sens - ( 25 ) )
                 	__ADDW1MN _config_sens,25
00c2ac 01df      	MOVW R26,R30
00c2ad 940e da48 	CALL __EEPROMRDD
00c2af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x115:
00c2b0 e0e0      	LDI  R30,LOW(0)
00c2b1 e0f0      	LDI  R31,HIGH(0)
00c2b2 93ed      	ST   X+,R30
00c2b3 93fc      	ST   X,R31
00c2b4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x116:
00c2b5 81aa      	LDD  R26,Y+2
00c2b6 81bb      	LDD  R27,Y+2+1
00c2b7 e0e3      	LDI  R30,LOW(3)
00c2b8 940e d95a 	CALL __MULB1W2U
00c2ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x117:
00c2bb 01df      	MOVW R26,R30
00c2bc 940e da50 	CALL __EEPROMRDB
00c2be 81a8      	LD   R26,Y
00c2bf 81b9      	LDD  R27,Y+1
00c2c0 93ec      	ST   X,R30
00c2c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x118:
00c2c2 940e da4c 	CALL __EEPROMRDW
                +
00c2c4 81a8     +LDD R26 , Y + 0
00c2c5 81b9     +LDD R27 , Y + 0 + 1
00c2c6 9611     +ADIW R26 , 1
00c2c7 93ed     +ST X + , R30
00c2c8 93fc     +ST X , R31
                 	__PUTW1SNS 0,1
00c2c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x119:
00c2ca 940e da29 	CALL __PUTPARD1
00c2cc 85e8      	LDD  R30,Y+8
00c2cd 85f9      	LDD  R31,Y+8+1
00c2ce ceff      	RJMP SUBOPT_0xEC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x11A:
00c2cf 81ac      	LDD  R26,Y+4
00c2d0 81bd      	LDD  R27,Y+4+1
00c2d1 e2e6      	LDI  R30,LOW(38)
00c2d2 940e d95a 	CALL __MULB1W2U
00c2d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x11B:
00c2d5 940e da29 	CALL __PUTPARD1
00c2d7 85a8      	LDD  R26,Y+8
00c2d8 85b9      	LDD  R27,Y+8+1
00c2d9 e2e6      	LDI  R30,LOW(38)
00c2da 940e d95a 	CALL __MULB1W2U
00c2dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11C:
00c2dd 59e6      	SUBI R30,LOW(-_config_dout)
00c2de 4ffe      	SBCI R31,HIGH(-_config_dout)
00c2df 01df      	MOVW R26,R30
00c2e0 940e da50 	CALL __EEPROMRDB
00c2e2 c9e9      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x11D:
                +
00c2e3 59e5     +SUBI R30 , LOW ( - _config_dout - ( 1 ) )
00c2e4 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 1 ) )
                 	__ADDW1MN _config_dout,1
00c2e5 01df      	MOVW R26,R30
00c2e6 940e da50 	CALL __EEPROMRDB
00c2e8 c9e3      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x11E:
                +
00c2e9 59e4     +SUBI R30 , LOW ( - _config_dout - ( 2 ) )
00c2ea 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 2 ) )
                 	__ADDW1MN _config_dout,2
00c2eb 01df      	MOVW R26,R30
00c2ec 940e da50 	CALL __EEPROMRDB
00c2ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x11F:
00c2ef 01d8      	MOVW R26,R16
00c2f0 e0f0      	LDI  R31,0
00c2f1 17ae      	CP   R26,R30
00c2f2 07bf      	CPC  R27,R31
00c2f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x120:
                +
00c2f4 59e3     +SUBI R30 , LOW ( - _config_dout - ( 3 ) )
00c2f5 4ffe     +SBCI R31 , HIGH ( - _config_dout - ( 3 ) )
                 	__ADDW1MN _config_dout,3
00c2f6 0fe0      	ADD  R30,R16
00c2f7 1ff1      	ADC  R31,R17
00c2f8 01df      	MOVW R26,R30
00c2f9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x121:
00c2fa 81aa      	LDD  R26,Y+2
00c2fb 81bb      	LDD  R27,Y+2+1
00c2fc e0e5      	LDI  R30,LOW(5)
00c2fd 940e d95a 	CALL __MULB1W2U
00c2ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x122:
00c300 81ea      	LDD  R30,Y+2
00c301 81fb      	LDD  R31,Y+2+1
00c302 9636      	ADIW R30,6
00c303 0fe0      	ADD  R30,R16
00c304 1ff1      	ADC  R31,R17
00c305 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x123:
00c306 81ac      	LDD  R26,Y+4
00c307 81bd      	LDD  R27,Y+4+1
00c308 e2e9      	LDI  R30,LOW(41)
00c309 940e d95a 	CALL __MULB1W2U
00c30b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x124:
                +
00c30c 58e3     +SUBI R30 , LOW ( - _config_aout - ( 5 ) )
00c30d 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 5 ) )
                 	__ADDW1MN _config_aout,5
00c30e 01df      	MOVW R26,R30
00c30f 940e da50 	CALL __EEPROMRDB
00c311 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x125:
                +
00c312 58e2     +SUBI R30 , LOW ( - _config_aout - ( 6 ) )
00c313 4ffd     +SBCI R31 , HIGH ( - _config_aout - ( 6 ) )
                 	__ADDW1MN _config_aout,6
00c314 0fe0      	ADD  R30,R16
00c315 1ff1      	ADC  R31,R17
00c316 01df      	MOVW R26,R30
00c317 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x126:
00c318 81ee      	LDD  R30,Y+6
00c319 81ff      	LDD  R31,Y+6+1
00c31a 9632      	ADIW R30,2
00c31b 0fe0      	ADD  R30,R16
00c31c 1ff1      	ADC  R31,R17
00c31d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x127:
00c31e 01de      	MOVW R26,R28
00c31f 9612      	ADIW R26,2
00c320 0fa0      	ADD  R26,R16
00c321 1fb1      	ADC  R27,R17
00c322 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x128:
                +
00c323 e0a9     +LDI R26 , LOW ( _config_buzz + ( 1 ) )
00c324 e0b5     +LDI R27 , HIGH ( _config_buzz + ( 1 ) )
                 	__POINTW2MN _config_buzz,1
00c325 940e da50 	CALL __EEPROMRDB
00c327 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 24 TIMES, CODE SIZE REDUCTION:43 WORDS
                 SUBOPT_0x129:
00c328 940e da29 	CALL __PUTPARD1
00c32a 85aa      	LDD  R26,Y+10
00c32b 85bb      	LDD  R27,Y+10+1
00c32c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 37 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x12A:
00c32d 940e da29 	CALL __PUTPARD1
00c32f 85ea      	LDD  R30,Y+10
00c330 85fb      	LDD  R31,Y+10+1
00c331 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12B:
                +
00c332 e1e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 295 ) )
00c333 e1f4     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 295 ) )
00c334 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 295 ) )
00c335 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 295 ) )
                 	__POINTD1FN _0xE0000,295
00c336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12C:
00c337 9632      	ADIW R30,2
00c338 0fe0      	ADD  R30,R16
00c339 1ff1      	ADC  R31,R17
00c33a 81e0      	LD   R30,Z
00c33b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x12D:
00c33c 940e da29 	CALL __PUTPARD1
00c33e 81ac      	LDD  R26,Y+4
00c33f 81bd      	LDD  R27,Y+4+1
00c340 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x12E:
00c341 940e d9f4 	CALL __GETD1P
00c343 940e da29 	CALL __PUTPARD1
00c345 c8e6      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x12F:
00c346 940e d9f0 	CALL __GETW1P
00c348 ce85      	RJMP SUBOPT_0xEC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x130:
00c349 940e da29 	CALL __PUTPARD1
00c34b 81ec      	LDD  R30,Y+4
00c34c 81fd      	LDD  R31,Y+4+1
00c34d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x131:
                +
00c34e 81a6     +LDD R26 , Z + 6
00c34f 81b7     +LDD R27 , Z + 6 + 1
00c350 8580     +LDD R24 , Z + 6 + 2
00c351 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00c352 940e da2e 	CALL __PUTPARD2
00c354 c8d7      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x132:
                +
00c355 85a2     +LDD R26 , Z + 10
00c356 85b3     +LDD R27 , Z + 10 + 1
00c357 8584     +LDD R24 , Z + 10 + 2
00c358 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00c359 940e da2e 	CALL __PUTPARD2
00c35b c8d0      	RJMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x133:
00c35c 0fae      	ADD  R26,R30
00c35d 1fbf      	ADC  R27,R31
00c35e 91ec      	LD   R30,X
00c35f 01d0      	MOVW R26,R0
00c360 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x134:
00c361 91ec      	LD   R30,X
00c362 01d0      	MOVW R26,R0
00c363 940e da6c 	CALL __EEPROMWRB
00c365 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x135:
00c366 e0e1      	LDI  R30,LOW(1)
00c367 940e da6c 	CALL __EEPROMWRB
00c369 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x136:
00c36a 940e da50 	CALL __EEPROMRDB
00c36c c95f      	RJMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x137:
                +
00c36d efeb     +LDI R30 , LOW ( 2 * _0xE0000 + ( 1805 ) )
00c36e e1f9     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 1805 ) )
00c36f e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 1805 ) )
00c370 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 1805 ) )
                 	__POINTD1FN _0xE0000,1805
00c371 940e da29 	CALL __PUTPARD1
00c373 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x138:
00c374 81a8      	LD   R26,Y
00c375 81b9      	LDD  R27,Y+1
00c376 940e d9f0 	CALL __GETW1P
00c378 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x139:
00c379 01d0      	MOVW R26,R0
00c37a 940e da64 	CALL __EEPROMWRW
00c37c cf09      	RJMP SUBOPT_0x10E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x13A:
00c37d 940e d9f0 	CALL __GETW1P
00c37f cff9      	RJMP SUBOPT_0x139
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x13B:
00c380 940e da6c 	CALL __EEPROMWRB
00c382 cf03      	RJMP SUBOPT_0x10E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x13C:
00c383 940e d9f4 	CALL __GETD1P
00c385 01d0      	MOVW R26,R0
00c386 940e da5c 	CALL __EEPROMWRD
00c388 cefd      	RJMP SUBOPT_0x10E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x13D:
00c389 940e d9f4 	CALL __GETD1P
00c38b 01d0      	MOVW R26,R0
00c38c 940e da5c 	CALL __EEPROMWRD
00c38e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:52 WORDS
                 SUBOPT_0x13E:
00c38f 940e da29 	CALL __PUTPARD1
00c391 81ae      	LDD  R26,Y+6
00c392 81bf      	LDD  R27,Y+6+1
00c393 e1ed      	LDI  R30,LOW(29)
00c394 940e d95a 	CALL __MULB1W2U
00c396 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x13F:
00c397 01df      	MOVW R26,R30
00c398 940e da4c 	CALL __EEPROMRDW
00c39a c97d      	RJMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x140:
00c39b 2766      	CLR  R22
00c39c 2777      	CLR  R23
00c39d c8ec      	RJMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x141:
00c39e 010f      	MOVW R0,R30
00c39f 81a8      	LD   R26,Y
00c3a0 81b9      	LDD  R27,Y+1
00c3a1 9611      	ADIW R26,1
00c3a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x142:
00c3a3 940e d9f0 	CALL __GETW1P
00c3a5 01d0      	MOVW R26,R0
00c3a6 940e da64 	CALL __EEPROMWRW
00c3a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x143:
                +
00c3a9 e0ea     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2332 ) )
00c3aa e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2332 ) )
00c3ab e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2332 ) )
00c3ac e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2332 ) )
                 	__POINTD1FN _0xE0000,2332
00c3ad ceb0      	RJMP SUBOPT_0x106
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x144:
                +
00c3ae e2e5     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2359 ) )
00c3af e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2359 ) )
00c3b0 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2359 ) )
00c3b1 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2359 ) )
                 	__POINTD1FN _0xE0000,2359
00c3b2 940e da29 	CALL __PUTPARD1
00c3b4 81ae      	LDD  R26,Y+6
00c3b5 81bf      	LDD  R27,Y+6+1
00c3b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x145:
00c3b7 940e da29 	CALL __PUTPARD1
00c3b9 81ae      	LDD  R26,Y+6
00c3ba 81bf      	LDD  R27,Y+6+1
00c3bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x146:
00c3bc 940e da6c 	CALL __EEPROMWRB
00c3be cf10      	RJMP SUBOPT_0x11A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x147:
00c3bf 940e da6c 	CALL __EEPROMWRB
                +
00c3c1 ebee     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2512 ) )
00c3c2 e1fc     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2512 ) )
00c3c3 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2512 ) )
00c3c4 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2512 ) )
                 	__POINTD1FN _0xE0000,2512
00c3c5 cf04      	RJMP SUBOPT_0x119
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x148:
                +
00c3c6 e1e9     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2603 ) )
00c3c7 e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2603 ) )
00c3c8 e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2603 ) )
00c3c9 e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2603 ) )
                 	__POINTD1FN _0xE0000,2603
00c3ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x149:
                +
00c3cb e3e4     +LDI R30 , LOW ( 2 * _0xE0000 + ( 2630 ) )
00c3cc e1fd     +LDI R31 , HIGH ( 2 * _0xE0000 + ( 2630 ) )
00c3cd e060     +LDI R22 , BYTE3 ( 2 * _0xE0000 + ( 2630 ) )
00c3ce e070     +LDI R23 , BYTE4 ( 2 * _0xE0000 + ( 2630 ) )
                 	__POINTD1FN _0xE0000,2630
00c3cf 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x14A:
00c3d1 01df      	MOVW R26,R30
00c3d2 940e da48 	CALL __EEPROMRDD
00c3d4 940e da29 	CALL __PUTPARD1
00c3d6 940c bc2c 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x14B:
00c3d8 940e da29 	CALL __PUTPARD1
00c3da 85a8      	LDD  R26,Y+8
00c3db 85b9      	LDD  R27,Y+8+1
00c3dc e2e9      	LDI  R30,LOW(41)
00c3dd 940e d95a 	CALL __MULB1W2U
00c3df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x14C:
                +
00c3e0 e0ea     +LDI R30 , LOW ( _config_buzz + ( 2 ) )
00c3e1 e0f5     +LDI R31 , HIGH ( _config_buzz + ( 2 ) )
                 	__POINTW1MN _config_buzz,2
00c3e2 0fe0      	ADD  R30,R16
00c3e3 1ff1      	ADC  R31,R17
00c3e4 01df      	MOVW R26,R30
00c3e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x14D:
00c3e6 940e da48 	CALL __EEPROMRDD
00c3e8 940e da29 	CALL __PUTPARD1
00c3ea 940c bc2c 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x14E:
00c3ec 0fa0      	ADD  R26,R16
00c3ed 1fb1      	ADC  R27,R17
00c3ee e0e0      	LDI  R30,LOW(0)
00c3ef 93ec      	ST   X,R30
00c3f0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x14F:
00c3f1 e0e0      	LDI  R30,LOW(0)
00c3f2 e0f0      	LDI  R31,HIGH(0)
00c3f3 940e daa2 	CALL __LOADLOCR4
00c3f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x150:
00c3f6 972a      	SBIW R28,10
00c3f7 940e da9b 	CALL __SAVELOCR4
                +
00c3f9 e000     +LDI R16 , LOW ( 0 )
00c3fa e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00c3fb e020     +LDI R18 , LOW ( 0 )
00c3fc e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00c3fd 01f8      	MOVW R30,R16
                +
00c3fe 5f0f     +SUBI R16 , LOW ( - 1 )
00c3ff 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c400 01de      	MOVW R26,R28
00c401 9614      	ADIW R26,4
00c402 0fae      	ADD  R26,R30
00c403 1fbf      	ADC  R27,R31
00c404 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x151:
00c405 01f8      	MOVW R30,R16
                +
00c406 5f0f     +SUBI R16 , LOW ( - 1 )
00c407 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c408 01de      	MOVW R26,R28
00c409 9614      	ADIW R26,4
00c40a 0fea      	ADD  R30,R26
00c40b 1ffb      	ADC  R31,R27
00c40c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:67 WORDS
                 SUBOPT_0x152:
00c40d 010f      	MOVW R0,R30
00c40e e8a1      	LDI  R26,LOW(_DEVICE_SERIAL)
00c40f e0b5      	LDI  R27,HIGH(_DEVICE_SERIAL)
00c410 0fa2      	ADD  R26,R18
00c411 1fb3      	ADC  R27,R19
00c412 940e da50 	CALL __EEPROMRDB
00c414 01d0      	MOVW R26,R0
00c415 93ec      	ST   X,R30
00c416 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x153:
00c417 01fe      	MOVW R30,R28
00c418 9634      	ADIW R30,4
00c419 93fa      	ST   -Y,R31
00c41a 93ea      	ST   -Y,R30
00c41b 931a      	ST   -Y,R17
00c41c 930a      	ST   -Y,R16
00c41d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x154:
00c41e 940e 5c63 	CALL _ETH_send
00c420 cfd0      	RJMP SUBOPT_0x14F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x155:
00c421 940e da9b 	CALL __SAVELOCR4
                +
00c423 e000     +LDI R16 , LOW ( 0 )
00c424 e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
                +
00c425 e020     +LDI R18 , LOW ( 0 )
00c426 e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
00c427 01f8      	MOVW R30,R16
                +
00c428 5f0f     +SUBI R16 , LOW ( - 1 )
00c429 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c42a 01de      	MOVW R26,R28
00c42b 9614      	ADIW R26,4
00c42c 0fae      	ADD  R26,R30
00c42d 1fbf      	ADC  R27,R31
00c42e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x156:
00c42f 85e8      	LDD  R30,Y+8
00c430 85f9      	LDD  R31,Y+8+1
00c431 963f      	ADIW R30,15
00c432 01af      	MOVW R20,R30
                +
00c433 3f4b     +CPI R20 , LOW ( 251 )
00c434 e0e0     +LDI R30 , HIGH ( 251 )
00c435 075e     +CPC R21 , R30
                 	__CPWRN 20,21,251
00c436 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x157:
00c437 01da      	MOVW R26,R20
00c438 940e a0a2 	CALL _malloc
00c43a 83ee      	STD  Y+6,R30
00c43b 83ff      	STD  Y+6+1,R31
00c43c 9730      	SBIW R30,0
00c43d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x158:
00c43e 01f8      	MOVW R30,R16
                +
00c43f 5f0f     +SUBI R16 , LOW ( - 1 )
00c440 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c441 81ae      	LDD  R26,Y+6
00c442 81bf      	LDD  R27,Y+6+1
00c443 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x159:
00c444 0fea      	ADD  R30,R26
00c445 1ffb      	ADC  R31,R27
00c446 cfc6      	RJMP SUBOPT_0x152
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15A:
00c447 01f8      	MOVW R30,R16
00c448 81ae      	LDD  R26,Y+6
00c449 81bf      	LDD  R27,Y+6+1
00c44a 0fea      	ADD  R30,R26
00c44b 1ffb      	ADC  R31,R27
00c44c 93fa      	ST   -Y,R31
00c44d 93ea      	ST   -Y,R30
00c44e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15B:
00c44f 85ec      	LDD  R30,Y+12
00c450 85fd      	LDD  R31,Y+12+1
00c451 93fa      	ST   -Y,R31
00c452 93ea      	ST   -Y,R30
00c453 85ac      	LDD  R26,Y+12
00c454 85bd      	LDD  R27,Y+12+1
00c455 940e a0df 	CALL _memcpy
00c457 85e8      	LDD  R30,Y+8
00c458 85f9      	LDD  R31,Y+8+1
                +
00c459 0f0e     +ADD R16 , R30
00c45a 1f1f     +ADC R17 , R31
                 	__ADDWRR 16,17,30,31
00c45b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x15C:
00c45c 81ee      	LDD  R30,Y+6
00c45d 81ff      	LDD  R31,Y+6+1
00c45e 93fa      	ST   -Y,R31
00c45f 93ea      	ST   -Y,R30
00c460 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x15D:
00c461 93ea      	ST   -Y,R30
00c462 e0ac      	LDI  R26,LOW(12)
00c463 e0b0      	LDI  R27,0
00c464 940c 5c63 	JMP  _ETH_send
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 22 TIMES, CODE SIZE REDUCTION:39 WORDS
                 SUBOPT_0x15E:
00c466 81ae      	LDD  R26,Y+6
00c467 81bf      	LDD  R27,Y+6+1
00c468 940c a0bd 	JMP  _free
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x15F:
00c46a 01f8      	MOVW R30,R16
                +
00c46b 5f0f     +SUBI R16 , LOW ( - 1 )
00c46c 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c46d 01de      	MOVW R26,R28
00c46e 9616      	ADIW R26,6
00c46f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x160:
00c470 0fea      	ADD  R30,R26
00c471 1ffb      	ADC  R31,R27
00c472 93fa      	ST   -Y,R31
00c473 93ea      	ST   -Y,R30
00c474 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x161:
                +
00c475 a1e9     +LDD R30 , Y + 33
00c476 a1fa     +LDD R31 , Y + 33 + 1
00c477 a16b     +LDD R22 , Y + 33 + 2
00c478 a17c     +LDD R23 , Y + 33 + 3
                 	__GETD1S 33
00c479 940e da29 	CALL __PUTPARD1
00c47b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x162:
00c47c e180      	LDI  R24,16
00c47d 940e 9ad2 	CALL _printDebug
00c47f 9664      	ADIW R28,20
00c480 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x163:
00c481 85ef      	LDD  R30,Y+15
00c482 93ea      	ST   -Y,R30
00c483 85ef      	LDD  R30,Y+15
00c484 93ea      	ST   -Y,R30
00c485 85ef      	LDD  R30,Y+15
00c486 93ea      	ST   -Y,R30
00c487 e0a1      	LDI  R26,LOW(1)
00c488 940e 5391 	CALL _ETH_sendConfigManageNack
00c48a efef      	LDI  R30,LOW(65535)
00c48b efff      	LDI  R31,HIGH(65535)
00c48c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x164:
00c48d 940e 9b56 	CALL _print_payload
00c48f cfcc      	RJMP SUBOPT_0x15C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x165:
00c490 01f8      	MOVW R30,R16
                +
00c491 5f0f     +SUBI R16 , LOW ( - 1 )
00c492 4f1f     +SBCI R17 , HIGH ( - 1 )
                 	__ADDWRN 16,17,1
00c493 01de      	MOVW R26,R28
00c494 9617      	ADIW R26,7
00c495 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x166:
00c496 93aa      	ST   -Y,R26
00c497 972b      	SBIW R28,11
00c498 cf88      	RJMP SUBOPT_0x155
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x167:
00c499 89a8      	LDD  R26,Y+16
00c49a 83a0      	STD  Z+0,R26
00c49b cf69      	RJMP SUBOPT_0x151
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x168:
00c49c 01de      	MOVW R26,R28
00c49d 9614      	ADIW R26,4
00c49e 0fae      	ADD  R26,R30
00c49f 1fbf      	ADC  R27,R31
00c4a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x169:
                +
00c4a1 01fe     +MOVW R30 , R28
00c4a2 5de2     +SUBI R30 , LOW ( - 558 )
00c4a3 4ffd     +SBCI R31 , HIGH ( - 558 )
00c4a4 81e0     +LD R30 , Z
                 	__GETB1SX 558
00c4a5 93ea      	ST   -Y,R30
00c4a6 c9d0      	RJMP SUBOPT_0x68
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16A:
00c4a7 01fe      	MOVW R30,R28
00c4a8 963e      	ADIW R30,14
00c4a9 93fa      	ST   -Y,R31
00c4aa 93ea      	ST   -Y,R30
00c4ab 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x16B:
00c4ac dcb5      	RCALL SUBOPT_0xDC
00c4ad 940e da29 	CALL __PUTPARD1
00c4af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16C:
                +
00c4b0 e6e5     +LDI R30 , LOW ( 2 * _0x120000 + ( 1035 ) )
00c4b1 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1035 ) )
00c4b2 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1035 ) )
00c4b3 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1035 ) )
                 	__POINTD1FN _0x120000,1035
00c4b4 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x16D:
00c4b6 01de      	MOVW R26,R28
00c4b7 961e      	ADIW R26,14
                +
00c4b8 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c4ba 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c4bc 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c4be bf6c     +OUT EIND , R22
00c4bf 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c4c0 018f      	MOVW R16,R30
00c4c1 2311      	TST  R17
00c4c2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x16E:
                +
00c4c3 e9e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 1080 ) )
00c4c4 e2f3     +LDI R31 , HIGH ( 2 * _0x120000 + ( 1080 ) )
00c4c5 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 1080 ) )
00c4c6 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 1080 ) )
                 	__POINTD1FN _0x120000,1080
00c4c7 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x16F:
                +
00c4c9 e0ab     +LDI R26 , 11
00c4ca 9fa0     +MUL R26 , R16
00c4cb 01f0     +MOVW R30 , R0
00c4cc 9fa1     +MUL R26 , R17
00c4cd 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,11
00c4ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x170:
00c4cf 940e da29 	CALL __PUTPARD1
00c4d1 91e0 1421 	LDS  R30,_commLostTimer
00c4d3 91f0 1422 	LDS  R31,_commLostTimer+1
00c4d5 9160 1423 	LDS  R22,_commLostTimer+2
00c4d7 9170 1424 	LDS  R23,_commLostTimer+3
00c4d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x171:
00c4da 91a0 1421 	LDS  R26,_commLostTimer
00c4dc 91b0 1422 	LDS  R27,_commLostTimer+1
00c4de 9180 1423 	LDS  R24,_commLostTimer+2
00c4e0 9190 1424 	LDS  R25,_commLostTimer+3
00c4e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x172:
00c4e3 93fa      	ST   -Y,R31
00c4e4 93ea      	ST   -Y,R30
                +
00c4e5 e1ae     +LDI R26 , LOW ( 0x1E )
00c4e6 e0b0     +LDI R27 , HIGH ( 0x1E )
00c4e7 e080     +LDI R24 , BYTE3 ( 0x1E )
00c4e8 e090     +LDI R25 , BYTE4 ( 0x1E )
                 	__GETD2N 0x1E
00c4e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x173:
00c4ea 940e da29 	CALL __PUTPARD1
00c4ec da63      	RCALL SUBOPT_0x88
00c4ed 91e0 1421 	LDS  R30,_commLostTimer
00c4ef 91f0 1422 	LDS  R31,_commLostTimer+1
00c4f1 9160 1423 	LDS  R22,_commLostTimer+2
00c4f3 9170 1424 	LDS  R23,_commLostTimer+3
00c4f5 940e d89e 	CALL __SUBD12
00c4f7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x174:
                +
00c4f8 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00c4f9 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00c4fa 93fa      	ST   -Y,R31
00c4fb 93ea      	ST   -Y,R30
00c4fc cfcc      	RJMP SUBOPT_0x16F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x175:
                +
00c4fd 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00c4fe 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00c4ff 01df      	MOVW R26,R30
00c500 940e d9f0 	CALL __GETW1P
00c502 940e d919 	CALL __CWD1
00c504 940c bc80 	JMP SUBOPT_0x1E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x176:
                +
00c506 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00c507 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00c508 01df      	MOVW R26,R30
00c509 940e d9f0 	CALL __GETW1P
00c50b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x177:
                +
00c50c 01de     +MOVW R26 , R28
00c50d 5da2     +SUBI R26 , LOW ( - 558 )
00c50e 4fbd     +SBCI R27 , HIGH ( - 558 )
00c50f 900d     +LD R0 , X +
00c510 91bc     +LD R27 , X
00c511 2da0     +MOV R26 , R0
                 	__GETW2SX 558
00c512 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x178:
                +
00c513 01de     +MOVW R26 , R28
00c514 5da4     +SUBI R26 , LOW ( - 556 )
00c515 4fbd     +SBCI R27 , HIGH ( - 556 )
00c516 900d     +LD R0 , X +
00c517 91bc     +LD R27 , X
00c518 2da0     +MOV R26 , R0
                 	__GETW2SX 556
00c519 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:53 WORDS
                 SUBOPT_0x179:
00c51a 940e da29 	CALL __PUTPARD1
                +
00c51c 01fe     +MOVW R30 , R28
00c51d 5de0     +SUBI R30 , LOW ( - 560 )
00c51e 4ffd     +SBCI R31 , HIGH ( - 560 )
00c51f 9001     +LD R0 , Z +
00c520 81f0     +LD R31 , Z
00c521 2de0     +MOV R30 , R0
                 	__GETW1SX 560
00c522 ccab      	RJMP SUBOPT_0xEC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17A:
00c523 930a      	ST   -Y,R16
00c524 e1a0      	LDI  R26,LOW(16)
00c525 940c 525e 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17B:
00c527 940e a0a2 	CALL _malloc
00c529 01af      	MOVW R20,R30
00c52a 2e04      	MOV  R0,R20
00c52b 2a05      	OR   R0,R21
00c52c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x17C:
00c52d 930a      	ST   -Y,R16
00c52e e5a0      	LDI  R26,LOW(80)
00c52f 940c 525e 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:41 WORDS
                 SUBOPT_0x17D:
                +
00c531 01fe     +MOVW R30 , R28
00c532 5de2     +SUBI R30 , LOW ( - 558 )
00c533 4ffd     +SBCI R31 , HIGH ( - 558 )
00c534 9001     +LD R0 , Z +
00c535 81f0     +LD R31 , Z
00c536 2de0     +MOV R30 , R0
                 	__GETW1SX 558
00c537 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x17E:
00c538 9632      	ADIW R30,2
00c539 93fa      	ST   -Y,R31
00c53a 93ea      	ST   -Y,R30
00c53b dff5      	RCALL SUBOPT_0x17D
00c53c 9732      	SBIW R30,2
00c53d 93fa      	ST   -Y,R31
00c53e 93ea      	ST   -Y,R30
00c53f 01da      	MOVW R26,R20
00c540 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x17F:
00c541 01da      	MOVW R26,R20
00c542 940e a0bd 	CALL _free
00c544 930a      	ST   -Y,R16
00c545 e3a0      	LDI  R26,LOW(48)
00c546 940c 525e 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x180:
00c548 940e da29 	CALL __PUTPARD1
00c54a 2fe0      	MOV  R30,R16
00c54b 940c bccc 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x181:
00c54d 940e da29 	CALL __PUTPARD1
00c54f 01fa      	MOVW R30,R20
00c550 85e0      	LDD  R30,Z+8
00c551 940c bccc 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x182:
00c553 940e da29 	CALL __PUTPARD1
00c555 01da      	MOVW R26,R20
00c556 9619      	ADIW R26,9
00c557 940c bc7b 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x183:
00c559 940e d9f0 	CALL __GETW1P
00c55b 81ae      	LDD  R26,Y+6
00c55c 81bf      	LDD  R27,Y+6+1
00c55d 17ae      	CP   R26,R30
00c55e 07bf      	CPC  R27,R31
00c55f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x184:
00c560 0fae      	ADD  R26,R30
00c561 1fbf      	ADC  R27,R31
00c562 91ec      	LD   R30,X
00c563 940c bccc 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x185:
00c565 930a      	ST   -Y,R16
00c566 01fa      	MOVW R30,R20
00c567 85a0      	LDD  R26,Z+8
00c568 93aa      	ST   -Y,R26
00c569 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x186:
00c56a dbd9      	RCALL SUBOPT_0xD5
00c56b 01df      	MOVW R26,R30
00c56c 01cb      	MOVW R24,R22
00c56d 940e 81b1 	CALL _LOG_setLastSend
00c56f 019f      	MOVW R18,R30
00c570 2333      	TST  R19
00c571 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x187:
                +
00c572 e0e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 2221 ) )
00c573 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2221 ) )
00c574 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2221 ) )
00c575 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2221 ) )
                 	__POINTD1FN _0x120000,2221
00c576 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x188:
00c578 01de      	MOVW R26,R28
00c579 961c      	ADIW R26,12
                +
00c57a 91e0 14d9+LDS R30 , _LOG_closeFile + ( 0 )
00c57c 91f0 14da+LDS R31 , _LOG_closeFile + ( 0 ) + 1
00c57e 9160 14db+LDS R22 , _LOG_closeFile + ( 0 ) + 2
00c580 bf6c     +OUT EIND , R22
00c581 9519     +EICALL
                 	__CALL1MN _LOG_closeFile,0
00c582 019f      	MOVW R18,R30
00c583 2333      	TST  R19
00c584 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x189:
00c585 e0b0      	LDI  R27,0
00c586 cfa0      	RJMP SUBOPT_0x17B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x18A:
                +
00c587 eee8     +LDI R30 , LOW ( 2 * _0x120000 + ( 2446 ) )
00c588 e2f8     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2446 ) )
00c589 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2446 ) )
00c58a e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2446 ) )
                 	__POINTD1FN _0x120000,2446
00c58b 940e da29 	CALL __PUTPARD1
00c58d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 46 TIMES, CODE SIZE REDUCTION:87 WORDS
                 SUBOPT_0x18B:
00c58e 940e da29 	CALL __PUTPARD1
00c590 940c bc2c 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18C:
00c592 df9e      	RCALL SUBOPT_0x17D
00c593 cfa4      	RJMP SUBOPT_0x17E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x18D:
                +
00c594 e7e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 2584 ) )
00c595 e2f9     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2584 ) )
00c596 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2584 ) )
00c597 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2584 ) )
                 	__POINTD1FN _0x120000,2584
00c598 cfb4      	RJMP SUBOPT_0x181
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x18E:
00c599 940e da29 	CALL __PUTPARD1
00c59b 01fa      	MOVW R30,R20
00c59c 85e1      	LDD  R30,Z+9
00c59d 940c bccc 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x18F:
00c59f 01fa      	MOVW R30,R20
00c5a0 85e0      	LDD  R30,Z+8
00c5a1 940c bda4 	JMP SUBOPT_0x47
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x190:
00c5a3 01fa      	MOVW R30,R20
00c5a4 85a1      	LDD  R26,Z+9
00c5a5 93aa      	ST   -Y,R26
00c5a6 e0a1      	LDI  R26,LOW(1)
00c5a7 940c 5391 	JMP  _ETH_sendConfigManageNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x191:
00c5a9 01fa      	MOVW R30,R20
00c5aa 85a1      	LDD  R26,Z+9
00c5ab 93aa      	ST   -Y,R26
00c5ac e0e0      	LDI  R30,LOW(0)
00c5ad 93ea      	ST   -Y,R30
00c5ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x192:
00c5af 940e 53c0 	CALL _ETH_sendConfigManageAck
00c5b1 019f      	MOVW R18,R30
00c5b2 2333      	TST  R19
00c5b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x193:
00c5b4 87e8      	STD  Y+8,R30
00c5b5 87f9      	STD  Y+8+1,R31
00c5b6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 28 TIMES, CODE SIZE REDUCTION:51 WORDS
                 SUBOPT_0x194:
00c5b7 85e8      	LDD  R30,Y+8
00c5b8 85f9      	LDD  R31,Y+8+1
00c5b9 93fa      	ST   -Y,R31
00c5ba 93ea      	ST   -Y,R30
00c5bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x195:
00c5bc 85e9      	LDD  R30,Y+9
00c5bd 85fa      	LDD  R31,Y+9+1
00c5be 93fa      	ST   -Y,R31
00c5bf 93ea      	ST   -Y,R30
00c5c0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x196:
00c5c1 e0e0      	LDI  R30,LOW(0)
00c5c2 e0f0      	LDI  R31,HIGH(0)
00c5c3 93fa      	ST   -Y,R31
00c5c4 93ea      	ST   -Y,R30
00c5c5 cc3d      	RJMP SUBOPT_0xF7
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x197:
                +
00c5c6 ece3     +LDI R30 , LOW ( 2 * _0x120000 + ( 2921 ) )
00c5c7 e2fa     +LDI R31 , HIGH ( 2 * _0x120000 + ( 2921 ) )
00c5c8 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 2921 ) )
00c5c9 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 2921 ) )
                 	__POINTD1FN _0x120000,2921
00c5ca 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x198:
                +
00c5cc e3e7     +LDI R30 , LOW ( 2 * _0x120000 + ( 3037 ) )
00c5cd e2fb     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3037 ) )
00c5ce e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3037 ) )
00c5cf e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3037 ) )
                 	__POINTD1FN _0x120000,3037
00c5d0 cf7c      	RJMP SUBOPT_0x181
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x199:
                +
00c5d1 e3e8     +LDI R30 , LOW ( 2 * _0x120000 + ( 3294 ) )
00c5d2 e2fc     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3294 ) )
00c5d3 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3294 ) )
00c5d4 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3294 ) )
                 	__POINTD1FN _0x120000,3294
00c5d5 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x19A:
00c5d7 940e da29 	CALL __PUTPARD1
00c5d9 01fa      	MOVW R30,R20
                +
00c5da 85a1     +LDD R26 , Z + 9
00c5db 85b2     +LDD R27 , Z + 9 + 1
00c5dc 8583     +LDD R24 , Z + 9 + 2
00c5dd 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00c5de 940e da2e 	CALL __PUTPARD2
00c5e0 940c bc2c 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x19B:
00c5e2 940e da2e 	CALL __PUTPARD2
00c5e4 940c bc2c 	JMP SUBOPT_0x12
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19C:
                +
00c5e6 85a1     +LDD R26 , Z + 9
00c5e7 85b2     +LDD R27 , Z + 9 + 1
00c5e8 8583     +LDD R24 , Z + 9 + 2
00c5e9 8594     +LDD R25 , Z + 9 + 3
                 	__GETD2Z 9
00c5ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19D:
                +
00c5eb e0ea     +LDI R30 , LOW ( 0xA )
00c5ec e0f0     +LDI R31 , HIGH ( 0xA )
00c5ed e060     +LDI R22 , BYTE3 ( 0xA )
00c5ee e070     +LDI R23 , BYTE4 ( 0xA )
                 	__GETD1N 0xA
00c5ef cf9e      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x19E:
00c5f0 df40      	RCALL SUBOPT_0x17D
00c5f1 9632      	ADIW R30,2
00c5f2 93fa      	ST   -Y,R31
00c5f3 93ea      	ST   -Y,R30
00c5f4 01da      	MOVW R26,R20
00c5f5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x19F:
                +
00c5f6 e0ed     +LDI R30 , LOW ( 0xD )
00c5f7 e0f0     +LDI R31 , HIGH ( 0xD )
00c5f8 e060     +LDI R22 , BYTE3 ( 0xD )
00c5f9 e070     +LDI R23 , BYTE4 ( 0xD )
                 	__GETD1N 0xD
00c5fa cf93      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A0:
                +
00c5fb e2ef     +LDI R30 , LOW ( 2 * _0x120000 + ( 3797 ) )
00c5fc e2fe     +LDI R31 , HIGH ( 2 * _0x120000 + ( 3797 ) )
00c5fd e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 3797 ) )
00c5fe e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 3797 ) )
                 	__POINTD1FN _0x120000,3797
00c5ff cf4d      	RJMP SUBOPT_0x181
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A1:
00c600 85a1      	LDD  R26,Z+9
00c601 85b2      	LDD  R27,Z+10
00c602 940e da81 	CALL __CPW02
00c604 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1A2:
00c605 930a      	ST   -Y,R16
00c606 e3a0      	LDI  R26,LOW(48)
00c607 940c 525e 	JMP  _ETH_sendNack
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A3:
00c609 85e0      	LDD  R30,Z+8
00c60a e0f0      	LDI  R31,0
00c60b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x1A4:
00c60c 9724      	SBIW R28,4
00c60d e0e0      	LDI  R30,LOW(0)
00c60e 83e8      	ST   Y,R30
00c60f 83e9      	STD  Y+1,R30
00c610 83ea      	STD  Y+2,R30
00c611 83eb      	STD  Y+3,R30
00c612 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A5:
00c613 0fe0      	ADD  R30,R16
00c614 1ff1      	ADC  R31,R17
00c615 93fa      	ST   -Y,R31
00c616 93ea      	ST   -Y,R30
00c617 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1A6:
00c618 81ae      	LDD  R26,Y+6
00c619 81bf      	LDD  R27,Y+6+1
00c61a 0fea      	ADD  R30,R26
00c61b 1ffb      	ADC  R31,R27
00c61c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1A7:
00c61d 01d0      	MOVW R26,R0
00c61e e0f0      	LDI  R31,0
00c61f 17ea      	CP   R30,R26
00c620 07fb      	CPC  R31,R27
00c621 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1A8:
00c622 93ba      	ST   -Y,R27
00c623 93aa      	ST   -Y,R26
00c624 940e da99 	CALL __SAVELOCR6
00c626 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x1A9:
00c627 81ae      	LDD  R26,Y+6
00c628 81bf      	LDD  R27,Y+6+1
00c629 0fae      	ADD  R26,R30
00c62a 1fbf      	ADC  R27,R31
00c62b 91ec      	LD   R30,X
00c62c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AA:
00c62d eaa9      	LDI  R26,LOW(_configRd)
00c62e e0bf      	LDI  R27,HIGH(_configRd)
00c62f cdbc      	RJMP SUBOPT_0x14E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1AB:
00c630 e0e0      	LDI  R30,LOW(0)
00c631 93e0 10f0 	STS  _config_start,R30
00c633 93e0 10f1 	STS  _config_ready,R30
00c635 93e0 10f2 	STS  _config_end,R30
00c637 93e0 10f3 	STS  _config_response,R30
00c639 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AC:
00c63a 01de      	MOVW R26,R28
00c63b 9612      	ADIW R26,2
00c63c 940e a16b 	CALL _strlen
00c63e 170e      	CP   R16,R30
00c63f 071f      	CPC  R17,R31
00c640 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AD:
                +
00c641 e7e2     +LDI R30 , LOW ( 2 * _0x120000 + ( 24 ) )
00c642 e1ff     +LDI R31 , HIGH ( 2 * _0x120000 + ( 24 ) )
00c643 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 24 ) )
00c644 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 24 ) )
                 	__POINTD1FN _0x120000,24
00c645 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1AE:
                +
00c647 e0a7     +LDI R26 , LOW ( 0x7 )
00c648 e0b0     +LDI R27 , HIGH ( 0x7 )
00c649 e080     +LDI R24 , BYTE3 ( 0x7 )
00c64a e090     +LDI R25 , BYTE4 ( 0x7 )
                 	__GETD2N 0x7
00c64b 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x1AF:
00c64d 85ec      	LDD  R30,Y+12
00c64e 85fd      	LDD  R31,Y+12+1
00c64f 93fa      	ST   -Y,R31
00c650 93ea      	ST   -Y,R30
00c651 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B0:
00c652 eae9      	LDI  R30,LOW(_configRd)
00c653 e0ff      	LDI  R31,HIGH(_configRd)
00c654 93fa      	ST   -Y,R31
00c655 93ea      	ST   -Y,R30
00c656 d8b9      	RCALL SUBOPT_0x7D
00c657 940c a0df 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1B1:
00c659 01de      	MOVW R26,R28
00c65a 9697      	ADIW R26,39
00c65b 940e a16b 	CALL _strlen
00c65d 170e      	CP   R16,R30
00c65e 071f      	CPC  R17,R31
00c65f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1B2:
                +
00c660 a5ab     +LDD R26 , Y + 43
00c661 a5bc     +LDD R27 , Y + 43 + 1
00c662 a58d     +LDD R24 , Y + 43 + 2
00c663 a59e     +LDD R25 , Y + 43 + 3
                 	__GETD2S 43
00c664 940e 405d 	CALL _TIMER_checkTimerExceed
00c666 9730      	SBIW R30,0
00c667 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B3:
00c668 91ec      	LD   R30,X
00c669 e6a4      	LDI  R26,LOW(100)
00c66a 9fea      	MUL  R30,R26
00c66b 01b0      	MOVW R22,R0
00c66c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1B4:
00c66d 81e1      	LDD  R30,Z+1
00c66e e0aa      	LDI  R26,LOW(10)
00c66f 9fea      	MUL  R30,R26
00c670 01f0      	MOVW R30,R0
00c671 01db      	MOVW R26,R22
00c672 0fae      	ADD  R26,R30
00c673 1fbf      	ADC  R27,R31
00c674 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B5:
00c675 81e2      	LDD  R30,Z+2
00c676 e0f0      	LDI  R31,0
00c677 0fea      	ADD  R30,R26
00c678 1ffb      	ADC  R31,R27
00c679 940e d919 	CALL __CWD1
00c67b 940e da29 	CALL __PUTPARD1
00c67d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1B6:
                +
00c67e 01fe     +MOVW R30 , R28
00c67f 5ce1     +SUBI R30 , LOW ( - 63 )
00c680 4fff     +SBCI R31 , HIGH ( - 63 )
00c681 9001     +LD R0 , Z +
00c682 81f0     +LD R31 , Z
00c683 2de0     +MOV R30 , R0
                 	__GETW1SX 63
00c684 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1B7:
00c685 81e3      	LDD  R30,Z+3
00c686 e6a4      	LDI  R26,LOW(100)
00c687 9fea      	MUL  R30,R26
00c688 01b0      	MOVW R22,R0
00c689 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1B8:
00c68a 81e4      	LDD  R30,Z+4
00c68b e0aa      	LDI  R26,LOW(10)
00c68c 9fea      	MUL  R30,R26
00c68d 01f0      	MOVW R30,R0
00c68e 01db      	MOVW R26,R22
00c68f 0fae      	ADD  R26,R30
00c690 1fbf      	ADC  R27,R31
00c691 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1B9:
00c692 81e5      	LDD  R30,Z+5
00c693 e0f0      	LDI  R31,0
00c694 0fea      	ADD  R30,R26
00c695 1ffb      	ADC  R31,R27
00c696 940e d919 	CALL __CWD1
00c698 940e da29 	CALL __PUTPARD1
00c69a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BA:
                +
00c69b 01fe     +MOVW R30 , R28
00c69c 5bed     +SUBI R30 , LOW ( - 67 )
00c69d 4fff     +SBCI R31 , HIGH ( - 67 )
00c69e 9001     +LD R0 , Z +
00c69f 81f0     +LD R31 , Z
00c6a0 2de0     +MOV R30 , R0
                 	__GETW1SX 67
00c6a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BB:
00c6a2 81e6      	LDD  R30,Z+6
00c6a3 e6a4      	LDI  R26,LOW(100)
00c6a4 9fea      	MUL  R30,R26
00c6a5 01b0      	MOVW R22,R0
00c6a6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1BC:
00c6a7 81e7      	LDD  R30,Z+7
00c6a8 e0aa      	LDI  R26,LOW(10)
00c6a9 9fea      	MUL  R30,R26
00c6aa 01f0      	MOVW R30,R0
00c6ab 01db      	MOVW R26,R22
00c6ac 0fae      	ADD  R26,R30
00c6ad 1fbf      	ADC  R27,R31
00c6ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 56 TIMES, CODE SIZE REDUCTION:217 WORDS
                 SUBOPT_0x1BD:
00c6af 0fea      	ADD  R30,R26
00c6b0 1ffb      	ADC  R31,R27
00c6b1 940e d919 	CALL __CWD1
00c6b3 940e da29 	CALL __PUTPARD1
00c6b5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1BE:
                +
00c6b6 01fe     +MOVW R30 , R28
00c6b7 5be9     +SUBI R30 , LOW ( - 71 )
00c6b8 4fff     +SBCI R31 , HIGH ( - 71 )
00c6b9 9001     +LD R0 , Z +
00c6ba 81f0     +LD R31 , Z
00c6bb 2de0     +MOV R30 , R0
                 	__GETW1SX 71
00c6bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1BF:
00c6bd 85e1      	LDD  R30,Z+9
00c6be e6a4      	LDI  R26,LOW(100)
00c6bf 9fea      	MUL  R30,R26
00c6c0 01b0      	MOVW R22,R0
00c6c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1C0:
00c6c2 85e2      	LDD  R30,Z+10
00c6c3 e0aa      	LDI  R26,LOW(10)
00c6c4 9fea      	MUL  R30,R26
00c6c5 01f0      	MOVW R30,R0
00c6c6 01db      	MOVW R26,R22
00c6c7 0fae      	ADD  R26,R30
00c6c8 1fbf      	ADC  R27,R31
00c6c9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1C1:
00c6ca 85e3      	LDD  R30,Z+11
00c6cb e0f0      	LDI  R31,0
00c6cc cfe2      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C2:
                +
00c6cd 01fe     +MOVW R30 , R28
00c6ce 5be7     +SUBI R30 , LOW ( - 73 )
00c6cf 4fff     +SBCI R31 , HIGH ( - 73 )
00c6d0 9001     +LD R0 , Z +
00c6d1 81f0     +LD R31 , Z
00c6d2 2de0     +MOV R30 , R0
                 	__GETW1SX 73
00c6d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C3:
                +
00c6d4 01fe     +MOVW R30 , R28
00c6d5 5be3     +SUBI R30 , LOW ( - 77 )
00c6d6 4fff     +SBCI R31 , HIGH ( - 77 )
00c6d7 9001     +LD R0 , Z +
00c6d8 81f0     +LD R31 , Z
00c6d9 2de0     +MOV R30 , R0
                 	__GETW1SX 77
00c6da 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C4:
                +
00c6db 01fe     +MOVW R30 , R28
00c6dc 5aef     +SUBI R30 , LOW ( - 81 )
00c6dd 4fff     +SBCI R31 , HIGH ( - 81 )
00c6de 9001     +LD R0 , Z +
00c6df 81f0     +LD R31 , Z
00c6e0 2de0     +MOV R30 , R0
                 	__GETW1SX 81
00c6e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1C5:
                +
00c6e2 01fe     +MOVW R30 , R28
00c6e3 5ae9     +SUBI R30 , LOW ( - 87 )
00c6e4 4fff     +SBCI R31 , HIGH ( - 87 )
00c6e5 9001     +LD R0 , Z +
00c6e6 81f0     +LD R31 , Z
00c6e7 2de0     +MOV R30 , R0
                 	__GETW1SX 87
00c6e8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C6:
                +
00c6e9 01fe     +MOVW R30 , R28
00c6ea 5ae5     +SUBI R30 , LOW ( - 91 )
00c6eb 4fff     +SBCI R31 , HIGH ( - 91 )
00c6ec 9001     +LD R0 , Z +
00c6ed 81f0     +LD R31 , Z
00c6ee 2de0     +MOV R30 , R0
                 	__GETW1SX 91
00c6ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C7:
                +
00c6f0 01fe     +MOVW R30 , R28
00c6f1 5ae1     +SUBI R30 , LOW ( - 95 )
00c6f2 4fff     +SBCI R31 , HIGH ( - 95 )
00c6f3 9001     +LD R0 , Z +
00c6f4 81f0     +LD R31 , Z
00c6f5 2de0     +MOV R30 , R0
                 	__GETW1SX 95
00c6f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C8:
                +
00c6f7 01fe     +MOVW R30 , R28
00c6f8 59ed     +SUBI R30 , LOW ( - 99 )
00c6f9 4fff     +SBCI R31 , HIGH ( - 99 )
00c6fa 9001     +LD R0 , Z +
00c6fb 81f0     +LD R31 , Z
00c6fc 2de0     +MOV R30 , R0
                 	__GETW1SX 99
00c6fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1C9:
                +
00c6fe e4ea     +LDI R30 , LOW ( 2 * _0x120000 + ( 5360 ) )
00c6ff e3f4     +LDI R31 , HIGH ( 2 * _0x120000 + ( 5360 ) )
00c700 e060     +LDI R22 , BYTE3 ( 2 * _0x120000 + ( 5360 ) )
00c701 e070     +LDI R23 , BYTE4 ( 2 * _0x120000 + ( 5360 ) )
                 	__POINTD1FN _0x120000,5360
00c702 940e da29 	CALL __PUTPARD1
00c704 01fe      	MOVW R30,R28
00c705 963a      	ADIW R30,10
00c706 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1CA:
00c708 93fa      	ST   -Y,R31
00c709 93ea      	ST   -Y,R30
00c70a 01fe      	MOVW R30,R28
00c70b 9638      	ADIW R30,8
00c70c 93fa      	ST   -Y,R31
00c70d 93ea      	ST   -Y,R30
00c70e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1CB:
00c70f e0b0      	LDI  R27,0
00c710 940c a0df 	JMP  _memcpy
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1CC:
                +
00c712 01fe     +MOVW R30 , R28
00c713 5bef     +SUBI R30 , LOW ( - 65 )
00c714 4fff     +SBCI R31 , HIGH ( - 65 )
00c715 9001     +LD R0 , Z +
00c716 81f0     +LD R31 , Z
00c717 2de0     +MOV R30 , R0
                 	__GETW1SX 65
00c718 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1CD:
                +
00c719 e020     +LDI R18 , LOW ( 0 )
00c71a e030     +LDI R19 , HIGH ( 0 )
                 	__GETWRN 18,19,0
                +
00c71b e000     +LDI R16 , LOW ( 0 )
00c71c e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00c71d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 19 TIMES, CODE SIZE REDUCTION:105 WORDS
                 SUBOPT_0x1CE:
00c71e 01f9      	MOVW R30,R18
                +
00c71f 5f2f     +SUBI R18 , LOW ( - 1 )
00c720 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00c721 85a8      	LDD  R26,Y+8
00c722 85b9      	LDD  R27,Y+8+1
00c723 0fae      	ADD  R26,R30
00c724 1fbf      	ADC  R27,R31
00c725 91ec      	LD   R30,X
00c726 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1CF:
                +
00c727 81ac     +LDD R26 , Y + 4
00c728 81bd     +LDD R27 , Y + 4 + 1
00c729 9618     +ADIW R26 , 8
00c72a 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00c72b cff2      	RJMP SUBOPT_0x1CE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1D0:
                +
00c72c 81ac     +LDD R26 , Y + 4
00c72d 81bd     +LDD R27 , Y + 4 + 1
00c72e 9619     +ADIW R26 , 9
00c72f 93ed     +ST X + , R30
00c730 93fc     +ST X , R31
                 	__PUTW1SNS 4,9
00c731 81ec      	LDD  R30,Y+4
00c732 81fd      	LDD  R31,Y+4+1
00c733 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x1D1:
00c734 e0e1      	LDI  R30,LOW(1)
00c735 e0f0      	LDI  R31,HIGH(1)
00c736 940e d932 	CALL __MULW12U
00c738 01df      	MOVW R26,R30
00c739 940c a0a2 	JMP  _malloc
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D2:
00c73b 940e d9f0 	CALL __GETW1P
00c73d 170e      	CP   R16,R30
00c73e 071f      	CPC  R17,R31
00c73f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1D3:
00c740 01f8      	MOVW R30,R16
00c741 0fea      	ADD  R30,R26
00c742 1ffb      	ADC  R31,R27
00c743 010f      	MOVW R0,R30
00c744 01f9      	MOVW R30,R18
00c745 0fe0      	ADD  R30,R16
00c746 1ff1      	ADC  R31,R17
00c747 85a8      	LDD  R26,Y+8
00c748 85b9      	LDD  R27,Y+8+1
00c749 cc12      	RJMP SUBOPT_0x133
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D4:
                +
00c74a 81ac     +LDD R26 , Y + 4
00c74b 81bd     +LDD R27 , Y + 4 + 1
00c74c 9618     +ADIW R26 , 8
00c74d 93ec     +ST X , R30
                 	__PUTB1SNS 4,8
00c74e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:74 WORDS
                 SUBOPT_0x1D5:
00c74f e0f0      	LDI  R31,0
00c750 940e d919 	CALL __CWD1
                +
00c752 7fef     +ANDI R30 , LOW ( 0xFF )
00c753 70f0     +ANDI R31 , HIGH ( 0xFF )
00c754 7060     +ANDI R22 , BYTE3 ( 0xFF )
00c755 7070     +ANDI R23 , BYTE4 ( 0xFF )
                 	__ANDD1N 0xFF
00c756 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D6:
00c757 01df      	MOVW R26,R30
00c758 01cb      	MOVW R24,R22
00c759 e1e8      	LDI  R30,LOW(24)
00c75a 940e d8c7 	CALL __LSLD12
00c75c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D7:
00c75d 01df      	MOVW R26,R30
00c75e 01cb      	MOVW R24,R22
00c75f e0e8      	LDI  R30,LOW(8)
00c760 940e d8c7 	CALL __LSLD12
00c762 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1D8:
00c763 940e d8ad 	CALL __ORD12
                +
00c765 81ac     +LDD R26 , Y + 4
00c766 81bd     +LDD R27 , Y + 4 + 1
00c767 9619     +ADIW R26 , 9
00c768 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 4,9
00c76a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1D9:
00c76b 01f9      	MOVW R30,R18
                +
00c76c 5f2f     +SUBI R18 , LOW ( - 1 )
00c76d 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00c76e ceb8      	RJMP SUBOPT_0x1A9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DA:
00c76f 940e da29 	CALL __PUTPARD1
00c771 85e8      	LDD  R30,Y+8
00c772 85f9      	LDD  R31,Y+8+1
00c773 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1DB:
00c774 93ba      	ST   -Y,R27
00c775 93aa      	ST   -Y,R26
00c776 ce95      	RJMP SUBOPT_0x1A4
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x1DC:
00c777 940e a0a2 	CALL _malloc
00c779 83ee      	STD  Y+6,R30
00c77a 83ff      	STD  Y+6+1,R31
00c77b 9730      	SBIW R30,0
00c77c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1DD:
                +
00c77d e8e3     +LDI R30 , LOW ( 2 * _0x160000 + ( 187 ) )
00c77e e3f6     +LDI R31 , HIGH ( 2 * _0x160000 + ( 187 ) )
00c77f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 187 ) )
00c780 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 187 ) )
                 	__POINTD1FN _0x160000,187
00c781 cbab      	RJMP SUBOPT_0x12A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x1DE:
00c782 85ea      	LDD  R30,Y+10
00c783 85fb      	LDD  R31,Y+10+1
00c784 93fa      	ST   -Y,R31
00c785 93ea      	ST   -Y,R30
00c786 ce30      	RJMP SUBOPT_0x194
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1DF:
00c787 940e a0df 	CALL _memcpy
00c789 ccdc      	RJMP SUBOPT_0x15E
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E0:
00c78a e0a8      	LDI  R26,LOW(8)
00c78b e0b0      	LDI  R27,0
00c78c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E1:
                +
00c78d e4e2     +LDI R30 , LOW ( 2 * _0x160000 + ( 378 ) )
00c78e e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 378 ) )
00c78f e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 378 ) )
00c790 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 378 ) )
                 	__POINTD1FN _0x160000,378
00c791 cb9b      	RJMP SUBOPT_0x12A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E2:
                +
00c792 e6ee     +LDI R30 , LOW ( 2 * _0x160000 + ( 422 ) )
00c793 e3f7     +LDI R31 , HIGH ( 2 * _0x160000 + ( 422 ) )
00c794 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 422 ) )
00c795 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 422 ) )
                 	__POINTD1FN _0x160000,422
00c796 cb96      	RJMP SUBOPT_0x12A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x1E3:
                +
00c797 efea     +LDI R30 , LOW ( 2 * _0x160000 + ( 50 ) )
00c798 e3f5     +LDI R31 , HIGH ( 2 * _0x160000 + ( 50 ) )
00c799 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 50 ) )
00c79a e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 50 ) )
                 	__POINTD1FN _0x160000,50
00c79b 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1E4:
00c79d 85ec      	LDD  R30,Y+12
00c79e e0f0      	LDI  R31,0
00c79f 70ef      	ANDI R30,LOW(0xF)
00c7a0 70f0      	ANDI R31,HIGH(0xF)
00c7a1 87e8      	STD  Y+8,R30
00c7a2 87f9      	STD  Y+8+1,R31
00c7a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x1E5:
00c7a4 e0b0      	LDI  R27,0
00c7a5 cfd1      	RJMP SUBOPT_0x1DC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1E6:
00c7a6 940e da29 	CALL __PUTPARD1
00c7a8 85ec      	LDD  R30,Y+12
00c7a9 85fd      	LDD  R31,Y+12+1
00c7aa ca23      	RJMP SUBOPT_0xEC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1E7:
00c7ab 940e da29 	CALL __PUTPARD1
                +
00c7ad e0e3     +LDI R30 , LOW ( 0x3 )
00c7ae e0f0     +LDI R31 , HIGH ( 0x3 )
00c7af e060     +LDI R22 , BYTE3 ( 0x3 )
00c7b0 e070     +LDI R23 , BYTE4 ( 0x3 )
                 	__GETD1N 0x3
00c7b1 cddc      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E8:
                +
00c7b2 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 961 ) )
00c7b3 e3f9     +LDI R31 , HIGH ( 2 * _0x160000 + ( 961 ) )
00c7b4 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 961 ) )
00c7b5 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 961 ) )
                 	__POINTD1FN _0x160000,961
00c7b6 cb71      	RJMP SUBOPT_0x129
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1E9:
                +
00c7b7 e3ea     +LDI R30 , LOW ( 2 * _0x160000 + ( 1138 ) )
00c7b8 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1138 ) )
00c7b9 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1138 ) )
00c7ba e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1138 ) )
                 	__POINTD1FN _0x160000,1138
00c7bb cb6c      	RJMP SUBOPT_0x129
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EA:
                +
00c7bc e7e0     +LDI R30 , LOW ( 2 * _0x160000 + ( 1192 ) )
00c7bd e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1192 ) )
00c7be e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1192 ) )
00c7bf e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1192 ) )
                 	__POINTD1FN _0x160000,1192
00c7c0 cb6c      	RJMP SUBOPT_0x12A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1EB:
                +
00c7c1 e8e9     +LDI R30 , LOW ( 2 * _0x160000 + ( 1217 ) )
00c7c2 e3fa     +LDI R31 , HIGH ( 2 * _0x160000 + ( 1217 ) )
00c7c3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 1217 ) )
00c7c4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 1217 ) )
                 	__POINTD1FN _0x160000,1217
00c7c5 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EC:
00c7c7 e2e2      	LDI  R30,LOW(34)
00c7c8 e0f0      	LDI  R31,HIGH(34)
00c7c9 17e0      	CP   R30,R16
00c7ca 07f1      	CPC  R31,R17
00c7cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1ED:
                +
00c7cc 81a1     +LDD R26 , Z + 1
00c7cd 81b2     +LDD R27 , Z + 1 + 1
00c7ce 8183     +LDD R24 , Z + 1 + 2
00c7cf 8194     +LDD R25 , Z + 1 + 3
                 	__GETD2Z 1
00c7d0 ce11      	RJMP SUBOPT_0x19B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1EE:
                +
00c7d1 e2e1     +LDI R30 , LOW ( 2 * _0x160000 + ( 2137 ) )
00c7d2 e3fe     +LDI R31 , HIGH ( 2 * _0x160000 + ( 2137 ) )
00c7d3 e060     +LDI R22 , BYTE3 ( 2 * _0x160000 + ( 2137 ) )
00c7d4 e070     +LDI R23 , BYTE4 ( 2 * _0x160000 + ( 2137 ) )
                 	__POINTD1FN _0x160000,2137
00c7d5 940e da29 	CALL __PUTPARD1
00c7d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x1EF:
00c7d8 85ea      	LDD  R30,Y+10
00c7d9 e0f0      	LDI  R31,0
00c7da 70ef      	ANDI R30,LOW(0xF)
00c7db 70f0      	ANDI R31,HIGH(0xF)
00c7dc 01af      	MOVW R20,R30
00c7dd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1F0:
00c7de 935a      	ST   -Y,R21
00c7df 934a      	ST   -Y,R20
00c7e0 85aa      	LDD  R26,Y+10
00c7e1 85bb      	LDD  R27,Y+10+1
00c7e2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F1:
00c7e3 940e da29 	CALL __PUTPARD1
00c7e5 940c bdd3 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1F2:
00c7e7 01fe      	MOVW R30,R28
00c7e8 9632      	ADIW R30,2
00c7e9 93fa      	ST   -Y,R31
00c7ea 93ea      	ST   -Y,R30
00c7eb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F3:
00c7ec d88a      	RCALL SUBOPT_0xB5
00c7ed 940e da7d 	CALL __CPD10
00c7ef 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x1F4:
00c7f0 940e da29 	CALL __PUTPARD1
00c7f2 d88e      	RCALL SUBOPT_0xB7
00c7f3 cd9a      	RJMP SUBOPT_0x18B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F5:
00c7f4 940e da2e 	CALL __PUTPARD2
00c7f6 931a      	ST   -Y,R17
00c7f7 930a      	ST   -Y,R16
00c7f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x1F6:
00c7f9 58e5      	SUBI R30,LOW(-_eth_waitQueue)
00c7fa 4efc      	SBCI R31,HIGH(-_eth_waitQueue)
00c7fb e0a0      	LDI  R26,LOW(0)
00c7fc 83a0      	STD  Z+0,R26
00c7fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1F7:
00c7fe 940e da29 	CALL __PUTPARD1
00c800 85ec      	LDD  R30,Y+12
00c801 940c be67 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x1F8:
00c803 e0ab      	LDI  R26,LOW(11)
00c804 9f1a      	MUL  R17,R26
00c805 01f0      	MOVW R30,R0
                +
00c806 57ed     +SUBI R30 , LOW ( - _eth_waitQueue - ( 8 ) )
00c807 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 8 ) )
                 	__ADDW1MN _eth_waitQueue,8
00c808 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x1F9:
00c809 01df      	MOVW R26,R30
00c80a 940e a0bd 	CALL _free
00c80c e0ab      	LDI  R26,LOW(11)
00c80d 9f1a      	MUL  R17,R26
00c80e 01f0      	MOVW R30,R0
                +
00c80f 57ec     +SUBI R30 , LOW ( - _eth_waitQueue - ( 9 ) )
00c810 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 9 ) )
                 	__ADDW1MN _eth_waitQueue,9
00c811 e0a0      	LDI  R26,LOW(0)
00c812 e0b0      	LDI  R27,HIGH(0)
00c813 83a0      	STD  Z+0,R26
00c814 83b1      	STD  Z+1,R27
00c815 e0ab      	LDI  R26,LOW(11)
00c816 9f1a      	MUL  R17,R26
00c817 01f0      	MOVW R30,R0
                +
00c818 57ee     +SUBI R30 , LOW ( - _eth_waitQueue - ( 7 ) )
00c819 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 7 ) )
                 	__ADDW1MN _eth_waitQueue,7
00c81a e0a0      	LDI  R26,LOW(0)
00c81b 83a0      	STD  Z+0,R26
00c81c cfe6      	RJMP SUBOPT_0x1F8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x1FA:
00c81d e0a0      	LDI  R26,LOW(0)
00c81e 83a0      	STD  Z+0,R26
00c81f e0ab      	LDI  R26,LOW(11)
00c820 9f1a      	MUL  R17,R26
00c821 01f0      	MOVW R30,R0
00c822 cfd6      	RJMP SUBOPT_0x1F6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x1FB:
00c823 e0ab      	LDI  R26,LOW(11)
00c824 9f1a      	MUL  R17,R26
00c825 01f0      	MOVW R30,R0
                +
00c826 58e0     +SUBI R30 , LOW ( - _eth_waitQueue - ( 5 ) )
00c827 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 5 ) )
                 	__ADDW1MN _eth_waitQueue,5
00c828 e0a0      	LDI  R26,LOW(0)
00c829 e0b0      	LDI  R27,HIGH(0)
00c82a 83a0      	STD  Z+0,R26
00c82b 83b1      	STD  Z+1,R27
00c82c e0ab      	LDI  R26,LOW(11)
00c82d 9f1a      	MUL  R17,R26
00c82e 01f0      	MOVW R30,R0
                +
00c82f 58e4     +SUBI R30 , LOW ( - _eth_waitQueue - ( 1 ) )
00c830 4efc     +SBCI R31 , HIGH ( - _eth_waitQueue - ( 1 ) )
                 	__ADDW1MN _eth_waitQueue,1
00c831 940e bcda 	CALL SUBOPT_0x2C
00c833 940e da1f 	CALL __PUTDZ20
00c835 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x1FC:
00c836 940e da29 	CALL __PUTPARD1
00c838 81ed      	LDD  R30,Y+5
00c839 940c be67 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FD:
00c83b 2fe1      	MOV  R30,R17
00c83c 27ff      	CLR  R31
00c83d 2766      	CLR  R22
00c83e 2777      	CLR  R23
00c83f 940c bc8a 	JMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x1FE:
00c841 e6e4      	LDI  R30,LOW(100)
00c842 e0f0      	LDI  R31,HIGH(100)
00c843 940e d9c4 	CALL __MODW21
00c845 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x1FF:
00c846 81ea      	LDD  R30,Y+2
00c847 81fb      	LDD  R31,Y+2+1
00c848 940c bd01 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x200:
00c84a 01df      	MOVW R26,R30
00c84b 01cb      	MOVW R24,R22
00c84c 01f8      	MOVW R30,R16
00c84d 940e d919 	CALL __CWD1
00c84f 940e d753 	CALL __CDF1
00c851 940e da3b 	CALL __SWAPD12
00c853 940e d786 	CALL __SUBF12
00c855 01df      	MOVW R26,R30
00c856 01cb      	MOVW R24,R22
00c857 940e 9db9 	CALL _fabs
00c859 01df      	MOVW R26,R30
00c85a 01cb      	MOVW R24,R22
00c85b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x201:
00c85c 81ea      	LDD  R30,Y+2
00c85d 81fb      	LDD  R31,Y+2+1
00c85e 940c c027 	JMP SUBOPT_0xA5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x202:
00c860 01f8      	MOVW R30,R16
00c861 940e d919 	CALL __CWD1
00c863 940e d753 	CALL __CDF1
00c865 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x203:
                +
00c866 e0a0     +LDI R26 , LOW ( 0x3F000000 )
00c867 e0b0     +LDI R27 , HIGH ( 0x3F000000 )
00c868 e080     +LDI R24 , BYTE3 ( 0x3F000000 )
00c869 e39f     +LDI R25 , BYTE4 ( 0x3F000000 )
                 	__GETD2N 0x3F000000
00c86a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x204:
                +
00c86b e0a0     +LDI R26 , LOW ( 0x40A00000 )
00c86c e0b0     +LDI R27 , HIGH ( 0x40A00000 )
00c86d ea80     +LDI R24 , BYTE3 ( 0x40A00000 )
00c86e e490     +LDI R25 , BYTE4 ( 0x40A00000 )
                 	__GETD2N 0x40A00000
00c86f 940e d7dd 	CALL __MULF12
00c871 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x205:
00c872 89ab      	LDD  R26,Y+19
00c873 89bc      	LDD  R27,Y+19+1
00c874 940e 6960 	CALL _updateSensorADC
00c876 89eb      	LDD  R30,Y+19
00c877 89fc      	LDD  R31,Y+19+1
00c878 940c bd01 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 16 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x206:
00c87a 89eb      	LDD  R30,Y+19
00c87b 89fc      	LDD  R31,Y+19+1
00c87c 940c bd01 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x207:
00c87e 93fa      	ST   -Y,R31
00c87f 93ea      	ST   -Y,R30
                +
00c880 e0a5     +LDI R26 , LOW ( 0x5 )
00c881 e0b0     +LDI R27 , HIGH ( 0x5 )
00c882 e080     +LDI R24 , BYTE3 ( 0x5 )
00c883 e090     +LDI R25 , BYTE4 ( 0x5 )
                 	__GETD2N 0x5
00c884 940c 4073 	JMP  _TIMER_setTimer
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x208:
00c886 89eb      	LDD  R30,Y+19
00c887 89fc      	LDD  R31,Y+19+1
00c888 59e7      	SUBI R30,LOW(-_steadyState_S00D0001000)
00c889 4efa      	SBCI R31,HIGH(-_steadyState_S00D0001000)
00c88a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 36 TIMES, CODE SIZE REDUCTION:137 WORDS
                 SUBOPT_0x209:
00c88b e0f0      	LDI  R31,0
00c88c 30e1      	CPI  R30,LOW(0x1)
00c88d e0a0      	LDI  R26,HIGH(0x1)
00c88e 07fa      	CPC  R31,R26
00c88f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x20A:
00c890 89eb      	LDD  R30,Y+19
00c891 89fc      	LDD  R31,Y+19+1
00c892 ebad      	LDI  R26,LOW(_epFactor_C)
00c893 e0b5      	LDI  R27,HIGH(_epFactor_C)
00c894 940e d8e3 	CALL __LSLW2
00c896 0fae      	ADD  R26,R30
00c897 1fbf      	ADC  R27,R31
00c898 940e da48 	CALL __EEPROMRDD
00c89a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20B:
                +
00c89b eaaf     +LDI R26 , LOW ( 0xBDE425AF )
00c89c e2b5     +LDI R27 , HIGH ( 0xBDE425AF )
00c89d ee84     +LDI R24 , BYTE3 ( 0xBDE425AF )
00c89e eb9d     +LDI R25 , BYTE4 ( 0xBDE425AF )
                 	__GETD2N 0xBDE425AF
00c89f 940e d7dd 	CALL __MULF12
00c8a1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20C:
                +
00c8a2 eea9     +LDI R26 , LOW ( 0x3A25EFE9 )
00c8a3 eebf     +LDI R27 , HIGH ( 0x3A25EFE9 )
00c8a4 e285     +LDI R24 , BYTE3 ( 0x3A25EFE9 )
00c8a5 e39a     +LDI R25 , BYTE4 ( 0x3A25EFE9 )
                 	__GETD2N 0x3A25EFE9
00c8a6 940e d7dd 	CALL __MULF12
00c8a8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x20D:
                +
00c8a9 eda5     +LDI R26 , LOW ( 0x3E2603D5 )
00c8aa e0b3     +LDI R27 , HIGH ( 0x3E2603D5 )
00c8ab e286     +LDI R24 , BYTE3 ( 0x3E2603D5 )
00c8ac e39e     +LDI R25 , BYTE4 ( 0x3E2603D5 )
                 	__GETD2N 0x3E2603D5
00c8ad 940e d7dd 	CALL __MULF12
00c8af 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x20E:
00c8b0 89eb      	LDD  R30,Y+19
00c8b1 89fc      	LDD  R31,Y+19+1
00c8b2 eaa9      	LDI  R26,LOW(_epFactor_B)
00c8b3 e0b5      	LDI  R27,HIGH(_epFactor_B)
00c8b4 940e d8e3 	CALL __LSLW2
00c8b6 0fae      	ADD  R26,R30
00c8b7 1fbf      	ADC  R27,R31
00c8b8 940e da48 	CALL __EEPROMRDD
00c8ba 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x20F:
00c8bb e9a5      	LDI  R26,LOW(_epFactor_A)
00c8bc e0b5      	LDI  R27,HIGH(_epFactor_A)
00c8bd 940e d8e3 	CALL __LSLW2
00c8bf 0fae      	ADD  R26,R30
00c8c0 1fbf      	ADC  R27,R31
00c8c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x210:
00c8c2 81ae      	LDD  R26,Y+6
00c8c3 81bf      	LDD  R27,Y+6+1
00c8c4 0fae      	ADD  R26,R30
00c8c5 1fbf      	ADC  R27,R31
00c8c6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x211:
00c8c7 0fae      	ADD  R26,R30
00c8c8 1fbf      	ADC  R27,R31
00c8c9 91ac      	LD   R26,X
00c8ca 30a1      	CPI  R26,LOW(0x1)
00c8cb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x212:
00c8cc e0e5      	LDI  R30,LOW(5)
00c8cd 940e d95a 	CALL __MULB1W2U
                +
00c8cf 5be2     +SUBI R30 , LOW ( - _sensor - ( 4 ) )
00c8d0 4efb     +SBCI R31 , HIGH ( - _sensor - ( 4 ) )
                 	__ADDW1MN _sensor,4
00c8d1 81e0      	LD   R30,Z
00c8d2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x213:
00c8d3 9631      	ADIW R30,1
00c8d4 940e d919 	CALL __CWD1
00c8d6 940e da29 	CALL __PUTPARD1
00c8d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x214:
00c8d9 27ff      	CLR  R31
00c8da 2766      	CLR  R22
00c8db 2777      	CLR  R23
00c8dc 940c bc8a 	JMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x215:
00c8de 81ec      	LDD  R30,Y+4
00c8df 81fd      	LDD  R31,Y+4+1
00c8e0 940c bd01 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x216:
                +
00c8e2 e0e0     +LDI R30 , LOW ( 0x0 )
00c8e3 e0f0     +LDI R31 , HIGH ( 0x0 )
00c8e4 e060     +LDI R22 , BYTE3 ( 0x0 )
00c8e5 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c8e6 940e da5c 	CALL __EEPROMWRD
00c8e8 81ec      	LDD  R30,Y+4
00c8e9 81fd      	LDD  R31,Y+4+1
00c8ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x217:
00c8eb eaa9      	LDI  R26,LOW(_epFactor_B)
00c8ec e0b5      	LDI  R27,HIGH(_epFactor_B)
00c8ed 940e d8e3 	CALL __LSLW2
00c8ef 0fae      	ADD  R26,R30
00c8f0 1fbf      	ADC  R27,R31
00c8f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x218:
00c8f2 ebad      	LDI  R26,LOW(_epFactor_C)
00c8f3 e0b5      	LDI  R27,HIGH(_epFactor_C)
00c8f4 940c bc76 	JMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x219:
                +
00c8f6 e0e0     +LDI R30 , LOW ( 0x0 )
00c8f7 e0f0     +LDI R31 , HIGH ( 0x0 )
00c8f8 e060     +LDI R22 , BYTE3 ( 0x0 )
00c8f9 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00c8fa 940e da5c 	CALL __EEPROMWRD
00c8fc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x21A:
00c8fd 89e8      	LDD  R30,Y+16
00c8fe 89f9      	LDD  R31,Y+16+1
00c8ff eda6      	LDI  R26,LOW(_epADCRef1)
00c900 e0b5      	LDI  R27,HIGH(_epADCRef1)
00c901 940e d8e3 	CALL __LSLW2
00c903 0fae      	ADD  R26,R30
00c904 1fbf      	ADC  R27,R31
00c905 940e da48 	CALL __EEPROMRDD
00c907 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21B:
00c908 89e8      	LDD  R30,Y+16
00c909 89f9      	LDD  R31,Y+16+1
00c90a eeaa      	LDI  R26,LOW(_epTempRef1)
00c90b e0b5      	LDI  R27,HIGH(_epTempRef1)
00c90c 940e d8e3 	CALL __LSLW2
00c90e 0fae      	ADD  R26,R30
00c90f 1fbf      	ADC  R27,R31
00c910 940e da48 	CALL __EEPROMRDD
00c912 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x21C:
00c913 89a8      	LDD  R26,Y+16
00c914 89b9      	LDD  R27,Y+16+1
00c915 5aa8      	SUBI R26,LOW(-_epCalType)
00c916 4fb9      	SBCI R27,HIGH(-_epCalType)
00c917 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21D:
                +
00c918 e1e2     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 250 ) )
00c919 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 250 ) )
00c91a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 250 ) )
00c91b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 250 ) )
                 	__POINTD1FN _0x1A0000,250
00c91c c8ac      	RJMP SUBOPT_0xEB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x21E:
00c91d ebad      	LDI  R26,LOW(_epFactor_C)
00c91e e0b5      	LDI  R27,HIGH(_epFactor_C)
00c91f 940e d8e3 	CALL __LSLW2
00c921 0fae      	ADD  R26,R30
00c922 1fbf      	ADC  R27,R31
00c923 cac2      	RJMP SUBOPT_0x14D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x21F:
00c924 89e8      	LDD  R30,Y+16
00c925 89f9      	LDD  R31,Y+16+1
00c926 e1a7      	LDI  R26,LOW(_epTempRef2)
00c927 e0b6      	LDI  R27,HIGH(_epTempRef2)
00c928 940e d8e3 	CALL __LSLW2
00c92a 0fae      	ADD  R26,R30
00c92b 1fbf      	ADC  R27,R31
00c92c 940e da48 	CALL __EEPROMRDD
00c92e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x220:
00c92f 940e da3b 	CALL __SWAPD12
00c931 940e d786 	CALL __SUBF12
00c933 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x221:
00c934 89e8      	LDD  R30,Y+16
00c935 89f9      	LDD  R31,Y+16+1
00c936 e0a3      	LDI  R26,LOW(_epADCRef2)
00c937 e0b6      	LDI  R27,HIGH(_epADCRef2)
00c938 940e d8e3 	CALL __LSLW2
00c93a 0fae      	ADD  R26,R30
00c93b 1fbf      	ADC  R27,R31
00c93c 940e da48 	CALL __EEPROMRDD
00c93e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x222:
                +
00c93f e5ea     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 322 ) )
00c940 e4f5     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 322 ) )
00c941 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 322 ) )
00c942 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 322 ) )
                 	__POINTD1FN _0x1A0000,322
00c943 c885      	RJMP SUBOPT_0xEB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x223:
00c944 940e d8e3 	CALL __LSLW2
00c946 0fae      	ADD  R26,R30
00c947 1fbf      	ADC  R27,R31
00c948 940e da48 	CALL __EEPROMRDD
00c94a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x224:
00c94b 940e da29 	CALL __PUTPARD1
00c94d 8de8      	LDD  R30,Y+24
00c94e 8df9      	LDD  R31,Y+24+1
00c94f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x225:
00c950 eeaa      	LDI  R26,LOW(_epTempRef1)
00c951 e0b5      	LDI  R27,HIGH(_epTempRef1)
00c952 cff1      	RJMP SUBOPT_0x223
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x226:
00c953 e1a7      	LDI  R26,LOW(_epTempRef2)
00c954 e0b6      	LDI  R27,HIGH(_epTempRef2)
00c955 cfee      	RJMP SUBOPT_0x223
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x227:
00c956 e4a4      	LDI  R26,LOW(_epTempRef3)
00c957 e0b6      	LDI  R27,HIGH(_epTempRef3)
00c958 cfeb      	RJMP SUBOPT_0x223
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x228:
00c959 940e d8e3 	CALL __LSLW2
00c95b 0fae      	ADD  R26,R30
00c95c 1fbf      	ADC  R27,R31
00c95d 940e bf4d 	CALL SUBOPT_0x87
00c95f 940e da5c 	CALL __EEPROMWRD
00c961 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x229:
00c962 e0e2      	LDI  R30,LOW(2)
00c963 93ea      	ST   -Y,R30
00c964 01de      	MOVW R26,R28
00c965 961b      	ADIW R26,11
00c966 940c 9e3e 	JMP  _ftoa
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x22A:
                +
00c968 e2eb     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 531 ) )
00c969 e4f6     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 531 ) )
00c96a e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 531 ) )
00c96b e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 531 ) )
                 	__POINTD1FN _0x1A0000,531
00c96c 940e da29 	CALL __PUTPARD1
00c96e e080      	LDI  R24,0
00c96f 940e bace 	CALL _sprintf
00c971 9626      	ADIW R28,6
00c972 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x22B:
00c973 01de      	MOVW R26,R28
00c974 9616      	ADIW R26,6
00c975 940c a16b 	JMP  _strlen
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x22C:
00c977 53e0      	SUBI R30,LOW(48)
                +
00c978 89a8     +LDD R26 , Y + 16
00c979 89b9     +LDD R27 , Y + 16 + 1
00c97a 9612     +ADIW R26 , 2
00c97b 93ec     +ST X , R30
                 	__PUTB1SNS 16,2
00c97c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22D:
00c97d 53e0      	SUBI R30,LOW(48)
                +
00c97e 89a8     +LDD R26 , Y + 16
00c97f 89b9     +LDD R27 , Y + 16 + 1
00c980 9613     +ADIW R26 , 3
00c981 93ec     +ST X , R30
                 	__PUTB1SNS 16,3
00c982 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22E:
00c983 53e0      	SUBI R30,LOW(48)
                +
00c984 89a8     +LDD R26 , Y + 16
00c985 89b9     +LDD R27 , Y + 16 + 1
00c986 9614     +ADIW R26 , 4
00c987 93ec     +ST X , R30
                 	__PUTB1SNS 16,4
00c988 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x22F:
00c989 53e0      	SUBI R30,LOW(48)
                +
00c98a 89a8     +LDD R26 , Y + 16
00c98b 89b9     +LDD R27 , Y + 16 + 1
00c98c 9615     +ADIW R26 , 5
00c98d 93ec     +ST X , R30
                 	__PUTB1SNS 16,5
00c98e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x230:
00c98f 89a8      	LDD  R26,Y+16
00c990 89b9      	LDD  R27,Y+16+1
00c991 9611      	ADIW R26,1
00c992 e0e0      	LDI  R30,LOW(0)
00c993 93ec      	ST   X,R30
00c994 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x231:
                +
00c995 e6e5     +LDI R30 , LOW ( 2 * _0x1A0000 + ( 845 ) )
00c996 e4f7     +LDI R31 , HIGH ( 2 * _0x1A0000 + ( 845 ) )
00c997 e060     +LDI R22 , BYTE3 ( 2 * _0x1A0000 + ( 845 ) )
00c998 e070     +LDI R23 , BYTE4 ( 2 * _0x1A0000 + ( 845 ) )
                 	__POINTD1FN _0x1A0000,845
00c999 940e da29 	CALL __PUTPARD1
00c99b 01fe      	MOVW R30,R28
00c99c 963a      	ADIW R30,10
00c99d 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x232:
00c99f 940e da29 	CALL __PUTPARD1
00c9a1 85ec      	LDD  R30,Y+12
00c9a2 85fd      	LDD  R31,Y+12+1
00c9a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x233:
00c9a4 9fea      	MUL  R30,R26
00c9a5 01f0      	MOVW R30,R0
00c9a6 940e d919 	CALL __CWD1
00c9a8 940e d753 	CALL __CDF1
00c9aa 940e bf6c 	CALL SUBOPT_0x8C
00c9ac 940e d78d 	CALL __ADDF12
00c9ae 940e c158 	CALL SUBOPT_0xD9
00c9b0 81ec      	LDD  R30,Y+4
00c9b1 81fd      	LDD  R31,Y+4+1
00c9b2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x234:
00c9b3 940e bf6c 	CALL SUBOPT_0x8C
00c9b5 940e d78d 	CALL __ADDF12
00c9b7 940e c158 	CALL SUBOPT_0xD9
00c9b9 81ec      	LDD  R30,Y+4
00c9ba 81fd      	LDD  R31,Y+4+1
00c9bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x235:
00c9bc e0f0      	LDI  R31,0
00c9bd 940e d919 	CALL __CWD1
00c9bf 940e d753 	CALL __CDF1
00c9c1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x236:
00c9c2 010f      	MOVW R0,R30
00c9c3 85e8      	LDD  R30,Y+8
00c9c4 85f9      	LDD  R31,Y+8+1
00c9c5 940c bd01 	JMP SUBOPT_0x31
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x237:
00c9c7 01d0      	MOVW R26,R0
00c9c8 940e da5c 	CALL __EEPROMWRD
00c9ca 85a8      	LDD  R26,Y+8
00c9cb 85b9      	LDD  R27,Y+8+1
00c9cc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x238:
00c9cd 940e da6c 	CALL __EEPROMWRB
00c9cf 85a8      	LDD  R26,Y+8
00c9d0 85b9      	LDD  R27,Y+8+1
00c9d1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x239:
00c9d2 01f5      	MOVW R30,R10
00c9d3 e0aa      	LDI  R26,LOW(10)
00c9d4 e0b0      	LDI  R27,HIGH(10)
00c9d5 940e d932 	CALL __MULW12U
00c9d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x23A:
00c9d8 940e be1e 	CALL SUBOPT_0x59
00c9da 940e da1f 	CALL __PUTDZ20
00c9dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:31 WORDS
                 SUBOPT_0x23B:
00c9dd 940e da1f 	CALL __PUTDZ20
00c9df 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x23C:
00c9e0 e0ea      	LDI  R30,LOW(10)
00c9e1 e0f0      	LDI  R31,HIGH(10)
00c9e2 940e d9c4 	CALL __MODW21
00c9e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23D:
00c9e5 01f6      	MOVW R30,R12
00c9e6 e0aa      	LDI  R26,LOW(10)
00c9e7 e0b0      	LDI  R27,HIGH(10)
00c9e8 940e d932 	CALL __MULW12U
00c9ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x23E:
00c9eb 01df      	MOVW R26,R30
00c9ec 940e d9f4 	CALL __GETD1P
00c9ee 81ac      	LDD  R26,Y+4
00c9ef 81bd      	LDD  R27,Y+4+1
00c9f0 940e d9ff 	CALL __PUTDP1
00c9f2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x23F:
00c9f3 93e0 1483 	STS  _batteryVolt,R30
00c9f5 93f0 1484 	STS  _batteryVolt+1,R31
00c9f7 9360 1485 	STS  _batteryVolt+2,R22
00c9f9 9370 1486 	STS  _batteryVolt+3,R23
00c9fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x240:
                +
00c9fc 91e0 136b+LDS R30 , _env_config + ( 6 )
00c9fe 91f0 136c+LDS R31 , _env_config + ( 6 ) + 1
00ca00 9160 136d+LDS R22 , _env_config + ( 6 ) + 2
00ca02 9170 136e+LDS R23 , _env_config + ( 6 ) + 3
                 	__GETD1MN _env_config,6
00ca04 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x241:
00ca05 70e4      	ANDI R30,LOW(0x4)
00ca06 e0f0      	LDI  R31,0
00ca07 940e d8ec 	CALL __ASRW2
00ca09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x242:
00ca0a 91e0 146b 	LDS  R30,_sdFreeSpace
00ca0c 91f0 146c 	LDS  R31,_sdFreeSpace+1
00ca0e 9160 146d 	LDS  R22,_sdFreeSpace+2
00ca10 9170 146e 	LDS  R23,_sdFreeSpace+3
00ca12 940e da7d 	CALL __CPD10
00ca14 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x243:
00ca15 81e8      	LD   R30,Y
00ca16 81f9      	LDD  R31,Y+1
00ca17 59e1      	SUBI R30,LOW(-_sensorStatus)
00ca18 4efb      	SBCI R31,HIGH(-_sensorStatus)
00ca19 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x244:
00ca1a 81ea      	LDD  R30,Y+2
00ca1b 81fb      	LDD  R31,Y+2+1
00ca1c 51e2      	SUBI R30,LOW(-_flag_lower_S00F0005000)
00ca1d 4efa      	SBCI R31,HIGH(-_flag_lower_S00F0005000)
00ca1e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x245:
00ca1f 81ea      	LDD  R30,Y+2
00ca20 81fb      	LDD  R31,Y+2+1
00ca21 edaa      	LDI  R26,LOW(_t_S00F0005000)
00ca22 e1b5      	LDI  R27,HIGH(_t_S00F0005000)
00ca23 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x246:
00ca24 93fa      	ST   -Y,R31
00ca25 93ea      	ST   -Y,R30
00ca26 81ac      	LDD  R26,Y+4
00ca27 81bd      	LDD  R27,Y+4+1
00ca28 e1ed      	LDI  R30,LOW(29)
00ca29 940e d95a 	CALL __MULB1W2U
00ca2b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x247:
                +
00ca2c 53e5     +SUBI R30 , LOW ( - _sensor_config - ( 13 ) )
00ca2d 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 13 ) )
                 	__ADDW1MN _sensor_config,13
00ca2e 01df      	MOVW R26,R30
00ca2f 940c bc7b 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x248:
00ca31 81aa      	LDD  R26,Y+2
00ca32 81bb      	LDD  R27,Y+2+1
00ca33 58ac      	SUBI R26,LOW(-_dataStatus)
00ca34 4ebb      	SBCI R27,HIGH(-_dataStatus)
00ca35 91ec      	LD   R30,X
00ca36 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x249:
00ca37 81ea      	LDD  R30,Y+2
00ca38 81fb      	LDD  R31,Y+2+1
00ca39 50ed      	SUBI R30,LOW(-_flag_upper_S00F0005000)
00ca3a 4efa      	SBCI R31,HIGH(-_flag_upper_S00F0005000)
00ca3b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24A:
                +
00ca3c 52eb     +SUBI R30 , LOW ( - _sensor_config - ( 23 ) )
00ca3d 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 23 ) )
                 	__ADDW1MN _sensor_config,23
00ca3e 01df      	MOVW R26,R30
00ca3f 940c bc7b 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x24B:
                +
00ca41 ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00ca42 e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00ca43 0fe0      	ADD  R30,R16
00ca44 1ff1      	ADC  R31,R17
00ca45 81e0      	LD   R30,Z
00ca46 30e0      	CPI  R30,0
00ca47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x24C:
00ca48 81aa      	LDD  R26,Y+2
00ca49 81bb      	LDD  R27,Y+2+1
00ca4a 01cd      	MOVW R24,R26
00ca4b 916d      	LD   R22,X+
00ca4c 917c      	LD   R23,X
00ca4d e0e4      	LDI  R30,LOW(4)
00ca4e e0f0      	LDI  R31,HIGH(4)
00ca4f 1be0      	SUB  R30,R16
00ca50 0bf1      	SBC  R31,R17
00ca51 e0a1      	LDI  R26,LOW(1)
00ca52 e0b0      	LDI  R27,HIGH(1)
00ca53 940e d8be 	CALL __LSLW12
00ca55 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24D:
00ca56 91a0 167c 	LDS  R26,_last_wr_eventQ
00ca58 91b0 167d 	LDS  R27,_last_wr_eventQ+1
00ca5a e0e6      	LDI  R30,LOW(6)
00ca5b 940e d95a 	CALL __MULB1W2U
00ca5d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x24E:
00ca5e 91a0 167e 	LDS  R26,_last_rd_eventQ
00ca60 91b0 167f 	LDS  R27,_last_rd_eventQ+1
00ca62 e0e6      	LDI  R30,LOW(6)
00ca63 940e d95a 	CALL __MULB1W2U
00ca65 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x24F:
00ca66 81e0      	LD   R30,Z
00ca67 81a8      	LD   R26,Y
00ca68 81b9      	LDD  R27,Y+1
00ca69 93ec      	ST   X,R30
00ca6a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x250:
00ca6b 940e da9b 	CALL __SAVELOCR4
                +
00ca6d e000     +LDI R16 , LOW ( 0 )
00ca6e e010     +LDI R17 , HIGH ( 0 )
                 	__GETWRN 16,17,0
00ca6f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x251:
00ca70 0fa0      	ADD  R26,R16
00ca71 1fb1      	ADC  R27,R17
00ca72 91ec      	LD   R30,X
00ca73 30e0      	CPI  R30,0
00ca74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x252:
00ca75 93fa      	ST   -Y,R31
00ca76 93ea      	ST   -Y,R30
                +
00ca77 e0a3     +LDI R26 , LOW ( 0x3 )
00ca78 e0b0     +LDI R27 , HIGH ( 0x3 )
00ca79 e080     +LDI R24 , BYTE3 ( 0x3 )
00ca7a e090     +LDI R25 , BYTE4 ( 0x3 )
                 	__GETD2N 0x3
00ca7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x253:
00ca7c 81a8      	LD   R26,Y
00ca7d 81b9      	LDD  R27,Y+1
00ca7e 93ec      	ST   X,R30
00ca7f e0e0      	LDI  R30,LOW(0)
00ca80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x254:
                +
00ca81 91a0 136b+LDS R26 , _env_config + ( 6 )
00ca83 91b0 136c+LDS R27 , _env_config + ( 6 ) + 1
00ca85 9180 136d+LDS R24 , _env_config + ( 6 ) + 2
00ca87 9190 136e+LDS R25 , _env_config + ( 6 ) + 3
                 	__GETD2MN _env_config,6
00ca89 940e da89 	CALL __CPD02
00ca8b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x255:
00ca8c 81a8      	LD   R26,Y
00ca8d 81b9      	LDD  R27,Y+1
00ca8e e0e0      	LDI  R30,LOW(0)
00ca8f 93ec      	ST   X,R30
00ca90 e0e1      	LDI  R30,LOW(1)
00ca91 e0f0      	LDI  R31,HIGH(1)
00ca92 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x256:
                +
00ca93 91a0 1375+LDS R26 , _env_config + ( 16 )
00ca95 91b0 1376+LDS R27 , _env_config + ( 16 ) + 1
                 	__GETW2MN _env_config,16
00ca97 940e da81 	CALL __CPW02
00ca99 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x257:
00ca9a 81ea      	LDD  R30,Y+2
00ca9b 81fb      	LDD  R31,Y+2+1
00ca9c 58e4      	SUBI R30,LOW(-_dinStatus)
00ca9d 4efb      	SBCI R31,HIGH(-_dinStatus)
00ca9e 81a0      	LD   R26,Z
00ca9f 81ea      	LDD  R30,Y+2
00caa0 81fb      	LDD  R31,Y+2+1
00caa1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x258:
00caa2 81ea      	LDD  R30,Y+2
00caa3 81fb      	LDD  R31,Y+2+1
00caa4 55e0      	SUBI R30,LOW(-_t_flag_S0110006000)
00caa5 4ef9      	SBCI R31,HIGH(-_t_flag_S0110006000)
00caa6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x259:
00caa7 81ea      	LDD  R30,Y+2
00caa8 81fb      	LDD  R31,Y+2+1
00caa9 58e4      	SUBI R30,LOW(-_dinStatus)
00caaa 4efb      	SBCI R31,HIGH(-_dinStatus)
00caab 81e0      	LD   R30,Z
00caac 93ec      	ST   X,R30
00caad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25A:
00caae 93ba      	ST   -Y,R27
00caaf 93aa      	ST   -Y,R26
00cab0 81ea      	LDD  R30,Y+2
00cab1 81fb      	LDD  R31,Y+2+1
00cab2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25B:
00cab3 81ea      	LDD  R30,Y+2
00cab4 81fb      	LDD  R31,Y+2+1
00cab5 59e1      	SUBI R30,LOW(-_sensorStatus)
00cab6 4efb      	SBCI R31,HIGH(-_sensorStatus)
00cab7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x25C:
00cab8 81ea      	LDD  R30,Y+2
00cab9 81fb      	LDD  R31,Y+2+1
00caba 53e8      	SUBI R30,LOW(-_t_flag_S0110007000)
00cabb 4ef9      	SBCI R31,HIGH(-_t_flag_S0110007000)
00cabc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x25D:
00cabd 81ea      	LDD  R30,Y+2
00cabe 81fb      	LDD  R31,Y+2+1
00cabf eba4      	LDI  R26,LOW(_t_S0110007000)
00cac0 e1b6      	LDI  R27,HIGH(_t_S0110007000)
00cac1 940c bc76 	JMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x25E:
00cac3 81ea      	LDD  R30,Y+2
00cac4 81fb      	LDD  R31,Y+2+1
00cac5 51ea      	SUBI R30,LOW(-_t_flag_S0110008000)
00cac6 4ef9      	SBCI R31,HIGH(-_t_flag_S0110008000)
00cac7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x25F:
00cac8 e088      	LDI  R24,8
00cac9 940e 7c63 	CALL _printOLED
00cacb 962c      	ADIW R28,12
00cacc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x260:
                +
00cacd e0a5     +LDI R26 , 5
00cace 9fa0     +MUL R26 , R16
00cacf 01f0     +MOVW R30 , R0
00cad0 9fa1     +MUL R26 , R17
00cad1 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,5
00cad2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x261:
00cad3 940e da29 	CALL __PUTPARD1
00cad5 01f8      	MOVW R30,R16
00cad6 cdfc      	RJMP SUBOPT_0x213
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x262:
00cad7 940e da29 	CALL __PUTPARD1
00cad9 cfee      	RJMP SUBOPT_0x25F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 118 TIMES, CODE SIZE REDUCTION:231 WORDS
                 SUBOPT_0x263:
00cada e084      	LDI  R24,4
00cadb 940e 7c63 	CALL _printOLED
00cadd 9628      	ADIW R28,8
00cade 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x264:
00cadf 940e bf6c 	CALL SUBOPT_0x8C
                +
00cae1 e0e0     +LDI R30 , LOW ( 0x40400000 )
00cae2 e0f0     +LDI R31 , HIGH ( 0x40400000 )
00cae3 e460     +LDI R22 , BYTE3 ( 0x40400000 )
00cae4 e470     +LDI R23 , BYTE4 ( 0x40400000 )
                 	__GETD1N 0x40400000
00cae5 940e d870 	CALL __CMPF12
00cae7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x265:
00cae8 940e bf6c 	CALL SUBOPT_0x8C
                +
00caea e3e3     +LDI R30 , LOW ( 0x40533333 )
00caeb e3f3     +LDI R31 , HIGH ( 0x40533333 )
00caec e563     +LDI R22 , BYTE3 ( 0x40533333 )
00caed e470     +LDI R23 , BYTE4 ( 0x40533333 )
                 	__GETD1N 0x40533333
00caee 940e d870 	CALL __CMPF12
00caf0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x266:
00caf1 940e bf6c 	CALL SUBOPT_0x8C
                +
00caf3 eced     +LDI R30 , LOW ( 0x406CCCCD )
00caf4 ecfc     +LDI R31 , HIGH ( 0x406CCCCD )
00caf5 e66c     +LDI R22 , BYTE3 ( 0x406CCCCD )
00caf6 e470     +LDI R23 , BYTE4 ( 0x406CCCCD )
                 	__GETD1N 0x406CCCCD
00caf7 940e d870 	CALL __CMPF12
00caf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x267:
00cafa 940e bf6c 	CALL SUBOPT_0x8C
                +
00cafc e0e0     +LDI R30 , LOW ( 0x40800000 )
00cafd e0f0     +LDI R31 , HIGH ( 0x40800000 )
00cafe e860     +LDI R22 , BYTE3 ( 0x40800000 )
00caff e470     +LDI R23 , BYTE4 ( 0x40800000 )
                 	__GETD1N 0x40800000
00cb00 940e d870 	CALL __CMPF12
00cb02 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 39 TIMES, CODE SIZE REDUCTION:73 WORDS
                 SUBOPT_0x268:
00cb03 e080      	LDI  R24,0
00cb04 940e 7c63 	CALL _printOLED
00cb06 9624      	ADIW R28,4
00cb07 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 20 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x269:
00cb08 940e d919 	CALL __CWD1
00cb0a 940e da29 	CALL __PUTPARD1
00cb0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x26A:
00cb0d 940e da29 	CALL __PUTPARD1
00cb0f 81ec      	LDD  R30,Y+4
00cb10 940c be67 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x26B:
00cb12 940e d890 	CALL __ADDW2R15
00cb14 940e d9f4 	CALL __GETD1P
00cb16 940e da29 	CALL __PUTPARD1
00cb18 01d8      	MOVW R26,R16
00cb19 940c bb04 	JMP  _vsprintf
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x26C:
00cb1b 940e bdec 	CALL SUBOPT_0x52
00cb1d 940e b50a 	CALL _f_lseek
00cb1f 2f1e      	MOV  R17,R30
00cb20 3010      	CPI  R17,0
00cb21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x26D:
00cb22 2fa1      	MOV  R26,R17
00cb23 940e 7cc3 	CALL _error
00cb25 efef      	LDI  R30,LOW(65535)
00cb26 efff      	LDI  R31,HIGH(65535)
00cb27 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26E:
00cb28 93fa      	ST   -Y,R31
00cb29 93ea      	ST   -Y,R30
00cb2a 01fe      	MOVW R30,R28
00cb2b 9633      	ADIW R30,3
00cb2c 93fa      	ST   -Y,R31
00cb2d 93ea      	ST   -Y,R30
00cb2e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x26F:
00cb2f 940e da29 	CALL __PUTPARD1
00cb31 e1ef      	LDI  R30,LOW(_root_path)
00cb32 e1f9      	LDI  R31,HIGH(_root_path)
00cb33 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x270:
00cb35 940e 7cc3 	CALL _error
00cb37 e0e0      	LDI  R30,LOW(0)
00cb38 93e0 146b 	STS  _sdFreeSpace,R30
00cb3a 93e0 146c 	STS  _sdFreeSpace+1,R30
00cb3c 93e0 146d 	STS  _sdFreeSpace+2,R30
00cb3e 93e0 146e 	STS  _sdFreeSpace+3,R30
00cb40 efef      	LDI  R30,LOW(65535)
00cb41 efff      	LDI  R31,HIGH(65535)
00cb42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x271:
00cb43 81e2      	LDD  R30,Z+2
00cb44 e0f0      	LDI  R31,0
00cb45 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x272:
                +
00cb46 81a9     +LDD R26 , Y + 1
00cb47 81ba     +LDD R27 , Y + 1 + 1
00cb48 818b     +LDD R24 , Y + 1 + 2
00cb49 819c     +LDD R25 , Y + 1 + 3
                 	__GETD2S 1
00cb4a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x273:
00cb4b 940e d919 	CALL __CWD1
00cb4d 940e d93a 	CALL __MULD12U
00cb4f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x274:
                +
00cb50 e0e4     +LDI R30 , LOW ( 2 * _0x260000 + ( 798 ) )
00cb51 e5f0     +LDI R31 , HIGH ( 2 * _0x260000 + ( 798 ) )
00cb52 e060     +LDI R22 , BYTE3 ( 2 * _0x260000 + ( 798 ) )
00cb53 e070     +LDI R23 , BYTE4 ( 2 * _0x260000 + ( 798 ) )
                 	__POINTD1FN _0x260000,798
00cb54 cfda      	RJMP SUBOPT_0x26F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x275:
00cb55 93fa      	ST   -Y,R31
00cb56 93ea      	ST   -Y,R30
00cb57 01fe      	MOVW R30,R28
00cb58 9634      	ADIW R30,4
00cb59 93fa      	ST   -Y,R31
00cb5a 93ea      	ST   -Y,R30
00cb5b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x276:
00cb5c 89ee      	LDD  R30,Y+22
00cb5d 89ff      	LDD  R31,Y+22+1
00cb5e 93fa      	ST   -Y,R31
00cb5f 93ea      	ST   -Y,R30
00cb60 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x277:
00cb61 01de      	MOVW R26,R28
00cb62 961a      	ADIW R26,10
00cb63 940e 814f 	CALL _LOG_getLastInsert
00cb65 018f      	MOVW R16,R30
00cb66 2311      	TST  R17
00cb67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x278:
00cb68 940e bdd3 	CALL SUBOPT_0x4F
00cb6a 940e da29 	CALL __PUTPARD1
00cb6c 940c bda9 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x279:
00cb6e 940e 81d7 	CALL _index2Addr
00cb70 940c c03e 	JMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27A:
00cb72 940e c081 	CALL SUBOPT_0xB7
00cb74 940e da29 	CALL __PUTPARD1
00cb76 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x27B:
00cb77 940e c081 	CALL SUBOPT_0xB7
00cb79 940c c144 	JMP SUBOPT_0xD5
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:19 WORDS
                 SUBOPT_0x27C:
00cb7b 93fa      	ST   -Y,R31
00cb7c 93ea      	ST   -Y,R30
00cb7d 940c bee6 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x27D:
00cb7f 940e 7ce3 	CALL _SD_writeData
00cb81 018f      	MOVW R16,R30
00cb82 2311      	TST  R17
00cb83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x27E:
00cb84 940e c081 	CALL SUBOPT_0xB7
                +
00cb86 5feb     +SUBI R30 , LOW ( - 5 )
00cb87 4fff     +SBCI R31 , HIGH ( - 5 )
00cb88 4f6f     +SBCI R22 , BYTE3 ( - 5 )
00cb89 4f7f     +SBCI R23 , BYTE4 ( - 5 )
                 	__ADDD1N 5
00cb8a 940e da29 	CALL __PUTPARD1
00cb8c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x27F:
00cb8d 940e c081 	CALL SUBOPT_0xB7
                +
00cb8f 5fe9     +SUBI R30 , LOW ( - 7 )
00cb90 4fff     +SBCI R31 , HIGH ( - 7 )
00cb91 4f6f     +SBCI R22 , BYTE3 ( - 7 )
00cb92 4f7f     +SBCI R23 , BYTE4 ( - 7 )
                 	__ADDD1N 7
00cb93 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x280:
00cb94 940e c14e 	CALL SUBOPT_0xD7
00cb96 940e c0a8 	CALL SUBOPT_0xBE
                +
00cb98 87ea     +STD Y + 10 , R30
00cb99 87fb     +STD Y + 10 + 1 , R31
00cb9a 876c     +STD Y + 10 + 2 , R22
00cb9b 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00cb9c 01df      	MOVW R26,R30
00cb9d 01cb      	MOVW R24,R22
00cb9e 940e 816a 	CALL _LOG_setLastInsert
00cba0 018f      	MOVW R16,R30
00cba1 2311      	TST  R17
00cba2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x281:
00cba3 8de8      	LDD  R30,Y+24
00cba4 8df9      	LDD  R31,Y+24+1
00cba5 93fa      	ST   -Y,R31
00cba6 93ea      	ST   -Y,R30
00cba7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x282:
00cba8 01de      	MOVW R26,R28
00cba9 961e      	ADIW R26,14
00cbaa 940e 814f 	CALL _LOG_getLastInsert
00cbac 018f      	MOVW R16,R30
00cbad 2311      	TST  R17
00cbae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x283:
00cbaf 01de      	MOVW R26,R28
00cbb0 961a      	ADIW R26,10
00cbb1 940e 818b 	CALL _LOG_getLastSend
00cbb3 018f      	MOVW R16,R30
00cbb4 2311      	TST  R17
00cbb5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x284:
                +
00cbb6 e6e2     +LDI R30 , LOW ( 2 * _0x280000 + ( 370 ) )
00cbb7 e5f3     +LDI R31 , HIGH ( 2 * _0x280000 + ( 370 ) )
00cbb8 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 370 ) )
00cbb9 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 370 ) )
                 	__POINTD1FN _0x280000,370
00cbba 940c bf6f 	JMP SUBOPT_0x8D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x285:
00cbbc 940e da29 	CALL __PUTPARD1
00cbbe 940e c174 	CALL SUBOPT_0xDF
00cbc0 940c bc8a 	JMP SUBOPT_0x20
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x286:
00cbc2 940e c162 	CALL SUBOPT_0xDC
00cbc4 940e c15d 	CALL SUBOPT_0xDB
00cbc6 940e da94 	CALL __CPD21
00cbc8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x287:
00cbc9 eae8      	LDI  R30,LOW(_LOGFILE_DATA)
00cbca e1f4      	LDI  R31,HIGH(_LOGFILE_DATA)
00cbcb 93fa      	ST   -Y,R31
00cbcc 93ea      	ST   -Y,R30
00cbcd e0e1      	LDI  R30,LOW(1)
00cbce 93ea      	ST   -Y,R30
00cbcf ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00cbd0 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00cbd1 93fa      	ST   -Y,R31
00cbd2 93ea      	ST   -Y,R30
00cbd3 e1a0      	LDI  R26,LOW(16)
00cbd4 e0b0      	LDI  R27,0
00cbd5 940e 81e9 	CALL _LOG_createFile
00cbd7 018f      	MOVW R16,R30
00cbd8 2311      	TST  R17
00cbd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x288:
00cbda 940e 7d3a 	CALL _SD_readData
00cbdc 018f      	MOVW R16,R30
00cbdd 2311      	TST  R17
00cbde 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x289:
00cbdf 89ea      	LDD  R30,Y+18
00cbe0 89fb      	LDD  R31,Y+18+1
00cbe1 93fa      	ST   -Y,R31
00cbe2 93ea      	ST   -Y,R30
00cbe3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28A:
00cbe4 940e bdd3 	CALL SUBOPT_0x4F
00cbe6 940e da29 	CALL __PUTPARD1
00cbe8 940c bbf9 	JMP SUBOPT_0xA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28B:
00cbea 93fa      	ST   -Y,R31
00cbeb 93ea      	ST   -Y,R30
00cbec 940c bee0 	JMP SUBOPT_0x75
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x28C:
00cbee 940e c081 	CALL SUBOPT_0xB7
                +
00cbf0 5fe6     +SUBI R30 , LOW ( - 10 )
00cbf1 4fff     +SBCI R31 , HIGH ( - 10 )
00cbf2 4f6f     +SBCI R22 , BYTE3 ( - 10 )
00cbf3 4f7f     +SBCI R23 , BYTE4 ( - 10 )
                 	__ADDD1N 10
00cbf4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x28D:
00cbf5 ebe1      	LDI  R30,LOW(_LOGFILE_EVENT)
00cbf6 e1f4      	LDI  R31,HIGH(_LOGFILE_EVENT)
00cbf7 93fa      	ST   -Y,R31
00cbf8 93ea      	ST   -Y,R30
00cbf9 e0e1      	LDI  R30,LOW(1)
00cbfa 93ea      	ST   -Y,R30
00cbfb ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00cbfc e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00cbfd 93fa      	ST   -Y,R31
00cbfe 93ea      	ST   -Y,R30
00cbff e1a0      	LDI  R26,LOW(16)
00cc00 e0b0      	LDI  R27,0
00cc01 940e 81e9 	CALL _LOG_createFile
00cc03 018f      	MOVW R16,R30
00cc04 2311      	TST  R17
00cc05 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x28E:
00cc06 81ec      	LDD  R30,Y+4
00cc07 81fd      	LDD  R31,Y+4+1
00cc08 93fa      	ST   -Y,R31
00cc09 93ea      	ST   -Y,R30
00cc0a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x28F:
                +
00cc0b e0e0     +LDI R30 , LOW ( 0x0 )
00cc0c e0f0     +LDI R31 , HIGH ( 0x0 )
00cc0d e060     +LDI R22 , BYTE3 ( 0x0 )
00cc0e e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00cc0f 940e da29 	CALL __PUTPARD1
00cc11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x290:
                +
00cc12 e0e4     +LDI R30 , LOW ( 0x4 )
00cc13 e0f0     +LDI R31 , HIGH ( 0x4 )
00cc14 e060     +LDI R22 , BYTE3 ( 0x4 )
00cc15 e070     +LDI R23 , BYTE4 ( 0x4 )
                 	__GETD1N 0x4
00cc16 940e da29 	CALL __PUTPARD1
00cc18 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x291:
00cc19 940e da29 	CALL __PUTPARD1
                +
00cc1b 01fe     +MOVW R30 , R28
00cc1c 5de5     +SUBI R30 , LOW ( - 555 )
00cc1d 4ffd     +SBCI R31 , HIGH ( - 555 )
00cc1e 9001     +LD R0 , Z +
00cc1f 81f0     +LD R31 , Z
00cc20 2de0     +MOV R30 , R0
                 	__GETW1SX 555
00cc21 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x292:
                +
00cc23 01fe     +MOVW R30 , R28
00cc24 5dec     +SUBI R30 , LOW ( - 548 )
00cc25 4ffd     +SBCI R31 , HIGH ( - 548 )
00cc26 9001     +LD R0 , Z +
00cc27 81f0     +LD R31 , Z
00cc28 2de0     +MOV R30 , R0
                 	__GETW1SX 548
00cc29 93fa      	ST   -Y,R31
00cc2a 93ea      	ST   -Y,R30
                +
00cc2b 01de     +MOVW R26 , R28
00cc2c 5dac     +SUBI R26 , LOW ( - 548 )
00cc2d 4fbd     +SBCI R27 , HIGH ( - 548 )
00cc2e 900d     +LD R0 , X +
00cc2f 91bc     +LD R27 , X
00cc30 2da0     +MOV R26 , R0
                 	__GETW2SX 548
00cc31 940c 9b56 	JMP  _print_payload
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x293:
00cc33 ece5      	LDI  R30,LOW(_LOG_INIT_STR)
00cc34 e1f4      	LDI  R31,HIGH(_LOG_INIT_STR)
00cc35 93fa      	ST   -Y,R31
00cc36 93ea      	ST   -Y,R30
00cc37 e1a0      	LDI  R26,LOW(16)
00cc38 e0b0      	LDI  R27,0
00cc39 940e 81e9 	CALL _LOG_createFile
00cc3b 018f      	MOVW R16,R30
00cc3c 2311      	TST  R17
00cc3d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x294:
                +
00cc3e e6ec     +LDI R30 , LOW ( 2 * _0x280000 + ( 1916 ) )
00cc3f e5f9     +LDI R31 , HIGH ( 2 * _0x280000 + ( 1916 ) )
00cc40 e060     +LDI R22 , BYTE3 ( 2 * _0x280000 + ( 1916 ) )
00cc41 e070     +LDI R23 , BYTE4 ( 2 * _0x280000 + ( 1916 ) )
                 	__POINTD1FN _0x280000,1916
00cc42 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x295:
00cc43 940e da29 	CALL __PUTPARD1
00cc45 ebeb      	LDI  R30,LOW(_LOGFILE_ERROR)
00cc46 e1f4      	LDI  R31,HIGH(_LOGFILE_ERROR)
00cc47 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x296:
00cc49 01df      	MOVW R26,R30
00cc4a 940e d9f4 	CALL __GETD1P
00cc4c 81ae      	LDD  R26,Y+6
00cc4d 81bf      	LDD  R27,Y+6+1
00cc4e 940e d9ff 	CALL __PUTDP1
00cc50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x297:
00cc51 e0ab      	LDI  R26,LOW(11)
00cc52 9f1a      	MUL  R17,R26
00cc53 01f0      	MOVW R30,R0
00cc54 55e0      	SUBI R30,LOW(-_dataLogQueue)
00cc55 4ef6      	SBCI R31,HIGH(-_dataLogQueue)
00cc56 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x298:
00cc57 e0a0      	LDI  R26,LOW(0)
00cc58 83a0      	STD  Z+0,R26
00cc59 e0ab      	LDI  R26,LOW(11)
00cc5a 9f1a      	MUL  R17,R26
00cc5b 01f0      	MOVW R30,R0
                +
00cc5c 54ef     +SUBI R30 , LOW ( - _dataLogQueue - ( 1 ) )
00cc5d 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 1 ) )
                 	__ADDW1MN _dataLogQueue,1
00cc5e 940e bcda 	CALL SUBOPT_0x2C
00cc60 dd7c      	RCALL SUBOPT_0x23B
00cc61 e0ab      	LDI  R26,LOW(11)
00cc62 9f1a      	MUL  R17,R26
00cc63 01f0      	MOVW R30,R0
                +
00cc64 54eb     +SUBI R30 , LOW ( - _dataLogQueue - ( 5 ) )
00cc65 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 5 ) )
                 	__ADDW1MN _dataLogQueue,5
00cc66 e0a0      	LDI  R26,LOW(0)
00cc67 e0b0      	LDI  R27,HIGH(0)
00cc68 83a0      	STD  Z+0,R26
00cc69 83b1      	STD  Z+1,R27
00cc6a e0ab      	LDI  R26,LOW(11)
00cc6b 9f1a      	MUL  R17,R26
00cc6c 01f0      	MOVW R30,R0
                +
00cc6d 54e9     +SUBI R30 , LOW ( - _dataLogQueue - ( 7 ) )
00cc6e 4ef6     +SBCI R31 , HIGH ( - _dataLogQueue - ( 7 ) )
                 	__ADDW1MN _dataLogQueue,7
00cc6f 940e bcda 	CALL SUBOPT_0x2C
00cc71 cd6b      	RJMP SUBOPT_0x23B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x299:
                +
00cc72 e0a7     +LDI R26 , 7
00cc73 9fa0     +MUL R26 , R16
00cc74 01f0     +MOVW R30 , R0
00cc75 9fa1     +MUL R26 , R17
00cc76 0df0     +ADD R31 , R0
                 	__MULBNWRU 16,17,7
00cc77 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x29A:
00cc78 e0a7      	LDI  R26,LOW(7)
00cc79 9f1a      	MUL  R17,R26
00cc7a 01f0      	MOVW R30,R0
00cc7b 5ded      	SUBI R30,LOW(-_eventLogQueue)
00cc7c 4ef6      	SBCI R31,HIGH(-_eventLogQueue)
00cc7d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x29B:
00cc7e e0a0      	LDI  R26,LOW(0)
00cc7f 83a0      	STD  Z+0,R26
00cc80 e0a7      	LDI  R26,LOW(7)
00cc81 9f1a      	MUL  R17,R26
00cc82 01f0      	MOVW R30,R0
00cc83 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x29C:
                +
00cc84 5dec     +SUBI R30 , LOW ( - _eventLogQueue - ( 1 ) )
00cc85 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 1 ) )
                 	__ADDW1MN _eventLogQueue,1
00cc86 940e bcda 	CALL SUBOPT_0x2C
00cc88 dd54      	RCALL SUBOPT_0x23B
00cc89 e0a7      	LDI  R26,LOW(7)
00cc8a 9f1a      	MUL  R17,R26
00cc8b 01f0      	MOVW R30,R0
                +
00cc8c 5de8     +SUBI R30 , LOW ( - _eventLogQueue - ( 5 ) )
00cc8d 4ef6     +SBCI R31 , HIGH ( - _eventLogQueue - ( 5 ) )
                 	__ADDW1MN _eventLogQueue,5
00cc8e cfef      	RJMP SUBOPT_0x29B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:16 WORDS
                 SUBOPT_0x29D:
00cc8f e0e1      	LDI  R30,LOW(1)
00cc90 93e0 14df 	STS  _currentPage,R30
00cc92 e0e0      	LDI  R30,LOW(0)
00cc93 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00cc95 e3e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00cc96 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00cc97 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00cc98 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00cc99 940e da29 	CALL __PUTPARD1
00cc9b 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cc9d 940e d913 	CALL __CBD1
00cc9f 940e da29 	CALL __PUTPARD1
00cca1 ce38      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 31 TIMES, CODE SIZE REDUCTION:117 WORDS
                 SUBOPT_0x29E:
                +
00cca2 01fe     +MOVW R30 , R28
00cca3 5aea     +SUBI R30 , LOW ( - 86 )
00cca4 4fff     +SBCI R31 , HIGH ( - 86 )
00cca5 81e0     +LD R30 , Z
                 	__GETB1SX 86
00cca6 cbe4      	RJMP SUBOPT_0x209
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:93 WORDS
                 SUBOPT_0x29F:
00cca7 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cca9 50a1      	SUBI R26,LOW(1)
00ccaa 93a0 1a1f 	STS  _cursor_S0160000000,R26
00ccac 30a0      	CPI  R26,0
00ccad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 18 TIMES, CODE SIZE REDUCTION:218 WORDS
                 SUBOPT_0x2A0:
                +
00ccae e3e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 9 ) )
00ccaf e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 9 ) )
00ccb0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 9 ) )
00ccb1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 9 ) )
                 	__POINTD1FN _0x2C0000,9
00ccb2 940e da29 	CALL __PUTPARD1
00ccb4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00ccb6 940e d913 	CALL __CBD1
00ccb8 940e da29 	CALL __PUTPARD1
00ccba ce1f      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 25 TIMES, CODE SIZE REDUCTION:69 WORDS
                 SUBOPT_0x2A1:
00ccbb 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00ccbd 5faf      	SUBI R26,-LOW(1)
00ccbe 93a0 1a1f 	STS  _cursor_S0160000000,R26
00ccc0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:35 WORDS
                 SUBOPT_0x2A2:
00ccc1 e0e2      	LDI  R30,LOW(2)
00ccc2 93e0 14df 	STS  _currentPage,R30
00ccc4 e0e0      	LDI  R30,LOW(0)
00ccc5 93e0 1a1f 	STS  _cursor_S0160000000,R30
                +
00ccc7 e3ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00ccc8 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00ccc9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00ccca e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00cccb 940e da29 	CALL __PUTPARD1
00cccd 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cccf 940e d913 	CALL __CBD1
00ccd1 940e da29 	CALL __PUTPARD1
00ccd3 ce06      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:165 WORDS
                 SUBOPT_0x2A3:
00ccd4 93e0 14df 	STS  _currentPage,R30
00ccd6 e0e0      	LDI  R30,LOW(0)
00ccd7 93e0 1a1f 	STS  _cursor_S0160000000,R30
00ccd9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:23 WORDS
                 SUBOPT_0x2A4:
                +
00ccda e4e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00ccdb e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00ccdc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00ccdd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00ccde 940e da29 	CALL __PUTPARD1
00cce0 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cce2 940e d913 	CALL __CBD1
00cce4 940e da29 	CALL __PUTPARD1
00cce6 cdf3      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2A5:
                +
00cce7 e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00cce8 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00cce9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00ccea e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00cceb 940e da29 	CALL __PUTPARD1
00cced 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00ccef 940e d913 	CALL __CBD1
00ccf1 940e da29 	CALL __PUTPARD1
00ccf3 cde6      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2A6:
00ccf4 93e0 14df 	STS  _currentPage,R30
00ccf6 e1e5      	LDI  R30,LOW(21)
00ccf7 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00ccf9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2A7:
00ccfa 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00ccfc e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00ccfd e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00ccfe 93fa      	ST   -Y,R31
00ccff 93ea      	ST   -Y,R30
00cd00 efef      	LDI  R30,LOW(255)
00cd01 93ea      	ST   -Y,R30
00cd02 940c bee6 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x2A8:
00cd04 940e a124 	CALL _memset
00cd06 e0e0      	LDI  R30,LOW(0)
00cd07 93e0 1a1f 	STS  _cursor_S0160000000,R30
00cd09 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2A9:
                +
00cd0a e3e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 6 ) )
00cd0b e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 6 ) )
00cd0c e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 6 ) )
00cd0d e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 6 ) )
                 	__POINTD1FN _0x2C0000,6
00cd0e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:36 WORDS
                 SUBOPT_0x2AA:
                +
00cd0f e5e4     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 36 ) )
00cd10 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 36 ) )
00cd11 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 36 ) )
00cd12 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 36 ) )
                 	__POINTD1FN _0x2C0000,36
00cd13 940e da29 	CALL __PUTPARD1
00cd15 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cd17 940e d913 	CALL __CBD1
00cd19 940e da29 	CALL __PUTPARD1
00cd1b cdbe      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x2AB:
00cd1c 93e0 14df 	STS  _currentPage,R30
00cd1e e0e7      	LDI  R30,LOW(7)
00cd1f 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00cd21 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AC:
                +
00cd22 e5ea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 42 ) )
00cd23 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 42 ) )
00cd24 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 42 ) )
00cd25 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 42 ) )
                 	__POINTD1FN _0x2C0000,42
00cd26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2AD:
00cd27 940e da29 	CALL __PUTPARD1
                +
00cd29 e6e5     +LDI R30 , LOW ( _properties_config + ( 80 ) )
00cd2a e1f1     +LDI R31 , HIGH ( _properties_config + ( 80 ) )
                 	__POINTW1MN _properties_config,80
00cd2b 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2AE:
00cd2d e3a2      	LDI  R26,LOW(50)
00cd2e e0b0      	LDI  R27,0
00cd2f 940e a124 	CALL _memset
00cd31 01fe      	MOVW R30,R28
00cd32 9638      	ADIW R30,8
00cd33 93fa      	ST   -Y,R31
00cd34 93ea      	ST   -Y,R30
                +
00cd35 e3e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 5 ) )
00cd36 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 5 ) )
00cd37 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 5 ) )
00cd38 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 5 ) )
                 	__POINTD1FN _0x2C0000,5
00cd39 940e da29 	CALL __PUTPARD1
00cd3b e080      	LDI  R24,0
00cd3c 940e bace 	CALL _sprintf
00cd3e 9626      	ADIW R28,6
00cd3f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2AF:
00cd40 01fe      	MOVW R30,R28
00cd41 96fa      	ADIW R30,58
00cd42 940c c206 	JMP SUBOPT_0xF8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B0:
00cd44 e1a4      	LDI  R26,LOW(20)
00cd45 e0b0      	LDI  R27,0
00cd46 940c a124 	JMP  _memset
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2B1:
00cd48 01fe      	MOVW R30,R28
00cd49 96fa      	ADIW R30,58
00cd4a 93fa      	ST   -Y,R31
00cd4b 93ea      	ST   -Y,R30
00cd4c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B2:
00cd4d e080      	LDI  R24,0
00cd4e 940e bace 	CALL _sprintf
00cd50 9626      	ADIW R28,6
00cd51 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2B3:
00cd52 01fe      	MOVW R30,R28
00cd53 9638      	ADIW R30,8
00cd54 93fa      	ST   -Y,R31
00cd55 93ea      	ST   -Y,R30
00cd56 01de      	MOVW R26,R28
00cd57 96dc      	ADIW R26,60
00cd58 940e a134 	CALL _strcat
00cd5a cfe5      	RJMP SUBOPT_0x2AF
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B4:
                +
00cd5b ebe9     +LDI R30 , LOW ( _operating_config + ( 3 ) )
00cd5c e1f1     +LDI R31 , HIGH ( _operating_config + ( 3 ) )
                 	__POINTW1MN _operating_config,3
00cd5d 0fe0      	ADD  R30,R16
00cd5e 1ff1      	ADC  R31,R17
00cd5f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x2B5:
00cd60 01f9      	MOVW R30,R18
                +
00cd61 5f2f     +SUBI R18 , LOW ( - 1 )
00cd62 4f3f     +SBCI R19 , HIGH ( - 1 )
                 	__ADDWRN 18,19,1
00cd63 01de      	MOVW R26,R28
00cd64 96da      	ADIW R26,58
00cd65 0fae      	ADD  R26,R30
00cd66 1fbf      	ADC  R27,R31
00cd67 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B6:
00cd68 940e da29 	CALL __PUTPARD1
00cd6a 01fe      	MOVW R30,R28
00cd6b 963c      	ADIW R30,12
00cd6c 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2B7:
                +
00cd6e 01fe     +MOVW R30 , R28
00cd6f 5aec     +SUBI R30 , LOW ( - 84 )
00cd70 4fff     +SBCI R31 , HIGH ( - 84 )
00cd71 9001     +LD R0 , Z +
00cd72 81f0     +LD R31 , Z
00cd73 2de0     +MOV R30 , R0
                 	__GETW1SX 84
00cd74 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B8:
                +
00cd75 01fe     +MOVW R30 , R28
00cd76 5aee     +SUBI R30 , LOW ( - 82 )
00cd77 4fff     +SBCI R31 , HIGH ( - 82 )
00cd78 9001     +LD R0 , Z +
00cd79 81f0     +LD R31 , Z
00cd7a 2de0     +MOV R30 , R0
                 	__GETW1SX 82
00cd7b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2B9:
                +
00cd7c 01de     +MOVW R26 , R28
00cd7d 5aac     +SUBI R26 , LOW ( - 84 )
00cd7e 4fbf     +SBCI R27 , HIGH ( - 84 )
00cd7f 900d     +LD R0 , X +
00cd80 91bc     +LD R27 , X
00cd81 2da0     +MOV R26 , R0
                 	__GETW2SX 84
00cd82 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2BA:
00cd83 e2ee      	LDI  R30,LOW(_setIp_S0160000000)
00cd84 e1fa      	LDI  R31,HIGH(_setIp_S0160000000)
00cd85 93fa      	ST   -Y,R31
00cd86 93ea      	ST   -Y,R30
00cd87 e3ea      	LDI  R30,LOW(_setMask_S0160000000)
00cd88 e1fa      	LDI  R31,HIGH(_setMask_S0160000000)
00cd89 93fa      	ST   -Y,R31
00cd8a 93ea      	ST   -Y,R30
00cd8b e4e6      	LDI  R30,LOW(_setGw_S0160000000)
00cd8c e1fa      	LDI  R31,HIGH(_setGw_S0160000000)
00cd8d 93fa      	ST   -Y,R31
00cd8e 93ea      	ST   -Y,R30
00cd8f e5a2      	LDI  R26,LOW(_setServer_S0160000000)
00cd90 e1ba      	LDI  R27,HIGH(_setServer_S0160000000)
00cd91 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2BB:
00cd92 940e da29 	CALL __PUTPARD1
00cd94 91a0 1a2e 	LDS  R26,_setIp_S0160000000
00cd96 e6e4      	LDI  R30,LOW(100)
00cd97 9fea      	MUL  R30,R26
00cd98 01b0      	MOVW R22,R0
                +
00cd99 91a0 1a2f+LDS R26 , _setIp_S0160000000 + ( 1 )
                 	__GETB2MN _setIp_S0160000000,1
00cd9b e0ea      	LDI  R30,LOW(10)
00cd9c 9fea      	MUL  R30,R26
00cd9d 01f0      	MOVW R30,R0
00cd9e 01db      	MOVW R26,R22
00cd9f 0fae      	ADD  R26,R30
00cda0 1fbf      	ADC  R27,R31
                +
00cda1 91e0 1a30+LDS R30 , _setIp_S0160000000 + ( 2 )
                 	__GETB1MN _setIp_S0160000000,2
00cda3 e0f0      	LDI  R31,0
00cda4 c90a      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BC:
                +
00cda5 91a0 1a31+LDS R26 , _setIp_S0160000000 + ( 3 )
                 	__GETB2MN _setIp_S0160000000,3
00cda7 e6e4      	LDI  R30,LOW(100)
00cda8 9fea      	MUL  R30,R26
00cda9 01b0      	MOVW R22,R0
                +
00cdaa 91a0 1a32+LDS R26 , _setIp_S0160000000 + ( 4 )
                 	__GETB2MN _setIp_S0160000000,4
00cdac e0ea      	LDI  R30,LOW(10)
00cdad 9fea      	MUL  R30,R26
00cdae 01f0      	MOVW R30,R0
00cdaf 01db      	MOVW R26,R22
00cdb0 0fae      	ADD  R26,R30
00cdb1 1fbf      	ADC  R27,R31
                +
00cdb2 91e0 1a33+LDS R30 , _setIp_S0160000000 + ( 5 )
                 	__GETB1MN _setIp_S0160000000,5
00cdb4 e0f0      	LDI  R31,0
00cdb5 c8f9      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BD:
                +
00cdb6 91a0 1a34+LDS R26 , _setIp_S0160000000 + ( 6 )
                 	__GETB2MN _setIp_S0160000000,6
00cdb8 e6e4      	LDI  R30,LOW(100)
00cdb9 9fea      	MUL  R30,R26
00cdba 01b0      	MOVW R22,R0
                +
00cdbb 91a0 1a35+LDS R26 , _setIp_S0160000000 + ( 7 )
                 	__GETB2MN _setIp_S0160000000,7
00cdbd e0ea      	LDI  R30,LOW(10)
00cdbe 9fea      	MUL  R30,R26
00cdbf 01f0      	MOVW R30,R0
00cdc0 01db      	MOVW R26,R22
00cdc1 0fae      	ADD  R26,R30
00cdc2 1fbf      	ADC  R27,R31
                +
00cdc3 91e0 1a36+LDS R30 , _setIp_S0160000000 + ( 8 )
                 	__GETB1MN _setIp_S0160000000,8
00cdc5 e0f0      	LDI  R31,0
00cdc6 c8e8      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BE:
                +
00cdc7 91a0 1a37+LDS R26 , _setIp_S0160000000 + ( 9 )
                 	__GETB2MN _setIp_S0160000000,9
00cdc9 e6e4      	LDI  R30,LOW(100)
00cdca 9fea      	MUL  R30,R26
00cdcb 01b0      	MOVW R22,R0
                +
00cdcc 91a0 1a38+LDS R26 , _setIp_S0160000000 + ( 10 )
                 	__GETB2MN _setIp_S0160000000,10
00cdce e0ea      	LDI  R30,LOW(10)
00cdcf 9fea      	MUL  R30,R26
00cdd0 01f0      	MOVW R30,R0
00cdd1 01db      	MOVW R26,R22
00cdd2 0fae      	ADD  R26,R30
00cdd3 1fbf      	ADC  R27,R31
                +
00cdd4 91e0 1a39+LDS R30 , _setIp_S0160000000 + ( 11 )
                 	__GETB1MN _setIp_S0160000000,11
00cdd6 e0f0      	LDI  R31,0
00cdd7 c8d7      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2BF:
00cdd8 91a0 1a3a 	LDS  R26,_setMask_S0160000000
00cdda e6e4      	LDI  R30,LOW(100)
00cddb 9fea      	MUL  R30,R26
00cddc 01b0      	MOVW R22,R0
                +
00cddd 91a0 1a3b+LDS R26 , _setMask_S0160000000 + ( 1 )
                 	__GETB2MN _setMask_S0160000000,1
00cddf e0ea      	LDI  R30,LOW(10)
00cde0 9fea      	MUL  R30,R26
00cde1 01f0      	MOVW R30,R0
00cde2 01db      	MOVW R26,R22
00cde3 0fae      	ADD  R26,R30
00cde4 1fbf      	ADC  R27,R31
                +
00cde5 91e0 1a3c+LDS R30 , _setMask_S0160000000 + ( 2 )
                 	__GETB1MN _setMask_S0160000000,2
00cde7 e0f0      	LDI  R31,0
00cde8 c8c6      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C0:
                +
00cde9 91a0 1a3d+LDS R26 , _setMask_S0160000000 + ( 3 )
                 	__GETB2MN _setMask_S0160000000,3
00cdeb e6e4      	LDI  R30,LOW(100)
00cdec 9fea      	MUL  R30,R26
00cded 01b0      	MOVW R22,R0
                +
00cdee 91a0 1a3e+LDS R26 , _setMask_S0160000000 + ( 4 )
                 	__GETB2MN _setMask_S0160000000,4
00cdf0 e0ea      	LDI  R30,LOW(10)
00cdf1 9fea      	MUL  R30,R26
00cdf2 01f0      	MOVW R30,R0
00cdf3 01db      	MOVW R26,R22
00cdf4 0fae      	ADD  R26,R30
00cdf5 1fbf      	ADC  R27,R31
                +
00cdf6 91e0 1a3f+LDS R30 , _setMask_S0160000000 + ( 5 )
                 	__GETB1MN _setMask_S0160000000,5
00cdf8 e0f0      	LDI  R31,0
00cdf9 c8b5      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C1:
                +
00cdfa 91a0 1a40+LDS R26 , _setMask_S0160000000 + ( 6 )
                 	__GETB2MN _setMask_S0160000000,6
00cdfc e6e4      	LDI  R30,LOW(100)
00cdfd 9fea      	MUL  R30,R26
00cdfe 01b0      	MOVW R22,R0
                +
00cdff 91a0 1a41+LDS R26 , _setMask_S0160000000 + ( 7 )
                 	__GETB2MN _setMask_S0160000000,7
00ce01 e0ea      	LDI  R30,LOW(10)
00ce02 9fea      	MUL  R30,R26
00ce03 01f0      	MOVW R30,R0
00ce04 01db      	MOVW R26,R22
00ce05 0fae      	ADD  R26,R30
00ce06 1fbf      	ADC  R27,R31
                +
00ce07 91e0 1a42+LDS R30 , _setMask_S0160000000 + ( 8 )
                 	__GETB1MN _setMask_S0160000000,8
00ce09 e0f0      	LDI  R31,0
00ce0a c8a4      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C2:
                +
00ce0b 91a0 1a43+LDS R26 , _setMask_S0160000000 + ( 9 )
                 	__GETB2MN _setMask_S0160000000,9
00ce0d e6e4      	LDI  R30,LOW(100)
00ce0e 9fea      	MUL  R30,R26
00ce0f 01b0      	MOVW R22,R0
                +
00ce10 91a0 1a44+LDS R26 , _setMask_S0160000000 + ( 10 )
                 	__GETB2MN _setMask_S0160000000,10
00ce12 e0ea      	LDI  R30,LOW(10)
00ce13 9fea      	MUL  R30,R26
00ce14 01f0      	MOVW R30,R0
00ce15 01db      	MOVW R26,R22
00ce16 0fae      	ADD  R26,R30
00ce17 1fbf      	ADC  R27,R31
                +
00ce18 91e0 1a45+LDS R30 , _setMask_S0160000000 + ( 11 )
                 	__GETB1MN _setMask_S0160000000,11
00ce1a e0f0      	LDI  R31,0
00ce1b c893      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C3:
00ce1c 91a0 1a46 	LDS  R26,_setGw_S0160000000
00ce1e e6e4      	LDI  R30,LOW(100)
00ce1f 9fea      	MUL  R30,R26
00ce20 01b0      	MOVW R22,R0
                +
00ce21 91a0 1a47+LDS R26 , _setGw_S0160000000 + ( 1 )
                 	__GETB2MN _setGw_S0160000000,1
00ce23 e0ea      	LDI  R30,LOW(10)
00ce24 9fea      	MUL  R30,R26
00ce25 01f0      	MOVW R30,R0
00ce26 01db      	MOVW R26,R22
00ce27 0fae      	ADD  R26,R30
00ce28 1fbf      	ADC  R27,R31
                +
00ce29 91e0 1a48+LDS R30 , _setGw_S0160000000 + ( 2 )
                 	__GETB1MN _setGw_S0160000000,2
00ce2b e0f0      	LDI  R31,0
00ce2c c882      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C4:
                +
00ce2d 91a0 1a49+LDS R26 , _setGw_S0160000000 + ( 3 )
                 	__GETB2MN _setGw_S0160000000,3
00ce2f e6e4      	LDI  R30,LOW(100)
00ce30 9fea      	MUL  R30,R26
00ce31 01b0      	MOVW R22,R0
                +
00ce32 91a0 1a4a+LDS R26 , _setGw_S0160000000 + ( 4 )
                 	__GETB2MN _setGw_S0160000000,4
00ce34 e0ea      	LDI  R30,LOW(10)
00ce35 9fea      	MUL  R30,R26
00ce36 01f0      	MOVW R30,R0
00ce37 01db      	MOVW R26,R22
00ce38 0fae      	ADD  R26,R30
00ce39 1fbf      	ADC  R27,R31
                +
00ce3a 91e0 1a4b+LDS R30 , _setGw_S0160000000 + ( 5 )
                 	__GETB1MN _setGw_S0160000000,5
00ce3c e0f0      	LDI  R31,0
00ce3d c871      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C5:
                +
00ce3e 91a0 1a4c+LDS R26 , _setGw_S0160000000 + ( 6 )
                 	__GETB2MN _setGw_S0160000000,6
00ce40 e6e4      	LDI  R30,LOW(100)
00ce41 9fea      	MUL  R30,R26
00ce42 01b0      	MOVW R22,R0
                +
00ce43 91a0 1a4d+LDS R26 , _setGw_S0160000000 + ( 7 )
                 	__GETB2MN _setGw_S0160000000,7
00ce45 e0ea      	LDI  R30,LOW(10)
00ce46 9fea      	MUL  R30,R26
00ce47 01f0      	MOVW R30,R0
00ce48 01db      	MOVW R26,R22
00ce49 0fae      	ADD  R26,R30
00ce4a 1fbf      	ADC  R27,R31
                +
00ce4b 91e0 1a4e+LDS R30 , _setGw_S0160000000 + ( 8 )
                 	__GETB1MN _setGw_S0160000000,8
00ce4d e0f0      	LDI  R31,0
00ce4e c860      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C6:
                +
00ce4f 91a0 1a4f+LDS R26 , _setGw_S0160000000 + ( 9 )
                 	__GETB2MN _setGw_S0160000000,9
00ce51 e6e4      	LDI  R30,LOW(100)
00ce52 9fea      	MUL  R30,R26
00ce53 01b0      	MOVW R22,R0
                +
00ce54 91a0 1a50+LDS R26 , _setGw_S0160000000 + ( 10 )
                 	__GETB2MN _setGw_S0160000000,10
00ce56 e0ea      	LDI  R30,LOW(10)
00ce57 9fea      	MUL  R30,R26
00ce58 01f0      	MOVW R30,R0
00ce59 01db      	MOVW R26,R22
00ce5a 0fae      	ADD  R26,R30
00ce5b 1fbf      	ADC  R27,R31
                +
00ce5c 91e0 1a51+LDS R30 , _setGw_S0160000000 + ( 11 )
                 	__GETB1MN _setGw_S0160000000,11
00ce5e e0f0      	LDI  R31,0
00ce5f c84f      	RJMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C7:
00ce60 91a0 1a52 	LDS  R26,_setServer_S0160000000
00ce62 e6e4      	LDI  R30,LOW(100)
00ce63 9fea      	MUL  R30,R26
00ce64 01b0      	MOVW R22,R0
                +
00ce65 91a0 1a53+LDS R26 , _setServer_S0160000000 + ( 1 )
                 	__GETB2MN _setServer_S0160000000,1
00ce67 e0ea      	LDI  R30,LOW(10)
00ce68 9fea      	MUL  R30,R26
00ce69 01f0      	MOVW R30,R0
00ce6a 01db      	MOVW R26,R22
00ce6b 0fae      	ADD  R26,R30
00ce6c 1fbf      	ADC  R27,R31
                +
00ce6d 91e0 1a54+LDS R30 , _setServer_S0160000000 + ( 2 )
                 	__GETB1MN _setServer_S0160000000,2
00ce6f e0f0      	LDI  R31,0
00ce70 940c c6af 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C8:
                +
00ce72 91a0 1a55+LDS R26 , _setServer_S0160000000 + ( 3 )
                 	__GETB2MN _setServer_S0160000000,3
00ce74 e6e4      	LDI  R30,LOW(100)
00ce75 9fea      	MUL  R30,R26
00ce76 01b0      	MOVW R22,R0
                +
00ce77 91a0 1a56+LDS R26 , _setServer_S0160000000 + ( 4 )
                 	__GETB2MN _setServer_S0160000000,4
00ce79 e0ea      	LDI  R30,LOW(10)
00ce7a 9fea      	MUL  R30,R26
00ce7b 01f0      	MOVW R30,R0
00ce7c 01db      	MOVW R26,R22
00ce7d 0fae      	ADD  R26,R30
00ce7e 1fbf      	ADC  R27,R31
                +
00ce7f 91e0 1a57+LDS R30 , _setServer_S0160000000 + ( 5 )
                 	__GETB1MN _setServer_S0160000000,5
00ce81 e0f0      	LDI  R31,0
00ce82 940c c6af 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2C9:
                +
00ce84 91a0 1a58+LDS R26 , _setServer_S0160000000 + ( 6 )
                 	__GETB2MN _setServer_S0160000000,6
00ce86 e6e4      	LDI  R30,LOW(100)
00ce87 9fea      	MUL  R30,R26
00ce88 01b0      	MOVW R22,R0
                +
00ce89 91a0 1a59+LDS R26 , _setServer_S0160000000 + ( 7 )
                 	__GETB2MN _setServer_S0160000000,7
00ce8b e0ea      	LDI  R30,LOW(10)
00ce8c 9fea      	MUL  R30,R26
00ce8d 01f0      	MOVW R30,R0
00ce8e 01db      	MOVW R26,R22
00ce8f 0fae      	ADD  R26,R30
00ce90 1fbf      	ADC  R27,R31
                +
00ce91 91e0 1a5a+LDS R30 , _setServer_S0160000000 + ( 8 )
                 	__GETB1MN _setServer_S0160000000,8
00ce93 e0f0      	LDI  R31,0
00ce94 940c c6af 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:33 WORDS
                 SUBOPT_0x2CA:
                +
00ce96 91a0 1a5b+LDS R26 , _setServer_S0160000000 + ( 9 )
                 	__GETB2MN _setServer_S0160000000,9
00ce98 e6e4      	LDI  R30,LOW(100)
00ce99 9fea      	MUL  R30,R26
00ce9a 01b0      	MOVW R22,R0
                +
00ce9b 91a0 1a5c+LDS R26 , _setServer_S0160000000 + ( 10 )
                 	__GETB2MN _setServer_S0160000000,10
00ce9d e0ea      	LDI  R30,LOW(10)
00ce9e 9fea      	MUL  R30,R26
00ce9f 01f0      	MOVW R30,R0
00cea0 01db      	MOVW R26,R22
00cea1 0fae      	ADD  R26,R30
00cea2 1fbf      	ADC  R27,R31
                +
00cea3 91e0 1a5d+LDS R30 , _setServer_S0160000000 + ( 11 )
                 	__GETB1MN _setServer_S0160000000,11
00cea5 e0f0      	LDI  R31,0
00cea6 940c c6af 	JMP SUBOPT_0x1BD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 21 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2CB:
00cea8 940e da29 	CALL __PUTPARD1
00ceaa cc58      	RJMP SUBOPT_0x268
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x2CC:
                +
00ceab 01fe     +MOVW R30 , R28
00ceac 5aea     +SUBI R30 , LOW ( - 86 )
00cead 4fff     +SBCI R31 , HIGH ( - 86 )
00ceae 81e0     +LD R30 , Z
                 	__GETB1SX 86
00ceaf e0f0      	LDI  R31,0
00ceb0 30e2      	CPI  R30,LOW(0x2)
00ceb1 e0a0      	LDI  R26,HIGH(0x2)
00ceb2 07fa      	CPC  R31,R26
00ceb3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 17 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2CD:
00ceb4 93e0 14df 	STS  _currentPage,R30
00ceb6 e0e1      	LDI  R30,LOW(1)
00ceb7 93e0 1a1f 	STS  _cursor_S0160000000,R30
00ceb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2CE:
00ceba 93e0 14df 	STS  _currentPage,R30
00cebc e0e2      	LDI  R30,LOW(2)
00cebd 93e0 1a1f 	STS  _cursor_S0160000000,R30
00cebf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2CF:
                +
00cec0 e3ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 15 ) )
00cec1 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 15 ) )
00cec2 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 15 ) )
00cec3 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 15 ) )
                 	__POINTD1FN _0x2C0000,15
00cec4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 57 TIMES, CODE SIZE REDUCTION:501 WORDS
                 SUBOPT_0x2D0:
00cec5 940e da29 	CALL __PUTPARD1
00cec7 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cec9 940e d913 	CALL __CBD1
00cecb 940e da29 	CALL __PUTPARD1
00cecd cc0c      	RJMP SUBOPT_0x263
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D1:
00cece 940e da29 	CALL __PUTPARD1
00ced0 91e0 1a5e 	LDS  R30,_devEn_S0160000000
00ced2 940c be67 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2D2:
                +
00ced4 e3ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 526 ) )
00ced5 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 526 ) )
00ced6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 526 ) )
00ced7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 526 ) )
                 	__POINTD1FN _0x2C0000,526
00ced8 cfec      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2D3:
                +
00ced9 e5e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00ceda e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00cedb e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00cedc e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00cedd 940e da29 	CALL __PUTPARD1
00cedf 01f8      	MOVW R30,R16
00cee0 cc27      	RJMP SUBOPT_0x269
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2D4:
00cee1 0fa0      	ADD  R26,R16
00cee2 1fb1      	ADC  R27,R17
00cee3 91ec      	LD   R30,X
00cee4 940c be67 	JMP SUBOPT_0x65
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D5:
                +
00cee6 e5ee     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 558 ) )
00cee7 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 558 ) )
00cee8 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 558 ) )
00cee9 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 558 ) )
                 	__POINTD1FN _0x2C0000,558
00ceea cfda      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:37 WORDS
                 SUBOPT_0x2D6:
00ceeb 940e da29 	CALL __PUTPARD1
00ceed 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00ceef e0f0      	LDI  R31,0
00cef0 fde7      	SBRC R30,7
00cef1 efff      	SER  R31
00cef2 9632      	ADIW R30,2
00cef3 cc14      	RJMP SUBOPT_0x269
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2D7:
                +
00cef4 e7ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00cef5 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00cef6 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00cef7 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00cef8 cff2      	RJMP SUBOPT_0x2D6
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D8:
00cef9 eba6      	LDI  R26,LOW(_operating_config)
00cefa e1b1      	LDI  R27,HIGH(_operating_config)
00cefb 940e 4d17 	CALL _setOperatingConfig
00cefd 01af      	MOVW R20,R30
00cefe 2355      	TST  R21
00ceff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2D9:
                +
00cf00 eaec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 636 ) )
00cf01 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 636 ) )
00cf02 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 636 ) )
00cf03 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 636 ) )
                 	__POINTD1FN _0x2C0000,636
00cf04 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2DA:
00cf06 e0e8      	LDI  R30,LOW(8)
00cf07 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00cf09 e0e0      	LDI  R30,LOW(0)
00cf0a 93e0 1a1f 	STS  _cursor_S0160000000,R30
00cf0c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2DB:
                +
00cf0d edec     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 684 ) )
00cf0e e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 684 ) )
00cf0f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 684 ) )
00cf10 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 684 ) )
                 	__POINTD1FN _0x2C0000,684
00cf11 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2DC:
                +
00cf12 edef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 687 ) )
00cf13 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 687 ) )
00cf14 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 687 ) )
00cf15 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 687 ) )
                 	__POINTD1FN _0x2C0000,687
00cf16 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2DD:
                +
00cf17 eee2     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 690 ) )
00cf18 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 690 ) )
00cf19 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 690 ) )
00cf1a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 690 ) )
                 	__POINTD1FN _0x2C0000,690
00cf1b cfa9      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x2DE:
00cf1c 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf1e e0b0      	LDI  R27,0
00cf1f fda7      	SBRC R26,7
00cf20 efbf      	SER  R27
00cf21 e0e3      	LDI  R30,LOW(3)
00cf22 e0f0      	LDI  R31,HIGH(3)
00cf23 940e d9c4 	CALL __MODW21
00cf25 9730      	SBIW R30,0
00cf26 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2DF:
00cf27 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf29 e0b0      	LDI  R27,0
00cf2a 5da2      	SUBI R26,LOW(-_setIp_S0160000000)
00cf2b 4eb5      	SBCI R27,HIGH(-_setIp_S0160000000)
00cf2c 91ec      	LD   R30,X
00cf2d 5fef      	SUBI R30,-LOW(1)
00cf2e 93ec      	ST   X,R30
00cf2f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E0:
00cf30 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf32 e0f0      	LDI  R31,0
00cf33 5de2      	SUBI R30,LOW(-_setIp_S0160000000)
00cf34 4ef5      	SBCI R31,HIGH(-_setIp_S0160000000)
00cf35 e0a0      	LDI  R26,LOW(0)
00cf36 83a0      	STD  Z+0,R26
00cf37 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:45 WORDS
                 SUBOPT_0x2E1:
                +
00cf38 e5e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 549 ) )
00cf39 e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 549 ) )
00cf3a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 549 ) )
00cf3b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 549 ) )
                 	__POINTD1FN _0x2C0000,549
00cf3c 940e da29 	CALL __PUTPARD1
00cf3e 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf40 940e d913 	CALL __CBD1
00cf42 940e da29 	CALL __PUTPARD1
00cf44 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf46 e0f0      	LDI  R31,0
00cf47 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E2:
00cf48 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf4a e0b0      	LDI  R27,0
00cf4b 5ca6      	SUBI R26,LOW(-_setMask_S0160000000)
00cf4c 4eb5      	SBCI R27,HIGH(-_setMask_S0160000000)
00cf4d 91ec      	LD   R30,X
00cf4e 5fef      	SUBI R30,-LOW(1)
00cf4f 93ec      	ST   X,R30
00cf50 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E3:
00cf51 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf53 e0f0      	LDI  R31,0
00cf54 5ce6      	SUBI R30,LOW(-_setMask_S0160000000)
00cf55 4ef5      	SBCI R31,HIGH(-_setMask_S0160000000)
00cf56 e0a0      	LDI  R26,LOW(0)
00cf57 83a0      	STD  Z+0,R26
00cf58 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E4:
00cf59 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf5b e0b0      	LDI  R27,0
00cf5c 5baa      	SUBI R26,LOW(-_setGw_S0160000000)
00cf5d 4eb5      	SBCI R27,HIGH(-_setGw_S0160000000)
00cf5e 91ec      	LD   R30,X
00cf5f 5fef      	SUBI R30,-LOW(1)
00cf60 93ec      	ST   X,R30
00cf61 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E5:
00cf62 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf64 e0f0      	LDI  R31,0
00cf65 5bea      	SUBI R30,LOW(-_setGw_S0160000000)
00cf66 4ef5      	SBCI R31,HIGH(-_setGw_S0160000000)
00cf67 e0a0      	LDI  R26,LOW(0)
00cf68 83a0      	STD  Z+0,R26
00cf69 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2E6:
00cf6a 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf6c e0b0      	LDI  R27,0
00cf6d 5aae      	SUBI R26,LOW(-_setServer_S0160000000)
00cf6e 4eb5      	SBCI R27,HIGH(-_setServer_S0160000000)
00cf6f 91ec      	LD   R30,X
00cf70 5fef      	SUBI R30,-LOW(1)
00cf71 93ec      	ST   X,R30
00cf72 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x2E7:
00cf73 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf75 e0f0      	LDI  R31,0
00cf76 5aee      	SUBI R30,LOW(-_setServer_S0160000000)
00cf77 4ef5      	SBCI R31,HIGH(-_setServer_S0160000000)
00cf78 e0a0      	LDI  R26,LOW(0)
00cf79 83a0      	STD  Z+0,R26
00cf7a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x2E8:
00cf7b 93e0 1a21 	STS  _tmpPrevPage_S0160000000,R30
00cf7d e0e0      	LDI  R30,LOW(0)
00cf7e 93e0 1a1f 	STS  _cursor_S0160000000,R30
00cf80 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2E9:
                +
00cf81 e3e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 0 ) )
00cf82 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 0 ) )
00cf83 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 0 ) )
00cf84 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 0 ) )
                 	__POINTD1FN _0x2C0000,0
00cf85 cf3f      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2EA:
00cf86 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf88 e0b0      	LDI  R27,0
00cf89 fda7      	SBRC R26,7
00cf8a efbf      	SER  R27
00cf8b 940c 93f1 	JMP  _showProbeConfig
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:18 WORDS
                 SUBOPT_0x2EB:
00cf8d 91a0 1a1f 	LDS  R26,_cursor_S0160000000
00cf8f e0b0      	LDI  R27,0
00cf90 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2EC:
00cf91 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cf93 e0f0      	LDI  R31,0
00cf94 5ae0      	SUBI R30,LOW(-_prbEn_S0160000000)
00cf95 4ef5      	SBCI R31,HIGH(-_prbEn_S0160000000)
00cf96 81e0      	LD   R30,Z
00cf97 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2ED:
00cf98 93ec      	ST   X,R30
                +
00cf99 e7ef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 591 ) )
00cf9a e5ff     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 591 ) )
00cf9b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 591 ) )
00cf9c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 591 ) )
                 	__POINTD1FN _0x2C0000,591
00cf9d 940e da29 	CALL __PUTPARD1
00cf9f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:42 WORDS
                 SUBOPT_0x2EE:
00cfa0 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cfa2 940e d913 	CALL __CBD1
00cfa4 940e da29 	CALL __PUTPARD1
00cfa6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2EF:
00cfa7 e2e4      	LDI  R30,LOW(36)
00cfa8 93e0 14df 	STS  _currentPage,R30
00cfaa e0ee      	LDI  R30,LOW(14)
00cfab 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00cfad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x2F0:
                +
00cfae e5e0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 800 ) )
00cfaf e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 800 ) )
00cfb0 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 800 ) )
00cfb1 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 800 ) )
                 	__POINTD1FN _0x2C0000,800
00cfb2 cf12      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F1:
00cfb3 e2e4      	LDI  R30,LOW(36)
00cfb4 93e0 14df 	STS  _currentPage,R30
00cfb6 e1e1      	LDI  R30,LOW(17)
00cfb7 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00cfb9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2F2:
                +
00cfba e5e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 806 ) )
00cfbb e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 806 ) )
00cfbc e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 806 ) )
00cfbd e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 806 ) )
                 	__POINTD1FN _0x2C0000,806
00cfbe cf06      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x2F3:
                +
00cfbf e5ed     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 813 ) )
00cfc0 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 813 ) )
00cfc1 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 813 ) )
00cfc2 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 813 ) )
                 	__POINTD1FN _0x2C0000,813
00cfc3 cf01      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2F4:
00cfc4 e2ea      	LDI  R30,LOW(_confPwd_S0160000000)
00cfc5 e1fa      	LDI  R31,HIGH(_confPwd_S0160000000)
00cfc6 93fa      	ST   -Y,R31
00cfc7 93ea      	ST   -Y,R30
00cfc8 efef      	LDI  R30,LOW(255)
00cfc9 93ea      	ST   -Y,R30
00cfca 940c bee6 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2F5:
00cfcc 91ec      	LD   R30,X
00cfcd 5fef      	SUBI R30,-LOW(1)
00cfce 93ec      	ST   X,R30
00cfcf 30ea      	CPI  R30,LOW(0xA)
00cfd0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2F6:
00cfd1 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cfd3 e0f0      	LDI  R31,0
00cfd4 5dea      	SUBI R30,LOW(-_newPwd_S0160000000)
00cfd5 4ef5      	SBCI R31,HIGH(-_newPwd_S0160000000)
00cfd6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x2F7:
                +
00cfd7 e6e6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 822 ) )
00cfd8 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 822 ) )
00cfd9 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 822 ) )
00cfda e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 822 ) )
                 	__POINTD1FN _0x2C0000,822
00cfdb 940e da29 	CALL __PUTPARD1
00cfdd cfc2      	RJMP SUBOPT_0x2EE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x2F8:
00cfde 81e0      	LD   R30,Z
00cfdf 940e d913 	CALL __CBD1
00cfe1 caf5      	RJMP SUBOPT_0x262
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2F9:
00cfe2 e2e6      	LDI  R30,LOW(_newPwd_S0160000000)
00cfe3 e1fa      	LDI  R31,HIGH(_newPwd_S0160000000)
00cfe4 93fa      	ST   -Y,R31
00cfe5 93ea      	ST   -Y,R30
00cfe6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x2FA:
00cfe7 efef      	LDI  R30,LOW(255)
00cfe8 93ea      	ST   -Y,R30
00cfe9 940c bee6 	JMP SUBOPT_0x77
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2FB:
                +
00cfeb 01fe     +MOVW R30 , R28
00cfec 5be0     +SUBI R30 , LOW ( - 80 )
00cfed 4fff     +SBCI R31 , HIGH ( - 80 )
00cfee 9001     +LD R0 , Z +
00cfef 81f0     +LD R31 , Z
00cff0 2de0     +MOV R30 , R0
                 	__GETW1SX 80
00cff1 93fa      	ST   -Y,R31
00cff2 93ea      	ST   -Y,R30
00cff3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x2FC:
00cff4 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00cff6 e0f0      	LDI  R31,0
00cff7 5de6      	SUBI R30,LOW(-_confPwd_S0160000000)
00cff8 4ef5      	SBCI R31,HIGH(-_confPwd_S0160000000)
00cff9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x2FD:
00cffa e0e1      	LDI  R30,LOW(1)
00cffb 93e0 14df 	STS  _currentPage,R30
00cffd e0e3      	LDI  R30,LOW(3)
00cffe 93e0 1a1f 	STS  _cursor_S0160000000,R30
00d000 cf80      	RJMP SUBOPT_0x2E9
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x2FE:
                +
00d001 eae1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 881 ) )
00d002 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 881 ) )
00d003 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 881 ) )
00d004 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 881 ) )
                 	__POINTD1FN _0x2C0000,881
00d005 940e da29 	CALL __PUTPARD1
00d007 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x2FF:
                +
00d008 eaea     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 890 ) )
00d009 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 890 ) )
00d00a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 890 ) )
00d00b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 890 ) )
                 	__POINTD1FN _0x2C0000,890
00d00c 940e da29 	CALL __PUTPARD1
00d00e 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d010 e0f0      	LDI  R31,0
00d011 c8c1      	RJMP SUBOPT_0x213
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x300:
                +
00d012 ebe0     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 896 ) )
00d013 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 896 ) )
00d014 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 896 ) )
00d015 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 896 ) )
                 	__POINTD1FN _0x2C0000,896
00d016 940e da29 	CALL __PUTPARD1
00d018 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:22 WORDS
                 SUBOPT_0x301:
00d019 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d01b e0f0      	LDI  R31,0
00d01c c8b6      	RJMP SUBOPT_0x213
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x302:
                +
00d01d ebe9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 905 ) )
00d01e e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 905 ) )
00d01f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 905 ) )
00d020 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 905 ) )
                 	__POINTD1FN _0x2C0000,905
00d021 cea3      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x303:
                +
00d022 ebef     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 911 ) )
00d023 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 911 ) )
00d024 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 911 ) )
00d025 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 911 ) )
                 	__POINTD1FN _0x2C0000,911
00d026 ce9e      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x304:
00d027 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d029 e0f0      	LDI  R31,0
00d02a 59ea      	SUBI R30,LOW(-_vRef_S0160000000)
00d02b 4ef5      	SBCI R31,HIGH(-_vRef_S0160000000)
00d02c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x305:
                +
00d02d ece5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 917 ) )
00d02e e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 917 ) )
00d02f e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 917 ) )
00d030 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 917 ) )
                 	__POINTD1FN _0x2C0000,917
00d031 ce93      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x306:
00d032 91a0 1a69 	LDS  R26,_prb1_S0160000000
00d034 5faf      	SUBI R26,-LOW(1)
00d035 93a0 1a69 	STS  _prb1_S0160000000,R26
00d037 30a5      	CPI  R26,LOW(0x5)
00d038 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x307:
                +
00d039 eceb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 923 ) )
00d03a e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 923 ) )
00d03b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 923 ) )
00d03c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 923 ) )
                 	__POINTD1FN _0x2C0000,923
00d03d 940e da29 	CALL __PUTPARD1
00d03f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x308:
00d040 91e0 1a6a 	LDS  R30,_prb2_S0160000000
00d042 e0f0      	LDI  R31,0
00d043 c88f      	RJMP SUBOPT_0x213
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x309:
                +
00d044 ede1     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 929 ) )
00d045 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 929 ) )
00d046 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 929 ) )
00d047 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 929 ) )
                 	__POINTD1FN _0x2C0000,929
00d048 940e da29 	CALL __PUTPARD1
00d04a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x30A:
00d04b 91e0 1a69 	LDS  R30,_prb1_S0160000000
00d04d e0f0      	LDI  R31,0
00d04e 93fa      	ST   -Y,R31
00d04f 93ea      	ST   -Y,R30
00d050 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30B:
00d051 93e0 14df 	STS  _currentPage,R30
00d053 e1e8      	LDI  R30,LOW(24)
00d054 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d056 e1e9      	LDI  R30,LOW(25)
00d057 cf23      	RJMP SUBOPT_0x2E8
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30C:
                +
00d058 ede7     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 935 ) )
00d059 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 935 ) )
00d05a e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 935 ) )
00d05b e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 935 ) )
                 	__POINTD1FN _0x2C0000,935
00d05c ce68      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x30D:
00d05d 93fa      	ST   -Y,R31
00d05e 93ea      	ST   -Y,R30
00d05f e6ab      	LDI  R26,LOW(_calPnt_S0160000000)
00d060 e1ba      	LDI  R27,HIGH(_calPnt_S0160000000)
00d061 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x30E:
                +
00d062 eee6     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 950 ) )
00d063 e6f0     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 950 ) )
00d064 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 950 ) )
00d065 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 950 ) )
                 	__POINTD1FN _0x2C0000,950
00d066 940e da29 	CALL __PUTPARD1
00d068 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x30F:
                +
00d069 e0e3     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 979 ) )
00d06a e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 979 ) )
00d06b e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 979 ) )
00d06c e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 979 ) )
                 	__POINTD1FN _0x2C0000,979
00d06d ce57      	RJMP SUBOPT_0x2D0
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x310:
00d06e e2e5      	LDI  R30,LOW(37)
00d06f 93e0 14df 	STS  _currentPage,R30
00d071 e1eb      	LDI  R30,LOW(27)
00d072 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d074 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x311:
00d075 e2e4      	LDI  R30,LOW(36)
00d076 93e0 14df 	STS  _currentPage,R30
00d078 e1eb      	LDI  R30,LOW(27)
00d079 93e0 1a20 	STS  _tmpNextPage_S0160000000,R30
00d07b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x312:
00d07c 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d07e e0f0      	LDI  R31,0
00d07f 59e5      	SUBI R30,LOW(-_calPnt_S0160000000)
00d080 4ef5      	SBCI R31,HIGH(-_calPnt_S0160000000)
00d081 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x313:
                +
00d082 e4e5     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 21 ) )
00d083 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 21 ) )
00d084 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 21 ) )
00d085 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 21 ) )
                 	__POINTD1FN _0x2C0000,21
00d086 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x314:
                +
00d087 e4eb     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 27 ) )
00d088 e5fd     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 27 ) )
00d089 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 27 ) )
00d08a e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 27 ) )
                 	__POINTD1FN _0x2C0000,27
00d08b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x315:
00d08c e2e2      	LDI  R30,LOW(_entPwd_S0160000000)
00d08d e1fa      	LDI  R31,HIGH(_entPwd_S0160000000)
00d08e 93fa      	ST   -Y,R31
00d08f 93ea      	ST   -Y,R30
00d090 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x316:
                +
00d091 e0e9     +LDI R30 , LOW ( 2 * _0x2C0000 + ( 985 ) )
00d092 e6f1     +LDI R31 , HIGH ( 2 * _0x2C0000 + ( 985 ) )
00d093 e060     +LDI R22 , BYTE3 ( 2 * _0x2C0000 + ( 985 ) )
00d094 e070     +LDI R23 , BYTE4 ( 2 * _0x2C0000 + ( 985 ) )
                 	__POINTD1FN _0x2C0000,985
00d095 ce12      	RJMP SUBOPT_0x2CB
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x317:
00d096 91e0 1a20 	LDS  R30,_tmpNextPage_S0160000000
00d098 e0f0      	LDI  R31,0
00d099 30e7      	CPI  R30,LOW(0x7)
00d09a e0a0      	LDI  R26,HIGH(0x7)
00d09b 07fa      	CPC  R31,R26
00d09c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:12 WORDS
                 SUBOPT_0x318:
00d09d 91e0 1a1f 	LDS  R30,_cursor_S0160000000
00d09f e0f0      	LDI  R31,0
00d0a0 5dee      	SUBI R30,LOW(-_entPwd_S0160000000)
00d0a1 4ef5      	SBCI R31,HIGH(-_entPwd_S0160000000)
00d0a2 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x319:
00d0a3 93e0 14df 	STS  _currentPage,R30
00d0a5 91a0 1a21 	LDS  R26,_tmpPrevPage_S0160000000
00d0a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 27 TIMES, CODE SIZE REDUCTION:49 WORDS
                 SUBOPT_0x31A:
00d0a8 940e d9f0 	CALL __GETW1P
00d0aa 93fa      	ST   -Y,R31
00d0ab 93ea      	ST   -Y,R30
00d0ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x31B:
00d0ad 8def      	LDD  R30,Y+31
00d0ae 940e d913 	CALL __CBD1
00d0b0 940c bc24 	JMP SUBOPT_0x11
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x31C:
00d0b2 a9a8      	LDD  R26,Y+48
00d0b3 a9b9      	LDD  R27,Y+48+1
00d0b4 e1ed      	LDI  R30,LOW(29)
00d0b5 940e d95a 	CALL __MULB1W2U
                +
00d0b7 53e9     +SUBI R30 , LOW ( - _sensor_config - ( 9 ) )
00d0b8 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 9 ) )
                 	__ADDW1MN _sensor_config,9
00d0b9 940c bee9 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x31D:
00d0bb a9ac      	LDD  R26,Y+52
00d0bc a9bd      	LDD  R27,Y+52+1
00d0bd e1ed      	LDI  R30,LOW(29)
00d0be 940e d95a 	CALL __MULB1W2U
00d0c0 c96b      	RJMP SUBOPT_0x247
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x31E:
00d0c1 940e da29 	CALL __PUTPARD1
00d0c3 ada8      	LDD  R26,Y+56
00d0c4 adb9      	LDD  R27,Y+56+1
00d0c5 e1ed      	LDI  R30,LOW(29)
00d0c6 940e d95a 	CALL __MULB1W2U
                +
00d0c8 53e3     +SUBI R30 , LOW ( - _sensor_config - ( 15 ) )
00d0c9 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 15 ) )
                 	__ADDW1MN _sensor_config,15
00d0ca 940c bee9 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x31F:
00d0cc adac      	LDD  R26,Y+60
00d0cd adbd      	LDD  R27,Y+60+1
00d0ce e1ed      	LDI  R30,LOW(29)
00d0cf 940e d95a 	CALL __MULB1W2U
                +
00d0d1 52ef     +SUBI R30 , LOW ( - _sensor_config - ( 19 ) )
00d0d2 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 19 ) )
                 	__ADDW1MN _sensor_config,19
00d0d3 940c bee9 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x320:
                +
00d0d5 01de     +MOVW R26 , R28
00d0d6 5ca0     +SUBI R26 , LOW ( - 64 )
00d0d7 4fbf     +SBCI R27 , HIGH ( - 64 )
00d0d8 900d     +LD R0 , X +
00d0d9 91bc     +LD R27 , X
00d0da 2da0     +MOV R26 , R0
                 	__GETW2SX 64
00d0db e1ed      	LDI  R30,LOW(29)
00d0dc 940e d95a 	CALL __MULB1W2U
00d0de c95d      	RJMP SUBOPT_0x24A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x321:
00d0df 940e da29 	CALL __PUTPARD1
                +
00d0e1 01de     +MOVW R26 , R28
00d0e2 5bac     +SUBI R26 , LOW ( - 68 )
00d0e3 4fbf     +SBCI R27 , HIGH ( - 68 )
00d0e4 900d     +LD R0 , X +
00d0e5 91bc     +LD R27 , X
00d0e6 2da0     +MOV R26 , R0
                 	__GETW2SX 68
00d0e7 e1ed      	LDI  R30,LOW(29)
00d0e8 940e d95a 	CALL __MULB1W2U
                +
00d0ea 52e9     +SUBI R30 , LOW ( - _sensor_config - ( 25 ) )
00d0eb 4efe     +SBCI R31 , HIGH ( - _sensor_config - ( 25 ) )
                 	__ADDW1MN _sensor_config,25
00d0ec 940c bee9 	JMP SUBOPT_0x78
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x322:
00d0ee 93ba      	ST   -Y,R27
00d0ef 93aa      	ST   -Y,R26
00d0f0 9722      	SBIW R28,2
00d0f1 940e da99 	CALL __SAVELOCR6
00d0f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x323:
00d0f4 940e da29 	CALL __PUTPARD1
00d0f6 01fa      	MOVW R30,R20
00d0f7 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x324:
00d0f9 01da      	MOVW R26,R20
00d0fa e6e4      	LDI  R30,LOW(100)
00d0fb e0f0      	LDI  R31,HIGH(100)
00d0fc 940e d978 	CALL __DIVW21U
00d0fe 85a8      	LDD  R26,Y+8
00d0ff 85b9      	LDD  R27,Y+8+1
00d100 93ec      	ST   X,R30
00d101 01da      	MOVW R26,R20
00d102 e6e4      	LDI  R30,LOW(100)
00d103 e0f0      	LDI  R31,HIGH(100)
00d104 940e d9c1 	CALL __MODW21U
00d106 01df      	MOVW R26,R30
00d107 e0ea      	LDI  R30,LOW(10)
00d108 e0f0      	LDI  R31,HIGH(10)
00d109 940e d978 	CALL __DIVW21U
                +
00d10b 85a8     +LDD R26 , Y + 8
00d10c 85b9     +LDD R27 , Y + 8 + 1
00d10d 9611     +ADIW R26 , 1
00d10e 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d10f 01da      	MOVW R26,R20
00d110 e6e4      	LDI  R30,LOW(100)
00d111 e0f0      	LDI  R31,HIGH(100)
00d112 940e d9c1 	CALL __MODW21U
00d114 01df      	MOVW R26,R30
00d115 e0ea      	LDI  R30,LOW(10)
00d116 e0f0      	LDI  R31,HIGH(10)
00d117 940e d9c1 	CALL __MODW21U
                +
00d119 85a8     +LDD R26 , Y + 8
00d11a 85b9     +LDD R27 , Y + 8 + 1
00d11b 9612     +ADIW R26 , 2
00d11c 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d11d 85a8      	LDD  R26,Y+8
00d11e 85b9      	LDD  R27,Y+8+1
00d11f 9613      	ADIW R26,3
00d120 e0e2      	LDI  R30,LOW(2)
00d121 93ec      	ST   X,R30
00d122 e0e0      	LDI  R30,LOW(0)
00d123 e0f0      	LDI  R31,HIGH(0)
00d124 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x325:
00d125 940e da29 	CALL __PUTPARD1
00d127 01f8      	MOVW R30,R16
00d128 940c bd18 	JMP SUBOPT_0x34
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:38 WORDS
                 SUBOPT_0x326:
00d12a 01d8      	MOVW R26,R16
00d12b e6e4      	LDI  R30,LOW(100)
00d12c e0f0      	LDI  R31,HIGH(100)
00d12d 940e d978 	CALL __DIVW21U
00d12f 85a8      	LDD  R26,Y+8
00d130 85b9      	LDD  R27,Y+8+1
00d131 93ec      	ST   X,R30
00d132 01d8      	MOVW R26,R16
00d133 e6e4      	LDI  R30,LOW(100)
00d134 e0f0      	LDI  R31,HIGH(100)
00d135 940e d9c1 	CALL __MODW21U
00d137 01df      	MOVW R26,R30
00d138 e0ea      	LDI  R30,LOW(10)
00d139 e0f0      	LDI  R31,HIGH(10)
00d13a 940e d978 	CALL __DIVW21U
                +
00d13c 85a8     +LDD R26 , Y + 8
00d13d 85b9     +LDD R27 , Y + 8 + 1
00d13e 9611     +ADIW R26 , 1
00d13f 93ec     +ST X , R30
                 	__PUTB1SNS 8,1
00d140 01d8      	MOVW R26,R16
00d141 e6e4      	LDI  R30,LOW(100)
00d142 e0f0      	LDI  R31,HIGH(100)
00d143 940e d9c1 	CALL __MODW21U
00d145 01df      	MOVW R26,R30
00d146 e0ea      	LDI  R30,LOW(10)
00d147 e0f0      	LDI  R31,HIGH(10)
00d148 940e d9c1 	CALL __MODW21U
                +
00d14a 85a8     +LDD R26 , Y + 8
00d14b 85b9     +LDD R27 , Y + 8 + 1
00d14c 9612     +ADIW R26 , 2
00d14d 93ec     +ST X , R30
                 	__PUTB1SNS 8,2
00d14e 85a8      	LDD  R26,Y+8
00d14f 85b9      	LDD  R27,Y+8+1
00d150 9613      	ADIW R26,3
00d151 e0e1      	LDI  R30,LOW(1)
00d152 93ec      	ST   X,R30
00d153 e0e0      	LDI  R30,LOW(0)
00d154 e0f0      	LDI  R31,HIGH(0)
00d155 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x327:
00d156 85aa      	LDD  R26,Y+10
00d157 85bb      	LDD  R27,Y+10+1
00d158 e6e4      	LDI  R30,LOW(100)
00d159 e0f0      	LDI  R31,HIGH(100)
00d15a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x328:
00d15b e8a9      	LDI  R26,LOW(_eep_vref_val)
00d15c e0b5      	LDI  R27,HIGH(_eep_vref_val)
00d15d 940e da48 	CALL __EEPROMRDD
00d15f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x329:
                +
00d160 87ea     +STD Y + 10 , R30
00d161 87fb     +STD Y + 10 + 1 , R31
00d162 876c     +STD Y + 10 + 2 , R22
00d163 877d     +STD Y + 10 + 3 , R23
                 	__PUTD1S 10
00d164 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x32A:
00d165 940e c14e 	CALL SUBOPT_0xD7
00d167 940e da29 	CALL __PUTPARD1
00d169 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x32B:
00d16a 01f9      	MOVW R30,R18
00d16b 9634      	ADIW R30,4
00d16c 170e      	CP   R16,R30
00d16d 071f      	CPC  R17,R31
00d16e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x32C:
00d16f 01f8      	MOVW R30,R16
00d170 1be2      	SUB  R30,R18
00d171 0bf3      	SBC  R31,R19
00d172 01de      	MOVW R26,R28
00d173 9650      	ADIW R26,16
00d174 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:30 WORDS
                 SUBOPT_0x32D:
00d175 01f8      	MOVW R30,R16
00d176 0fee      	LSL  R30
00d177 1fff      	ROL  R31
00d178 8dac      	LDD  R26,Y+28
00d179 8dbd      	LDD  R27,Y+28+1
00d17a 0fae      	ADD  R26,R30
00d17b 1fbf      	ADC  R27,R31
00d17c 91ac      	LD   R26,X
00d17d 940e 9776 	CALL _h2i
00d17f e1a0      	LDI  R26,LOW(16)
00d180 02ea      	MULS R30,R26
00d181 01f0      	MOVW R30,R0
00d182 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:24 WORDS
                 SUBOPT_0x32E:
00d183 01f8      	MOVW R30,R16
00d184 0fee      	LSL  R30
00d185 1fff      	ROL  R31
00d186 9631      	ADIW R30,1
00d187 8dac      	LDD  R26,Y+28
00d188 8dbd      	LDD  R27,Y+28+1
00d189 0fae      	ADD  R26,R30
00d18a 1fbf      	ADC  R27,R31
00d18b 91ac      	LD   R26,X
00d18c 940c 9776 	JMP  _h2i
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 12 TIMES, CODE SIZE REDUCTION:63 WORDS
                 SUBOPT_0x32F:
00d18e 93ec      	ST   X,R30
00d18f 01d8      	MOVW R26,R16
00d190 1ba2      	SUB  R26,R18
00d191 0bb3      	SBC  R27,R19
00d192 e0e3      	LDI  R30,LOW(3)
00d193 e0f0      	LDI  R31,HIGH(3)
00d194 940e d960 	CALL __MULW12
00d196 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x330:
00d197 8daa      	LDD  R26,Y+26
00d198 8dbb      	LDD  R27,Y+26+1
00d199 0fea      	ADD  R30,R26
00d19a 1ffb      	ADC  R31,R27
00d19b 01bf      	MOVW R22,R30
00d19c cfd2      	RJMP SUBOPT_0x32C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x331:
00d19d 0fae      	ADD  R26,R30
00d19e 1fbf      	ADC  R27,R31
00d19f 91ec      	LD   R30,X
00d1a0 e0f0      	LDI  R31,0
00d1a1 01df      	MOVW R26,R30
00d1a2 e6e4      	LDI  R30,LOW(100)
00d1a3 e0f0      	LDI  R31,HIGH(100)
00d1a4 940e d98b 	CALL __DIVW21
00d1a6 01db      	MOVW R26,R22
00d1a7 cfe6      	RJMP SUBOPT_0x32F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x332:
00d1a8 0fae      	ADD  R26,R30
00d1a9 1fbf      	ADC  R27,R31
00d1aa 91ac      	LD   R26,X
00d1ab 27bb      	CLR  R27
00d1ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x333:
00d1ad 01df      	MOVW R26,R30
00d1ae e0ea      	LDI  R30,LOW(10)
00d1af e0f0      	LDI  R31,HIGH(10)
00d1b0 940e d98b 	CALL __DIVW21
00d1b2 01db      	MOVW R26,R22
00d1b3 cfda      	RJMP SUBOPT_0x32F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x334:
00d1b4 01f8      	MOVW R30,R16
00d1b5 1be2      	SUB  R30,R18
00d1b6 0bf3      	SBC  R31,R19
00d1b7 01de      	MOVW R26,R28
00d1b8 961c      	ADIW R26,12
00d1b9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x335:
00d1ba 8da8      	LDD  R26,Y+24
00d1bb 8db9      	LDD  R27,Y+24+1
00d1bc 0fea      	ADD  R30,R26
00d1bd 1ffb      	ADC  R31,R27
00d1be 01bf      	MOVW R22,R30
00d1bf cff4      	RJMP SUBOPT_0x334
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x336:
00d1c0 01f8      	MOVW R30,R16
00d1c1 1be2      	SUB  R30,R18
00d1c2 0bf3      	SBC  R31,R19
00d1c3 01de      	MOVW R26,R28
00d1c4 9618      	ADIW R26,8
00d1c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x337:
00d1c6 89ae      	LDD  R26,Y+22
00d1c7 89bf      	LDD  R27,Y+22+1
00d1c8 0fea      	ADD  R30,R26
00d1c9 1ffb      	ADC  R31,R27
00d1ca 01bf      	MOVW R22,R30
00d1cb cff4      	RJMP SUBOPT_0x336
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x338:
00d1cc 89ac      	LDD  R26,Y+20
00d1cd 89bd      	LDD  R27,Y+20+1
00d1ce 0fea      	ADD  R30,R26
00d1cf 1ffb      	ADC  R31,R27
00d1d0 01bf      	MOVW R22,R30
00d1d1 01f8      	MOVW R30,R16
00d1d2 1be2      	SUB  R30,R18
00d1d3 0bf3      	SBC  R31,R19
00d1d4 940c c49c 	JMP SUBOPT_0x168
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x339:
00d1d6 91ec      	LD   R30,X
00d1d7 e0f0      	LDI  R31,0
00d1d8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33A:
00d1d9 81e8      	LD   R30,Y
00d1da e0f0      	LDI  R31,0
00d1db 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x33B:
00d1dc 01de      	MOVW R26,R28
00d1dd 965e      	ADIW R26,30
00d1de 0fae      	ADD  R26,R30
00d1df 1fbf      	ADC  R27,R31
00d1e0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33C:
00d1e1 e0e0      	LDI  R30,LOW(0)
00d1e2 a3ea      	STD  Y+34,R30
00d1e3 01de      	MOVW R26,R28
00d1e4 965e      	ADIW R26,30
00d1e5 940c 9df8 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x33D:
00d1e7 e0e0      	LDI  R30,LOW(0)
00d1e8 a3e8      	STD  Y+32,R30
00d1e9 01de      	MOVW R26,R28
00d1ea 965e      	ADIW R26,30
00d1eb 940c 9df8 	JMP  _atol
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x33E:
                +
00d1ed 87e8     +STD Y + 8 , R30
00d1ee 87f9     +STD Y + 8 + 1 , R31
00d1ef 876a     +STD Y + 8 + 2 , R22
00d1f0 877b     +STD Y + 8 + 3 , R23
                 	__PUTD1S 8
00d1f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x33F:
                +
00d1f2 8be8     +STD Y + 16 , R30
00d1f3 8bf9     +STD Y + 16 + 1 , R31
00d1f4 8b6a     +STD Y + 16 + 2 , R22
00d1f5 8b7b     +STD Y + 16 + 3 , R23
                 	__PUTD1S 16
00d1f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x340:
                +
00d1f7 8bec     +STD Y + 20 , R30
00d1f8 8bfd     +STD Y + 20 + 1 , R31
00d1f9 8b6e     +STD Y + 20 + 2 , R22
00d1fa 8b7f     +STD Y + 20 + 3 , R23
                 	__PUTD1S 20
00d1fb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x341:
                +
00d1fc e9e1     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 195 ) )
00d1fd e6f4     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 195 ) )
00d1fe e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 195 ) )
00d1ff e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 195 ) )
                 	__POINTD1FN _0x2E0000,195
00d200 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x342:
00d201 01de      	MOVW R26,R28
00d202 9611      	ADIW R26,1
00d203 0fae      	ADD  R26,R30
00d204 1fbf      	ADC  R27,R31
00d205 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x343:
00d206 e0e9      	LDI  R30,LOW(9)
00d207 e0f0      	LDI  R31,HIGH(9)
00d208 93e0 10f4 	STS  _hwCalId,R30
00d20a 93f0 10f5 	STS  _hwCalId+1,R31
00d20c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x344:
00d20d 940e da29 	CALL __PUTPARD1
00d20f 940c c055 	JMP SUBOPT_0xAE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x345:
00d211 2fa1      	MOV  R26,R17
00d212 27bb      	CLR  R27
00d213 e0e3      	LDI  R30,LOW(3)
00d214 e0f0      	LDI  R31,HIGH(3)
00d215 940e d9c4 	CALL __MODW21
00d217 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x346:
00d218 2fa1      	MOV  R26,R17
00d219 e0b0      	LDI  R27,0
00d21a e0e3      	LDI  R30,LOW(3)
00d21b e0f0      	LDI  R31,HIGH(3)
00d21c 940e d98b 	CALL __DIVW21
00d21e 57ef      	SUBI R30,LOW(-_DEVICE_SERIAL)
00d21f 4ffa      	SBCI R31,HIGH(-_DEVICE_SERIAL)
00d220 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x347:
00d221 91ac      	LD   R26,X
00d222 940e bb2a 	CALL _isdigit
00d224 30e0      	CPI  R30,0
00d225 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x348:
00d226 01bf      	MOVW R22,R30
00d227 01df      	MOVW R26,R30
00d228 940e da50 	CALL __EEPROMRDB
00d22a 2e0e      	MOV  R0,R30
00d22b 940c c055 	JMP SUBOPT_0xAE
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x349:
                +
00d22d ebe3     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 741 ) )
00d22e e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 741 ) )
00d22f e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 741 ) )
00d230 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 741 ) )
                 	__POINTD1FN _0x2E0000,741
00d231 940e da29 	CALL __PUTPARD1
00d233 2fa1      	MOV  R26,R17
00d234 e0b0      	LDI  R27,0
00d235 57af      	SUBI R26,LOW(-_DEVICE_SERIAL)
00d236 4fba      	SBCI R27,HIGH(-_DEVICE_SERIAL)
00d237 940c c36a 	JMP SUBOPT_0x136
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x34A:
                +
00d239 edeb     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 13 ) )
00d23a e6f3     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 13 ) )
00d23b e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 13 ) )
00d23c e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 13 ) )
                 	__POINTD1FN _0x2E0000,13
00d23d 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x34B:
00d23f e6ef      	LDI  R30,LOW(_rxPackage3)
00d240 e0fd      	LDI  R31,HIGH(_rxPackage3)
00d241 93fa      	ST   -Y,R31
00d242 93ea      	ST   -Y,R30
00d243 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:29 WORDS
                 SUBOPT_0x34C:
00d244 940e da29 	CALL __PUTPARD1
00d246 e0a7      	LDI  R26,LOW(7)
00d247 940e a187 	CALL _strncmpf
00d249 30e0      	CPI  R30,0
00d24a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34D:
00d24b 940e da29 	CALL __PUTPARD1
00d24d 01da      	MOVW R26,R20
00d24e 91ec      	LD   R30,X
00d24f 940c bccc 	JMP SUBOPT_0x29
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34E:
                +
00d251 e7e7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 681 ) )
00d252 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 681 ) )
00d253 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 681 ) )
00d254 e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 681 ) )
                 	__POINTD1FN _0x2E0000,681
00d255 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x34F:
                +
00d257 efe7     +LDI R30 , LOW ( 2 * _0x2E0000 + ( 809 ) )
00d258 e6f6     +LDI R31 , HIGH ( 2 * _0x2E0000 + ( 809 ) )
00d259 e060     +LDI R22 , BYTE3 ( 2 * _0x2E0000 + ( 809 ) )
00d25a e070     +LDI R23 , BYTE4 ( 2 * _0x2E0000 + ( 809 ) )
                 	__POINTD1FN _0x2E0000,809
00d25b 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x350:
00d25d 93ba      	ST   -Y,R27
00d25e 93aa      	ST   -Y,R26
00d25f 9724      	SBIW R28,4
00d260 e0e0      	LDI  R30,LOW(0)
00d261 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x351:
00d262 85ac      	LDD  R26,Y+12
00d263 85bd      	LDD  R27,Y+12+1
00d264 940c 9af0 	JMP  _print_hex_ascii_line
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 13 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x352:
00d266 91e0 1a71 	LDS  R30,_n
00d268 91f0 1a72 	LDS  R31,_n+1
00d26a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x353:
00d26b 01f9      	MOVW R30,R18
00d26c 940e d8df 	CALL __LSLW4
00d26e 58ed      	SUBI R30,LOW(-_a)
00d26f 4ef5      	SBCI R31,HIGH(-_a)
00d270 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x354:
00d271 01df      	MOVW R26,R30
00d272 01f8      	MOVW R30,R16
00d273 940c bc69 	JMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x355:
00d275 85ea      	LDD  R30,Y+10
00d276 85fb      	LDD  R31,Y+10+1
00d277 940e d8df 	CALL __LSLW4
00d279 58ed      	SUBI R30,LOW(-_a)
00d27a 4ef5      	SBCI R31,HIGH(-_a)
00d27b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x356:
00d27c dfe9      	RCALL SUBOPT_0x352
00d27d 9631      	ADIW R30,1
00d27e 172e      	CP   R18,R30
00d27f 073f      	CPC  R19,R31
00d280 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x357:
00d281 01df      	MOVW R26,R30
00d282 01f9      	MOVW R30,R18
00d283 940c bc69 	JMP SUBOPT_0x1A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x358:
00d285 01df      	MOVW R26,R30
00d286 01f9      	MOVW R30,R18
00d287 940c bc76 	JMP SUBOPT_0x1C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:27 WORDS
                 SUBOPT_0x359:
00d289 01f8      	MOVW R30,R16
00d28a 940e d8df 	CALL __LSLW4
00d28c 58ed      	SUBI R30,LOW(-_a)
00d28d 4ef5      	SBCI R31,HIGH(-_a)
00d28e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35A:
00d28f 01df      	MOVW R26,R30
00d290 01f8      	MOVW R30,R16
00d291 940e d8e3 	CALL __LSLW2
00d293 0fae      	ADD  R26,R30
00d294 1fbf      	ADC  R27,R31
00d295 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x35B:
                +
00d296 e0e0     +LDI R30 , LOW ( 0x3F800000 )
00d297 e0f0     +LDI R31 , HIGH ( 0x3F800000 )
00d298 e860     +LDI R22 , BYTE3 ( 0x3F800000 )
00d299 e37f     +LDI R23 , BYTE4 ( 0x3F800000 )
                 	__GETD1N 0x3F800000
00d29a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35C:
                +
00d29b e0a0     +LDI R26 , LOW ( 0x3F800000 )
00d29c e0b0     +LDI R27 , HIGH ( 0x3F800000 )
00d29d e880     +LDI R24 , BYTE3 ( 0x3F800000 )
00d29e e39f     +LDI R25 , BYTE4 ( 0x3F800000 )
                 	__GETD2N 0x3F800000
00d29f 940c c9dd 	JMP SUBOPT_0x23B
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35D:
                +
00d2a1 e2e3     +LDI R30 , LOW ( 2 * _0x300000 + ( 29 ) )
00d2a2 e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 29 ) )
00d2a3 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 29 ) )
00d2a4 e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 29 ) )
                 	__POINTD1FN _0x300000,29
00d2a5 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x35E:
                +
00d2a7 e2e6     +LDI R30 , LOW ( 2 * _0x300000 + ( 32 ) )
00d2a8 e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 32 ) )
00d2a9 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 32 ) )
00d2aa e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 32 ) )
                 	__POINTD1FN _0x300000,32
00d2ab 940e da29 	CALL __PUTPARD1
00d2ad cfdb      	RJMP SUBOPT_0x359
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x35F:
                +
00d2ae e2e0     +LDI R30 , LOW ( 2 * _0x300000 + ( 26 ) )
00d2af e6f7     +LDI R31 , HIGH ( 2 * _0x300000 + ( 26 ) )
00d2b0 e060     +LDI R22 , BYTE3 ( 2 * _0x300000 + ( 26 ) )
00d2b1 e070     +LDI R23 , BYTE4 ( 2 * _0x300000 + ( 26 ) )
                 	__POINTD1FN _0x300000,26
00d2b2 940c bbba 	JMP SUBOPT_0x3
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x360:
00d2b4 940e d9f4 	CALL __GETD1P
00d2b6 940e da29 	CALL __PUTPARD1
00d2b8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x361:
                +
00d2b9 87e9     +STD Y + 9 , R30
00d2ba 87fa     +STD Y + 9 + 1 , R31
00d2bb 876b     +STD Y + 9 + 2 , R22
00d2bc 877c     +STD Y + 9 + 3 , R23
                 	__PUTD1S 9
00d2bd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x362:
00d2be 81ae      	LDD  R26,Y+6
00d2bf 81bf      	LDD  R27,Y+6+1
00d2c0 9611      	ADIW R26,1
00d2c1 83ae      	STD  Y+6,R26
00d2c2 83bf      	STD  Y+6+1,R27
00d2c3 9711      	SBIW R26,1
00d2c4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x363:
00d2c5 940e c07c 	CALL SUBOPT_0xB6
                +
00d2c7 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00d2c8 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00d2c9 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00d2ca e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00d2cb 940e d7dd 	CALL __MULF12
00d2cd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x364:
00d2ce 940e c077 	CALL SUBOPT_0xB5
                +
00d2d0 85a9     +LDD R26 , Y + 9
00d2d1 85ba     +LDD R27 , Y + 9 + 1
00d2d2 858b     +LDD R24 , Y + 9 + 2
00d2d3 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00d2d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 9 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x365:
00d2d5 940e c281 	CALL SUBOPT_0x10D
00d2d7 940e d7dd 	CALL __MULF12
00d2d9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x366:
00d2da 940e c866 	CALL SUBOPT_0x203
00d2dc 940e d78d 	CALL __ADDF12
00d2de 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x367:
00d2df 2fe0      	MOV  R30,R16
00d2e0 5de0      	SUBI R30,-LOW(48)
00d2e1 93ec      	ST   X,R30
00d2e2 2fe0      	MOV  R30,R16
00d2e3 e0f0      	LDI  R31,0
00d2e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x368:
00d2e5 940e d919 	CALL __CWD1
00d2e7 940e d753 	CALL __CDF1
00d2e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x369:
                +
00d2ea 85a9     +LDD R26 , Y + 9
00d2eb 85ba     +LDD R27 , Y + 9 + 1
00d2ec 858b     +LDD R24 , Y + 9 + 2
00d2ed 859c     +LDD R25 , Y + 9 + 3
                 	__GETD2S 9
00d2ee 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36A:
00d2ef 89e8      	LDD  R30,Y+16
00d2f0 89f9      	LDD  R31,Y+16+1
00d2f1 9631      	ADIW R30,1
00d2f2 8be8      	STD  Y+16,R30
00d2f3 8bf9      	STD  Y+16+1,R31
00d2f4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36B:
00d2f5 940e bbfc 	CALL SUBOPT_0xB
00d2f7 cfdd      	RJMP SUBOPT_0x365
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x36C:
00d2f8 940e d7dd 	CALL __MULF12
00d2fa 940c c1d3 	JMP SUBOPT_0xED
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36D:
00d2fc 93e0 1aa3 	STS  __seed_G100,R30
00d2fe 93f0 1aa4 	STS  __seed_G100+1,R31
00d300 9360 1aa5 	STS  __seed_G100+2,R22
00d302 9370 1aa6 	STS  __seed_G100+3,R23
00d304 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x36E:
00d305 940e d9f0 	CALL __GETW1P
00d307 83ee      	STD  Y+6,R30
00d308 83ff      	STD  Y+6+1,R31
00d309 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x36F:
00d30a e0f0      	LDI  R31,0
00d30b 940e d919 	CALL __CWD1
00d30d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x370:
00d30e 940e d9fa 	CALL __GETD1P_INC
00d310 940e c144 	CALL SUBOPT_0xD5
00d312 940e da04 	CALL __PUTDP1_DEC
00d314 940c c167 	JMP SUBOPT_0xDD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x371:
00d316 940e d9f4 	CALL __GETD1P
                +
00d318 83e9     +STD Y + 1 , R30
00d319 83fa     +STD Y + 1 + 1 , R31
00d31a 836b     +STD Y + 1 + 2 , R22
00d31b 837c     +STD Y + 1 + 3 , R23
                 	__PUTD1S 1
00d31c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x372:
                +
00d31d 81ed     +LDD R30 , Y + 5
00d31e 81fe     +LDD R31 , Y + 5 + 1
00d31f 816f     +LDD R22 , Y + 5 + 2
00d320 8578     +LDD R23 , Y + 5 + 3
                 	__GETD1S 5
00d321 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x373:
00d322 85e9      	LDD  R30,Y+9
00d323 85fa      	LDD  R31,Y+9+1
00d324 81a1      	LDD  R26,Z+1
00d325 93aa      	ST   -Y,R26
00d326 85ea      	LDD  R30,Y+10
00d327 85fb      	LDD  R31,Y+10+1
00d328 96f2      	ADIW R30,50
00d329 93fa      	ST   -Y,R31
00d32a 93ea      	ST   -Y,R30
00d32b 940e bf59 	CALL SUBOPT_0x89
00d32d 940e da29 	CALL __PUTPARD1
00d32f e0a1      	LDI  R26,LOW(1)
00d330 940c a424 	JMP  _disk_write
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x374:
                +
00d332 a1a2     +LDD R26 , Z + 34
00d333 a1b3     +LDD R27 , Z + 34 + 1
00d334 a184     +LDD R24 , Z + 34 + 2
00d335 a195     +LDD R25 , Z + 34 + 3
                 	__GETD2Z 34
00d336 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x375:
00d337 93fa      	ST   -Y,R31
00d338 93ea      	ST   -Y,R30
00d339 940e bdd3 	CALL SUBOPT_0x4F
00d33b 940e da29 	CALL __PUTPARD1
00d33d e0a1      	LDI  R26,LOW(1)
00d33e 940e a3bf 	CALL _disk_read
00d340 30e0      	CPI  R30,0
00d341 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x376:
00d342 940e bcda 	CALL SUBOPT_0x2C
00d344 940c a761 	JMP  _move_window_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:6 WORDS
                 SUBOPT_0x377:
00d346 96f2      	ADIW R30,50
00d347 93fa      	ST   -Y,R31
00d348 93ea      	ST   -Y,R30
00d349 e0e0      	LDI  R30,LOW(0)
00d34a e0f0      	LDI  R31,HIGH(0)
00d34b 93fa      	ST   -Y,R31
00d34c 93ea      	ST   -Y,R30
00d34d e0a0      	LDI  R26,LOW(512)
00d34e e0b2      	LDI  R27,HIGH(512)
00d34f 940c a704 	JMP  _mem_set_G103
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x378:
00d351 940e d9f4 	CALL __GETD1P
00d353 01d0      	MOVW R26,R0
00d354 940e d9ff 	CALL __PUTDP1
00d356 81e9      	LDD  R30,Y+1
00d357 81fa      	LDD  R31,Y+1+1
00d358 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x379:
                +
00d359 89a2     +LDD R26 , Z + 18
00d35a 89b3     +LDD R27 , Z + 18 + 1
00d35b 8984     +LDD R24 , Z + 18 + 2
00d35c 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00d35d 940e da2e 	CALL __PUTPARD2
00d35f e0a1      	LDI  R26,LOW(1)
00d360 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x37A:
                +
00d361 30a2     +CPI R26 , LOW ( 0x2 )
00d362 e0e0     +LDI R30 , HIGH ( 0x2 )
00d363 07be     +CPC R27 , R30
00d364 e0e0     +LDI R30 , BYTE3 ( 0x2 )
00d365 078e     +CPC R24 , R30
00d366 e0e0     +LDI R30 , BYTE4 ( 0x2 )
00d367 079e     +CPC R25 , R30
                 	__CPD2N 0x2
00d368 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37B:
                +
00d369 e0e1     +LDI R30 , LOW ( 0x1 )
00d36a e0f0     +LDI R31 , HIGH ( 0x1 )
00d36b e060     +LDI R22 , BYTE3 ( 0x1 )
00d36c e070     +LDI R23 , BYTE4 ( 0x1 )
                 	__GETD1N 0x1
00d36d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37C:
00d36e 940e d9f4 	CALL __GETD1P
00d370 940c c03e 	JMP SUBOPT_0xAA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x37D:
00d372 01d9      	MOVW R26,R18
00d373 e0e0      	LDI  R30,LOW(512)
00d374 e0f2      	LDI  R31,HIGH(512)
00d375 940e d978 	CALL __DIVW21U
00d377 940e be1e 	CALL SUBOPT_0x59
00d379 2766      	CLR  R22
00d37a 2777      	CLR  R23
00d37b 940e d899 	CALL __ADDD21
00d37d 940e a761 	CALL _move_window_G103
00d37f 30e0      	CPI  R30,0
00d380 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x37E:
00d381 85ac      	LDD  R26,Y+12
00d382 85bd      	LDD  R27,Y+12+1
00d383 96d2      	ADIW R26,50
00d384 01f9      	MOVW R30,R18
00d385 70f1      	ANDI R31,HIGH(0x1FF)
00d386 0fae      	ADD  R26,R30
00d387 1fbf      	ADC  R27,R31
00d388 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x37F:
                +
00d389 e0e0     +LDI R30 , LOW ( 0x100 )
00d38a e0f1     +LDI R31 , HIGH ( 0x100 )
00d38b e060     +LDI R22 , BYTE3 ( 0x100 )
00d38c e070     +LDI R23 , BYTE4 ( 0x100 )
                 	__GETD1N 0x100
00d38d 940e d990 	CALL __DIVD21U
00d38f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x380:
00d390 940e be1e 	CALL SUBOPT_0x59
00d392 940e d899 	CALL __ADDD21
00d394 940e a761 	CALL _move_window_G103
00d396 30e0      	CPI  R30,0
00d397 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x381:
00d398 940e d95a 	CALL __MULB1W2U
00d39a 70f1      	ANDI R31,HIGH(0x1FF)
00d39b 85ac      	LDD  R26,Y+12
00d39c 85bd      	LDD  R27,Y+12+1
00d39d 96d2      	ADIW R26,50
00d39e 0fae      	ADD  R26,R30
00d39f 1fbf      	ADC  R27,R31
00d3a0 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x382:
                +
00d3a1 e8e0     +LDI R30 , LOW ( 0x80 )
00d3a2 e0f0     +LDI R31 , HIGH ( 0x80 )
00d3a3 e060     +LDI R22 , BYTE3 ( 0x80 )
00d3a4 e070     +LDI R23 , BYTE4 ( 0x80 )
                 	__GETD1N 0x80
00d3a5 940e d990 	CALL __DIVD21U
00d3a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x383:
00d3a8 940e d9f4 	CALL __GETD1P
                +
00d3aa 7fef     +ANDI R30 , LOW ( 0xFFFFFFF )
00d3ab 7fff     +ANDI R31 , HIGH ( 0xFFFFFFF )
00d3ac 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFFF )
00d3ad 707f     +ANDI R23 , BYTE4 ( 0xFFFFFFF )
                 	__ANDD1N 0xFFFFFFF
00d3ae 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x384:
                +
00d3af 85ae     +LDD R26 , Y + 14
00d3b0 85bf     +LDD R27 , Y + 14 + 1
00d3b1 8988     +LDD R24 , Y + 14 + 2
00d3b2 8999     +LDD R25 , Y + 14 + 3
                 	__GETD2S 14
00d3b3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:10 WORDS
                 SUBOPT_0x385:
00d3b4 01d8      	MOVW R26,R16
00d3b5 e0e0      	LDI  R30,LOW(512)
00d3b6 e0f2      	LDI  R31,HIGH(512)
00d3b7 940e d978 	CALL __DIVW21U
00d3b9 940e c15d 	CALL SUBOPT_0xDB
00d3bb 2766      	CLR  R22
00d3bc 2777      	CLR  R23
00d3bd 940e d899 	CALL __ADDD21
00d3bf 940e a761 	CALL _move_window_G103
00d3c1 2f5e      	MOV  R21,R30
00d3c2 3050      	CPI  R21,0
00d3c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x386:
00d3c4 89aa      	LDD  R26,Y+18
00d3c5 89bb      	LDD  R27,Y+18+1
00d3c6 96d2      	ADIW R26,50
00d3c7 01f8      	MOVW R30,R16
00d3c8 70f1      	ANDI R31,HIGH(0x1FF)
00d3c9 0fea      	ADD  R30,R26
00d3ca 1ffb      	ADC  R31,R27
00d3cb 019f      	MOVW R18,R30
00d3cc 85ee      	LDD  R30,Y+14
00d3cd 70e1      	ANDI R30,LOW(0x1)
00d3ce 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x387:
                +
00d3cf 89a8     +LDD R26 , Y + 16
00d3d0 89b9     +LDD R27 , Y + 16 + 1
00d3d1 898a     +LDD R24 , Y + 16 + 2
00d3d2 899b     +LDD R25 , Y + 16 + 3
                 	__GETD2S 16
00d3d3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x388:
00d3d4 940e c15d 	CALL SUBOPT_0xDB
00d3d6 940e d899 	CALL __ADDD21
00d3d8 940e a761 	CALL _move_window_G103
00d3da 2f5e      	MOV  R21,R30
00d3db 3050      	CPI  R21,0
00d3dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x389:
00d3dd 940e d95a 	CALL __MULB1W2U
00d3df 70f1      	ANDI R31,HIGH(0x1FF)
00d3e0 89aa      	LDD  R26,Y+18
00d3e1 89bb      	LDD  R27,Y+18+1
00d3e2 96d2      	ADIW R26,50
00d3e3 0fea      	ADD  R30,R26
00d3e4 1ffb      	ADC  R31,R27
00d3e5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x38A:
                +
00d3e6 81ad     +LDD R26 , Y + 5
00d3e7 81be     +LDD R27 , Y + 5 + 1
00d3e8 818f     +LDD R24 , Y + 5 + 2
00d3e9 8598     +LDD R25 , Y + 5 + 3
                 	__GETD2S 5
00d3ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x38B:
00d3eb 85a9      	LDD  R26,Y+9
00d3ec 85ba      	LDD  R27,Y+9+1
00d3ed 965e      	ADIW R26,30
00d3ee 940e d9f4 	CALL __GETD1P
00d3f0 dff5      	RCALL SUBOPT_0x38A
00d3f1 940e da94 	CALL __CPD21
00d3f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38C:
                +
00d3f4 81e9     +LDD R30 , Y + 1
00d3f5 81fa     +LDD R31 , Y + 1 + 1
00d3f6 816b     +LDD R22 , Y + 1 + 2
00d3f7 817c     +LDD R23 , Y + 1 + 3
                 	__GETD1S 1
00d3f8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:32 WORDS
                 SUBOPT_0x38D:
                +
00d3f9 30a1     +CPI R26 , LOW ( 0x1 )
00d3fa e0e0     +LDI R30 , HIGH ( 0x1 )
00d3fb 07be     +CPC R27 , R30
00d3fc e0e0     +LDI R30 , BYTE3 ( 0x1 )
00d3fd 078e     +CPC R24 , R30
00d3fe e0e0     +LDI R30 , BYTE4 ( 0x1 )
00d3ff 079e     +CPC R25 , R30
                 	__CPD2N 0x1
00d400 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x38E:
                +
00d401 85a6     +LDD R26 , Z + 14
00d402 85b7     +LDD R27 , Z + 14 + 1
00d403 8980     +LDD R24 , Z + 14 + 2
00d404 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00d405 940c bd3e 	JMP SUBOPT_0x3A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x38F:
                +
00d407 83ed     +STD Y + 5 , R30
00d408 83fe     +STD Y + 5 + 1 , R31
00d409 836f     +STD Y + 5 + 2 , R22
00d40a 8778     +STD Y + 5 + 3 , R23
                 	__PUTD1S 5
00d40b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x390:
00d40c 89ec      	LDD  R30,Y+20
00d40d 89fd      	LDD  R31,Y+20+1
00d40e 93fa      	ST   -Y,R31
00d40f 93ea      	ST   -Y,R30
00d410 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x391:
                +
00d411 89aa     +LDD R26 , Y + 18
00d412 89bb     +LDD R27 , Y + 18 + 1
00d413 898c     +LDD R24 , Y + 18 + 2
00d414 899d     +LDD R25 , Y + 18 + 3
                 	__GETD2S 18
00d415 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x392:
                +
00d416 e0e2     +LDI R30 , LOW ( 0x2 )
00d417 e0f0     +LDI R31 , HIGH ( 0x2 )
00d418 e060     +LDI R22 , BYTE3 ( 0x2 )
00d419 e070     +LDI R23 , BYTE4 ( 0x2 )
                 	__GETD1N 0x2
00d41a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x393:
00d41b 940e bf59 	CALL SUBOPT_0x89
00d41d 940e c15d 	CALL SUBOPT_0xDB
00d41f 940e da8f 	CALL __CPD12
00d421 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x394:
                +
00d422 e0e0     +LDI R30 , LOW ( 0x0 )
00d423 e0f0     +LDI R31 , HIGH ( 0x0 )
00d424 e060     +LDI R22 , BYTE3 ( 0x0 )
00d425 e070     +LDI R23 , BYTE4 ( 0x0 )
                 	__GETD1N 0x0
00d426 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 11 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x395:
00d427 85a8      	LDD  R26,Y+8
00d428 85b9      	LDD  R27,Y+8+1
00d429 940e d9f0 	CALL __GETW1P
00d42b 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x396:
00d42c 967e      	ADIW R30,30
00d42d 01df      	MOVW R26,R30
00d42e 940e d9f4 	CALL __GETD1P
00d430 940e c07c 	CALL SUBOPT_0xB6
00d432 940e da94 	CALL __CPD21
00d434 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x397:
00d435 940e c077 	CALL SUBOPT_0xB5
                +
00d437 85a8     +LDD R26 , Y + 8
00d438 85b9     +LDD R27 , Y + 8 + 1
00d439 961a     +ADIW R26 , 10
00d43a 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 8,10
00d43c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x398:
00d43d 85a8      	LDD  R26,Y+8
00d43e 85b9      	LDD  R27,Y+8+1
00d43f cc68      	RJMP SUBOPT_0x31A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x399:
00d440 2766      	CLR  R22
00d441 2777      	CLR  R23
00d442 940e d894 	CALL __ADDD12
00d444 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x39A:
00d445 70ef      	ANDI R30,LOW(0xF)
00d446 70f0      	ANDI R31,HIGH(0xF)
00d447 0fee      	LSL  R30
00d448 940e d8df 	CALL __LSLW4
00d44a 0fea      	ADD  R30,R26
00d44b 1ffb      	ADC  R31,R27
00d44c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39B:
00d44d 940e d9f4 	CALL __GETD1P
00d44f 940e da7d 	CALL __CPD10
00d451 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 10 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x39C:
00d452 85a9      	LDD  R26,Y+9
00d453 85ba      	LDD  R27,Y+9+1
00d454 940e d9f0 	CALL __GETW1P
00d456 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x39D:
00d457 85a9      	LDD  R26,Y+9
00d458 85ba      	LDD  R27,Y+9+1
00d459 cc4e      	RJMP SUBOPT_0x31A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x39E:
00d45a 85eb      	LDD  R30,Y+11
00d45b 85fc      	LDD  R31,Y+11+1
                +
00d45c 85a2     +LDD R26 , Z + 10
00d45d 85b3     +LDD R27 , Z + 10 + 1
00d45e 8584     +LDD R24 , Z + 10 + 2
00d45f 8595     +LDD R25 , Z + 10 + 3
                 	__GETD2Z 10
00d460 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x39F:
00d461 967e      	ADIW R30,30
00d462 01df      	MOVW R26,R30
00d463 940e d9f4 	CALL __GETD1P
00d465 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A0:
00d466 81ac      	LDD  R26,Y+4
00d467 81bd      	LDD  R27,Y+4+1
00d468 cc3f      	RJMP SUBOPT_0x31A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x3A1:
00d469 81ee      	LDD  R30,Y+6
00d46a 81ff      	LDD  R31,Y+6+1
                +
00d46b 85a6     +LDD R26 , Z + 14
00d46c 85b7     +LDD R27 , Z + 14 + 1
00d46d 8980     +LDD R24 , Z + 14 + 2
00d46e 8991     +LDD R25 , Z + 14 + 3
                 	__GETD2Z 14
00d46f 940e a761 	CALL _move_window_G103
00d471 2f1e      	MOV  R17,R30
00d472 3010      	CPI  R17,0
00d473 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3A2:
00d474 933a      	ST   -Y,R19
00d475 932a      	ST   -Y,R18
00d476 81ee      	LDD  R30,Y+6
00d477 81ff      	LDD  R31,Y+6+1
00d478 89a4      	LDD  R26,Z+20
00d479 89b5      	LDD  R27,Z+21
00d47a 93ba      	ST   -Y,R27
00d47b 93aa      	ST   -Y,R26
00d47c 940c bda9 	JMP SUBOPT_0x48
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3A3:
00d47e 2fe2      	MOV  R30,R18
00d47f 5f2f      	SUBI R18,-1
00d480 e0f0      	LDI  R31,0
00d481 0fe4      	ADD  R30,R20
00d482 1ff5      	ADC  R31,R21
00d483 8300      	ST   Z,R16
00d484 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3A4:
00d485 e0f0      	LDI  R31,0
00d486 0fe4      	ADD  R30,R20
00d487 1ff5      	ADC  R31,R21
00d488 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A5:
                +
00d489 81ae     +LDD R26 , Y + 6
00d48a 81bf     +LDD R27 , Y + 6 + 1
00d48b 9616     +ADIW R26 , 6
00d48c 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 6,6
00d48e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A6:
00d48f 01d9      	MOVW R26,R18
00d490 9654      	ADIW R26,20
00d491 940c bc7b 	JMP SUBOPT_0x1D
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A7:
00d493 01d9      	MOVW R26,R18
00d494 965a      	ADIW R26,26
00d495 940e d9f0 	CALL __GETW1P
00d497 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A8:
00d498 2766      	CLR  R22
00d499 2777      	CLR  R23
00d49a 940e d8ad 	CALL __ORD12
00d49c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3A9:
00d49d 940e da29 	CALL __PUTPARD1
00d49f e0a1      	LDI  R26,LOW(1)
00d4a0 940e a3bf 	CALL _disk_read
00d4a2 30e0      	CPI  R30,0
00d4a3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3AA:
00d4a4 96f2      	ADIW R30,50
00d4a5 50e2      	SUBI R30,LOW(-510)
00d4a6 4ffe      	SBCI R31,HIGH(-510)
00d4a7 01df      	MOVW R26,R30
00d4a8 940e d9f0 	CALL __GETW1P
00d4aa 35e5      	CPI  R30,LOW(0xAA55)
00d4ab eaaa      	LDI  R26,HIGH(0xAA55)
00d4ac 07fa      	CPC  R31,R26
00d4ad 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
                 SUBOPT_0x3AB:
00d4ae 940e d9f4 	CALL __GETD1P
                +
00d4b0 7fef     +ANDI R30 , LOW ( 0xFFFFFF )
00d4b1 7fff     +ANDI R31 , HIGH ( 0xFFFFFF )
00d4b2 7f6f     +ANDI R22 , BYTE3 ( 0xFFFFFF )
00d4b3 7070     +ANDI R23 , BYTE4 ( 0xFFFFFF )
                 	__ANDD1N 0xFFFFFF
                +
00d4b4 34e6     +CPI R30 , LOW ( 0x544146 )
00d4b5 e4a1     +LDI R26 , HIGH ( 0x544146 )
00d4b6 07fa     +CPC R31 , R26
00d4b7 e5a4     +LDI R26 , BYTE3 ( 0x544146 )
00d4b8 076a     +CPC R22 , R26
00d4b9 e0a0     +LDI R26 , BYTE4 ( 0x544146 )
00d4ba 077a     +CPC R23 , R26
                 	__CPD1N 0x544146
00d4bb 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
                 SUBOPT_0x3AC:
00d4bc eaac      	LDI  R26,LOW(_FatFs_G103)
00d4bd e1ba      	LDI  R27,HIGH(_FatFs_G103)
00d4be e0f0      	LDI  R31,0
00d4bf 0fee      	LSL  R30
00d4c0 1fff      	ROL  R31
00d4c1 0fae      	ADD  R26,R30
00d4c2 1fbf      	ADC  R27,R31
00d4c3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3AD:
                +
00d4c4 8bea     +STD Y + 18 , R30
00d4c5 8bfb     +STD Y + 18 + 1 , R31
00d4c6 8b6c     +STD Y + 18 + 2 , R22
00d4c7 8b7d     +STD Y + 18 + 3 , R23
                 	__PUTD1S 18
00d4c8 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3AE:
00d4c9 81ae      	LDD  R26,Y+6
00d4ca 81bf      	LDD  R27,Y+6+1
00d4cb 5ca0      	SUBI R26,LOW(-64)
00d4cc 4fbf      	SBCI R27,HIGH(-64)
00d4cd 940e d9f0 	CALL __GETW1P
00d4cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3AF:
                +
00d4d0 87ee     +STD Y + 14 , R30
00d4d1 87ff     +STD Y + 14 + 1 , R31
00d4d2 8b68     +STD Y + 14 + 2 , R22
00d4d3 8b79     +STD Y + 14 + 3 , R23
                 	__PUTD1S 14
00d4d4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3B0:
00d4d5 81ee      	LDD  R30,Y+6
00d4d6 81ff      	LDD  R31,Y+6+1
00d4d7 85a0      	LDD  R26,Z+8
00d4d8 85b1      	LDD  R27,Z+9
00d4d9 01fd      	MOVW R30,R26
00d4da 940e d8f1 	CALL __LSRW4
00d4dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3B1:
00d4dd 81ee      	LDD  R30,Y+6
00d4de 81ff      	LDD  R31,Y+6+1
00d4df de52      	RCALL SUBOPT_0x374
00d4e0 940e c149 	CALL SUBOPT_0xD6
00d4e2 940e d894 	CALL __ADDD12
00d4e4 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B2:
00d4e5 940e a761 	CALL _move_window_G103
00d4e7 2f1e      	MOV  R17,R30
00d4e8 3010      	CPI  R17,0
00d4e9 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B3:
00d4ea 8daa      	LDD  R26,Y+26
00d4eb 8dbb      	LDD  R27,Y+26+1
00d4ec cbbb      	RJMP SUBOPT_0x31A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3B4:
00d4ed 81a2      	LDD  R26,Z+2
00d4ee 81b3      	LDD  R27,Z+3
00d4ef 940e b001 	CALL _validate_G103
00d4f1 2f1e      	MOV  R17,R30
00d4f2 3010      	CPI  R17,0
00d4f3 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3B5:
00d4f4 8dea      	LDD  R30,Y+26
00d4f5 8dfb      	LDD  R31,Y+26+1
                +
00d4f6 81a6     +LDD R26 , Z + 6
00d4f7 81b7     +LDD R27 , Z + 6 + 1
00d4f8 8580     +LDD R24 , Z + 6 + 2
00d4f9 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00d4fa 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B6:
00d4fb 01fd      	MOVW R30,R26
00d4fc 01bc      	MOVW R22,R24
00d4fd 70f1      	ANDI R31,HIGH(0x1FF)
00d4fe 9730      	SBIW R30,0
00d4ff 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B7:
00d500 8dec      	LDD  R30,Y+28
00d501 8dfd      	LDD  R31,Y+28+1
                +
00d502 89a2     +LDD R26 , Z + 18
00d503 89b3     +LDD R27 , Z + 18 + 1
00d504 8984     +LDD R24 , Z + 18 + 2
00d505 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00d506 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3B8:
00d507 8daa      	LDD  R26,Y+26
00d508 8dbb      	LDD  R27,Y+26+1
00d509 9614      	ADIW R26,4
00d50a 91ec      	LD   R30,X
00d50b 68e0      	ORI  R30,0x80
00d50c 93ec      	ST   X,R30
00d50d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3B9:
00d50e 8dea      	LDD  R30,Y+26
00d50f 8dfb      	LDD  R31,Y+26+1
00d510 81e5      	LDD  R30,Z+5
00d511 e0f0      	LDI  R31,0
00d512 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3BA:
00d513 e0e0      	LDI  R30,LOW(512)
00d514 e0f2      	LDI  R31,HIGH(512)
00d515 940e d978 	CALL __DIVW21U
00d517 01af      	MOVW R20,R30
00d518 2e04      	MOV  R0,R20
00d519 2a05      	OR   R0,R21
00d51a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3BB:
00d51b 8daa      	LDD  R26,Y+26
00d51c 8dbb      	LDD  R27,Y+26+1
00d51d 940e d9f0 	CALL __GETW1P
00d51f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3BC:
00d520 81e1      	LDD  R30,Z+1
00d521 93ea      	ST   -Y,R30
00d522 81ef      	LDD  R30,Y+7
00d523 85f8      	LDD  R31,Y+7+1
00d524 93fa      	ST   -Y,R31
00d525 93ea      	ST   -Y,R30
00d526 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3BD:
00d527 8dea      	LDD  R30,Y+26
00d528 8dfb      	LDD  R31,Y+26+1
                +
00d529 89a6     +LDD R26 , Z + 22
00d52a 89b7     +LDD R27 , Z + 22 + 1
00d52b 8d80     +LDD R24 , Z + 22 + 2
00d52c 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00d52d 940c c162 	JMP SUBOPT_0xDC
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3BE:
00d52f 940e d8a3 	CALL __SUBD21
00d531 01fa      	MOVW R30,R20
00d532 2766      	CLR  R22
00d533 2777      	CLR  R23
00d534 940e da94 	CALL __CPD21
00d536 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3BF:
00d537 940e d8a3 	CALL __SUBD21
                +
00d539 e0e0     +LDI R30 , LOW ( 0x200 )
00d53a e0f2     +LDI R31 , HIGH ( 0x200 )
00d53b e060     +LDI R22 , BYTE3 ( 0x200 )
00d53c e070     +LDI R23 , BYTE4 ( 0x200 )
                 	__GETD1N 0x200
00d53d 940e d93a 	CALL __MULD12U
00d53f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C0:
00d540 9615      	ADIW R26,5
00d541 91ec      	LD   R30,X
00d542 0fe4      	ADD  R30,R20
00d543 93ec      	ST   X,R30
00d544 01fa      	MOVW R30,R20
00d545 0fee      	LSL  R30
00d546 1fff      	ROL  R31
00d547 2ffe      	MOV  R31,R30
00d548 e0e0      	LDI  R30,0
00d549 019f      	MOVW R18,R30
00d54a 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3C1:
00d54b 81e1      	LDD  R30,Z+1
00d54c 93ea      	ST   -Y,R30
00d54d 8deb      	LDD  R30,Y+27
00d54e 8dfc      	LDD  R31,Y+27+1
00d54f 96b0      	ADIW R30,32
00d550 93fa      	ST   -Y,R31
00d551 93ea      	ST   -Y,R30
00d552 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3C2:
                +
00d553 89a6     +LDD R26 , Z + 22
00d554 89b7     +LDD R27 , Z + 22 + 1
00d555 8d80     +LDD R24 , Z + 22 + 2
00d556 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00d557 940e da2e 	CALL __PUTPARD2
00d559 e0a1      	LDI  R26,LOW(1)
00d55a 940e a424 	CALL _disk_write
00d55c 30e0      	CPI  R30,0
00d55d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C3:
00d55e 9614      	ADIW R26,4
00d55f 91ec      	LD   R30,X
00d560 7bef      	ANDI R30,0xBF
00d561 93ec      	ST   X,R30
00d562 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C4:
00d563 9615      	ADIW R26,5
00d564 91ec      	LD   R30,X
00d565 5fef      	SUBI R30,-LOW(1)
00d566 93ec      	ST   X,R30
00d567 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C5:
00d568 9616      	ADIW R26,6
00d569 940e d9f0 	CALL __GETW1P
00d56b 70f1      	ANDI R31,HIGH(0x1FF)
00d56c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3C6:
00d56d 9636      	ADIW R30,6
00d56e 010f      	MOVW R0,R30
00d56f 01df      	MOVW R26,R30
00d570 940e d9f4 	CALL __GETD1P
00d572 01df      	MOVW R26,R30
00d573 01cb      	MOVW R24,R22
00d574 01f9      	MOVW R30,R18
00d575 ceca      	RJMP SUBOPT_0x399
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3C7:
00d576 91ed      	LD   R30,X+
00d577 91fd      	LD   R31,X+
00d578 0fe2      	ADD  R30,R18
00d579 1ff3      	ADC  R31,R19
00d57a 93fe      	ST   -X,R31
00d57b 93ee      	ST   -X,R30
00d57c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3C8:
00d57d 89ae      	LDD  R26,Y+22
00d57e 89bf      	LDD  R27,Y+22+1
00d57f cb28      	RJMP SUBOPT_0x31A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3C9:
00d580 89ae      	LDD  R26,Y+22
00d581 89bf      	LDD  R27,Y+22+1
00d582 961a      	ADIW R26,10
00d583 940e d9f4 	CALL __GETD1P
00d585 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3CA:
00d586 89ee      	LDD  R30,Y+22
00d587 89ff      	LDD  R31,Y+22+1
                +
00d588 81a6     +LDD R26 , Z + 6
00d589 81b7     +LDD R27 , Z + 6 + 1
00d58a 8580     +LDD R24 , Z + 6 + 2
00d58b 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00d58c 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 15 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3CB:
00d58d 89ae      	LDD  R26,Y+22
00d58e 89bf      	LDD  R27,Y+22+1
00d58f 940e d9f0 	CALL __GETW1P
00d591 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CC:
00d592 8de8      	LDD  R30,Y+24
00d593 8df9      	LDD  R31,Y+24+1
                +
00d594 89a2     +LDD R26 , Z + 18
00d595 89b3     +LDD R27 , Z + 18 + 1
00d596 8984     +LDD R24 , Z + 18 + 2
00d597 8995     +LDD R25 , Z + 18 + 3
                 	__GETD2Z 18
00d598 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3CD:
00d599 89ae      	LDD  R26,Y+22
00d59a 89bf      	LDD  R27,Y+22+1
00d59b 9614      	ADIW R26,4
00d59c 91ec      	LD   R30,X
00d59d 68e0      	ORI  R30,0x80
00d59e 93ec      	ST   X,R30
00d59f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3CE:
00d5a0 81e1      	LDD  R30,Z+1
00d5a1 93ea      	ST   -Y,R30
00d5a2 89ef      	LDD  R30,Y+23
00d5a3 8df8      	LDD  R31,Y+23+1
00d5a4 96b0      	ADIW R30,32
00d5a5 93fa      	ST   -Y,R31
00d5a6 93ea      	ST   -Y,R30
00d5a7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3CF:
00d5a8 89ee      	LDD  R30,Y+22
00d5a9 89ff      	LDD  R31,Y+22+1
00d5aa 81e5      	LDD  R30,Z+5
00d5ab e0f0      	LDI  R31,0
00d5ac 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D0:
00d5ad 89ee      	LDD  R30,Y+22
00d5ae 89ff      	LDD  R31,Y+22+1
                +
00d5af 89a6     +LDD R26 , Z + 22
00d5b0 89b7     +LDD R27 , Z + 22 + 1
00d5b1 8d80     +LDD R24 , Z + 22 + 2
00d5b2 8d91     +LDD R25 , Z + 22 + 3
                 	__GETD2Z 22
00d5b3 940c bdd3 	JMP SUBOPT_0x4F
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3D1:
00d5b5 89ee      	LDD  R30,Y+22
00d5b6 89ff      	LDD  R31,Y+22+1
00d5b7 96b0      	ADIW R30,32
00d5b8 93fa      	ST   -Y,R31
00d5b9 93ea      	ST   -Y,R30
00d5ba 8de8      	LDD  R30,Y+24
00d5bb 8df9      	LDD  R31,Y+24+1
00d5bc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3D2:
00d5bd 89ad      	LDD  R26,Y+21
00d5be 89be      	LDD  R27,Y+21+1
00d5bf cae8      	RJMP SUBOPT_0x31A
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D3:
00d5c0 89ad      	LDD  R26,Y+21
00d5c1 89be      	LDD  R27,Y+21+1
00d5c2 961a      	ADIW R26,10
00d5c3 940e d9f4 	CALL __GETD1P
00d5c5 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3D4:
                +
00d5c6 89a9     +LDD R26 , Y + 17
00d5c7 89ba     +LDD R27 , Y + 17 + 1
00d5c8 898b     +LDD R24 , Y + 17 + 2
00d5c9 899c     +LDD R25 , Y + 17 + 3
                 	__GETD2S 17
00d5ca 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D5:
                +
00d5cb 8be9     +STD Y + 17 , R30
00d5cc 8bfa     +STD Y + 17 + 1 , R31
00d5cd 8b6b     +STD Y + 17 + 2 , R22
00d5ce 8b7c     +STD Y + 17 + 3 , R23
                 	__PUTD1S 17
00d5cf 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D6:
                +
00d5d0 89ad     +LDD R26 , Y + 21
00d5d1 89be     +LDD R27 , Y + 21 + 1
00d5d2 9616     +ADIW R26 , 6
00d5d3 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,6
00d5d5 89ad      	LDD  R26,Y+21
00d5d6 89be      	LDD  R27,Y+21+1
00d5d7 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D7:
00d5d8 89ad      	LDD  R26,Y+21
00d5d9 89be      	LDD  R27,Y+21+1
00d5da 940e d9f0 	CALL __GETW1P
00d5dc 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3D8:
                +
00d5dd 89e9     +LDD R30 , Y + 17
00d5de 89fa     +LDD R31 , Y + 17 + 1
00d5df 896b     +LDD R22 , Y + 17 + 2
00d5e0 897c     +LDD R23 , Y + 17 + 3
                 	__GETD1S 17
00d5e1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3D9:
00d5e2 940e c167 	CALL SUBOPT_0xDD
00d5e4 01df      	MOVW R26,R30
00d5e5 01cb      	MOVW R24,R22
00d5e6 940e be8c 	CALL SUBOPT_0x6B
00d5e8 940e d990 	CALL __DIVD21U
00d5ea 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DA:
00d5eb 940e d9f4 	CALL __GETD1P
                +
00d5ed 87ed     +STD Y + 13 , R30
00d5ee 87fe     +STD Y + 13 + 1 , R31
00d5ef 876f     +STD Y + 13 + 2 , R22
00d5f0 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00d5f1 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3DB:
                +
00d5f2 85ed     +LDD R30 , Y + 13
00d5f3 85fe     +LDD R31 , Y + 13 + 1
00d5f4 856f     +LDD R22 , Y + 13 + 2
00d5f5 8978     +LDD R23 , Y + 13 + 3
                 	__GETD1S 13
00d5f6 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3DC:
00d5f7 940e a9ac 	CALL _create_chain_G103
                +
00d5f9 87ed     +STD Y + 13 , R30
00d5fa 87fe     +STD Y + 13 + 1 , R31
00d5fb 876f     +STD Y + 13 + 2 , R22
00d5fc 8b78     +STD Y + 13 + 3 , R23
                 	__PUTD1S 13
00d5fd 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3DD:
                +
00d5fe 85ad     +LDD R26 , Y + 13
00d5ff 85be     +LDD R27 , Y + 13 + 1
00d600 858f     +LDD R24 , Y + 13 + 2
00d601 8998     +LDD R25 , Y + 13 + 3
                 	__GETD2S 13
00d602 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3DE:
00d603 89ad      	LDD  R26,Y+21
00d604 89be      	LDD  R27,Y+21+1
00d605 9614      	ADIW R26,4
00d606 91ec      	LD   R30,X
00d607 68e0      	ORI  R30,0x80
00d608 93ec      	ST   X,R30
00d609 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3DF:
00d60a dfe7      	RCALL SUBOPT_0x3DB
                +
00d60b 89ad     +LDD R26 , Y + 21
00d60c 89be     +LDD R27 , Y + 21 + 1
00d60d 9652     +ADIW R26 , 18
00d60e 940e d9ff+CALL __PUTDP1
                 	__PUTD1SNS 21,18
00d610 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E0:
                +
00d611 85af     +LDD R26 , Y + 15
00d612 89b8     +LDD R27 , Y + 15 + 1
00d613 8989     +LDD R24 , Y + 15 + 2
00d614 899a     +LDD R25 , Y + 15 + 3
                 	__GETD2S 15
00d615 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3E1:
00d616 89ed      	LDD  R30,Y+21
00d617 89fe      	LDD  R31,Y+21+1
00d618 9636      	ADIW R30,6
00d619 010f      	MOVW R0,R30
00d61a 01df      	MOVW R26,R30
00d61b 940e d9f4 	CALL __GETD1P
00d61d 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E2:
00d61e 89ed      	LDD  R30,Y+21
00d61f 89fe      	LDD  R31,Y+21+1
                +
00d620 81a6     +LDD R26 , Z + 6
00d621 81b7     +LDD R27 , Z + 6 + 1
00d622 8580     +LDD R24 , Z + 6 + 2
00d623 8591     +LDD R25 , Z + 6 + 3
                 	__GETD2Z 6
00d624 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
                 SUBOPT_0x3E3:
00d625 940e c149 	CALL SUBOPT_0xD6
00d627 940e c0a8 	CALL SUBOPT_0xBE
00d629 ce9a      	RJMP SUBOPT_0x3AD
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E4:
00d62a 940e c043 	CALL SUBOPT_0xAB
00d62c cca8      	RJMP SUBOPT_0x365
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3E5:
00d62d 940e bf59 	CALL SUBOPT_0x89
00d62f 940e bbfc 	CALL SUBOPT_0xB
00d631 940e d870 	CALL __CMPF12
00d633 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:3 WORDS
                 SUBOPT_0x3E6:
00d634 940e bbfc 	CALL SUBOPT_0xB
                +
00d636 eced     +LDI R30 , LOW ( 0x3DCCCCCD )
00d637 ecfc     +LDI R31 , HIGH ( 0x3DCCCCCD )
00d638 ec6c     +LDI R22 , BYTE3 ( 0x3DCCCCCD )
00d639 e37d     +LDI R23 , BYTE4 ( 0x3DCCCCCD )
                 	__GETD1N 0x3DCCCCCD
00d63a ccbd      	RJMP SUBOPT_0x36C
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3E7:
00d63b 85a8      	LDD  R26,Y+8
00d63c 85b9      	LDD  R27,Y+8+1
00d63d 9611      	ADIW R26,1
00d63e 87a8      	STD  Y+8,R26
00d63f 87b9      	STD  Y+8+1,R27
00d640 9711      	SBIW R26,1
00d641 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3E8:
00d642 932a      	ST   -Y,R18
00d643 81af      	LDD  R26,Y+7
00d644 85b8      	LDD  R27,Y+7+1
00d645 940e be8c 	CALL SUBOPT_0x6B
00d647 bf6c      	OUT  EIND,R22
00d648 9519      	EICALL
00d649 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:25 WORDS
                 SUBOPT_0x3E9:
                +
00d64a 01fe     +MOVW R30 , R28
00d64b 5ae0     +SUBI R30 , LOW ( - 96 )
00d64c 4fff     +SBCI R31 , HIGH ( - 96 )
00d64d 9001     +LD R0 , Z +
00d64e 81f0     +LD R31 , Z
00d64f 2de0     +MOV R30 , R0
                 	__GETW1SX 96
00d650 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 7 TIMES, CODE SIZE REDUCTION:21 WORDS
                 SUBOPT_0x3EA:
00d651 9734      	SBIW R30,4
                +
00d652 01de     +MOVW R26 , R28
00d653 5aa0     +SUBI R26 , LOW ( - 96 )
00d654 4fbf     +SBCI R27 , HIGH ( - 96 )
00d655 93ed     +ST X + , R30
00d656 93fc     +ST X , R31
                 	__PUTW1SX 96
00d657 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:9 WORDS
                 SUBOPT_0x3EB:
00d658 81af      	LDD  R26,Y+7
00d659 85b8      	LDD  R27,Y+7+1
00d65a 940e be8c 	CALL SUBOPT_0x6B
00d65c bf6c      	OUT  EIND,R22
00d65d 9519      	EICALL
00d65e 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:17 WORDS
                 SUBOPT_0x3EC:
                +
00d65f 01de     +MOVW R26 , R28
00d660 5aa0     +SUBI R26 , LOW ( - 96 )
00d661 4fbf     +SBCI R27 , HIGH ( - 96 )
00d662 900d     +LD R0 , X +
00d663 91bc     +LD R27 , X
00d664 2da0     +MOV R26 , R0
                 	__GETW2SX 96
00d665 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
                 SUBOPT_0x3ED:
00d666 dfe3      	RCALL SUBOPT_0x3E9
00d667 cfe9      	RJMP SUBOPT_0x3EA
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
                 SUBOPT_0x3EE:
00d668 8be8      	STD  Y+16,R30
00d669 8bf9      	STD  Y+16+1,R31
00d66a 89a8      	LDD  R26,Y+16
00d66b 89b9      	LDD  R27,Y+16+1
00d66c 940e a16b 	CALL _strlen
00d66e 2f1e      	MOV  R17,R30
00d66f 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:15 WORDS
                 SUBOPT_0x3EF:
00d670 7f0b      	ANDI R16,LOW(251)
00d671 8de9      	LDD  R30,Y+25
00d672 93ea      	ST   -Y,R30
                +
00d673 01de     +MOVW R26 , R28
00d674 5aa5     +SUBI R26 , LOW ( - 91 )
00d675 4fbf     +SBCI R27 , HIGH ( - 91 )
00d676 900d     +LD R0 , X +
00d677 91bc     +LD R27 , X
00d678 2da0     +MOV R26 , R0
                 	__GETW2SX 91
                +
00d679 01fe     +MOVW R30 , R28
00d67a 5ae3     +SUBI R30 , LOW ( - 93 )
00d67b 4fff     +SBCI R31 , HIGH ( - 93 )
00d67c 9001     +LD R0 , Z +
00d67d 9011     +LD R1 , Z +
00d67e 9161     +LD R22 , Z +
00d67f 8170     +LD R23 , Z
00d680 01f0     +MOVW R30 , R0
                 	__GETD1SX 93
00d681 bf6c      	OUT  EIND,R22
00d682 9519      	EICALL
00d683 3050      	CPI  R21,0
00d684 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
                 SUBOPT_0x3F0:
                +
00d685 e9ee     +LDI R30 , LOW ( _put_buff_G104 )
00d686 ebf7     +LDI R31 , HIGH ( _put_buff_G104 )
00d687 e060     +LDI R22 , BYTE3 ( _put_buff_G104 )
00d688 e070     +LDI R23 , BYTE4 ( _put_buff_G104 )
                 	__POINTD1M _put_buff_G104
00d689 940e da29 	CALL __PUTPARD1
00d68b 9508      	RET
                 
                 
                 	.CSEG
                 	.equ __i2c_dir=__i2c_port-1
                 	.equ __i2c_pin=__i2c_port-2
                 
                 _i2c_init:
00d68c 9858      	cbi  __i2c_port,__scl_bit
00d68d 9859      	cbi  __i2c_port,__sda_bit
00d68e 9a50      	sbi  __i2c_dir,__scl_bit
00d68f 9851      	cbi  __i2c_dir,__sda_bit
00d690 c015      	rjmp __i2c_delay2
                 _i2c_start:
00d691 9851      	cbi  __i2c_dir,__sda_bit
00d692 9850      	cbi  __i2c_dir,__scl_bit
00d693 27ee      	clr  r30
00d694 0000      	nop
00d695 9b49      	sbis __i2c_pin,__sda_bit
00d696 9508      	ret
00d697 9b48      	sbis __i2c_pin,__scl_bit
00d698 9508      	ret
00d699 d004      	rcall __i2c_delay1
00d69a 9a51      	sbi  __i2c_dir,__sda_bit
00d69b d002      	rcall __i2c_delay1
00d69c 9a50      	sbi  __i2c_dir,__scl_bit
00d69d e0e1      	ldi  r30,1
                 __i2c_delay1:
00d69e e06d      	ldi  r22,13
00d69f c007      	rjmp __i2c_delay2l
                 _i2c_stop:
00d6a0 9a51      	sbi  __i2c_dir,__sda_bit
00d6a1 9a50      	sbi  __i2c_dir,__scl_bit
00d6a2 d003      	rcall __i2c_delay2
00d6a3 9850      	cbi  __i2c_dir,__scl_bit
00d6a4 dff9      	rcall __i2c_delay1
00d6a5 9851      	cbi  __i2c_dir,__sda_bit
                 __i2c_delay2:
00d6a6 e16b      	ldi  r22,27
                 __i2c_delay2l:
00d6a7 956a      	dec  r22
00d6a8 f7f1      	brne __i2c_delay2l
00d6a9 9508      	ret
                 _i2c_read:
00d6aa e078      	ldi  r23,8
                 __i2c_read0:
00d6ab 9850      	cbi  __i2c_dir,__scl_bit
00d6ac dff1      	rcall __i2c_delay1
                 __i2c_read3:
00d6ad 9b48      	sbis __i2c_pin,__scl_bit
00d6ae cffe      	rjmp __i2c_read3
00d6af dfee      	rcall __i2c_delay1
00d6b0 9488      	clc
00d6b1 9949      	sbic __i2c_pin,__sda_bit
00d6b2 9408      	sec
00d6b3 9a50      	sbi  __i2c_dir,__scl_bit
00d6b4 dff1      	rcall __i2c_delay2
00d6b5 1fee      	rol  r30
00d6b6 957a      	dec  r23
00d6b7 f799      	brne __i2c_read0
00d6b8 2f7a      	mov  r23,r26
00d6b9 2377      	tst  r23
00d6ba f411      	brne __i2c_read1
00d6bb 9851      	cbi  __i2c_dir,__sda_bit
00d6bc c001      	rjmp __i2c_read2
                 __i2c_read1:
00d6bd 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_read2:
00d6be dfdf      	rcall __i2c_delay1
00d6bf 9850      	cbi  __i2c_dir,__scl_bit
00d6c0 dfe5      	rcall __i2c_delay2
00d6c1 9a50      	sbi  __i2c_dir,__scl_bit
00d6c2 dfdb      	rcall __i2c_delay1
00d6c3 9851      	cbi  __i2c_dir,__sda_bit
00d6c4 cfd9      	rjmp __i2c_delay1
                 
                 _i2c_write:
00d6c5 e078      	ldi  r23,8
                 __i2c_write0:
00d6c6 0faa      	lsl  r26
00d6c7 f410      	brcc __i2c_write1
00d6c8 9851      	cbi  __i2c_dir,__sda_bit
00d6c9 c001      	rjmp __i2c_write2
                 __i2c_write1:
00d6ca 9a51      	sbi  __i2c_dir,__sda_bit
                 __i2c_write2:
00d6cb dfda      	rcall __i2c_delay2
00d6cc 9850      	cbi  __i2c_dir,__scl_bit
00d6cd dfd0      	rcall __i2c_delay1
                 __i2c_write3:
00d6ce 9b48      	sbis __i2c_pin,__scl_bit
00d6cf cffe      	rjmp __i2c_write3
00d6d0 dfcd      	rcall __i2c_delay1
00d6d1 9a50      	sbi  __i2c_dir,__scl_bit
00d6d2 957a      	dec  r23
00d6d3 f791      	brne __i2c_write0
00d6d4 9851      	cbi  __i2c_dir,__sda_bit
00d6d5 dfc8      	rcall __i2c_delay1
00d6d6 9850      	cbi  __i2c_dir,__scl_bit
00d6d7 dfce      	rcall __i2c_delay2
00d6d8 e0e1      	ldi  r30,1
00d6d9 9949      	sbic __i2c_pin,__sda_bit
00d6da 27ee      	clr  r30
00d6db 9a50      	sbi  __i2c_dir,__scl_bit
00d6dc cfc1      	rjmp __i2c_delay1
                 
                 _delay_ms:
00d6dd 9610      	adiw r26,0
00d6de f039      	breq __delay_ms1
                 __delay_ms0:
                +
00d6df ed80     +LDI R24 , LOW ( 0x7D0 )
00d6e0 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
00d6e1 9701     +SBIW R24 , 1
00d6e2 f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00d6e3 95a8      	wdr
00d6e4 9711      	sbiw r26,1
00d6e5 f7c9      	brne __delay_ms0
                 __delay_ms1:
00d6e6 9508      	ret
                 
                 __ANEGF1:
00d6e7 9730      	SBIW R30,0
00d6e8 4060      	SBCI R22,0
00d6e9 4070      	SBCI R23,0
00d6ea f009      	BREQ __ANEGF10
00d6eb 5870      	SUBI R23,0x80
                 __ANEGF10:
00d6ec 9508      	RET
                 
                 __ROUND_REPACK:
00d6ed 2355      	TST  R21
00d6ee f442      	BRPL __REPACK
00d6ef 3850      	CPI  R21,0x80
00d6f0 f411      	BRNE __ROUND_REPACK0
00d6f1 ffe0      	SBRS R30,0
00d6f2 c004      	RJMP __REPACK
                 __ROUND_REPACK0:
00d6f3 9631      	ADIW R30,1
00d6f4 1f69      	ADC  R22,R25
00d6f5 1f79      	ADC  R23,R25
00d6f6 f06b      	BRVS __REPACK1
                 
                 __REPACK:
00d6f7 e850      	LDI  R21,0x80
00d6f8 2757      	EOR  R21,R23
00d6f9 f411      	BRNE __REPACK0
00d6fa 935f      	PUSH R21
00d6fb c0cf      	RJMP __ZERORES
                 __REPACK0:
00d6fc 3f5f      	CPI  R21,0xFF
00d6fd f031      	BREQ __REPACK1
00d6fe 0f66      	LSL  R22
00d6ff 0c00      	LSL  R0
00d700 9557      	ROR  R21
00d701 9567      	ROR  R22
00d702 2f75      	MOV  R23,R21
00d703 9508      	RET
                 __REPACK1:
00d704 935f      	PUSH R21
00d705 2000      	TST  R0
00d706 f00a      	BRMI __REPACK2
00d707 c0cf      	RJMP __MAXRES
                 __REPACK2:
00d708 c0c8      	RJMP __MINRES
                 
                 __UNPACK:
00d709 e850      	LDI  R21,0x80
00d70a 2e19      	MOV  R1,R25
00d70b 2215      	AND  R1,R21
00d70c 0f88      	LSL  R24
00d70d 1f99      	ROL  R25
00d70e 2795      	EOR  R25,R21
00d70f 0f55      	LSL  R21
00d710 9587      	ROR  R24
                 
                 __UNPACK1:
00d711 e850      	LDI  R21,0x80
00d712 2e07      	MOV  R0,R23
00d713 2205      	AND  R0,R21
00d714 0f66      	LSL  R22
00d715 1f77      	ROL  R23
00d716 2775      	EOR  R23,R21
00d717 0f55      	LSL  R21
00d718 9567      	ROR  R22
00d719 9508      	RET
                 
                 __CFD1U:
00d71a 9468      	SET
00d71b c001      	RJMP __CFD1U0
                 __CFD1:
00d71c 94e8      	CLT
                 __CFD1U0:
00d71d 935f      	PUSH R21
00d71e dff2      	RCALL __UNPACK1
00d71f 3870      	CPI  R23,0x80
00d720 f018      	BRLO __CFD10
00d721 3f7f      	CPI  R23,0xFF
00d722 f408      	BRCC __CFD10
00d723 c0a7      	RJMP __ZERORES
                 __CFD10:
00d724 e156      	LDI  R21,22
00d725 1b57      	SUB  R21,R23
00d726 f4aa      	BRPL __CFD11
00d727 9551      	NEG  R21
00d728 3058      	CPI  R21,8
00d729 f40e      	BRTC __CFD19
00d72a 3059      	CPI  R21,9
                 __CFD19:
00d72b f030      	BRLO __CFD17
00d72c efef      	SER  R30
00d72d efff      	SER  R31
00d72e ef6f      	SER  R22
00d72f e77f      	LDI  R23,0x7F
00d730 f977      	BLD  R23,7
00d731 c01a      	RJMP __CFD15
                 __CFD17:
00d732 2777      	CLR  R23
00d733 2355      	TST  R21
00d734 f0b9      	BREQ __CFD15
                 __CFD18:
00d735 0fee      	LSL  R30
00d736 1fff      	ROL  R31
00d737 1f66      	ROL  R22
00d738 1f77      	ROL  R23
00d739 955a      	DEC  R21
00d73a f7d1      	BRNE __CFD18
00d73b c010      	RJMP __CFD15
                 __CFD11:
00d73c 2777      	CLR  R23
                 __CFD12:
00d73d 3058      	CPI  R21,8
00d73e f028      	BRLO __CFD13
00d73f 2fef      	MOV  R30,R31
00d740 2ff6      	MOV  R31,R22
00d741 2f67      	MOV  R22,R23
00d742 5058      	SUBI R21,8
00d743 cff9      	RJMP __CFD12
                 __CFD13:
00d744 2355      	TST  R21
00d745 f031      	BREQ __CFD15
                 __CFD14:
00d746 9576      	LSR  R23
00d747 9567      	ROR  R22
00d748 95f7      	ROR  R31
00d749 95e7      	ROR  R30
00d74a 955a      	DEC  R21
00d74b f7d1      	BRNE __CFD14
                 __CFD15:
00d74c 2000      	TST  R0
00d74d f40a      	BRPL __CFD16
00d74e d167      	RCALL __ANEGD1
                 __CFD16:
00d74f 915f      	POP  R21
00d750 9508      	RET
                 
                 __CDF1U:
00d751 9468      	SET
00d752 c001      	RJMP __CDF1U0
                 __CDF1:
00d753 94e8      	CLT
                 __CDF1U0:
00d754 9730      	SBIW R30,0
00d755 4060      	SBCI R22,0
00d756 4070      	SBCI R23,0
00d757 f0b1      	BREQ __CDF10
00d758 2400      	CLR  R0
00d759 f026      	BRTS __CDF11
00d75a 2377      	TST  R23
00d75b f412      	BRPL __CDF11
00d75c 9400      	COM  R0
00d75d d158      	RCALL __ANEGD1
                 __CDF11:
00d75e 2e17      	MOV  R1,R23
00d75f e17e      	LDI  R23,30
00d760 2011      	TST  R1
                 __CDF12:
00d761 f032      	BRMI __CDF13
00d762 957a      	DEC  R23
00d763 0fee      	LSL  R30
00d764 1fff      	ROL  R31
00d765 1f66      	ROL  R22
00d766 1c11      	ROL  R1
00d767 cff9      	RJMP __CDF12
                 __CDF13:
00d768 2fef      	MOV  R30,R31
00d769 2ff6      	MOV  R31,R22
00d76a 2d61      	MOV  R22,R1
00d76b 935f      	PUSH R21
00d76c df8a      	RCALL __REPACK
00d76d 915f      	POP  R21
                 __CDF10:
00d76e 9508      	RET
                 
                 __SWAPACC:
00d76f 934f      	PUSH R20
00d770 01af      	MOVW R20,R30
00d771 01fd      	MOVW R30,R26
00d772 01da      	MOVW R26,R20
00d773 01ab      	MOVW R20,R22
00d774 01bc      	MOVW R22,R24
00d775 01ca      	MOVW R24,R20
00d776 2d40      	MOV  R20,R0
00d777 2c01      	MOV  R0,R1
00d778 2e14      	MOV  R1,R20
00d779 914f      	POP  R20
00d77a 9508      	RET
                 
                 __UADD12:
00d77b 0fea      	ADD  R30,R26
00d77c 1ffb      	ADC  R31,R27
00d77d 1f68      	ADC  R22,R24
00d77e 9508      	RET
                 
                 __NEGMAN1:
00d77f 95e0      	COM  R30
00d780 95f0      	COM  R31
00d781 9560      	COM  R22
00d782 5fef      	SUBI R30,-1
00d783 4fff      	SBCI R31,-1
00d784 4f6f      	SBCI R22,-1
00d785 9508      	RET
                 
                 __SUBF12:
00d786 935f      	PUSH R21
00d787 df81      	RCALL __UNPACK
00d788 3890      	CPI  R25,0x80
00d789 f171      	BREQ __ADDF129
00d78a e850      	LDI  R21,0x80
00d78b 2615      	EOR  R1,R21
                 
00d78c c004      	RJMP __ADDF120
                 
                 __ADDF12:
00d78d 935f      	PUSH R21
00d78e df7a      	RCALL __UNPACK
00d78f 3890      	CPI  R25,0x80
00d790 f139      	BREQ __ADDF129
                 
                 __ADDF120:
00d791 3870      	CPI  R23,0x80
00d792 f121      	BREQ __ADDF128
                 __ADDF121:
00d793 2f57      	MOV  R21,R23
00d794 1b59      	SUB  R21,R25
00d795 f12b      	BRVS __ADDF1211
00d796 f412      	BRPL __ADDF122
00d797 dfd7      	RCALL __SWAPACC
00d798 cffa      	RJMP __ADDF121
                 __ADDF122:
00d799 3158      	CPI  R21,24
00d79a f018      	BRLO __ADDF123
00d79b 27aa      	CLR  R26
00d79c 27bb      	CLR  R27
00d79d 2788      	CLR  R24
                 __ADDF123:
00d79e 3058      	CPI  R21,8
00d79f f028      	BRLO __ADDF124
00d7a0 2fab      	MOV  R26,R27
00d7a1 2fb8      	MOV  R27,R24
00d7a2 2788      	CLR  R24
00d7a3 5058      	SUBI R21,8
00d7a4 cff9      	RJMP __ADDF123
                 __ADDF124:
00d7a5 2355      	TST  R21
00d7a6 f029      	BREQ __ADDF126
                 __ADDF125:
00d7a7 9586      	LSR  R24
00d7a8 95b7      	ROR  R27
00d7a9 95a7      	ROR  R26
00d7aa 955a      	DEC  R21
00d7ab f7d9      	BRNE __ADDF125
                 __ADDF126:
00d7ac 2d50      	MOV  R21,R0
00d7ad 2551      	EOR  R21,R1
00d7ae f072      	BRMI __ADDF127
00d7af dfcb      	RCALL __UADD12
00d7b0 f438      	BRCC __ADDF129
00d7b1 9567      	ROR  R22
00d7b2 95f7      	ROR  R31
00d7b3 95e7      	ROR  R30
00d7b4 9573      	INC  R23
00d7b5 f413      	BRVC __ADDF129
00d7b6 c020      	RJMP __MAXRES
                 __ADDF128:
00d7b7 dfb7      	RCALL __SWAPACC
                 __ADDF129:
00d7b8 df3e      	RCALL __REPACK
00d7b9 915f      	POP  R21
00d7ba 9508      	RET
                 __ADDF1211:
00d7bb f7d8      	BRCC __ADDF128
00d7bc cffb      	RJMP __ADDF129
                 __ADDF127:
00d7bd 1bea      	SUB  R30,R26
00d7be 0bfb      	SBC  R31,R27
00d7bf 0b68      	SBC  R22,R24
00d7c0 f051      	BREQ __ZERORES
00d7c1 f410      	BRCC __ADDF1210
00d7c2 9400      	COM  R0
00d7c3 dfbb      	RCALL __NEGMAN1
                 __ADDF1210:
00d7c4 2366      	TST  R22
00d7c5 f392      	BRMI __ADDF129
00d7c6 0fee      	LSL  R30
00d7c7 1fff      	ROL  R31
00d7c8 1f66      	ROL  R22
00d7c9 957a      	DEC  R23
00d7ca f7cb      	BRVC __ADDF1210
                 
                 __ZERORES:
00d7cb 27ee      	CLR  R30
00d7cc 27ff      	CLR  R31
00d7cd 2766      	CLR  R22
00d7ce 2777      	CLR  R23
00d7cf 915f      	POP  R21
00d7d0 9508      	RET
                 
                 __MINRES:
00d7d1 efef      	SER  R30
00d7d2 efff      	SER  R31
00d7d3 e76f      	LDI  R22,0x7F
00d7d4 ef7f      	SER  R23
00d7d5 915f      	POP  R21
00d7d6 9508      	RET
                 
                 __MAXRES:
00d7d7 efef      	SER  R30
00d7d8 efff      	SER  R31
00d7d9 e76f      	LDI  R22,0x7F
00d7da e77f      	LDI  R23,0x7F
00d7db 915f      	POP  R21
00d7dc 9508      	RET
                 
                 __MULF12:
00d7dd 935f      	PUSH R21
00d7de df2a      	RCALL __UNPACK
00d7df 3870      	CPI  R23,0x80
00d7e0 f351      	BREQ __ZERORES
00d7e1 3890      	CPI  R25,0x80
00d7e2 f341      	BREQ __ZERORES
00d7e3 2401      	EOR  R0,R1
00d7e4 9408      	SEC
00d7e5 1f79      	ADC  R23,R25
00d7e6 f423      	BRVC __MULF124
00d7e7 f31c      	BRLT __ZERORES
                 __MULF125:
00d7e8 2000      	TST  R0
00d7e9 f33a      	BRMI __MINRES
00d7ea cfec      	RJMP __MAXRES
                 __MULF124:
00d7eb 920f      	PUSH R0
00d7ec 931f      	PUSH R17
00d7ed 932f      	PUSH R18
00d7ee 933f      	PUSH R19
00d7ef 934f      	PUSH R20
00d7f0 2711      	CLR  R17
00d7f1 2722      	CLR  R18
00d7f2 2799      	CLR  R25
00d7f3 9f68      	MUL  R22,R24
00d7f4 01a0      	MOVW R20,R0
00d7f5 9f8f      	MUL  R24,R31
00d7f6 2d30      	MOV  R19,R0
00d7f7 0d41      	ADD  R20,R1
00d7f8 1f59      	ADC  R21,R25
00d7f9 9f6b      	MUL  R22,R27
00d7fa 0d30      	ADD  R19,R0
00d7fb 1d41      	ADC  R20,R1
00d7fc 1f59      	ADC  R21,R25
00d7fd 9f8e      	MUL  R24,R30
00d7fe d027      	RCALL __MULF126
00d7ff 9fbf      	MUL  R27,R31
00d800 d025      	RCALL __MULF126
00d801 9f6a      	MUL  R22,R26
00d802 d023      	RCALL __MULF126
00d803 9fbe      	MUL  R27,R30
00d804 d01d      	RCALL __MULF127
00d805 9faf      	MUL  R26,R31
00d806 d01b      	RCALL __MULF127
00d807 9fae      	MUL  R26,R30
00d808 0d11      	ADD  R17,R1
00d809 1f29      	ADC  R18,R25
00d80a 1f39      	ADC  R19,R25
00d80b 1f49      	ADC  R20,R25
00d80c 1f59      	ADC  R21,R25
00d80d 2fe3      	MOV  R30,R19
00d80e 2ff4      	MOV  R31,R20
00d80f 2f65      	MOV  R22,R21
00d810 2f52      	MOV  R21,R18
00d811 914f      	POP  R20
00d812 913f      	POP  R19
00d813 912f      	POP  R18
00d814 911f      	POP  R17
00d815 900f      	POP  R0
00d816 2366      	TST  R22
00d817 f02a      	BRMI __MULF122
00d818 0f55      	LSL  R21
00d819 1fee      	ROL  R30
00d81a 1fff      	ROL  R31
00d81b 1f66      	ROL  R22
00d81c c002      	RJMP __MULF123
                 __MULF122:
00d81d 9573      	INC  R23
00d81e f24b      	BRVS __MULF125
                 __MULF123:
00d81f decd      	RCALL __ROUND_REPACK
00d820 915f      	POP  R21
00d821 9508      	RET
                 
                 __MULF127:
00d822 0d10      	ADD  R17,R0
00d823 1d21      	ADC  R18,R1
00d824 1f39      	ADC  R19,R25
00d825 c002      	RJMP __MULF128
                 __MULF126:
00d826 0d20      	ADD  R18,R0
00d827 1d31      	ADC  R19,R1
                 __MULF128:
00d828 1f49      	ADC  R20,R25
00d829 1f59      	ADC  R21,R25
00d82a 9508      	RET
                 
                 __DIVF21:
00d82b 935f      	PUSH R21
00d82c dedc      	RCALL __UNPACK
00d82d 3870      	CPI  R23,0x80
00d82e f421      	BRNE __DIVF210
00d82f 2011      	TST  R1
                 __DIVF211:
00d830 f40a      	BRPL __DIVF219
00d831 cf9f      	RJMP __MINRES
                 __DIVF219:
00d832 cfa4      	RJMP __MAXRES
                 __DIVF210:
00d833 3890      	CPI  R25,0x80
00d834 f409      	BRNE __DIVF218
                 __DIVF217:
00d835 cf95      	RJMP __ZERORES
                 __DIVF218:
00d836 2401      	EOR  R0,R1
00d837 9408      	SEC
00d838 0b97      	SBC  R25,R23
00d839 f41b      	BRVC __DIVF216
00d83a f3d4      	BRLT __DIVF217
00d83b 2000      	TST  R0
00d83c cff3      	RJMP __DIVF211
                 __DIVF216:
00d83d 2f79      	MOV  R23,R25
00d83e 931f      	PUSH R17
00d83f 932f      	PUSH R18
00d840 933f      	PUSH R19
00d841 934f      	PUSH R20
00d842 2411      	CLR  R1
00d843 2711      	CLR  R17
00d844 2722      	CLR  R18
00d845 2733      	CLR  R19
00d846 2744      	CLR  R20
00d847 2755      	CLR  R21
00d848 e290      	LDI  R25,32
                 __DIVF212:
00d849 17ae      	CP   R26,R30
00d84a 07bf      	CPC  R27,R31
00d84b 0786      	CPC  R24,R22
00d84c 0741      	CPC  R20,R17
00d84d f030      	BRLO __DIVF213
00d84e 1bae      	SUB  R26,R30
00d84f 0bbf      	SBC  R27,R31
00d850 0b86      	SBC  R24,R22
00d851 0b41      	SBC  R20,R17
00d852 9408      	SEC
00d853 c001      	RJMP __DIVF214
                 __DIVF213:
00d854 9488      	CLC
                 __DIVF214:
00d855 1f55      	ROL  R21
00d856 1f22      	ROL  R18
00d857 1f33      	ROL  R19
00d858 1c11      	ROL  R1
00d859 1faa      	ROL  R26
00d85a 1fbb      	ROL  R27
00d85b 1f88      	ROL  R24
00d85c 1f44      	ROL  R20
00d85d 959a      	DEC  R25
00d85e f751      	BRNE __DIVF212
00d85f 01f9      	MOVW R30,R18
00d860 2d61      	MOV  R22,R1
00d861 914f      	POP  R20
00d862 913f      	POP  R19
00d863 912f      	POP  R18
00d864 911f      	POP  R17
00d865 2366      	TST  R22
00d866 f032      	BRMI __DIVF215
00d867 0f55      	LSL  R21
00d868 1fee      	ROL  R30
00d869 1fff      	ROL  R31
00d86a 1f66      	ROL  R22
00d86b 957a      	DEC  R23
00d86c f243      	BRVS __DIVF217
                 __DIVF215:
00d86d de7f      	RCALL __ROUND_REPACK
00d86e 915f      	POP  R21
00d86f 9508      	RET
                 
                 __CMPF12:
00d870 2399      	TST  R25
00d871 f09a      	BRMI __CMPF120
00d872 2377      	TST  R23
00d873 f042      	BRMI __CMPF121
00d874 1797      	CP   R25,R23
00d875 f048      	BRLO __CMPF122
00d876 f429      	BRNE __CMPF121
00d877 17ae      	CP   R26,R30
00d878 07bf      	CPC  R27,R31
00d879 0786      	CPC  R24,R22
00d87a f020      	BRLO __CMPF122
00d87b f031      	BREQ __CMPF123
                 __CMPF121:
00d87c 9498      	CLZ
00d87d 9488      	CLC
00d87e 9508      	RET
                 __CMPF122:
00d87f 9498      	CLZ
00d880 9408      	SEC
00d881 9508      	RET
                 __CMPF123:
00d882 9418      	SEZ
00d883 9488      	CLC
00d884 9508      	RET
                 __CMPF120:
00d885 2377      	TST  R23
00d886 f7c2      	BRPL __CMPF122
00d887 1797      	CP   R25,R23
00d888 f398      	BRLO __CMPF121
00d889 f7a9      	BRNE __CMPF122
00d88a 17ea      	CP   R30,R26
00d88b 07fb      	CPC  R31,R27
00d88c 0768      	CPC  R22,R24
00d88d f388      	BRLO __CMPF122
00d88e f399      	BREQ __CMPF123
00d88f cfec      	RJMP __CMPF121
                 
                 __ADDW2R15:
00d890 2400      	CLR  R0
00d891 0daf      	ADD  R26,R15
00d892 1db0      	ADC  R27,R0
00d893 9508      	RET
                 
                 __ADDD12:
00d894 0fea      	ADD  R30,R26
00d895 1ffb      	ADC  R31,R27
00d896 1f68      	ADC  R22,R24
00d897 1f79      	ADC  R23,R25
00d898 9508      	RET
                 
                 __ADDD21:
00d899 0fae      	ADD  R26,R30
00d89a 1fbf      	ADC  R27,R31
00d89b 1f86      	ADC  R24,R22
00d89c 1f97      	ADC  R25,R23
00d89d 9508      	RET
                 
                 __SUBD12:
00d89e 1bea      	SUB  R30,R26
00d89f 0bfb      	SBC  R31,R27
00d8a0 0b68      	SBC  R22,R24
00d8a1 0b79      	SBC  R23,R25
00d8a2 9508      	RET
                 
                 __SUBD21:
00d8a3 1bae      	SUB  R26,R30
00d8a4 0bbf      	SBC  R27,R31
00d8a5 0b86      	SBC  R24,R22
00d8a6 0b97      	SBC  R25,R23
00d8a7 9508      	RET
                 
                 __ANDD12:
00d8a8 23ea      	AND  R30,R26
00d8a9 23fb      	AND  R31,R27
00d8aa 2368      	AND  R22,R24
00d8ab 2379      	AND  R23,R25
00d8ac 9508      	RET
                 
                 __ORD12:
00d8ad 2bea      	OR   R30,R26
00d8ae 2bfb      	OR   R31,R27
00d8af 2b68      	OR   R22,R24
00d8b0 2b79      	OR   R23,R25
00d8b1 9508      	RET
                 
                 __ANEGW1:
00d8b2 95f1      	NEG  R31
00d8b3 95e1      	NEG  R30
00d8b4 40f0      	SBCI R31,0
00d8b5 9508      	RET
                 
                 __ANEGD1:
00d8b6 95f0      	COM  R31
00d8b7 9560      	COM  R22
00d8b8 9570      	COM  R23
00d8b9 95e1      	NEG  R30
00d8ba 4fff      	SBCI R31,-1
00d8bb 4f6f      	SBCI R22,-1
00d8bc 4f7f      	SBCI R23,-1
00d8bd 9508      	RET
                 
                 __LSLW12:
00d8be 23ee      	TST  R30
00d8bf 2e0e      	MOV  R0,R30
00d8c0 01fd      	MOVW R30,R26
00d8c1 f021      	BREQ __LSLW12R
                 __LSLW12L:
00d8c2 0fee      	LSL  R30
00d8c3 1fff      	ROL  R31
00d8c4 940a      	DEC  R0
00d8c5 f7e1      	BRNE __LSLW12L
                 __LSLW12R:
00d8c6 9508      	RET
                 
                 __LSLD12:
00d8c7 23ee      	TST  R30
00d8c8 2e0e      	MOV  R0,R30
00d8c9 01fd      	MOVW R30,R26
00d8ca 01bc      	MOVW R22,R24
00d8cb f031      	BREQ __LSLD12R
                 __LSLD12L:
00d8cc 0fee      	LSL  R30
00d8cd 1fff      	ROL  R31
00d8ce 1f66      	ROL  R22
00d8cf 1f77      	ROL  R23
00d8d0 940a      	DEC  R0
00d8d1 f7d1      	BRNE __LSLD12L
                 __LSLD12R:
00d8d2 9508      	RET
                 
                 __LSRD12:
00d8d3 23ee      	TST  R30
00d8d4 2e0e      	MOV  R0,R30
00d8d5 01fd      	MOVW R30,R26
00d8d6 01bc      	MOVW R22,R24
00d8d7 f031      	BREQ __LSRD12R
                 __LSRD12L:
00d8d8 9576      	LSR  R23
00d8d9 9567      	ROR  R22
00d8da 95f7      	ROR  R31
00d8db 95e7      	ROR  R30
00d8dc 940a      	DEC  R0
00d8dd f7d1      	BRNE __LSRD12L
                 __LSRD12R:
00d8de 9508      	RET
                 
                 __LSLW4:
00d8df 0fee      	LSL  R30
00d8e0 1fff      	ROL  R31
                 __LSLW3:
00d8e1 0fee      	LSL  R30
00d8e2 1fff      	ROL  R31
                 __LSLW2:
00d8e3 0fee      	LSL  R30
00d8e4 1fff      	ROL  R31
00d8e5 0fee      	LSL  R30
00d8e6 1fff      	ROL  R31
00d8e7 9508      	RET
                 
                 __ASRW4:
00d8e8 95f5      	ASR  R31
00d8e9 95e7      	ROR  R30
                 __ASRW3:
00d8ea 95f5      	ASR  R31
00d8eb 95e7      	ROR  R30
                 __ASRW2:
00d8ec 95f5      	ASR  R31
00d8ed 95e7      	ROR  R30
00d8ee 95f5      	ASR  R31
00d8ef 95e7      	ROR  R30
00d8f0 9508      	RET
                 
                 __LSRW4:
00d8f1 95f6      	LSR  R31
00d8f2 95e7      	ROR  R30
                 __LSRW3:
00d8f3 95f6      	LSR  R31
00d8f4 95e7      	ROR  R30
                 __LSRW2:
00d8f5 95f6      	LSR  R31
00d8f6 95e7      	ROR  R30
00d8f7 95f6      	LSR  R31
00d8f8 95e7      	ROR  R30
00d8f9 9508      	RET
                 
                 __LSRD1:
00d8fa 9576      	LSR  R23
00d8fb 9567      	ROR  R22
00d8fc 95f7      	ROR  R31
00d8fd 95e7      	ROR  R30
00d8fe 9508      	RET
                 
                 __LSLD1:
00d8ff 0fee      	LSL  R30
00d900 1fff      	ROL  R31
00d901 1f66      	ROL  R22
00d902 1f77      	ROL  R23
00d903 9508      	RET
                 
                 __ASRW8:
00d904 2fef      	MOV  R30,R31
00d905 27ff      	CLR  R31
00d906 fde7      	SBRC R30,7
00d907 efff      	SER  R31
00d908 9508      	RET
                 
                 __LSRD16:
00d909 2fe6      	MOV  R30,R22
00d90a 2ff7      	MOV  R31,R23
00d90b e060      	LDI  R22,0
00d90c e070      	LDI  R23,0
00d90d 9508      	RET
                 
                 __LSLD16:
00d90e 2f6e      	MOV  R22,R30
00d90f 2f7f      	MOV  R23,R31
00d910 e0e0      	LDI  R30,0
00d911 e0f0      	LDI  R31,0
00d912 9508      	RET
                 
                 __CBD1:
00d913 2ffe      	MOV  R31,R30
00d914 0fff      	ADD  R31,R31
00d915 0bff      	SBC  R31,R31
00d916 2f6f      	MOV  R22,R31
00d917 2f7f      	MOV  R23,R31
00d918 9508      	RET
                 
                 __CWD1:
00d919 2f6f      	MOV  R22,R31
00d91a 0f66      	ADD  R22,R22
00d91b 0b66      	SBC  R22,R22
00d91c 2f76      	MOV  R23,R22
00d91d 9508      	RET
                 
                 __COMD1:
00d91e 95e0      	COM  R30
00d91f 95f0      	COM  R31
00d920 9560      	COM  R22
00d921 9570      	COM  R23
00d922 9508      	RET
                 
                 __EQB12:
00d923 17ea      	CP   R30,R26
00d924 e0e1      	LDI  R30,1
00d925 f009      	BREQ __EQB12T
00d926 27ee      	CLR  R30
                 __EQB12T:
00d927 9508      	RET
                 
                 __LNEGB1:
00d928 23ee      	TST  R30
00d929 e0e1      	LDI  R30,1
00d92a f009      	BREQ __LNEGB1F
00d92b 27ee      	CLR  R30
                 __LNEGB1F:
00d92c 9508      	RET
                 
                 __LNEGW1:
00d92d 2bef      	OR   R30,R31
00d92e e0e1      	LDI  R30,1
00d92f f009      	BREQ __LNEGW1F
00d930 e0e0      	LDI  R30,0
                 __LNEGW1F:
00d931 9508      	RET
                 
                 __MULW12U:
00d932 9ffa      	MUL  R31,R26
00d933 2df0      	MOV  R31,R0
00d934 9feb      	MUL  R30,R27
00d935 0df0      	ADD  R31,R0
00d936 9fea      	MUL  R30,R26
00d937 2de0      	MOV  R30,R0
00d938 0df1      	ADD  R31,R1
00d939 9508      	RET
                 
                 __MULD12U:
00d93a 9f7a      	MUL  R23,R26
00d93b 2d70      	MOV  R23,R0
00d93c 9f6b      	MUL  R22,R27
00d93d 0d70      	ADD  R23,R0
00d93e 9ff8      	MUL  R31,R24
00d93f 0d70      	ADD  R23,R0
00d940 9fe9      	MUL  R30,R25
00d941 0d70      	ADD  R23,R0
00d942 9f6a      	MUL  R22,R26
00d943 2d60      	MOV  R22,R0
00d944 0d71      	ADD  R23,R1
00d945 9ffb      	MUL  R31,R27
00d946 0d60      	ADD  R22,R0
00d947 1d71      	ADC  R23,R1
00d948 9fe8      	MUL  R30,R24
00d949 0d60      	ADD  R22,R0
00d94a 1d71      	ADC  R23,R1
00d94b 2788      	CLR  R24
00d94c 9ffa      	MUL  R31,R26
00d94d 2df0      	MOV  R31,R0
00d94e 0d61      	ADD  R22,R1
00d94f 1f78      	ADC  R23,R24
00d950 9feb      	MUL  R30,R27
00d951 0df0      	ADD  R31,R0
00d952 1d61      	ADC  R22,R1
00d953 1f78      	ADC  R23,R24
00d954 9fea      	MUL  R30,R26
00d955 2de0      	MOV  R30,R0
00d956 0df1      	ADD  R31,R1
00d957 1f68      	ADC  R22,R24
00d958 1f78      	ADC  R23,R24
00d959 9508      	RET
                 
                 __MULB1W2U:
00d95a 2f6e      	MOV  R22,R30
00d95b 9f6a      	MUL  R22,R26
00d95c 01f0      	MOVW R30,R0
00d95d 9f6b      	MUL  R22,R27
00d95e 0df0      	ADD  R31,R0
00d95f 9508      	RET
                 
                 __MULW12:
00d960 d081      	RCALL __CHKSIGNW
00d961 dfd0      	RCALL __MULW12U
00d962 f40e      	BRTC __MULW121
00d963 df4e      	RCALL __ANEGW1
                 __MULW121:
00d964 9508      	RET
                 
                 __DIVB21U:
00d965 2400      	CLR  R0
00d966 e098      	LDI  R25,8
                 __DIVB21U1:
00d967 0faa      	LSL  R26
00d968 1c00      	ROL  R0
00d969 1a0e      	SUB  R0,R30
00d96a f410      	BRCC __DIVB21U2
00d96b 0e0e      	ADD  R0,R30
00d96c c001      	RJMP __DIVB21U3
                 __DIVB21U2:
00d96d 60a1      	SBR  R26,1
                 __DIVB21U3:
00d96e 959a      	DEC  R25
00d96f f7b9      	BRNE __DIVB21U1
00d970 2fea      	MOV  R30,R26
00d971 2da0      	MOV  R26,R0
00d972 9508      	RET
                 
                 __DIVB21:
00d973 d062      	RCALL __CHKSIGNB
00d974 dff0      	RCALL __DIVB21U
00d975 f40e      	BRTC __DIVB211
00d976 95e1      	NEG  R30
                 __DIVB211:
00d977 9508      	RET
                 
                 __DIVW21U:
00d978 2400      	CLR  R0
00d979 2411      	CLR  R1
00d97a e190      	LDI  R25,16
                 __DIVW21U1:
00d97b 0faa      	LSL  R26
00d97c 1fbb      	ROL  R27
00d97d 1c00      	ROL  R0
00d97e 1c11      	ROL  R1
00d97f 1a0e      	SUB  R0,R30
00d980 0a1f      	SBC  R1,R31
00d981 f418      	BRCC __DIVW21U2
00d982 0e0e      	ADD  R0,R30
00d983 1e1f      	ADC  R1,R31
00d984 c001      	RJMP __DIVW21U3
                 __DIVW21U2:
00d985 60a1      	SBR  R26,1
                 __DIVW21U3:
00d986 959a      	DEC  R25
00d987 f799      	BRNE __DIVW21U1
00d988 01fd      	MOVW R30,R26
00d989 01d0      	MOVW R26,R0
00d98a 9508      	RET
                 
                 __DIVW21:
00d98b d056      	RCALL __CHKSIGNW
00d98c dfeb      	RCALL __DIVW21U
00d98d f40e      	BRTC __DIVW211
00d98e df23      	RCALL __ANEGW1
                 __DIVW211:
00d98f 9508      	RET
                 
                 __DIVD21U:
00d990 933f      	PUSH R19
00d991 934f      	PUSH R20
00d992 935f      	PUSH R21
00d993 2400      	CLR  R0
00d994 2411      	CLR  R1
00d995 2744      	CLR  R20
00d996 2755      	CLR  R21
00d997 e230      	LDI  R19,32
                 __DIVD21U1:
00d998 0faa      	LSL  R26
00d999 1fbb      	ROL  R27
00d99a 1f88      	ROL  R24
00d99b 1f99      	ROL  R25
00d99c 1c00      	ROL  R0
00d99d 1c11      	ROL  R1
00d99e 1f44      	ROL  R20
00d99f 1f55      	ROL  R21
00d9a0 1a0e      	SUB  R0,R30
00d9a1 0a1f      	SBC  R1,R31
00d9a2 0b46      	SBC  R20,R22
00d9a3 0b57      	SBC  R21,R23
00d9a4 f428      	BRCC __DIVD21U2
00d9a5 0e0e      	ADD  R0,R30
00d9a6 1e1f      	ADC  R1,R31
00d9a7 1f46      	ADC  R20,R22
00d9a8 1f57      	ADC  R21,R23
00d9a9 c001      	RJMP __DIVD21U3
                 __DIVD21U2:
00d9aa 60a1      	SBR  R26,1
                 __DIVD21U3:
00d9ab 953a      	DEC  R19
00d9ac f759      	BRNE __DIVD21U1
00d9ad 01fd      	MOVW R30,R26
00d9ae 01bc      	MOVW R22,R24
00d9af 01d0      	MOVW R26,R0
00d9b0 01ca      	MOVW R24,R20
00d9b1 915f      	POP  R21
00d9b2 914f      	POP  R20
00d9b3 913f      	POP  R19
00d9b4 9508      	RET
                 
                 __MODB21:
00d9b5 94e8      	CLT
00d9b6 ffa7      	SBRS R26,7
00d9b7 c002      	RJMP __MODB211
00d9b8 95a1      	NEG  R26
00d9b9 9468      	SET
                 __MODB211:
00d9ba fde7      	SBRC R30,7
00d9bb 95e1      	NEG  R30
00d9bc dfa8      	RCALL __DIVB21U
00d9bd 2fea      	MOV  R30,R26
00d9be f40e      	BRTC __MODB212
00d9bf 95e1      	NEG  R30
                 __MODB212:
00d9c0 9508      	RET
                 
                 __MODW21U:
00d9c1 dfb6      	RCALL __DIVW21U
00d9c2 01fd      	MOVW R30,R26
00d9c3 9508      	RET
                 
                 __MODW21:
00d9c4 94e8      	CLT
00d9c5 ffb7      	SBRS R27,7
00d9c6 c004      	RJMP __MODW211
00d9c7 95a0      	COM  R26
00d9c8 95b0      	COM  R27
00d9c9 9611      	ADIW R26,1
00d9ca 9468      	SET
                 __MODW211:
00d9cb fdf7      	SBRC R31,7
00d9cc dee5      	RCALL __ANEGW1
00d9cd dfaa      	RCALL __DIVW21U
00d9ce 01fd      	MOVW R30,R26
00d9cf f40e      	BRTC __MODW212
00d9d0 dee1      	RCALL __ANEGW1
                 __MODW212:
00d9d1 9508      	RET
                 
                 __MODD21U:
00d9d2 dfbd      	RCALL __DIVD21U
00d9d3 01fd      	MOVW R30,R26
00d9d4 01bc      	MOVW R22,R24
00d9d5 9508      	RET
                 
                 __CHKSIGNB:
00d9d6 94e8      	CLT
00d9d7 ffe7      	SBRS R30,7
00d9d8 c002      	RJMP __CHKSB1
00d9d9 95e1      	NEG  R30
00d9da 9468      	SET
                 __CHKSB1:
00d9db ffa7      	SBRS R26,7
00d9dc c004      	RJMP __CHKSB2
00d9dd 95a1      	NEG  R26
00d9de f800      	BLD  R0,0
00d9df 9403      	INC  R0
00d9e0 fa00      	BST  R0,0
                 __CHKSB2:
00d9e1 9508      	RET
                 
                 __CHKSIGNW:
00d9e2 94e8      	CLT
00d9e3 fff7      	SBRS R31,7
00d9e4 c002      	RJMP __CHKSW1
00d9e5 decc      	RCALL __ANEGW1
00d9e6 9468      	SET
                 __CHKSW1:
00d9e7 ffb7      	SBRS R27,7
00d9e8 c006      	RJMP __CHKSW2
00d9e9 95a0      	COM  R26
00d9ea 95b0      	COM  R27
00d9eb 9611      	ADIW R26,1
00d9ec f800      	BLD  R0,0
00d9ed 9403      	INC  R0
00d9ee fa00      	BST  R0,0
                 __CHKSW2:
00d9ef 9508      	RET
                 
                 __GETW1P:
00d9f0 91ed      	LD   R30,X+
00d9f1 91fc      	LD   R31,X
00d9f2 9711      	SBIW R26,1
00d9f3 9508      	RET
                 
                 __GETD1P:
00d9f4 91ed      	LD   R30,X+
00d9f5 91fd      	LD   R31,X+
00d9f6 916d      	LD   R22,X+
00d9f7 917c      	LD   R23,X
00d9f8 9713      	SBIW R26,3
00d9f9 9508      	RET
                 
                 __GETD1P_INC:
00d9fa 91ed      	LD   R30,X+
00d9fb 91fd      	LD   R31,X+
00d9fc 916d      	LD   R22,X+
00d9fd 917d      	LD   R23,X+
00d9fe 9508      	RET
                 
                 __PUTDP1:
00d9ff 93ed      	ST   X+,R30
00da00 93fd      	ST   X+,R31
00da01 936d      	ST   X+,R22
00da02 937c      	ST   X,R23
00da03 9508      	RET
                 
                 __PUTDP1_DEC:
00da04 937e      	ST   -X,R23
00da05 936e      	ST   -X,R22
00da06 93fe      	ST   -X,R31
00da07 93ee      	ST   -X,R30
00da08 9508      	RET
                 
                 __GETD1PF:
00da09 bf6b      	OUT  RAMPZ,R22
00da0a 9007      	ELPM R0,Z+
00da0b 9017      	ELPM R1,Z+
00da0c 9167      	ELPM R22,Z+
00da0d 9176      	ELPM R23,Z
00da0e 01f0      	MOVW R30,R0
00da0f 9508      	RET
                 
                 __GETD1S0:
00da10 81e8      	LD   R30,Y
00da11 81f9      	LDD  R31,Y+1
00da12 816a      	LDD  R22,Y+2
00da13 817b      	LDD  R23,Y+3
00da14 9508      	RET
                 
                 __GETD2S0:
00da15 81a8      	LD   R26,Y
00da16 81b9      	LDD  R27,Y+1
00da17 818a      	LDD  R24,Y+2
00da18 819b      	LDD  R25,Y+3
00da19 9508      	RET
                 
                 __PUTD1S0:
00da1a 83e8      	ST   Y,R30
00da1b 83f9      	STD  Y+1,R31
00da1c 836a      	STD  Y+2,R22
00da1d 837b      	STD  Y+3,R23
00da1e 9508      	RET
                 
                 __PUTDZ20:
00da1f 83a0      	ST   Z,R26
00da20 83b1      	STD  Z+1,R27
00da21 8382      	STD  Z+2,R24
00da22 8393      	STD  Z+3,R25
00da23 9508      	RET
                 
                 __CLRD1S0:
00da24 83e8      	ST   Y,R30
00da25 83e9      	STD  Y+1,R30
00da26 83ea      	STD  Y+2,R30
00da27 83eb      	STD  Y+3,R30
00da28 9508      	RET
                 
                 __PUTPARD1:
00da29 937a      	ST   -Y,R23
00da2a 936a      	ST   -Y,R22
00da2b 93fa      	ST   -Y,R31
00da2c 93ea      	ST   -Y,R30
00da2d 9508      	RET
                 
                 __PUTPARD2:
00da2e 939a      	ST   -Y,R25
00da2f 938a      	ST   -Y,R24
00da30 93ba      	ST   -Y,R27
00da31 93aa      	ST   -Y,R26
00da32 9508      	RET
                 
                 __PUTPARL:
00da33 27bb      	CLR  R27
                 __PUTPAR:
00da34 0fea      	ADD  R30,R26
00da35 1ffb      	ADC  R31,R27
                 __PUTPAR0:
00da36 9002      	LD   R0,-Z
00da37 920a      	ST   -Y,R0
00da38 9711      	SBIW R26,1
00da39 f7e1      	BRNE __PUTPAR0
00da3a 9508      	RET
                 
                 __SWAPD12:
00da3b 2e18      	MOV  R1,R24
00da3c 2f86      	MOV  R24,R22
00da3d 2d61      	MOV  R22,R1
00da3e 2e19      	MOV  R1,R25
00da3f 2f97      	MOV  R25,R23
00da40 2d71      	MOV  R23,R1
                 
                 __SWAPW12:
00da41 2e1b      	MOV  R1,R27
00da42 2fbf      	MOV  R27,R31
00da43 2df1      	MOV  R31,R1
                 
                 __SWAPB12:
00da44 2e1a      	MOV  R1,R26
00da45 2fae      	MOV  R26,R30
00da46 2de1      	MOV  R30,R1
00da47 9508      	RET
                 
                 __EEPROMRDD:
00da48 9612      	ADIW R26,2
00da49 d002      	RCALL __EEPROMRDW
00da4a 01bf      	MOVW R22,R30
00da4b 9712      	SBIW R26,2
                 
                 __EEPROMRDW:
00da4c 9611      	ADIW R26,1
00da4d d002      	RCALL __EEPROMRDB
00da4e 2ffe      	MOV  R31,R30
00da4f 9711      	SBIW R26,1
                 
                 __EEPROMRDB:
00da50 99f9      	SBIC EECR,EEWE
00da51 cffe      	RJMP __EEPROMRDB
00da52 93ff      	PUSH R31
00da53 b7ff      	IN   R31,SREG
00da54 94f8      	CLI
00da55 bda1      	OUT  EEARL,R26
00da56 bdb2      	OUT  EEARH,R27
00da57 9af8      	SBI  EECR,EERE
00da58 b5e0      	IN   R30,EEDR
00da59 bfff      	OUT  SREG,R31
00da5a 91ff      	POP  R31
00da5b 9508      	RET
                 
                 __EEPROMWRD:
00da5c d007      	RCALL __EEPROMWRW
00da5d 9612      	ADIW R26,2
00da5e 010f      	MOVW R0,R30
00da5f 01fb      	MOVW R30,R22
00da60 d003      	RCALL __EEPROMWRW
00da61 01f0      	MOVW R30,R0
00da62 9712      	SBIW R26,2
00da63 9508      	RET
                 
                 __EEPROMWRW:
00da64 d007      	RCALL __EEPROMWRB
00da65 9611      	ADIW R26,1
00da66 93ef      	PUSH R30
00da67 2fef      	MOV  R30,R31
00da68 d003      	RCALL __EEPROMWRB
00da69 91ef      	POP  R30
00da6a 9711      	SBIW R26,1
00da6b 9508      	RET
                 
                 __EEPROMWRB:
00da6c 9bf9      	SBIS EECR,EEWE
00da6d c002      	RJMP __EEPROMWRB1
00da6e 95a8      	WDR
00da6f cffc      	RJMP __EEPROMWRB
                 __EEPROMWRB1:
00da70 b79f      	IN   R25,SREG
00da71 94f8      	CLI
00da72 bda1      	OUT  EEARL,R26
00da73 bdb2      	OUT  EEARH,R27
00da74 9af8      	SBI  EECR,EERE
00da75 b580      	IN   R24,EEDR
00da76 17e8      	CP   R30,R24
00da77 f019      	BREQ __EEPROMWRB0
00da78 bde0      	OUT  EEDR,R30
00da79 9afa      	SBI  EECR,EEMWE
00da7a 9af9      	SBI  EECR,EEWE
                 __EEPROMWRB0:
00da7b bf9f      	OUT  SREG,R25
00da7c 9508      	RET
                 
                 __CPD10:
00da7d 9730      	SBIW R30,0
00da7e 4060      	SBCI R22,0
00da7f 4070      	SBCI R23,0
00da80 9508      	RET
                 
                 __CPW02:
00da81 2400      	CLR  R0
00da82 160a      	CP   R0,R26
00da83 060b      	CPC  R0,R27
00da84 9508      	RET
                 
                 __CPD20:
00da85 9710      	SBIW R26,0
00da86 4080      	SBCI R24,0
00da87 4090      	SBCI R25,0
00da88 9508      	RET
                 
                 __CPD02:
00da89 2400      	CLR  R0
00da8a 160a      	CP   R0,R26
00da8b 060b      	CPC  R0,R27
00da8c 0608      	CPC  R0,R24
00da8d 0609      	CPC  R0,R25
00da8e 9508      	RET
                 
                 __CPD12:
00da8f 17ea      	CP   R30,R26
00da90 07fb      	CPC  R31,R27
00da91 0768      	CPC  R22,R24
00da92 0779      	CPC  R23,R25
00da93 9508      	RET
                 
                 __CPD21:
00da94 17ae      	CP   R26,R30
00da95 07bf      	CPC  R27,R31
00da96 0786      	CPC  R24,R22
00da97 0797      	CPC  R25,R23
00da98 9508      	RET
                 
                 __SAVELOCR6:
00da99 935a      	ST   -Y,R21
                 __SAVELOCR5:
00da9a 934a      	ST   -Y,R20
                 __SAVELOCR4:
00da9b 933a      	ST   -Y,R19
                 __SAVELOCR3:
00da9c 932a      	ST   -Y,R18
                 __SAVELOCR2:
00da9d 931a      	ST   -Y,R17
00da9e 930a      	ST   -Y,R16
00da9f 9508      	RET
                 
                 __LOADLOCR6:
00daa0 815d      	LDD  R21,Y+5
                 __LOADLOCR5:
00daa1 814c      	LDD  R20,Y+4
                 __LOADLOCR4:
00daa2 813b      	LDD  R19,Y+3
                 __LOADLOCR3:
00daa3 812a      	LDD  R18,Y+2
                 __LOADLOCR2:
00daa4 8119      	LDD  R17,Y+1
00daa5 8108      	LD   R16,Y
00daa6 9508      	RET
                 
                 __INITLOCB:
                 __INITLOCW:
00daa7 0fac      	ADD  R26,R28
00daa8 1fbd      	ADC  R27,R29
00daa9 bf6b      	OUT  RAMPZ,R22
                 __INITLOC0:
00daaa 9007      	ELPM R0,Z+
00daab 920d      	ST   X+,R0
00daac 958a      	DEC  R24
00daad f7e1      	BRNE __INITLOC0
00daae 9508      	RET
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega2560 register use summary:
r0 : 473 r1 :  67 r2 :   0 r3 :   0 r4 :   1 r5 :   7 r6 :   1 r7 :   4 
r8 :   3 r9 :   0 r10:   3 r11:   0 r12:   3 r13:   0 r14:   0 r15:  14 
r16: 835 r17: 952 r18: 506 r19: 396 r20: 305 r21: 242 r22:1382 r23:1231 
r24: 438 r25: 318 r26:4439 r27:1609 r28: 513 r29:  23 r30:7921 r31:3283 
x  : 570 y  :3970 z  : 624 
Registers used: 29 out of 35 (82.9%)

ATmega2560 instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   : 224 add   : 235 
adiw  : 790 and   :  14 andi  : 195 asr   :   6 bclr  :   0 bld   :   4 
brbc  :   0 brbs  :   0 brcc  :  19 brcs  :   5 break :   0 breq  : 622 
brge  : 185 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  : 129 
brlt  :  68 brmi  :  32 brne  : 867 brpl  : 157 brsh  : 103 brtc  :   9 
brts  :   1 brvc  :   4 brvs  :   4 bset  :   0 bst   :   4 call  :6675 
cbi   :  41 cbr   :   3 clc   :   4 clh   :   0 cli   :   8 cln   :   0 
clr   : 201 cls   :   0 clt   :   9 clv   :   0 clz   :   2 com   :  28 
cp    : 112 cpc   : 554 cpi   :1169 cpse  :   0 dec   :  23 des   :   0 
eicall:  11 eijmp :   0 elpm  :  23 eor   :   7 fmul  :   0 fmuls :   0 
fmulsu:   0 icall :   0 ijmp  :   0 in    : 109 inc   :   7 jmp   : 369 
ld    : 612 ldd   :2862 ldi   :7106 lds   : 682 lpm   :   0 lsl   :  40 
lsr   :  21 mov   : 375 movw  :1183 mul   : 114 muls  :   4 mulsu :   0 
neg   :  11 nop   :   1 or    :  65 ori   :  51 out   : 113 pop   : 394 
push  : 394 rcall : 283 ret   :1006 reti  :   5 rjmp  :1740 rol   :  60 
ror   :  33 sbc   :  39 sbci  : 675 sbi   :  32 sbic  :   5 sbis  :   9 
sbiw  : 263 sbr   :   5 sbrc  :  17 sbrs  :  59 sec   :   6 seh   :   0 
sei   :   6 sen   :   0 ser   :  17 ses   :   0 set   :   8 sev   :   0 
sez   :   1 sleep :   0 spm   :   0 st    :1171 std   : 496 sts   : 506 
sub   :  32 subi  : 730 swap  :   7 tst   : 166 wdr   :  12 
Instructions used: 86 out of 119 (72.3%)

ATmega2560 memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x01b55e  85362  26604 111966  262144  42.7%
[.dseg] 0x000200 0x001ab1      0   3521   3521    8703  40.5%
[.eseg] 0x000000 0x00065d      0   1629   1629    4096  39.8%

Assembly complete, 0 errors, 42 warnings
